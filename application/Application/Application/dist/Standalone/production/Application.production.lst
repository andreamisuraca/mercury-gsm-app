

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 26 21:06:40 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	text171,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	text178,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   218                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   219                           	psect	text181,global,reloc=2,class=CODE,delta=1
   220                           	psect	text182,global,reloc=2,class=CODE,delta=1
   221                           	psect	text183,global,reloc=2,class=CODE,delta=1
   222                           	psect	text184,global,reloc=2,class=CODE,delta=1
   223                           	psect	text185,global,reloc=2,class=CODE,delta=1
   224                           	psect	text186,global,reloc=2,class=CODE,delta=1
   225                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   226                           	psect	text187,global,reloc=2,class=CODE,delta=1
   227                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   228                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   229                           	dabs	1,0x400,48,_BDT
   230                           	dabs	1,0x438,8,_CtrlTrfData
   231                           	dabs	1,0x430,8,_SetupPkt
   232  0000                     
   233                           ; Version 1.45
   234                           ; Generated 16/11/2017 GMT
   235                           ; 
   236                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   237                           ; All rights reserved.
   238                           ; 
   239                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   240                           ; 
   241                           ; Redistribution and use in source and binary forms, with or without modification, are
   242                           ; permitted provided that the following conditions are met:
   243                           ; 
   244                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   245                           ;        conditions and the following disclaimer.
   246                           ; 
   247                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   248                           ;        of conditions and the following disclaimer in the documentation and/or other
   249                           ;        materials provided with the distribution.
   250                           ; 
   251                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   252                           ;        software without specific prior written permission.
   253                           ; 
   254                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   255                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   256                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   257                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   258                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   259                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   260                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   261                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   262                           ; 
   263                           ; 
   264                           ; Code-generator required, PIC18F46J50 Definitions
   265                           ; 
   266                           ; SFR Addresses
   267  0000                     
   268                           	psect	idataBANK0
   269  0067E4                     __pidataBANK0:
   270                           	opt stack 0
   271                           
   272                           ;initializer for isNumberInMemory@currentPosition
   273  0067E4  10                 	db	16
   274                           
   275                           	psect	idataBANK1
   276  0067E2                     __pidataBANK1:
   277                           	opt stack 0
   278                           
   279                           ;initializer for _isMemoryEmpty
   280  0067E2  01                 	db	1
   281                           
   282                           ;initializer for InitGprsNetwork@GprsInitSts
   283  0067E3  01                 	db	1
   284                           
   285                           	psect	idataBANK2
   286  00675A                     __pidataBANK2:
   287                           	opt stack 0
   288                           
   289                           ;initializer for Terminal@EchoOption
   290  00675A  01                 	db	1
   291                           
   292                           ;initializer for _MainSystemTimebaseFlag
   293  00675B  01                 	db	1
   294                           
   295                           ;initializer for _ConnTimeout
   296  00675C  00                 	db	0
   297  00675D  01                 	db	1
   298  00675E  0000               	dw	0
   299  006760  0000               	dw	0
   300  006762  0000               	dw	0
   301  006764  0000               	dw	0
   302  006766  00                 	db	0
   303                           
   304                           	psect	idataBANK3
   305  005BC2                     __pidataBANK3:
   306                           	opt stack 0
   307                           
   308                           ;initializer for ModemEvtParser@F9112
   309  005BC2  43                 	db	67
   310  005BC3  61                 	db	97
   311  005BC4  6C                 	db	108
   312  005BC5  6C                 	db	108
   313  005BC6  20                 	db	32
   314  005BC7  52                 	db	82
   315  005BC8  65                 	db	101
   316  005BC9  61                 	db	97
   317  005BCA  64                 	db	100
   318  005BCB  79                 	db	121
   319                           
   320                           ;initializer for ModemEvtParser@F9110
   321  005BCC  2B                 	db	43
   322  005BCD  43                 	db	67
   323  005BCE  4D                 	db	77
   324  005BCF  54                 	db	84
   325  005BD0  49                 	db	73
   326                           
   327                           ;initializer for ModemEvtParser@F9108
   328  005BD1  2B                 	db	43
   329  005BD2  43                 	db	67
   330  005BD3  4C                 	db	76
   331  005BD4  49                 	db	73
   332  005BD5  50                 	db	80
   333                           
   334                           ;initializer for ModemEvtParser@F9106
   335  005BD6  52                 	db	82
   336  005BD7  49                 	db	73
   337  005BD8  4E                 	db	78
   338  005BD9  47                 	db	71
   339                           
   340                           ;initializer for MyApp_Task@F9034
   341  005BDA  63                 	db	99
   342  005BDB  61                 	db	97
   343  005BDC  74                 	db	116
   344                           
   345                           ;initializer for triggerRelay@F9023
   346  005BDD  50                 	db	80
   347  005BDE  00                 	db	0
   348                           
   349                           ;initializer for Term_MainSm@TermDelay
   350  005BDF  01                 	db	1
   351  005BE0  01                 	db	1
   352  005BE1  0000               	dw	0
   353  005BE3  0000               	dw	0
   354  005BE5  0000               	dw	0
   355  005BE7  0000               	dw	0
   356  005BE9  00                 	db	0
   357                           
   358                           ;initializer for _ConnWait
   359  005BEA  00                 	db	0
   360  005BEB  01                 	db	1
   361  005BEC  0000               	dw	0
   362  005BEE  0000               	dw	0
   363  005BF0  0000               	dw	0
   364  005BF2  0000               	dw	0
   365  005BF4  00                 	db	0
   366                           
   367                           ;initializer for SendSmsSm@SwTimer
   368  005BF5  01                 	db	1
   369  005BF6  01                 	db	1
   370  005BF7  0000               	dw	0
   371  005BF9  0000               	dw	0
   372  005BFB  0000               	dw	0
   373  005BFD  0000               	dw	0
   374  005BFF  00                 	db	0
   375                           
   376                           ;initializer for CheckModem@Timeout
   377  005C00  00                 	db	0
   378  005C01  01                 	db	1
   379  005C02  0000               	dw	0
   380  005C04  0000               	dw	0
   381  005C06  0000               	dw	0
   382  005C08  0000               	dw	0
   383  005C0A  00                 	db	0
   384                           
   385                           	psect	idataBANK4
   386  006767                     __pidataBANK4:
   387                           	opt stack 0
   388                           
   389                           ;initializer for MyApp_Task@smsPhoneNumber
   390  006767  2B                 	db	43
   391  006768  33                 	db	51
   392  006769  39                 	db	57
   393  00676A  30                 	db	48
   394  00676B  31                 	db	49
   395  00676C  32                 	db	50
   396  00676D  33                 	db	51
   397  00676E  34                 	db	52
   398  00676F  35                 	db	53
   399  006770  36                 	db	54
   400  006771  37                 	db	55
   401  006772  38                 	db	56
   402  006773  39                 	db	57
   403                           
   404                           	psect	idataBANK5
   405  00599C                     __pidataBANK5:
   406                           	opt stack 0
   407                           
   408                           ;initializer for _TaskTable
   409  00599C  C0                 	db	low _Mdm_DrvMainFn
   410  00599D  67                 	db	high _Mdm_DrvMainFn
   411  00599E  00                 	db	0
   412  00599F  0000               	dw	0
   413  0059A1  000A               	dw	10
   414  0059A3  00                 	db	0
   415  0059A4  54                 	db	low _I2cSlv_MainTask
   416  0059A5  57                 	db	high _I2cSlv_MainTask
   417  0059A6  00                 	db	0
   418  0059A7  0000               	dw	0
   419  0059A9  0001               	dw	1
   420  0059AB  00                 	db	0
   421  0059AC  EC                 	db	low _Mdm_MainTask
   422  0059AD  59                 	db	high _Mdm_MainTask
   423  0059AE  00                 	db	0
   424  0059AF  0000               	dw	0
   425  0059B1  0001               	dw	1
   426  0059B3  00                 	db	0
   427  0059B4  9C                 	db	low _MdmHttp_MainTask
   428  0059B5  5C                 	db	high _MdmHttp_MainTask
   429  0059B6  00                 	db	0
   430  0059B7  0000               	dw	0
   431  0059B9  0001               	dw	1
   432  0059BB  00                 	db	0
   433  0059BC  7A                 	db	low _UsbDevice_MainTask
   434  0059BD  63                 	db	high _UsbDevice_MainTask
   435  0059BE  00                 	db	0
   436  0059BF  0000               	dw	0
   437  0059C1  0001               	dw	1
   438  0059C3  00                 	db	0
   439  0059C4  0A                 	db	low _Wdg_MainTask
   440  0059C5  64                 	db	high _Wdg_MainTask
   441  0059C6  00                 	db	0
   442  0059C7  0000               	dw	0
   443  0059C9  0064               	dw	100
   444  0059CB  00                 	db	0
   445  0059CC  74                 	db	low _Led_MainTask
   446  0059CD  3B                 	db	high _Led_MainTask
   447  0059CE  00                 	db	0
   448  0059CF  0000               	dw	0
   449  0059D1  0032               	dw	50
   450  0059D3  00                 	db	0
   451  0059D4  F6                 	db	low _Rtcm_MainTask
   452  0059D5  4C                 	db	high _Rtcm_MainTask
   453  0059D6  00                 	db	0
   454  0059D7  0000               	dw	0
   455  0059D9  0064               	dw	100
   456  0059DB  00                 	db	0
   457  0059DC  C4                 	db	low _Term_MainTask
   458  0059DD  65                 	db	high _Term_MainTask
   459  0059DE  00                 	db	0
   460  0059DF  0000               	dw	0
   461  0059E1  0001               	dw	1
   462  0059E3  00                 	db	0
   463  0059E4  EE                 	db	low _MyApp_Task
   464  0059E5  15                 	db	high _MyApp_Task
   465  0059E6  00                 	db	0
   466  0059E7  0000               	dw	0
   467  0059E9  0064               	dw	100
   468  0059EB  00                 	db	0
   469                           
   470                           	psect	mediumconst
   471  00FC10                     __pmediumconst:
   472                           	opt stack 0
   473  00FC10  00                 	db	0
   474  00FC11                     MyApp_Task@F9029:
   475                           	opt stack 0
   476  00FC11  00                 	db	0
   477  00FC12  00                 	db	0
   478  00FC13  00                 	db	0
   479  00FC14  00                 	db	0
   480  00FC15  00                 	db	0
   481  00FC16  00                 	db	0
   482  00FC17  00                 	db	0
   483  00FC18  00                 	db	0
   484  00FC19  00                 	db	0
   485  00FC1A  00                 	db	0
   486  00FC1B  00                 	db	0
   487  00FC1C  00                 	db	0
   488  00FC1D  00                 	db	0
   489  00FC1E                     __end_ofMyApp_Task@F9029:
   490                           	opt stack 0
   491  00FC1E                     _USB_SD_Ptr:
   492                           	opt stack 0
   493  00FC1E  5B                 	db	low _sd000
   494  00FC1F  FE                 	db	high _sd000
   495  00FC20  14                 	db	low _sd001
   496  00FC21  FE                 	db	high _sd001
   497  00FC22  EE                 	db	low _sd002
   498  00FC23  FD                 	db	high _sd002
   499  00FC24                     __end_of_USB_SD_Ptr:
   500                           	opt stack 0
   501  00FC24                     MyApp_Task@F9032:
   502                           	opt stack 0
   503  00FC24  4E                 	db	78
   504  00FC25  55                 	db	85
   505  00FC26  4D                 	db	77
   506  00FC27  2B                 	db	43
   507  00FC28                     __end_ofMyApp_Task@F9032:
   508                           	opt stack 0
   509  00FC28                     parseCommand@F9017:
   510                           	opt stack 0
   511  00FC28  44                 	db	68
   512  00FC29  45                 	db	69
   513  00FC2A  4C                 	db	76
   514  00FC2B                     __end_ofparseCommand@F9017:
   515                           	opt stack 0
   516  00FC2B                     parseCommand@F9015:
   517                           	opt stack 0
   518  00FC2B  41                 	db	65
   519  00FC2C  44                 	db	68
   520  00FC2D  44                 	db	68
   521  00FC2E                     __end_ofparseCommand@F9015:
   522                           	opt stack 0
   523  00FC2E                     _USB_CD_Ptr:
   524                           	opt stack 0
   525  00FC2E  AB                 	db	low _configDescriptor1
   526  00FC2F  FD                 	db	high _configDescriptor1
   527  00FC30                     __end_of_USB_CD_Ptr:
   528                           	opt stack 0
   529  00FC30                     _TaskNumber:
   530                           	opt stack 0
   531  00FC30  000A               	dw	10
   532  00FC32                     __end_of_TaskNumber:
   533                           	opt stack 0
   534  00FC32                     _MsgFormat:
   535                           	opt stack 0
   536  00FC32  48                 	db	72
   537  00FC33  6F                 	db	111
   538  00FC34  73                 	db	115
   539  00FC35  74                 	db	116
   540  00FC36  20                 	db	32
   541  00FC37  6D                 	db	109
   542  00FC38  65                 	db	101
   543  00FC39  73                 	db	115
   544  00FC3A  73                 	db	115
   545  00FC3B  61                 	db	97
   546  00FC3C  67                 	db	103
   547  00FC3D  65                 	db	101
   548  00FC3E  20                 	db	32
   549  00FC3F  66                 	db	102
   550  00FC40  6F                 	db	111
   551  00FC41  72                 	db	114
   552  00FC42  6D                 	db	109
   553  00FC43  61                 	db	97
   554  00FC44  74                 	db	116
   555  00FC45  3A                 	db	58
   556  00FC46  20                 	db	32
   557  00FC47  0D                 	db	13
   558  00FC48  0A                 	db	10
   559  00FC49  5B                 	db	91
   560  00FC4A  6F                 	db	111
   561  00FC4B  70                 	db	112
   562  00FC4C  5F                 	db	95
   563  00FC4D  74                 	db	116
   564  00FC4E  79                 	db	121
   565  00FC4F  70                 	db	112
   566  00FC50  65                 	db	101
   567  00FC51  5D                 	db	93
   568  00FC52  3A                 	db	58
   569  00FC53  5B                 	db	91
   570  00FC54  6F                 	db	111
   571  00FC55  70                 	db	112
   572  00FC56  5D                 	db	93
   573  00FC57  3A                 	db	58
   574  00FC58  5B                 	db	91
   575  00FC59  6C                 	db	108
   576  00FC5A  65                 	db	101
   577  00FC5B  6E                 	db	110
   578  00FC5C  5D                 	db	93
   579  00FC5D  3A                 	db	58
   580  00FC5E  5B                 	db	91
   581  00FC5F  61                 	db	97
   582  00FC60  64                 	db	100
   583  00FC61  64                 	db	100
   584  00FC62  72                 	db	114
   585  00FC63  5D                 	db	93
   586  00FC64  3A                 	db	58
   587  00FC65  5B                 	db	91
   588  00FC66  70                 	db	112
   589  00FC67  61                 	db	97
   590  00FC68  79                 	db	121
   591  00FC69  6C                 	db	108
   592  00FC6A  6F                 	db	111
   593  00FC6B  61                 	db	97
   594  00FC6C  64                 	db	100
   595  00FC6D  5D                 	db	93
   596  00FC6E  0D                 	db	13
   597  00FC6F  0A                 	db	10
   598  00FC70  0D                 	db	13
   599  00FC71  0A                 	db	10
   600  00FC72  5B                 	db	91
   601  00FC73  6F                 	db	111
   602  00FC74  70                 	db	112
   603  00FC75  5F                 	db	95
   604  00FC76  74                 	db	116
   605  00FC77  79                 	db	121
   606  00FC78  70                 	db	112
   607  00FC79  65                 	db	101
   608  00FC7A  5D                 	db	93
   609  00FC7B  20                 	db	32
   610  00FC7C  3D                 	db	61
   611  00FC7D  20                 	db	32
   612  00FC7E  53                 	db	83
   613  00FC7F  4F                 	db	79
   614  00FC80  2C                 	db	44
   615  00FC81  53                 	db	83
   616  00FC82  42                 	db	66
   617  00FC83  0D                 	db	13
   618  00FC84  0A                 	db	10
   619  00FC85  5B                 	db	91
   620  00FC86  6F                 	db	111
   621  00FC87  70                 	db	112
   622  00FC88  5D                 	db	93
   623  00FC89  20                 	db	32
   624  00FC8A  3D                 	db	61
   625  00FC8B  20                 	db	32
   626  00FC8C  52                 	db	82
   627  00FC8D  3A                 	db	58
   628  00FC8E  20                 	db	32
   629  00FC8F  72                 	db	114
   630  00FC90  65                 	db	101
   631  00FC91  61                 	db	97
   632  00FC92  64                 	db	100
   633  00FC93  2C                 	db	44
   634  00FC94  57                 	db	87
   635  00FC95  3A                 	db	58
   636  00FC96  20                 	db	32
   637  00FC97  77                 	db	119
   638  00FC98  72                 	db	114
   639  00FC99  69                 	db	105
   640  00FC9A  74                 	db	116
   641  00FC9B  65                 	db	101
   642  00FC9C  0D                 	db	13
   643  00FC9D  0A                 	db	10
   644  00FC9E  5B                 	db	91
   645  00FC9F  6C                 	db	108
   646  00FCA0  65                 	db	101
   647  00FCA1  6E                 	db	110
   648  00FCA2  5D                 	db	93
   649  00FCA3  20                 	db	32
   650  00FCA4  3D                 	db	61
   651  00FCA5  20                 	db	32
   652  00FCA6  32                 	db	50
   653  00FCA7  20                 	db	32
   654  00FCA8  62                 	db	98
   655  00FCA9  79                 	db	121
   656  00FCAA  74                 	db	116
   657  00FCAB  65                 	db	101
   658  00FCAC  20                 	db	32
   659  00FCAD  41                 	db	65
   660  00FCAE  53                 	db	83
   661  00FCAF  43                 	db	67
   662  00FCB0  49                 	db	73
   663  00FCB1  49                 	db	73
   664  00FCB2  0D                 	db	13
   665  00FCB3  0A                 	db	10
   666  00FCB4  5B                 	db	91
   667  00FCB5  61                 	db	97
   668  00FCB6  64                 	db	100
   669  00FCB7  64                 	db	100
   670  00FCB8  72                 	db	114
   671  00FCB9  5D                 	db	93
   672  00FCBA  20                 	db	32
   673  00FCBB  3D                 	db	61
   674  00FCBC  20                 	db	32
   675  00FCBD  32                 	db	50
   676  00FCBE  20                 	db	32
   677  00FCBF  62                 	db	98
   678  00FCC0  79                 	db	121
   679  00FCC1  74                 	db	116
   680  00FCC2  65                 	db	101
   681  00FCC3  20                 	db	32
   682  00FCC4  41                 	db	65
   683  00FCC5  53                 	db	83
   684  00FCC6  43                 	db	67
   685  00FCC7  49                 	db	73
   686  00FCC8  49                 	db	73
   687  00FCC9  0D                 	db	13
   688  00FCCA  0A                 	db	10
   689  00FCCB  5B                 	db	91
   690  00FCCC  70                 	db	112
   691  00FCCD  61                 	db	97
   692  00FCCE  79                 	db	121
   693  00FCCF  6C                 	db	108
   694  00FCD0  6F                 	db	111
   695  00FCD1  61                 	db	97
   696  00FCD2  64                 	db	100
   697  00FCD3  5D                 	db	93
   698  00FCD4  20                 	db	32
   699  00FCD5  3D                 	db	61
   700  00FCD6  20                 	db	32
   701  00FCD7  6D                 	db	109
   702  00FCD8  61                 	db	97
   703  00FCD9  78                 	db	120
   704  00FCDA  20                 	db	32
   705  00FCDB  32                 	db	50
   706  00FCDC  30                 	db	48
   707  00FCDD  20                 	db	32
   708  00FCDE  62                 	db	98
   709  00FCDF  79                 	db	121
   710  00FCE0  74                 	db	116
   711  00FCE1  65                 	db	101
   712  00FCE2  20                 	db	32
   713  00FCE3  41                 	db	65
   714  00FCE4  53                 	db	83
   715  00FCE5  43                 	db	67
   716  00FCE6  49                 	db	73
   717  00FCE7  49                 	db	73
   718  00FCE8  0D                 	db	13
   719  00FCE9  0A                 	db	10
   720  00FCEA  0D                 	db	13
   721  00FCEB  0A                 	db	10
   722  00FCEC  54                 	db	84
   723  00FCED  65                 	db	101
   724  00FCEE  72                 	db	114
   725  00FCEF  6D                 	db	109
   726  00FCF0  69                 	db	105
   727  00FCF1  6E                 	db	110
   728  00FCF2  61                 	db	97
   729  00FCF3  6C                 	db	108
   730  00FCF4  20                 	db	32
   731  00FCF5  4D                 	db	77
   732  00FCF6  6F                 	db	111
   733  00FCF7  64                 	db	100
   734  00FCF8  65                 	db	101
   735  00FCF9  3A                 	db	58
   736  00FCFA  20                 	db	32
   737  00FCFB  43                 	db	67
   738  00FCFC  4F                 	db	79
   739  00FCFD  4D                 	db	77
   740  00FCFE  4D                 	db	77
   741  00FCFF  41                 	db	65
   742  00FD00  4E                 	db	78
   743  00FD01  44                 	db	68
   744  00FD02  20                 	db	32
   745  00FD03  4D                 	db	77
   746  00FD04  4F                 	db	79
   747  00FD05  44                 	db	68
   748  00FD06  45                 	db	69
   749  00FD07  0D                 	db	13
   750  00FD08  0A                 	db	10
   751  00FD09  4D                 	db	77
   752  00FD0A  6F                 	db	111
   753  00FD0B  64                 	db	100
   754  00FD0C  65                 	db	101
   755  00FD0D  6D                 	db	109
   756  00FD0E  20                 	db	32
   757  00FD0F  54                 	db	84
   758  00FD10  79                 	db	121
   759  00FD11  70                 	db	112
   760  00FD12  65                 	db	101
   761  00FD13  3A                 	db	58
   762  00FD14  20                 	db	32
   763  00FD15  47                 	db	71
   764  00FD16  53                 	db	83
   765  00FD17  4D                 	db	77
   766  00FD18  2F                 	db	47
   767  00FD19  47                 	db	71
   768  00FD1A  50                 	db	80
   769  00FD1B  52                 	db	82
   770  00FD1C  53                 	db	83
   771  00FD1D  0D                 	db	13
   772  00FD1E  0A                 	db	10
   773  00FD1F  0D                 	db	13
   774  00FD20  0A                 	db	10
   775  00FD21  00                 	db	0
   776  00FD22                     __end_of_MsgFormat:
   777                           	opt stack 0
   778  00FD22                     _Welcome:
   779                           	opt stack 0
   780  00FD22  2A                 	db	42
   781  00FD23  2A                 	db	42
   782  00FD24  2A                 	db	42
   783  00FD25  2A                 	db	42
   784  00FD26  2A                 	db	42
   785  00FD27  2A                 	db	42
   786  00FD28  2A                 	db	42
   787  00FD29  2A                 	db	42
   788  00FD2A  2A                 	db	42
   789  00FD2B  2A                 	db	42
   790  00FD2C  2A                 	db	42
   791  00FD2D  2A                 	db	42
   792  00FD2E  2A                 	db	42
   793  00FD2F  2A                 	db	42
   794  00FD30  2A                 	db	42
   795  00FD31  2A                 	db	42
   796  00FD32  2A                 	db	42
   797  00FD33  2A                 	db	42
   798  00FD34  2A                 	db	42
   799  00FD35  2A                 	db	42
   800  00FD36  2A                 	db	42
   801  00FD37  2A                 	db	42
   802  00FD38  2A                 	db	42
   803  00FD39  2A                 	db	42
   804  00FD3A  2A                 	db	42
   805  00FD3B  2A                 	db	42
   806  00FD3C  2A                 	db	42
   807  00FD3D  2A                 	db	42
   808  00FD3E  2A                 	db	42
   809  00FD3F  2A                 	db	42
   810  00FD40  2A                 	db	42
   811  00FD41  2A                 	db	42
   812  00FD42  2A                 	db	42
   813  00FD43  2A                 	db	42
   814  00FD44  2A                 	db	42
   815  00FD45  2A                 	db	42
   816  00FD46  2A                 	db	42
   817  00FD47  2A                 	db	42
   818  00FD48  2A                 	db	42
   819  00FD49  2A                 	db	42
   820  00FD4A  2A                 	db	42
   821  00FD4B  2A                 	db	42
   822  00FD4C  2A                 	db	42
   823  00FD4D  2A                 	db	42
   824  00FD4E  2A                 	db	42
   825  00FD4F  2A                 	db	42
   826  00FD50  2A                 	db	42
   827  00FD51  2A                 	db	42
   828  00FD52  2A                 	db	42
   829  00FD53  0D                 	db	13
   830  00FD54  0A                 	db	10
   831  00FD55  20                 	db	32
   832  00FD56  20                 	db	32
   833  00FD57  20                 	db	32
   834  00FD58  20                 	db	32
   835  00FD59  20                 	db	32
   836  00FD5A  20                 	db	32
   837  00FD5B  20                 	db	32
   838  00FD5C  20                 	db	32
   839  00FD5D  20                 	db	32
   840  00FD5E  20                 	db	32
   841  00FD5F  20                 	db	32
   842  00FD60  20                 	db	32
   843  00FD61  20                 	db	32
   844  00FD62  20                 	db	32
   845  00FD63  20                 	db	32
   846  00FD64  20                 	db	32
   847  00FD65  20                 	db	32
   848  00FD66  20                 	db	32
   849  00FD67  4D                 	db	77
   850  00FD68  45                 	db	69
   851  00FD69  52                 	db	82
   852  00FD6A  43                 	db	67
   853  00FD6B  55                 	db	85
   854  00FD6C  52                 	db	82
   855  00FD6D  59                 	db	89
   856  00FD6E  20                 	db	32
   857  00FD6F  53                 	db	83
   858  00FD70  59                 	db	89
   859  00FD71  53                 	db	83
   860  00FD72  54                 	db	84
   861  00FD73  45                 	db	69
   862  00FD74  4D                 	db	77
   863  00FD75  0D                 	db	13
   864  00FD76  0A                 	db	10
   865  00FD77  2A                 	db	42
   866  00FD78  2A                 	db	42
   867  00FD79  2A                 	db	42
   868  00FD7A  2A                 	db	42
   869  00FD7B  2A                 	db	42
   870  00FD7C  2A                 	db	42
   871  00FD7D  2A                 	db	42
   872  00FD7E  2A                 	db	42
   873  00FD7F  2A                 	db	42
   874  00FD80  2A                 	db	42
   875  00FD81  2A                 	db	42
   876  00FD82  2A                 	db	42
   877  00FD83  2A                 	db	42
   878  00FD84  2A                 	db	42
   879  00FD85  2A                 	db	42
   880  00FD86  2A                 	db	42
   881  00FD87  2A                 	db	42
   882  00FD88  2A                 	db	42
   883  00FD89  2A                 	db	42
   884  00FD8A  2A                 	db	42
   885  00FD8B  2A                 	db	42
   886  00FD8C  2A                 	db	42
   887  00FD8D  2A                 	db	42
   888  00FD8E  2A                 	db	42
   889  00FD8F  2A                 	db	42
   890  00FD90  2A                 	db	42
   891  00FD91  2A                 	db	42
   892  00FD92  2A                 	db	42
   893  00FD93  2A                 	db	42
   894  00FD94  2A                 	db	42
   895  00FD95  2A                 	db	42
   896  00FD96  2A                 	db	42
   897  00FD97  2A                 	db	42
   898  00FD98  2A                 	db	42
   899  00FD99  2A                 	db	42
   900  00FD9A  2A                 	db	42
   901  00FD9B  2A                 	db	42
   902  00FD9C  2A                 	db	42
   903  00FD9D  2A                 	db	42
   904  00FD9E  2A                 	db	42
   905  00FD9F  2A                 	db	42
   906  00FDA0  2A                 	db	42
   907  00FDA1  2A                 	db	42
   908  00FDA2  2A                 	db	42
   909  00FDA3  2A                 	db	42
   910  00FDA4  2A                 	db	42
   911  00FDA5  2A                 	db	42
   912  00FDA6  2A                 	db	42
   913  00FDA7  2A                 	db	42
   914  00FDA8  0D                 	db	13
   915  00FDA9  0A                 	db	10
   916  00FDAA  00                 	db	0
   917  00FDAB                     __end_of_Welcome:
   918                           	opt stack 0
   919  00FDAB                     _configDescriptor1:
   920                           	opt stack 0
   921  00FDAB  09                 	db	9
   922  00FDAC  02                 	db	2
   923  00FDAD  43                 	db	67
   924  00FDAE  00                 	db	0
   925  00FDAF  02                 	db	2
   926  00FDB0  01                 	db	1
   927  00FDB1  00                 	db	0
   928  00FDB2  C0                 	db	192
   929  00FDB3  32                 	db	50
   930  00FDB4  09                 	db	9
   931  00FDB5  04                 	db	4
   932  00FDB6  00                 	db	0
   933  00FDB7  00                 	db	0
   934  00FDB8  01                 	db	1
   935  00FDB9  02                 	db	2
   936  00FDBA  02                 	db	2
   937  00FDBB  01                 	db	1
   938  00FDBC  00                 	db	0
   939  00FDBD  05                 	db	5
   940  00FDBE  24                 	db	36
   941  00FDBF  00                 	db	0
   942  00FDC0  10                 	db	16
   943  00FDC1  01                 	db	1
   944  00FDC2  04                 	db	4
   945  00FDC3  24                 	db	36
   946  00FDC4  02                 	db	2
   947  00FDC5  02                 	db	2
   948  00FDC6  05                 	db	5
   949  00FDC7  24                 	db	36
   950  00FDC8  06                 	db	6
   951  00FDC9  00                 	db	0
   952  00FDCA  01                 	db	1
   953  00FDCB  05                 	db	5
   954  00FDCC  24                 	db	36
   955  00FDCD  01                 	db	1
   956  00FDCE  00                 	db	0
   957  00FDCF  01                 	db	1
   958  00FDD0  07                 	db	7
   959  00FDD1  05                 	db	5
   960  00FDD2  81                 	db	129
   961  00FDD3  03                 	db	3
   962  00FDD4  08                 	db	8
   963  00FDD5  00                 	db	0
   964  00FDD6  02                 	db	2
   965  00FDD7  09                 	db	9
   966  00FDD8  04                 	db	4
   967  00FDD9  01                 	db	1
   968  00FDDA  00                 	db	0
   969  00FDDB  02                 	db	2
   970  00FDDC  0A                 	db	10
   971  00FDDD  00                 	db	0
   972  00FDDE  00                 	db	0
   973  00FDDF  00                 	db	0
   974  00FDE0  07                 	db	7
   975  00FDE1  05                 	db	5
   976  00FDE2  02                 	db	2
   977  00FDE3  02                 	db	2
   978  00FDE4  40                 	db	64
   979  00FDE5  00                 	db	0
   980  00FDE6  00                 	db	0
   981  00FDE7  07                 	db	7
   982  00FDE8  05                 	db	5
   983  00FDE9  82                 	db	130
   984  00FDEA  02                 	db	2
   985  00FDEB  40                 	db	64
   986  00FDEC  00                 	db	0
   987  00FDED  00                 	db	0
   988  00FDEE                     __end_of_configDescriptor1:
   989                           	opt stack 0
   990  00FDEE                     _sd002:
   991                           	opt stack 0
   992  00FDEE  26                 	db	38
   993  00FDEF  03                 	db	3
   994  00FDF0  0054               	dw	84
   995  00FDF2  0065               	dw	101
   996  00FDF4  0072               	dw	114
   997  00FDF6  006D               	dw	109
   998  00FDF8  0069               	dw	105
   999  00FDFA  006E               	dw	110
  1000  00FDFC  0061               	dw	97
  1001  00FDFE  006C               	dw	108
  1002  00FE00  0020               	dw	32
  1003  00FE02  0049               	dw	73
  1004  00FE04  006E               	dw	110
  1005  00FE06  0074               	dw	116
  1006  00FE08  0065               	dw	101
  1007  00FE0A  0072               	dw	114
  1008  00FE0C  0066               	dw	102
  1009  00FE0E  0061               	dw	97
  1010  00FE10  0063               	dw	99
  1011  00FE12  0065               	dw	101
  1012  00FE14                     __end_of_sd002:
  1013                           	opt stack 0
  1014  00FE14                     _sd001:
  1015                           	opt stack 0
  1016  00FE14  1E                 	db	30
  1017  00FE15  03                 	db	3
  1018  00FE16  004D               	dw	77
  1019  00FE18  0065               	dw	101
  1020  00FE1A  0072               	dw	114
  1021  00FE1C  0063               	dw	99
  1022  00FE1E  0075               	dw	117
  1023  00FE20  0072               	dw	114
  1024  00FE22  0079               	dw	121
  1025  00FE24  0020               	dw	32
  1026  00FE26  0053               	dw	83
  1027  00FE28  0079               	dw	121
  1028  00FE2A  0073               	dw	115
  1029  00FE2C  0074               	dw	116
  1030  00FE2E  0065               	dw	101
  1031  00FE30  006D               	dw	109
  1032  00FE32                     __end_of_sd001:
  1033                           	opt stack 0
  1034  00FE32                     _MsgReady:
  1035                           	opt stack 0
  1036  00FE32  0D                 	db	13
  1037  00FE33  0A                 	db	10
  1038  00FE34  53                 	db	83
  1039  00FE35  79                 	db	121
  1040  00FE36  73                 	db	115
  1041  00FE37  74                 	db	116
  1042  00FE38  65                 	db	101
  1043  00FE39  6D                 	db	109
  1044  00FE3A  20                 	db	32
  1045  00FE3B  52                 	db	82
  1046  00FE3C  65                 	db	101
  1047  00FE3D  61                 	db	97
  1048  00FE3E  64                 	db	100
  1049  00FE3F  79                 	db	121
  1050  00FE40  2E                 	db	46
  1051  00FE41  2E                 	db	46
  1052  00FE42  2E                 	db	46
  1053  00FE43  20                 	db	32
  1054  00FE44  0D                 	db	13
  1055  00FE45  0A                 	db	10
  1056  00FE46  0D                 	db	13
  1057  00FE47  0A                 	db	10
  1058  00FE48  00                 	db	0
  1059  00FE49                     __end_of_MsgReady:
  1060                           	opt stack 0
  1061  00FE49                     _device_dsc:
  1062                           	opt stack 0
  1063  00FE49  12                 	db	18
  1064  00FE4A  01                 	db	1
  1065  00FE4B  0200               	dw	512
  1066  00FE4D  02                 	db	2
  1067  00FE4E  00                 	db	0
  1068  00FE4F  00                 	db	0
  1069  00FE50  08                 	db	8
  1070  00FE51  04D8               	dw	1240
  1071  00FE53  000A               	dw	10
  1072  00FE55  0100               	dw	256
  1073  00FE57  01                 	db	1
  1074  00FE58  02                 	db	2
  1075  00FE59  00                 	db	0
  1076  00FE5A  01                 	db	1
  1077  00FE5B                     __end_of_device_dsc:
  1078                           	opt stack 0
  1079  00FE5B                     _sd000:
  1080                           	opt stack 0
  1081  00FE5B  04                 	db	4
  1082  00FE5C  03                 	db	3
  1083  00FE5D  0409               	dw	1033
  1084  00FE5F                     __end_of_sd000:
  1085                           	opt stack 0
  1086  0000                     _RPINR1	set	3815
  1087  0000                     _UEP0bits	set	3878
  1088  0000                     _UIEbits	set	3894
  1089  0000                     _UADDR	set	3896
  1090  0000                     _UIE	set	3894
  1091  0000                     _UEIE	set	3895
  1092  0000                     _UCFG	set	3897
  1093  0000                     _RTCCAL	set	3902
  1094  0000                     _PADCFG1bits	set	3900
  1095  0000                     _RTCCFGbits	set	3903
  1096  0000                     _DSCONLbits	set	3916
  1097  0000                     _DSGPR1	set	3919
  1098  0000                     _DSGPR0	set	3918
  1099  0000                     _DSCONHbits	set	3917
  1100  0000                     _ANCON1bits	set	3913
  1101  0000                     _UEP1	set	3879
  1102  0000                     _UEP0	set	3878
  1103  0000                     _T1CONbits	set	4045
  1104  0000                     _PORTDbits	set	3971
  1105  0000                     _USTAT	set	3940
  1106  0000                     _PIR2bits	set	4001
  1107  0000                     _UCON	set	3941
  1108  0000                     _UIRbits	set	3938
  1109  0000                     _UCONbits	set	3941
  1110  0000                     _UIR	set	3938
  1111  0000                     _UEIR	set	3939
  1112  0000                     _PIE2bits	set	4000
  1113  0000                     _BAUDCON2	set	3964
  1114  0000                     _RCSTA2	set	3996
  1115  0000                     _BAUDCON1	set	3966
  1116  0000                     _RCSTA1	set	4012
  1117  0000                     _TRISCbits	set	3988
  1118  0000                     _TXSTA2	set	4008
  1119  0000                     _TXSTA1	set	4013
  1120  0000                     _RCREG2	set	4010
  1121  0000                     _RCREG1	set	4015
  1122  0000                     _TXREG2	set	4009
  1123  0000                     _TXREG1	set	4014
  1124  0000                     _SPBRG2	set	4011
  1125  0000                     _SPBRGH2	set	3965
  1126  0000                     _SPBRG1	set	4016
  1127  0000                     _SPBRGH1	set	3967
  1128  0000                     _PR4	set	3959
  1129  0000                     _PR2	set	4043
  1130  0000                     _PIE1bits	set	3997
  1131  0000                     _IPR1bits	set	3999
  1132  0000                     _T4CONbits	set	3958
  1133  0000                     _T2CONbits	set	4042
  1134  0000                     _ALRMVALL	set	3982
  1135  0000                     _ALRMVALH	set	3983
  1136  0000                     _RTCVALH	set	3993
  1137  0000                     _RTCVALL	set	3992
  1138  0000                     _ALRMRPTbits	set	3984
  1139  0000                     _ALRMCFGbits	set	3985
  1140  0000                     _PIE3bits	set	4003
  1141  0000                     _IPR3bits	set	4005
  1142  0000                     _OSCCONbits	set	4051
  1143  0000                     _PORTEbits	set	3972
  1144  0000                     _TRISEbits	set	3990
  1145  0000                     _WDTCONbits	set	4032
  1146  0000                     _INTCON2bits	set	4081
  1147  0000                     _TRISBbits	set	3987
  1148  0000                     _OSCTUNEbits	set	3995
  1149  0000                     _SSP2CON1	set	3954
  1150  0000                     _TRISDbits	set	3989
  1151  0000                     _SSP2BUF	set	3957
  1152  0000                     _SSP2CON2bits	set	3953
  1153  0000                     _SSP2STAT	set	3955
  1154  0000                     _SSP2CON2	set	3953
  1155  0000                     _SSP2ADD	set	3956
  1156  0000                     _PIR1bits	set	3998
  1157  0000                     _PIR3bits	set	4004
  1158  0000                     _INTCON3bits	set	4080
  1159  0000                     _INTCONbits	set	4082
  1160  0000                     _RCONbits	set	4048
  1161  00FE5F                     STR_21:
  1162  00FE5F  20                 	db	32
  1163  00FE60  4C                 	db	76	;'L'
  1164  00FE61  61                 	db	97	;'a'
  1165  00FE62  7A                 	db	122	;'z'
  1166  00FE63  79                 	db	121	;'y'
  1167  00FE64  20                 	db	32
  1168  00FE65  64                 	db	100	;'d'
  1169  00FE66  65                 	db	101	;'e'
  1170  00FE67  76                 	db	118	;'v'
  1171  00FE68  69                 	db	105	;'i'
  1172  00FE69  63                 	db	99	;'c'
  1173  00FE6A  65                 	db	101	;'e'
  1174  00FE6B  2E                 	db	46
  1175  00FE6C  2E                 	db	46
  1176  00FE6D  2E                 	db	46
  1177  00FE6E  79                 	db	121	;'y'
  1178  00FE6F  6F                 	db	111	;'o'
  1179  00FE70  75                 	db	117	;'u'
  1180  00FE71  27                 	db	39
  1181  00FE72  76                 	db	118	;'v'
  1182  00FE73  65                 	db	101	;'e'
  1183  00FE74  20                 	db	32
  1184  00FE75  62                 	db	98	;'b'
  1185  00FE76  65                 	db	101	;'e'
  1186  00FE77  65                 	db	101	;'e'
  1187  00FE78  6E                 	db	110	;'n'
  1188  00FE79  20                 	db	32
  1189  00FE7A  74                 	db	116	;'t'
  1190  00FE7B  69                 	db	105	;'i'
  1191  00FE7C  6D                 	db	109	;'m'
  1192  00FE7D  65                 	db	101	;'e'
  1193  00FE7E  64                 	db	100	;'d'
  1194  00FE7F  2D                 	db	45
  1195  00FE80  6F                 	db	111	;'o'
  1196  00FE81  75                 	db	117	;'u'
  1197  00FE82  74                 	db	116	;'t'
  1198  00FE83  21                 	db	33
  1199  00FE84  21                 	db	33
  1200  00FE85  21                 	db	33
  1201  00FE86  0D                 	db	13
  1202  00FE87  0A                 	db	10
  1203  00FE88  00                 	db	0
  1204  00FE89                     STR_8:
  1205  00FE89  41                 	db	65	;'A'
  1206  00FE8A  54                 	db	84	;'T'
  1207  00FE8B  2B                 	db	43
  1208  00FE8C  53                 	db	83	;'S'
  1209  00FE8D  41                 	db	65	;'A'
  1210  00FE8E  50                 	db	80	;'P'
  1211  00FE8F  42                 	db	66	;'B'
  1212  00FE90  52                 	db	82	;'R'
  1213  00FE91  3D                 	db	61	;'='
  1214  00FE92  33                 	db	51	;'3'
  1215  00FE93  2C                 	db	44
  1216  00FE94  31                 	db	49	;'1'
  1217  00FE95  2C                 	db	44
  1218  00FE96  22                 	db	34
  1219  00FE97  43                 	db	67	;'C'
  1220  00FE98  6F                 	db	111	;'o'
  1221  00FE99  6E                 	db	110	;'n'
  1222  00FE9A  74                 	db	116	;'t'
  1223  00FE9B  79                 	db	121	;'y'
  1224  00FE9C  70                 	db	112	;'p'
  1225  00FE9D  65                 	db	101	;'e'
  1226  00FE9E  22                 	db	34
  1227  00FE9F  2C                 	db	44
  1228  00FEA0  22                 	db	34
  1229  00FEA1  47                 	db	71	;'G'
  1230  00FEA2  50                 	db	80	;'P'
  1231  00FEA3  52                 	db	82	;'R'
  1232  00FEA4  53                 	db	83	;'S'
  1233  00FEA5  22                 	db	34
  1234  00FEA6  0D                 	db	13
  1235  00FEA7  00                 	db	0
  1236  00FEA8                     STR_14:
  1237  00FEA8  41                 	db	65	;'A'
  1238  00FEA9  54                 	db	84	;'T'
  1239  00FEAA  2B                 	db	43
  1240  00FEAB  48                 	db	72	;'H'
  1241  00FEAC  54                 	db	84	;'T'
  1242  00FEAD  54                 	db	84	;'T'
  1243  00FEAE  50                 	db	80	;'P'
  1244  00FEAF  50                 	db	80	;'P'
  1245  00FEB0  41                 	db	65	;'A'
  1246  00FEB1  52                 	db	82	;'R'
  1247  00FEB2  41                 	db	65	;'A'
  1248  00FEB3  3D                 	db	61	;'='
  1249  00FEB4  22                 	db	34
  1250  00FEB5  43                 	db	67	;'C'
  1251  00FEB6  49                 	db	73	;'I'
  1252  00FEB7  44                 	db	68	;'D'
  1253  00FEB8  22                 	db	34
  1254  00FEB9  2C                 	db	44
  1255  00FEBA  31                 	db	49	;'1'
  1256  00FEBB  0D                 	db	13
  1257  00FEBC  00                 	db	0
  1258  00FEBD                     STR_9:
  1259  00FEBD  41                 	db	65	;'A'
  1260  00FEBE  54                 	db	84	;'T'
  1261  00FEBF  2B                 	db	43
  1262  00FEC0  53                 	db	83	;'S'
  1263  00FEC1  41                 	db	65	;'A'
  1264  00FEC2  50                 	db	80	;'P'
  1265  00FEC3  42                 	db	66	;'B'
  1266  00FEC4  52                 	db	82	;'R'
  1267  00FEC5  3D                 	db	61	;'='
  1268  00FEC6  33                 	db	51	;'3'
  1269  00FEC7  2C                 	db	44
  1270  00FEC8  31                 	db	49	;'1'
  1271  00FEC9  2C                 	db	44
  1272  00FECA  22                 	db	34
  1273  00FECB  41                 	db	65	;'A'
  1274  00FECC  50                 	db	80	;'P'
  1275  00FECD  4E                 	db	78	;'N'
  1276  00FECE  22                 	db	34
  1277  00FECF  2C                 	db	44
  1278  00FED0  22                 	db	34
  1279  00FED1  00                 	db	0
  1280  00FED2                     STR_23:
  1281  00FED2  46                 	db	70	;'F'
  1282  00FED3  72                 	db	114	;'r'
  1283  00FED4  61                 	db	97	;'a'
  1284  00FED5  6D                 	db	109	;'m'
  1285  00FED6  65                 	db	101	;'e'
  1286  00FED7  77                 	db	119	;'w'
  1287  00FED8  6F                 	db	111	;'o'
  1288  00FED9  72                 	db	114	;'r'
  1289  00FEDA  6B                 	db	107	;'k'
  1290  00FEDB  20                 	db	32
  1291  00FEDC  56                 	db	86	;'V'
  1292  00FEDD  65                 	db	101	;'e'
  1293  00FEDE  72                 	db	114	;'r'
  1294  00FEDF  73                 	db	115	;'s'
  1295  00FEE0  69                 	db	105	;'i'
  1296  00FEE1  6F                 	db	111	;'o'
  1297  00FEE2  6E                 	db	110	;'n'
  1298  00FEE3  3A                 	db	58	;':'
  1299  00FEE4  20                 	db	32
  1300  00FEE5  00                 	db	0
  1301  00FEE6                     STR_15:
  1302  00FEE6  41                 	db	65	;'A'
  1303  00FEE7  54                 	db	84	;'T'
  1304  00FEE8  2B                 	db	43
  1305  00FEE9  48                 	db	72	;'H'
  1306  00FEEA  54                 	db	84	;'T'
  1307  00FEEB  54                 	db	84	;'T'
  1308  00FEEC  50                 	db	80	;'P'
  1309  00FEED  50                 	db	80	;'P'
  1310  00FEEE  41                 	db	65	;'A'
  1311  00FEEF  52                 	db	82	;'R'
  1312  00FEF0  41                 	db	65	;'A'
  1313  00FEF1  3D                 	db	61	;'='
  1314  00FEF2  22                 	db	34
  1315  00FEF3  55                 	db	85	;'U'
  1316  00FEF4  52                 	db	82	;'R'
  1317  00FEF5  4C                 	db	76	;'L'
  1318  00FEF6  22                 	db	34
  1319  00FEF7  2C                 	db	44
  1320  00FEF8  22                 	db	34
  1321  00FEF9  00                 	db	0
  1322  00FEFA                     STR_31:
  1323  00FEFA  41                 	db	65	;'A'
  1324  00FEFB  54                 	db	84	;'T'
  1325  00FEFC  2B                 	db	43
  1326  00FEFD  43                 	db	67	;'C'
  1327  00FEFE  4D                 	db	77	;'M'
  1328  00FEFF  47                 	db	71	;'G'
  1329  00FF00  44                 	db	68	;'D'
  1330  00FF01  41                 	db	65	;'A'
  1331  00FF02  3D                 	db	61	;'='
  1332  00FF03  44                 	db	68	;'D'
  1333  00FF04  45                 	db	69	;'E'
  1334  00FF05  4C                 	db	76	;'L'
  1335  00FF06  20                 	db	32
  1336  00FF07  41                 	db	65	;'A'
  1337  00FF08  4C                 	db	76	;'L'
  1338  00FF09  4C                 	db	76	;'L'
  1339  00FF0A  0D                 	db	13
  1340  00FF0B  0A                 	db	10
  1341  00FF0C  00                 	db	0
  1342  00FF0D                     STR_27:
  1343  00FF0D  42                 	db	66	;'B'
  1344  00FF0E  75                 	db	117	;'u'
  1345  00FF0F  69                 	db	105	;'i'
  1346  00FF10  6C                 	db	108	;'l'
  1347  00FF11  64                 	db	100	;'d'
  1348  00FF12  20                 	db	32
  1349  00FF13  44                 	db	68	;'D'
  1350  00FF14  61                 	db	97	;'a'
  1351  00FF15  74                 	db	116	;'t'
  1352  00FF16  65                 	db	101	;'e'
  1353  00FF17  3A                 	db	58	;':'
  1354  00FF18  20                 	db	32
  1355  00FF19  25                 	db	37
  1356  00FF1A  73                 	db	115	;'s'
  1357  00FF1B  0D                 	db	13
  1358  00FF1C  0A                 	db	10
  1359  00FF1D  00                 	db	0
  1360  00FF1E                     STR_16:
  1361  00FF1E  41                 	db	65	;'A'
  1362  00FF1F  54                 	db	84	;'T'
  1363  00FF20  2B                 	db	43
  1364  00FF21  48                 	db	72	;'H'
  1365  00FF22  54                 	db	84	;'T'
  1366  00FF23  54                 	db	84	;'T'
  1367  00FF24  50                 	db	80	;'P'
  1368  00FF25  41                 	db	65	;'A'
  1369  00FF26  43                 	db	67	;'C'
  1370  00FF27  54                 	db	84	;'T'
  1371  00FF28  49                 	db	73	;'I'
  1372  00FF29  4F                 	db	79	;'O'
  1373  00FF2A  4E                 	db	78	;'N'
  1374  00FF2B  3D                 	db	61	;'='
  1375  00FF2C  30                 	db	48	;'0'
  1376  00FF2D  0D                 	db	13
  1377  00FF2E  00                 	db	0
  1378  00FF2F                     STR_29:
  1379  00FF2F  41                 	db	65	;'A'
  1380  00FF30  54                 	db	84	;'T'
  1381  00FF31  2B                 	db	43
  1382  00FF32  43                 	db	67	;'C'
  1383  00FF33  4D                 	db	77	;'M'
  1384  00FF34  47                 	db	71	;'G'
  1385  00FF35  44                 	db	68	;'D'
  1386  00FF36  3D                 	db	61	;'='
  1387  00FF37  31                 	db	49	;'1'
  1388  00FF38  2C                 	db	44
  1389  00FF39  30                 	db	48	;'0'
  1390  00FF3A  0D                 	db	13
  1391  00FF3B  0A                 	db	10
  1392  00FF3C  00                 	db	0
  1393  00FF3D  41                 	db	65	;'A'
  1394  00FF3E  54                 	db	84	;'T'
  1395  00FF3F  2B                 	db	43
  1396  00FF40  48                 	db	72	;'H'
  1397  00FF41  54                 	db	84	;'T'
  1398  00FF42  54                 	db	84	;'T'
  1399  00FF43  50                 	db	80	;'P'
  1400  00FF44  53                 	db	83	;'S'
  1401  00FF45  53                 	db	83	;'S'
  1402  00FF46  4C                 	db	76	;'L'
  1403  00FF47  3D                 	db	61	;'='
  1404  00FF48  30                 	db	48	;'0'
  1405  00FF49  0D                 	db	13
  1406  00FF4A  00                 	db	0
  1407  00FF4B                     STR_10:
  1408  00FF4B  41                 	db	65	;'A'
  1409  00FF4C  54                 	db	84	;'T'
  1410  00FF4D  2B                 	db	43
  1411  00FF4E  53                 	db	83	;'S'
  1412  00FF4F  41                 	db	65	;'A'
  1413  00FF50  50                 	db	80	;'P'
  1414  00FF51  42                 	db	66	;'B'
  1415  00FF52  52                 	db	82	;'R'
  1416  00FF53  3D                 	db	61	;'='
  1417  00FF54  31                 	db	49	;'1'
  1418  00FF55  2C                 	db	44
  1419  00FF56  31                 	db	49	;'1'
  1420  00FF57  0D                 	db	13
  1421  00FF58  00                 	db	0
  1422  00FF59                     STR_11:
  1423  00FF59  41                 	db	65	;'A'
  1424  00FF5A  54                 	db	84	;'T'
  1425  00FF5B  2B                 	db	43
  1426  00FF5C  53                 	db	83	;'S'
  1427  00FF5D  41                 	db	65	;'A'
  1428  00FF5E  50                 	db	80	;'P'
  1429  00FF5F  42                 	db	66	;'B'
  1430  00FF60  52                 	db	82	;'R'
  1431  00FF61  3D                 	db	61	;'='
  1432  00FF62  32                 	db	50	;'2'
  1433  00FF63  2C                 	db	44
  1434  00FF64  31                 	db	49	;'1'
  1435  00FF65  0D                 	db	13
  1436  00FF66  00                 	db	0
  1437  00FF67                     STR_13:
  1438  00FF67  41                 	db	65	;'A'
  1439  00FF68  54                 	db	84	;'T'
  1440  00FF69  2B                 	db	43
  1441  00FF6A  48                 	db	72	;'H'
  1442  00FF6B  54                 	db	84	;'T'
  1443  00FF6C  54                 	db	84	;'T'
  1444  00FF6D  50                 	db	80	;'P'
  1445  00FF6E  53                 	db	83	;'S'
  1446  00FF6F  53                 	db	83	;'S'
  1447  00FF70  4C                 	db	76	;'L'
  1448  00FF71  3D                 	db	61	;'='
  1449  00FF72  31                 	db	49	;'1'
  1450  00FF73  0D                 	db	13
  1451  00FF74  00                 	db	0
  1452  00FF75                     STR_2:
  1453  00FF75  41                 	db	65	;'A'
  1454  00FF76  54                 	db	84	;'T'
  1455  00FF77  2B                 	db	43
  1456  00FF78  49                 	db	73	;'I'
  1457  00FF79  50                 	db	80	;'P'
  1458  00FF7A  52                 	db	82	;'R'
  1459  00FF7B  3D                 	db	61	;'='
  1460  00FF7C  39                 	db	57	;'9'
  1461  00FF7D  36                 	db	54	;'6'
  1462  00FF7E  30                 	db	48	;'0'
  1463  00FF7F  30                 	db	48	;'0'
  1464  00FF80  0D                 	db	13
  1465  00FF81  0A                 	db	10
  1466  00FF82  00                 	db	0
  1467  00FF83                     STR_17:
  1468  00FF83  41                 	db	65	;'A'
  1469  00FF84  54                 	db	84	;'T'
  1470  00FF85  2B                 	db	43
  1471  00FF86  48                 	db	72	;'H'
  1472  00FF87  54                 	db	84	;'T'
  1473  00FF88  54                 	db	84	;'T'
  1474  00FF89  50                 	db	80	;'P'
  1475  00FF8A  52                 	db	82	;'R'
  1476  00FF8B  45                 	db	69	;'E'
  1477  00FF8C  41                 	db	65	;'A'
  1478  00FF8D  44                 	db	68	;'D'
  1479  00FF8E  0D                 	db	13
  1480  00FF8F  00                 	db	0
  1481  00FF90                     STR_18:
  1482  00FF90  41                 	db	65	;'A'
  1483  00FF91  54                 	db	84	;'T'
  1484  00FF92  2B                 	db	43
  1485  00FF93  48                 	db	72	;'H'
  1486  00FF94  54                 	db	84	;'T'
  1487  00FF95  54                 	db	84	;'T'
  1488  00FF96  50                 	db	80	;'P'
  1489  00FF97  54                 	db	84	;'T'
  1490  00FF98  45                 	db	69	;'E'
  1491  00FF99  52                 	db	82	;'R'
  1492  00FF9A  4D                 	db	77	;'M'
  1493  00FF9B  0D                 	db	13
  1494  00FF9C  00                 	db	0
  1495  00FF9D                     STR_12:
  1496  00FF9D  41                 	db	65	;'A'
  1497  00FF9E  54                 	db	84	;'T'
  1498  00FF9F  2B                 	db	43
  1499  00FFA0  48                 	db	72	;'H'
  1500  00FFA1  54                 	db	84	;'T'
  1501  00FFA2  54                 	db	84	;'T'
  1502  00FFA3  50                 	db	80	;'P'
  1503  00FFA4  49                 	db	73	;'I'
  1504  00FFA5  4E                 	db	78	;'N'
  1505  00FFA6  49                 	db	73	;'I'
  1506  00FFA7  54                 	db	84	;'T'
  1507  00FFA8  0D                 	db	13
  1508  00FFA9  00                 	db	0
  1509  00FFAA                     STR_32:
  1510  00FFAA  41                 	db	65	;'A'
  1511  00FFAB  54                 	db	84	;'T'
  1512  00FFAC  2B                 	db	43
  1513  00FFAD  43                 	db	67	;'C'
  1514  00FFAE  4C                 	db	76	;'L'
  1515  00FFAF  49                 	db	73	;'I'
  1516  00FFB0  50                 	db	80	;'P'
  1517  00FFB1  3D                 	db	61	;'='
  1518  00FFB2  31                 	db	49	;'1'
  1519  00FFB3  0D                 	db	13
  1520  00FFB4  0A                 	db	10
  1521  00FFB5  00                 	db	0
  1522  00FFB6                     STR_28:
  1523  00FFB6  4D                 	db	77	;'M'
  1524  00FFB7  61                 	db	97	;'a'
  1525  00FFB8  72                 	db	114	;'r'
  1526  00FFB9  20                 	db	32
  1527  00FFBA  32                 	db	50	;'2'
  1528  00FFBB  36                 	db	54	;'6'
  1529  00FFBC  20                 	db	32
  1530  00FFBD  32                 	db	50	;'2'
  1531  00FFBE  30                 	db	48	;'0'
  1532  00FFBF  32                 	db	50	;'2'
  1533  00FFC0  32                 	db	50	;'2'
  1534  00FFC1  00                 	db	0
  1535  00FFC2                     STR_4:
  1536  00FFC2  41                 	db	65	;'A'
  1537  00FFC3  54                 	db	84	;'T'
  1538  00FFC4  2B                 	db	43
  1539  00FFC5  43                 	db	67	;'C'
  1540  00FFC6  4D                 	db	77	;'M'
  1541  00FFC7  47                 	db	71	;'G'
  1542  00FFC8  52                 	db	82	;'R'
  1543  00FFC9  3D                 	db	61	;'='
  1544  00FFCA  31                 	db	49	;'1'
  1545  00FFCB  0D                 	db	13
  1546  00FFCC  0A                 	db	10
  1547  00FFCD  00                 	db	0
  1548  00FFCE                     STR_5:
  1549  00FFCE  41                 	db	65	;'A'
  1550  00FFCF  54                 	db	84	;'T'
  1551  00FFD0  2B                 	db	43
  1552  00FFD1  43                 	db	67	;'C'
  1553  00FFD2  4D                 	db	77	;'M'
  1554  00FFD3  47                 	db	71	;'G'
  1555  00FFD4  53                 	db	83	;'S'
  1556  00FFD5  3D                 	db	61	;'='
  1557  00FFD6  22                 	db	34
  1558  00FFD7  00                 	db	0
  1559  00FFD8                     STR_33:
  1560  00FFD8  28                 	db	40
  1561  00FFD9  6E                 	db	110	;'n'
  1562  00FFDA  75                 	db	117	;'u'
  1563  00FFDB  6C                 	db	108	;'l'
  1564  00FFDC  6C                 	db	108	;'l'
  1565  00FFDD  29                 	db	41
  1566  00FFDE  00                 	db	0
  1567  00FFDF                     STR_3:
  1568  00FFDF  41                 	db	65	;'A'
  1569  00FFE0  54                 	db	84	;'T'
  1570  00FFE1  45                 	db	69	;'E'
  1571  00FFE2  30                 	db	48	;'0'
  1572  00FFE3  0D                 	db	13
  1573  00FFE4  0A                 	db	10
  1574  00FFE5  00                 	db	0
  1575  00FFE6                     STR_1:
  1576  00FFE6  41                 	db	65	;'A'
  1577  00FFE7  54                 	db	84	;'T'
  1578  00FFE8  0D                 	db	13
  1579  00FFE9  0A                 	db	10
  1580  00FFEA  00                 	db	0
  1581  00FFEB  41                 	db	65	;'A'
  1582  00FFEC  54                 	db	84	;'T'
  1583  00FFED  41                 	db	65	;'A'
  1584  00FFEE  0D                 	db	13
  1585  00FFEF  00                 	db	0
  1586  00FFF0                     STR_6:
  1587  00FFF0  41                 	db	65	;'A'
  1588  00FFF1  54                 	db	84	;'T'
  1589  00FFF2  48                 	db	72	;'H'
  1590  00FFF3  0D                 	db	13
  1591  00FFF4  00                 	db	0
  1592  00FFF5                     STR_24:
  1593  00FFF5  2E                 	db	46
  1594  00FFF6  00                 	db	0
  1595  0000                     
  1596                           ; #config settings
  1597  00FFF7  00                 	db	0	; dummy byte at the end
  1598  0000                     
  1599                           	psect	cinit
  1600  002802                     __pcinit:
  1601                           	opt stack 0
  1602  002802                     start_initialization:
  1603                           	opt stack 0
  1604  002802                     __initialization:
  1605                           	opt stack 0
  1606                           
  1607                           ; Initialize objects allocated to BANK5 (80 bytes)
  1608                           ; load TBLPTR registers with __pidataBANK5
  1609  002802  0E9C               	movlw	low __pidataBANK5
  1610  002804  6EF6               	movwf	tblptrl,c
  1611  002806  0E59               	movlw	high __pidataBANK5
  1612  002808  6EF7               	movwf	tblptrh,c
  1613  00280A  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1614  00280C  6EF8               	movwf	tblptru,c
  1615  00280E  EE05  F0A4         	lfsr	0,__pdataBANK5
  1616  002812  EE10 F050          	lfsr	1,80
  1617  002816                     copy_data0:
  1618  002816  0009               	tblrd		*+
  1619  002818  CFF5 FFEE          	movff	tablat,postinc0
  1620  00281C  50E5               	movf	postdec1,w,c
  1621  00281E  50E1               	movf	fsr1l,w,c
  1622  002820  E1FA               	bnz	copy_data0
  1623                           
  1624                           ; Initialize objects allocated to BANK3 (73 bytes)
  1625                           ; load TBLPTR registers with __pidataBANK3
  1626  002822  0EC2               	movlw	low __pidataBANK3
  1627  002824  6EF6               	movwf	tblptrl,c
  1628  002826  0E5B               	movlw	high __pidataBANK3
  1629  002828  6EF7               	movwf	tblptrh,c
  1630  00282A  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1631  00282C  6EF8               	movwf	tblptru,c
  1632  00282E  EE03  F0B7         	lfsr	0,__pdataBANK3
  1633  002832  EE10 F049          	lfsr	1,73
  1634  002836                     copy_data1:
  1635  002836  0009               	tblrd		*+
  1636  002838  CFF5 FFEE          	movff	tablat,postinc0
  1637  00283C  50E5               	movf	postdec1,w,c
  1638  00283E  50E1               	movf	fsr1l,w,c
  1639  002840  E1FA               	bnz	copy_data1
  1640                           
  1641                           ; Initialize objects allocated to BANK2 (13 bytes)
  1642                           ; load TBLPTR registers with __pidataBANK2
  1643  002842  0E5A               	movlw	low __pidataBANK2
  1644  002844  6EF6               	movwf	tblptrl,c
  1645  002846  0E67               	movlw	high __pidataBANK2
  1646  002848  6EF7               	movwf	tblptrh,c
  1647  00284A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1648  00284C  6EF8               	movwf	tblptru,c
  1649  00284E  EE02  F0F3         	lfsr	0,__pdataBANK2
  1650  002852  EE10 F00D          	lfsr	1,13
  1651  002856                     copy_data2:
  1652  002856  0009               	tblrd		*+
  1653  002858  CFF5 FFEE          	movff	tablat,postinc0
  1654  00285C  50E5               	movf	postdec1,w,c
  1655  00285E  50E1               	movf	fsr1l,w,c
  1656  002860  E1FA               	bnz	copy_data2
  1657                           
  1658                           ; Initialize objects allocated to BANK1 (2 bytes)
  1659                           ; load TBLPTR registers with __pidataBANK1
  1660  002862  0EE2               	movlw	low __pidataBANK1
  1661  002864  6EF6               	movwf	tblptrl,c
  1662  002866  0E67               	movlw	high __pidataBANK1
  1663  002868  6EF7               	movwf	tblptrh,c
  1664  00286A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1665  00286C  6EF8               	movwf	tblptru,c
  1666  00286E  0009               	tblrd		*+	;fetch initializer
  1667  002870  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1668  002874  0009               	tblrd		*+	;fetch initializer
  1669  002876  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1670                           
  1671                           ; Initialize objects allocated to BANK4 (13 bytes)
  1672                           ; load TBLPTR registers with __pidataBANK4
  1673  00287A  0E67               	movlw	low __pidataBANK4
  1674  00287C  6EF6               	movwf	tblptrl,c
  1675  00287E  0E67               	movlw	high __pidataBANK4
  1676  002880  6EF7               	movwf	tblptrh,c
  1677  002882  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1678  002884  6EF8               	movwf	tblptru,c
  1679  002886  EE04  F0EF         	lfsr	0,__pdataBANK4
  1680  00288A  EE10 F00D          	lfsr	1,13
  1681  00288E                     copy_data3:
  1682  00288E  0009               	tblrd		*+
  1683  002890  CFF5 FFEE          	movff	tablat,postinc0
  1684  002894  50E5               	movf	postdec1,w,c
  1685  002896  50E1               	movf	fsr1l,w,c
  1686  002898  E1FA               	bnz	copy_data3
  1687                           
  1688                           ; Initialize objects allocated to BANK0 (1 bytes)
  1689                           ; load TBLPTR registers with __pidataBANK0
  1690  00289A  0EE4               	movlw	low __pidataBANK0
  1691  00289C  6EF6               	movwf	tblptrl,c
  1692  00289E  0E67               	movlw	high __pidataBANK0
  1693  0028A0  6EF7               	movwf	tblptrh,c
  1694  0028A2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1695  0028A4  6EF8               	movwf	tblptru,c
  1696  0028A6  0009               	tblrd		*+	;fetch initializer
  1697  0028A8  CFF5 F0E2          	movff	tablat,__pdataBANK0
  1698                           
  1699                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1700  0028AC  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1701  0028B0  EE13 F020          	lfsr	1,800
  1702  0028B4                     clear_0:
  1703  0028B4  6AEE               	clrf	postinc0,c
  1704  0028B6  50E5               	movf	postdec1,w,c
  1705  0028B8  50E1               	movf	fsr1l,w,c
  1706  0028BA  E1FC               	bnz	clear_0
  1707  0028BC  50E2               	movf	fsr1h,w,c
  1708  0028BE  E1FA               	bnz	clear_0
  1709                           
  1710                           ; Clear objects allocated to BANK9 (200 bytes)
  1711  0028C0  EE09  F000         	lfsr	0,__pbssBANK9
  1712  0028C4  0EC8               	movlw	200
  1713  0028C6                     clear_1:
  1714  0028C6  6AEE               	clrf	postinc0,c
  1715  0028C8  06E8               	decf	wreg,f,c
  1716  0028CA  E1FD               	bnz	clear_1
  1717                           
  1718                           ; Clear objects allocated to BANK8 (200 bytes)
  1719  0028CC  EE08  F000         	lfsr	0,__pbssBANK8
  1720  0028D0  0EC8               	movlw	200
  1721  0028D2                     clear_2:
  1722  0028D2  6AEE               	clrf	postinc0,c
  1723  0028D4  06E8               	decf	wreg,f,c
  1724  0028D6  E1FD               	bnz	clear_2
  1725                           
  1726                           ; Clear objects allocated to BANK7 (246 bytes)
  1727  0028D8  EE07  F000         	lfsr	0,__pbssBANK7
  1728  0028DC  0EF6               	movlw	246
  1729  0028DE                     clear_3:
  1730  0028DE  6AEE               	clrf	postinc0,c
  1731  0028E0  06E8               	decf	wreg,f,c
  1732  0028E2  E1FD               	bnz	clear_3
  1733                           
  1734                           ; Clear objects allocated to BANK6 (220 bytes)
  1735  0028E4  EE06  F000         	lfsr	0,__pbssBANK6
  1736  0028E8  0EDC               	movlw	220
  1737  0028EA                     clear_4:
  1738  0028EA  6AEE               	clrf	postinc0,c
  1739  0028EC  06E8               	decf	wreg,f,c
  1740  0028EE  E1FD               	bnz	clear_4
  1741                           
  1742                           ; Clear objects allocated to BANK5 (164 bytes)
  1743  0028F0  EE05  F000         	lfsr	0,__pbssBANK5
  1744  0028F4  0EA4               	movlw	164
  1745  0028F6                     clear_5:
  1746  0028F6  6AEE               	clrf	postinc0,c
  1747  0028F8  06E8               	decf	wreg,f,c
  1748  0028FA  E1FD               	bnz	clear_5
  1749                           
  1750                           ; Clear objects allocated to BANK3 (183 bytes)
  1751  0028FC  EE03  F000         	lfsr	0,__pbssBANK3
  1752  002900  0EB7               	movlw	183
  1753  002902                     clear_6:
  1754  002902  6AEE               	clrf	postinc0,c
  1755  002904  06E8               	decf	wreg,f,c
  1756  002906  E1FD               	bnz	clear_6
  1757                           
  1758                           ; Clear objects allocated to BANK2 (42 bytes)
  1759  002908  EE02  F0C9         	lfsr	0,__pbssBANK2
  1760  00290C  0E2A               	movlw	42
  1761  00290E                     clear_7:
  1762  00290E  6AEE               	clrf	postinc0,c
  1763  002910  06E8               	decf	wreg,f,c
  1764  002912  E1FD               	bnz	clear_7
  1765                           
  1766                           ; Clear objects allocated to BANK1 (53 bytes)
  1767  002914  EE01  F0C9         	lfsr	0,__pbssBANK1
  1768  002918  0E35               	movlw	53
  1769  00291A                     clear_8:
  1770  00291A  6AEE               	clrf	postinc0,c
  1771  00291C  06E8               	decf	wreg,f,c
  1772  00291E  E1FD               	bnz	clear_8
  1773                           
  1774                           ; Clear objects allocated to BANK4 (175 bytes)
  1775  002920  EE04  F040         	lfsr	0,__pbssBANK4
  1776  002924  0EAF               	movlw	175
  1777  002926                     clear_9:
  1778  002926  6AEE               	clrf	postinc0,c
  1779  002928  06E8               	decf	wreg,f,c
  1780  00292A  E1FD               	bnz	clear_9
  1781                           
  1782                           ; Clear objects allocated to BANK0 (50 bytes)
  1783  00292C  EE00  F0B0         	lfsr	0,__pbssBANK0
  1784  002930  0E32               	movlw	50
  1785  002932                     clear_10:
  1786  002932  6AEE               	clrf	postinc0,c
  1787  002934  06E8               	decf	wreg,f,c
  1788  002936  E1FD               	bnz	clear_10
  1789                           
  1790                           ; Clear objects allocated to COMRAM (31 bytes)
  1791  002938  EE00  F023         	lfsr	0,__pbssCOMRAM
  1792  00293C  0E1F               	movlw	31
  1793  00293E                     clear_11:
  1794  00293E  6AEE               	clrf	postinc0,c
  1795  002940  06E8               	decf	wreg,f,c
  1796  002942  E1FD               	bnz	clear_11
  1797  002944                     end_of_initialization:
  1798                           	opt stack 0
  1799  002944                     __end_of__initialization:
  1800                           	opt stack 0
  1801  002944  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1802  002946  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1803  002948  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1804  00294A  6EF8               	movwf	tblptru,c
  1805  00294C  0100               	movlb	0
  1806  00294E  EFBA  F033         	goto	_main	;jump to C main() function
  1807                           tblptru	equ	0xFF8
  1808                           tblptrh	equ	0xFF7
  1809                           tblptrl	equ	0xFF6
  1810                           tablat	equ	0xFF5
  1811                           postinc0	equ	0xFEE
  1812                           wreg	equ	0xFE8
  1813                           postdec1	equ	0xFE5
  1814                           fsr1h	equ	0xFE2
  1815                           fsr1l	equ	0xFE1
  1816                           
  1817                           	psect	bssCOMRAM
  1818  000023                     __pbssCOMRAM:
  1819                           	opt stack 0
  1820  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1821                           	opt stack 0
  1822  000023                     	ds	2
  1823  000025                     _USBDeferOUTDataStagePackets:
  1824                           	opt stack 0
  1825  000025                     	ds	1
  1826  000026                     _USBDeferINDataStagePackets:
  1827                           	opt stack 0
  1828  000026                     	ds	1
  1829  000027                     _USBStatusStageEnabledFlag2:
  1830                           	opt stack 0
  1831  000027                     	ds	1
  1832  000028                     TurnOnModem@TurnOnMdmState:
  1833                           	opt stack 0
  1834  000028                     	ds	1
  1835  000029                     CheckModem@CheckMdmSts:
  1836                           	opt stack 0
  1837  000029                     	ds	1
  1838  00002A                     _ComChecCompleted:
  1839                           	opt stack 0
  1840  00002A                     	ds	1
  1841  00002B                     Uart_Uart1RxIsr@UartRxData:
  1842                           	opt stack 0
  1843  00002B                     	ds	1
  1844  00002C                     Uart_MdmGsmGprsReadService@RxState:
  1845                           	opt stack 0
  1846  00002C                     	ds	1
  1847  00002D                     MdmCntSm@MdmCntState:
  1848                           	opt stack 0
  1849  00002D                     	ds	1
  1850  00002E                     RiSm@MdmDrvState:
  1851                           	opt stack 0
  1852  00002E                     	ds	1
  1853  00002F                     _Mmd_RingIndicator:
  1854                           	opt stack 0
  1855  00002F                     	ds	1
  1856  000030                     I2c_ReadData@ReadStatus:
  1857                           	opt stack 0
  1858  000030                     	ds	1
  1859  000031                     I2c_ReadData@TentativeCounter:
  1860                           	opt stack 0
  1861  000031                     	ds	1
  1862  000032                     I2c_ReadData@DataCounter:
  1863                           	opt stack 0
  1864  000032                     	ds	1
  1865  000033                     I2c_ReadData@I2cReadState:
  1866                           	opt stack 0
  1867  000033                     	ds	1
  1868  000034                     I2c_WriteData@WriteStatus:
  1869                           	opt stack 0
  1870  000034                     	ds	1
  1871  000035                     I2c_WriteData@TentativeCounter:
  1872                           	opt stack 0
  1873  000035                     	ds	1
  1874  000036                     I2c_WriteData@I2cNextState:
  1875                           	opt stack 0
  1876  000036                     	ds	1
  1877  000037                     I2c_WriteData@I2cWriteState:
  1878                           	opt stack 0
  1879  000037                     	ds	1
  1880  000038                     _memorizedNumbersCount:
  1881                           	opt stack 0
  1882  000038                     	ds	1
  1883  000039                     _MdmStsReady:
  1884                           	opt stack 0
  1885  000039                     	ds	1
  1886  00003A                     _NewStringMdmTerminal:
  1887                           	opt stack 0
  1888  00003A                     	ds	1
  1889  00003B                     _NewMdmEvtParserRequest:
  1890                           	opt stack 0
  1891  00003B                     	ds	1
  1892  00003C                     _NewStringReceived:
  1893                           	opt stack 0
  1894  00003C                     	ds	1
  1895  00003D                     _MdmResetRequest:
  1896                           	opt stack 0
  1897  00003D                     	ds	1
  1898  00003E                     _CallClosedEvent:
  1899                           	opt stack 0
  1900  00003E                     	ds	1
  1901  00003F                     _IncomingCallEvent:
  1902                           	opt stack 0
  1903  00003F                     	ds	1
  1904  000040                     _NewSmsEvent:
  1905                           	opt stack 0
  1906  000040                     	ds	1
  1907  000041                     _ActivateRiDetection:
  1908                           	opt stack 0
  1909  000041                     	ds	1
  1910                           tblptru	equ	0xFF8
  1911                           tblptrh	equ	0xFF7
  1912                           tblptrl	equ	0xFF6
  1913                           tablat	equ	0xFF5
  1914                           postinc0	equ	0xFEE
  1915                           wreg	equ	0xFE8
  1916                           postdec1	equ	0xFE5
  1917                           fsr1h	equ	0xFE2
  1918                           fsr1l	equ	0xFE1
  1919                           
  1920                           	psect	bssBANK0
  1921  0000B0                     __pbssBANK0:
  1922                           	opt stack 0
  1923  0000B0                     _inPipes:
  1924                           	opt stack 0
  1925  0000B0                     	ds	6
  1926  0000B6                     _pBDTEntryIn:
  1927                           	opt stack 0
  1928  0000B6                     	ds	6
  1929  0000BC                     _CDCDataOutHandle:
  1930                           	opt stack 0
  1931  0000BC                     	ds	2
  1932  0000BE                     _pBDTEntryEP0OutNext:
  1933                           	opt stack 0
  1934  0000BE                     	ds	2
  1935  0000C0                     _pBDTEntryEP0OutCurrent:
  1936                           	opt stack 0
  1937  0000C0                     	ds	2
  1938  0000C2                     _RxLen:
  1939                           	opt stack 0
  1940  0000C2                     	ds	2
  1941  0000C4                     _cdc_tx_len:
  1942                           	opt stack 0
  1943  0000C4                     	ds	1
  1944  0000C5                     _cdc_trf_state:
  1945                           	opt stack 0
  1946  0000C5                     	ds	1
  1947  0000C6                     _cdc_rx_len:
  1948                           	opt stack 0
  1949  0000C6                     	ds	1
  1950  0000C7                     _USBStatusStageEnabledFlag1:
  1951                           	opt stack 0
  1952  0000C7                     	ds	1
  1953  0000C8                     _USBDeferStatusStagePacket:
  1954                           	opt stack 0
  1955  0000C8                     	ds	1
  1956  0000C9                     _USBStatusStageTimeoutCounter:
  1957                           	opt stack 0
  1958  0000C9                     	ds	1
  1959  0000CA                     _endpoint_number:
  1960                           	opt stack 0
  1961  0000CA                     	ds	1
  1962  0000CB                     _controlTransferState:
  1963                           	opt stack 0
  1964  0000CB                     	ds	1
  1965  0000CC                     _shortPacketStatus:
  1966                           	opt stack 0
  1967  0000CC                     	ds	1
  1968  0000CD                     _USBDeviceState:
  1969                           	opt stack 0
  1970  0000CD                     	ds	1
  1971  0000CE                     _I2cComSts:
  1972                           	opt stack 0
  1973  0000CE                     	ds	1
  1974  0000CF                     HttpGetMethod@GetMethodNextState:
  1975                           	opt stack 0
  1976  0000CF                     	ds	1
  1977  0000D0                     InitGprsNetwork@GprsNetInitNextState:
  1978                           	opt stack 0
  1979  0000D0                     	ds	1
  1980  0000D1                     _MdmStatus:
  1981                           	opt stack 0
  1982  0000D1                     	ds	1
  1983  0000D2                     _PhoneNumbLen:
  1984                           	opt stack 0
  1985  0000D2                     	ds	1
  1986  0000D3                     _SmsLen:
  1987                           	opt stack 0
  1988  0000D3                     	ds	1
  1989  0000D4                     _SystemState:
  1990                           	opt stack 0
  1991  0000D4                     	ds	1
  1992  0000D5                     _USTATcopy:
  1993                           	opt stack 0
  1994  0000D5                     	ds	1
  1995  0000D6                     _USBActiveConfiguration:
  1996                           	opt stack 0
  1997  0000D6                     	ds	1
  1998  0000D7                     _I2cReadDataEvt:
  1999                           	opt stack 0
  2000  0000D7                     	ds	1
  2001  0000D8                     _I2cWriteDataEvt:
  2002                           	opt stack 0
  2003  0000D8                     	ds	1
  2004  0000D9                     _GetMethod:
  2005                           	opt stack 0
  2006  0000D9                     	ds	1
  2007  0000DA                     _InitNetwork:
  2008                           	opt stack 0
  2009  0000DA                     	ds	1
  2010  0000DB                     _SmsTxtReady:
  2011                           	opt stack 0
  2012  0000DB                     	ds	1
  2013  0000DC                     _GetSmsText:
  2014                           	opt stack 0
  2015  0000DC                     	ds	1
  2016  0000DD                     _SmsEvent:
  2017                           	opt stack 0
  2018  0000DD                     	ds	1
  2019  0000DE                     _ClipEvent:
  2020                           	opt stack 0
  2021  0000DE                     	ds	1
  2022  0000DF                     _RingEvent:
  2023                           	opt stack 0
  2024  0000DF                     	ds	1
  2025  0000E0                     _SendSmsEvent:
  2026                           	opt stack 0
  2027  0000E0                     	ds	1
  2028  0000E1                     _MdmOnOffPulseRequest:
  2029                           	opt stack 0
  2030  0000E1                     	ds	1
  2031                           tblptru	equ	0xFF8
  2032                           tblptrh	equ	0xFF7
  2033                           tblptrl	equ	0xFF6
  2034                           tablat	equ	0xFF5
  2035                           postinc0	equ	0xFEE
  2036                           wreg	equ	0xFE8
  2037                           postdec1	equ	0xFE5
  2038                           fsr1h	equ	0xFE2
  2039                           fsr1l	equ	0xFE1
  2040                           
  2041                           	psect	dataBANK0
  2042  0000E2                     __pdataBANK0:
  2043                           	opt stack 0
  2044  0000E2                     isNumberInMemory@currentPosition:
  2045                           	opt stack 0
  2046  0000E2                     	ds	1
  2047                           tblptru	equ	0xFF8
  2048                           tblptrh	equ	0xFF7
  2049                           tblptrl	equ	0xFF6
  2050                           tablat	equ	0xFF5
  2051                           postinc0	equ	0xFEE
  2052                           wreg	equ	0xFE8
  2053                           postdec1	equ	0xFE5
  2054                           fsr1h	equ	0xFE2
  2055                           fsr1l	equ	0xFE1
  2056                           
  2057                           	psect	bssBANK1
  2058  0001C9                     __pbssBANK1:
  2059                           	opt stack 0
  2060  0001C9                     _outPipes:
  2061                           	opt stack 0
  2062  0001C9                     	ds	8
  2063  0001D1                     _CDCDataInHandle:
  2064                           	opt stack 0
  2065  0001D1                     	ds	2
  2066  0001D3                     initFsm@currentState:
  2067                           	opt stack 0
  2068  0001D3                     	ds	1
  2069  0001D4                     initEeprom@currentState:
  2070                           	opt stack 0
  2071  0001D4                     	ds	1
  2072  0001D5                     initGprsModem@currentState:
  2073                           	opt stack 0
  2074  0001D5                     	ds	1
  2075  0001D6                     MyApp_Task@currentState:
  2076                           	opt stack 0
  2077  0001D6                     	ds	1
  2078  0001D7                     	ds	1
  2079  0001D8                     	ds	1
  2080  0001D9                     	ds	1
  2081  0001DA                     	ds	1
  2082  0001DB                     	ds	1
  2083  0001DC                     	ds	1
  2084  0001DD                     GsmGprsTerminal@SMS:
  2085                           	opt stack 0
  2086  0001DD                     	ds	1
  2087  0001DE                     	ds	1
  2088  0001DF                     _control_signal_bitmap:
  2089                           	opt stack 0
  2090  0001DF                     	ds	1
  2091  0001E0                     _cdc_mem_type:
  2092                           	opt stack 0
  2093  0001E0                     	ds	1
  2094  0001E1                     _USBTicksSinceSuspendEnd:
  2095                           	opt stack 0
  2096  0001E1                     	ds	1
  2097  0001E2                     _BothEP0OutUOWNsSet:
  2098                           	opt stack 0
  2099  0001E2                     	ds	1
  2100  0001E3                     _USBBusIsSuspended:
  2101                           	opt stack 0
  2102  0001E3                     	ds	1
  2103  0001E4                     _RemoteWakeup:
  2104                           	opt stack 0
  2105  0001E4                     	ds	1
  2106  0001E5                     I2cSlv_QueryI2cData@Ret:
  2107                           	opt stack 0
  2108  0001E5                     	ds	1
  2109  0001E6                     I2cSlv_QueryI2cData@I2cOpState:
  2110                           	opt stack 0
  2111  0001E6                     	ds	1
  2112  0001E7                     I2cSendMsgSm@I2cComState:
  2113                           	opt stack 0
  2114  0001E7                     	ds	1
  2115  0001E8                     _I2cBusStatus:
  2116                           	opt stack 0
  2117  0001E8                     	ds	1
  2118  0001E9                     HttpGetMethod@GetMOutSts:
  2119                           	opt stack 0
  2120  0001E9                     	ds	1
  2121  0001EA                     HttpGetMethod@GetMethodState:
  2122                           	opt stack 0
  2123  0001EA                     	ds	1
  2124  0001EB                     InitGprsNetwork@GprsNetInitState:
  2125                           	opt stack 0
  2126  0001EB                     	ds	1
  2127  0001EC                     _PostMethod:
  2128                           	opt stack 0
  2129  0001EC                     	ds	1
  2130  0001ED                     _HttpGetMethodSts:
  2131                           	opt stack 0
  2132  0001ED                     	ds	1
  2133  0001EE                     _GprsNetworkSts:
  2134                           	opt stack 0
  2135  0001EE                     	ds	1
  2136  0001EF                     _ApnLenLocal:
  2137                           	opt stack 0
  2138  0001EF                     	ds	1
  2139  0001F0                     SendSmsSm@SendSms_NextState:
  2140                           	opt stack 0
  2141  0001F0                     	ds	1
  2142  0001F1                     SendSmsSm@SendSms_State:
  2143                           	opt stack 0
  2144  0001F1                     	ds	1
  2145  0001F2                     GetSmsSm@GetSmsState:
  2146                           	opt stack 0
  2147  0001F2                     	ds	1
  2148  0001F3                     ConfigureModem@NextState:
  2149                           	opt stack 0
  2150  0001F3                     	ds	1
  2151  0001F4                     ConfigureModem@MdmConfigState:
  2152                           	opt stack 0
  2153  0001F4                     	ds	1
  2154  0001F5                     _AlarmEvent:
  2155                           	opt stack 0
  2156  0001F5                     	ds	1
  2157  0001F6                     _Led3OutSts:
  2158                           	opt stack 0
  2159  0001F6                     	ds	1
  2160  0001F7                     _Led3Sts:
  2161                           	opt stack 0
  2162  0001F7                     	ds	1
  2163  0001F8                     _Led2OutSts:
  2164                           	opt stack 0
  2165  0001F8                     	ds	1
  2166  0001F9                     _Led2Sts:
  2167                           	opt stack 0
  2168  0001F9                     	ds	1
  2169  0001FA                     _Led1OutSts:
  2170                           	opt stack 0
  2171  0001FA                     	ds	1
  2172  0001FB                     _Led1Sts:
  2173                           	opt stack 0
  2174  0001FB                     	ds	1
  2175  0001FC                     _ReadAddress:
  2176                           	opt stack 0
  2177  0001FC                     	ds	1
  2178  0001FD                     I2cDummyTx@DummyBuffer:
  2179                           	opt stack 0
  2180  0001FD                     	ds	1
  2181                           tblptru	equ	0xFF8
  2182                           tblptrh	equ	0xFF7
  2183                           tblptrl	equ	0xFF6
  2184                           tablat	equ	0xFF5
  2185                           postinc0	equ	0xFEE
  2186                           wreg	equ	0xFE8
  2187                           postdec1	equ	0xFE5
  2188                           fsr1h	equ	0xFE2
  2189                           fsr1l	equ	0xFE1
  2190                           
  2191                           	psect	dataBANK1
  2192  0001FE                     __pdataBANK1:
  2193                           	opt stack 0
  2194  0001FE                     _isMemoryEmpty:
  2195                           	opt stack 0
  2196  0001FE                     	ds	1
  2197  0001FF                     InitGprsNetwork@GprsInitSts:
  2198                           	opt stack 0
  2199  0001FF                     	ds	1
  2200                           tblptru	equ	0xFF8
  2201                           tblptrh	equ	0xFF7
  2202                           tblptrl	equ	0xFF6
  2203                           tablat	equ	0xFF5
  2204                           postinc0	equ	0xFEE
  2205                           wreg	equ	0xFE8
  2206                           postdec1	equ	0xFE5
  2207                           fsr1h	equ	0xFE2
  2208                           fsr1l	equ	0xFE1
  2209                           
  2210                           	psect	bssBANK2
  2211  0002C9                     __pbssBANK2:
  2212                           	opt stack 0
  2213  0002C9                     _pCDCDst:
  2214                           	opt stack 0
  2215  0002C9                     	ds	3
  2216  0002CC                     _pCDCSrc:
  2217                           	opt stack 0
  2218  0002CC                     	ds	3
  2219  0002CF                     _ep_data_out:
  2220                           	opt stack 0
  2221  0002CF                     	ds	3
  2222  0002D2                     _ep_data_in:
  2223                           	opt stack 0
  2224  0002D2                     	ds	3
  2225  0002D5                     _pDst:
  2226                           	opt stack 0
  2227  0002D5                     	ds	2
  2228  0002D7                     ConfigureModem@DelayValueMs:
  2229                           	opt stack 0
  2230  0002D7                     	ds	2
  2231  0002D9                     TurnOnModem@Counter:
  2232                           	opt stack 0
  2233  0002D9                     	ds	2
  2234  0002DB                     UpdateSchFlag@InterruptCounter:
  2235                           	opt stack 0
  2236  0002DB                     	ds	2
  2237  0002DD                     MdmCntSm@Counter:
  2238                           	opt stack 0
  2239  0002DD                     	ds	2
  2240  0002DF                     RiSm@Counter:
  2241                           	opt stack 0
  2242  0002DF                     	ds	2
  2243  0002E1                     _ExtInt1IsrCallback:
  2244                           	opt stack 0
  2245  0002E1                     	ds	2
  2246  0002E3                     _ExtInt0IsrCallback:
  2247                           	opt stack 0
  2248  0002E3                     	ds	2
  2249  0002E5                     _RtccIsrCallback:
  2250                           	opt stack 0
  2251  0002E5                     	ds	2
  2252  0002E7                     _Tmr4IsrCallback:
  2253                           	opt stack 0
  2254  0002E7                     	ds	2
  2255  0002E9                     _Tmr2IsrCallback:
  2256                           	opt stack 0
  2257  0002E9                     	ds	2
  2258  0002EB                     	ds	1
  2259  0002EC                     Term_MainSm@TermMainSmState:
  2260                           	opt stack 0
  2261  0002EC                     	ds	1
  2262  0002ED                     Terminal@FormatOption:
  2263                           	opt stack 0
  2264  0002ED                     	ds	1
  2265  0002EE                     Terminal@SlaveAddr:
  2266                           	opt stack 0
  2267  0002EE                     	ds	1
  2268  0002EF                     Terminal@PackageLen:
  2269                           	opt stack 0
  2270  0002EF                     	ds	1
  2271  0002F0                     Terminal@TermState:
  2272                           	opt stack 0
  2273  0002F0                     	ds	1
  2274  0002F1                     _USBAlternateInterface:
  2275                           	opt stack 0
  2276  0002F1                     	ds	2
  2277                           tblptru	equ	0xFF8
  2278                           tblptrh	equ	0xFF7
  2279                           tblptrl	equ	0xFF6
  2280                           tablat	equ	0xFF5
  2281                           postinc0	equ	0xFEE
  2282                           wreg	equ	0xFE8
  2283                           postdec1	equ	0xFE5
  2284                           fsr1h	equ	0xFE2
  2285                           fsr1l	equ	0xFE1
  2286                           
  2287                           	psect	dataBANK2
  2288  0002F3                     __pdataBANK2:
  2289                           	opt stack 0
  2290  0002F3                     Terminal@EchoOption:
  2291                           	opt stack 0
  2292  0002F3                     	ds	1
  2293  0002F4                     _MainSystemTimebaseFlag:
  2294                           	opt stack 0
  2295  0002F4                     	ds	1
  2296  0002F5                     _ConnTimeout:
  2297                           	opt stack 0
  2298  0002F5                     	ds	11
  2299                           tblptru	equ	0xFF8
  2300                           tblptrh	equ	0xFF7
  2301                           tblptrl	equ	0xFF6
  2302                           tablat	equ	0xFF5
  2303                           postinc0	equ	0xFEE
  2304                           wreg	equ	0xFE8
  2305                           postdec1	equ	0xFE5
  2306                           fsr1h	equ	0xFE2
  2307                           fsr1l	equ	0xFE1
  2308                           
  2309                           	psect	bssBANK3
  2310  000300                     __pbssBANK3:
  2311                           	opt stack 0
  2312  000300                     _Rtcm_SystemDate:
  2313                           	opt stack 0
  2314  000300                     	ds	8
  2315  000308                     _Rtcm_RtccAlarm:
  2316                           	opt stack 0
  2317  000308                     	ds	6
  2318  00030E                     _pBDTEntryOut:
  2319                           	opt stack 0
  2320  00030E                     	ds	6
  2321  000314                     _BaudRateGen:
  2322                           	opt stack 0
  2323  000314                     	ds	4
  2324  000318                     _USB1msTickCount:
  2325                           	opt stack 0
  2326  000318                     	ds	4
  2327  00031C                     _OsTmr_OsTickCounter:
  2328                           	opt stack 0
  2329  00031C                     	ds	4
  2330  000320                     	ds	2
  2331  000322                     _UsbMasterPhoneNumberLen:
  2332                           	opt stack 0
  2333  000322                     	ds	2
  2334  000324                     _ApnLocal:
  2335                           	opt stack 0
  2336  000324                     	ds	2
  2337  000326                     ConfigureModem@DelayCounter:
  2338                           	opt stack 0
  2339  000326                     	ds	2
  2340  000328                     _UartConfig:
  2341                           	opt stack 0
  2342  000328                     	ds	21
  2343  00033D                     I2cSlv_QueryI2cData@TimeoutTimer:
  2344                           	opt stack 0
  2345  00033D                     	ds	11
  2346  000348                     _I2cConfig:
  2347                           	opt stack 0
  2348  000348                     	ds	10
  2349  000352                     _Led3Blink:
  2350                           	opt stack 0
  2351  000352                     	ds	9
  2352  00035B                     _Led2Blink:
  2353                           	opt stack 0
  2354  00035B                     	ds	9
  2355  000364                     _Led1Blink:
  2356                           	opt stack 0
  2357  000364                     	ds	9
  2358  00036D                     _dummy_encapsulated_cmd_response:
  2359                           	opt stack 0
  2360  00036D                     	ds	8
  2361  000375                     _line_coding:
  2362                           	opt stack 0
  2363  000375                     	ds	7
  2364  00037C                     _Led3Pulse:
  2365                           	opt stack 0
  2366  00037C                     	ds	6
  2367  000382                     _Led2Pulse:
  2368                           	opt stack 0
  2369  000382                     	ds	6
  2370  000388                     _Led1Pulse:
  2371                           	opt stack 0
  2372  000388                     	ds	6
  2373  00038E                     _I2cRxPacket:
  2374                           	opt stack 0
  2375  00038E                     	ds	6
  2376  000394                     _memoryPreamble:
  2377                           	opt stack 0
  2378  000394                     	ds	5
  2379  000399                     _I2cTxPacket:
  2380                           	opt stack 0
  2381  000399                     	ds	5
  2382  00039E                     _HttpGetDataLocal:
  2383                           	opt stack 0
  2384  00039E                     	ds	5
  2385  0003A3                     Terminal@Addr:
  2386                           	opt stack 0
  2387  0003A3                     	ds	4
  2388  0003A7                     Terminal@Len:
  2389                           	opt stack 0
  2390  0003A7                     	ds	4
  2391  0003AB                     _AlCfg:
  2392                           	opt stack 0
  2393  0003AB                     	ds	4
  2394  0003AF                     _RtcConfig:
  2395                           	opt stack 0
  2396  0003AF                     	ds	4
  2397  0003B3                     _setupCallTicks:
  2398                           	opt stack 0
  2399  0003B3                     	ds	2
  2400  0003B5                     initGprsModem@modemCounter:
  2401                           	opt stack 0
  2402  0003B5                     	ds	2
  2403                           tblptru	equ	0xFF8
  2404                           tblptrh	equ	0xFF7
  2405                           tblptrl	equ	0xFF6
  2406                           tablat	equ	0xFF5
  2407                           postinc0	equ	0xFEE
  2408                           wreg	equ	0xFE8
  2409                           postdec1	equ	0xFE5
  2410                           fsr1h	equ	0xFE2
  2411                           fsr1l	equ	0xFE1
  2412                           
  2413                           	psect	dataBANK3
  2414  0003B7                     __pdataBANK3:
  2415                           	opt stack 0
  2416  0003B7                     ModemEvtParser@F9112:
  2417                           	opt stack 0
  2418  0003B7                     	ds	10
  2419  0003C1                     ModemEvtParser@F9110:
  2420                           	opt stack 0
  2421  0003C1                     	ds	5
  2422  0003C6                     ModemEvtParser@F9108:
  2423                           	opt stack 0
  2424  0003C6                     	ds	5
  2425  0003CB                     ModemEvtParser@F9106:
  2426                           	opt stack 0
  2427  0003CB                     	ds	4
  2428  0003CF                     MyApp_Task@F9034:
  2429                           	opt stack 0
  2430  0003CF                     	ds	3
  2431  0003D2                     triggerRelay@F9023:
  2432                           	opt stack 0
  2433  0003D2                     	ds	2
  2434  0003D4                     Term_MainSm@TermDelay:
  2435                           	opt stack 0
  2436  0003D4                     	ds	11
  2437  0003DF                     _ConnWait:
  2438                           	opt stack 0
  2439  0003DF                     	ds	11
  2440  0003EA                     SendSmsSm@SwTimer:
  2441                           	opt stack 0
  2442  0003EA                     	ds	11
  2443  0003F5                     CheckModem@Timeout:
  2444                           	opt stack 0
  2445  0003F5                     	ds	11
  2446                           tblptru	equ	0xFF8
  2447                           tblptrh	equ	0xFF7
  2448                           tblptrl	equ	0xFF6
  2449                           tablat	equ	0xFF5
  2450                           postinc0	equ	0xFEE
  2451                           wreg	equ	0xFE8
  2452                           postdec1	equ	0xFE5
  2453                           fsr1h	equ	0xFE2
  2454                           fsr1l	equ	0xFE1
  2455                           
  2456                           	psect	bssBANK4
  2457  000440                     __pbssBANK4:
  2458                           	opt stack 0
  2459  000440                     _UsbMasterPhoneNumber:
  2460                           	opt stack 0
  2461  000440                     	ds	15
  2462  00044F                     	ds	10
  2463  000459                     _cdc_notice:
  2464                           	opt stack 0
  2465  000459                     	ds	10
  2466  000463                     Term_MainSm@Data:
  2467                           	opt stack 0
  2468  000463                     	ds	50
  2469  000495                     _smsText:
  2470                           	opt stack 0
  2471  000495                     	ds	20
  2472  0004A9                     _PhoneNumber:
  2473                           	opt stack 0
  2474  0004A9                     	ds	20
  2475  0004BD                     _EepromBuffer:
  2476                           	opt stack 0
  2477  0004BD                     	ds	15
  2478  0004CC                     _callerNumber:
  2479                           	opt stack 0
  2480  0004CC                     	ds	13
  2481  0004D9                     Terminal@SwTimer:
  2482                           	opt stack 0
  2483  0004D9                     	ds	11
  2484  0004E4                     I2cSlv_QueryI2cData@QueryTimer:
  2485                           	opt stack 0
  2486  0004E4                     	ds	11
  2487                           tblptru	equ	0xFF8
  2488                           tblptrh	equ	0xFF7
  2489                           tblptrl	equ	0xFF6
  2490                           tablat	equ	0xFF5
  2491                           postinc0	equ	0xFEE
  2492                           wreg	equ	0xFE8
  2493                           postdec1	equ	0xFE5
  2494                           fsr1h	equ	0xFE2
  2495                           fsr1l	equ	0xFE1
  2496                           
  2497                           	psect	dataBANK4
  2498  0004EF                     __pdataBANK4:
  2499                           	opt stack 0
  2500  0004EF                     	ds	13
  2501                           tblptru	equ	0xFF8
  2502                           tblptrh	equ	0xFF7
  2503                           tblptrl	equ	0xFF6
  2504                           tablat	equ	0xFF5
  2505                           postinc0	equ	0xFEE
  2506                           wreg	equ	0xFE8
  2507                           postdec1	equ	0xFE5
  2508                           fsr1h	equ	0xFE2
  2509                           fsr1l	equ	0xFE1
  2510                           
  2511                           	psect	bssBANK5
  2512  000500                     __pbssBANK5:
  2513                           	opt stack 0
  2514  000500                     _cdc_data_rx:
  2515                           	opt stack 0
  2516  000500                     	ds	64
  2517  000540                     Terminal@TermRxBuffer:
  2518                           	opt stack 0
  2519  000540                     	ds	50
  2520  000572                     _MessageText:
  2521                           	opt stack 0
  2522  000572                     	ds	50
  2523                           tblptru	equ	0xFF8
  2524                           tblptrh	equ	0xFF7
  2525                           tblptrl	equ	0xFF6
  2526                           tablat	equ	0xFF5
  2527                           postinc0	equ	0xFEE
  2528                           wreg	equ	0xFE8
  2529                           postdec1	equ	0xFE5
  2530                           fsr1h	equ	0xFE2
  2531                           fsr1l	equ	0xFE1
  2532                           
  2533                           	psect	dataBANK5
  2534  0005A4                     __pdataBANK5:
  2535                           	opt stack 0
  2536  0005A4                     _TaskTable:
  2537                           	opt stack 0
  2538  0005A4                     	ds	80
  2539                           tblptru	equ	0xFF8
  2540                           tblptrh	equ	0xFF7
  2541                           tblptrl	equ	0xFF6
  2542                           tablat	equ	0xFF5
  2543                           postinc0	equ	0xFEE
  2544                           wreg	equ	0xFE8
  2545                           postdec1	equ	0xFE5
  2546                           fsr1h	equ	0xFE2
  2547                           fsr1l	equ	0xFE1
  2548                           
  2549                           	psect	bssBANK6
  2550  000600                     __pbssBANK6:
  2551                           	opt stack 0
  2552  000600                     _OsAlarms:
  2553                           	opt stack 0
  2554  000600                     	ds	220
  2555                           tblptru	equ	0xFF8
  2556                           tblptrh	equ	0xFF7
  2557                           tblptrl	equ	0xFF6
  2558                           tablat	equ	0xFF5
  2559                           postinc0	equ	0xFEE
  2560                           wreg	equ	0xFE8
  2561                           postdec1	equ	0xFE5
  2562                           fsr1h	equ	0xFE2
  2563                           fsr1l	equ	0xFE1
  2564                           
  2565                           	psect	bssBANK7
  2566  000700                     __pbssBANK7:
  2567                           	opt stack 0
  2568  000700                     _Mdm_SmsRx:
  2569                           	opt stack 0
  2570  000700                     	ds	102
  2571  000766                     Terminal@Payload:
  2572                           	opt stack 0
  2573  000766                     	ds	80
  2574  0007B6                     _cdc_data_tx:
  2575                           	opt stack 0
  2576  0007B6                     	ds	64
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           postinc0	equ	0xFEE
  2582                           wreg	equ	0xFE8
  2583                           postdec1	equ	0xFE5
  2584                           fsr1h	equ	0xFE2
  2585                           fsr1l	equ	0xFE1
  2586                           
  2587                           	psect	bssBANK8
  2588  000800                     __pbssBANK8:
  2589                           	opt stack 0
  2590  000800                     GsmGprsTerminal@UsbBuffer:
  2591                           	opt stack 0
  2592  000800                     	ds	200
  2593                           tblptru	equ	0xFF8
  2594                           tblptrh	equ	0xFF7
  2595                           tblptrl	equ	0xFF6
  2596                           tablat	equ	0xFF5
  2597                           postinc0	equ	0xFEE
  2598                           wreg	equ	0xFE8
  2599                           postdec1	equ	0xFE5
  2600                           fsr1h	equ	0xFE2
  2601                           fsr1l	equ	0xFE1
  2602                           
  2603                           	psect	bssBANK9
  2604  000900                     __pbssBANK9:
  2605                           	opt stack 0
  2606  000900                     GsmGprsTerminal@UartBuffer:
  2607                           	opt stack 0
  2608  000900                     	ds	200
  2609                           tblptru	equ	0xFF8
  2610                           tblptrh	equ	0xFF7
  2611                           tblptrl	equ	0xFF6
  2612                           tablat	equ	0xFF5
  2613                           postinc0	equ	0xFEE
  2614                           wreg	equ	0xFE8
  2615                           postdec1	equ	0xFE5
  2616                           fsr1h	equ	0xFE2
  2617                           fsr1l	equ	0xFE1
  2618                           
  2619                           	psect	bssBIGRAMl
  2620  000AC8                     __pbssBIGRAMl:
  2621                           	opt stack 0
  2622  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2623                           	opt stack 0
  2624  000AC8                     	ds	400
  2625  000C58                     _RxBuffer:
  2626                           	opt stack 0
  2627  000C58                     	ds	400
  2628                           tblptru	equ	0xFF8
  2629                           tblptrh	equ	0xFF7
  2630                           tblptrl	equ	0xFF6
  2631                           tablat	equ	0xFF5
  2632                           postinc0	equ	0xFEE
  2633                           wreg	equ	0xFE8
  2634                           postdec1	equ	0xFE5
  2635                           fsr1h	equ	0xFE2
  2636                           fsr1l	equ	0xFE1
  2637                           
  2638                           	psect	cstackBANK10
  2639  000A00                     __pcstackBANK10:
  2640                           	opt stack 0
  2641  000A00                     Terminal@UsbRxBuffer:
  2642                           	opt stack 0
  2643                           
  2644                           ; 200 bytes @ 0x0
  2645  000A00                     	ds	200
  2646                           tblptru	equ	0xFF8
  2647                           tblptrh	equ	0xFF7
  2648                           tblptrl	equ	0xFF6
  2649                           tablat	equ	0xFF5
  2650                           postinc0	equ	0xFEE
  2651                           wreg	equ	0xFE8
  2652                           postdec1	equ	0xFE5
  2653                           fsr1h	equ	0xFE2
  2654                           fsr1l	equ	0xFE1
  2655                           
  2656                           	psect	cstackBANK4
  2657  0004FC                     __pcstackBANK4:
  2658                           	opt stack 0
  2659  0004FC                     ??_InitializeTasks:
  2660  0004FC                     ??_ScheduleTasks:
  2661                           
  2662                           ; 1 bytes @ 0x0
  2663  0004FC                     	ds	4
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           postinc0	equ	0xFEE
  2669                           wreg	equ	0xFE8
  2670                           postdec1	equ	0xFE5
  2671                           fsr1h	equ	0xFE2
  2672                           fsr1l	equ	0xFE1
  2673                           
  2674                           	psect	cstackBANK2
  2675  000200                     __pcstackBANK2:
  2676                           	opt stack 0
  2677  000200                     Terminal@UsbTxBuffer:
  2678                           	opt stack 0
  2679                           
  2680                           ; 200 bytes @ 0x0
  2681  000200                     	ds	200
  2682  0002C8                     InitializeTasks@ActiveTaskIndex:
  2683                           	opt stack 0
  2684  0002C8                     ScheduleTasks@ActiveTaskIndex:
  2685                           	opt stack 0
  2686                           
  2687                           ; 1 bytes @ 0xC8
  2688  0002C8                     	ds	1
  2689                           tblptru	equ	0xFF8
  2690                           tblptrh	equ	0xFF7
  2691                           tblptrl	equ	0xFF6
  2692                           tablat	equ	0xFF5
  2693                           postinc0	equ	0xFEE
  2694                           wreg	equ	0xFE8
  2695                           postdec1	equ	0xFE5
  2696                           fsr1h	equ	0xFE2
  2697                           fsr1l	equ	0xFE1
  2698                           
  2699                           	psect	cstackBANK1
  2700  000100                     __pcstackBANK1:
  2701                           	opt stack 0
  2702  000100                     initEeprom@addressToRead:
  2703                           	opt stack 0
  2704  000100                     isNumberInMemory@phoneNumber:
  2705                           	opt stack 0
  2706  000100                     SendSmsSm@UartMessage:
  2707                           	opt stack 0
  2708  000100                     InitGprsNetwork@UartMessage:
  2709                           	opt stack 0
  2710  000100                     Terminal@TermTxBuffer:
  2711                           	opt stack 0
  2712  000100                     HttpGetMethod@UartMessage:
  2713                           	opt stack 0
  2714                           
  2715                           ; 200 bytes @ 0x0
  2716  000100                     	ds	1
  2717  000101                     initEeprom@memoryOpResult:
  2718                           	opt stack 0
  2719                           
  2720                           ; 1 bytes @ 0x1
  2721  000101                     	ds	1
  2722  000102                     initEeprom@isInitialized:
  2723                           	opt stack 0
  2724  000102                     isNumberInMemory@readBuffer:
  2725                           	opt stack 0
  2726                           
  2727                           ; 13 bytes @ 0x2
  2728  000102                     	ds	1
  2729  000103                     initFsm@isInitialized:
  2730                           	opt stack 0
  2731                           
  2732                           ; 1 bytes @ 0x3
  2733  000103                     	ds	12
  2734  00010F                     isNumberInMemory@searchFailed:
  2735                           	opt stack 0
  2736                           
  2737                           ; 1 bytes @ 0xF
  2738  00010F                     	ds	1
  2739  000110                     isNumberInMemory@searchInProgress:
  2740                           	opt stack 0
  2741                           
  2742                           ; 1 bytes @ 0x10
  2743  000110                     	ds	1
  2744  000111                     isNumberInMemory@positionInMemory:
  2745                           	opt stack 0
  2746                           
  2747                           ; 1 bytes @ 0x11
  2748  000111                     	ds	1
  2749  000112                     isNumberInMemory@memoryOpResult:
  2750                           	opt stack 0
  2751                           
  2752                           ; 1 bytes @ 0x12
  2753  000112                     	ds	1
  2754  000113                     MyApp_Task@emptyNumber:
  2755                           	opt stack 0
  2756                           
  2757                           ; 13 bytes @ 0x13
  2758  000113                     	ds	13
  2759  000120                     MyApp_Task@cmpString:
  2760                           	opt stack 0
  2761                           
  2762                           ; 3 bytes @ 0x20
  2763  000120                     	ds	3
  2764  000123                     MyApp_Task@cmdAddNumber:
  2765                           	opt stack 0
  2766                           
  2767                           ; 4 bytes @ 0x23
  2768  000123                     	ds	4
  2769  000127                     MyApp_Task@memoryResult:
  2770                           	opt stack 0
  2771                           
  2772                           ; 1 bytes @ 0x27
  2773  000127                     	ds	1
  2774  000128                     MyApp_Task@numberInMemory:
  2775                           	opt stack 0
  2776                           
  2777                           ; 1 bytes @ 0x28
  2778  000128                     	ds	10
  2779  000132                     InitGprsNetwork@Index:
  2780                           	opt stack 0
  2781  000132                     Term_MainSm@FwkMajorStr:
  2782                           	opt stack 0
  2783                           
  2784                           ; 4 bytes @ 0x32
  2785  000132                     	ds	4
  2786  000136                     Term_MainSm@FwkMinorStr:
  2787                           	opt stack 0
  2788                           
  2789                           ; 4 bytes @ 0x36
  2790  000136                     	ds	4
  2791  00013A                     Term_MainSm@FwkBuildStr:
  2792                           	opt stack 0
  2793                           
  2794                           ; 4 bytes @ 0x3A
  2795  00013A                     	ds	142
  2796  0001C8                     HttpGetMethod@Index:
  2797                           	opt stack 0
  2798                           
  2799                           ; 1 bytes @ 0xC8
  2800  0001C8                     	ds	1
  2801                           tblptru	equ	0xFF8
  2802                           tblptrh	equ	0xFF7
  2803                           tblptrl	equ	0xFF6
  2804                           tablat	equ	0xFF5
  2805                           postinc0	equ	0xFEE
  2806                           wreg	equ	0xFE8
  2807                           postdec1	equ	0xFE5
  2808                           fsr1h	equ	0xFE2
  2809                           fsr1l	equ	0xFE1
  2810                           
  2811                           	psect	cstackBANK0
  2812  000060                     __pcstackBANK0:
  2813                           	opt stack 0
  2814  000060                     
  2815                           ; 1 bytes @ 0x0
  2816  000060                     	ds	8
  2817  000068                     ??_LowPriorityIsr:
  2818                           
  2819                           ; 1 bytes @ 0x8
  2820  000068                     	ds	21
  2821  00007D                     ??_isdigit:
  2822  00007D                     ??_isspace:
  2823  00007D                     ??_isupper:
  2824  00007D                     ??_Rtcc_GetRtccValue:
  2825  00007D                     ??_UartTxBufferStatus:
  2826  00007D                     ??_USBStdGetDscHandler:
  2827  00007D                     ??_USBStdGetStatusHandler:
  2828  00007D                     ?_USBTransferOnePacket:
  2829                           	opt stack 0
  2830  00007D                     ?_strlen:
  2831                           	opt stack 0
  2832  00007D                     ?_sprintf:
  2833                           	opt stack 0
  2834  00007D                     ?_initPreamble:
  2835                           	opt stack 0
  2836  00007D                     ?___wmul:
  2837                           	opt stack 0
  2838  00007D                     ?___awdiv:
  2839                           	opt stack 0
  2840  00007D                     ?___awmod:
  2841                           	opt stack 0
  2842  00007D                     ?___lwmod:
  2843                           	opt stack 0
  2844  00007D                     ?_GetOsTickCounter:
  2845                           	opt stack 0
  2846  00007D                     ?___lmul:
  2847                           	opt stack 0
  2848  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2849                           	opt stack 0
  2850  00007D                     SetAckStatus@AckSts:
  2851                           	opt stack 0
  2852  00007D                     WriteByte@Byte:
  2853                           	opt stack 0
  2854  00007D                     ReadByte@Byte:
  2855                           	opt stack 0
  2856  00007D                     Mcu_SetWdgSts@WdgSts:
  2857                           	opt stack 0
  2858  00007D                     RtccIrqInit@Priority:
  2859                           	opt stack 0
  2860  00007D                     Rtcc_SetRtcStatus@Status:
  2861                           	opt stack 0
  2862  00007D                     TmrBInit@Prescaler:
  2863                           	opt stack 0
  2864  00007D                     Tmr_TmrBIrqSet@Priority:
  2865                           	opt stack 0
  2866  00007D                     Tmr_StartTmr@TmrNumb:
  2867                           	opt stack 0
  2868  00007D                     UartWriteByte@ByteToWrite:
  2869                           	opt stack 0
  2870  00007D                     USBTransferOnePacket@dir:
  2871                           	opt stack 0
  2872  00007D                     USBConfigureEndpoint@direction:
  2873                           	opt stack 0
  2874  00007D                     USBCtrlTrfTxService@byteToSend:
  2875                           	opt stack 0
  2876  00007D                     USBCtrlTrfRxService@i:
  2877                           	opt stack 0
  2878  00007D                     Led_SetLedStatus@LedSts:
  2879                           	opt stack 0
  2880  00007D                     toupper@c:
  2881                           	opt stack 0
  2882  00007D                     tolower@c:
  2883                           	opt stack 0
  2884  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2885                           	opt stack 0
  2886  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2887                           	opt stack 0
  2888  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2889                           	opt stack 0
  2890  00007D                     Uart_ClearRxBuffer@Index:
  2891                           	opt stack 0
  2892  00007D                     GenerateEvt@Event:
  2893                           	opt stack 0
  2894  00007D                     ReceiveEvt@Event:
  2895                           	opt stack 0
  2896  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2897                           	opt stack 0
  2898  00007D                     StringCompare@String1:
  2899                           	opt stack 0
  2900  00007D                     StringCopy@SourceStr:
  2901                           	opt stack 0
  2902  00007D                     ClearBuffer@Buffer:
  2903                           	opt stack 0
  2904  00007D                     isNumberValid@phoneNumber:
  2905                           	opt stack 0
  2906  00007D                     sprintf@sp:
  2907                           	opt stack 0
  2908  00007D                     ___wmul@multiplier:
  2909                           	opt stack 0
  2910  00007D                     ___awdiv@dividend:
  2911                           	opt stack 0
  2912  00007D                     ___awmod@dividend:
  2913                           	opt stack 0
  2914  00007D                     ___lwmod@dividend:
  2915                           	opt stack 0
  2916  00007D                     memcpy@d1:
  2917                           	opt stack 0
  2918  00007D                     memset@p1:
  2919                           	opt stack 0
  2920  00007D                     strcat@to:
  2921                           	opt stack 0
  2922  00007D                     strcpy@to:
  2923                           	opt stack 0
  2924  00007D                     strlen@s:
  2925                           	opt stack 0
  2926  00007D                     ___lmul@multiplier:
  2927                           	opt stack 0
  2928                           
  2929                           ; 4 bytes @ 0x1D
  2930  00007D                     	ds	1
  2931  00007E                     ??_USBConfigureEndpoint:
  2932  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2933                           	opt stack 0
  2934  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2935                           	opt stack 0
  2936  00007E                     TmrBInit@Postscaler:
  2937                           	opt stack 0
  2938  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2939                           	opt stack 0
  2940  00007E                     UartWriteByte@Module:
  2941                           	opt stack 0
  2942  00007E                     UartTxBufferStatus@Module:
  2943                           	opt stack 0
  2944  00007E                     USBCtrlTrfRxService@byteToRead:
  2945                           	opt stack 0
  2946  00007E                     USBCtrlTrfInHandler@lastDTS:
  2947                           	opt stack 0
  2948  00007E                     Led_SetLedStatus@Led:
  2949                           	opt stack 0
  2950  00007E                     _isdigit$6348:
  2951                           	opt stack 0
  2952  00007E                     _isspace$6617:
  2953                           	opt stack 0
  2954  00007E                     _isupper$6620:
  2955                           	opt stack 0
  2956  00007E                     I2c_WriteData@WritePacket:
  2957                           	opt stack 0
  2958  00007E                     Rtcc_RtcConfig@RtcConfig:
  2959                           	opt stack 0
  2960  00007E                     USBTransferOnePacket@data:
  2961                           	opt stack 0
  2962  00007E                     USBStdGetStatusHandler@p:
  2963                           	opt stack 0
  2964                           
  2965                           ; 2 bytes @ 0x1E
  2966  00007E                     	ds	1
  2967  00007F                     ??_strlen:
  2968  00007F                     ??_Rtcc_AlarmConfig:
  2969  00007F                     ??_TmrBInit:
  2970  00007F                     Irq_InitIntController@IntPriorityEn:
  2971                           	opt stack 0
  2972  00007F                     Rtcc_GetRtccValue@RetValue:
  2973                           	opt stack 0
  2974  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2975                           	opt stack 0
  2976  00007F                     UartTxBufferStatus@TxBufferStatus:
  2977                           	opt stack 0
  2978  00007F                     GenerateEvt@EventStatus:
  2979                           	opt stack 0
  2980  00007F                     isdigit@c:
  2981                           	opt stack 0
  2982  00007F                     isspace@c:
  2983                           	opt stack 0
  2984  00007F                     isupper@c:
  2985                           	opt stack 0
  2986  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2987                           	opt stack 0
  2988  00007F                     StringCompare@String2:
  2989                           	opt stack 0
  2990  00007F                     StringCopy@DestStr:
  2991                           	opt stack 0
  2992  00007F                     ClearBuffer@Len:
  2993                           	opt stack 0
  2994  00007F                     sprintf@f:
  2995                           	opt stack 0
  2996  00007F                     ___wmul@multiplicand:
  2997                           	opt stack 0
  2998  00007F                     ___awdiv@divisor:
  2999                           	opt stack 0
  3000  00007F                     ___awmod@divisor:
  3001                           	opt stack 0
  3002  00007F                     ___lwmod@divisor:
  3003                           	opt stack 0
  3004  00007F                     memcpy@s1:
  3005                           	opt stack 0
  3006  00007F                     memset@c:
  3007                           	opt stack 0
  3008  00007F                     strcat@from:
  3009                           	opt stack 0
  3010  00007F                     strcpy@from:
  3011                           	opt stack 0
  3012                           
  3013                           ; 2 bytes @ 0x1F
  3014  00007F                     	ds	1
  3015  000080                     ??_isalpha:
  3016  000080                     ??_isxdigit:
  3017  000080                     ??_I2c_WriteData:
  3018  000080                     ??_Rtcc_RtcConfig:
  3019  000080                     Rtcc_GetRtccValue@RegValue:
  3020                           	opt stack 0
  3021  000080                     TmrBInit@TmrNumb:
  3022                           	opt stack 0
  3023  000080                     ReceiveEvt@EventStatus:
  3024                           	opt stack 0
  3025  000080                     USBTransferOnePacket@len:
  3026                           	opt stack 0
  3027  000080                     isNumberValid@isNumberOk:
  3028                           	opt stack 0
  3029  000080                     I2c_ReadData@ReadPacket:
  3030                           	opt stack 0
  3031  000080                     Uart_WriteConstString@ConstStringToWrite:
  3032                           	opt stack 0
  3033  000080                     Uart_WriteString@StringToWrite:
  3034                           	opt stack 0
  3035  000080                     Uart_WriteStringLen@StringToWrite:
  3036                           	opt stack 0
  3037  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3038                           	opt stack 0
  3039  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3040                           	opt stack 0
  3041                           
  3042                           ; 2 bytes @ 0x20
  3043  000080                     	ds	1
  3044  000081                     ?_GetElapsedTime:
  3045                           	opt stack 0
  3046  000081                     ?_Rtcm_GetRtccDate:
  3047                           	opt stack 0
  3048  000081                     Mdm_IsSmsReceived@Ret:
  3049                           	opt stack 0
  3050  000081                     Mdm_IsRinging@Ret:
  3051                           	opt stack 0
  3052  000081                     I2cSlv_I2cReadMsgSts@Result:
  3053                           	opt stack 0
  3054  000081                     USBTransferOnePacket@ep:
  3055                           	opt stack 0
  3056  000081                     Led_SetLedBlinkTime@Led:
  3057                           	opt stack 0
  3058  000081                     isNumberValid@i:
  3059                           	opt stack 0
  3060  000081                     ___awdiv@counter:
  3061                           	opt stack 0
  3062  000081                     ___awmod@counter:
  3063                           	opt stack 0
  3064  000081                     ___lwmod@counter:
  3065                           	opt stack 0
  3066  000081                     _isalpha$6614:
  3067                           	opt stack 0
  3068  000081                     _isxdigit$6624:
  3069                           	opt stack 0
  3070  000081                     OsTmr_StartTimer@Timer:
  3071                           	opt stack 0
  3072  000081                     StringCompare@Len:
  3073                           	opt stack 0
  3074  000081                     StringCopy@Len:
  3075                           	opt stack 0
  3076  000081                     ClearBuffer@Index:
  3077                           	opt stack 0
  3078  000081                     ___wmul@product:
  3079                           	opt stack 0
  3080  000081                     memcpy@n:
  3081                           	opt stack 0
  3082  000081                     memset@n:
  3083                           	opt stack 0
  3084  000081                     strcat@cp:
  3085                           	opt stack 0
  3086  000081                     strcpy@cp:
  3087                           	opt stack 0
  3088  000081                     strlen@cp:
  3089                           	opt stack 0
  3090  000081                     GetElapsedTime@StartTime:
  3091                           	opt stack 0
  3092  000081                     ___lmul@multiplicand:
  3093                           	opt stack 0
  3094                           
  3095                           ; 4 bytes @ 0x21
  3096  000081                     	ds	1
  3097  000082                     ??_I2c_ReadData:
  3098  000082                     Uart_WriteConstString@Module:
  3099                           	opt stack 0
  3100  000082                     Uart_WriteString@Module:
  3101                           	opt stack 0
  3102  000082                     Uart_WriteStringLen@Len:
  3103                           	opt stack 0
  3104  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3105                           	opt stack 0
  3106  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3107                           	opt stack 0
  3108  000082                     USBConfigureEndpoint@EPNum:
  3109                           	opt stack 0
  3110  000082                     ___awdiv@sign:
  3111                           	opt stack 0
  3112  000082                     ___awmod@sign:
  3113                           	opt stack 0
  3114  000082                     isalpha@c:
  3115                           	opt stack 0
  3116  000082                     isxdigit@c:
  3117                           	opt stack 0
  3118  000082                     USBTransferOnePacket@handle:
  3119                           	opt stack 0
  3120                           
  3121                           ; 2 bytes @ 0x22
  3122  000082                     	ds	1
  3123  000083                     ??_StringCopy:
  3124  000083                     ?_GetCallerNumber:
  3125                           	opt stack 0
  3126  000083                     ?_atoi:
  3127                           	opt stack 0
  3128  000083                     ?_xtoi:
  3129                           	opt stack 0
  3130  000083                     ?___lwdiv:
  3131                           	opt stack 0
  3132  000083                     Uart_WriteStringLen@Index:
  3133                           	opt stack 0
  3134  000083                     Mdm_SetSmsFormat@Index:
  3135                           	opt stack 0
  3136  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3137                           	opt stack 0
  3138  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3139                           	opt stack 0
  3140  000083                     getSetupCall@isCalledReceived:
  3141                           	opt stack 0
  3142  000083                     sprintf@flag:
  3143                           	opt stack 0
  3144  000083                     memcpy@tmp:
  3145                           	opt stack 0
  3146  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3147                           	opt stack 0
  3148  000083                     USBConfigureEndpoint@handle:
  3149                           	opt stack 0
  3150  000083                     putUSBUSART@data:
  3151                           	opt stack 0
  3152  000083                     atoi@s:
  3153                           	opt stack 0
  3154  000083                     ___awdiv@quotient:
  3155                           	opt stack 0
  3156  000083                     ___lwdiv@dividend:
  3157                           	opt stack 0
  3158  000083                     memset@p:
  3159                           	opt stack 0
  3160  000083                     xtoi@s:
  3161                           	opt stack 0
  3162  000083                     OsTmr_StartTimer@Timeout:
  3163                           	opt stack 0
  3164                           
  3165                           ; 4 bytes @ 0x23
  3166  000083                     	ds	1
  3167  000084                     Uart_WriteStringLen@Module:
  3168                           	opt stack 0
  3169  000084                     I2cSlv_SendI2cMsg@TxSts:
  3170                           	opt stack 0
  3171  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3172                           	opt stack 0
  3173  000084                     CDCTxService@i:
  3174                           	opt stack 0
  3175  000084                     getsUSBUSART@buffer:
  3176                           	opt stack 0
  3177  000084                     sprintf@ap:
  3178                           	opt stack 0
  3179  000084                     memcpy@d:
  3180                           	opt stack 0
  3181  000084                     Mdm_SetSmsFormat@UartMessage:
  3182                           	opt stack 0
  3183                           
  3184                           ; 20 bytes @ 0x24
  3185  000084                     	ds	1
  3186  000085                     ??_atoi:
  3187  000085                     ??_xtoi:
  3188  000085                     ??_GetElapsedTime:
  3189  000085                     Rtcc_SetRtccValue@Value:
  3190                           	opt stack 0
  3191  000085                     USBDeviceInit@i:
  3192                           	opt stack 0
  3193  000085                     USBEnableEndpoint@options:
  3194                           	opt stack 0
  3195  000085                     putUSBUSART@length:
  3196                           	opt stack 0
  3197  000085                     CDCTxService@byte_to_send:
  3198                           	opt stack 0
  3199  000085                     StringCompare@Result:
  3200                           	opt stack 0
  3201  000085                     StringCopy@Index:
  3202                           	opt stack 0
  3203  000085                     ___lwdiv@divisor:
  3204                           	opt stack 0
  3205  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3206                           	opt stack 0
  3207  000085                     ___lmul@product:
  3208                           	opt stack 0
  3209                           
  3210                           ; 4 bytes @ 0x25
  3211  000085                     	ds	1
  3212  000086                     ??_Rtcc_SetRtccValue:
  3213  000086                     getsUSBUSART@len:
  3214                           	opt stack 0
  3215  000086                     sprintf@c:
  3216                           	opt stack 0
  3217  000086                     USBEnableEndpoint@p:
  3218                           	opt stack 0
  3219  000086                     StringCompare@Index:
  3220                           	opt stack 0
  3221  000086                     memcpy@s:
  3222                           	opt stack 0
  3223                           
  3224                           ; 2 bytes @ 0x26
  3225  000086                     	ds	1
  3226  000087                     atoi@sign:
  3227                           	opt stack 0
  3228  000087                     ___lwdiv@counter:
  3229                           	opt stack 0
  3230  000087                     xtoi@sign:
  3231                           	opt stack 0
  3232  000087                     Mdm_GetSmsData@MessageText:
  3233                           	opt stack 0
  3234  000087                     Eeprom_Write@WriteBuffer:
  3235                           	opt stack 0
  3236  000087                     sprintf@cp:
  3237                           	opt stack 0
  3238                           
  3239                           ; 2 bytes @ 0x27
  3240  000087                     	ds	1
  3241  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3242                           	opt stack 0
  3243  000088                     USBEnableEndpoint@ep:
  3244                           	opt stack 0
  3245  000088                     parseCommand@text:
  3246                           	opt stack 0
  3247  000088                     atoi@a:
  3248                           	opt stack 0
  3249  000088                     ___lwdiv@quotient:
  3250                           	opt stack 0
  3251  000088                     xtoi@val:
  3252                           	opt stack 0
  3253  000088                     ModemEvtParser@CallReadyString:
  3254                           	opt stack 0
  3255                           
  3256                           ; 10 bytes @ 0x28
  3257  000088                     	ds	1
  3258  000089                     ??_Rtcm_GetRtccDate:
  3259  000089                     ?_strtol:
  3260                           	opt stack 0
  3261  000089                     ?___lldiv:
  3262                           	opt stack 0
  3263  000089                     Mdm_GetSmsData@GetSmsStatus:
  3264                           	opt stack 0
  3265  000089                     Eeprom_Write@DataLength:
  3266                           	opt stack 0
  3267  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3268                           	opt stack 0
  3269  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3270                           	opt stack 0
  3271  000089                     strtol@s:
  3272                           	opt stack 0
  3273  000089                     ___lldiv@dividend:
  3274                           	opt stack 0
  3275  000089                     Rtcm_SetRtccDate@Date:
  3276                           	opt stack 0
  3277                           
  3278                           ; 8 bytes @ 0x29
  3279  000089                     	ds	1
  3280  00008A                     Eeprom_Write@WriteSts:
  3281                           	opt stack 0
  3282  00008A                     xtoi@c:
  3283                           	opt stack 0
  3284  00008A                     LedBlinkStateMachine@LedBlink:
  3285                           	opt stack 0
  3286  00008A                     LedPulseStateMachine@LedPulse:
  3287                           	opt stack 0
  3288  00008A                     secondsAppTimer@counter:
  3289                           	opt stack 0
  3290  00008A                     utoa@buf:
  3291                           	opt stack 0
  3292  00008A                     parseCommand@addNumberCmd:
  3293                           	opt stack 0
  3294  00008A                     Rtcm_GetRtccDate@LocalDate:
  3295                           	opt stack 0
  3296                           
  3297                           ; 8 bytes @ 0x2A
  3298  00008A                     	ds	1
  3299  00008B                     Eeprom_Write@MemoryAddress:
  3300                           	opt stack 0
  3301  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3302                           	opt stack 0
  3303  00008B                     strtol@endptr:
  3304                           	opt stack 0
  3305                           
  3306                           ; 2 bytes @ 0x2B
  3307  00008B                     	ds	1
  3308  00008C                     Eeprom_Write@SlaveAddress:
  3309                           	opt stack 0
  3310  00008C                     LedPulseStateMachine@Led:
  3311                           	opt stack 0
  3312  00008C                     secondsAppTimer@isCyclic:
  3313                           	opt stack 0
  3314  00008C                     utoa@val:
  3315                           	opt stack 0
  3316                           
  3317                           ; 2 bytes @ 0x2C
  3318  00008C                     	ds	1
  3319  00008D                     Eeprom_Write@CommandLength:
  3320                           	opt stack 0
  3321  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3322                           	opt stack 0
  3323  00008D                     strtol@base:
  3324                           	opt stack 0
  3325  00008D                     parseCommand@deleteNumberCmd:
  3326                           	opt stack 0
  3327  00008D                     GetElapsedTime@TimeValue:
  3328                           	opt stack 0
  3329  00008D                     ___lldiv@divisor:
  3330                           	opt stack 0
  3331                           
  3332                           ; 4 bytes @ 0x2D
  3333  00008D                     	ds	1
  3334  00008E                     saveNumberInMemory@phoneNumber:
  3335                           	opt stack 0
  3336  00008E                     utoa@base:
  3337                           	opt stack 0
  3338                           
  3339                           ; 2 bytes @ 0x2E
  3340  00008E                     	ds	1
  3341  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3342  00008F                     ??_strtol:
  3343  00008F                     secondsAppTimer@seconds:
  3344                           	opt stack 0
  3345  00008F                     LedStateMachine@LedSts:
  3346                           	opt stack 0
  3347                           
  3348                           ; 2 bytes @ 0x2F
  3349  00008F                     	ds	1
  3350  000090                     parseCommand@state:
  3351                           	opt stack 0
  3352  000090                     secondsAppTimer@isExpired:
  3353                           	opt stack 0
  3354  000090                     saveNumberInMemory@address:
  3355                           	opt stack 0
  3356  000090                     utoa@v:
  3357                           	opt stack 0
  3358                           
  3359                           ; 2 bytes @ 0x30
  3360  000090                     	ds	1
  3361  000091                     ??_USBStdFeatureReqHandler:
  3362  000091                     USBStdSetCfgHandler@i:
  3363                           	opt stack 0
  3364  000091                     LedStateMachine@LedOut:
  3365                           	opt stack 0
  3366  000091                     secondsAppTimer@destinationTicks:
  3367                           	opt stack 0
  3368  000091                     GetElapsedTime@CurrentTimestamp:
  3369                           	opt stack 0
  3370  000091                     ___lldiv@quotient:
  3371                           	opt stack 0
  3372                           
  3373                           ; 4 bytes @ 0x31
  3374  000091                     	ds	1
  3375  000092                     utoa@c:
  3376                           	opt stack 0
  3377  000092                     USBStdFeatureReqHandler@pUEP:
  3378                           	opt stack 0
  3379  000092                     ModemEvtParser@ClipString:
  3380                           	opt stack 0
  3381                           
  3382                           ; 5 bytes @ 0x32
  3383  000092                     	ds	1
  3384  000093                     waitSetupCall@isCallArrived:
  3385                           	opt stack 0
  3386  000093                     strtol@sign:
  3387                           	opt stack 0
  3388  000093                     LedStateMachine@LedBlink:
  3389                           	opt stack 0
  3390  000093                     itoa@buf:
  3391                           	opt stack 0
  3392                           
  3393                           ; 2 bytes @ 0x33
  3394  000093                     	ds	1
  3395  000094                     USBStdFeatureReqHandler@current_ep_data:
  3396                           	opt stack 0
  3397  000094                     strtol@a:
  3398                           	opt stack 0
  3399                           
  3400                           ; 4 bytes @ 0x34
  3401  000094                     	ds	1
  3402  000095                     ___lldiv@counter:
  3403                           	opt stack 0
  3404  000095                     OsTmr_GetTimerStatus@Timer:
  3405                           	opt stack 0
  3406  000095                     USBStdFeatureReqHandler@p:
  3407                           	opt stack 0
  3408  000095                     LedStateMachine@LedPulse:
  3409                           	opt stack 0
  3410  000095                     itoa@val:
  3411                           	opt stack 0
  3412                           
  3413                           ; 2 bytes @ 0x35
  3414  000095                     	ds	1
  3415  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3416                           	opt stack 0
  3417  000096                     SetUartBaudRate@UartConfig:
  3418                           	opt stack 0
  3419  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3420                           	opt stack 0
  3421                           
  3422                           ; 4 bytes @ 0x36
  3423  000096                     	ds	1
  3424  000097                     ??_USBCtrlEPService:
  3425  000097                     itoa@base:
  3426                           	opt stack 0
  3427  000097                     ModemEvtParser@SmsString:
  3428                           	opt stack 0
  3429                           
  3430                           ; 5 bytes @ 0x37
  3431  000097                     	ds	1
  3432  000098                     Tmr_TmrBPrSet@Prescaler:
  3433                           	opt stack 0
  3434  000098                     Mdm_SetSmsFormat@TextFormat:
  3435                           	opt stack 0
  3436  000098                     USBDeviceTasks@i:
  3437                           	opt stack 0
  3438  000098                     LedStateMachine@LedOutSts:
  3439                           	opt stack 0
  3440  000098                     strtol@c:
  3441                           	opt stack 0
  3442                           
  3443                           ; 1 bytes @ 0x38
  3444  000098                     	ds	1
  3445  000099                     Tmr_TmrBPrSet@Postscaler:
  3446                           	opt stack 0
  3447  000099                     SetUartBaudRate@Module:
  3448                           	opt stack 0
  3449  000099                     LedStateMachine@Led:
  3450                           	opt stack 0
  3451  000099                     initGprsModem@isInitialized:
  3452                           	opt stack 0
  3453  000099                     itoa@cp:
  3454                           	opt stack 0
  3455                           
  3456                           ; 2 bytes @ 0x39
  3457  000099                     	ds	1
  3458  00009A                     ??_Led_MainTask:
  3459  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3460                           	opt stack 0
  3461  00009A                     SetUartBaudRate@BaudRateRegister:
  3462                           	opt stack 0
  3463  00009A                     SetBaudRate@McuClockHz:
  3464                           	opt stack 0
  3465                           
  3466                           ; 4 bytes @ 0x3A
  3467  00009A                     	ds	1
  3468  00009B                     ??_SendSmsSm:
  3469  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3470                           	opt stack 0
  3471  00009B                     OsTmr_Wait@WaitTimer:
  3472                           	opt stack 0
  3473  00009B                     InitGprsNetwork@Apn:
  3474                           	opt stack 0
  3475  00009B                     HttpGetMethod@GetData:
  3476                           	opt stack 0
  3477                           
  3478                           ; 2 bytes @ 0x3B
  3479  00009B                     	ds	1
  3480  00009C                     SetUartBaudRate@DivisionFactor:
  3481                           	opt stack 0
  3482  00009C                     Tmr_TmrBPrSet@Divisor:
  3483                           	opt stack 0
  3484  00009C                     ModemEvtParser@RingString:
  3485                           	opt stack 0
  3486                           
  3487                           ; 4 bytes @ 0x3C
  3488  00009C                     	ds	1
  3489  00009D                     ??_HttpGetMethod:
  3490  00009D                     InitGprsNetwork@ApnLen:
  3491                           	opt stack 0
  3492  00009D                     Uart_InitUartModule@UartConfig:
  3493                           	opt stack 0
  3494  00009D                     OsTmr_Wait@DelayMs:
  3495                           	opt stack 0
  3496                           
  3497                           ; 4 bytes @ 0x3D
  3498  00009D                     	ds	1
  3499  00009E                     ??_SetBaudRate:
  3500  00009E                     ??_InitGprsNetwork:
  3501                           
  3502                           ; 1 bytes @ 0x3E
  3503  00009E                     	ds	1
  3504  00009F                     ??_Uart_InitUartModule:
  3505                           
  3506                           ; 1 bytes @ 0x3F
  3507  00009F                     	ds	1
  3508  0000A0                     ModemEvtParser@Match:
  3509                           	opt stack 0
  3510  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3511                           	opt stack 0
  3512                           
  3513                           ; 2 bytes @ 0x40
  3514  0000A0                     	ds	1
  3515  0000A1                     Uart_InitUartModule@Module:
  3516                           	opt stack 0
  3517  0000A1                     OsTmr_Wait@Ret:
  3518                           	opt stack 0
  3519  0000A1                     ModemEvtParser@CompareIdx:
  3520                           	opt stack 0
  3521                           
  3522                           ; 1 bytes @ 0x41
  3523  0000A1                     	ds	1
  3524  0000A2                     ??_Terminal:
  3525  0000A2                     I2c_InitI2cModule@I2cConfig:
  3526                           	opt stack 0
  3527  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3528                           	opt stack 0
  3529                           
  3530                           ; 2 bytes @ 0x42
  3531  0000A2                     	ds	1
  3532  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3533                           	opt stack 0
  3534                           
  3535                           ; 1 bytes @ 0x43
  3536  0000A3                     	ds	1
  3537  0000A4                     ??_I2c_InitI2cModule:
  3538  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3539                           	opt stack 0
  3540  0000A4                     Terminal@i:
  3541                           	opt stack 0
  3542  0000A4                     InitSchedTimer@TmrBConfig:
  3543                           	opt stack 0
  3544                           
  3545                           ; 7 bytes @ 0x44
  3546  0000A4                     	ds	1
  3547  0000A5                     Terminal@ReceivedBytes:
  3548                           	opt stack 0
  3549  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3550                           	opt stack 0
  3551                           
  3552                           ; 2 bytes @ 0x45
  3553  0000A5                     	ds	1
  3554  0000A6                     Terminal@Index:
  3555                           	opt stack 0
  3556                           
  3557                           ; 1 bytes @ 0x46
  3558  0000A6                     	ds	1
  3559  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3560                           	opt stack 0
  3561                           
  3562                           ; 1 bytes @ 0x47
  3563  0000A7                     	ds	1
  3564  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3565                           	opt stack 0
  3566                           
  3567                           ; 1 bytes @ 0x48
  3568  0000A8                     	ds	1
  3569  0000A9                     Eeprom_Read@ReadBuffer:
  3570                           	opt stack 0
  3571                           
  3572                           ; 2 bytes @ 0x49
  3573  0000A9                     	ds	2
  3574  0000AB                     Eeprom_Read@DataLength:
  3575                           	opt stack 0
  3576                           
  3577                           ; 1 bytes @ 0x4B
  3578  0000AB                     	ds	1
  3579  0000AC                     Eeprom_Read@MemoryAddress:
  3580                           	opt stack 0
  3581                           
  3582                           ; 1 bytes @ 0x4C
  3583  0000AC                     	ds	1
  3584  0000AD                     Eeprom_Read@SlaveAddress:
  3585                           	opt stack 0
  3586                           
  3587                           ; 1 bytes @ 0x4D
  3588  0000AD                     	ds	1
  3589  0000AE                     Eeprom_Read@ReadSts:
  3590                           	opt stack 0
  3591                           
  3592                           ; 1 bytes @ 0x4E
  3593  0000AE                     	ds	1
  3594  0000AF                     Eeprom_Read@QuerySts:
  3595                           	opt stack 0
  3596                           
  3597                           ; 1 bytes @ 0x4F
  3598  0000AF                     	ds	1
  3599  0000B0                     tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           postinc0	equ	0xFEE
  3604                           wreg	equ	0xFE8
  3605                           postdec1	equ	0xFE5
  3606                           fsr1h	equ	0xFE2
  3607                           fsr1l	equ	0xFE1
  3608                           
  3609                           ; 1 bytes @ 0x50
  3610                           
  3611                           	psect	cstackCOMRAM
  3612  000001                     __pcstackCOMRAM:
  3613                           	opt stack 0
  3614  000001                     i2GenerateEvt@Event:
  3615                           	opt stack 0
  3616                           
  3617                           ; 2 bytes @ 0x0
  3618  000001                     	ds	2
  3619  000003                     i2GenerateEvt@EventStatus:
  3620                           	opt stack 0
  3621                           
  3622                           ; 1 bytes @ 0x2
  3623  000003                     	ds	1
  3624  000004                     Uart_MdmGsmGprsReadService@UartData:
  3625                           	opt stack 0
  3626                           
  3627                           ; 1 bytes @ 0x3
  3628  000004                     	ds	1
  3629  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3630                           	opt stack 0
  3631                           
  3632                           ; 2 bytes @ 0x4
  3633  000005                     	ds	2
  3634  000007                     ??_HighPriorityIsr:
  3635                           
  3636                           ; 1 bytes @ 0x6
  3637  000007                     	ds	18
  3638  000019                     ?i1___wmul:
  3639                           	opt stack 0
  3640  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3641                           	opt stack 0
  3642  000019                     i1GenerateEvt@Event:
  3643                           	opt stack 0
  3644  000019                     i1___wmul@multiplier:
  3645                           	opt stack 0
  3646                           
  3647                           ; 2 bytes @ 0x18
  3648  000019                     	ds	2
  3649  00001B                     i1GenerateEvt@EventStatus:
  3650                           	opt stack 0
  3651  00001B                     i1___wmul@multiplicand:
  3652                           	opt stack 0
  3653                           
  3654                           ; 2 bytes @ 0x1A
  3655  00001B                     	ds	1
  3656  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3657                           	opt stack 0
  3658                           
  3659                           ; 2 bytes @ 0x1B
  3660  00001C                     	ds	1
  3661  00001D                     i1___wmul@product:
  3662                           	opt stack 0
  3663                           
  3664                           ; 2 bytes @ 0x1C
  3665  00001D                     	ds	1
  3666  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3667                           	opt stack 0
  3668                           
  3669                           ; 1 bytes @ 0x1D
  3670  00001E                     	ds	1
  3671  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3672                           	opt stack 0
  3673                           
  3674                           ; 1 bytes @ 0x1E
  3675  00001F                     	ds	1
  3676  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3677                           	opt stack 0
  3678                           
  3679                           ; 1 bytes @ 0x1F
  3680  000020                     	ds	1
  3681  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3682                           	opt stack 0
  3683                           
  3684                           ; 2 bytes @ 0x20
  3685  000021                     	ds	2
  3686  000023                     tblptru	equ	0xFF8
  3687                           tblptrh	equ	0xFF7
  3688                           tblptrl	equ	0xFF6
  3689                           tablat	equ	0xFF5
  3690                           postinc0	equ	0xFEE
  3691                           wreg	equ	0xFE8
  3692                           postdec1	equ	0xFE5
  3693                           fsr1h	equ	0xFE2
  3694                           fsr1l	equ	0xFE1
  3695                           
  3696                           ; 1 bytes @ 0x22
  3697 ;;
  3698 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3699 ;;
  3700 ;; *************** function _main *****************
  3701 ;; Defined at:
  3702 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  2   14[None  ] short 
  3709 ;; Registers used:
  3710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels required when called:   23
  3722 ;; This function calls:
  3723 ;;		_Sch_MainScheduler
  3724 ;;		_SystemInit
  3725 ;; This function is called by:
  3726 ;;		Startup code after reset
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text0
  3731  006774                     __ptext0:
  3732                           	opt stack 0
  3733  006774                     _main:
  3734                           	opt stack 8
  3735                           
  3736                           ;main.c: 61: SystemInit();
  3737                           
  3738                           ;incstack = 0
  3739  006774  ECB5  F030         	call	_SystemInit	;wreg free
  3740                           
  3741                           ;main.c: 64: Sch_MainScheduler();
  3742  006778  ECAA  F032         	call	_Sch_MainScheduler	;wreg free
  3743                           
  3744                           ;main.c: 67: return 0;
  3745                           ;	Return value of _main is never used
  3746  00677C  EF66  F000         	goto	start
  3747  006780                     __end_of_main:
  3748                           	opt stack 0
  3749                           tblptru	equ	0xFF8
  3750                           tblptrh	equ	0xFF7
  3751                           tblptrl	equ	0xFF6
  3752                           tablat	equ	0xFF5
  3753                           postinc0	equ	0xFEE
  3754                           wreg	equ	0xFE8
  3755                           postdec1	equ	0xFE5
  3756                           fsr1h	equ	0xFE2
  3757                           fsr1l	equ	0xFE1
  3758                           
  3759 ;; *************** function _SystemInit *****************
  3760 ;; Defined at:
  3761 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3779 ;;Total ram usage:        0 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:   15
  3782 ;; This function calls:
  3783 ;;		_InitSchedTimer
  3784 ;;		_Irq_InitIntController
  3785 ;;		_Mcu_ConfigExtInt
  3786 ;;		_Mcu_StartSystemPll
  3787 ;;		_Pm_DsReleasePinControl
  3788 ;;		_Tmr_RegisterTmr2IsrCallback
  3789 ;; This function is called by:
  3790 ;;		_main
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text1
  3795  00616A                     __ptext1:
  3796                           	opt stack 0
  3797  00616A                     _SystemInit:
  3798                           	opt stack 15
  3799                           
  3800                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3801                           
  3802                           ;incstack = 0
  3803  00616A  ECDD  F033         	call	_Pm_DsReleasePinControl	;wreg free
  3804                           
  3805                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3806  00616E  EC9B  F032         	call	_Mcu_StartSystemPll	;wreg free
  3807                           
  3808                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3809  006172  0E01               	movlw	1
  3810  006174  0100               	movlb	0	; () banked
  3811  006176  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3812  006178  0E01               	movlw	1
  3813  00617A  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3814  00617C  0E01               	movlw	1
  3815  00617E  EC59  F031         	call	_Irq_InitIntController
  3816                           
  3817                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3818  006182  0E4C               	movlw	low _Sch_SchmIntService
  3819  006184  0100               	movlb	0	; () banked
  3820  006186  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3821  006188  0E67               	movlw	high _Sch_SchmIntService
  3822  00618A  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3823  00618C  ECC0  F033         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3824                           
  3825                           ;sys_init.c: 132: InitSchedTimer();
  3826  006190  EC15  F031         	call	_InitSchedTimer	;wreg free
  3827                           
  3828                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3829  006194  ECD5  F032         	call	_Mcu_ConfigExtInt	;wreg free
  3830  006198  0012               	return		;funcret
  3831  00619A                     __end_of_SystemInit:
  3832                           	opt stack 0
  3833                           tblptru	equ	0xFF8
  3834                           tblptrh	equ	0xFF7
  3835                           tblptrl	equ	0xFF6
  3836                           tablat	equ	0xFF5
  3837                           postinc0	equ	0xFEE
  3838                           wreg	equ	0xFE8
  3839                           postdec1	equ	0xFE5
  3840                           fsr1h	equ	0xFE2
  3841                           fsr1l	equ	0xFE1
  3842                           
  3843 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3844 ;; Defined at:
  3845 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3848 ;;		 -> Sch_SchmIntService(1), 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3863 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3864 ;;Total ram usage:        2 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:   11
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_SystemInit
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text2
  3875  006780                     __ptext2:
  3876                           	opt stack 0
  3877  006780                     _Tmr_RegisterTmr2IsrCallback:
  3878                           	opt stack 18
  3879                           
  3880                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3881                           
  3882                           ;incstack = 0
  3883  006780  C07D  F2E9         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3884  006784  C07E  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3885  006788  0012               	return		;funcret
  3886  00678A                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3887                           	opt stack 0
  3888                           tblptru	equ	0xFF8
  3889                           tblptrh	equ	0xFF7
  3890                           tblptrl	equ	0xFF6
  3891                           tablat	equ	0xFF5
  3892                           postinc0	equ	0xFEE
  3893                           wreg	equ	0xFE8
  3894                           postdec1	equ	0xFE5
  3895                           fsr1h	equ	0xFE2
  3896                           fsr1l	equ	0xFE1
  3897                           
  3898 ;; *************** function _Pm_DsReleasePinControl *****************
  3899 ;; Defined at:
  3900 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		None
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;Total ram usage:        0 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:   11
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_SystemInit
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text3
  3929  0067BA                     __ptext3:
  3930                           	opt stack 0
  3931  0067BA                     _Pm_DsReleasePinControl:
  3932                           	opt stack 18
  3933                           
  3934                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3935                           
  3936                           ;incstack = 0
  3937  0067BA  010F               	movlb	15	; () banked
  3938  0067BC  914C               	bcf	76,0,b	;volatile
  3939                           
  3940                           ; BSR set to: 15
  3941  0067BE  0012               	return		;funcret
  3942  0067C0                     __end_of_Pm_DsReleasePinControl:
  3943                           	opt stack 0
  3944                           tblptru	equ	0xFF8
  3945                           tblptrh	equ	0xFF7
  3946                           tblptrl	equ	0xFF6
  3947                           tablat	equ	0xFF5
  3948                           postinc0	equ	0xFEE
  3949                           wreg	equ	0xFE8
  3950                           postdec1	equ	0xFE5
  3951                           fsr1h	equ	0xFE2
  3952                           fsr1l	equ	0xFE1
  3953                           
  3954 ;; *************** function _Mcu_StartSystemPll *****************
  3955 ;; Defined at:
  3956 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;		None
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3973 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3974 ;;Total ram usage:        2 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:   11
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_SystemInit
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text4
  3985  006536                     __ptext4:
  3986                           	opt stack 0
  3987  006536                     _Mcu_StartSystemPll:
  3988                           	opt stack 18
  3989                           
  3990                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3991                           
  3992                           ; BSR set to: 15
  3993                           ;incstack = 0
  3994  006536  0E03               	movlw	3
  3995  006538  0100               	movlb	0	; () banked
  3996  00653A  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3997  00653C  0EE8               	movlw	232
  3998  00653E  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4002  006540  8C9B               	bsf	3995,6,c	;volatile
  4003  006542                     l11776:
  4004                           
  4005                           ; BSR set to: 0
  4006  006542  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4007  006544  A0D8               	btfss	status,0,c
  4008  006546  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4009  006548  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4010  00654A  E1FB               	bnz	l11776
  4011  00654C  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4012  00654E  B4D8               	btfsc	status,2,c
  4013  006550  0012               	return	
  4014  006552  D7F7               	goto	l237
  4015  006554                     __end_of_Mcu_StartSystemPll:
  4016                           	opt stack 0
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           postinc0	equ	0xFEE
  4022                           wreg	equ	0xFE8
  4023                           postdec1	equ	0xFE5
  4024                           fsr1h	equ	0xFE2
  4025                           fsr1l	equ	0xFE1
  4026                           status	equ	0xFD8
  4027                           
  4028 ;; *************** function _Mcu_ConfigExtInt *****************
  4029 ;; Defined at:
  4030 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:   11
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_SystemInit
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text5
  4059  0065AA                     __ptext5:
  4060                           	opt stack 0
  4061  0065AA                     _Mcu_ConfigExtInt:
  4062                           	opt stack 18
  4063                           
  4064                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;incstack = 0
  4068  0065AA  8093               	bsf	3987,0,c	;volatile
  4069                           
  4070                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4071  0065AC  8695               	bsf	3989,3,c	;volatile
  4072                           
  4073                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4074  0065AE  010F               	movlb	15	; () banked
  4075  0065B0  8949               	bsf	73,4,b	;volatile
  4076                           
  4077                           ; BSR set to: 15
  4078                           ;mcu_drv.c: 108: RPINR1 = 20;
  4079  0065B2  0E14               	movlw	20
  4080  0065B4  010E               	movlb	14	; () banked
  4081  0065B6  6FE7               	movwf	231,b	;volatile
  4082                           
  4083                           ; BSR set to: 14
  4084                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4085  0065B8  88F2               	bsf	intcon,4,c	;volatile
  4086                           
  4087                           ; BSR set to: 14
  4088                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4089  0065BA  86F0               	bsf	intcon3,3,c	;volatile
  4090                           
  4091                           ; BSR set to: 14
  4092                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4093  0065BC  8CF0               	bsf	intcon3,6,c	;volatile
  4094                           
  4095                           ; BSR set to: 14
  4096                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4097  0065BE  9CF1               	bcf	intcon2,6,c	;volatile
  4098                           
  4099                           ; BSR set to: 14
  4100                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4101  0065C0  9AF1               	bcf	intcon2,5,c	;volatile
  4102                           
  4103                           ; BSR set to: 14
  4104  0065C2  0012               	return		;funcret
  4105  0065C4                     __end_of_Mcu_ConfigExtInt:
  4106                           	opt stack 0
  4107                           tblptru	equ	0xFF8
  4108                           tblptrh	equ	0xFF7
  4109                           tblptrl	equ	0xFF6
  4110                           tablat	equ	0xFF5
  4111                           intcon	equ	0xFF2
  4112                           intcon2	equ	0xFF1
  4113                           intcon3	equ	0xFF0
  4114                           postinc0	equ	0xFEE
  4115                           wreg	equ	0xFE8
  4116                           postdec1	equ	0xFE5
  4117                           fsr1h	equ	0xFE2
  4118                           fsr1l	equ	0xFE1
  4119                           status	equ	0xFD8
  4120                           
  4121 ;; *************** function _Irq_InitIntController *****************
  4122 ;; Defined at:
  4123 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  IntPriorityE    1    wreg     enum E7720
  4126 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4127 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4139 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4142 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4143 ;;Total ram usage:        3 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:   11
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_SystemInit
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text6
  4154  0062B2                     __ptext6:
  4155                           	opt stack 0
  4156  0062B2                     _Irq_InitIntController:
  4157                           	opt stack 18
  4158                           
  4159                           ; BSR set to: 14
  4160                           ;incstack = 0
  4161                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4162  0062B2  0100               	movlb	0	; () banked
  4163  0062B4  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4164                           
  4165                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4166  0062B6  0100               	movlb	0	; () banked
  4167  0062B8  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4168  0062BA  D002               	bra	u10335
  4169  0062BC  9ED0               	bcf	4048,7,c	;volatile
  4170  0062BE  D001               	bra	u10336
  4171  0062C0                     u10335:
  4172  0062C0  8ED0               	bsf	4048,7,c	;volatile
  4173  0062C2                     u10336:
  4174                           
  4175                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4176  0062C2  0100               	movlb	0	; () banked
  4177  0062C4  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4178  0062C6  D002               	bra	u10345
  4179  0062C8  9EF2               	bcf	intcon,7,c	;volatile
  4180  0062CA  D001               	bra	u10346
  4181  0062CC                     u10345:
  4182  0062CC  8EF2               	bsf	intcon,7,c	;volatile
  4183  0062CE                     u10346:
  4184                           
  4185                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4186  0062CE  0100               	movlb	0	; () banked
  4187  0062D0  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4188  0062D2  D002               	bra	u10355
  4189  0062D4  9CF2               	bcf	intcon,6,c	;volatile
  4190  0062D6  D001               	bra	u10356
  4191  0062D8                     u10355:
  4192  0062D8  8CF2               	bsf	intcon,6,c	;volatile
  4193  0062DA                     u10356:
  4194  0062DA  0012               	return		;funcret
  4195  0062DC                     __end_of_Irq_InitIntController:
  4196                           	opt stack 0
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           intcon	equ	0xFF2
  4202                           intcon2	equ	0xFF1
  4203                           intcon3	equ	0xFF0
  4204                           postinc0	equ	0xFEE
  4205                           wreg	equ	0xFE8
  4206                           postdec1	equ	0xFE5
  4207                           fsr1h	equ	0xFE2
  4208                           fsr1l	equ	0xFE1
  4209                           status	equ	0xFD8
  4210                           
  4211 ;; *************** function _InitSchedTimer *****************
  4212 ;; Defined at:
  4213 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;		None
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4228 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4230 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4231 ;;Total ram usage:        7 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:   14
  4234 ;; This function calls:
  4235 ;;		_Tmr_TmrBConfig
  4236 ;; This function is called by:
  4237 ;;		_SystemInit
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text7
  4242  00622A                     __ptext7:
  4243                           	opt stack 0
  4244  00622A                     _InitSchedTimer:
  4245                           	opt stack 15
  4246                           
  4247                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4248                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4249                           
  4250                           ;incstack = 0
  4251  00622A  0E04               	movlw	4
  4252  00622C  0100               	movlb	0	; () banked
  4253  00622E  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4254                           
  4255                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4256  006230  0E0C               	movlw	12
  4257  006232  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4258                           
  4259                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4260  006234  0E00               	movlw	0
  4261  006236  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4262                           
  4263                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4264  006238  0E01               	movlw	1
  4265  00623A  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4266                           
  4267                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4268  00623C  0E03               	movlw	3
  4269  00623E  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4270  006240  0EE8               	movlw	232
  4271  006242  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4272                           
  4273                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4274  006244  0E01               	movlw	1
  4275  006246  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4279  006248  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4280  00624A  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4281  00624C  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4282  00624E  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4283  006250  0E02               	movlw	2
  4284  006252  ECEB  F01E         	call	_Tmr_TmrBConfig
  4285  006256  0012               	return		;funcret
  4286  006258                     __end_of_InitSchedTimer:
  4287                           	opt stack 0
  4288                           tblptru	equ	0xFF8
  4289                           tblptrh	equ	0xFF7
  4290                           tblptrl	equ	0xFF6
  4291                           tablat	equ	0xFF5
  4292                           intcon	equ	0xFF2
  4293                           intcon2	equ	0xFF1
  4294                           intcon3	equ	0xFF0
  4295                           postinc0	equ	0xFEE
  4296                           wreg	equ	0xFE8
  4297                           postdec1	equ	0xFE5
  4298                           fsr1h	equ	0xFE2
  4299                           fsr1l	equ	0xFE1
  4300                           status	equ	0xFD8
  4301                           
  4302 ;; *************** function _Tmr_TmrBConfig *****************
  4303 ;; Defined at:
  4304 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  TmrNumb         1    wreg     unsigned char 
  4307 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4308 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4323 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4324 ;;Total ram usage:        4 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:   13
  4327 ;; This function calls:
  4328 ;;		_TmrBInit
  4329 ;;		_Tmr_StartTmr
  4330 ;;		_Tmr_TmrBIrqSet
  4331 ;;		_Tmr_TmrBPrSet
  4332 ;; This function is called by:
  4333 ;;		_InitSchedTimer
  4334 ;;		_InitAuxTimer
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text8
  4339  003DD6                     __ptext8:
  4340                           	opt stack 0
  4341  003DD6                     _Tmr_TmrBConfig:
  4342                           	opt stack 15
  4343                           
  4344                           ;incstack = 0
  4345                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4346  003DD6  0100               	movlb	0	; () banked
  4347  003DD8  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4348                           
  4349                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4350  003DDA  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4351  003DDE  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4352  003DE2  50DF               	movf	indf2,w,c
  4353  003DE4  0100               	movlb	0	; () banked
  4354  003DE6  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4355  003DE8  EE20 F001          	lfsr	2,1
  4356  003DEC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4357  003DEE  26D9               	addwf	fsr2l,f,c
  4358  003DF0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4359  003DF2  22DA               	addwfc	fsr2h,f,c
  4360  003DF4  50DF               	movf	indf2,w,c
  4361  003DF6  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4362  003DF8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4363  003DFA  EC79  F024         	call	_TmrBInit
  4364                           
  4365                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4366  003DFE  0100               	movlb	0	; () banked
  4367  003E00  EE20 F002          	lfsr	2,2
  4368  003E04  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4369  003E06  26D9               	addwf	fsr2l,f,c
  4370  003E08  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4371  003E0A  22DA               	addwfc	fsr2h,f,c
  4372  003E0C  04DE               	decf	postinc2,w,c
  4373  003E0E  A4D8               	btfss	status,2,c
  4374  003E10  D00E               	goto	l546
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;tmr_drv.c: 277: {
  4378                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4379  003E12  EE20 F003          	lfsr	2,3
  4380  003E16  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4381  003E18  26D9               	addwf	fsr2l,f,c
  4382  003E1A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4383  003E1C  22DA               	addwfc	fsr2h,f,c
  4384  003E1E  50DF               	movf	indf2,w,c
  4385  003E20  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4386  003E22  0E01               	movlw	1
  4387  003E24  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4388  003E26  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4389  003E28  ECBB  F02D         	call	_Tmr_TmrBIrqSet
  4390                           
  4391                           ;tmr_drv.c: 280: }
  4392  003E2C  D00E               	goto	l547
  4393  003E2E                     l546:
  4394                           
  4395                           ;tmr_drv.c: 281: else
  4396                           ;tmr_drv.c: 282: {
  4397                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4398  003E2E  0100               	movlb	0	; () banked
  4399  003E30  EE20 F003          	lfsr	2,3
  4400  003E34  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4401  003E36  26D9               	addwf	fsr2l,f,c
  4402  003E38  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4403  003E3A  22DA               	addwfc	fsr2h,f,c
  4404  003E3C  50DF               	movf	indf2,w,c
  4405  003E3E  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4406  003E40  0E00               	movlw	0
  4407  003E42  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4408  003E44  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4409  003E46  ECBB  F02D         	call	_Tmr_TmrBIrqSet
  4410  003E4A                     l547:
  4411                           
  4412                           ;tmr_drv.c: 285: }
  4413                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4414  003E4A  0100               	movlb	0	; () banked
  4415  003E4C  EE20 F004          	lfsr	2,4
  4416  003E50  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4417  003E52  26D9               	addwf	fsr2l,f,c
  4418  003E54  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4419  003E56  22DA               	addwfc	fsr2h,f,c
  4420  003E58  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4421  003E5C  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4422  003E60  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4423  003E64  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4424  003E68  50DF               	movf	indf2,w,c
  4425  003E6A  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4426  003E6C  EE20 F001          	lfsr	2,1
  4427  003E70  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4428  003E72  26D9               	addwf	fsr2l,f,c
  4429  003E74  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4430  003E76  22DA               	addwfc	fsr2h,f,c
  4431  003E78  50DF               	movf	indf2,w,c
  4432  003E7A  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4433  003E7C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4434  003E7E  EC61  F019         	call	_Tmr_TmrBPrSet
  4435                           
  4436                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4437  003E82  0100               	movlb	0	; () banked
  4438  003E84  EE20 F006          	lfsr	2,6
  4439  003E88  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4440  003E8A  26D9               	addwf	fsr2l,f,c
  4441  003E8C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4442  003E8E  22DA               	addwfc	fsr2h,f,c
  4443  003E90  04DE               	decf	postinc2,w,c
  4444  003E92  A4D8               	btfss	status,2,c
  4445  003E94  0012               	return	
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;tmr_drv.c: 290: {
  4449                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4450  003E96  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4451  003E98  EC6B  F032         	call	_Tmr_StartTmr
  4452                           
  4453                           ;tmr_drv.c: 293: }
  4454  003E9C  0012               	return	
  4455  003E9E                     __end_of_Tmr_TmrBConfig:
  4456                           	opt stack 0
  4457                           tblptru	equ	0xFF8
  4458                           tblptrh	equ	0xFF7
  4459                           tblptrl	equ	0xFF6
  4460                           tablat	equ	0xFF5
  4461                           intcon	equ	0xFF2
  4462                           intcon2	equ	0xFF1
  4463                           intcon3	equ	0xFF0
  4464                           postinc0	equ	0xFEE
  4465                           wreg	equ	0xFE8
  4466                           postdec1	equ	0xFE5
  4467                           fsr1h	equ	0xFE2
  4468                           fsr1l	equ	0xFE1
  4469                           indf2	equ	0xFDF
  4470                           postinc2	equ	0xFDE
  4471                           postdec2	equ	0xFDD
  4472                           fsr2h	equ	0xFDA
  4473                           fsr2l	equ	0xFD9
  4474                           status	equ	0xFD8
  4475                           
  4476 ;; *************** function _Tmr_TmrBPrSet *****************
  4477 ;; Defined at:
  4478 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  TmrNumb         1    wreg     unsigned char 
  4481 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4482 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4483 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4486 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4487 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      enum E7736
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4497 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4498 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4500 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4501 ;;Total ram usage:       10 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:   12
  4504 ;; This function calls:
  4505 ;;		___lldiv
  4506 ;;		___lmul
  4507 ;; This function is called by:
  4508 ;;		_Tmr_TmrBConfig
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text9
  4513  0032C2                     __ptext9:
  4514                           	opt stack 0
  4515  0032C2                     _Tmr_TmrBPrSet:
  4516                           	opt stack 15
  4517                           
  4518                           ;incstack = 0
  4519                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4520  0032C2  0100               	movlb	0	; () banked
  4521  0032C4  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4522                           
  4523                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4524                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4525  0032C6  0E00               	movlw	0
  4526  0032C8  0100               	movlb	0	; () banked
  4527  0032CA  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4528  0032CC  0E00               	movlw	0
  4529  0032CE  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4530  0032D0  0E00               	movlw	0
  4531  0032D2  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4532  0032D4  0E00               	movlw	0
  4533  0032D6  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4537  0032D8  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4538  0032DA  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4539  0032DC  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4540  0032E0  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4541  0032E4  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4542  0032E6  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4543  0032E8  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4544  0032EC  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4545  0032F0  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4546  0032F2  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4547  0032F4  EC26  F02B         	call	___lmul	;wreg free
  4548  0032F8  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4549  0032FC  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4550  003300  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4551  003304  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4552                           
  4553                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4554  003308  0E00               	movlw	0
  4555  00330A  0100               	movlb	0	; () banked
  4556  00330C  6F89               	movwf	___lldiv@dividend& (0+255),b
  4557  00330E  0E1B               	movlw	27
  4558  003310  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4559  003312  0EB7               	movlw	183
  4560  003314  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4561  003316  0E00               	movlw	0
  4562  003318  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4563  00331A  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4564  00331E  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4565  003322  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4566  003326  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4567  00332A  ECD5  F027         	call	___lldiv	;wreg free
  4568  00332E  0100               	movlb	0	; () banked
  4569  003330  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4570  003332  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4571  003334  E13A               	bnz	l14736
  4572  003336  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4573  003338  A0D8               	btfss	status,0,c
  4574  00333A  D02D               	goto	l529
  4575  00333C  D036               	goto	l528
  4576  00333E                     
  4577                           ; BSR set to: 0
  4578                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4579                           
  4580                           ; BSR set to: 0
  4581  00333E  0E00               	movlw	0
  4582  003340  6F89               	movwf	___lldiv@dividend& (0+255),b
  4583  003342  0E1B               	movlw	27
  4584  003344  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4585  003346  0EB7               	movlw	183
  4586  003348  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4587  00334A  0E00               	movlw	0
  4588  00334C  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4589  00334E  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4590  003352  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4591  003356  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4592  00335A  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4593  00335E  ECD5  F027         	call	___lldiv	;wreg free
  4594  003362  0100               	movlb	0	; () banked
  4595  003364  5189               	movf	?___lldiv& (0+255),w,b
  4596  003366  6ECB               	movwf	4043,c	;volatile
  4597                           
  4598                           ;tmr_drv.c: 210: break;
  4599  003368  D01D               	goto	l531
  4600  00336A                     
  4601                           ; BSR set to: 0
  4602                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4603                           
  4604                           ; BSR set to: 0
  4605  00336A  0E00               	movlw	0
  4606  00336C  6F89               	movwf	___lldiv@dividend& (0+255),b
  4607  00336E  0E1B               	movlw	27
  4608  003370  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4609  003372  0EB7               	movlw	183
  4610  003374  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4611  003376  0E00               	movlw	0
  4612  003378  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4613  00337A  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4614  00337E  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4615  003382  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4616  003386  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4617  00338A  ECD5  F027         	call	___lldiv	;wreg free
  4618  00338E  0100               	movlb	0	; () banked
  4619  003390  5189               	movf	?___lldiv& (0+255),w,b
  4620  003392  6E77               	movwf	3959,c	;volatile
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;tmr_drv.c: 219: }
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;tmr_drv.c: 218: break;
  4627                           
  4628                           ;tmr_drv.c: 217: default:
  4629                           
  4630                           ;tmr_drv.c: 215: break;
  4631  003394  D007               	goto	l531
  4632  003396                     l529:
  4633                           
  4634                           ; BSR set to: 0
  4635                           
  4636                           ; BSR set to: 0
  4637  003396  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4638                           
  4639                           ; Switch size 1, requested type "space"
  4640                           ; Number of cases is 2, Range of values is 2 to 4
  4641                           ; switch strategies available:
  4642                           ; Name         Instructions Cycles
  4643                           ; simple_byte            7     4 (average)
  4644                           ;	Chosen strategy is simple_byte
  4645  003398  0A02               	xorlw	2	; case 2
  4646  00339A  B4D8               	btfsc	status,2,c
  4647  00339C  D7D0               	goto	l530
  4648  00339E  0A06               	xorlw	6	; case 4
  4649  0033A0  B4D8               	btfsc	status,2,c
  4650  0033A2  D7E3               	goto	l532
  4651  0033A4                     l531:
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4655                           
  4656                           ; BSR set to: 0
  4657  0033A4  0E00               	movlw	0
  4658  0033A6  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4659                           
  4660                           ;tmr_drv.c: 223: }
  4661  0033A8  0012               	return	
  4662  0033AA                     l528:
  4663  0033AA                     l14736:
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;tmr_drv.c: 224: else
  4667                           ;tmr_drv.c: 225: {
  4668                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4669  0033AA  0E01               	movlw	1
  4670  0033AC  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4671                           
  4672                           ; BSR set to: 0
  4673  0033AE  0012               	return	
  4674  0033B0                     __end_of_Tmr_TmrBPrSet:
  4675                           	opt stack 0
  4676                           tblptru	equ	0xFF8
  4677                           tblptrh	equ	0xFF7
  4678                           tblptrl	equ	0xFF6
  4679                           tablat	equ	0xFF5
  4680                           prodh	equ	0xFF4
  4681                           prodl	equ	0xFF3
  4682                           intcon	equ	0xFF2
  4683                           intcon2	equ	0xFF1
  4684                           intcon3	equ	0xFF0
  4685                           postinc0	equ	0xFEE
  4686                           wreg	equ	0xFE8
  4687                           postdec1	equ	0xFE5
  4688                           fsr1h	equ	0xFE2
  4689                           fsr1l	equ	0xFE1
  4690                           indf2	equ	0xFDF
  4691                           postinc2	equ	0xFDE
  4692                           postdec2	equ	0xFDD
  4693                           fsr2h	equ	0xFDA
  4694                           fsr2l	equ	0xFD9
  4695                           status	equ	0xFD8
  4696                           
  4697 ;; *************** function _Tmr_TmrBIrqSet *****************
  4698 ;; Defined at:
  4699 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  TmrNumb         1    wreg     unsigned char 
  4702 ;;  Priority        1   29[BANK0 ] enum E7716
  4703 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4715 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4718 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4719 ;;Total ram usage:        3 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:   11
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_Tmr_TmrBConfig
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text10
  4730  005B76                     __ptext10:
  4731                           	opt stack 0
  4732  005B76                     _Tmr_TmrBIrqSet:
  4733                           	opt stack 16
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;incstack = 0
  4737                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4738  005B76  0100               	movlb	0	; () banked
  4739  005B78  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4740                           
  4741                           ;tmr_drv.c: 156: switch (TmrNumb)
  4742  005B7A  D01A               	goto	l520
  4743  005B7C                     l521:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4747  005B7C  929E               	bcf	3998,1,c	;volatile
  4748                           
  4749                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4750  005B7E  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4751  005B80  D002               	bra	u8695
  4752  005B82  929F               	bcf	3999,1,c	;volatile
  4753  005B84  D001               	bra	u8696
  4754  005B86                     u8695:
  4755  005B86  829F               	bsf	3999,1,c	;volatile
  4756  005B88                     u8696:
  4757                           
  4758                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4759  005B88  0100               	movlb	0	; () banked
  4760  005B8A  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4761  005B8C  D002               	bra	u8705
  4762  005B8E  929D               	bcf	3997,1,c	;volatile
  4763  005B90  D001               	bra	u8706
  4764  005B92                     u8705:
  4765  005B92  829D               	bsf	3997,1,c	;volatile
  4766  005B94                     u8706:
  4767                           
  4768                           ;tmr_drv.c: 165: break;
  4769  005B94  0012               	return	
  4770  005B96                     l523:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4774  005B96  96A4               	bcf	4004,3,c	;volatile
  4775                           
  4776                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4777  005B98  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4778  005B9A  D002               	bra	u8715
  4779  005B9C  96A5               	bcf	4005,3,c	;volatile
  4780  005B9E  D001               	bra	u8716
  4781  005BA0                     u8715:
  4782  005BA0  86A5               	bsf	4005,3,c	;volatile
  4783  005BA2                     u8716:
  4784                           
  4785                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4786  005BA2  0100               	movlb	0	; () banked
  4787  005BA4  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4788  005BA6  D002               	bra	u8725
  4789  005BA8  96A3               	bcf	4003,3,c	;volatile
  4790  005BAA  D001               	bra	u8726
  4791  005BAC                     u8725:
  4792  005BAC  86A3               	bsf	4003,3,c	;volatile
  4793  005BAE                     u8726:
  4794                           
  4795                           ;tmr_drv.c: 178: }
  4796                           
  4797                           ;tmr_drv.c: 177: break;
  4798                           
  4799                           ;tmr_drv.c: 176: default:
  4800                           
  4801                           ;tmr_drv.c: 174: break;
  4802  005BAE  0012               	return	
  4803  005BB0                     l520:
  4804  005BB0  0100               	movlb	0	; () banked
  4805  005BB2  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4806                           
  4807                           ; Switch size 1, requested type "space"
  4808                           ; Number of cases is 2, Range of values is 2 to 4
  4809                           ; switch strategies available:
  4810                           ; Name         Instructions Cycles
  4811                           ; simple_byte            7     4 (average)
  4812                           ;	Chosen strategy is simple_byte
  4813  005BB4  0A02               	xorlw	2	; case 2
  4814  005BB6  B4D8               	btfsc	status,2,c
  4815  005BB8  D7E1               	goto	l521
  4816  005BBA  0A06               	xorlw	6	; case 4
  4817  005BBC  A4D8               	btfss	status,2,c
  4818  005BBE  0012               	return	
  4819  005BC0  D7EA               	goto	l523
  4820  005BC2                     __end_of_Tmr_TmrBIrqSet:
  4821                           	opt stack 0
  4822                           tblptru	equ	0xFF8
  4823                           tblptrh	equ	0xFF7
  4824                           tblptrl	equ	0xFF6
  4825                           tablat	equ	0xFF5
  4826                           prodh	equ	0xFF4
  4827                           prodl	equ	0xFF3
  4828                           intcon	equ	0xFF2
  4829                           intcon2	equ	0xFF1
  4830                           intcon3	equ	0xFF0
  4831                           postinc0	equ	0xFEE
  4832                           wreg	equ	0xFE8
  4833                           postdec1	equ	0xFE5
  4834                           fsr1h	equ	0xFE2
  4835                           fsr1l	equ	0xFE1
  4836                           indf2	equ	0xFDF
  4837                           postinc2	equ	0xFDE
  4838                           postdec2	equ	0xFDD
  4839                           fsr2h	equ	0xFDA
  4840                           fsr2l	equ	0xFD9
  4841                           status	equ	0xFD8
  4842                           
  4843 ;; *************** function _Tmr_StartTmr *****************
  4844 ;; Defined at:
  4845 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  TmrNumb         1    wreg     unsigned char 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4862 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4863 ;;Total ram usage:        1 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:   11
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_Tmr_TmrBConfig
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text11
  4874  0064D6                     __ptext11:
  4875                           	opt stack 0
  4876  0064D6                     _Tmr_StartTmr:
  4877                           	opt stack 16
  4878                           
  4879                           ;incstack = 0
  4880                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4881  0064D6  0100               	movlb	0	; () banked
  4882  0064D8  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4883                           
  4884                           ;tmr_drv.c: 245: switch (TmrNumb)
  4885  0064DA  D004               	goto	l538
  4886  0064DC                     l539:
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4890  0064DC  84CA               	bsf	4042,2,c	;volatile
  4891                           
  4892                           ;tmr_drv.c: 250: break;
  4893  0064DE  0012               	return	
  4894  0064E0                     l541:
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4898  0064E0  8476               	bsf	3958,2,c	;volatile
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;tmr_drv.c: 259: }
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;tmr_drv.c: 258: break;
  4905                           
  4906                           ;tmr_drv.c: 257: default:
  4907                           
  4908                           ;tmr_drv.c: 255: break;
  4909  0064E2  0012               	return	
  4910  0064E4                     l538:
  4911                           
  4912                           ; BSR set to: 0
  4913  0064E4  0100               	movlb	0	; () banked
  4914  0064E6  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4915                           
  4916                           ; Switch size 1, requested type "space"
  4917                           ; Number of cases is 2, Range of values is 2 to 4
  4918                           ; switch strategies available:
  4919                           ; Name         Instructions Cycles
  4920                           ; simple_byte            7     4 (average)
  4921                           ;	Chosen strategy is simple_byte
  4922  0064E8  0A02               	xorlw	2	; case 2
  4923  0064EA  B4D8               	btfsc	status,2,c
  4924  0064EC  D7F7               	goto	l539
  4925  0064EE  0A06               	xorlw	6	; case 4
  4926  0064F0  A4D8               	btfss	status,2,c
  4927  0064F2  0012               	return	
  4928  0064F4  D7F5               	goto	l541
  4929  0064F6                     __end_of_Tmr_StartTmr:
  4930                           	opt stack 0
  4931                           tblptru	equ	0xFF8
  4932                           tblptrh	equ	0xFF7
  4933                           tblptrl	equ	0xFF6
  4934                           tablat	equ	0xFF5
  4935                           prodh	equ	0xFF4
  4936                           prodl	equ	0xFF3
  4937                           intcon	equ	0xFF2
  4938                           intcon2	equ	0xFF1
  4939                           intcon3	equ	0xFF0
  4940                           postinc0	equ	0xFEE
  4941                           wreg	equ	0xFE8
  4942                           postdec1	equ	0xFE5
  4943                           fsr1h	equ	0xFE2
  4944                           fsr1l	equ	0xFE1
  4945                           indf2	equ	0xFDF
  4946                           postinc2	equ	0xFDE
  4947                           postdec2	equ	0xFDD
  4948                           fsr2h	equ	0xFDA
  4949                           fsr2l	equ	0xFD9
  4950                           status	equ	0xFD8
  4951                           
  4952 ;; *************** function _TmrBInit *****************
  4953 ;; Defined at:
  4954 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  TmrNumb         1    wreg     unsigned char 
  4957 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4958 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4970 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4971 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4973 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4974 ;;Total ram usage:        4 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:   11
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_Tmr_TmrBConfig
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text12
  4985  0048F2                     __ptext12:
  4986                           	opt stack 0
  4987  0048F2                     _TmrBInit:
  4988                           	opt stack 16
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;incstack = 0
  4992                           ;TmrBInit@TmrNumb stored from wreg
  4993  0048F2  0100               	movlb	0	; () banked
  4994  0048F4  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4995                           
  4996                           ;tmr_drv.c: 75: switch (TmrNumb)
  4997  0048F6  D03F               	goto	l500
  4998  0048F8                     l503:
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5002  0048F8  90CA               	bcf	4042,0,c	;volatile
  5003  0048FA  D001               	goto	L1
  5004  0048FC                     l505:
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5008  0048FC  80CA               	bsf	4042,0,c	;volatile
  5009  0048FE                     L1:
  5010                           
  5011                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5012  0048FE  92CA               	bcf	4042,1,c	;volatile
  5013                           
  5014                           ;tmr_drv.c: 91: break;
  5015  004900  D00E               	goto	l504
  5016  004902                     l506:
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5020  004902  80CA               	bsf	4042,0,c	;volatile
  5021                           
  5022                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5023  004904  82CA               	bsf	4042,1,c	;volatile
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;tmr_drv.c: 100: }
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;tmr_drv.c: 99: break;
  5030                           
  5031                           ;tmr_drv.c: 98: default:
  5032                           
  5033                           ;tmr_drv.c: 96: break;
  5034  004906  D00B               	goto	l504
  5035  004908                     
  5036                           ; BSR set to: 0
  5037  004908  0100               	movlb	0	; () banked
  5038  00490A  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5039                           
  5040                           ; Switch size 1, requested type "space"
  5041                           ; Number of cases is 3, Range of values is 1 to 16
  5042                           ; switch strategies available:
  5043                           ; Name         Instructions Cycles
  5044                           ; simple_byte           10     6 (average)
  5045                           ;	Chosen strategy is simple_byte
  5046  00490C  0A01               	xorlw	1	; case 1
  5047  00490E  B4D8               	btfsc	status,2,c
  5048  004910  D7F3               	goto	l503
  5049  004912  0A05               	xorlw	5	; case 4
  5050  004914  B4D8               	btfsc	status,2,c
  5051  004916  D7F2               	goto	l505
  5052  004918  0A14               	xorlw	20	; case 16
  5053  00491A  B4D8               	btfsc	status,2,c
  5054  00491C  D7F2               	goto	l506
  5055  00491E                     l504:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5059                           
  5060                           ; BSR set to: 0
  5061  00491E  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5062  004922  0EFF               	movlw	255
  5063  004924  277F               	addwf	??_TmrBInit& (0+255),f,b
  5064  004926  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5065  004928  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5066  00492A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5067  00492C  50CA               	movf	4042,w,c	;volatile
  5068  00492E  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5069  004930  0B87               	andlw	-121
  5070  004932  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5071  004934  6ECA               	movwf	4042,c	;volatile
  5072                           
  5073                           ;tmr_drv.c: 104: break;
  5074  004936  0012               	return	
  5075  004938                     l511:
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5079  004938  9076               	bcf	3958,0,c	;volatile
  5080  00493A  D001               	goto	L2
  5081  00493C                     l513:
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5085  00493C  8076               	bsf	3958,0,c	;volatile
  5086  00493E                     L2:
  5087                           
  5088                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5089  00493E  9276               	bcf	3958,1,c	;volatile
  5090                           
  5091                           ;tmr_drv.c: 120: break;
  5092  004940  D00D               	goto	l512
  5093  004942                     l514:
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5097  004942  8076               	bsf	3958,0,c	;volatile
  5098                           
  5099                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5100  004944  8276               	bsf	3958,1,c	;volatile
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;tmr_drv.c: 129: }
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;tmr_drv.c: 128: break;
  5107                           
  5108                           ;tmr_drv.c: 127: default:
  5109                           
  5110                           ;tmr_drv.c: 125: break;
  5111  004946  D00A               	goto	l512
  5112  004948                     
  5113                           ; BSR set to: 0
  5114                           
  5115                           ; BSR set to: 0
  5116  004948  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5117                           
  5118                           ; Switch size 1, requested type "space"
  5119                           ; Number of cases is 3, Range of values is 1 to 16
  5120                           ; switch strategies available:
  5121                           ; Name         Instructions Cycles
  5122                           ; simple_byte           10     6 (average)
  5123                           ;	Chosen strategy is simple_byte
  5124  00494A  0A01               	xorlw	1	; case 1
  5125  00494C  B4D8               	btfsc	status,2,c
  5126  00494E  D7F4               	goto	l511
  5127  004950  0A05               	xorlw	5	; case 4
  5128  004952  B4D8               	btfsc	status,2,c
  5129  004954  D7F3               	goto	l513
  5130  004956  0A14               	xorlw	20	; case 16
  5131  004958  B4D8               	btfsc	status,2,c
  5132  00495A  D7F3               	goto	l514
  5133  00495C                     l512:
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5137                           
  5138                           ; BSR set to: 0
  5139  00495C  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5140  004960  0EFF               	movlw	255
  5141  004962  277F               	addwf	??_TmrBInit& (0+255),f,b
  5142  004964  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5143  004966  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5144  004968  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5145  00496A  5076               	movf	3958,w,c	;volatile
  5146  00496C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5147  00496E  0B87               	andlw	-121
  5148  004970  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5149  004972  6E76               	movwf	3958,c	;volatile
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;tmr_drv.c: 137: }
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;tmr_drv.c: 136: break;
  5156                           
  5157                           ;tmr_drv.c: 135: default:
  5158                           
  5159                           ;tmr_drv.c: 133: break;
  5160  004974  0012               	return	
  5161  004976                     l500:
  5162                           
  5163                           ; BSR set to: 0
  5164  004976  0100               	movlb	0	; () banked
  5165  004978  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5166                           
  5167                           ; Switch size 1, requested type "space"
  5168                           ; Number of cases is 2, Range of values is 2 to 4
  5169                           ; switch strategies available:
  5170                           ; Name         Instructions Cycles
  5171                           ; simple_byte            7     4 (average)
  5172                           ;	Chosen strategy is simple_byte
  5173  00497A  0A02               	xorlw	2	; case 2
  5174  00497C  B4D8               	btfsc	status,2,c
  5175  00497E  D7C4               	goto	l502
  5176  004980  0A06               	xorlw	6	; case 4
  5177  004982  A4D8               	btfss	status,2,c
  5178  004984  0012               	return	
  5179  004986  D7E0               	goto	l510
  5180  004988                     __end_of_TmrBInit:
  5181                           	opt stack 0
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           prodh	equ	0xFF4
  5187                           prodl	equ	0xFF3
  5188                           intcon	equ	0xFF2
  5189                           intcon2	equ	0xFF1
  5190                           intcon3	equ	0xFF0
  5191                           postinc0	equ	0xFEE
  5192                           wreg	equ	0xFE8
  5193                           postdec1	equ	0xFE5
  5194                           fsr1h	equ	0xFE2
  5195                           fsr1l	equ	0xFE1
  5196                           indf2	equ	0xFDF
  5197                           postinc2	equ	0xFDE
  5198                           postdec2	equ	0xFDD
  5199                           fsr2h	equ	0xFDA
  5200                           fsr2l	equ	0xFD9
  5201                           status	equ	0xFD8
  5202                           
  5203 ;; *************** function _Sch_MainScheduler *****************
  5204 ;; Defined at:
  5205 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;Total ram usage:        0 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:   22
  5226 ;; This function calls:
  5227 ;;		_InitializeTasks
  5228 ;;		_ScheduleTasks
  5229 ;; This function is called by:
  5230 ;;		_main
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text13
  5235  006554                     __ptext13:
  5236                           	opt stack 0
  5237  006554                     _Sch_MainScheduler:
  5238                           	opt stack 8
  5239                           
  5240                           ;os_sched.c: 178: InitializeTasks();
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;incstack = 0
  5244  006554  EC58  F028         	call	_InitializeTasks	;wreg free
  5245                           
  5246                           ;os_sched.c: 180: SystemState = RunningState;
  5247  006558  0E01               	movlw	1
  5248  00655A  0100               	movlb	0	; () banked
  5249  00655C  6FD4               	movwf	_SystemState& (0+255),b
  5250  00655E                     
  5251                           ;os_sched.c: 188: {
  5252                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5253                           
  5254                           ; BSR set to: 0
  5255  00655E  0102               	movlb	2	; () banked
  5256  006560  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5257  006562  A4D8               	btfss	status,2,c
  5258  006564  D7FC               	goto	l790
  5259                           
  5260                           ; BSR set to: 2
  5261                           ;os_sched.c: 191: {
  5262                           ;os_sched.c: 196: ScheduleTasks();
  5263  006566  ECBC  F017         	call	_ScheduleTasks	;wreg free
  5264                           
  5265                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5266  00656A  0E01               	movlw	1
  5267  00656C  0102               	movlb	2	; () banked
  5268  00656E  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5269                           
  5270                           ; BSR set to: 2
  5271                           
  5272                           ; BSR set to: 2
  5273  006570  D7F6               	goto	l790
  5274  006572                     __end_of_Sch_MainScheduler:
  5275                           	opt stack 0
  5276                           tblptru	equ	0xFF8
  5277                           tblptrh	equ	0xFF7
  5278                           tblptrl	equ	0xFF6
  5279                           tablat	equ	0xFF5
  5280                           prodh	equ	0xFF4
  5281                           prodl	equ	0xFF3
  5282                           intcon	equ	0xFF2
  5283                           intcon2	equ	0xFF1
  5284                           intcon3	equ	0xFF0
  5285                           postinc0	equ	0xFEE
  5286                           wreg	equ	0xFE8
  5287                           postdec1	equ	0xFE5
  5288                           fsr1h	equ	0xFE2
  5289                           fsr1l	equ	0xFE1
  5290                           indf2	equ	0xFDF
  5291                           postinc2	equ	0xFDE
  5292                           postdec2	equ	0xFDD
  5293                           fsr2h	equ	0xFDA
  5294                           fsr2l	equ	0xFD9
  5295                           status	equ	0xFD8
  5296                           
  5297 ;; *************** function _ScheduleTasks *****************
  5298 ;; Defined at:
  5299 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5314 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5316 ;;      Totals:         0       0       0       1       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5317 ;;Total ram usage:        5 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:   21
  5320 ;; This function calls:
  5321 ;;		_I2cSlv_MainTask
  5322 ;;		_Led_MainTask
  5323 ;;		_MdmHttp_MainTask
  5324 ;;		_Mdm_DrvMainFn
  5325 ;;		_Mdm_MainTask
  5326 ;;		_MyApp_Task
  5327 ;;		_Rtcm_MainTask
  5328 ;;		_Term_MainTask
  5329 ;;		_UsbDevice_MainTask
  5330 ;;		_Wdg_MainTask
  5331 ;; This function is called by:
  5332 ;;		_Sch_MainScheduler
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text14
  5337  002F78                     __ptext14:
  5338                           	opt stack 0
  5339  002F78                     _ScheduleTasks:
  5340                           	opt stack 8
  5341                           
  5342                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5343                           
  5344                           ; BSR set to: 2
  5345                           ;incstack = 0
  5346  002F78  0E00               	movlw	0
  5347  002F7A  0102               	movlb	2	; () banked
  5348  002F7C  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5349                           
  5350                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5351  002F7E  0E00               	movlw	0
  5352  002F80  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5353  002F82                     l15974:
  5354                           
  5355                           ; BSR set to: 2
  5356  002F82  0E30               	movlw	low _TaskNumber
  5357  002F84  6EF6               	movwf	tblptrl,c
  5358  002F86                     	if	1	;There is more than 1 active tblptr byte
  5359  002F86  0EFC               	movlw	high _TaskNumber
  5360  002F88  6EF7               	movwf	tblptrh,c
  5361  002F8A                     	endif
  5362  002F8A                     	if	0	;There are less than 3 active tblptr bytes
  5363  002F8A                     	endif
  5364  002F8A  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5365  002F8C  0104               	movlb	4	; () banked
  5366  002F8E  6FFC               	movwf	??_ScheduleTasks& (0+255),b
  5367  002F90  6BFD               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5368  002F92  0009               	tblrd		*+
  5369  002F94  50F5               	movf	tablat,w,c
  5370  002F96  5DFC               	subwf	??_ScheduleTasks& (0+255),w,b
  5371  002F98  0009               	tblrd		*+
  5372  002F9A  50F5               	movf	tablat,w,c
  5373  002F9C  59FD               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5374  002F9E  B0D8               	btfsc	status,0,c
  5375  002FA0  0012               	return	
  5376                           
  5377                           ; BSR set to: 4
  5378                           ;os_sched.c: 106: {
  5379                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5380                           
  5381                           ; BSR set to: 4
  5382                           
  5383                           ; BSR set to: 4
  5384  002FA2  0102               	movlb	2	; () banked
  5385  002FA4  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5386  002FA6  0D08               	mullw	8
  5387  002FA8  0E03               	movlw	3
  5388  002FAA  26F3               	addwf	prodl,f,c
  5389  002FAC  0E00               	movlw	0
  5390  002FAE  22F4               	addwfc	prodh,f,c
  5391  002FB0  0EA4               	movlw	low _TaskTable
  5392  002FB2  24F3               	addwf	prodl,w,c
  5393  002FB4  6ED9               	movwf	fsr2l,c
  5394  002FB6  0E05               	movlw	high _TaskTable
  5395  002FB8  20F4               	addwfc	prodh,w,c
  5396  002FBA  6EDA               	movwf	fsr2h,c
  5397  002FBC  2ADE               	incf	postinc2,f,c
  5398  002FBE  0E00               	movlw	0
  5399  002FC0  22DD               	addwfc	postdec2,f,c
  5400                           
  5401                           ; BSR set to: 2
  5402                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5403  002FC2  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5404  002FC4  0D08               	mullw	8
  5405  002FC6  0E05               	movlw	5
  5406  002FC8  26F3               	addwf	prodl,f,c
  5407  002FCA  0E00               	movlw	0
  5408  002FCC  22F4               	addwfc	prodh,f,c
  5409  002FCE  0EA4               	movlw	low _TaskTable
  5410  002FD0  24F3               	addwf	prodl,w,c
  5411  002FD2  6ED9               	movwf	fsr2l,c
  5412  002FD4  0E05               	movlw	high _TaskTable
  5413  002FD6  20F4               	addwfc	prodh,w,c
  5414  002FD8  6EDA               	movwf	fsr2h,c
  5415  002FDA  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5416  002FDC  0D08               	mullw	8
  5417  002FDE  0E03               	movlw	3
  5418  002FE0  26F3               	addwf	prodl,f,c
  5419  002FE2  0E00               	movlw	0
  5420  002FE4  22F4               	addwfc	prodh,f,c
  5421  002FE6  0EA4               	movlw	low _TaskTable
  5422  002FE8  24F3               	addwf	prodl,w,c
  5423  002FEA  6EE1               	movwf	fsr1l,c
  5424  002FEC  0E05               	movlw	high _TaskTable
  5425  002FEE  20F4               	addwfc	prodh,w,c
  5426  002FF0  6EE2               	movwf	fsr1h,c
  5427  002FF2  50DE               	movf	postinc2,w,c
  5428  002FF4  5CE6               	subwf	postinc1,w,c
  5429  002FF6  50DE               	movf	postinc2,w,c
  5430  002FF8  58E6               	subwfb	postinc1,w,c
  5431  002FFA  A0D8               	btfss	status,0,c
  5432  002FFC  D04E               	goto	l775
  5433                           
  5434                           ; BSR set to: 2
  5435                           ;os_sched.c: 111: {
  5436                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5437  002FFE  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5438  003000  0D08               	mullw	8
  5439  003002  0E03               	movlw	3
  5440  003004  26F3               	addwf	prodl,f,c
  5441  003006  0E00               	movlw	0
  5442  003008  22F4               	addwfc	prodh,f,c
  5443  00300A  0EA4               	movlw	low _TaskTable
  5444  00300C  24F3               	addwf	prodl,w,c
  5445  00300E  6ED9               	movwf	fsr2l,c
  5446  003010  0E05               	movlw	high _TaskTable
  5447  003012  20F4               	addwfc	prodh,w,c
  5448  003014  6EDA               	movwf	fsr2h,c
  5449  003016  0E00               	movlw	0
  5450  003018  6EDE               	movwf	postinc2,c
  5451  00301A  0E00               	movlw	0
  5452  00301C  6EDD               	movwf	postdec2,c
  5453                           
  5454                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5455  00301E  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5456  003020  0D08               	mullw	8
  5457  003022  0E02               	movlw	2
  5458  003024  26F3               	addwf	prodl,f,c
  5459  003026  0E00               	movlw	0
  5460  003028  22F4               	addwfc	prodh,f,c
  5461  00302A  0EA4               	movlw	low _TaskTable
  5462  00302C  24F3               	addwf	prodl,w,c
  5463  00302E  6ED9               	movwf	fsr2l,c
  5464  003030  0E05               	movlw	high _TaskTable
  5465  003032  20F4               	addwfc	prodh,w,c
  5466  003034  6EDA               	movwf	fsr2h,c
  5467  003036  0E01               	movlw	1
  5468  003038  6EDF               	movwf	indf2,c
  5469                           
  5470                           ; BSR set to: 2
  5471                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5472  00303A  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5473  00303C  0D08               	mullw	8
  5474  00303E  0EA4               	movlw	low _TaskTable
  5475  003040  24F3               	addwf	prodl,w,c
  5476  003042  6ED9               	movwf	fsr2l,c
  5477  003044  0E05               	movlw	high _TaskTable
  5478  003046  20F4               	addwfc	prodh,w,c
  5479  003048  6EDA               	movwf	fsr2h,c
  5480  00304A  D801               	call	u15778
  5481  00304C  D017               	goto	u15779
  5482  00304E                     u15778:
  5483  00304E  0005               	push	
  5484  003050  6EFA               	movwf	pclath,c
  5485  003052  50DE               	movf	postinc2,w,c
  5486  003054  6EFD               	movwf	tosl,c
  5487  003056  50DE               	movf	postinc2,w,c
  5488  003058  6EFE               	movwf	tosh,c
  5489  00305A  50F8               	movf	tblptru,w,c
  5490  00305C  6EFF               	movwf	tosu,c
  5491  00305E  50FA               	movf	pclath,w,c
  5492  003060  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5493  003062  0D08               	mullw	8
  5494  003064  0E07               	movlw	7
  5495  003066  26F3               	addwf	prodl,f,c
  5496  003068  0E00               	movlw	0
  5497  00306A  22F4               	addwfc	prodh,f,c
  5498  00306C  0EA4               	movlw	low _TaskTable
  5499  00306E  24F3               	addwf	prodl,w,c
  5500  003070  6ED9               	movwf	fsr2l,c
  5501  003072  0E05               	movlw	high _TaskTable
  5502  003074  20F4               	addwfc	prodh,w,c
  5503  003076  6EDA               	movwf	fsr2h,c
  5504  003078  50DF               	movf	indf2,w,c
  5505  00307A  0012               	return		;indir
  5506  00307C                     u15779:
  5507                           
  5508                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5509  00307C  0102               	movlb	2	; () banked
  5510  00307E  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5511  003080  0D08               	mullw	8
  5512  003082  0E02               	movlw	2
  5513  003084  26F3               	addwf	prodl,f,c
  5514  003086  0E00               	movlw	0
  5515  003088  22F4               	addwfc	prodh,f,c
  5516  00308A  0EA4               	movlw	low _TaskTable
  5517  00308C  24F3               	addwf	prodl,w,c
  5518  00308E  6ED9               	movwf	fsr2l,c
  5519  003090  0E05               	movlw	high _TaskTable
  5520  003092  20F4               	addwfc	prodh,w,c
  5521  003094  6EDA               	movwf	fsr2h,c
  5522  003096  0E00               	movlw	0
  5523  003098  6EDF               	movwf	indf2,c
  5524  00309A                     l775:
  5525                           
  5526                           ; BSR set to: 2
  5527                           
  5528                           ; BSR set to: 2
  5529                           
  5530                           ;os_sched.c: 117: else
  5531                           ;os_sched.c: 118: {
  5532                           
  5533                           ; BSR set to: 2
  5534  00309A  2BC8               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5535  00309C  D772               	goto	l15974
  5536  00309E                     __end_of_ScheduleTasks:
  5537                           	opt stack 0
  5538                           tosu	equ	0xFFF
  5539                           tosh	equ	0xFFE
  5540                           tosl	equ	0xFFD
  5541                           pclath	equ	0xFFA
  5542                           tblptru	equ	0xFF8
  5543                           tblptrh	equ	0xFF7
  5544                           tblptrl	equ	0xFF6
  5545                           tablat	equ	0xFF5
  5546                           prodh	equ	0xFF4
  5547                           prodl	equ	0xFF3
  5548                           intcon	equ	0xFF2
  5549                           intcon2	equ	0xFF1
  5550                           intcon3	equ	0xFF0
  5551                           postinc0	equ	0xFEE
  5552                           wreg	equ	0xFE8
  5553                           postinc1	equ	0xFE6
  5554                           postdec1	equ	0xFE5
  5555                           fsr1h	equ	0xFE2
  5556                           fsr1l	equ	0xFE1
  5557                           indf2	equ	0xFDF
  5558                           postinc2	equ	0xFDE
  5559                           postdec2	equ	0xFDD
  5560                           fsr2h	equ	0xFDA
  5561                           fsr2l	equ	0xFD9
  5562                           status	equ	0xFD8
  5563                           
  5564 ;; *************** function _InitializeTasks *****************
  5565 ;; Defined at:
  5566 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5581 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  5583 ;;      Totals:         0       0       0       1       0       2       0       0       0       0       0       0       
      +0       0       0       0
  5584 ;;Total ram usage:        3 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:   21
  5587 ;; This function calls:
  5588 ;;		_I2cSlv_MainTask
  5589 ;;		_Led_MainTask
  5590 ;;		_MdmHttp_MainTask
  5591 ;;		_Mdm_DrvMainFn
  5592 ;;		_Mdm_MainTask
  5593 ;;		_MyApp_Task
  5594 ;;		_Rtcm_MainTask
  5595 ;;		_Term_MainTask
  5596 ;;		_UsbDevice_MainTask
  5597 ;;		_Wdg_MainTask
  5598 ;; This function is called by:
  5599 ;;		_Sch_MainScheduler
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text15
  5604  0050B0                     __ptext15:
  5605                           	opt stack 0
  5606  0050B0                     _InitializeTasks:
  5607                           	opt stack 8
  5608                           
  5609                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5610                           
  5611                           ; BSR set to: 4
  5612                           ;incstack = 0
  5613  0050B0  0E00               	movlw	0
  5614  0050B2  0102               	movlb	2	; () banked
  5615  0050B4  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5616                           
  5617                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5618  0050B6  0E00               	movlw	0
  5619  0050B8  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5620  0050BA                     l15962:
  5621                           
  5622                           ; BSR set to: 2
  5623  0050BA  0E30               	movlw	low _TaskNumber
  5624  0050BC  6EF6               	movwf	tblptrl,c
  5625  0050BE                     	if	1	;There is more than 1 active tblptr byte
  5626  0050BE  0EFC               	movlw	high _TaskNumber
  5627  0050C0  6EF7               	movwf	tblptrh,c
  5628  0050C2                     	endif
  5629  0050C2                     	if	0	;There are less than 3 active tblptr bytes
  5630  0050C2                     	endif
  5631  0050C2  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5632  0050C4  0104               	movlb	4	; () banked
  5633  0050C6  6FFC               	movwf	??_InitializeTasks& (0+255),b
  5634  0050C8  6BFD               	clrf	(??_InitializeTasks+1)& (0+255),b
  5635  0050CA  0009               	tblrd		*+
  5636  0050CC  50F5               	movf	tablat,w,c
  5637  0050CE  5DFC               	subwf	??_InitializeTasks& (0+255),w,b
  5638  0050D0  0009               	tblrd		*+
  5639  0050D2  50F5               	movf	tablat,w,c
  5640  0050D4  59FD               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5641  0050D6  B0D8               	btfsc	status,0,c
  5642  0050D8  0012               	return	
  5643                           
  5644                           ; BSR set to: 4
  5645                           ;os_sched.c: 86: {
  5646                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5647                           
  5648                           ; BSR set to: 4
  5649                           
  5650                           ; BSR set to: 4
  5651  0050DA  0102               	movlb	2	; () banked
  5652  0050DC  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5653  0050DE  0D08               	mullw	8
  5654  0050E0  0EA4               	movlw	low _TaskTable
  5655  0050E2  24F3               	addwf	prodl,w,c
  5656  0050E4  6ED9               	movwf	fsr2l,c
  5657  0050E6  0E05               	movlw	high _TaskTable
  5658  0050E8  20F4               	addwfc	prodh,w,c
  5659  0050EA  6EDA               	movwf	fsr2h,c
  5660  0050EC  D801               	call	u15738
  5661  0050EE  D017               	goto	u15739
  5662  0050F0                     u15738:
  5663  0050F0  0005               	push	
  5664  0050F2  6EFA               	movwf	pclath,c
  5665  0050F4  50DE               	movf	postinc2,w,c
  5666  0050F6  6EFD               	movwf	tosl,c
  5667  0050F8  50DE               	movf	postinc2,w,c
  5668  0050FA  6EFE               	movwf	tosh,c
  5669  0050FC  50F8               	movf	tblptru,w,c
  5670  0050FE  6EFF               	movwf	tosu,c
  5671  005100  50FA               	movf	pclath,w,c
  5672  005102  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5673  005104  0D08               	mullw	8
  5674  005106  0E07               	movlw	7
  5675  005108  26F3               	addwf	prodl,f,c
  5676  00510A  0E00               	movlw	0
  5677  00510C  22F4               	addwfc	prodh,f,c
  5678  00510E  0EA4               	movlw	low _TaskTable
  5679  005110  24F3               	addwf	prodl,w,c
  5680  005112  6ED9               	movwf	fsr2l,c
  5681  005114  0E05               	movlw	high _TaskTable
  5682  005116  20F4               	addwfc	prodh,w,c
  5683  005118  6EDA               	movwf	fsr2h,c
  5684  00511A  50DF               	movf	indf2,w,c
  5685  00511C  0012               	return		;indir
  5686  00511E                     u15739:
  5687  00511E  0102               	movlb	2	; () banked
  5688  005120  2BC8               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5689  005122  D7CB               	goto	l15962
  5690  005124                     __end_of_InitializeTasks:
  5691                           	opt stack 0
  5692                           tosu	equ	0xFFF
  5693                           tosh	equ	0xFFE
  5694                           tosl	equ	0xFFD
  5695                           pclath	equ	0xFFA
  5696                           tblptru	equ	0xFF8
  5697                           tblptrh	equ	0xFF7
  5698                           tblptrl	equ	0xFF6
  5699                           tablat	equ	0xFF5
  5700                           prodh	equ	0xFF4
  5701                           prodl	equ	0xFF3
  5702                           intcon	equ	0xFF2
  5703                           intcon2	equ	0xFF1
  5704                           intcon3	equ	0xFF0
  5705                           postinc0	equ	0xFEE
  5706                           wreg	equ	0xFE8
  5707                           postinc1	equ	0xFE6
  5708                           postdec1	equ	0xFE5
  5709                           fsr1h	equ	0xFE2
  5710                           fsr1l	equ	0xFE1
  5711                           indf2	equ	0xFDF
  5712                           postinc2	equ	0xFDE
  5713                           postdec2	equ	0xFDD
  5714                           fsr2h	equ	0xFDA
  5715                           fsr2l	equ	0xFD9
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function _MyApp_Task *****************
  5719 ;; Defined at:
  5720 ;;		line 171 in file "../Source/c/04_App/app.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  Options         1    wreg     unsigned char 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  Options         1    0[COMRAM] unsigned char 
  5725 ;;  emptyNumber    13   19[BANK1 ] const unsigned char [13]
  5726 ;;  cmdAddNumber    4   35[BANK1 ] const unsigned char [4]
  5727 ;;  cmpString       3   32[BANK1 ] unsigned char [3]
  5728 ;;  numberInMemo    1   40[BANK1 ] unsigned char 
  5729 ;;  memoryResult    1   39[BANK1 ] enum E8114
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5743 ;;Total ram usage:       22 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:   19
  5746 ;; This function calls:
  5747 ;;		_GetCallerNumber
  5748 ;;		_Led_SetLedBlinkTime
  5749 ;;		_Led_SetLedStatus
  5750 ;;		_Mdm_GetSmsData
  5751 ;;		_Mdm_HangPhoneCall
  5752 ;;		_Mdm_IsRinging
  5753 ;;		_Mdm_IsSmsReceived
  5754 ;;		_Mdm_RequestSmsData
  5755 ;;		_StringCompare
  5756 ;;		_Uart_WriteConstString
  5757 ;;		_initFsm
  5758 ;;		_initMemorizedNumbersCount
  5759 ;;		_isNumberInMemory
  5760 ;;		_isNumberValid
  5761 ;;		_parseCommand
  5762 ;;		_saveNumberInMemory
  5763 ;;		_waitSetupCall
  5764 ;; This function is called by:
  5765 ;;		_InitializeTasks
  5766 ;;		_ScheduleTasks
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text16
  5771  0015EE                     __ptext16:
  5772                           	opt stack 0
  5773  0015EE                     _MyApp_Task:
  5774                           	opt stack 9
  5775                           
  5776                           ;app.c: 173: const uint8_t emptyNumber[((UINT8)(13))] = {0};
  5777                           
  5778                           ; BSR set to: 4
  5779                           ;incstack = 0
  5780  0015EE  0E11               	movlw	low MyApp_Task@F9029
  5781  0015F0  6EF6               	movwf	tblptrl,c
  5782  0015F2                     	if	1	;There is more than 1 active tblptr byte
  5783  0015F2  0EFC               	movlw	high MyApp_Task@F9029
  5784  0015F4  6EF7               	movwf	tblptrh,c
  5785  0015F6                     	endif
  5786  0015F6                     	if	0	;There are less than 3 active tblptr bytes
  5787  0015F6                     	endif
  5788  0015F6  EE21  F013         	lfsr	2,MyApp_Task@emptyNumber
  5789  0015FA  0E0C               	movlw	12
  5790  0015FC                     u15530:
  5791  0015FC  0009               	tblrd		*+
  5792  0015FE  CFF5 FFDE          	movff	tablat,postinc2
  5793  001602  06E8               	decf	wreg,f,c
  5794  001604  E2FB               	bc	u15530
  5795                           
  5796                           ;app.c: 174: static UINT8 smsPhoneNumber[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5
      +                          ', '6', '7', '8', '9'};
  5797                           ;app.c: 179: const uint8_t cmdAddNumber[] = {'N', 'U', 'M', '+'};
  5798  001606  0E24               	movlw	low MyApp_Task@F9032
  5799  001608  6EF6               	movwf	tblptrl,c
  5800  00160A                     	if	1	;There is more than 1 active tblptr byte
  5801  00160A  0EFC               	movlw	high MyApp_Task@F9032
  5802  00160C  6EF7               	movwf	tblptrh,c
  5803  00160E                     	endif
  5804  00160E                     	if	0	;There are less than 3 active tblptr bytes
  5805  00160E                     	endif
  5806  00160E  0009               	tblrd		*+
  5807  001610  CFF5 F123          	movff	tablat,MyApp_Task@cmdAddNumber
  5808  001614  0009               	tblrd		*+
  5809  001616  CFF5 F124          	movff	tablat,MyApp_Task@cmdAddNumber+1
  5810  00161A  0009               	tblrd		*+
  5811  00161C  CFF5 F125          	movff	tablat,MyApp_Task@cmdAddNumber+2
  5812  001620  000A               	tblrd		*-
  5813  001622  CFF5 F126          	movff	tablat,MyApp_Task@cmdAddNumber+3
  5814                           
  5815                           ;app.c: 180: uint8_t cmpString[] = {'c', 'a', 't'};
  5816  001626  C3CF  F120         	movff	MyApp_Task@F9034,MyApp_Task@cmpString
  5817  00162A  C3D0  F121         	movff	MyApp_Task@F9034+1,MyApp_Task@cmpString+1
  5818  00162E  C3D1  F122         	movff	MyApp_Task@F9034+2,MyApp_Task@cmpString+2
  5819                           
  5820                           ;app.c: 182: static gateFsmStates currentState = GATE_INIT;
  5821                           ;app.c: 183: I2cOpStsType memoryResult = OP_COMPLETE;
  5822  001632  0E01               	movlw	1
  5823  001634  0101               	movlb	1	; () banked
  5824  001636  6F27               	movwf	MyApp_Task@memoryResult& (0+255),b
  5825                           
  5826                           ; BSR set to: 1
  5827                           ;app.c: 184: uint8_t numberInMemory = 0;
  5828  001638  0E00               	movlw	0
  5829  00163A  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  5830                           
  5831                           ;app.c: 186: switch (SystemState)
  5832  00163C  D111               	goto	l2597
  5833  00163E                     
  5834                           ;app.c: 191: Led_SetLedBlinkTime(1u,100,900);
  5835                           
  5836                           ; BSR set to: 1
  5837  00163E  0E00               	movlw	0
  5838  001640  0100               	movlb	0	; () banked
  5839  001642  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5840  001644  0E64               	movlw	100
  5841  001646  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5842  001648  0E03               	movlw	3
  5843  00164A  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5844  00164C  0E84               	movlw	132
  5845  00164E  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5846  001650  0E01               	movlw	1
  5847  001652  EC28  F02C         	call	_Led_SetLedBlinkTime
  5848                           
  5849                           ;app.c: 192: break;
  5850  001656  0012               	return	
  5851  001658                     
  5852                           ;app.c: 199: if (initFsm())
  5853  001658  EC2A  F02E         	call	_initFsm	;wreg free
  5854  00165C  0900               	iorlw	0
  5855  00165E  B4D8               	btfsc	status,2,c
  5856  001660  0012               	return	
  5857                           
  5858                           ;app.c: 200: {
  5859                           ;app.c: 201: if (isMemoryEmpty)
  5860  001662  0101               	movlb	1	; () banked
  5861  001664  51FE               	movf	_isMemoryEmpty& (0+255),w,b
  5862  001666  B4D8               	btfsc	status,2,c
  5863  001668  D036               	goto	l2604
  5864                           
  5865                           ; BSR set to: 1
  5866                           ;app.c: 202: {
  5867                           ;app.c: 203: if (waitSetupCall())
  5868  00166A  EC46  F02D         	call	_waitSetupCall	;wreg free
  5869  00166E  0900               	iorlw	0
  5870  001670  B4D8               	btfsc	status,2,c
  5871  001672  D003               	goto	l2605
  5872                           
  5873                           ;app.c: 204: {
  5874                           ;app.c: 205: currentState = GATE_SAVE_FIRST_MASTER;
  5875  001674  0E01               	movlw	1
  5876  001676  0101               	movlb	1	; () banked
  5877  001678  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5878  00167A                     l2605:
  5879                           
  5880                           ;app.c: 206: }
  5881                           ;app.c: 207: if (Mdm_IsSmsReceived())
  5882                           
  5883                           ; BSR set to: 1
  5884  00167A  ECE1  F031         	call	_Mdm_IsSmsReceived	;wreg free
  5885  00167E  0900               	iorlw	0
  5886  001680  A4D8               	btfss	status,2,c
  5887                           
  5888                           ;app.c: 208: {
  5889                           ;app.c: 209: Mdm_RequestSmsData();
  5890  001682  EC8E  F033         	call	_Mdm_RequestSmsData	;wreg free
  5891                           
  5892                           ;app.c: 210: }
  5893                           ;app.c: 211: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  5894  001686  0E95               	movlw	low _smsText
  5895  001688  0100               	movlb	0	; () banked
  5896  00168A  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5897  00168C  0E04               	movlw	high _smsText
  5898  00168E  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5899  001690  EC70  F029         	call	_Mdm_GetSmsData	;wreg free
  5900  001694  06E8               	decf	wreg,f,c
  5901  001696  A4D8               	btfss	status,2,c
  5902  001698  0012               	return	
  5903                           
  5904                           ;app.c: 212: {
  5905                           ;app.c: 213: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5906  00169A  0E2F               	movlw	low STR_29
  5907  00169C  0100               	movlb	0	; () banked
  5908  00169E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  5909  0016A0  0EFF               	movlw	high STR_29
  5910  0016A2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  5911  0016A4  0E01               	movlw	1
  5912  0016A6  EC1C  F02F         	call	_Uart_WriteConstString
  5913                           
  5914                           ;app.c: 214: if (StringCompare(smsText, cmdAddNumber, sizeof(cmdAddNumber)))
  5915  0016AA  0E95               	movlw	low _smsText
  5916  0016AC  0100               	movlb	0	; () banked
  5917  0016AE  6F7D               	movwf	StringCompare@String1& (0+255),b
  5918  0016B0  0E04               	movlw	high _smsText
  5919  0016B2  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
  5920  0016B4  0E23               	movlw	low MyApp_Task@cmdAddNumber
  5921  0016B6  6F7F               	movwf	StringCompare@String2& (0+255),b
  5922  0016B8  0E01               	movlw	high MyApp_Task@cmdAddNumber
  5923  0016BA  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
  5924  0016BC  0E00               	movlw	0
  5925  0016BE  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
  5926  0016C0  0E04               	movlw	4
  5927  0016C2  6F81               	movwf	StringCompare@Len& (0+255),b
  5928  0016C4  ECA5  F02C         	call	_StringCompare	;wreg free
  5929  0016C8  0900               	iorlw	0
  5930  0016CA  B4D8               	btfsc	status,2,c
  5931  0016CC  0012               	return	
  5932                           
  5933                           ;app.c: 215: {
  5934                           ;app.c: 216: currentState = GATE_SAVE_FIRST_MASTER;
  5935  0016CE  0E01               	movlw	1
  5936  0016D0  0101               	movlb	1	; () banked
  5937  0016D2  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5938                           
  5939                           ; BSR set to: 1
  5940                           ;app.c: 217: }
  5941                           ;app.c: 218: }
  5942                           ;app.c: 219: }
  5943                           
  5944                           ; BSR set to: 1
  5945  0016D4  0012               	return	
  5946  0016D6                     l2604:
  5947                           
  5948                           ; BSR set to: 1
  5949                           ;app.c: 220: else
  5950                           ;app.c: 221: {
  5951                           ;app.c: 222: Led_SetLedStatus(1u, LED_STS_ON);
  5952                           
  5953                           ; BSR set to: 1
  5954  0016D6  0E01               	movlw	1
  5955  0016D8  0100               	movlb	0	; () banked
  5956  0016DA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  5957  0016DC  0E01               	movlw	1
  5958  0016DE  ECFD  F030         	call	_Led_SetLedStatus
  5959                           
  5960                           ;app.c: 223: currentState = GATE_WAIT_EVENT;
  5961  0016E2  0E03               	movlw	3
  5962  0016E4  0101               	movlb	1	; () banked
  5963  0016E6  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5964                           
  5965                           ; BSR set to: 1
  5966                           ;app.c: 224: }
  5967                           ;app.c: 225: }
  5968                           ;app.c: 226: break;
  5969                           
  5970                           ; BSR set to: 1
  5971  0016E8  0012               	return	
  5972  0016EA                     
  5973                           ; BSR set to: 1
  5974                           ;app.c: 229: saveNumberInMemory(16, GetCallerNumber());
  5975                           
  5976                           ; BSR set to: 1
  5977  0016EA  EC33  F030         	call	_GetCallerNumber	;wreg free
  5978  0016EE  C083  F08E         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
  5979  0016F2  C084  F08F         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
  5980  0016F6  0E10               	movlw	16
  5981  0016F8  ECEF  F032         	call	_saveNumberInMemory
  5982                           
  5983                           ;app.c: 230: currentState = GATE_UPDATE_NUMBERS_COUNT;
  5984  0016FC  0E02               	movlw	2
  5985  0016FE  0101               	movlb	1	; () banked
  5986  001700  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5987                           
  5988                           ;app.c: 231: break;
  5989  001702  0012               	return	
  5990  001704                     
  5991                           ; BSR set to: 1
  5992                           ;app.c: 234: initMemorizedNumbersCount();
  5993                           
  5994                           ; BSR set to: 1
  5995  001704  ECFC  F032         	call	_initMemorizedNumbersCount	;wreg free
  5996                           
  5997                           ;app.c: 235: Led_SetLedStatus(1u, LED_STS_ON);
  5998  001708  0E01               	movlw	1
  5999  00170A  0100               	movlb	0	; () banked
  6000  00170C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  6001  00170E  0E01               	movlw	1
  6002  001710  ECFD  F030         	call	_Led_SetLedStatus
  6003                           
  6004                           ;app.c: 236: currentState = GATE_WAIT_EVENT;
  6005  001714  0E03               	movlw	3
  6006  001716  0101               	movlb	1	; () banked
  6007  001718  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6008                           
  6009                           ;app.c: 237: break;
  6010  00171A  0012               	return	
  6011  00171C                     
  6012                           ; BSR set to: 1
  6013                           ;app.c: 240: if (Mdm_IsSmsReceived())
  6014                           
  6015                           ; BSR set to: 1
  6016  00171C  ECE1  F031         	call	_Mdm_IsSmsReceived	;wreg free
  6017  001720  0900               	iorlw	0
  6018  001722  A4D8               	btfss	status,2,c
  6019                           
  6020                           ;app.c: 241: {
  6021                           ;app.c: 242: Mdm_RequestSmsData();
  6022  001724  EC8E  F033         	call	_Mdm_RequestSmsData	;wreg free
  6023                           
  6024                           ;app.c: 243: }
  6025                           ;app.c: 244: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  6026  001728  0E95               	movlw	low _smsText
  6027  00172A  0100               	movlb	0	; () banked
  6028  00172C  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  6029  00172E  0E04               	movlw	high _smsText
  6030  001730  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  6031  001732  EC70  F029         	call	_Mdm_GetSmsData	;wreg free
  6032  001736  06E8               	decf	wreg,f,c
  6033  001738  A4D8               	btfss	status,2,c
  6034  00173A  D011               	goto	l2615
  6035                           
  6036                           ;app.c: 245: {
  6037                           ;app.c: 246: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  6038  00173C  0E2F               	movlw	low STR_29
  6039  00173E  0100               	movlb	0	; () banked
  6040  001740  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  6041  001742  0EFF               	movlw	high STR_29
  6042  001744  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  6043  001746  0E01               	movlw	1
  6044  001748  EC1C  F02F         	call	_Uart_WriteConstString
  6045                           
  6046                           ;app.c: 247: currentState = parseCommand(smsText);
  6047  00174C  0E95               	movlw	low _smsText
  6048  00174E  0100               	movlb	0	; () banked
  6049  001750  6F88               	movwf	parseCommand@text& (0+255),b
  6050  001752  0E04               	movlw	high _smsText
  6051  001754  6F89               	movwf	(parseCommand@text+1)& (0+255),b
  6052  001756  ECA3  F025         	call	_parseCommand	;wreg free
  6053  00175A  0101               	movlb	1	; () banked
  6054  00175C  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6055  00175E                     l2615:
  6056                           
  6057                           ;app.c: 248: }
  6058                           ;app.c: 249: if (Mdm_IsRinging())
  6059                           
  6060                           ; BSR set to: 1
  6061  00175E  ECCF  F031         	call	_Mdm_IsRinging	;wreg free
  6062  001762  0900               	iorlw	0
  6063  001764  B4D8               	btfsc	status,2,c
  6064  001766  0012               	return	
  6065                           
  6066                           ;app.c: 250: {
  6067                           ;app.c: 251: Mdm_HangPhoneCall();
  6068  001768  EC6C  F033         	call	_Mdm_HangPhoneCall	;wreg free
  6069                           
  6070                           ;app.c: 252: currentState = GATE_TRIGGER_CMD;
  6071  00176C  0E06               	movlw	6
  6072  00176E  0101               	movlb	1	; () banked
  6073  001770  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6074                           
  6075                           ; BSR set to: 1
  6076                           ;app.c: 253: }
  6077                           ;app.c: 254: break;
  6078  001772  0012               	return	
  6079  001774                     
  6080                           ; BSR set to: 1
  6081                           ;app.c: 257: if (isNumberValid(smsText + 3))
  6082                           
  6083                           ; BSR set to: 1
  6084  001774  0E98               	movlw	low (_smsText+3)
  6085  001776  0100               	movlb	0	; () banked
  6086  001778  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
  6087  00177A  0E04               	movlw	high (_smsText+3)
  6088  00177C  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
  6089  00177E  EC0A  F02A         	call	_isNumberValid	;wreg free
  6090  001782  0900               	iorlw	0
  6091  001784  B4D8               	btfsc	status,2,c
  6092  001786  0012               	return	
  6093                           
  6094                           ;app.c: 258: {
  6095                           ;app.c: 259: numberInMemory = isNumberInMemory(GetCallerNumber());
  6096  001788  EC33  F030         	call	_GetCallerNumber	;wreg free
  6097  00178C  C083  F100         	movff	?_GetCallerNumber,isNumberInMemory@phoneNumber
  6098  001790  C084  F101         	movff	?_GetCallerNumber+1,isNumberInMemory@phoneNumber+1
  6099  001794  EC08  F027         	call	_isNumberInMemory	;wreg free
  6100  001798  0101               	movlb	1	; () banked
  6101  00179A  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6102                           
  6103                           ; BSR set to: 1
  6104                           ;app.c: 260: if (numberInMemory == 1)
  6105  00179C  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6106  00179E  A4D8               	btfss	status,2,c
  6107  0017A0  0012               	return	
  6108                           
  6109                           ; BSR set to: 1
  6110                           ;app.c: 261: {
  6111                           ;app.c: 262: currentState = GATE_WAIT_EVENT;
  6112  0017A2  0E03               	movlw	3
  6113  0017A4  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6114                           
  6115                           ; BSR set to: 1
  6116                           ;app.c: 267: }
  6117                           ;app.c: 268: }
  6118                           ;app.c: 269: break;
  6119                           
  6120                           ; BSR set to: 1
  6121                           
  6122                           ; BSR set to: 1
  6123                           
  6124                           ;app.c: 265: {
  6125                           
  6126                           ; BSR set to: 1
  6127                           
  6128                           ; BSR set to: 1
  6129                           
  6130                           ; BSR set to: 1
  6131                           
  6132                           ;app.c: 263: }
  6133  0017A6  0012               	return	
  6134  0017A8                     
  6135                           ; BSR set to: 1
  6136                           ;app.c: 272: if (isNumberValid(smsText + 3))
  6137                           
  6138                           ; BSR set to: 1
  6139  0017A8  0E98               	movlw	low (_smsText+3)
  6140  0017AA  0100               	movlb	0	; () banked
  6141  0017AC  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
  6142  0017AE  0E04               	movlw	high (_smsText+3)
  6143  0017B0  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
  6144  0017B2  EC0A  F02A         	call	_isNumberValid	;wreg free
  6145  0017B6  0900               	iorlw	0
  6146  0017B8  B4D8               	btfsc	status,2,c
  6147  0017BA  0012               	return	
  6148                           
  6149                           ;app.c: 273: {
  6150                           ;app.c: 274: numberInMemory = isNumberInMemory(GetCallerNumber());
  6151  0017BC  EC33  F030         	call	_GetCallerNumber	;wreg free
  6152  0017C0  C083  F100         	movff	?_GetCallerNumber,isNumberInMemory@phoneNumber
  6153  0017C4  C084  F101         	movff	?_GetCallerNumber+1,isNumberInMemory@phoneNumber+1
  6154  0017C8  EC08  F027         	call	_isNumberInMemory	;wreg free
  6155  0017CC  0101               	movlb	1	; () banked
  6156  0017CE  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6157                           
  6158                           ; BSR set to: 1
  6159                           ;app.c: 275: if (numberInMemory == 1)
  6160  0017D0  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6161  0017D2  A4D8               	btfss	status,2,c
  6162  0017D4  D003               	goto	l2624
  6163                           
  6164                           ; BSR set to: 1
  6165                           ;app.c: 276: {
  6166                           ;app.c: 277: currentState = GATE_WAIT_EVENT;
  6167  0017D6  0E03               	movlw	3
  6168  0017D8  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6169                           
  6170                           ;app.c: 278: }
  6171  0017DA  0012               	return	
  6172  0017DC                     l2624:
  6173                           
  6174                           ; BSR set to: 1
  6175                           ;app.c: 279: else if (numberInMemory != 0 && numberInMemory != 1)
  6176                           
  6177                           ; BSR set to: 1
  6178  0017DC  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6179  0017DE  B4D8               	btfsc	status,2,c
  6180  0017E0  0012               	return	
  6181                           
  6182                           ; BSR set to: 1
  6183  0017E2  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6184  0017E4  B4D8               	btfsc	status,2,c
  6185  0017E6  0012               	return	
  6186                           
  6187                           ; BSR set to: 1
  6188                           ;app.c: 280: {
  6189                           ;app.c: 281: saveNumberInMemory(numberInMemory, emptyNumber);
  6190  0017E8  0E13               	movlw	low MyApp_Task@emptyNumber
  6191  0017EA  0100               	movlb	0	; () banked
  6192  0017EC  6F8E               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
  6193  0017EE  0E01               	movlw	high MyApp_Task@emptyNumber
  6194  0017F0  6F8F               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
  6195  0017F2  0101               	movlb	1	; () banked
  6196  0017F4  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6197  0017F6  ECEF  F032         	call	_saveNumberInMemory
  6198                           
  6199                           ;app.c: 282: }
  6200                           ;app.c: 283: }
  6201                           ;app.c: 284: break;
  6202  0017FA  0012               	return	
  6203  0017FC                     
  6204                           ;app.c: 287: numberInMemory = isNumberInMemory(GetCallerNumber());
  6205  0017FC  EC33  F030         	call	_GetCallerNumber	;wreg free
  6206  001800  C083  F100         	movff	?_GetCallerNumber,isNumberInMemory@phoneNumber
  6207  001804  C084  F101         	movff	?_GetCallerNumber+1,isNumberInMemory@phoneNumber+1
  6208  001808  EC08  F027         	call	_isNumberInMemory	;wreg free
  6209  00180C  0101               	movlb	1	; () banked
  6210  00180E  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6211                           
  6212                           ; BSR set to: 1
  6213                           ;app.c: 288: if (numberInMemory == 1)
  6214  001810  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6215  001812  A4D8               	btfss	status,2,c
  6216  001814  D003               	goto	l2628
  6217                           
  6218                           ; BSR set to: 1
  6219                           ;app.c: 289: {
  6220                           ;app.c: 290: currentState = GATE_WAIT_EVENT;
  6221  001816  0E03               	movlw	3
  6222  001818  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6223                           
  6224                           ;app.c: 291: }
  6225  00181A  0012               	return	
  6226  00181C                     l2628:
  6227                           
  6228                           ; BSR set to: 1
  6229                           ;app.c: 292: else if (numberInMemory != 0 && numberInMemory != 1)
  6230                           
  6231                           ; BSR set to: 1
  6232  00181C  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6233  00181E  B4D8               	btfsc	status,2,c
  6234  001820  0012               	return	
  6235                           
  6236                           ; BSR set to: 1
  6237  001822  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6238  001824  B4D8               	btfsc	status,2,c
  6239  001826  0012               	return	
  6240                           
  6241                           ; BSR set to: 1
  6242                           ;app.c: 293: {
  6243                           ;app.c: 294: currentState = GATE_ACTIVATE_RELAY;
  6244  001828  0E07               	movlw	7
  6245  00182A  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6246                           
  6247                           ; BSR set to: 1
  6248                           ;app.c: 302: }
  6249                           
  6250                           ; BSR set to: 1
  6251                           ;app.c: 301: break;
  6252                           
  6253                           ;app.c: 300: default:
  6254                           
  6255                           ; BSR set to: 1
  6256                           ;app.c: 298: break;
  6257                           
  6258                           ;app.c: 295: }
  6259                           ;app.c: 297: case GATE_ACTIVATE_RELAY:
  6260                           
  6261                           ; BSR set to: 1
  6262                           
  6263                           ; BSR set to: 1
  6264  00182C  0012               	return	
  6265  00182E                     
  6266                           ; BSR set to: 1
  6267  00182E  0101               	movlb	1	; () banked
  6268  001830  51D6               	movf	MyApp_Task@currentState& (0+255),w,b
  6269                           
  6270                           ; Switch size 1, requested type "space"
  6271                           ; Number of cases is 8, Range of values is 0 to 7
  6272                           ; switch strategies available:
  6273                           ; Name         Instructions Cycles
  6274                           ; simple_byte           25    13 (average)
  6275                           ;	Chosen strategy is simple_byte
  6276  001832  0A00               	xorlw	0	; case 0
  6277  001834  B4D8               	btfsc	status,2,c
  6278  001836  D710               	goto	l2602
  6279  001838  0A01               	xorlw	1	; case 1
  6280  00183A  B4D8               	btfsc	status,2,c
  6281  00183C  D756               	goto	l2611
  6282  00183E  0A03               	xorlw	3	; case 2
  6283  001840  B4D8               	btfsc	status,2,c
  6284  001842  D760               	goto	l2612
  6285  001844  0A01               	xorlw	1	; case 3
  6286  001846  B4D8               	btfsc	status,2,c
  6287  001848  D769               	goto	l2613
  6288  00184A  0A07               	xorlw	7	; case 4
  6289  00184C  B4D8               	btfsc	status,2,c
  6290  00184E  D792               	goto	l2617
  6291  001850  0A01               	xorlw	1	; case 5
  6292  001852  B4D8               	btfsc	status,2,c
  6293  001854  D7A9               	goto	l2622
  6294  001856  0A03               	xorlw	3	; case 6
  6295  001858  B4D8               	btfsc	status,2,c
  6296  00185A  D7D0               	goto	l2627
  6297  00185C  0A01               	xorlw	1	; case 7
  6298                           
  6299                           ; BSR set to: 1
  6300                           ;app.c: 368: }
  6301                           
  6302                           ; BSR set to: 1
  6303                           ;app.c: 367: break;
  6304                           
  6305                           ;app.c: 366: default:
  6306                           
  6307                           ; BSR set to: 1
  6308                           ;app.c: 363: break;
  6309  00185E  0012               	return	
  6310  001860                     l2597:
  6311                           
  6312                           ; BSR set to: 1
  6313                           
  6314                           ; BSR set to: 1
  6315  001860  0100               	movlb	0	; () banked
  6316  001862  51D4               	movf	_SystemState& (0+255),w,b
  6317                           
  6318                           ; Switch size 1, requested type "space"
  6319                           ; Number of cases is 2, Range of values is 0 to 1
  6320                           ; switch strategies available:
  6321                           ; Name         Instructions Cycles
  6322                           ; simple_byte            7     4 (average)
  6323                           ;	Chosen strategy is simple_byte
  6324  001864  0A00               	xorlw	0	; case 0
  6325  001866  B4D8               	btfsc	status,2,c
  6326  001868  D6EA               	goto	l2598
  6327  00186A  0A01               	xorlw	1	; case 1
  6328  00186C  A4D8               	btfss	status,2,c
  6329  00186E  0012               	return	
  6330  001870  D7DE               	goto	l2601
  6331  001872                     __end_of_MyApp_Task:
  6332                           	opt stack 0
  6333                           tosu	equ	0xFFF
  6334                           tosh	equ	0xFFE
  6335                           tosl	equ	0xFFD
  6336                           pclath	equ	0xFFA
  6337                           tblptru	equ	0xFF8
  6338                           tblptrh	equ	0xFF7
  6339                           tblptrl	equ	0xFF6
  6340                           tablat	equ	0xFF5
  6341                           prodh	equ	0xFF4
  6342                           prodl	equ	0xFF3
  6343                           intcon	equ	0xFF2
  6344                           intcon2	equ	0xFF1
  6345                           intcon3	equ	0xFF0
  6346                           postinc0	equ	0xFEE
  6347                           wreg	equ	0xFE8
  6348                           postinc1	equ	0xFE6
  6349                           postdec1	equ	0xFE5
  6350                           fsr1h	equ	0xFE2
  6351                           fsr1l	equ	0xFE1
  6352                           indf2	equ	0xFDF
  6353                           postinc2	equ	0xFDE
  6354                           postdec2	equ	0xFDD
  6355                           fsr2h	equ	0xFDA
  6356                           fsr2l	equ	0xFD9
  6357                           status	equ	0xFD8
  6358                           
  6359 ;; *************** function _Term_MainTask *****************
  6360 ;; Defined at:
  6361 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  Options         1    wreg     unsigned char 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  Options         1    0[COMRAM] unsigned char 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  1    wreg      void 
  6368 ;; Registers used:
  6369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6379 ;;Total ram usage:        0 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:   17
  6382 ;; This function calls:
  6383 ;;		_Term_MainSm
  6384 ;; This function is called by:
  6385 ;;		_InitializeTasks
  6386 ;;		_ScheduleTasks
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text17
  6391  0065C4                     __ptext17:
  6392                           	opt stack 0
  6393  0065C4                     _Term_MainTask:
  6394                           	opt stack 11
  6395                           
  6396                           ;term.c: 847: switch (SystemState)
  6397                           
  6398                           ;incstack = 0
  6399  0065C4  D003               	goto	l2478
  6400  0065C6                     
  6401                           ;term.c: 858: Term_MainSm();
  6402  0065C6  EC5B  F008         	call	_Term_MainSm	;wreg free
  6403                           
  6404                           ;term.c: 865: }
  6405                           
  6406                           ;term.c: 864: break;
  6407                           
  6408                           ;term.c: 863: default:
  6409                           
  6410                           ;term.c: 860: break;
  6411  0065CA  0012               	return	
  6412  0065CC                     l2478:
  6413  0065CC  0100               	movlb	0	; () banked
  6414  0065CE  51D4               	movf	_SystemState& (0+255),w,b
  6415                           
  6416                           ; Switch size 1, requested type "space"
  6417                           ; Number of cases is 2, Range of values is 0 to 1
  6418                           ; switch strategies available:
  6419                           ; Name         Instructions Cycles
  6420                           ; simple_byte            7     4 (average)
  6421                           ;	Chosen strategy is simple_byte
  6422  0065D0  0A00               	xorlw	0	; case 0
  6423  0065D2  B4D8               	btfsc	status,2,c
  6424  0065D4  0012               	return	
  6425  0065D6  0A01               	xorlw	1	; case 1
  6426  0065D8  A4D8               	btfss	status,2,c
  6427  0065DA  0012               	return	
  6428  0065DC  D7F4               	goto	l2481
  6429  0065DE                     __end_of_Term_MainTask:
  6430                           	opt stack 0
  6431                           tosu	equ	0xFFF
  6432                           tosh	equ	0xFFE
  6433                           tosl	equ	0xFFD
  6434                           pclath	equ	0xFFA
  6435                           tblptru	equ	0xFF8
  6436                           tblptrh	equ	0xFF7
  6437                           tblptrl	equ	0xFF6
  6438                           tablat	equ	0xFF5
  6439                           prodh	equ	0xFF4
  6440                           prodl	equ	0xFF3
  6441                           intcon	equ	0xFF2
  6442                           intcon2	equ	0xFF1
  6443                           intcon3	equ	0xFF0
  6444                           postinc0	equ	0xFEE
  6445                           wreg	equ	0xFE8
  6446                           postinc1	equ	0xFE6
  6447                           postdec1	equ	0xFE5
  6448                           fsr1h	equ	0xFE2
  6449                           fsr1l	equ	0xFE1
  6450                           indf2	equ	0xFDF
  6451                           postinc2	equ	0xFDE
  6452                           postdec2	equ	0xFDD
  6453                           fsr2h	equ	0xFDA
  6454                           fsr2l	equ	0xFD9
  6455                           status	equ	0xFD8
  6456                           
  6457 ;; *************** function _Rtcm_MainTask *****************
  6458 ;; Defined at:
  6459 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  Options         1    wreg     unsigned char 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  Options         1    0[COMRAM] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6477 ;;Total ram usage:        0 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:   14
  6480 ;; This function calls:
  6481 ;;		_Rtcc_AlarmConfig
  6482 ;;		_Rtcc_LockRtc
  6483 ;;		_Rtcc_RtcConfig
  6484 ;;		_Rtcc_SetRtcStatus
  6485 ;;		_Rtcc_UnlockRtc
  6486 ;;		_Rtcm_GetRtccDate
  6487 ;;		_Rtcm_SetRtccDate
  6488 ;; This function is called by:
  6489 ;;		_InitializeTasks
  6490 ;;		_ScheduleTasks
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text18
  6495  004CF6                     __ptext18:
  6496                           	opt stack 0
  6497  004CF6                     _Rtcm_MainTask:
  6498                           	opt stack 14
  6499                           
  6500                           ;rtcm.c: 101: switch (SystemState)
  6501                           
  6502                           ;incstack = 0
  6503  004CF6  D03D               	goto	l2208
  6504  004CF8                     l2209:
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6508  004CF8  86CD               	bsf	4045,3,c	;volatile
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6512  004CFA  0E00               	movlw	0
  6513  004CFC  0103               	movlb	3	; () banked
  6514  004CFE  6FAF               	movwf	_RtcConfig& (0+255),b
  6515                           
  6516                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6517  004D00  0E00               	movlw	0
  6518  004D02  6FB0               	movwf	(_RtcConfig+1)& (0+255),b
  6519                           
  6520                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6521  004D04  0E01               	movlw	1
  6522  004D06  6FB1               	movwf	(_RtcConfig+2)& (0+255),b
  6523                           
  6524                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6525  004D08  0E01               	movlw	1
  6526  004D0A  6FB2               	movwf	(_RtcConfig+3)& (0+255),b
  6527                           
  6528                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6529  004D0C  0E01               	movlw	1
  6530  004D0E  6FAB               	movwf	_AlCfg& (0+255),b
  6531                           
  6532                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6533  004D10  0E01               	movlw	1
  6534  004D12  6FAC               	movwf	(_AlCfg+1)& (0+255),b
  6535                           
  6536                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6537  004D14  0E01               	movlw	1
  6538  004D16  6FAD               	movwf	(_AlCfg+2)& (0+255),b
  6539                           
  6540                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6541  004D18  0E00               	movlw	0
  6542  004D1A  6FAE               	movwf	(_AlCfg+3)& (0+255),b
  6543                           
  6544                           ; BSR set to: 3
  6545                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6546  004D1C  EC7E  F033         	call	_Rtcc_UnlockRtc	;wreg free
  6547                           
  6548                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6549  004D20  0EAF               	movlw	low _RtcConfig
  6550  004D22  0100               	movlb	0	; () banked
  6551  004D24  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6552  004D26  0E03               	movlw	high _RtcConfig
  6553  004D28  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6554  004D2A  EC8E  F023         	call	_Rtcc_RtcConfig	;wreg free
  6555                           
  6556                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6557  004D2E  0EAB               	movlw	low _AlCfg
  6558  004D30  0100               	movlb	0	; () banked
  6559  004D32  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6560  004D34  0E03               	movlw	high _AlCfg
  6561  004D36  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6562  004D38  EC3A  F029         	call	_Rtcc_AlarmConfig	;wreg free
  6563                           
  6564                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6565  004D3C  0E01               	movlw	1
  6566  004D3E  EC2D  F033         	call	_Rtcc_SetRtcStatus
  6567                           
  6568                           ;rtcm.c: 127: Rtcc_LockRtc();
  6569  004D42  EC86  F033         	call	_Rtcc_LockRtc	;wreg free
  6570                           
  6571                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6572  004D46  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6573  004D4A  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6574  004D4E  0E07               	movlw	7
  6575  004D50                     u15511:
  6576  004D50  CFDB FFEB          	movff	plusw2,plusw0
  6577  004D54  06E8               	decf	wreg,f,c
  6578  004D56  E2FC               	bc	u15511
  6579  004D58  ECD4  F02B         	call	_Rtcm_SetRtccDate	;wreg free
  6580                           
  6581                           ;rtcm.c: 154: break;
  6582  004D5C  0012               	return	
  6583  004D5E                     
  6584                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6585  004D5E  ECD7  F029         	call	_Rtcm_GetRtccDate	;wreg free
  6586  004D62  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6587  004D66  0E07               	movlw	7
  6588  004D68                     u15521:
  6589  004D68  CFEB FFDB          	movff	plusw0,plusw2
  6590  004D6C  06E8               	decf	wreg,f,c
  6591  004D6E  E2FC               	bc	u15521
  6592                           
  6593                           ;rtcm.c: 165: }
  6594                           
  6595                           ;rtcm.c: 164: break;
  6596                           
  6597                           ;rtcm.c: 163: default:
  6598                           
  6599                           ;rtcm.c: 160: break;
  6600  004D70  0012               	return	
  6601  004D72                     l2208:
  6602  004D72  0100               	movlb	0	; () banked
  6603  004D74  51D4               	movf	_SystemState& (0+255),w,b
  6604                           
  6605                           ; Switch size 1, requested type "space"
  6606                           ; Number of cases is 2, Range of values is 0 to 1
  6607                           ; switch strategies available:
  6608                           ; Name         Instructions Cycles
  6609                           ; simple_byte            7     4 (average)
  6610                           ;	Chosen strategy is simple_byte
  6611  004D76  0A00               	xorlw	0	; case 0
  6612  004D78  B4D8               	btfsc	status,2,c
  6613  004D7A  D7BE               	goto	l2209
  6614  004D7C  0A01               	xorlw	1	; case 1
  6615  004D7E  A4D8               	btfss	status,2,c
  6616  004D80  0012               	return	
  6617  004D82  D7ED               	goto	l2211
  6618  004D84                     __end_of_Rtcm_MainTask:
  6619                           	opt stack 0
  6620                           tosu	equ	0xFFF
  6621                           tosh	equ	0xFFE
  6622                           tosl	equ	0xFFD
  6623                           pclath	equ	0xFFA
  6624                           tblptru	equ	0xFF8
  6625                           tblptrh	equ	0xFF7
  6626                           tblptrl	equ	0xFF6
  6627                           tablat	equ	0xFF5
  6628                           prodh	equ	0xFF4
  6629                           prodl	equ	0xFF3
  6630                           intcon	equ	0xFF2
  6631                           intcon2	equ	0xFF1
  6632                           intcon3	equ	0xFF0
  6633                           postinc0	equ	0xFEE
  6634                           plusw0	equ	0xFEB
  6635                           wreg	equ	0xFE8
  6636                           postinc1	equ	0xFE6
  6637                           postdec1	equ	0xFE5
  6638                           fsr1h	equ	0xFE2
  6639                           fsr1l	equ	0xFE1
  6640                           indf2	equ	0xFDF
  6641                           postinc2	equ	0xFDE
  6642                           postdec2	equ	0xFDD
  6643                           plusw2	equ	0xFDB
  6644                           fsr2h	equ	0xFDA
  6645                           fsr2l	equ	0xFD9
  6646                           status	equ	0xFD8
  6647                           
  6648 ;; *************** function _Led_MainTask *****************
  6649 ;; Defined at:
  6650 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  Options         1    wreg     unsigned char 
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;  Options         1    0[COMRAM] unsigned char 
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  1    wreg      void 
  6657 ;; Registers used:
  6658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6667 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6668 ;;Total ram usage:        1 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:   14
  6671 ;; This function calls:
  6672 ;;		_LedStateMachine
  6673 ;; This function is called by:
  6674 ;;		_InitializeTasks
  6675 ;;		_ScheduleTasks
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text19
  6680  003B74                     __ptext19:
  6681                           	opt stack 0
  6682  003B74                     _Led_MainTask:
  6683                           	opt stack 14
  6684                           
  6685                           ;led.c: 300: switch (SystemState)
  6686                           
  6687                           ;incstack = 0
  6688  003B74  D05C               	goto	l2122
  6689  003B76                     l2123:
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6693  003B76  9895               	bcf	3989,4,c	;volatile
  6694                           
  6695                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6696  003B78  9A95               	bcf	3989,5,c	;volatile
  6697                           
  6698                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6699  003B7A  9C95               	bcf	3989,6,c	;volatile
  6700                           
  6701                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6702  003B7C  9883               	bcf	3971,4,c	;volatile
  6703                           
  6704                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6705  003B7E  9A83               	bcf	3971,5,c	;volatile
  6706                           
  6707                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6708  003B80  9C83               	bcf	3971,6,c	;volatile
  6709                           
  6710                           ;led.c: 311: break;
  6711  003B82  0012               	return	
  6712  003B84                     
  6713                           ; BSR set to: 0
  6714                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6715                           
  6716                           ; BSR set to: 0
  6717  003B84  0EFB               	movlw	low _Led1Sts
  6718  003B86  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6719  003B88  0E01               	movlw	high _Led1Sts
  6720  003B8A  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6721  003B8C  0EFA               	movlw	low _Led1OutSts
  6722  003B8E  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6723  003B90  0E01               	movlw	high _Led1OutSts
  6724  003B92  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6725  003B94  0E64               	movlw	low _Led1Blink
  6726  003B96  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6727  003B98  0E03               	movlw	high _Led1Blink
  6728  003B9A  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6729  003B9C  0E88               	movlw	low _Led1Pulse
  6730  003B9E  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6731  003BA0  0E03               	movlw	high _Led1Pulse
  6732  003BA2  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6733  003BA4  0E01               	movlw	1
  6734  003BA6  ECE9  F022         	call	_LedStateMachine
  6735  003BAA  0100               	movlb	0	; () banked
  6736  003BAC  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6737  003BAE  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6738  003BB0  5083               	movf	3971,w,c	;volatile
  6739  003BB2  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6740  003BB4  0BEF               	andlw	-17
  6741  003BB6  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6742  003BB8  6E83               	movwf	3971,c	;volatile
  6743                           
  6744                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6745  003BBA  0EF9               	movlw	low _Led2Sts
  6746  003BBC  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6747  003BBE  0E01               	movlw	high _Led2Sts
  6748  003BC0  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6749  003BC2  0EF8               	movlw	low _Led2OutSts
  6750  003BC4  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6751  003BC6  0E01               	movlw	high _Led2OutSts
  6752  003BC8  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6753  003BCA  0E5B               	movlw	low _Led2Blink
  6754  003BCC  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6755  003BCE  0E03               	movlw	high _Led2Blink
  6756  003BD0  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6757  003BD2  0E82               	movlw	low _Led2Pulse
  6758  003BD4  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6759  003BD6  0E03               	movlw	high _Led2Pulse
  6760  003BD8  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6761  003BDA  0E02               	movlw	2
  6762  003BDC  ECE9  F022         	call	_LedStateMachine
  6763  003BE0  0100               	movlb	0	; () banked
  6764  003BE2  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6765  003BE4  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6766  003BE6  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6767  003BE8  5083               	movf	3971,w,c	;volatile
  6768  003BEA  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6769  003BEC  0BDF               	andlw	-33
  6770  003BEE  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6771  003BF0  6E83               	movwf	3971,c	;volatile
  6772                           
  6773                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6774  003BF2  0EF7               	movlw	low _Led3Sts
  6775  003BF4  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6776  003BF6  0E01               	movlw	high _Led3Sts
  6777  003BF8  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6778  003BFA  0EF6               	movlw	low _Led3OutSts
  6779  003BFC  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6780  003BFE  0E01               	movlw	high _Led3OutSts
  6781  003C00  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6782  003C02  0E52               	movlw	low _Led3Blink
  6783  003C04  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6784  003C06  0E03               	movlw	high _Led3Blink
  6785  003C08  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6786  003C0A  0E7C               	movlw	low _Led3Pulse
  6787  003C0C  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6788  003C0E  0E03               	movlw	high _Led3Pulse
  6789  003C10  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6790  003C12  0E03               	movlw	3
  6791  003C14  ECE9  F022         	call	_LedStateMachine
  6792  003C18  0100               	movlb	0	; () banked
  6793  003C1A  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6794  003C1C  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6795  003C1E  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6796  003C20  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6797  003C22  5083               	movf	3971,w,c	;volatile
  6798  003C24  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6799  003C26  0BBF               	andlw	-65
  6800  003C28  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6801  003C2A  6E83               	movwf	3971,c	;volatile
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;led.c: 326: }
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;led.c: 325: break;
  6808                           
  6809                           ;led.c: 324: default:
  6810                           
  6811                           ;led.c: 321: break;
  6812  003C2C  0012               	return	
  6813  003C2E                     l2122:
  6814                           
  6815                           ; BSR set to: 0
  6816  003C2E  0100               	movlb	0	; () banked
  6817  003C30  51D4               	movf	_SystemState& (0+255),w,b
  6818                           
  6819                           ; Switch size 1, requested type "space"
  6820                           ; Number of cases is 2, Range of values is 0 to 1
  6821                           ; switch strategies available:
  6822                           ; Name         Instructions Cycles
  6823                           ; simple_byte            7     4 (average)
  6824                           ;	Chosen strategy is simple_byte
  6825  003C32  0A00               	xorlw	0	; case 0
  6826  003C34  B4D8               	btfsc	status,2,c
  6827  003C36  D79F               	goto	l2123
  6828  003C38  0A01               	xorlw	1	; case 1
  6829  003C3A  A4D8               	btfss	status,2,c
  6830  003C3C  0012               	return	
  6831  003C3E  D7A2               	goto	l2125
  6832  003C40                     __end_of_Led_MainTask:
  6833                           	opt stack 0
  6834                           tosu	equ	0xFFF
  6835                           tosh	equ	0xFFE
  6836                           tosl	equ	0xFFD
  6837                           pclath	equ	0xFFA
  6838                           tblptru	equ	0xFF8
  6839                           tblptrh	equ	0xFF7
  6840                           tblptrl	equ	0xFF6
  6841                           tablat	equ	0xFF5
  6842                           prodh	equ	0xFF4
  6843                           prodl	equ	0xFF3
  6844                           intcon	equ	0xFF2
  6845                           intcon2	equ	0xFF1
  6846                           intcon3	equ	0xFF0
  6847                           postinc0	equ	0xFEE
  6848                           plusw0	equ	0xFEB
  6849                           wreg	equ	0xFE8
  6850                           postinc1	equ	0xFE6
  6851                           postdec1	equ	0xFE5
  6852                           fsr1h	equ	0xFE2
  6853                           fsr1l	equ	0xFE1
  6854                           indf2	equ	0xFDF
  6855                           postinc2	equ	0xFDE
  6856                           postdec2	equ	0xFDD
  6857                           plusw2	equ	0xFDB
  6858                           fsr2h	equ	0xFDA
  6859                           fsr2l	equ	0xFD9
  6860                           status	equ	0xFD8
  6861                           
  6862 ;; *************** function _UsbDevice_MainTask *****************
  6863 ;; Defined at:
  6864 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  Options         1    wreg     unsigned char 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  Options         1    0[COMRAM] unsigned char 
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      void 
  6871 ;; Registers used:
  6872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6882 ;;Total ram usage:        0 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; Hardware stack levels required when called:   20
  6885 ;; This function calls:
  6886 ;;		_CDCTxService
  6887 ;;		_USBDeviceInit
  6888 ;;		_USBDeviceTasks
  6889 ;; This function is called by:
  6890 ;;		_InitializeTasks
  6891 ;;		_ScheduleTasks
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text20
  6896  00637A                     __ptext20:
  6897                           	opt stack 0
  6898  00637A                     _UsbDevice_MainTask:
  6899                           	opt stack 8
  6900                           
  6901                           ;usb_device_mgr.c: 74: switch (SystemState)
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;incstack = 0
  6905  00637A  D008               	goto	l1989
  6906  00637C                     
  6907                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6908  00637C  EC02  F012         	call	_USBDeviceInit	;wreg free
  6909                           
  6910                           ;usb_device_mgr.c: 80: ;
  6911                           ;usb_device_mgr.c: 81: break;
  6912  006380  0012               	return	
  6913  006382                     
  6914                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6915  006382  EC17  F00F         	call	_USBDeviceTasks	;wreg free
  6916                           
  6917                           ;usb_device_mgr.c: 90: CDCTxService();
  6918  006386  EC4D  F015         	call	_CDCTxService	;wreg free
  6919                           
  6920                           ;usb_device_mgr.c: 101: }
  6921                           
  6922                           ;usb_device_mgr.c: 100: break;
  6923                           
  6924                           ;usb_device_mgr.c: 99: default:
  6925                           
  6926                           ;usb_device_mgr.c: 96: break;
  6927  00638A  0012               	return	
  6928  00638C                     l1989:
  6929  00638C  0100               	movlb	0	; () banked
  6930  00638E  51D4               	movf	_SystemState& (0+255),w,b
  6931                           
  6932                           ; Switch size 1, requested type "space"
  6933                           ; Number of cases is 2, Range of values is 0 to 1
  6934                           ; switch strategies available:
  6935                           ; Name         Instructions Cycles
  6936                           ; simple_byte            7     4 (average)
  6937                           ;	Chosen strategy is simple_byte
  6938  006390  0A00               	xorlw	0	; case 0
  6939  006392  B4D8               	btfsc	status,2,c
  6940  006394  D7F3               	goto	l1990
  6941  006396  0A01               	xorlw	1	; case 1
  6942  006398  A4D8               	btfss	status,2,c
  6943  00639A  0012               	return	
  6944  00639C  D7F2               	goto	l1992
  6945  00639E                     __end_of_UsbDevice_MainTask:
  6946                           	opt stack 0
  6947                           tosu	equ	0xFFF
  6948                           tosh	equ	0xFFE
  6949                           tosl	equ	0xFFD
  6950                           pclath	equ	0xFFA
  6951                           tblptru	equ	0xFF8
  6952                           tblptrh	equ	0xFF7
  6953                           tblptrl	equ	0xFF6
  6954                           tablat	equ	0xFF5
  6955                           prodh	equ	0xFF4
  6956                           prodl	equ	0xFF3
  6957                           intcon	equ	0xFF2
  6958                           intcon2	equ	0xFF1
  6959                           intcon3	equ	0xFF0
  6960                           postinc0	equ	0xFEE
  6961                           plusw0	equ	0xFEB
  6962                           wreg	equ	0xFE8
  6963                           postinc1	equ	0xFE6
  6964                           postdec1	equ	0xFE5
  6965                           fsr1h	equ	0xFE2
  6966                           fsr1l	equ	0xFE1
  6967                           indf2	equ	0xFDF
  6968                           postinc2	equ	0xFDE
  6969                           postdec2	equ	0xFDD
  6970                           plusw2	equ	0xFDB
  6971                           fsr2h	equ	0xFDA
  6972                           fsr2l	equ	0xFD9
  6973                           status	equ	0xFD8
  6974                           
  6975 ;; *************** function _MdmHttp_MainTask *****************
  6976 ;; Defined at:
  6977 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  Options         1    wreg     unsigned char 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  Options         1    0[COMRAM] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;Total ram usage:        0 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:   15
  6998 ;; This function calls:
  6999 ;;		_HttpGetMethod
  7000 ;;		_InitGprsNetwork
  7001 ;; This function is called by:
  7002 ;;		_InitializeTasks
  7003 ;;		_ScheduleTasks
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text21
  7008  005C9C                     __ptext21:
  7009                           	opt stack 0
  7010  005C9C                     _MdmHttp_MainTask:
  7011                           	opt stack 13
  7012                           
  7013                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  7014                           
  7015                           ;incstack = 0
  7016  005C9C  D019               	goto	l1288
  7017  005C9E                     
  7018                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  7019  005C9E  0E03               	movlw	3
  7020  005CA0  0100               	movlb	0	; () banked
  7021  005CA2  19D1               	xorwf	_MdmStatus& (0+255),w,b
  7022  005CA4  A4D8               	btfss	status,2,c
  7023  005CA6  0012               	return	
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;mdm_gsm_gprs_http.c: 570: {
  7027                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  7028  005CA8  C324  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  7029  005CAC  C325  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  7030  005CB0  C1EF  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  7031  005CB4  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  7032  005CB8  0101               	movlb	1	; () banked
  7033  005CBA  6FEE               	movwf	_GprsNetworkSts& (0+255),b
  7034                           
  7035                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  7036  005CBC  0E9E               	movlw	low _HttpGetDataLocal
  7037  005CBE  0100               	movlb	0	; () banked
  7038  005CC0  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  7039  005CC2  0E03               	movlw	high _HttpGetDataLocal
  7040  005CC4  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  7041  005CC6  ECF6  F002         	call	_HttpGetMethod	;wreg free
  7042  005CCA  0101               	movlb	1	; () banked
  7043  005CCC  6FED               	movwf	_HttpGetMethodSts& (0+255),b
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;mdm_gsm_gprs_http.c: 581: }
  7047                           
  7048                           ; BSR set to: 1
  7049                           ;mdm_gsm_gprs_http.c: 580: break;
  7050                           
  7051                           ;mdm_gsm_gprs_http.c: 579: default:
  7052                           
  7053                           ; BSR set to: 1
  7054                           ;mdm_gsm_gprs_http.c: 575: }
  7055                           ;mdm_gsm_gprs_http.c: 576: break;
  7056  005CCE  0012               	return	
  7057  005CD0                     l1288:
  7058                           
  7059                           ; BSR set to: 1
  7060  005CD0  0100               	movlb	0	; () banked
  7061  005CD2  51D4               	movf	_SystemState& (0+255),w,b
  7062                           
  7063                           ; Switch size 1, requested type "space"
  7064                           ; Number of cases is 2, Range of values is 0 to 1
  7065                           ; switch strategies available:
  7066                           ; Name         Instructions Cycles
  7067                           ; simple_byte            7     4 (average)
  7068                           ;	Chosen strategy is simple_byte
  7069  005CD4  0A00               	xorlw	0	; case 0
  7070  005CD6  B4D8               	btfsc	status,2,c
  7071  005CD8  0012               	return	
  7072  005CDA  0A01               	xorlw	1	; case 1
  7073  005CDC  A4D8               	btfss	status,2,c
  7074  005CDE  0012               	return	
  7075  005CE0  D7DE               	goto	l1291
  7076  005CE2                     __end_of_MdmHttp_MainTask:
  7077                           	opt stack 0
  7078                           tosu	equ	0xFFF
  7079                           tosh	equ	0xFFE
  7080                           tosl	equ	0xFFD
  7081                           pclath	equ	0xFFA
  7082                           tblptru	equ	0xFF8
  7083                           tblptrh	equ	0xFF7
  7084                           tblptrl	equ	0xFF6
  7085                           tablat	equ	0xFF5
  7086                           prodh	equ	0xFF4
  7087                           prodl	equ	0xFF3
  7088                           intcon	equ	0xFF2
  7089                           intcon2	equ	0xFF1
  7090                           intcon3	equ	0xFF0
  7091                           postinc0	equ	0xFEE
  7092                           plusw0	equ	0xFEB
  7093                           wreg	equ	0xFE8
  7094                           postinc1	equ	0xFE6
  7095                           postdec1	equ	0xFE5
  7096                           fsr1h	equ	0xFE2
  7097                           fsr1l	equ	0xFE1
  7098                           indf2	equ	0xFDF
  7099                           postinc2	equ	0xFDE
  7100                           postdec2	equ	0xFDD
  7101                           plusw2	equ	0xFDB
  7102                           fsr2h	equ	0xFDA
  7103                           fsr2l	equ	0xFD9
  7104                           status	equ	0xFD8
  7105                           
  7106 ;; *************** function _Mdm_MainTask *****************
  7107 ;; Defined at:
  7108 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  Options         1    wreg     unsigned char 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  Options         1    0[COMRAM] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1    wreg      void 
  7115 ;; Registers used:
  7116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7126 ;;Total ram usage:        0 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:   15
  7129 ;; This function calls:
  7130 ;;		_CheckModem
  7131 ;;		_ConfigureModem
  7132 ;;		_GetSmsSm
  7133 ;;		_ModemEvtParser
  7134 ;;		_SendSmsSm
  7135 ;;		_TurnOnModem
  7136 ;;		_UartSetConfig
  7137 ;;		_Uart_InitUartModule
  7138 ;; This function is called by:
  7139 ;;		_InitializeTasks
  7140 ;;		_ScheduleTasks
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text22
  7145  0059EC                     __ptext22:
  7146                           	opt stack 0
  7147  0059EC                     _Mdm_MainTask:
  7148                           	opt stack 13
  7149                           
  7150                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  7151                           
  7152                           ;incstack = 0
  7153  0059EC  D01E               	goto	l1107
  7154  0059EE                     
  7155                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  7156  0059EE  ECFA  F02A         	call	_UartSetConfig	;wreg free
  7157                           
  7158                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  7159  0059F2  0E28               	movlw	low _UartConfig
  7160  0059F4  0100               	movlb	0	; () banked
  7161  0059F6  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  7162  0059F8  0E03               	movlw	high _UartConfig
  7163  0059FA  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  7164  0059FC  0E01               	movlw	1
  7165  0059FE  EC5E  F005         	call	_Uart_InitUartModule
  7166                           
  7167                           ;mdm_gsm_gprs.c: 764: break;
  7168  005A02  0012               	return	
  7169  005A04                     
  7170                           ;mdm_gsm_gprs.c: 769: CheckModem();
  7171  005A04  EC58  F013         	call	_CheckModem	;wreg free
  7172                           
  7173                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  7174  005A08  042A               	decf	_ComChecCompleted,w,c
  7175  005A0A  A4D8               	btfss	status,2,c
  7176  005A0C  D005               	goto	l1111
  7177  005A0E  0100               	movlb	0	; () banked
  7178  005A10  51D1               	movf	_MdmStatus& (0+255),w,b
  7179  005A12  B4D8               	btfsc	status,2,c
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;mdm_gsm_gprs.c: 772: {
  7183                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  7184  005A14  EC71  F02E         	call	_TurnOnModem	;wreg free
  7185  005A18                     l1111:
  7186                           
  7187                           ;mdm_gsm_gprs.c: 775: }
  7188                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  7189  005A18  ECA4  F01B         	call	_ConfigureModem	;wreg free
  7190                           
  7191                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  7192  005A1C  ECDB  F00F         	call	_ModemEvtParser	;wreg free
  7193                           
  7194                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  7195  005A20  EC8C  F016         	call	_GetSmsSm	;wreg free
  7196                           
  7197                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  7198  005A24  EC3B  F00E         	call	_SendSmsSm	;wreg free
  7199                           
  7200                           ;mdm_gsm_gprs.c: 789: }
  7201                           
  7202                           ;mdm_gsm_gprs.c: 788: break;
  7203                           
  7204                           ;mdm_gsm_gprs.c: 787: default:
  7205                           
  7206                           ;mdm_gsm_gprs.c: 784: break;
  7207  005A28  0012               	return	
  7208  005A2A                     l1107:
  7209  005A2A  0100               	movlb	0	; () banked
  7210  005A2C  51D4               	movf	_SystemState& (0+255),w,b
  7211                           
  7212                           ; Switch size 1, requested type "space"
  7213                           ; Number of cases is 2, Range of values is 0 to 1
  7214                           ; switch strategies available:
  7215                           ; Name         Instructions Cycles
  7216                           ; simple_byte            7     4 (average)
  7217                           ;	Chosen strategy is simple_byte
  7218  005A2E  0A00               	xorlw	0	; case 0
  7219  005A30  B4D8               	btfsc	status,2,c
  7220  005A32  D7DD               	goto	l1108
  7221  005A34  0A01               	xorlw	1	; case 1
  7222  005A36  A4D8               	btfss	status,2,c
  7223  005A38  0012               	return	
  7224  005A3A  D7E4               	goto	l1110
  7225  005A3C                     __end_of_Mdm_MainTask:
  7226                           	opt stack 0
  7227                           tosu	equ	0xFFF
  7228                           tosh	equ	0xFFE
  7229                           tosl	equ	0xFFD
  7230                           pclath	equ	0xFFA
  7231                           tblptru	equ	0xFF8
  7232                           tblptrh	equ	0xFF7
  7233                           tblptrl	equ	0xFF6
  7234                           tablat	equ	0xFF5
  7235                           prodh	equ	0xFF4
  7236                           prodl	equ	0xFF3
  7237                           intcon	equ	0xFF2
  7238                           intcon2	equ	0xFF1
  7239                           intcon3	equ	0xFF0
  7240                           postinc0	equ	0xFEE
  7241                           plusw0	equ	0xFEB
  7242                           wreg	equ	0xFE8
  7243                           postinc1	equ	0xFE6
  7244                           postdec1	equ	0xFE5
  7245                           fsr1h	equ	0xFE2
  7246                           fsr1l	equ	0xFE1
  7247                           indf2	equ	0xFDF
  7248                           postinc2	equ	0xFDE
  7249                           postdec2	equ	0xFDD
  7250                           plusw2	equ	0xFDB
  7251                           fsr2h	equ	0xFDA
  7252                           fsr2l	equ	0xFD9
  7253                           status	equ	0xFD8
  7254                           
  7255 ;; *************** function _I2cSlv_MainTask *****************
  7256 ;; Defined at:
  7257 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  Options         1    wreg     unsigned char 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;  Options         1    0[COMRAM] unsigned char 
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:   14
  7278 ;; This function calls:
  7279 ;;		_I2cSendMsgSm
  7280 ;;		_I2cSetConfig
  7281 ;;		_I2c_InitI2cModule
  7282 ;;		_OsAlrm_SetOsAlarm
  7283 ;; This function is called by:
  7284 ;;		_InitializeTasks
  7285 ;;		_ScheduleTasks
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text23
  7290  005754                     __ptext23:
  7291                           	opt stack 0
  7292  005754                     _I2cSlv_MainTask:
  7293                           	opt stack 14
  7294                           
  7295                           ;i2c_slv.c: 217: switch (SystemState)
  7296                           
  7297                           ;incstack = 0
  7298  005754  D020               	goto	l1401
  7299  005756                     
  7300                           ;i2c_slv.c: 222: I2cSetConfig();
  7301  005756  EC43  F031         	call	_I2cSetConfig	;wreg free
  7302                           
  7303                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7304  00575A  0E48               	movlw	low _I2cConfig
  7305  00575C  0100               	movlb	0	; () banked
  7306  00575E  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7307  005760  0E03               	movlw	high _I2cConfig
  7308  005762  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7309  005764  ECCB  F028         	call	_I2c_InitI2cModule	;wreg free
  7310                           
  7311                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7312  005768  0E00               	movlw	0
  7313  00576A  0100               	movlb	0	; () banked
  7314  00576C  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7315  00576E  0E00               	movlw	0
  7316  005770  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7317  005772  0E32               	movlw	50
  7318  005774  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7319  005776  0E00               	movlw	0
  7320  005778  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7321  00577A  0E00               	movlw	0
  7322  00577C  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7323  00577E  0E00               	movlw	0
  7324  005780  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7325  005782  0E8E               	movlw	low _I2cDummyTx
  7326  005784  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7327  005786  0E65               	movlw	high _I2cDummyTx
  7328  005788  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7329  00578A  ECB3  F01F         	call	_OsAlrm_SetOsAlarm	;wreg free
  7330                           
  7331                           ;i2c_slv.c: 227: break;
  7332  00578E  0012               	return	
  7333  005790                     
  7334                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7335  005790  EC17  F020         	call	_I2cSendMsgSm	;wreg free
  7336                           
  7337                           ;i2c_slv.c: 238: }
  7338                           
  7339                           ;i2c_slv.c: 237: break;
  7340                           
  7341                           ;i2c_slv.c: 236: default:
  7342                           
  7343                           ;i2c_slv.c: 233: break;
  7344  005794  0012               	return	
  7345  005796                     l1401:
  7346  005796  0100               	movlb	0	; () banked
  7347  005798  51D4               	movf	_SystemState& (0+255),w,b
  7348                           
  7349                           ; Switch size 1, requested type "space"
  7350                           ; Number of cases is 2, Range of values is 0 to 1
  7351                           ; switch strategies available:
  7352                           ; Name         Instructions Cycles
  7353                           ; simple_byte            7     4 (average)
  7354                           ;	Chosen strategy is simple_byte
  7355  00579A  0A00               	xorlw	0	; case 0
  7356  00579C  B4D8               	btfsc	status,2,c
  7357  00579E  D7DB               	goto	l1402
  7358  0057A0  0A01               	xorlw	1	; case 1
  7359  0057A2  A4D8               	btfss	status,2,c
  7360  0057A4  0012               	return	
  7361  0057A6  D7F4               	goto	l1404
  7362  0057A8                     __end_of_I2cSlv_MainTask:
  7363                           	opt stack 0
  7364                           tosu	equ	0xFFF
  7365                           tosh	equ	0xFFE
  7366                           tosl	equ	0xFFD
  7367                           pclath	equ	0xFFA
  7368                           tblptru	equ	0xFF8
  7369                           tblptrh	equ	0xFF7
  7370                           tblptrl	equ	0xFF6
  7371                           tablat	equ	0xFF5
  7372                           prodh	equ	0xFF4
  7373                           prodl	equ	0xFF3
  7374                           intcon	equ	0xFF2
  7375                           intcon2	equ	0xFF1
  7376                           intcon3	equ	0xFF0
  7377                           postinc0	equ	0xFEE
  7378                           plusw0	equ	0xFEB
  7379                           wreg	equ	0xFE8
  7380                           postinc1	equ	0xFE6
  7381                           postdec1	equ	0xFE5
  7382                           fsr1h	equ	0xFE2
  7383                           fsr1l	equ	0xFE1
  7384                           indf2	equ	0xFDF
  7385                           postinc2	equ	0xFDE
  7386                           postdec2	equ	0xFDD
  7387                           plusw2	equ	0xFDB
  7388                           fsr2h	equ	0xFDA
  7389                           fsr2l	equ	0xFD9
  7390                           status	equ	0xFD8
  7391                           
  7392 ;; *************** function _Mdm_DrvMainFn *****************
  7393 ;; Defined at:
  7394 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;  Options         1    wreg     unsigned char 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  Options         1    0[COMRAM] unsigned char 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7412 ;;Total ram usage:        0 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; Hardware stack levels required when called:   13
  7415 ;; This function calls:
  7416 ;;		_MdmCntSm
  7417 ;; This function is called by:
  7418 ;;		_InitializeTasks
  7419 ;;		_ScheduleTasks
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text24
  7424  0067C0                     __ptext24:
  7425                           	opt stack 0
  7426  0067C0                     _Mdm_DrvMainFn:
  7427                           	opt stack 15
  7428                           
  7429                           ;mdm_drv.c: 307: MdmCntSm();
  7430                           
  7431                           ;incstack = 0
  7432  0067C0  EC95  F022         	call	_MdmCntSm	;wreg free
  7433  0067C4  0012               	return		;funcret
  7434  0067C6                     __end_of_Mdm_DrvMainFn:
  7435                           	opt stack 0
  7436                           tosu	equ	0xFFF
  7437                           tosh	equ	0xFFE
  7438                           tosl	equ	0xFFD
  7439                           pclath	equ	0xFFA
  7440                           tblptru	equ	0xFF8
  7441                           tblptrh	equ	0xFF7
  7442                           tblptrl	equ	0xFF6
  7443                           tablat	equ	0xFF5
  7444                           prodh	equ	0xFF4
  7445                           prodl	equ	0xFF3
  7446                           intcon	equ	0xFF2
  7447                           intcon2	equ	0xFF1
  7448                           intcon3	equ	0xFF0
  7449                           postinc0	equ	0xFEE
  7450                           plusw0	equ	0xFEB
  7451                           wreg	equ	0xFE8
  7452                           postinc1	equ	0xFE6
  7453                           postdec1	equ	0xFE5
  7454                           fsr1h	equ	0xFE2
  7455                           fsr1l	equ	0xFE1
  7456                           indf2	equ	0xFDF
  7457                           postinc2	equ	0xFDE
  7458                           postdec2	equ	0xFDD
  7459                           plusw2	equ	0xFDB
  7460                           fsr2h	equ	0xFDA
  7461                           fsr2l	equ	0xFD9
  7462                           status	equ	0xFD8
  7463                           
  7464 ;; *************** function _Wdg_MainTask *****************
  7465 ;; Defined at:
  7466 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  Options         1    wreg     unsigned char 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;  Options         1    0[COMRAM] unsigned char 
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0, cstack
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7484 ;;Total ram usage:        0 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:   12
  7487 ;; This function calls:
  7488 ;;		_Mcu_ClearWdg
  7489 ;;		_Mcu_SetWdgSts
  7490 ;; This function is called by:
  7491 ;;		_InitializeTasks
  7492 ;;		_ScheduleTasks
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           	psect	text25
  7497  00640A                     __ptext25:
  7498                           	opt stack 0
  7499  00640A                     _Wdg_MainTask:
  7500                           	opt stack 16
  7501                           
  7502                           ;wdg.c: 75: switch (SystemState)
  7503                           
  7504                           ;incstack = 0
  7505  00640A  D007               	goto	l2498
  7506  00640C                     
  7507                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7508  00640C  0E01               	movlw	1
  7509  00640E  EC63  F033         	call	_Mcu_SetWdgSts
  7510                           
  7511                           ;wdg.c: 81: break;
  7512  006412  0012               	return	
  7513  006414                     
  7514                           ;wdg.c: 86: Mcu_ClearWdg();
  7515  006414  ECE3  F033         	call	_Mcu_ClearWdg	;wreg free
  7516                           
  7517                           ;wdg.c: 92: }
  7518                           
  7519                           ;wdg.c: 91: break;
  7520                           
  7521                           ;wdg.c: 90: default:
  7522                           
  7523                           ;wdg.c: 87: break;
  7524  006418  0012               	return	
  7525  00641A                     l2498:
  7526  00641A  0100               	movlb	0	; () banked
  7527  00641C  51D4               	movf	_SystemState& (0+255),w,b
  7528                           
  7529                           ; Switch size 1, requested type "space"
  7530                           ; Number of cases is 2, Range of values is 0 to 1
  7531                           ; switch strategies available:
  7532                           ; Name         Instructions Cycles
  7533                           ; simple_byte            7     4 (average)
  7534                           ;	Chosen strategy is simple_byte
  7535  00641E  0A00               	xorlw	0	; case 0
  7536  006420  B4D8               	btfsc	status,2,c
  7537  006422  D7F4               	goto	l2499
  7538  006424  0A01               	xorlw	1	; case 1
  7539  006426  A4D8               	btfss	status,2,c
  7540  006428  0012               	return	
  7541  00642A  D7F4               	goto	l2501
  7542  00642C                     __end_of_Wdg_MainTask:
  7543                           	opt stack 0
  7544                           tosu	equ	0xFFF
  7545                           tosh	equ	0xFFE
  7546                           tosl	equ	0xFFD
  7547                           pclath	equ	0xFFA
  7548                           tblptru	equ	0xFF8
  7549                           tblptrh	equ	0xFF7
  7550                           tblptrl	equ	0xFF6
  7551                           tablat	equ	0xFF5
  7552                           prodh	equ	0xFF4
  7553                           prodl	equ	0xFF3
  7554                           intcon	equ	0xFF2
  7555                           intcon2	equ	0xFF1
  7556                           intcon3	equ	0xFF0
  7557                           postinc0	equ	0xFEE
  7558                           plusw0	equ	0xFEB
  7559                           wreg	equ	0xFE8
  7560                           postinc1	equ	0xFE6
  7561                           postdec1	equ	0xFE5
  7562                           fsr1h	equ	0xFE2
  7563                           fsr1l	equ	0xFE1
  7564                           indf2	equ	0xFDF
  7565                           postinc2	equ	0xFDE
  7566                           postdec2	equ	0xFDD
  7567                           plusw2	equ	0xFDB
  7568                           fsr2h	equ	0xFDA
  7569                           fsr2l	equ	0xFD9
  7570                           status	equ	0xFD8
  7571                           
  7572 ;; *************** function _Mcu_SetWdgSts *****************
  7573 ;; Defined at:
  7574 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  WdgSts          1    wreg     unsigned char 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1    wreg      void 
  7581 ;; Registers used:
  7582 ;;		wreg
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7589 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7591 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7592 ;;Total ram usage:        1 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; Hardware stack levels required when called:   11
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_Wdg_MainTask
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           	psect	text26
  7603  0066C6                     __ptext26:
  7604                           	opt stack 0
  7605  0066C6                     _Mcu_SetWdgSts:
  7606                           	opt stack 16
  7607                           
  7608                           ;incstack = 0
  7609                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7610  0066C6  0100               	movlb	0	; () banked
  7611  0066C8  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7612                           
  7613                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7614  0066CA  0100               	movlb	0	; () banked
  7615  0066CC  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7616  0066CE  D002               	bra	u14065
  7617  0066D0  90C0               	bcf	4032,0,c	;volatile
  7618  0066D2  D001               	bra	u14066
  7619  0066D4                     u14065:
  7620  0066D4  80C0               	bsf	4032,0,c	;volatile
  7621  0066D6                     u14066:
  7622  0066D6  0012               	return		;funcret
  7623  0066D8                     __end_of_Mcu_SetWdgSts:
  7624                           	opt stack 0
  7625                           tosu	equ	0xFFF
  7626                           tosh	equ	0xFFE
  7627                           tosl	equ	0xFFD
  7628                           pclath	equ	0xFFA
  7629                           tblptru	equ	0xFF8
  7630                           tblptrh	equ	0xFF7
  7631                           tblptrl	equ	0xFF6
  7632                           tablat	equ	0xFF5
  7633                           prodh	equ	0xFF4
  7634                           prodl	equ	0xFF3
  7635                           intcon	equ	0xFF2
  7636                           intcon2	equ	0xFF1
  7637                           intcon3	equ	0xFF0
  7638                           postinc0	equ	0xFEE
  7639                           plusw0	equ	0xFEB
  7640                           wreg	equ	0xFE8
  7641                           postinc1	equ	0xFE6
  7642                           postdec1	equ	0xFE5
  7643                           fsr1h	equ	0xFE2
  7644                           fsr1l	equ	0xFE1
  7645                           indf2	equ	0xFDF
  7646                           postinc2	equ	0xFDE
  7647                           postdec2	equ	0xFDD
  7648                           plusw2	equ	0xFDB
  7649                           fsr2h	equ	0xFDA
  7650                           fsr2l	equ	0xFD9
  7651                           status	equ	0xFD8
  7652                           
  7653 ;; *************** function _Mcu_ClearWdg *****************
  7654 ;; Defined at:
  7655 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;		None
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;		None
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  1    wreg      void 
  7662 ;; Registers used:
  7663 ;;		None
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7673 ;;Total ram usage:        0 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:   11
  7676 ;; This function calls:
  7677 ;;		Nothing
  7678 ;; This function is called by:
  7679 ;;		_Wdg_MainTask
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text27
  7684  0067C6                     __ptext27:
  7685                           	opt stack 0
  7686  0067C6                     _Mcu_ClearWdg:
  7687                           	opt stack 16
  7688                           
  7689                           ;incstack = 0
  7690  0067C6  0004               	clrwdt		;# 
  7691  0067C8  0012               	return		;funcret
  7692  0067CA                     __end_of_Mcu_ClearWdg:
  7693                           	opt stack 0
  7694                           tosu	equ	0xFFF
  7695                           tosh	equ	0xFFE
  7696                           tosl	equ	0xFFD
  7697                           pclath	equ	0xFFA
  7698                           tblptru	equ	0xFF8
  7699                           tblptrh	equ	0xFF7
  7700                           tblptrl	equ	0xFF6
  7701                           tablat	equ	0xFF5
  7702                           prodh	equ	0xFF4
  7703                           prodl	equ	0xFF3
  7704                           intcon	equ	0xFF2
  7705                           intcon2	equ	0xFF1
  7706                           intcon3	equ	0xFF0
  7707                           postinc0	equ	0xFEE
  7708                           plusw0	equ	0xFEB
  7709                           wreg	equ	0xFE8
  7710                           postinc1	equ	0xFE6
  7711                           postdec1	equ	0xFE5
  7712                           fsr1h	equ	0xFE2
  7713                           fsr1l	equ	0xFE1
  7714                           indf2	equ	0xFDF
  7715                           postinc2	equ	0xFDE
  7716                           postdec2	equ	0xFDD
  7717                           plusw2	equ	0xFDB
  7718                           fsr2h	equ	0xFDA
  7719                           fsr2l	equ	0xFD9
  7720                           status	equ	0xFD8
  7721                           
  7722 ;; *************** function _USBDeviceTasks *****************
  7723 ;; Defined at:
  7724 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;		None
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  i               1   56[BANK0 ] unsigned char 
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  1    wreg      void 
  7731 ;; Registers used:
  7732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7741 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7742 ;;Total ram usage:        1 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; Hardware stack levels required when called:   19
  7745 ;; This function calls:
  7746 ;;		_USBCtrlEPAllowStatusStage
  7747 ;;		_USBCtrlEPService
  7748 ;;		_USBDeviceInit
  7749 ;;		_USBIncrement1msInternalTimers
  7750 ;;		_USBStallHandler
  7751 ;;		_USBSuspend
  7752 ;;		_USBWakeFromSuspend
  7753 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7754 ;; This function is called by:
  7755 ;;		_UsbDevice_MainTask
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text28
  7760  001E2E                     __ptext28:
  7761                           	opt stack 0
  7762  001E2E                     _USBDeviceTasks:
  7763                           	opt stack 8
  7764                           
  7765                           ;usb_device.c: 562: }
  7766                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7767                           
  7768                           ; BSR set to: 0
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;usb_device.c: 561: return;
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7775                           
  7776                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7777                           
  7778                           ;usb_device.c: 529: UIE = 0;
  7779                           
  7780                           ;usb_device.c: 524: {
  7781                           ;usb_device.c: 526: UCON = 0;
  7782                           
  7783                           ;usb_device.c: 497: uint8_t i;
  7784                           ;usb_device.c: 523: if (1 != 1)
  7785                           
  7786                           ;incstack = 0
  7787  001E2E  0100               	movlb	0	; () banked
  7788  001E30  51CD               	movf	_USBDeviceState& (0+255),w,b
  7789  001E32  A4D8               	btfss	status,2,c
  7790  001E34  D012               	goto	l1612
  7791                           
  7792                           ; BSR set to: 0
  7793                           ;usb_device.c: 585: {
  7794                           ;usb_device.c: 587: UCON = 0;
  7795  001E36  0E00               	movlw	0
  7796  001E38  6E65               	movwf	3941,c	;volatile
  7797                           
  7798                           ;usb_device.c: 590: UIE = 0;
  7799  001E3A  0E00               	movlw	0
  7800  001E3C  010F               	movlb	15	; () banked
  7801  001E3E  6F36               	movwf	54,b	;volatile
  7802                           
  7803                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7804  001E40  0E16               	movlw	22
  7805  001E42  6F39               	movwf	57,b	;volatile
  7806  001E44  0E9F               	movlw	159
  7807  001E46  6F37               	movwf	55,b	;volatile
  7808  001E48  0E7B               	movlw	123
  7809  001E4A  6F36               	movwf	54,b	;volatile
  7810                           
  7811                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7812  001E4C  D001               	goto	l1613
  7813  001E4E                     l1614:
  7814  001E4E  8665               	bsf	3941,3,c	;volatile
  7815  001E50                     l1613:
  7816  001E50  A665               	btfss	3941,3,c	;volatile
  7817  001E52  D7FD               	goto	l1614
  7818                           
  7819                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7820  001E54  0E01               	movlw	1
  7821  001E56  0100               	movlb	0	; () banked
  7822  001E58  6FCD               	movwf	_USBDeviceState& (0+255),b
  7823  001E5A                     l1612:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;usb_device.c: 605: }
  7827                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7828                           
  7829                           ; BSR set to: 0
  7830  001E5A  05CD               	decf	_USBDeviceState& (0+255),w,b
  7831  001E5C  B4D8               	btfsc	status,2,c
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;usb_device.c: 609: {
  7835                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7836  001E5E  BA65               	btfsc	3941,5,c	;volatile
  7837  001E60  D00A               	goto	l1617
  7838                           
  7839                           ; BSR set to: 0
  7840                           ;usb_device.c: 620: {
  7841                           ;usb_device.c: 626: {UIR = 0;};
  7842  001E62  0E00               	movlw	0
  7843  001E64  6E62               	movwf	3938,c	;volatile
  7844                           
  7845                           ;usb_device.c: 630: UIE=0;
  7846  001E66  0E00               	movlw	0
  7847  001E68  010F               	movlb	15	; () banked
  7848  001E6A  6F36               	movwf	54,b	;volatile
  7849                           
  7850                           ; BSR set to: 15
  7851                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7852  001E6C  8136               	bsf	54,0,b	;volatile
  7853                           
  7854                           ; BSR set to: 15
  7855                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7856  001E6E  8936               	bsf	54,4,b	;volatile
  7857                           
  7858                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7859  001E70  0E02               	movlw	2
  7860  001E72  0100               	movlb	0	; () banked
  7861  001E74  6FCD               	movwf	_USBDeviceState& (0+255),b
  7862  001E76                     l1617:
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;usb_device.c: 635: }
  7866                           ;usb_device.c: 636: }
  7867                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7868                           
  7869                           ; BSR set to: 0
  7870                           
  7871                           ; BSR set to: 0
  7872  001E76  A462               	btfss	3938,2,c	;volatile
  7873  001E78  D006               	goto	l1618
  7874                           
  7875                           ; BSR set to: 0
  7876  001E7A  010F               	movlb	15	; () banked
  7877  001E7C  A536               	btfss	54,2,b	;volatile
  7878  001E7E  D003               	goto	l1618
  7879                           
  7880                           ; BSR set to: 15
  7881                           ;usb_device.c: 653: {
  7882                           ;usb_device.c: 654: (UIR &= 0xFB);
  7883  001E80  9462               	bcf	3938,2,c	;volatile
  7884                           
  7885                           ; BSR set to: 15
  7886                           ;usb_device.c: 658: USBWakeFromSuspend();
  7887  001E82  ECF9  F02F         	call	_USBWakeFromSuspend	;wreg free
  7888  001E86                     l1618:
  7889                           
  7890                           ;usb_device.c: 660: }
  7891                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7892  001E86  A265               	btfss	3941,1,c	;volatile
  7893  001E88  D002               	goto	l1619
  7894                           
  7895                           ;usb_device.c: 666: {
  7896                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7897  001E8A  98A1               	bcf	4001,4,c	;volatile
  7898                           
  7899                           ;usb_device.c: 668: return;
  7900  001E8C  0012               	return	
  7901  001E8E                     l1619:
  7902                           
  7903                           ;usb_device.c: 669: }
  7904                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7905  001E8E  A062               	btfss	3938,0,c	;volatile
  7906  001E90  D009               	goto	l1620
  7907  001E92  010F               	movlb	15	; () banked
  7908  001E94  A136               	btfss	54,0,b	;volatile
  7909  001E96  D006               	goto	l1620
  7910                           
  7911                           ; BSR set to: 15
  7912                           ;usb_device.c: 682: {
  7913                           ;usb_device.c: 683: USBDeviceInit();
  7914  001E98  EC02  F012         	call	_USBDeviceInit	;wreg free
  7915                           
  7916                           ;usb_device.c: 687: ;
  7917                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7918  001E9C  0E04               	movlw	4
  7919  001E9E  0100               	movlb	0	; () banked
  7920  001EA0  6FCD               	movwf	_USBDeviceState& (0+255),b
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;usb_device.c: 699: (UIR &= 0xFE);
  7924  001EA2  9062               	bcf	3938,0,c	;volatile
  7925  001EA4                     l1620:
  7926                           
  7927                           ;usb_device.c: 700: }
  7928                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7929                           
  7930                           ; BSR set to: 0
  7931  001EA4  A862               	btfss	3938,4,c	;volatile
  7932  001EA6  D004               	goto	l1621
  7933  001EA8  010F               	movlb	15	; () banked
  7934  001EAA  B936               	btfsc	54,4,b	;volatile
  7935                           
  7936                           ; BSR set to: 15
  7937                           ;usb_device.c: 706: {
  7938                           ;usb_device.c: 712: USBSuspend();
  7939  001EAC  EC83  F030         	call	_USBSuspend	;wreg free
  7940  001EB0                     l1621:
  7941                           
  7942                           ;usb_device.c: 714: }
  7943                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7944  001EB0  AC62               	btfss	3938,6,c	;volatile
  7945  001EB2  D01D               	goto	l1625
  7946                           
  7947                           ;usb_device.c: 727: {
  7948                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7949  001EB4  010F               	movlb	15	; () banked
  7950  001EB6  AD36               	btfss	54,6,b	;volatile
  7951  001EB8  D00F               	goto	l1623
  7952                           
  7953                           ; BSR set to: 15
  7954                           ;usb_device.c: 730: {
  7955                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7956  001EBA  0E00               	movlw	0
  7957  001EBC  0100               	movlb	0	; () banked
  7958  001EBE  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7959  001EC0  0E73               	movlw	115
  7960  001EC2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7961  001EC4  0E00               	movlw	0
  7962  001EC6  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7963  001EC8  0E00               	movlw	0
  7964  001ECA  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7965  001ECC  0E00               	movlw	0
  7966  001ECE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7967  001ED0  0E01               	movlw	1
  7968  001ED2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7969  001ED4  EC6E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7970  001ED8                     l1623:
  7971                           
  7972                           ;usb_device.c: 732: }
  7973                           ;usb_device.c: 733: (UIR &= 0xBF);
  7974  001ED8  9C62               	bcf	3938,6,c	;volatile
  7975                           
  7976                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7977  001EDA  EC16  F032         	call	_USBIncrement1msInternalTimers	;wreg free
  7978                           
  7979                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7980  001EDE  0100               	movlb	0	; () banked
  7981  001EE0  51C9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7982  001EE2  A4D8               	btfss	status,2,c
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;usb_device.c: 754: {
  7986                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7987  001EE4  07C9               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;usb_device.c: 756: }
  7991                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7992                           
  7993                           ; BSR set to: 0
  7994  001EE6  51C9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7995  001EE8  B4D8               	btfsc	status,2,c
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;usb_device.c: 763: {
  7999                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  8000  001EEA  EC20  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8001  001EEE                     l1625:
  8002                           
  8003                           ;usb_device.c: 765: }
  8004                           ;usb_device.c: 767: }
  8005                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  8006  001EEE  AA62               	btfss	3938,5,c	;volatile
  8007  001EF0  D004               	goto	l1626
  8008  001EF2  010F               	movlb	15	; () banked
  8009  001EF4  BB36               	btfsc	54,5,b	;volatile
  8010                           
  8011                           ; BSR set to: 15
  8012                           ;usb_device.c: 770: {
  8013                           ;usb_device.c: 771: USBStallHandler();
  8014  001EF6  EC94  F02E         	call	_USBStallHandler	;wreg free
  8015  001EFA                     l1626:
  8016                           
  8017                           ;usb_device.c: 772: }
  8018                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  8019  001EFA  A262               	btfss	3938,1,c	;volatile
  8020  001EFC  D013               	goto	l1627
  8021  001EFE  010F               	movlb	15	; () banked
  8022  001F00  A336               	btfss	54,1,b	;volatile
  8023  001F02  D010               	goto	l1627
  8024                           
  8025                           ; BSR set to: 15
  8026                           ;usb_device.c: 775: {
  8027                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  8028  001F04  0E7F               	movlw	127
  8029  001F06  0100               	movlb	0	; () banked
  8030  001F08  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8031  001F0A  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8032  001F0C  0E00               	movlw	0
  8033  001F0E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8034  001F10  0E00               	movlw	0
  8035  001F12  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8036  001F14  0E00               	movlw	0
  8037  001F16  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8038  001F18  0E01               	movlw	1
  8039  001F1A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8040  001F1C  EC6E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8041                           
  8042                           ;usb_device.c: 777: {UEIR = 0;};
  8043  001F20  0E00               	movlw	0
  8044  001F22  6E63               	movwf	3939,c	;volatile
  8045  001F24                     l1627:
  8046                           
  8047                           ;usb_device.c: 785: }
  8048                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  8049  001F24  0E04               	movlw	4
  8050  001F26  0100               	movlb	0	; () banked
  8051  001F28  61CD               	cpfslt	_USBDeviceState& (0+255),b
  8052  001F2A  D002               	goto	l1628
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;usb_device.c: 793: {
  8056                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  8057  001F2C  98A1               	bcf	4001,4,c	;volatile
  8058                           
  8059                           ;usb_device.c: 795: return;
  8060  001F2E  0012               	return	
  8061  001F30                     l1628:
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;usb_device.c: 796: }
  8065                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  8066  001F30  010F               	movlb	15	; () banked
  8067  001F32  A736               	btfss	54,3,b	;volatile
  8068  001F34  D03E               	goto	u15050
  8069                           
  8070                           ; BSR set to: 15
  8071                           ;usb_device.c: 802: {
  8072                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  8073  001F36  0E00               	movlw	0
  8074  001F38  0100               	movlb	0	; () banked
  8075  001F3A  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  8076  001F3C                     l15402:
  8077                           
  8078                           ; BSR set to: 0
  8079  001F3C  0E03               	movlw	3
  8080  001F3E  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  8081  001F40  D001               	goto	l1630
  8082  001F42  D037               	goto	u15050
  8083  001F44                     l1630:
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;usb_device.c: 804: {
  8087                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  8088  001F44  A662               	btfss	3938,3,c	;volatile
  8089  001F46  D035               	goto	u15050
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;usb_device.c: 806: {
  8093                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  8094  001F48  CF64 F0D5          	movff	3940,_USTATcopy	;volatile
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  8098  001F4C  31D5               	rrcf	_USTATcopy& (0+255),w,b
  8099  001F4E  32E8               	rrcf	wreg,f,c
  8100  001F50  32E8               	rrcf	wreg,f,c
  8101  001F52  0B0F               	andlw	15
  8102  001F54  6FCA               	movwf	_endpoint_number& (0+255),b
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;usb_device.c: 811: (UIR &= 0xF7);
  8106  001F56  9662               	bcf	3938,3,c	;volatile
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  8110  001F58  B5D5               	btfsc	_USTATcopy& (0+255),2,b
  8111  001F5A  D007               	goto	l1633
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;usb_device.c: 817: {
  8115                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  8116  001F5C  51CA               	movf	_endpoint_number& (0+255),w,b
  8117  001F5E  0D01               	mullw	1
  8118  001F60  0ECF               	movlw	low _ep_data_out
  8119  001F62  24F3               	addwf	prodl,w,c
  8120  001F64  6ED9               	movwf	fsr2l,c
  8121  001F66  0E02               	movlw	high _ep_data_out
  8122  001F68  D007               	goto	L3
  8123  001F6A                     l1633:
  8124                           
  8125                           ;usb_device.c: 820: else
  8126                           ;usb_device.c: 821: {
  8127                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  8128                           
  8129                           ; BSR set to: 2
  8130  001F6A  0100               	movlb	0	; () banked
  8131  001F6C  51CA               	movf	_endpoint_number& (0+255),w,b
  8132  001F6E  0D01               	mullw	1
  8133  001F70  0ED2               	movlw	low _ep_data_in
  8134  001F72  24F3               	addwf	prodl,w,c
  8135  001F74  6ED9               	movwf	fsr2l,c
  8136  001F76  0E02               	movlw	high _ep_data_in
  8137  001F78                     L3:
  8138  001F78  20F4               	addwfc	prodh,w,c
  8139  001F7A  6EDA               	movwf	fsr2h,c
  8140  001F7C  0102               	movlb	2	; () banked
  8141  001F7E  70DF               	btg	indf2,0,c
  8142                           
  8143                           ; BSR set to: 2
  8144                           ;usb_device.c: 823: }
  8145                           ;usb_device.c: 828: if(endpoint_number == 0)
  8146                           
  8147                           ; BSR set to: 2
  8148  001F80  0100               	movlb	0	; () banked
  8149  001F82  51CA               	movf	_endpoint_number& (0+255),w,b
  8150  001F84  A4D8               	btfss	status,2,c
  8151  001F86  D003               	goto	l1635
  8152                           
  8153                           ; BSR set to: 0
  8154                           ;usb_device.c: 829: {
  8155                           ;usb_device.c: 830: USBCtrlEPService();
  8156  001F88  EC0F  F025         	call	_USBCtrlEPService	;wreg free
  8157                           
  8158                           ;usb_device.c: 831: }
  8159  001F8C  D00F               	goto	l1637
  8160  001F8E                     l1635:
  8161                           
  8162                           ;usb_device.c: 832: else
  8163                           ;usb_device.c: 833: {
  8164                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  8165  001F8E  0E00               	movlw	0
  8166  001F90  0100               	movlb	0	; () banked
  8167  001F92  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8168  001F94  0E72               	movlw	114
  8169  001F96  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8170  001F98  0ED5               	movlw	low _USTATcopy
  8171  001F9A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8172  001F9C  0E00               	movlw	high _USTATcopy
  8173  001F9E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8174  001FA0  0E00               	movlw	0
  8175  001FA2  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8176  001FA4  0E00               	movlw	0
  8177  001FA6  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8178  001FA8  EC6E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8179  001FAC                     l1637:
  8180  001FAC  0100               	movlb	0	; () banked
  8181  001FAE  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  8182  001FB0  D7C5               	goto	l15402
  8183  001FB2                     u15050:
  8184                           
  8185                           ;usb_device.c: 840: }
  8186                           ;usb_device.c: 841: }
  8187                           ;usb_device.c: 842: }
  8188                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  8189                           
  8190                           ; BSR set to: 0
  8191  001FB2  98A1               	bcf	4001,4,c	;volatile
  8192  001FB4  0012               	return		;funcret
  8193  001FB6                     __end_of_USBDeviceTasks:
  8194                           	opt stack 0
  8195                           tosu	equ	0xFFF
  8196                           tosh	equ	0xFFE
  8197                           tosl	equ	0xFFD
  8198                           pclath	equ	0xFFA
  8199                           tblptru	equ	0xFF8
  8200                           tblptrh	equ	0xFF7
  8201                           tblptrl	equ	0xFF6
  8202                           tablat	equ	0xFF5
  8203                           prodh	equ	0xFF4
  8204                           prodl	equ	0xFF3
  8205                           intcon	equ	0xFF2
  8206                           intcon2	equ	0xFF1
  8207                           intcon3	equ	0xFF0
  8208                           postinc0	equ	0xFEE
  8209                           plusw0	equ	0xFEB
  8210                           wreg	equ	0xFE8
  8211                           postinc1	equ	0xFE6
  8212                           postdec1	equ	0xFE5
  8213                           fsr1h	equ	0xFE2
  8214                           fsr1l	equ	0xFE1
  8215                           indf2	equ	0xFDF
  8216                           postinc2	equ	0xFDE
  8217                           postdec2	equ	0xFDD
  8218                           plusw2	equ	0xFDB
  8219                           fsr2h	equ	0xFDA
  8220                           fsr2l	equ	0xFD9
  8221                           status	equ	0xFD8
  8222                           
  8223 ;; *************** function _USBWakeFromSuspend *****************
  8224 ;; Defined at:
  8225 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;		None
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;		None
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1    wreg      void 
  8232 ;; Registers used:
  8233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8243 ;;Total ram usage:        0 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:   15
  8246 ;; This function calls:
  8247 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8248 ;; This function is called by:
  8249 ;;		_USBDeviceTasks
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text29
  8254  005FF2                     __ptext29:
  8255                           	opt stack 0
  8256  005FF2                     _USBWakeFromSuspend:
  8257                           	opt stack 11
  8258                           
  8259                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  8260                           
  8261                           ;incstack = 0
  8262  005FF2  0E00               	movlw	0
  8263  005FF4  0101               	movlb	1	; () banked
  8264  005FF6  6FE3               	movwf	_USBBusIsSuspended& (0+255),b
  8265                           
  8266                           ; BSR set to: 1
  8267                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8268  005FF8  0E00               	movlw	0
  8269  005FFA  0100               	movlb	0	; () banked
  8270  005FFC  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8271  005FFE  0E74               	movlw	116
  8272  006000  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8273  006002  0E00               	movlw	0
  8274  006004  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8275  006006  0E00               	movlw	0
  8276  006008  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8277  00600A  0E00               	movlw	0
  8278  00600C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8279  00600E  0E00               	movlw	0
  8280  006010  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8281  006012  EC6E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8282                           
  8283                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  8284  006016  9265               	bcf	3941,1,c	;volatile
  8285                           
  8286                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  8287  006018  010F               	movlb	15	; () banked
  8288  00601A  9536               	bcf	54,2,b	;volatile
  8289                           
  8290                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  8291  00601C  D001               	goto	l1765
  8292  00601E                     
  8293                           ;usb_device.c: 2361: {
  8294                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8295                           
  8296                           ; BSR set to: 15
  8297  00601E  9462               	bcf	3938,2,c	;volatile
  8298  006020                     l1765:
  8299  006020  B462               	btfsc	3938,2,c	;volatile
  8300  006022  D7FD               	goto	l1766
  8301                           
  8302                           ;usb_device.c: 2363: }
  8303                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8304  006024  0E00               	movlw	0
  8305  006026  0101               	movlb	1	; () banked
  8306  006028  6FE1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8307                           
  8308                           ; BSR set to: 1
  8309  00602A  0012               	return		;funcret
  8310  00602C                     __end_of_USBWakeFromSuspend:
  8311                           	opt stack 0
  8312                           tosu	equ	0xFFF
  8313                           tosh	equ	0xFFE
  8314                           tosl	equ	0xFFD
  8315                           pclath	equ	0xFFA
  8316                           tblptru	equ	0xFF8
  8317                           tblptrh	equ	0xFF7
  8318                           tblptrl	equ	0xFF6
  8319                           tablat	equ	0xFF5
  8320                           prodh	equ	0xFF4
  8321                           prodl	equ	0xFF3
  8322                           intcon	equ	0xFF2
  8323                           intcon2	equ	0xFF1
  8324                           intcon3	equ	0xFF0
  8325                           postinc0	equ	0xFEE
  8326                           plusw0	equ	0xFEB
  8327                           wreg	equ	0xFE8
  8328                           postinc1	equ	0xFE6
  8329                           postdec1	equ	0xFE5
  8330                           fsr1h	equ	0xFE2
  8331                           fsr1l	equ	0xFE1
  8332                           indf2	equ	0xFDF
  8333                           postinc2	equ	0xFDE
  8334                           postdec2	equ	0xFDD
  8335                           plusw2	equ	0xFDB
  8336                           fsr2h	equ	0xFDA
  8337                           fsr2l	equ	0xFD9
  8338                           status	equ	0xFD8
  8339                           
  8340 ;; *************** function _USBSuspend *****************
  8341 ;; Defined at:
  8342 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;		None
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;		None
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  1    wreg      void 
  8349 ;; Registers used:
  8350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8360 ;;Total ram usage:        0 bytes
  8361 ;; Hardware stack levels used:    1
  8362 ;; Hardware stack levels required when called:   15
  8363 ;; This function calls:
  8364 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8365 ;; This function is called by:
  8366 ;;		_USBDeviceTasks
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           	psect	text30
  8371  006106                     __ptext30:
  8372                           	opt stack 0
  8373  006106                     _USBSuspend:
  8374                           	opt stack 11
  8375                           
  8376                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8377                           
  8378                           ; BSR set to: 1
  8379                           ;incstack = 0
  8380  006106  010F               	movlb	15	; () banked
  8381  006108  8536               	bsf	54,2,b	;volatile
  8382                           
  8383                           ; BSR set to: 15
  8384                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8385  00610A  9862               	bcf	3938,4,c	;volatile
  8386                           
  8387                           ; BSR set to: 15
  8388                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8389  00610C  8265               	bsf	3941,1,c	;volatile
  8390                           
  8391                           ; BSR set to: 15
  8392                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8393  00610E  0E01               	movlw	1
  8394  006110  0101               	movlb	1	; () banked
  8395  006112  6FE3               	movwf	_USBBusIsSuspended& (0+255),b
  8396                           
  8397                           ; BSR set to: 1
  8398                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8399  006114  0E00               	movlw	0
  8400  006116  6FE1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8401                           
  8402                           ; BSR set to: 1
  8403                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8404  006118  0E00               	movlw	0
  8405  00611A  0100               	movlb	0	; () banked
  8406  00611C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8407  00611E  0E75               	movlw	117
  8408  006120  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8409  006122  0E00               	movlw	0
  8410  006124  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8411  006126  0E00               	movlw	0
  8412  006128  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8413  00612A  0E00               	movlw	0
  8414  00612C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8415  00612E  0E00               	movlw	0
  8416  006130  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8417  006132  EC6E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8418  006136  0012               	return		;funcret
  8419  006138                     __end_of_USBSuspend:
  8420                           	opt stack 0
  8421                           tosu	equ	0xFFF
  8422                           tosh	equ	0xFFE
  8423                           tosl	equ	0xFFD
  8424                           pclath	equ	0xFFA
  8425                           tblptru	equ	0xFF8
  8426                           tblptrh	equ	0xFF7
  8427                           tblptrl	equ	0xFF6
  8428                           tablat	equ	0xFF5
  8429                           prodh	equ	0xFF4
  8430                           prodl	equ	0xFF3
  8431                           intcon	equ	0xFF2
  8432                           intcon2	equ	0xFF1
  8433                           intcon3	equ	0xFF0
  8434                           postinc0	equ	0xFEE
  8435                           plusw0	equ	0xFEB
  8436                           wreg	equ	0xFE8
  8437                           postinc1	equ	0xFE6
  8438                           postdec1	equ	0xFE5
  8439                           fsr1h	equ	0xFE2
  8440                           fsr1l	equ	0xFE1
  8441                           indf2	equ	0xFDF
  8442                           postinc2	equ	0xFDE
  8443                           postdec2	equ	0xFDD
  8444                           plusw2	equ	0xFDB
  8445                           fsr2h	equ	0xFDA
  8446                           fsr2l	equ	0xFD9
  8447                           status	equ	0xFD8
  8448                           
  8449 ;; *************** function _USBStallHandler *****************
  8450 ;; Defined at:
  8451 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;		None
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;		None
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8467 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8468 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8469 ;;Total ram usage:        1 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:   11
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_USBDeviceTasks
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text31
  8480  005D28                     __ptext31:
  8481                           	opt stack 0
  8482  005D28                     _USBStallHandler:
  8483                           	opt stack 15
  8484                           
  8485                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8486                           
  8487                           ;incstack = 0
  8488  005D28  010F               	movlb	15	; () banked
  8489  005D2A  A126               	btfss	38,0,b	;volatile
  8490  005D2C  D01D               	goto	l1757
  8491                           
  8492                           ; BSR set to: 15
  8493                           ;usb_device.c: 2233: {
  8494                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8495  005D2E  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8496  005D32  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8497  005D36  0E80               	movlw	128
  8498  005D38  18DE               	xorwf	postinc2,w,c
  8499  005D3A  A4D8               	btfss	status,2,c
  8500  005D3C  D014               	goto	l1758
  8501                           
  8502                           ; BSR set to: 15
  8503  005D3E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8504  005D42  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8505  005D46  0E84               	movlw	132
  8506  005D48  18DE               	xorwf	postinc2,w,c
  8507  005D4A  A4D8               	btfss	status,2,c
  8508  005D4C  D00C               	goto	l1758
  8509                           
  8510                           ; BSR set to: 15
  8511                           ;usb_device.c: 2236: {
  8512                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8513  005D4E  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8514  005D52  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8515  005D56  0E0C               	movlw	12
  8516  005D58  6EDF               	movwf	indf2,c
  8517                           
  8518                           ; BSR set to: 15
  8519                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8520  005D5A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8521  005D5E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8522  005D62  0E00               	movlw	0
  8523  005D64  8EDB               	bsf	plusw2,7,c
  8524  005D66                     l1758:
  8525                           
  8526                           ; BSR set to: 15
  8527                           ;usb_device.c: 2240: }
  8528                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8529                           
  8530                           ; BSR set to: 15
  8531  005D66  9126               	bcf	38,0,b	;volatile
  8532  005D68                     l1757:
  8533                           
  8534                           ; BSR set to: 15
  8535                           ;usb_device.c: 2242: }
  8536                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8537  005D68  9A62               	bcf	3938,5,c	;volatile
  8538                           
  8539                           ; BSR set to: 15
  8540  005D6A  0012               	return		;funcret
  8541  005D6C                     __end_of_USBStallHandler:
  8542                           	opt stack 0
  8543                           tosu	equ	0xFFF
  8544                           tosh	equ	0xFFE
  8545                           tosl	equ	0xFFD
  8546                           pclath	equ	0xFFA
  8547                           tblptru	equ	0xFF8
  8548                           tblptrh	equ	0xFF7
  8549                           tblptrl	equ	0xFF6
  8550                           tablat	equ	0xFF5
  8551                           prodh	equ	0xFF4
  8552                           prodl	equ	0xFF3
  8553                           intcon	equ	0xFF2
  8554                           intcon2	equ	0xFF1
  8555                           intcon3	equ	0xFF0
  8556                           postinc0	equ	0xFEE
  8557                           plusw0	equ	0xFEB
  8558                           wreg	equ	0xFE8
  8559                           postinc1	equ	0xFE6
  8560                           postdec1	equ	0xFE5
  8561                           fsr1h	equ	0xFE2
  8562                           fsr1l	equ	0xFE1
  8563                           indf2	equ	0xFDF
  8564                           postinc2	equ	0xFDE
  8565                           postdec2	equ	0xFDD
  8566                           plusw2	equ	0xFDB
  8567                           fsr2h	equ	0xFDA
  8568                           fsr2l	equ	0xFD9
  8569                           status	equ	0xFD8
  8570                           
  8571 ;; *************** function _USBIncrement1msInternalTimers *****************
  8572 ;; Defined at:
  8573 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;		None
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;		None
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		wreg, status,2, status,0
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8591 ;;Total ram usage:        0 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:   11
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_USBDeviceTasks
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text32
  8602  00642C                     __ptext32:
  8603                           	opt stack 0
  8604  00642C                     _USBIncrement1msInternalTimers:
  8605                           	opt stack 15
  8606                           
  8607                           ;usb_device.c: 3050: USB1msTickCount++;
  8608                           
  8609                           ; BSR set to: 15
  8610                           ;incstack = 0
  8611  00642C  0E01               	movlw	1
  8612  00642E  0103               	movlb	3	; () banked
  8613  006430  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8614  006432  0E00               	movlw	0
  8615  006434  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8616  006436  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8617  006438  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8618                           
  8619                           ; BSR set to: 3
  8620                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8621  00643A  0101               	movlb	1	; () banked
  8622  00643C  51E3               	movf	_USBBusIsSuspended& (0+255),w,b
  8623  00643E  A4D8               	btfss	status,2,c
  8624  006440  0012               	return	
  8625                           
  8626                           ; BSR set to: 1
  8627                           ;usb_device.c: 3052: {
  8628                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8629  006442  2BE1               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8630                           
  8631                           ; BSR set to: 1
  8632                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8633  006444  51E1               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8634  006446  A4D8               	btfss	status,2,c
  8635  006448  0012               	return	
  8636                           
  8637                           ; BSR set to: 1
  8638                           ;usb_device.c: 3056: {
  8639                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8640  00644A  69E1               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8641                           
  8642                           ; BSR set to: 1
  8643  00644C  0012               	return	
  8644  00644E                     __end_of_USBIncrement1msInternalTimers:
  8645                           	opt stack 0
  8646                           tosu	equ	0xFFF
  8647                           tosh	equ	0xFFE
  8648                           tosl	equ	0xFFD
  8649                           pclath	equ	0xFFA
  8650                           tblptru	equ	0xFF8
  8651                           tblptrh	equ	0xFF7
  8652                           tblptrl	equ	0xFF6
  8653                           tablat	equ	0xFF5
  8654                           prodh	equ	0xFF4
  8655                           prodl	equ	0xFF3
  8656                           intcon	equ	0xFF2
  8657                           intcon2	equ	0xFF1
  8658                           intcon3	equ	0xFF0
  8659                           postinc0	equ	0xFEE
  8660                           plusw0	equ	0xFEB
  8661                           wreg	equ	0xFE8
  8662                           postinc1	equ	0xFE6
  8663                           postdec1	equ	0xFE5
  8664                           fsr1h	equ	0xFE2
  8665                           fsr1l	equ	0xFE1
  8666                           indf2	equ	0xFDF
  8667                           postinc2	equ	0xFDE
  8668                           postdec2	equ	0xFDD
  8669                           plusw2	equ	0xFDB
  8670                           fsr2h	equ	0xFDA
  8671                           fsr2l	equ	0xFD9
  8672                           status	equ	0xFD8
  8673                           
  8674 ;; *************** function _USBDeviceInit *****************
  8675 ;; Defined at:
  8676 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;		None
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;  i               1   37[BANK0 ] unsigned char 
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8693 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8694 ;;Total ram usage:        1 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:   12
  8697 ;; This function calls:
  8698 ;;		_memset
  8699 ;; This function is called by:
  8700 ;;		_USBDeviceTasks
  8701 ;;		_UsbDevice_MainTask
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text33
  8706  002404                     __ptext33:
  8707                           	opt stack 0
  8708  002404                     _USBDeviceInit:
  8709                           	opt stack 14
  8710                           
  8711                           ;usb_device.c: 297: uint8_t i;
  8712                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8713                           
  8714                           ; BSR set to: 1
  8715                           ;incstack = 0
  8716  002404  98A0               	bcf	4000,4,c	;volatile
  8717                           
  8718                           ;usb_device.c: 303: ;
  8719                           ;usb_device.c: 306: {UEIR = 0;};
  8720  002406  0E00               	movlw	0
  8721  002408  6E63               	movwf	3939,c	;volatile
  8722                           
  8723                           ;usb_device.c: 309: {UIR = 0;};
  8724  00240A  0E00               	movlw	0
  8725  00240C  6E62               	movwf	3938,c	;volatile
  8726                           
  8727                           ;usb_device.c: 312: UEP0 = 0;
  8728  00240E  0E00               	movlw	0
  8729  002410  010F               	movlb	15	; () banked
  8730  002412  6F26               	movwf	38,b	;volatile
  8731                           
  8732                           ; BSR set to: 15
  8733                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8734  002414  0E27               	movlw	39
  8735  002416  0100               	movlb	0	; () banked
  8736  002418  6F7D               	movwf	memset@p1& (0+255),b
  8737  00241A  0E0F               	movlw	15
  8738  00241C  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8739  00241E  0E00               	movlw	0
  8740  002420  6F80               	movwf	(memset@c+1)& (0+255),b
  8741  002422  0E00               	movlw	0
  8742  002424  6F7F               	movwf	memset@c& (0+255),b
  8743  002426  0E00               	movlw	0
  8744  002428  6F82               	movwf	(memset@n+1)& (0+255),b
  8745  00242A  0E02               	movlw	2
  8746  00242C  6F81               	movwf	memset@n& (0+255),b
  8747  00242E  ECCD  F030         	call	_memset	;wreg free
  8748                           
  8749                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8750  002432  0E16               	movlw	22
  8751  002434  010F               	movlb	15	; () banked
  8752  002436  6F39               	movwf	57,b	;volatile
  8753                           
  8754                           ; BSR set to: 15
  8755  002438  0E9F               	movlw	159
  8756  00243A  6F37               	movwf	55,b	;volatile
  8757                           
  8758                           ; BSR set to: 15
  8759  00243C  0E7B               	movlw	123
  8760  00243E  6F36               	movwf	54,b	;volatile
  8761                           
  8762                           ; BSR set to: 15
  8763                           ;usb_device.c: 319: ;
  8764                           ;usb_device.c: 322: ;
  8765                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8766  002440  0E00               	movlw	0
  8767  002442  0100               	movlb	0	; () banked
  8768  002444  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8769  002446                     l14122:
  8770                           
  8771                           ; BSR set to: 0
  8772  002446  0E0B               	movlw	11
  8773  002448  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8774  00244A  D001               	goto	l1601
  8775  00244C  D00E               	goto	u13250
  8776  00244E                     l1601:
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;usb_device.c: 326: {
  8780                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8781                           
  8782                           ; BSR set to: 0
  8783  00244E  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8784  002450  0D04               	mullw	4
  8785  002452  0E00               	movlw	0
  8786  002454  24F3               	addwf	prodl,w,c
  8787  002456  6ED9               	movwf	fsr2l,c
  8788  002458  0E04               	movlw	4
  8789  00245A  20F4               	addwfc	prodh,w,c
  8790  00245C  6EDA               	movwf	fsr2h,c
  8791  00245E  6ADE               	clrf	postinc2,c
  8792  002460  6ADE               	clrf	postinc2,c
  8793  002462  6ADE               	clrf	postinc2,c
  8794  002464  6ADD               	clrf	postdec2,c
  8795                           
  8796                           ; BSR set to: 0
  8797  002466  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8798  002468  D7EE               	goto	l14122
  8799  00246A                     u13250:
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;usb_device.c: 328: }
  8803                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8804  00246A  8C65               	bsf	3941,6,c	;volatile
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;usb_device.c: 334: UADDR = 0x00;
  8808  00246C  0E00               	movlw	0
  8809  00246E  010F               	movlb	15	; () banked
  8810  002470  6F38               	movwf	56,b	;volatile
  8811                           
  8812                           ; BSR set to: 15
  8813                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8814  002472  9865               	bcf	3941,4,c	;volatile
  8815                           
  8816                           ; BSR set to: 15
  8817                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8818  002474  9C65               	bcf	3941,6,c	;volatile
  8819  002476                     
  8820                           ;usb_device.c: 344: {
  8821                           ;usb_device.c: 345: (UIR &= 0xF7);
  8822                           
  8823                           ; BSR set to: 15
  8824  002476  9662               	bcf	3938,3,c	;volatile
  8825                           
  8826                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8827  002478  0E00               	movlw	0
  8828  00247A  0100               	movlb	0	; () banked
  8829  00247C  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8833  00247E  0E00               	movlw	0
  8834  002480  0101               	movlb	1	; () banked
  8835  002482  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8836                           
  8837                           ; BSR set to: 1
  8838                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8839  002484  0E00               	movlw	0
  8840  002486  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8841  002488  0E00               	movlw	0
  8842  00248A  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8843                           
  8844                           ; BSR set to: 1
  8845                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8846  00248C  B662               	btfsc	3938,3,c	;volatile
  8847  00248E  D7F3               	goto	l1603
  8848                           
  8849                           ; BSR set to: 1
  8850                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8851                           
  8852                           ; BSR set to: 1
  8853  002490  0E01               	movlw	1
  8854  002492  0100               	movlb	0	; () banked
  8855  002494  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8856                           
  8857                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8858  002496  0E01               	movlw	1
  8859  002498  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8860                           
  8861                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8862  00249A  0E00               	movlw	0
  8863  00249C  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8864                           
  8865                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8866  00249E  0E00               	movlw	0
  8867  0024A0  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8868                           
  8869                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8870  0024A2  0E00               	movlw	0
  8871  0024A4  0101               	movlb	1	; () banked
  8872  0024A6  6FE3               	movwf	_USBBusIsSuspended& (0+255),b
  8873                           
  8874                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8875  0024A8  0E00               	movlw	0
  8876  0024AA  0100               	movlb	0	; () banked
  8877  0024AC  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8878  0024AE                     l14150:
  8879                           
  8880                           ; BSR set to: 0
  8881  0024AE  0E02               	movlw	2
  8882  0024B0  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8883  0024B2  D001               	goto	l1605
  8884  0024B4  D02E               	goto	u13280
  8885  0024B6                     l1605:
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;usb_device.c: 364: {
  8889                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8890                           
  8891                           ; BSR set to: 0
  8892  0024B6  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8893  0024B8  0D02               	mullw	2
  8894  0024BA  0EB6               	movlw	low _pBDTEntryIn
  8895  0024BC  24F3               	addwf	prodl,w,c
  8896  0024BE  6ED9               	movwf	fsr2l,c
  8897  0024C0  0E00               	movlw	high _pBDTEntryIn
  8898  0024C2  20F4               	addwfc	prodh,w,c
  8899  0024C4  6EDA               	movwf	fsr2h,c
  8900  0024C6  0E00               	movlw	0
  8901  0024C8  6EDE               	movwf	postinc2,c
  8902  0024CA  0E00               	movlw	0
  8903  0024CC  6EDD               	movwf	postdec2,c
  8904                           
  8905                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8906  0024CE  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8907  0024D0  0D02               	mullw	2
  8908  0024D2  0E0E               	movlw	low _pBDTEntryOut
  8909  0024D4  24F3               	addwf	prodl,w,c
  8910  0024D6  6ED9               	movwf	fsr2l,c
  8911  0024D8  0E03               	movlw	high _pBDTEntryOut
  8912  0024DA  20F4               	addwfc	prodh,w,c
  8913  0024DC  6EDA               	movwf	fsr2h,c
  8914  0024DE  0E00               	movlw	0
  8915  0024E0  6EDE               	movwf	postinc2,c
  8916  0024E2  0E00               	movlw	0
  8917  0024E4  6EDD               	movwf	postdec2,c
  8918                           
  8919                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8920  0024E6  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8921  0024E8  0D01               	mullw	1
  8922  0024EA  0ED2               	movlw	low _ep_data_in
  8923  0024EC  24F3               	addwf	prodl,w,c
  8924  0024EE  6ED9               	movwf	fsr2l,c
  8925  0024F0  0E02               	movlw	high _ep_data_in
  8926  0024F2  20F4               	addwfc	prodh,w,c
  8927  0024F4  6EDA               	movwf	fsr2h,c
  8928  0024F6  0E00               	movlw	0
  8929  0024F8  6EDF               	movwf	indf2,c
  8930                           
  8931                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8932  0024FA  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8933  0024FC  0D01               	mullw	1
  8934  0024FE  0ECF               	movlw	low _ep_data_out
  8935  002500  24F3               	addwf	prodl,w,c
  8936  002502  6ED9               	movwf	fsr2l,c
  8937  002504  0E02               	movlw	high _ep_data_out
  8938  002506  20F4               	addwfc	prodh,w,c
  8939  002508  6EDA               	movwf	fsr2h,c
  8940  00250A  0E00               	movlw	0
  8941  00250C  6EDF               	movwf	indf2,c
  8942                           
  8943                           ; BSR set to: 0
  8944  00250E  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8945  002510  D7CE               	goto	l14150
  8946  002512                     u13280:
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;usb_device.c: 369: }
  8950                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8951                           
  8952                           ; BSR set to: 0
  8953  002512  0E08               	movlw	8
  8954  002514  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8955  002516  0E04               	movlw	4
  8956  002518  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8960  00251A  0E16               	movlw	22
  8961  00251C  010F               	movlb	15	; () banked
  8962  00251E  6F26               	movwf	38,b	;volatile
  8963                           
  8964                           ; BSR set to: 15
  8965                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8966  002520  0E04               	movlw	4
  8967  002522  0104               	movlb	4	; () banked
  8968  002524  6F03               	movwf	3,b	;volatile
  8969  002526  0E30               	movlw	48
  8970  002528  6F02               	movwf	2,b	;volatile
  8971                           
  8972                           ; BSR set to: 4
  8973                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8974  00252A  0E08               	movlw	8
  8975  00252C  6F01               	movwf	1,b	;volatile
  8976                           
  8977                           ; BSR set to: 4
  8978                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8979  00252E  0E04               	movlw	4
  8980  002530  6F00               	movwf	0,b	;volatile
  8981                           
  8982                           ; BSR set to: 4
  8983                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8984  002532  8F00               	bsf	0,7,b	;volatile
  8985                           
  8986                           ; BSR set to: 4
  8987                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8988  002534  0E00               	movlw	0
  8989  002536  0100               	movlb	0	; () banked
  8990  002538  6FD6               	movwf	_USBActiveConfiguration& (0+255),b
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;usb_device.c: 384: USB1msTickCount = 0;
  8994  00253A  0E00               	movlw	0
  8995  00253C  0103               	movlb	3	; () banked
  8996  00253E  6F18               	movwf	_USB1msTickCount& (0+255),b
  8997  002540  0E00               	movlw	0
  8998  002542  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8999  002544  0E00               	movlw	0
  9000  002546  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  9001  002548  0E00               	movlw	0
  9002  00254A  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  9003                           
  9004                           ; BSR set to: 3
  9005                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  9006  00254C  0E00               	movlw	0
  9007  00254E  0101               	movlb	1	; () banked
  9008  002550  6FE1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  9009                           
  9010                           ; BSR set to: 1
  9011                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  9012  002552  0E00               	movlw	0
  9013  002554  0100               	movlb	0	; () banked
  9014  002556  6FCD               	movwf	_USBDeviceState& (0+255),b
  9015                           
  9016                           ; BSR set to: 0
  9017  002558  0012               	return		;funcret
  9018  00255A                     __end_of_USBDeviceInit:
  9019                           	opt stack 0
  9020                           tosu	equ	0xFFF
  9021                           tosh	equ	0xFFE
  9022                           tosl	equ	0xFFD
  9023                           pclath	equ	0xFFA
  9024                           tblptru	equ	0xFF8
  9025                           tblptrh	equ	0xFF7
  9026                           tblptrl	equ	0xFF6
  9027                           tablat	equ	0xFF5
  9028                           prodh	equ	0xFF4
  9029                           prodl	equ	0xFF3
  9030                           intcon	equ	0xFF2
  9031                           intcon2	equ	0xFF1
  9032                           intcon3	equ	0xFF0
  9033                           postinc0	equ	0xFEE
  9034                           plusw0	equ	0xFEB
  9035                           wreg	equ	0xFE8
  9036                           postinc1	equ	0xFE6
  9037                           postdec1	equ	0xFE5
  9038                           fsr1h	equ	0xFE2
  9039                           fsr1l	equ	0xFE1
  9040                           indf2	equ	0xFDF
  9041                           postinc2	equ	0xFDE
  9042                           postdec2	equ	0xFDD
  9043                           plusw2	equ	0xFDB
  9044                           fsr2h	equ	0xFDA
  9045                           fsr2l	equ	0xFD9
  9046                           status	equ	0xFD8
  9047                           
  9048 ;; *************** function _USBCtrlEPService *****************
  9049 ;; Defined at:
  9050 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;		None
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;		None
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  1    wreg      void 
  9057 ;; Registers used:
  9058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9066 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9067 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9068 ;;Total ram usage:        1 bytes
  9069 ;; Hardware stack levels used:    1
  9070 ;; Hardware stack levels required when called:   18
  9071 ;; This function calls:
  9072 ;;		_USBCtrlTrfInHandler
  9073 ;;		_USBCtrlTrfOutHandler
  9074 ;;		_USBCtrlTrfSetupHandler
  9075 ;;		_memcpy
  9076 ;; This function is called by:
  9077 ;;		_USBDeviceTasks
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text34
  9082  004A1E                     __ptext34:
  9083                           	opt stack 0
  9084  004A1E                     _USBCtrlEPService:
  9085                           	opt stack 8
  9086                           
  9087                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;incstack = 0
  9091  004A1E  0E2D               	movlw	45
  9092  004A20  0100               	movlb	0	; () banked
  9093  004A22  6FC9               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  9097  004A24  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9098  004A28  0EFD               	movlw	253
  9099  004A2A  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9100  004A2C  A4D8               	btfss	status,2,c
  9101  004A2E  D038               	goto	l1771
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;usb_device.c: 2401: {
  9105                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9106  004A30  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9107  004A34  90D8               	bcf	status,0,c
  9108  004A36  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  9109  004A38  0E3F               	movlw	63
  9110  004A3A  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9111  004A3C  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  9112  004A3E  0D04               	mullw	4
  9113  004A40  0E00               	movlw	0
  9114  004A42  24F3               	addwf	prodl,w,c
  9115  004A44  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9116  004A46  0E04               	movlw	4
  9117  004A48  20F4               	addwfc	prodh,w,c
  9118  004A4A  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9122  004A4C  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9123  004A50  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9127  004A54  0E04               	movlw	4
  9128  004A56  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9132  004A58  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9133  004A5C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9134  004A60  30DF               	rrcf	223,w,c
  9135  004A62  32E8               	rrcf	wreg,f,c
  9136  004A64  0B0F               	andlw	15
  9137  004A66  0A0D               	xorlw	13
  9138  004A68  A4D8               	btfss	status,2,c
  9139  004A6A  D017               	goto	l1772
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;usb_device.c: 2418: {
  9143                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  9144  004A6C  0E30               	movlw	48
  9145  004A6E  6F7D               	movwf	memcpy@d1& (0+255),b
  9146  004A70  0E04               	movlw	4
  9147  004A72  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  9148  004A74  EE20 F002          	lfsr	2,2
  9149  004A78  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  9150  004A7A  26D9               	addwf	fsr2l,f,c
  9151  004A7C  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  9152  004A7E  22DA               	addwfc	fsr2h,f,c
  9153  004A80  CFDE F07F          	movff	postinc2,memcpy@s1
  9154  004A84  CFDD F080          	movff	postdec2,memcpy@s1+1
  9155  004A88  0E00               	movlw	0
  9156  004A8A  6F82               	movwf	(memcpy@n+1)& (0+255),b
  9157  004A8C  0E08               	movlw	8
  9158  004A8E  6F81               	movwf	memcpy@n& (0+255),b
  9159  004A90  EC06  F02E         	call	_memcpy	;wreg free
  9160                           
  9161                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  9162  004A94  ECC2  F026         	call	_USBCtrlTrfSetupHandler	;wreg free
  9163                           
  9164                           ;usb_device.c: 2427: }
  9165  004A98  0012               	return	
  9166  004A9A                     l1772:
  9167                           
  9168                           ;usb_device.c: 2428: else
  9169                           ;usb_device.c: 2429: {
  9170                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  9171  004A9A  ECA4  F029         	call	_USBCtrlTrfOutHandler	;wreg free
  9172                           
  9173                           ;usb_device.c: 2432: }
  9174                           ;usb_device.c: 2433: }
  9175  004A9E  0012               	return	
  9176  004AA0                     l1771:
  9177                           
  9178                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  9179  004AA0  0100               	movlb	0	; () banked
  9180  004AA2  51D5               	movf	_USTATcopy& (0+255),w,b
  9181  004AA4  0BFD               	andlw	253
  9182  004AA6  0A04               	xorlw	4
  9183  004AA8  A4D8               	btfss	status,2,c
  9184  004AAA  0012               	return	
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;usb_device.c: 2435: {
  9188                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  9189  004AAC  EC79  F020         	call	_USBCtrlTrfInHandler	;wreg free
  9190  004AB0  0012               	return	
  9191  004AB2                     __end_of_USBCtrlEPService:
  9192                           	opt stack 0
  9193                           tosu	equ	0xFFF
  9194                           tosh	equ	0xFFE
  9195                           tosl	equ	0xFFD
  9196                           pclath	equ	0xFFA
  9197                           tblptru	equ	0xFF8
  9198                           tblptrh	equ	0xFF7
  9199                           tblptrl	equ	0xFF6
  9200                           tablat	equ	0xFF5
  9201                           prodh	equ	0xFF4
  9202                           prodl	equ	0xFF3
  9203                           intcon	equ	0xFF2
  9204                           intcon2	equ	0xFF1
  9205                           intcon3	equ	0xFF0
  9206                           postinc0	equ	0xFEE
  9207                           plusw0	equ	0xFEB
  9208                           wreg	equ	0xFE8
  9209                           postinc1	equ	0xFE6
  9210                           postdec1	equ	0xFE5
  9211                           fsr1h	equ	0xFE2
  9212                           fsr1l	equ	0xFE1
  9213                           indf2	equ	0xFDF
  9214                           postinc2	equ	0xFDE
  9215                           postdec2	equ	0xFDD
  9216                           plusw2	equ	0xFDB
  9217                           fsr2h	equ	0xFDA
  9218                           fsr2l	equ	0xFD9
  9219                           status	equ	0xFD8
  9220                           
  9221 ;; *************** function _memcpy *****************
  9222 ;; Defined at:
  9223 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  d1              2   29[BANK0 ] PTR void 
  9226 ;;		 -> SetupPkt(8), 
  9227 ;;  s1              2   31[BANK0 ] PTR const void 
  9228 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9229 ;;  n               2   33[BANK0 ] unsigned int 
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  9232 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9233 ;;  d               2   36[BANK0 ] PTR unsigned char 
  9234 ;;		 -> SetupPkt(8), 
  9235 ;;  tmp             1   35[BANK0 ] unsigned char 
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  2   29[BANK0 ] PTR void 
  9238 ;; Registers used:
  9239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9245 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9246 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9248 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9249 ;;Total ram usage:       11 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:   11
  9252 ;; This function calls:
  9253 ;;		Nothing
  9254 ;; This function is called by:
  9255 ;;		_USBCtrlEPService
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text35
  9260  005C0C                     __ptext35:
  9261                           	opt stack 0
  9262  005C0C                     _memcpy:
  9263                           	opt stack 14
  9264                           
  9265                           ;incstack = 0
  9266  005C0C  C07F  F086         	movff	memcpy@s1,memcpy@s
  9267  005C10  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  9268  005C14  C07D  F084         	movff	memcpy@d1,memcpy@d
  9269  005C18  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  9270  005C1C  D011               	goto	l3277
  9271  005C1E                     l13394:
  9272  005C1E  C086  FFD9         	movff	memcpy@s,fsr2l
  9273  005C22  C087  FFDA         	movff	memcpy@s+1,fsr2h
  9274  005C26  50DF               	movf	indf2,w,c
  9275  005C28  0100               	movlb	0	; () banked
  9276  005C2A  6F83               	movwf	memcpy@tmp& (0+255),b
  9277                           
  9278                           ; BSR set to: 0
  9279  005C2C  4B86               	infsnz	memcpy@s& (0+255),f,b
  9280  005C2E  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  9281                           
  9282                           ; BSR set to: 0
  9283  005C30  C084  FFD9         	movff	memcpy@d,fsr2l
  9284  005C34  C085  FFDA         	movff	memcpy@d+1,fsr2h
  9285  005C38  C083  FFDF         	movff	memcpy@tmp,indf2
  9286                           
  9287                           ; BSR set to: 0
  9288  005C3C  4B84               	infsnz	memcpy@d& (0+255),f,b
  9289  005C3E  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  9290  005C40                     l3277:
  9291                           
  9292                           ; BSR set to: 0
  9293  005C40  0100               	movlb	0	; () banked
  9294  005C42  0781               	decf	memcpy@n& (0+255),f,b
  9295  005C44  A0D8               	btfss	status,0,c
  9296  005C46  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9297  005C48  2981               	incf	memcpy@n& (0+255),w,b
  9298  005C4A  E1E9               	bnz	l13394
  9299  005C4C  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9300  005C4E  B4D8               	btfsc	status,2,c
  9301  005C50  0012               	return	
  9302  005C52  D7E5               	goto	l3278
  9303  005C54                     __end_of_memcpy:
  9304                           	opt stack 0
  9305                           tosu	equ	0xFFF
  9306                           tosh	equ	0xFFE
  9307                           tosl	equ	0xFFD
  9308                           pclath	equ	0xFFA
  9309                           tblptru	equ	0xFF8
  9310                           tblptrh	equ	0xFF7
  9311                           tblptrl	equ	0xFF6
  9312                           tablat	equ	0xFF5
  9313                           prodh	equ	0xFF4
  9314                           prodl	equ	0xFF3
  9315                           intcon	equ	0xFF2
  9316                           intcon2	equ	0xFF1
  9317                           intcon3	equ	0xFF0
  9318                           postinc0	equ	0xFEE
  9319                           plusw0	equ	0xFEB
  9320                           wreg	equ	0xFE8
  9321                           postinc1	equ	0xFE6
  9322                           postdec1	equ	0xFE5
  9323                           fsr1h	equ	0xFE2
  9324                           fsr1l	equ	0xFE1
  9325                           indf2	equ	0xFDF
  9326                           postinc2	equ	0xFDE
  9327                           postdec2	equ	0xFDD
  9328                           plusw2	equ	0xFDB
  9329                           fsr2h	equ	0xFDA
  9330                           fsr2l	equ	0xFD9
  9331                           status	equ	0xFD8
  9332                           
  9333 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9334 ;; Defined at:
  9335 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;		None
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;		None
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      void 
  9342 ;; Registers used:
  9343 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9353 ;;Total ram usage:        0 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; Hardware stack levels required when called:   17
  9356 ;; This function calls:
  9357 ;;		_USBCheckStdRequest
  9358 ;;		_USBCtrlEPServiceComplete
  9359 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9360 ;; This function is called by:
  9361 ;;		_USBCtrlEPService
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           	psect	text36
  9366  004D84                     __ptext36:
  9367                           	opt stack 0
  9368  004D84                     _USBCtrlTrfSetupHandler:
  9369                           	opt stack 8
  9370                           
  9371                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;incstack = 0
  9375  004D84  0E00               	movlw	0
  9376  004D86  0100               	movlb	0	; () banked
  9377  004D88  6FCC               	movwf	_shortPacketStatus& (0+255),b
  9378                           
  9379                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9380  004D8A  0E00               	movlw	0
  9381  004D8C  6FC8               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9382                           
  9383                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9384  004D8E  0E00               	movlw	0
  9385  004D90  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9386                           
  9387                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9388  004D92  0E00               	movlw	0
  9389  004D94  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9390                           
  9391                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9392  004D96  0E00               	movlw	0
  9393  004D98  0101               	movlb	1	; () banked
  9394  004D9A  6FE2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9395                           
  9396                           ;usb_device.c: 2493: controlTransferState = 0;
  9397  004D9C  0E00               	movlw	0
  9398  004D9E  0100               	movlb	0	; () banked
  9399  004DA0  6FCB               	movwf	_controlTransferState& (0+255),b
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9403  004DA2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9404  004DA6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9405  004DAA  0E7F               	movlw	127
  9406  004DAC  16DF               	andwf	indf2,f,c
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9410  004DAE  0E04               	movlw	4
  9411  004DB0  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9415  004DB2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9416  004DB6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9417  004DBA  0E7F               	movlw	127
  9418  004DBC  16DF               	andwf	indf2,f,c
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9422  004DBE  0E04               	movlw	4
  9423  004DC0  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9427  004DC2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9428  004DC6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9429  004DCA  0E7F               	movlw	127
  9430  004DCC  16DF               	andwf	indf2,f,c
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9434  004DCE  0E00               	movlw	0
  9435  004DD0  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9439  004DD2  0E00               	movlw	0
  9440  004DD4  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9441  004DD6  0E00               	movlw	0
  9442  004DD8  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9443                           
  9444                           ; BSR set to: 0
  9445                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9446  004DDA  0E00               	movlw	0
  9447  004DDC  0101               	movlb	1	; () banked
  9448  004DDE  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9449                           
  9450                           ; BSR set to: 1
  9451                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9452  004DE0  0E00               	movlw	0
  9453  004DE2  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9454  004DE4  0E00               	movlw	0
  9455  004DE6  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9456                           
  9457                           ; BSR set to: 1
  9458                           ;usb_device.c: 2517: USBCheckStdRequest();
  9459  004DE8  EC32  F01B         	call	_USBCheckStdRequest	;wreg free
  9460                           
  9461                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9462  004DEC  0E00               	movlw	0
  9463  004DEE  0100               	movlb	0	; () banked
  9464  004DF0  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9465  004DF2  0E03               	movlw	3
  9466  004DF4  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9467  004DF6  0E00               	movlw	0
  9468  004DF8  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9469  004DFA  0E00               	movlw	0
  9470  004DFC  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9471  004DFE  0E00               	movlw	0
  9472  004E00  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9473  004E02  0E00               	movlw	0
  9474  004E04  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9475  004E06  EC6E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9476                           
  9477                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9478  004E0A  ECE1  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9479  004E0E  0012               	return		;funcret
  9480  004E10                     __end_of_USBCtrlTrfSetupHandler:
  9481                           	opt stack 0
  9482                           tosu	equ	0xFFF
  9483                           tosh	equ	0xFFE
  9484                           tosl	equ	0xFFD
  9485                           pclath	equ	0xFFA
  9486                           tblptru	equ	0xFF8
  9487                           tblptrh	equ	0xFF7
  9488                           tblptrl	equ	0xFF6
  9489                           tablat	equ	0xFF5
  9490                           prodh	equ	0xFF4
  9491                           prodl	equ	0xFF3
  9492                           intcon	equ	0xFF2
  9493                           intcon2	equ	0xFF1
  9494                           intcon3	equ	0xFF0
  9495                           postinc0	equ	0xFEE
  9496                           plusw0	equ	0xFEB
  9497                           wreg	equ	0xFE8
  9498                           postinc1	equ	0xFE6
  9499                           postdec1	equ	0xFE5
  9500                           fsr1h	equ	0xFE2
  9501                           fsr1l	equ	0xFE1
  9502                           indf2	equ	0xFDF
  9503                           postinc2	equ	0xFDE
  9504                           postdec2	equ	0xFDD
  9505                           plusw2	equ	0xFDB
  9506                           fsr2h	equ	0xFDA
  9507                           fsr2l	equ	0xFD9
  9508                           status	equ	0xFD8
  9509                           
  9510 ;; *************** function _USBCtrlEPServiceComplete *****************
  9511 ;; Defined at:
  9512 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;		None
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;		None
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  1    wreg      void 
  9519 ;; Registers used:
  9520 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9530 ;;Total ram usage:        0 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:   13
  9533 ;; This function calls:
  9534 ;;		_USBCtrlEPAllowDataStage
  9535 ;;		_USBCtrlEPAllowStatusStage
  9536 ;; This function is called by:
  9537 ;;		_USBCtrlTrfSetupHandler
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text37
  9542  0031C2                     __ptext37:
  9543                           	opt stack 0
  9544  0031C2                     _USBCtrlEPServiceComplete:
  9545                           	opt stack 11
  9546                           
  9547                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9548                           
  9549                           ;incstack = 0
  9550  0031C2  9865               	bcf	3941,4,c	;volatile
  9551                           
  9552                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9553  0031C4  0100               	movlb	0	; () banked
  9554  0031C6  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9555  0031C8  D03C               	goto	l1681
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;usb_device.c: 1647: {
  9559                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9560  0031CA  0101               	movlb	1	; () banked
  9561  0031CC  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9562  0031CE  D00D               	goto	l1682
  9563                           
  9564                           ; BSR set to: 1
  9565                           ;usb_device.c: 1649: {
  9566                           ;usb_device.c: 1650: controlTransferState = 2;
  9567  0031D0  0E02               	movlw	2
  9568  0031D2  0100               	movlb	0	; () banked
  9569  0031D4  6FCB               	movwf	_controlTransferState& (0+255),b
  9570                           
  9571                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9572  0031D6  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9573  0031D8  B4D8               	btfsc	status,2,c
  9574                           
  9575                           ; BSR set to: 0
  9576                           ;usb_device.c: 1662: {
  9577                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9578  0031DA  ECDE  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9579                           
  9580                           ;usb_device.c: 1664: }
  9581                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9582  0031DE  0E00               	movlw	0
  9583  0031E0  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9584                           
  9585                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9586  0031E2  0E00               	movlw	0
  9587  0031E4  0100               	movlb	0	; () banked
  9588  0031E6  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9589                           
  9590                           ;usb_device.c: 1670: }
  9591  0031E8  0012               	return	
  9592  0031EA                     l1682:
  9593                           
  9594                           ;usb_device.c: 1671: else
  9595                           ;usb_device.c: 1672: {
  9596                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9597                           
  9598                           ; BSR set to: 0
  9599  0031EA  0100               	movlb	0	; () banked
  9600  0031EC  EE20 F001          	lfsr	2,1
  9601  0031F0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9602  0031F2  26D9               	addwf	fsr2l,f,c
  9603  0031F4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9604  0031F6  22DA               	addwfc	fsr2h,f,c
  9605  0031F8  0E08               	movlw	8
  9606  0031FA  6EDF               	movwf	indf2,c
  9607                           
  9608                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9609  0031FC  EE20 F002          	lfsr	2,2
  9610  003200  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9611  003202  26D9               	addwf	fsr2l,f,c
  9612  003204  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9613  003206  22DA               	addwfc	fsr2h,f,c
  9614  003208  0E30               	movlw	48
  9615  00320A  6EDE               	movwf	postinc2,c
  9616  00320C  0E04               	movlw	4
  9617  00320E  6EDD               	movwf	postdec2,c
  9618                           
  9619                           ; BSR set to: 0
  9620                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9621  003210  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9622  003214  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9623  003218  0E0C               	movlw	12
  9624  00321A  6EDF               	movwf	indf2,c
  9625                           
  9626                           ; BSR set to: 0
  9627                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9628  00321C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9629  003220  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9630  003224  0E00               	movlw	0
  9631  003226  8EDB               	bsf	plusw2,7,c
  9632                           
  9633                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9634  003228  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9635  00322C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9636  003230  0E04               	movlw	4
  9637  003232  6EDF               	movwf	indf2,c
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9641  003234  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9642  003238  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9643  00323C  0E00               	movlw	0
  9644  00323E  8EDB               	bsf	plusw2,7,c
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;usb_device.c: 1683: }
  9648                           ;usb_device.c: 1684: }
  9649  003240  0012               	return	
  9650  003242                     l1681:
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;usb_device.c: 1685: else
  9654                           ;usb_device.c: 1686: {
  9655                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9656  003242  0104               	movlb	4	; () banked
  9657  003244  AF30               	btfss	48,7,b	;volatile
  9658  003246  D012               	goto	l1686
  9659                           
  9660                           ; BSR set to: 4
  9661                           ;usb_device.c: 1688: {
  9662                           ;usb_device.c: 1689: controlTransferState = 1;
  9663  003248  0E01               	movlw	1
  9664  00324A  0100               	movlb	0	; () banked
  9665  00324C  6FCB               	movwf	_controlTransferState& (0+255),b
  9666                           
  9667                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9668  00324E  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9669  003250  B4D8               	btfsc	status,2,c
  9670                           
  9671                           ; BSR set to: 0
  9672                           ;usb_device.c: 1704: {
  9673                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9674  003252  ECDE  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9675                           
  9676                           ;usb_device.c: 1706: }
  9677                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9678  003256  0E00               	movlw	0
  9679  003258  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9680                           
  9681                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9682  00325A  0E00               	movlw	0
  9683  00325C  0100               	movlb	0	; () banked
  9684  00325E  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9688  003260  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9689  003262  A4D8               	btfss	status,2,c
  9690  003264  0012               	return	
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;usb_device.c: 1731: {
  9694                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9695  003266  EC20  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9696                           
  9697                           ;usb_device.c: 1733: }
  9698                           ;usb_device.c: 1734: }
  9699  00326A  0012               	return	
  9700  00326C                     l1686:
  9701                           
  9702                           ;usb_device.c: 1735: else
  9703                           ;usb_device.c: 1736: {
  9704                           ;usb_device.c: 1747: controlTransferState = 2;
  9705  00326C  0E02               	movlw	2
  9706  00326E  0100               	movlb	0	; () banked
  9707  003270  6FCB               	movwf	_controlTransferState& (0+255),b
  9708                           
  9709                           ; BSR set to: 0
  9710                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9711  003272  EE20 F001          	lfsr	2,1
  9712  003276  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9713  003278  26D9               	addwf	fsr2l,f,c
  9714  00327A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9715  00327C  22DA               	addwfc	fsr2h,f,c
  9716  00327E  0E08               	movlw	8
  9717  003280  6EDF               	movwf	indf2,c
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9721  003282  EE20 F002          	lfsr	2,2
  9722  003286  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9723  003288  26D9               	addwf	fsr2l,f,c
  9724  00328A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9725  00328C  22DA               	addwfc	fsr2h,f,c
  9726  00328E  0E30               	movlw	48
  9727  003290  6EDE               	movwf	postinc2,c
  9728  003292  0E04               	movlw	4
  9729  003294  6EDD               	movwf	postdec2,c
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9733  003296  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9734  00329A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9735  00329E  0E04               	movlw	4
  9736  0032A0  6EDF               	movwf	indf2,c
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9740  0032A2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9741  0032A6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9742  0032AA  0E00               	movlw	0
  9743  0032AC  8EDB               	bsf	plusw2,7,c
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9747  0032AE  0E00               	movlw	0
  9748  0032B0  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9752  0032B2  0E00               	movlw	0
  9753  0032B4  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9754                           
  9755                           ; BSR set to: 0
  9756                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9757  0032B6  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9758  0032B8  A4D8               	btfss	status,2,c
  9759  0032BA  0012               	return	
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;usb_device.c: 1759: {
  9763                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9764  0032BC  EC20  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9765  0032C0  0012               	return	
  9766  0032C2                     __end_of_USBCtrlEPServiceComplete:
  9767                           	opt stack 0
  9768                           tosu	equ	0xFFF
  9769                           tosh	equ	0xFFE
  9770                           tosl	equ	0xFFD
  9771                           pclath	equ	0xFFA
  9772                           tblptru	equ	0xFF8
  9773                           tblptrh	equ	0xFF7
  9774                           tblptrl	equ	0xFF6
  9775                           tablat	equ	0xFF5
  9776                           prodh	equ	0xFF4
  9777                           prodl	equ	0xFF3
  9778                           intcon	equ	0xFF2
  9779                           intcon2	equ	0xFF1
  9780                           intcon3	equ	0xFF0
  9781                           postinc0	equ	0xFEE
  9782                           plusw0	equ	0xFEB
  9783                           wreg	equ	0xFE8
  9784                           postinc1	equ	0xFE6
  9785                           postdec1	equ	0xFE5
  9786                           fsr1h	equ	0xFE2
  9787                           fsr1l	equ	0xFE1
  9788                           indf2	equ	0xFDF
  9789                           postinc2	equ	0xFDE
  9790                           postdec2	equ	0xFDD
  9791                           plusw2	equ	0xFDB
  9792                           fsr2h	equ	0xFDA
  9793                           fsr2l	equ	0xFD9
  9794                           status	equ	0xFD8
  9795                           
  9796 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9797 ;; Defined at:
  9798 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;		None
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;		None
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      void 
  9805 ;; Registers used:
  9806 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9816 ;;Total ram usage:        0 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:   12
  9819 ;; This function calls:
  9820 ;;		_USBCtrlTrfTxService
  9821 ;; This function is called by:
  9822 ;;		_USBCtrlEPServiceComplete
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           	psect	text38
  9827  0047BC                     __ptext38:
  9828                           	opt stack 0
  9829  0047BC                     _USBCtrlEPAllowDataStage:
  9830                           	opt stack 11
  9831                           
  9832                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9833                           
  9834                           ;incstack = 0
  9835  0047BC  0E00               	movlw	0
  9836  0047BE  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9837                           
  9838                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9839  0047C0  0E00               	movlw	0
  9840  0047C2  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9841                           
  9842                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9843  0047C4  0E02               	movlw	2
  9844  0047C6  0100               	movlb	0	; () banked
  9845  0047C8  19CB               	xorwf	_controlTransferState& (0+255),w,b
  9846  0047CA  A4D8               	btfss	status,2,c
  9847  0047CC  D01F               	goto	l1670
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;usb_device.c: 1512: {
  9851                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9852  0047CE  EE20 F001          	lfsr	2,1
  9853  0047D2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9854  0047D4  26D9               	addwf	fsr2l,f,c
  9855  0047D6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9856  0047D8  22DA               	addwfc	fsr2h,f,c
  9857  0047DA  0E08               	movlw	8
  9858  0047DC  6EDF               	movwf	indf2,c
  9859                           
  9860                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9861  0047DE  EE20 F002          	lfsr	2,2
  9862  0047E2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9863  0047E4  26D9               	addwf	fsr2l,f,c
  9864  0047E6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9865  0047E8  22DA               	addwfc	fsr2h,f,c
  9866  0047EA  0E38               	movlw	56
  9867  0047EC  6EDE               	movwf	postinc2,c
  9868  0047EE  0E04               	movlw	4
  9869  0047F0  6EDD               	movwf	postdec2,c
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9873  0047F2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9874  0047F6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9875  0047FA  0E48               	movlw	72
  9876  0047FC  6EDF               	movwf	indf2,c
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9880  0047FE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9881  004802  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9882  004806  0E00               	movlw	0
  9883  004808  8EDB               	bsf	plusw2,7,c
  9884                           
  9885                           ;usb_device.c: 1518: }
  9886  00480A  0012               	return	
  9887  00480C                     l1670:
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;usb_device.c: 1519: else
  9891                           ;usb_device.c: 1520: {
  9892                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9893                           
  9894                           ; BSR set to: 0
  9895  00480C  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9896  00480E  0104               	movlb	4	; () banked
  9897  004810  5D36               	subwf	54,w,b	;volatile
  9898  004812  0100               	movlb	0	; () banked
  9899  004814  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9900  004816  0104               	movlb	4	; () banked
  9901  004818  5937               	subwfb	55,w,b	;volatile
  9902  00481A  B0D8               	btfsc	status,0,c
  9903  00481C  D004               	goto	l1672
  9904                           
  9905                           ; BSR set to: 4
  9906                           ;usb_device.c: 1524: {
  9907                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9908  00481E  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9909  004822  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9910  004826                     l1672:
  9911                           
  9912                           ; BSR set to: 4
  9913                           ;usb_device.c: 1526: }
  9914                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9915                           
  9916                           ; BSR set to: 4
  9917  004826  EC12  F01C         	call	_USBCtrlTrfTxService	;wreg free
  9918                           
  9919                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9920  00482A  0100               	movlb	0	; () banked
  9921  00482C  EE20 F002          	lfsr	2,2
  9922  004830  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9923  004832  26D9               	addwf	fsr2l,f,c
  9924  004834  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9925  004836  22DA               	addwfc	fsr2h,f,c
  9926  004838  0E38               	movlw	56
  9927  00483A  6EDE               	movwf	postinc2,c
  9928  00483C  0E04               	movlw	4
  9929  00483E  6EDD               	movwf	postdec2,c
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9933  004840  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9934  004844  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9935  004848  0E48               	movlw	72
  9936  00484A  6EDF               	movwf	indf2,c
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9940  00484C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9941  004850  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9942  004854  0E00               	movlw	0
  9943  004856  8EDB               	bsf	plusw2,7,c
  9944  004858  0012               	return	
  9945  00485A                     __end_of_USBCtrlEPAllowDataStage:
  9946                           	opt stack 0
  9947                           tosu	equ	0xFFF
  9948                           tosh	equ	0xFFE
  9949                           tosl	equ	0xFFD
  9950                           pclath	equ	0xFFA
  9951                           tblptru	equ	0xFF8
  9952                           tblptrh	equ	0xFF7
  9953                           tblptrl	equ	0xFF6
  9954                           tablat	equ	0xFF5
  9955                           prodh	equ	0xFF4
  9956                           prodl	equ	0xFF3
  9957                           intcon	equ	0xFF2
  9958                           intcon2	equ	0xFF1
  9959                           intcon3	equ	0xFF0
  9960                           postinc0	equ	0xFEE
  9961                           plusw0	equ	0xFEB
  9962                           wreg	equ	0xFE8
  9963                           postinc1	equ	0xFE6
  9964                           postdec1	equ	0xFE5
  9965                           fsr1h	equ	0xFE2
  9966                           fsr1l	equ	0xFE1
  9967                           indf2	equ	0xFDF
  9968                           postinc2	equ	0xFDE
  9969                           postdec2	equ	0xFDD
  9970                           plusw2	equ	0xFDB
  9971                           fsr2h	equ	0xFDA
  9972                           fsr2l	equ	0xFD9
  9973                           status	equ	0xFD8
  9974                           
  9975 ;; *************** function _USBCheckStdRequest *****************
  9976 ;; Defined at:
  9977 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;		None
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1    wreg      void 
  9984 ;; Registers used:
  9985 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9995 ;;Total ram usage:        0 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; Hardware stack levels required when called:   16
  9998 ;; This function calls:
  9999 ;;		_USBStdFeatureReqHandler
 10000 ;;		_USBStdGetDscHandler
 10001 ;;		_USBStdGetStatusHandler
 10002 ;;		_USBStdSetCfgHandler
 10003 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10004 ;; This function is called by:
 10005 ;;		_USBCtrlTrfSetupHandler
 10006 ;; This function uses a non-reentrant model
 10007 ;;
 10008                           
 10009                           	psect	text39
 10010  003664                     __ptext39:
 10011                           	opt stack 0
 10012  003664                     _USBCheckStdRequest:
 10013                           	opt stack 8
 10014                           
 10015                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
 10016                           
 10017                           ; BSR set to: 0
 10018                           ;incstack = 0
 10019  003664  0104               	movlb	4	; () banked
 10020  003666  3930               	swapf	48,w,b	;volatile
 10021  003668  32E8               	rrcf	wreg,f,c
 10022  00366A  0B03               	andlw	3
 10023  00366C  0900               	iorlw	0
 10024  00366E  A4D8               	btfss	status,2,c
 10025  003670  0012               	return	
 10026  003672  D048               	goto	l1805
 10027  003674                     l1806:
 10028                           
 10029                           ; BSR set to: 4
 10030                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 10031  003674  0100               	movlb	0	; () banked
 10032  003676  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
 10036  003678  0E08               	movlw	8
 10037  00367A  6FCD               	movwf	_USBDeviceState& (0+255),b
 10038                           
 10039                           ;usb_device.c: 2713: break;
 10040  00367C  0012               	return	
 10041  00367E                     
 10042                           ;usb_device.c: 2715: USBStdGetDscHandler();
 10043                           
 10044                           ; BSR set to: 0
 10045  00367E  EC25  F017         	call	_USBStdGetDscHandler	;wreg free
 10046                           
 10047                           ;usb_device.c: 2716: break;
 10048  003682  0012               	return	
 10049  003684                     
 10050                           ;usb_device.c: 2718: USBStdSetCfgHandler();
 10051  003684  EC4C  F01A         	call	_USBStdSetCfgHandler	;wreg free
 10052                           
 10053                           ;usb_device.c: 2719: break;
 10054  003688  0012               	return	
 10055  00368A                     
 10056                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 10057  00368A  0ED6               	movlw	low _USBActiveConfiguration
 10058  00368C  0100               	movlb	0	; () banked
 10059  00368E  6FB0               	movwf	_inPipes& (0+255),b
 10060  003690  0E00               	movlw	high _USBActiveConfiguration
 10061  003692  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10065  003694  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10066                           
 10067                           ; BSR set to: 0
 10068                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 10069  003696  0E01               	movlw	1
 10070  003698  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10071                           
 10072                           ; BSR set to: 0
 10073                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 10074  00369A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10075                           
 10076                           ;usb_device.c: 2725: break;
 10077  00369C  0012               	return	
 10078  00369E                     
 10079                           ;usb_device.c: 2727: USBStdGetStatusHandler();
 10080                           
 10081                           ; BSR set to: 0
 10082  00369E  EC39  F021         	call	_USBStdGetStatusHandler	;wreg free
 10083                           
 10084                           ;usb_device.c: 2728: break;
 10085  0036A2  0012               	return	
 10086  0036A4                     
 10087                           ;usb_device.c: 2730: case 3:
 10088                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
 10089  0036A4  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
 10090                           
 10091                           ;usb_device.c: 2732: break;
 10092  0036A8  0012               	return	
 10093  0036AA                     
 10094                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 10095  0036AA  0104               	movlb	4	; () banked
 10096  0036AC  5134               	movf	52,w,b	;volatile
 10097  0036AE  0D01               	mullw	1
 10098  0036B0  0EF1               	movlw	low _USBAlternateInterface
 10099  0036B2  24F3               	addwf	prodl,w,c
 10100  0036B4  0100               	movlb	0	; () banked
 10101  0036B6  6FB0               	movwf	_inPipes& (0+255),b
 10102  0036B8  0E02               	movlw	high _USBAlternateInterface
 10103  0036BA  20F4               	addwfc	prodh,w,c
 10104  0036BC  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10108  0036BE  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
 10112  0036C0  0E01               	movlw	1
 10113  0036C2  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
 10117  0036C4  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10118                           
 10119                           ;usb_device.c: 2738: break;
 10120  0036C6  0012               	return	
 10121  0036C8                     l1815:
 10122                           
 10123                           ; BSR set to: 4
 10124                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
 10125  0036C8  0100               	movlb	0	; () banked
 10126  0036CA  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10127                           
 10128                           ; BSR set to: 0
 10129                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10130  0036CC  0104               	movlb	4	; () banked
 10131  0036CE  5134               	movf	52,w,b	;volatile
 10132  0036D0  0D01               	mullw	1
 10133  0036D2  0EF1               	movlw	low _USBAlternateInterface
 10134  0036D4  24F3               	addwf	prodl,w,c
 10135  0036D6  6ED9               	movwf	fsr2l,c
 10136  0036D8  0E02               	movlw	high _USBAlternateInterface
 10137  0036DA  20F4               	addwfc	prodh,w,c
 10138  0036DC  6EDA               	movwf	fsr2h,c
 10139  0036DE  C432 FFDF          	movff	1074,indf2	;volatile
 10140                           
 10141                           ;usb_device.c: 2742: break;
 10142  0036E2  0012               	return	
 10143  0036E4                     
 10144                           ; BSR set to: 4
 10145                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10146                           
 10147                           ; BSR set to: 4
 10148  0036E4  0E00               	movlw	0
 10149  0036E6  0100               	movlb	0	; () banked
 10150  0036E8  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10151  0036EA  0E02               	movlw	2
 10152  0036EC  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10153  0036EE  0E00               	movlw	0
 10154  0036F0  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10155  0036F2  0E00               	movlw	0
 10156  0036F4  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10157  0036F6  0E00               	movlw	0
 10158  0036F8  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10159  0036FA  0E00               	movlw	0
 10160  0036FC  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10161  0036FE  EC6E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10162                           
 10163                           ;usb_device.c: 2749: }
 10164                           
 10165                           ;usb_device.c: 2748: break;
 10166                           
 10167                           ;usb_device.c: 2747: default:
 10168                           
 10169                           ;usb_device.c: 2746: case 12:
 10170                           
 10171                           ;usb_device.c: 2745: break;
 10172  003702  0012               	return	
 10173  003704                     l1805:
 10174  003704  0104               	movlb	4	; () banked
 10175  003706  5131               	movf	49,w,b	;volatile
 10176                           
 10177                           ; Switch size 1, requested type "space"
 10178                           ; Number of cases is 11, Range of values is 0 to 12
 10179                           ; switch strategies available:
 10180                           ; Name         Instructions Cycles
 10181                           ; simple_byte           34    18 (average)
 10182                           ;	Chosen strategy is simple_byte
 10183  003708  0A00               	xorlw	0	; case 0
 10184  00370A  B4D8               	btfsc	status,2,c
 10185  00370C  D7C8               	goto	l1811
 10186  00370E  0A01               	xorlw	1	; case 1
 10187  003710  B4D8               	btfsc	status,2,c
 10188  003712  D7C8               	goto	l1812
 10189  003714  0A02               	xorlw	2	; case 3
 10190  003716  B4D8               	btfsc	status,2,c
 10191  003718  D7C5               	goto	l1812
 10192  00371A  0A06               	xorlw	6	; case 5
 10193  00371C  B4D8               	btfsc	status,2,c
 10194  00371E  D7AA               	goto	l1806
 10195  003720  0A03               	xorlw	3	; case 6
 10196  003722  B4D8               	btfsc	status,2,c
 10197  003724  D7AC               	goto	l1808
 10198  003726  0A01               	xorlw	1	; case 7
 10199  003728  B4D8               	btfsc	status,2,c
 10200  00372A  D7DC               	goto	l1816
 10201  00372C  0A0F               	xorlw	15	; case 8
 10202  00372E  B4D8               	btfsc	status,2,c
 10203  003730  D7AC               	goto	l1810
 10204  003732  0A01               	xorlw	1	; case 9
 10205  003734  B4D8               	btfsc	status,2,c
 10206  003736  D7A6               	goto	l1809
 10207  003738  0A03               	xorlw	3	; case 10
 10208  00373A  B4D8               	btfsc	status,2,c
 10209  00373C  D7B6               	goto	l1814
 10210  00373E  0A01               	xorlw	1	; case 11
 10211  003740  B4D8               	btfsc	status,2,c
 10212  003742  D7C2               	goto	l1815
 10213  003744  0A07               	xorlw	7	; case 12
 10214  003746  0012               	return	
 10215  003748                     __end_of_USBCheckStdRequest:
 10216                           	opt stack 0
 10217                           tosu	equ	0xFFF
 10218                           tosh	equ	0xFFE
 10219                           tosl	equ	0xFFD
 10220                           pclath	equ	0xFFA
 10221                           tblptru	equ	0xFF8
 10222                           tblptrh	equ	0xFF7
 10223                           tblptrl	equ	0xFF6
 10224                           tablat	equ	0xFF5
 10225                           prodh	equ	0xFF4
 10226                           prodl	equ	0xFF3
 10227                           intcon	equ	0xFF2
 10228                           intcon2	equ	0xFF1
 10229                           intcon3	equ	0xFF0
 10230                           postinc0	equ	0xFEE
 10231                           plusw0	equ	0xFEB
 10232                           wreg	equ	0xFE8
 10233                           postinc1	equ	0xFE6
 10234                           postdec1	equ	0xFE5
 10235                           fsr1h	equ	0xFE2
 10236                           fsr1l	equ	0xFE1
 10237                           indf2	equ	0xFDF
 10238                           postinc2	equ	0xFDE
 10239                           postdec2	equ	0xFDD
 10240                           plusw2	equ	0xFDB
 10241                           fsr2h	equ	0xFDA
 10242                           fsr2l	equ	0xFD9
 10243                           status	equ	0xFD8
 10244                           
 10245 ;; *************** function _USBStdSetCfgHandler *****************
 10246 ;; Defined at:
 10247 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;		None
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;  i               1   49[BANK0 ] unsigned char 
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1    wreg      void 
 10254 ;; Registers used:
 10255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10264 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10265 ;;Total ram usage:        1 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:   15
 10268 ;; This function calls:
 10269 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10270 ;;		_memset
 10271 ;; This function is called by:
 10272 ;;		_USBCheckStdRequest
 10273 ;; This function uses a non-reentrant model
 10274 ;;
 10275                           
 10276                           	psect	text40
 10277  003498                     __ptext40:
 10278                           	opt stack 0
 10279  003498                     _USBStdSetCfgHandler:
 10280                           	opt stack 8
 10281                           
 10282                           ;usb_device.c: 1988: uint8_t i;
 10283                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
 10284                           
 10285                           ;incstack = 0
 10286  003498  0100               	movlb	0	; () banked
 10287  00349A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10288                           
 10289                           ; BSR set to: 0
 10290                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
 10291  00349C  0E27               	movlw	39
 10292  00349E  6F7D               	movwf	memset@p1& (0+255),b
 10293  0034A0  0E0F               	movlw	15
 10294  0034A2  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10295  0034A4  0E00               	movlw	0
 10296  0034A6  6F80               	movwf	(memset@c+1)& (0+255),b
 10297  0034A8  0E00               	movlw	0
 10298  0034AA  6F7F               	movwf	memset@c& (0+255),b
 10299  0034AC  0E00               	movlw	0
 10300  0034AE  6F82               	movwf	(memset@n+1)& (0+255),b
 10301  0034B0  0E02               	movlw	2
 10302  0034B2  6F81               	movwf	memset@n& (0+255),b
 10303  0034B4  ECCD  F030         	call	_memset	;wreg free
 10304                           
 10305                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10306  0034B8  0E00               	movlw	0
 10307  0034BA  0100               	movlb	0	; () banked
 10308  0034BC  6F7D               	movwf	memset@p1& (0+255),b
 10309  0034BE  0E04               	movlw	4
 10310  0034C0  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10311  0034C2  0E00               	movlw	0
 10312  0034C4  6F80               	movwf	(memset@c+1)& (0+255),b
 10313  0034C6  0E00               	movlw	0
 10314  0034C8  6F7F               	movwf	memset@c& (0+255),b
 10315  0034CA  0E00               	movlw	0
 10316  0034CC  6F82               	movwf	(memset@n+1)& (0+255),b
 10317  0034CE  0E30               	movlw	48
 10318  0034D0  6F81               	movwf	memset@n& (0+255),b
 10319  0034D2  ECCD  F030         	call	_memset	;wreg free
 10320                           
 10321                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10322  0034D6  8C65               	bsf	3941,6,c	;volatile
 10323                           
 10324                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10325  0034D8  0E00               	movlw	0
 10326  0034DA  0100               	movlb	0	; () banked
 10327  0034DC  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10328  0034DE                     l12742:
 10329                           
 10330                           ; BSR set to: 0
 10331  0034DE  0E02               	movlw	2
 10332  0034E0  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10333  0034E2  D001               	goto	l1722
 10334  0034E4  D016               	goto	u11360
 10335  0034E6                     l1722:
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;usb_device.c: 2006: {
 10339                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10340                           
 10341                           ; BSR set to: 0
 10342  0034E6  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10343  0034E8  0D01               	mullw	1
 10344  0034EA  0ED2               	movlw	low _ep_data_in
 10345  0034EC  24F3               	addwf	prodl,w,c
 10346  0034EE  6ED9               	movwf	fsr2l,c
 10347  0034F0  0E02               	movlw	high _ep_data_in
 10348  0034F2  20F4               	addwfc	prodh,w,c
 10349  0034F4  6EDA               	movwf	fsr2h,c
 10350  0034F6  0E00               	movlw	0
 10351  0034F8  6EDF               	movwf	indf2,c
 10352                           
 10353                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10354  0034FA  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10355  0034FC  0D01               	mullw	1
 10356  0034FE  0ECF               	movlw	low _ep_data_out
 10357  003500  24F3               	addwf	prodl,w,c
 10358  003502  6ED9               	movwf	fsr2l,c
 10359  003504  0E02               	movlw	high _ep_data_out
 10360  003506  20F4               	addwfc	prodh,w,c
 10361  003508  6EDA               	movwf	fsr2h,c
 10362  00350A  0E00               	movlw	0
 10363  00350C  6EDF               	movwf	indf2,c
 10364                           
 10365                           ; BSR set to: 0
 10366  00350E  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10367  003510  D7E6               	goto	l12742
 10368  003512                     u11360:
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;usb_device.c: 2009: }
 10372                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10373                           
 10374                           ; BSR set to: 0
 10375  003512  0EF1               	movlw	low _USBAlternateInterface
 10376  003514  6F7D               	movwf	memset@p1& (0+255),b
 10377  003516  0E02               	movlw	high _USBAlternateInterface
 10378  003518  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10379  00351A  0E00               	movlw	0
 10380  00351C  6F80               	movwf	(memset@c+1)& (0+255),b
 10381  00351E  0E00               	movlw	0
 10382  003520  6F7F               	movwf	memset@c& (0+255),b
 10383  003522  0E00               	movlw	0
 10384  003524  6F82               	movwf	(memset@n+1)& (0+255),b
 10385  003526  0E02               	movlw	2
 10386  003528  6F81               	movwf	memset@n& (0+255),b
 10387  00352A  ECCD  F030         	call	_memset	;wreg free
 10388                           
 10389                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10390  00352E  9C65               	bcf	3941,6,c	;volatile
 10391                           
 10392                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10393  003530  0E08               	movlw	8
 10394  003532  0100               	movlb	0	; () banked
 10395  003534  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10396  003536  0E04               	movlw	4
 10397  003538  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10401  00353A  0E00               	movlw	0
 10402  00353C  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10403  00353E  0E04               	movlw	4
 10404  003540  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10408  003542  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10409  003546  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10410                           
 10411                           ; BSR set to: 0
 10412                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10413  00354A  C432 F0D6          	movff	1074,_USBActiveConfiguration	;volatile
 10414                           
 10415                           ; BSR set to: 0
 10416                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10417  00354E  51D6               	movf	_USBActiveConfiguration& (0+255),w,b
 10418  003550  A4D8               	btfss	status,2,c
 10419  003552  D003               	goto	l1724
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;usb_device.c: 2028: {
 10423                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10424  003554  0E10               	movlw	16
 10425  003556  6FCD               	movwf	_USBDeviceState& (0+255),b
 10426                           
 10427                           ;usb_device.c: 2031: }
 10428  003558  0012               	return	
 10429  00355A                     l1724:
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;usb_device.c: 2032: else
 10433                           ;usb_device.c: 2033: {
 10434                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10435                           
 10436                           ; BSR set to: 0
 10437  00355A  0E00               	movlw	0
 10438  00355C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10439  00355E  0E01               	movlw	1
 10440  003560  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10441  003562  0ED6               	movlw	low _USBActiveConfiguration
 10442  003564  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10443  003566  0E00               	movlw	high _USBActiveConfiguration
 10444  003568  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10445  00356A  0E00               	movlw	0
 10446  00356C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10447  00356E  0E01               	movlw	1
 10448  003570  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10449  003572  EC6E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10450                           
 10451                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10452  003576  0E20               	movlw	32
 10453  003578  0100               	movlb	0	; () banked
 10454  00357A  6FCD               	movwf	_USBDeviceState& (0+255),b
 10455  00357C  0012               	return	
 10456  00357E                     __end_of_USBStdSetCfgHandler:
 10457                           	opt stack 0
 10458                           tosu	equ	0xFFF
 10459                           tosh	equ	0xFFE
 10460                           tosl	equ	0xFFD
 10461                           pclath	equ	0xFFA
 10462                           tblptru	equ	0xFF8
 10463                           tblptrh	equ	0xFF7
 10464                           tblptrl	equ	0xFF6
 10465                           tablat	equ	0xFF5
 10466                           prodh	equ	0xFF4
 10467                           prodl	equ	0xFF3
 10468                           intcon	equ	0xFF2
 10469                           intcon2	equ	0xFF1
 10470                           intcon3	equ	0xFF0
 10471                           postinc0	equ	0xFEE
 10472                           plusw0	equ	0xFEB
 10473                           wreg	equ	0xFE8
 10474                           postinc1	equ	0xFE6
 10475                           postdec1	equ	0xFE5
 10476                           fsr1h	equ	0xFE2
 10477                           fsr1l	equ	0xFE1
 10478                           indf2	equ	0xFDF
 10479                           postinc2	equ	0xFDE
 10480                           postdec2	equ	0xFDD
 10481                           plusw2	equ	0xFDB
 10482                           fsr2h	equ	0xFDA
 10483                           fsr2l	equ	0xFD9
 10484                           status	equ	0xFD8
 10485                           
 10486 ;; *************** function _USBStdGetStatusHandler *****************
 10487 ;; Defined at:
 10488 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10489 ;; Parameters:    Size  Location     Type
 10490 ;;		None
 10491 ;; Auto vars:     Size  Location     Type
 10492 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10493 ;;		 -> NULL(0), BDT(48), 
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1    wreg      void 
 10496 ;; Registers used:
 10497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10504 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10506 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10507 ;;Total ram usage:        3 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; Hardware stack levels required when called:   11
 10510 ;; This function calls:
 10511 ;;		Nothing
 10512 ;; This function is called by:
 10513 ;;		_USBCheckStdRequest
 10514 ;; This function uses a non-reentrant model
 10515 ;;
 10516                           
 10517                           	psect	text41
 10518  004272                     __ptext41:
 10519                           	opt stack 0
 10520  004272                     _USBStdGetStatusHandler:
 10521                           	opt stack 12
 10522                           
 10523                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10524                           
 10525                           ; BSR set to: 0
 10526                           ;incstack = 0
 10527  004272  0E00               	movlw	0
 10528  004274  0104               	movlb	4	; () banked
 10529  004276  6F38               	movwf	56,b	;volatile
 10530                           
 10531                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10532  004278  0E00               	movlw	0
 10533  00427A  6F39               	movwf	57,b	;volatile
 10534                           
 10535                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10536  00427C  D03D               	goto	l1743
 10537  00427E                     l1744:
 10538                           
 10539                           ; BSR set to: 4
 10540                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10541  00427E  0100               	movlb	0	; () banked
 10542  004280  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10543                           
 10544                           ;usb_device.c: 2163: }
 10545                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10546                           
 10547                           ; BSR set to: 4
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;usb_device.c: 2161: {
 10551                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10552                           
 10553                           ;usb_device.c: 2160: if(0 == 1)
 10554  004282  0101               	movlb	1	; () banked
 10555  004284  05E4               	decf	_RemoteWakeup& (0+255),w,b
 10556  004286  A4D8               	btfss	status,2,c
 10557  004288  D042               	goto	l1747
 10558                           
 10559                           ; BSR set to: 1
 10560                           ;usb_device.c: 2166: {
 10561                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10562  00428A  0104               	movlb	4	; () banked
 10563  00428C  8338               	bsf	56,1,b	;volatile
 10564                           
 10565                           ; BSR set to: 4
 10566                           ;usb_device.c: 2168: }
 10567                           ;usb_device.c: 2169: break;
 10568  00428E  D03F               	goto	l1747
 10569  004290                     l1748:
 10570                           
 10571                           ; BSR set to: 4
 10572                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10573  004290  0100               	movlb	0	; () banked
 10574  004292  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10575                           
 10576                           ;usb_device.c: 2172: break;
 10577  004294  D03C               	goto	l1747
 10578  004296                     l1749:
 10579                           
 10580                           ; BSR set to: 4
 10581                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10582  004296  0100               	movlb	0	; () banked
 10583  004298  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10584                           
 10585                           ;usb_device.c: 2178: {
 10586                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10587                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10588  00429A  0104               	movlb	4	; () banked
 10589  00429C  BF34               	btfsc	52,7,b	;volatile
 10590  00429E  D00B               	goto	l1750
 10591                           
 10592                           ; BSR set to: 4
 10593                           ;usb_device.c: 2182: {
 10594                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10595  0042A0  5134               	movf	52,w,b	;volatile
 10596  0042A2  0B0F               	andlw	15
 10597  0042A4  0100               	movlb	0	; () banked
 10598  0042A6  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10599  0042A8  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10600  0042AA  0D02               	mullw	2
 10601  0042AC  0E0E               	movlw	low _pBDTEntryOut
 10602  0042AE  24F3               	addwf	prodl,w,c
 10603  0042B0  6ED9               	movwf	fsr2l,c
 10604  0042B2  0E03               	movlw	high _pBDTEntryOut
 10605  0042B4  D00B               	goto	L4
 10606  0042B6                     l1750:
 10607                           
 10608                           ;usb_device.c: 2185: else
 10609                           ;usb_device.c: 2186: {
 10610                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10611                           
 10612                           ; BSR set to: 0
 10613  0042B6  0104               	movlb	4	; () banked
 10614  0042B8  5134               	movf	52,w,b	;volatile
 10615  0042BA  0B0F               	andlw	15
 10616  0042BC  0100               	movlb	0	; () banked
 10617  0042BE  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10618  0042C0  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10619  0042C2  0D02               	mullw	2
 10620  0042C4  0EB6               	movlw	low _pBDTEntryIn
 10621  0042C6  24F3               	addwf	prodl,w,c
 10622  0042C8  6ED9               	movwf	fsr2l,c
 10623  0042CA  0E00               	movlw	high _pBDTEntryIn
 10624  0042CC                     L4:
 10625  0042CC  20F4               	addwfc	prodh,w,c
 10626  0042CE  6EDA               	movwf	fsr2h,c
 10627  0042D0  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10628  0042D4  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10629                           
 10630                           ; BSR set to: 0
 10631                           ;usb_device.c: 2188: }
 10632                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10633                           
 10634                           ; BSR set to: 0
 10635  0042D8  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10636  0042DC  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10637  0042E0  AEDF               	btfss	indf2,7,c
 10638  0042E2  D015               	goto	l1747
 10639                           
 10640                           ; BSR set to: 0
 10641  0042E4  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10642  0042E8  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10643  0042EC  A4DF               	btfss	indf2,2,c
 10644  0042EE  D00F               	goto	l1747
 10645                           
 10646                           ; BSR set to: 0
 10647                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10648  0042F0  0E01               	movlw	1
 10649  0042F2  0104               	movlb	4	; () banked
 10650  0042F4  6F38               	movwf	56,b	;volatile
 10651                           
 10652                           ; BSR set to: 4
 10653                           ;usb_device.c: 2193: }
 10654                           ;usb_device.c: 2194: }
 10655                           
 10656                           ; BSR set to: 4
 10657                           ;usb_device.c: 2192: break;
 10658  0042F6  D00B               	goto	l1747
 10659  0042F8                     l1743:
 10660                           
 10661                           ; BSR set to: 4
 10662                           
 10663                           ; BSR set to: 4
 10664  0042F8  5130               	movf	48,w,b	;volatile
 10665  0042FA  0B1F               	andlw	31
 10666                           
 10667                           ; Switch size 1, requested type "space"
 10668                           ; Number of cases is 3, Range of values is 0 to 2
 10669                           ; switch strategies available:
 10670                           ; Name         Instructions Cycles
 10671                           ; simple_byte           10     6 (average)
 10672                           ;	Chosen strategy is simple_byte
 10673  0042FC  0A00               	xorlw	0	; case 0
 10674  0042FE  B4D8               	btfsc	status,2,c
 10675  004300  D7BE               	goto	l1744
 10676  004302  0A01               	xorlw	1	; case 1
 10677  004304  B4D8               	btfsc	status,2,c
 10678  004306  D7C4               	goto	l1748
 10679  004308  0A03               	xorlw	3	; case 2
 10680  00430A  B4D8               	btfsc	status,2,c
 10681  00430C  D7C4               	goto	l1749
 10682  00430E                     l1747:
 10683                           
 10684                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10685  00430E  0100               	movlb	0	; () banked
 10686  004310  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10687  004312  0012               	return	
 10688                           
 10689                           ; BSR set to: 0
 10690                           ;usb_device.c: 2197: {
 10691                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10692  004314  0E38               	movlw	56
 10693  004316  6FB0               	movwf	_inPipes& (0+255),b
 10694  004318  0E04               	movlw	4
 10695  00431A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10696                           
 10697                           ; BSR set to: 0
 10698                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10699  00431C  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10700                           
 10701                           ; BSR set to: 0
 10702                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10703  00431E  0E02               	movlw	2
 10704  004320  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10705  004322  0012               	return	
 10706  004324                     __end_of_USBStdGetStatusHandler:
 10707                           	opt stack 0
 10708                           tosu	equ	0xFFF
 10709                           tosh	equ	0xFFE
 10710                           tosl	equ	0xFFD
 10711                           pclath	equ	0xFFA
 10712                           tblptru	equ	0xFF8
 10713                           tblptrh	equ	0xFF7
 10714                           tblptrl	equ	0xFF6
 10715                           tablat	equ	0xFF5
 10716                           prodh	equ	0xFF4
 10717                           prodl	equ	0xFF3
 10718                           intcon	equ	0xFF2
 10719                           intcon2	equ	0xFF1
 10720                           intcon3	equ	0xFF0
 10721                           postinc0	equ	0xFEE
 10722                           plusw0	equ	0xFEB
 10723                           wreg	equ	0xFE8
 10724                           postinc1	equ	0xFE6
 10725                           postdec1	equ	0xFE5
 10726                           fsr1h	equ	0xFE2
 10727                           fsr1l	equ	0xFE1
 10728                           indf2	equ	0xFDF
 10729                           postinc2	equ	0xFDE
 10730                           postdec2	equ	0xFDD
 10731                           plusw2	equ	0xFDB
 10732                           fsr2h	equ	0xFDA
 10733                           fsr2l	equ	0xFD9
 10734                           status	equ	0xFD8
 10735                           
 10736 ;; *************** function _USBStdGetDscHandler *****************
 10737 ;; Defined at:
 10738 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;		None
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;		None
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      void 
 10745 ;; Registers used:
 10746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10754 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10755 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10756 ;;Total ram usage:        2 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; Hardware stack levels required when called:   11
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		_USBCheckStdRequest
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           	psect	text42
 10767  002E4A                     __ptext42:
 10768                           	opt stack 0
 10769  002E4A                     _USBStdGetDscHandler:
 10770                           	opt stack 12
 10771                           
 10772                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10773                           
 10774                           ; BSR set to: 0
 10775                           ;incstack = 0
 10776  002E4A  0E80               	movlw	128
 10777  002E4C  0104               	movlb	4	; () banked
 10778  002E4E  1930               	xorwf	48,w,b	;volatile
 10779  002E50  A4D8               	btfss	status,2,c
 10780  002E52  0012               	return	
 10781                           
 10782                           ; BSR set to: 4
 10783                           ;usb_device.c: 2064: {
 10784                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10785  002E54  0EC0               	movlw	192
 10786  002E56  0100               	movlb	0	; () banked
 10787  002E58  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10788                           
 10789                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10790  002E5A  D082               	goto	l1730
 10791  002E5C                     
 10792                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10793                           
 10794                           ; BSR set to: 0
 10795  002E5C  0E49               	movlw	low _device_dsc
 10796  002E5E  0100               	movlb	0	; () banked
 10797  002E60  6FB0               	movwf	_inPipes& (0+255),b
 10798  002E62  0EFE               	movlw	high _device_dsc
 10799  002E64  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10803  002E66  0E00               	movlw	0
 10804  002E68  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10805  002E6A  0E12               	movlw	18
 10806  002E6C  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10807                           
 10808                           ;usb_device.c: 2076: break;
 10809  002E6E  0012               	return	
 10810  002E70                     
 10811                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10812                           
 10813                           ; BSR set to: 0
 10814  002E70  0104               	movlb	4	; () banked
 10815  002E72  5132               	movf	50,w,b	;volatile
 10816  002E74  A4D8               	btfss	status,2,c
 10817  002E76  D040               	goto	l1734
 10818                           
 10819                           ; BSR set to: 4
 10820                           ;usb_device.c: 2082: {
 10821                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10822  002E78  5132               	movf	50,w,b	;volatile
 10823  002E7A  0D02               	mullw	2
 10824  002E7C  0E2E               	movlw	low _USB_CD_Ptr
 10825  002E7E  24F3               	addwf	prodl,w,c
 10826  002E80  6EF6               	movwf	tblptrl,c
 10827  002E82  0EFC               	movlw	high _USB_CD_Ptr
 10828  002E84  20F4               	addwfc	prodh,w,c
 10829  002E86  6EF7               	movwf	tblptrh,c
 10830  002E88                     	if	0	;There are less than 3 active tblptr bytes
 10831  002E88                     	endif
 10832  002E88  0009               	tblrd		*+
 10833  002E8A  CFF5 F0B0          	movff	tablat,_inPipes
 10834  002E8E  000A               	tblrd		*-
 10835  002E90  CFF5 F0B1          	movff	tablat,_inPipes+1
 10836                           
 10837                           ; BSR set to: 4
 10838                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10839  002E94  0E02               	movlw	2
 10840  002E96  0100               	movlb	0	; () banked
 10841  002E98  25B0               	addwf	_inPipes& (0+255),w,b
 10842  002E9A  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10843  002E9C  0E00               	movlw	0
 10844  002E9E  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10845  002EA0  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10846  002EA2  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10847  002EA6  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10848  002EAA  6AF8               	clrf	tblptru,c
 10849  002EAC  0E0E               	movlw	(high __ramtop+-1)
 10850  002EAE  64F7               	cpfsgt	tblptrh,c
 10851  002EB0  D003               	bra	u11407
 10852  002EB2  0008               	tblrd		*
 10853  002EB4  50F5               	movf	tablat,w,c
 10854  002EB6  D005               	bra	u11400
 10855  002EB8                     u11407:
 10856  002EB8  CFF6 FFE9          	movff	tblptrl,fsr0l
 10857  002EBC  CFF7 FFEA          	movff	tblptrh,fsr0h
 10858  002EC0  50EF               	movf	indf0,w,c
 10859  002EC2                     u11400:
 10860  002EC2  0100               	movlb	0	; () banked
 10861  002EC4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10865  002EC6  0E03               	movlw	3
 10866  002EC8  25B0               	addwf	_inPipes& (0+255),w,b
 10867  002ECA  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10868  002ECC  0E00               	movlw	0
 10869  002ECE  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10870  002ED0  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10871  002ED2  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10872  002ED6  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10873  002EDA  6AF8               	clrf	tblptru,c
 10874  002EDC  0E0E               	movlw	(high __ramtop+-1)
 10875  002EDE  64F7               	cpfsgt	tblptrh,c
 10876  002EE0  D003               	bra	u11417
 10877  002EE2  0008               	tblrd		*
 10878  002EE4  50F5               	movf	tablat,w,c
 10879  002EE6  D005               	bra	u11410
 10880  002EE8                     u11417:
 10881  002EE8  CFF6 FFE9          	movff	tblptrl,fsr0l
 10882  002EEC  CFF7 FFEA          	movff	tblptrh,fsr0h
 10883  002EF0  50EF               	movf	indf0,w,c
 10884  002EF2                     u11410:
 10885  002EF2  0100               	movlb	0	; () banked
 10886  002EF4  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10887                           
 10888                           ;usb_device.c: 2094: }
 10889  002EF6  0012               	return	
 10890  002EF8                     l1734:
 10891                           
 10892                           ;usb_device.c: 2095: else
 10893                           ;usb_device.c: 2096: {
 10894                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10895                           
 10896                           ; BSR set to: 0
 10897  002EF8  0E00               	movlw	0
 10898  002EFA  0100               	movlb	0	; () banked
 10899  002EFC  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;usb_device.c: 2098: }
 10903                           ;usb_device.c: 2099: break;
 10904  002EFE  0012               	return	
 10905  002F00                     
 10906                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10907                           
 10908                           ; BSR set to: 0
 10909  002F00  0E03               	movlw	3
 10910  002F02  0104               	movlb	4	; () banked
 10911  002F04  6132               	cpfslt	50,b	;volatile
 10912  002F06  D024               	goto	l1737
 10913                           
 10914                           ; BSR set to: 4
 10915                           ;usb_device.c: 2105: {
 10916                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10917  002F08  5132               	movf	50,w,b	;volatile
 10918  002F0A  0D02               	mullw	2
 10919  002F0C  0E1E               	movlw	low _USB_SD_Ptr
 10920  002F0E  24F3               	addwf	prodl,w,c
 10921  002F10  6EF6               	movwf	tblptrl,c
 10922  002F12  0EFC               	movlw	high _USB_SD_Ptr
 10923  002F14  20F4               	addwfc	prodh,w,c
 10924  002F16  6EF7               	movwf	tblptrh,c
 10925  002F18                     	if	0	;There are less than 3 active tblptr bytes
 10926  002F18                     	endif
 10927  002F18  0009               	tblrd		*+
 10928  002F1A  CFF5 F0B0          	movff	tablat,_inPipes
 10929  002F1E  000A               	tblrd		*-
 10930  002F20  CFF5 F0B1          	movff	tablat,_inPipes+1
 10931                           
 10932                           ; BSR set to: 4
 10933                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10934  002F24  C0B0  FFF6         	movff	_inPipes,tblptrl
 10935  002F28  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10936  002F2C  6AF8               	clrf	tblptru,c
 10937  002F2E  0E0E               	movlw	(high __ramtop+-1)
 10938  002F30  64F7               	cpfsgt	tblptrh,c
 10939  002F32  D003               	bra	u11437
 10940  002F34  0008               	tblrd		*
 10941  002F36  50F5               	movf	tablat,w,c
 10942  002F38  D005               	bra	u11430
 10943  002F3A                     u11437:
 10944  002F3A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10945  002F3E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10946  002F42  50EF               	movf	indf0,w,c
 10947  002F44                     u11430:
 10948  002F44  0100               	movlb	0	; () banked
 10949  002F46  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10950  002F48  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10951  002F4A  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10952  002F4C  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10953                           
 10954                           ;usb_device.c: 2110: }
 10955  002F4E  0012               	return	
 10956  002F50                     l1737:
 10957                           
 10958                           ;usb_device.c: 2120: else
 10959                           ;usb_device.c: 2121: {
 10960                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10961                           
 10962                           ; BSR set to: 0
 10963  002F50  0E00               	movlw	0
 10964  002F52  0100               	movlb	0	; () banked
 10965  002F54  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;usb_device.c: 2123: }
 10969                           ;usb_device.c: 2124: break;
 10970  002F56  0012               	return	
 10971  002F58                     
 10972                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10973                           
 10974                           ; BSR set to: 0
 10975  002F58  0E00               	movlw	0
 10976  002F5A  0100               	movlb	0	; () banked
 10977  002F5C  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;usb_device.c: 2128: }
 10981                           
 10982                           ;usb_device.c: 2127: break;
 10983  002F5E  0012               	return	
 10984  002F60                     l1730:
 10985                           
 10986                           ; BSR set to: 0
 10987                           
 10988                           ; BSR set to: 0
 10989  002F60  0104               	movlb	4	; () banked
 10990  002F62  5133               	movf	51,w,b	;volatile
 10991                           
 10992                           ; Switch size 1, requested type "space"
 10993                           ; Number of cases is 3, Range of values is 1 to 3
 10994                           ; switch strategies available:
 10995                           ; Name         Instructions Cycles
 10996                           ; simple_byte           10     6 (average)
 10997                           ;	Chosen strategy is simple_byte
 10998  002F64  0A01               	xorlw	1	; case 1
 10999  002F66  B4D8               	btfsc	status,2,c
 11000  002F68  D779               	goto	l1731
 11001  002F6A  0A03               	xorlw	3	; case 2
 11002  002F6C  B4D8               	btfsc	status,2,c
 11003  002F6E  D780               	goto	l1733
 11004  002F70  0A01               	xorlw	1	; case 3
 11005  002F72  B4D8               	btfsc	status,2,c
 11006  002F74  D7C5               	goto	l1736
 11007  002F76  D7F0               	goto	l1739
 11008  002F78                     __end_of_USBStdGetDscHandler:
 11009                           	opt stack 0
 11010                           tosu	equ	0xFFF
 11011                           tosh	equ	0xFFE
 11012                           tosl	equ	0xFFD
 11013                           pclath	equ	0xFFA
 11014                           tblptru	equ	0xFF8
 11015                           tblptrh	equ	0xFF7
 11016                           tblptrl	equ	0xFF6
 11017                           tablat	equ	0xFF5
 11018                           prodh	equ	0xFF4
 11019                           prodl	equ	0xFF3
 11020                           intcon	equ	0xFF2
 11021                           intcon2	equ	0xFF1
 11022                           intcon3	equ	0xFF0
 11023                           indf0	equ	0xFEF
 11024                           postinc0	equ	0xFEE
 11025                           plusw0	equ	0xFEB
 11026                           fsr0h	equ	0xFEA
 11027                           fsr0l	equ	0xFE9
 11028                           wreg	equ	0xFE8
 11029                           postinc1	equ	0xFE6
 11030                           postdec1	equ	0xFE5
 11031                           fsr1h	equ	0xFE2
 11032                           fsr1l	equ	0xFE1
 11033                           indf2	equ	0xFDF
 11034                           postinc2	equ	0xFDE
 11035                           postdec2	equ	0xFDD
 11036                           plusw2	equ	0xFDB
 11037                           fsr2h	equ	0xFDA
 11038                           fsr2l	equ	0xFD9
 11039                           status	equ	0xFD8
 11040                           
 11041 ;; *************** function _USBStdFeatureReqHandler *****************
 11042 ;; Defined at:
 11043 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11044 ;; Parameters:    Size  Location     Type
 11045 ;;		None
 11046 ;; Auto vars:     Size  Location     Type
 11047 ;;  p               2   53[BANK0 ] PTR struct __BDT
 11048 ;;		 -> NULL(0), BDT(48), 
 11049 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 11050 ;;		 -> UEP0(1), 
 11051 ;;  current_ep_d    1   52[BANK0 ] struct .
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  1    wreg      void 
 11054 ;; Registers used:
 11055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11062 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11063 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11064 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11065 ;;Total ram usage:        6 bytes
 11066 ;; Hardware stack levels used:    1
 11067 ;; Hardware stack levels required when called:   15
 11068 ;; This function calls:
 11069 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11070 ;; This function is called by:
 11071 ;;		_USBCheckStdRequest
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075                           	psect	text43
 11076  00135A                     __ptext43:
 11077                           	opt stack 0
 11078  00135A                     _USBStdFeatureReqHandler:
 11079                           	opt stack 8
 11080                           
 11081                           ;usb_device.c: 2773: BDT_ENTRY *p;
 11082                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 11083                           ;usb_device.c: 2778: unsigned char* pUEP;
 11084                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 11085                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 11086                           
 11087                           ;incstack = 0
 11088  00135A  0104               	movlb	4	; () banked
 11089  00135C  0532               	decf	50,w,b	;volatile
 11090  00135E  A4D8               	btfss	status,2,c
 11091  001360  D011               	goto	l1823
 11092                           
 11093                           ; BSR set to: 4
 11094  001362  5130               	movf	48,w,b	;volatile
 11095  001364  0B1F               	andlw	31
 11096  001366  0900               	iorlw	0
 11097  001368  A4D8               	btfss	status,2,c
 11098  00136A  D00C               	goto	l1823
 11099                           
 11100                           ; BSR set to: 4
 11101                           ;usb_device.c: 2818: {
 11102                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 11103  00136C  0100               	movlb	0	; () banked
 11104  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11105                           
 11106                           ; BSR set to: 0
 11107                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 11108  001370  0E03               	movlw	3
 11109  001372  0104               	movlb	4	; () banked
 11110  001374  1931               	xorwf	49,w,b	;volatile
 11111  001376  A4D8               	btfss	status,2,c
 11112  001378  D002               	goto	l1822
 11113                           
 11114                           ; BSR set to: 4
 11115                           ;usb_device.c: 2821: RemoteWakeup = 1;
 11116  00137A  0E01               	movlw	1
 11117  00137C  D001               	goto	L5
 11118  00137E                     l1822:
 11119                           
 11120                           ;usb_device.c: 2822: else
 11121                           ;usb_device.c: 2823: RemoteWakeup = 0;
 11122                           
 11123                           ; BSR set to: 1
 11124  00137E  0E00               	movlw	0
 11125  001380                     L5:
 11126  001380  0101               	movlb	1	; () banked
 11127  001382  6FE4               	movwf	_RemoteWakeup& (0+255),b
 11128  001384                     l1823:
 11129                           
 11130                           ;usb_device.c: 2824: }
 11131                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 11132                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 11133                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 11134                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 11135                           
 11136                           ; BSR set to: 1
 11137  001384  0104               	movlb	4	; () banked
 11138  001386  5132               	movf	50,w,b	;volatile
 11139  001388  A4D8               	btfss	status,2,c
 11140  00138A  0012               	return	
 11141                           
 11142                           ; BSR set to: 4
 11143  00138C  5130               	movf	48,w,b	;volatile
 11144  00138E  0B1F               	andlw	31
 11145  001390  0A02               	xorlw	2
 11146  001392  A4D8               	btfss	status,2,c
 11147  001394  0012               	return	
 11148                           
 11149                           ; BSR set to: 4
 11150  001396  5134               	movf	52,w,b	;volatile
 11151  001398  0B0F               	andlw	15
 11152  00139A  0900               	iorlw	0
 11153  00139C  B4D8               	btfsc	status,2,c
 11154  00139E  0012               	return	
 11155                           
 11156                           ; BSR set to: 4
 11157  0013A0  5134               	movf	52,w,b	;volatile
 11158  0013A2  0B0F               	andlw	15
 11159  0013A4  0100               	movlb	0	; () banked
 11160  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11161  0013A8  0E03               	movlw	3
 11162  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 11163  0013AC  0012               	return	
 11164                           
 11165                           ; BSR set to: 0
 11166  0013AE  0E20               	movlw	32
 11167  0013B0  19CD               	xorwf	_USBDeviceState& (0+255),w,b
 11168  0013B2  A4D8               	btfss	status,2,c
 11169  0013B4  0012               	return	
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;usb_device.c: 2831: {
 11173                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 11174  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11175                           
 11176                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 11177  0013B8  0104               	movlb	4	; () banked
 11178  0013BA  BF34               	btfsc	52,7,b	;volatile
 11179  0013BC  D01C               	goto	l1825
 11180                           
 11181                           ; BSR set to: 4
 11182                           ;usb_device.c: 2838: {
 11183                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11184  0013BE  5134               	movf	52,w,b	;volatile
 11185  0013C0  0B0F               	andlw	15
 11186  0013C2  0100               	movlb	0	; () banked
 11187  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11188  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11189  0013C8  0D02               	mullw	2
 11190  0013CA  0E0E               	movlw	low _pBDTEntryOut
 11191  0013CC  24F3               	addwf	prodl,w,c
 11192  0013CE  6ED9               	movwf	fsr2l,c
 11193  0013D0  0E03               	movlw	high _pBDTEntryOut
 11194  0013D2  20F4               	addwfc	prodh,w,c
 11195  0013D4  6EDA               	movwf	fsr2h,c
 11196  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11197  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11198                           
 11199                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 11200  0013DE  0104               	movlb	4	; () banked
 11201  0013E0  5134               	movf	52,w,b	;volatile
 11202  0013E2  0B0F               	andlw	15
 11203  0013E4  0100               	movlb	0	; () banked
 11204  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11205  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11206  0013EA  0D01               	mullw	1
 11207  0013EC  0ECF               	movlw	low _ep_data_out
 11208  0013EE  24F3               	addwf	prodl,w,c
 11209  0013F0  6ED9               	movwf	fsr2l,c
 11210  0013F2  0E02               	movlw	high _ep_data_out
 11211  0013F4  D01C               	goto	L6
 11212  0013F6                     l1825:
 11213                           
 11214                           ;usb_device.c: 2842: else
 11215                           ;usb_device.c: 2843: {
 11216                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11217                           
 11218                           ; BSR set to: 0
 11219  0013F6  0104               	movlb	4	; () banked
 11220  0013F8  5134               	movf	52,w,b	;volatile
 11221  0013FA  0B0F               	andlw	15
 11222  0013FC  0100               	movlb	0	; () banked
 11223  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11224  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11225  001402  0D02               	mullw	2
 11226  001404  0EB6               	movlw	low _pBDTEntryIn
 11227  001406  24F3               	addwf	prodl,w,c
 11228  001408  6ED9               	movwf	fsr2l,c
 11229  00140A  0E00               	movlw	high _pBDTEntryIn
 11230  00140C  20F4               	addwfc	prodh,w,c
 11231  00140E  6EDA               	movwf	fsr2h,c
 11232  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11233  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11234                           
 11235                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11236  001418  0104               	movlb	4	; () banked
 11237  00141A  5134               	movf	52,w,b	;volatile
 11238  00141C  0B0F               	andlw	15
 11239  00141E  0100               	movlb	0	; () banked
 11240  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11241  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11242  001424  0D01               	mullw	1
 11243  001426  0ED2               	movlw	low _ep_data_in
 11244  001428  24F3               	addwf	prodl,w,c
 11245  00142A  6ED9               	movwf	fsr2l,c
 11246  00142C  0E02               	movlw	high _ep_data_in
 11247  00142E                     L6:
 11248  00142E  20F4               	addwfc	prodh,w,c
 11249  001430  6EDA               	movwf	fsr2h,c
 11250  001432  50DF               	movf	indf2,w,c
 11251  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;usb_device.c: 2846: }
 11255                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 11256                           
 11257                           ; BSR set to: 0
 11258  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 11259  001438  D002               	goto	l1827
 11260                           
 11261                           ; BSR set to: 0
 11262                           ;usb_device.c: 2853: {
 11263                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11264  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 11265                           
 11266                           ;usb_device.c: 2855: }
 11267  00143C  D001               	goto	l1828
 11268  00143E                     l1827:
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;usb_device.c: 2856: else
 11272                           ;usb_device.c: 2857: {
 11273                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11274                           
 11275                           ; BSR set to: 0
 11276  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 11277  001440                     l1828:
 11278                           
 11279                           ; BSR set to: 0
 11280                           ;usb_device.c: 2859: }
 11281                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 11282                           
 11283                           ; BSR set to: 0
 11284  001440  0104               	movlb	4	; () banked
 11285  001442  BF34               	btfsc	52,7,b	;volatile
 11286  001444  D00B               	goto	l1829
 11287                           
 11288                           ; BSR set to: 4
 11289                           ;usb_device.c: 2865: {
 11290                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11291  001446  5134               	movf	52,w,b	;volatile
 11292  001448  0B0F               	andlw	15
 11293  00144A  0100               	movlb	0	; () banked
 11294  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11295  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11296  001450  0D02               	mullw	2
 11297  001452  0E0E               	movlw	low _pBDTEntryOut
 11298  001454  24F3               	addwf	prodl,w,c
 11299  001456  6ED9               	movwf	fsr2l,c
 11300  001458  0E03               	movlw	high _pBDTEntryOut
 11301  00145A  D00B               	goto	L7
 11302  00145C                     l1829:
 11303                           
 11304                           ;usb_device.c: 2868: else
 11305                           ;usb_device.c: 2869: {
 11306                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11307                           
 11308                           ; BSR set to: 0
 11309  00145C  0104               	movlb	4	; () banked
 11310  00145E  5134               	movf	52,w,b	;volatile
 11311  001460  0B0F               	andlw	15
 11312  001462  0100               	movlb	0	; () banked
 11313  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11314  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11315  001468  0D02               	mullw	2
 11316  00146A  0EB6               	movlw	low _pBDTEntryIn
 11317  00146C  24F3               	addwf	prodl,w,c
 11318  00146E  6ED9               	movwf	fsr2l,c
 11319  001470  0E00               	movlw	high _pBDTEntryIn
 11320  001472                     L7:
 11321  001472  20F4               	addwfc	prodh,w,c
 11322  001474  6EDA               	movwf	fsr2h,c
 11323  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11324  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11325                           
 11326                           ; BSR set to: 0
 11327                           ;usb_device.c: 2871: }
 11328                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11329                           
 11330                           ; BSR set to: 0
 11331  00147E  0E03               	movlw	3
 11332  001480  0104               	movlb	4	; () banked
 11333  001482  1931               	xorwf	49,w,b	;volatile
 11334  001484  A4D8               	btfss	status,2,c
 11335  001486  D031               	goto	l1831
 11336                           
 11337                           ; BSR set to: 4
 11338                           ;usb_device.c: 2875: {
 11339                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11340  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11341  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11342  001490  0100               	movlb	0	; () banked
 11343  001492  AEDF               	btfss	indf2,7,c
 11344  001494  D01D               	goto	l1834
 11345                           
 11346                           ; BSR set to: 0
 11347                           ;usb_device.c: 2877: {
 11348                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11349  001496  0104               	movlb	4	; () banked
 11350  001498  BF34               	btfsc	52,7,b	;volatile
 11351  00149A  D00B               	goto	l1833
 11352                           
 11353                           ; BSR set to: 4
 11354                           ;usb_device.c: 2881: {
 11355                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11356  00149C  5134               	movf	52,w,b	;volatile
 11357  00149E  0B0F               	andlw	15
 11358  0014A0  0100               	movlb	0	; () banked
 11359  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11360  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11361  0014A6  0D01               	mullw	1
 11362  0014A8  0ECF               	movlw	low _ep_data_out
 11363  0014AA  24F3               	addwf	prodl,w,c
 11364  0014AC  6ED9               	movwf	fsr2l,c
 11365  0014AE  0E02               	movlw	high _ep_data_out
 11366  0014B0  D00B               	goto	L8
 11367  0014B2                     l1833:
 11368                           
 11369                           ;usb_device.c: 2884: else
 11370                           ;usb_device.c: 2885: {
 11371                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11372                           
 11373                           ; BSR set to: 2
 11374  0014B2  0104               	movlb	4	; () banked
 11375  0014B4  5134               	movf	52,w,b	;volatile
 11376  0014B6  0B0F               	andlw	15
 11377  0014B8  0100               	movlb	0	; () banked
 11378  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11379  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11380  0014BE  0D01               	mullw	1
 11381  0014C0  0ED2               	movlw	low _ep_data_in
 11382  0014C2  24F3               	addwf	prodl,w,c
 11383  0014C4  6ED9               	movwf	fsr2l,c
 11384  0014C6  0E02               	movlw	high _ep_data_in
 11385  0014C8                     L8:
 11386  0014C8  20F4               	addwfc	prodh,w,c
 11387  0014CA  6EDA               	movwf	fsr2h,c
 11388  0014CC  0102               	movlb	2	; () banked
 11389  0014CE  82DF               	bsf	indf2,1,c
 11390  0014D0                     l1834:
 11391                           
 11392                           ;usb_device.c: 2887: }
 11393                           ;usb_device.c: 2888: }
 11394                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11395                           
 11396                           ; BSR set to: 2
 11397                           
 11398                           ; BSR set to: 2
 11399  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11400  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11401  0014D8  0E00               	movlw	0
 11402  0014DA  84DB               	bsf	plusw2,2,c
 11403                           
 11404                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11405  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11406  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11407  0014E4  0E00               	movlw	0
 11408  0014E6  8EDB               	bsf	plusw2,7,c
 11409                           
 11410                           ;usb_device.c: 2893: }
 11411  0014E8  0012               	return	
 11412  0014EA                     l1831:
 11413                           
 11414                           ;usb_device.c: 2894: else
 11415                           ;usb_device.c: 2895: {
 11416                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11417  0014EA  0E04               	movlw	4
 11418  0014EC  0100               	movlb	0	; () banked
 11419  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11420                           
 11421                           ; BSR set to: 0
 11422                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11423  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11424  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11425  0014F8  AEDF               	btfss	indf2,7,c
 11426  0014FA  D01B               	goto	l1836
 11427                           
 11428                           ; BSR set to: 0
 11429                           ;usb_device.c: 2902: {
 11430                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11431  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11432  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11433  001504  0E7F               	movlw	127
 11434  001506  16DF               	andwf	indf2,f,c
 11435                           
 11436                           ; BSR set to: 0
 11437                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11438  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11439  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11440  001510  0E00               	movlw	0
 11441  001512  8CDB               	bsf	plusw2,6,c
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11445  001514  0E00               	movlw	0
 11446  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11447  001518  0E05               	movlw	5
 11448  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11449  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11450  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11451  001524  0E00               	movlw	0
 11452  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11453  001528  0E02               	movlw	2
 11454  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11455  00152C  EC6E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11456                           
 11457                           ;usb_device.c: 2908: }
 11458  001530  D006               	goto	l1837
 11459  001532                     l1836:
 11460                           
 11461                           ;usb_device.c: 2909: else
 11462                           ;usb_device.c: 2910: {
 11463                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11464  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11465  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11466  00153A  0E00               	movlw	0
 11467  00153C  8CDB               	bsf	plusw2,6,c
 11468  00153E                     l1837:
 11469                           
 11470                           ;usb_device.c: 2913: }
 11471                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11472  00153E  0E04               	movlw	4
 11473  001540  0100               	movlb	0	; () banked
 11474  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11478  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11479  001546  D006               	goto	u11650
 11480                           
 11481                           ; BSR set to: 0
 11482  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11483  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11484  001550  AEDF               	btfss	indf2,7,c
 11485  001552  D033               	goto	l1838
 11486  001554                     u11650:
 11487                           
 11488                           ; BSR set to: 0
 11489                           ;usb_device.c: 2924: {
 11490                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11491  001554  0104               	movlb	4	; () banked
 11492  001556  BF34               	btfsc	52,7,b	;volatile
 11493  001558  D00B               	goto	l1841
 11494                           
 11495                           ; BSR set to: 4
 11496                           ;usb_device.c: 2926: {
 11497                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11498  00155A  5134               	movf	52,w,b	;volatile
 11499  00155C  0B0F               	andlw	15
 11500  00155E  0100               	movlb	0	; () banked
 11501  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11502  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11503  001564  0D01               	mullw	1
 11504  001566  0ECF               	movlw	low _ep_data_out
 11505  001568  24F3               	addwf	prodl,w,c
 11506  00156A  6ED9               	movwf	fsr2l,c
 11507  00156C  0E02               	movlw	high _ep_data_out
 11508  00156E  D00B               	goto	L9
 11509  001570                     l1841:
 11510                           
 11511                           ;usb_device.c: 2929: else
 11512                           ;usb_device.c: 2930: {
 11513                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11514                           
 11515                           ; BSR set to: 2
 11516  001570  0104               	movlb	4	; () banked
 11517  001572  5134               	movf	52,w,b	;volatile
 11518  001574  0B0F               	andlw	15
 11519  001576  0100               	movlb	0	; () banked
 11520  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11521  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11522  00157C  0D01               	mullw	1
 11523  00157E  0ED2               	movlw	low _ep_data_in
 11524  001580  24F3               	addwf	prodl,w,c
 11525  001582  6ED9               	movwf	fsr2l,c
 11526  001584  0E02               	movlw	high _ep_data_in
 11527  001586                     L9:
 11528  001586  20F4               	addwfc	prodh,w,c
 11529  001588  6EDA               	movwf	fsr2h,c
 11530  00158A  0102               	movlb	2	; () banked
 11531  00158C  92DF               	bcf	indf2,1,c
 11532                           
 11533                           ; BSR set to: 2
 11534                           ;usb_device.c: 2932: }
 11535                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11536                           
 11537                           ; BSR set to: 2
 11538  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11539  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11540  001596  0E3B               	movlw	59
 11541  001598  16DF               	andwf	indf2,f,c
 11542                           
 11543                           ; BSR set to: 2
 11544                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11545  00159A  0E00               	movlw	0
 11546  00159C  0100               	movlb	0	; () banked
 11547  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11548  0015A0  0E05               	movlw	5
 11549  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11550  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11551  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11552  0015AC  0E00               	movlw	0
 11553  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11554  0015B0  0E02               	movlw	2
 11555  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11556  0015B4  EC6E  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11557                           
 11558                           ;usb_device.c: 2938: }
 11559  0015B8  D006               	goto	l1843
 11560  0015BA                     l1838:
 11561                           
 11562                           ;usb_device.c: 2939: else
 11563                           ;usb_device.c: 2940: {
 11564                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11565  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11566  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11567  0015C2  0E3B               	movlw	59
 11568  0015C4  16DF               	andwf	indf2,f,c
 11569  0015C6                     l1843:
 11570                           
 11571                           ;usb_device.c: 2943: }
 11572                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11573  0015C6  0104               	movlb	4	; () banked
 11574  0015C8  5134               	movf	52,w,b	;volatile
 11575  0015CA  0B0F               	andlw	15
 11576  0015CC  0100               	movlb	0	; () banked
 11577  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11578  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11579  0015D2  0D01               	mullw	1
 11580  0015D4  0E26               	movlw	38
 11581  0015D6  24F3               	addwf	prodl,w,c
 11582  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11583  0015DA  0E0F               	movlw	15
 11584  0015DC  20F4               	addwfc	prodh,w,c
 11585  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11586                           
 11587                           ; BSR set to: 0
 11588                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11589  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11590  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11591  0015E8  0EFE               	movlw	254
 11592  0015EA  16DF               	andwf	indf2,f,c
 11593                           
 11594                           ; BSR set to: 0
 11595  0015EC  0012               	return	
 11596  0015EE                     __end_of_USBStdFeatureReqHandler:
 11597                           	opt stack 0
 11598                           tosu	equ	0xFFF
 11599                           tosh	equ	0xFFE
 11600                           tosl	equ	0xFFD
 11601                           pclath	equ	0xFFA
 11602                           tblptru	equ	0xFF8
 11603                           tblptrh	equ	0xFF7
 11604                           tblptrl	equ	0xFF6
 11605                           tablat	equ	0xFF5
 11606                           prodh	equ	0xFF4
 11607                           prodl	equ	0xFF3
 11608                           intcon	equ	0xFF2
 11609                           intcon2	equ	0xFF1
 11610                           intcon3	equ	0xFF0
 11611                           indf0	equ	0xFEF
 11612                           postinc0	equ	0xFEE
 11613                           plusw0	equ	0xFEB
 11614                           fsr0h	equ	0xFEA
 11615                           fsr0l	equ	0xFE9
 11616                           wreg	equ	0xFE8
 11617                           postinc1	equ	0xFE6
 11618                           postdec1	equ	0xFE5
 11619                           fsr1h	equ	0xFE2
 11620                           fsr1l	equ	0xFE1
 11621                           indf2	equ	0xFDF
 11622                           postinc2	equ	0xFDE
 11623                           postdec2	equ	0xFDD
 11624                           plusw2	equ	0xFDB
 11625                           fsr2h	equ	0xFDA
 11626                           fsr2l	equ	0xFD9
 11627                           status	equ	0xFD8
 11628                           
 11629 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11630 ;; Defined at:
 11631 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;  event           2   41[BANK0 ] enum E8362
 11634 ;;  pdata           2   43[BANK0 ] PTR void 
 11635 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11636 ;;  size            2   45[BANK0 ] unsigned int 
 11637 ;; Auto vars:     Size  Location     Type
 11638 ;;		None
 11639 ;; Return value:  Size  Location     Type
 11640 ;;                  1    wreg      unsigned char 
 11641 ;; Registers used:
 11642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11643 ;; Tracked objects:
 11644 ;;		On entry : 0/0
 11645 ;;		On exit  : 0/0
 11646 ;;		Unchanged: 0/0
 11647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11648 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11650 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11651 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11652 ;;Total ram usage:        8 bytes
 11653 ;; Hardware stack levels used:    1
 11654 ;; Hardware stack levels required when called:   14
 11655 ;; This function calls:
 11656 ;;		_CDCInitEP
 11657 ;;		_USBCheckCDCRequest
 11658 ;; This function is called by:
 11659 ;;		_USBDeviceTasks
 11660 ;;		_USBStdSetCfgHandler
 11661 ;;		_USBSuspend
 11662 ;;		_USBWakeFromSuspend
 11663 ;;		_USBCtrlTrfSetupHandler
 11664 ;;		_USBCheckStdRequest
 11665 ;;		_USBStdFeatureReqHandler
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           	psect	text44
 11670  0054DC                     __ptext44:
 11671                           	opt stack 0
 11672  0054DC                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11673                           	opt stack 12
 11674                           
 11675                           ;usb_device_mgr.c: 106: switch( (int) event )
 11676                           
 11677                           ;incstack = 0
 11678  0054DC  D006               	goto	l1997
 11679  0054DE                     
 11680                           ;usb_device_mgr.c: 134: CDCInitEP();
 11681  0054DE  EC04  F029         	call	_CDCInitEP	;wreg free
 11682                           
 11683                           ;usb_device_mgr.c: 142: break;
 11684                           
 11685                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11686                           
 11687                           ;usb_device_mgr.c: 139: break;
 11688  0054E2  0012               	return	
 11689  0054E4                     
 11690                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11691  0054E4  EC92  F021         	call	_USBCheckCDCRequest	;wreg free
 11692                           
 11693                           ;usb_device_mgr.c: 163: }
 11694                           
 11695                           ;usb_device_mgr.c: 162: break;
 11696                           
 11697                           ;usb_device_mgr.c: 161: default:
 11698                           
 11699                           ;usb_device_mgr.c: 159: break;
 11700                           
 11701                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11702                           
 11703                           ;usb_device_mgr.c: 156: break;
 11704                           
 11705                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11706                           
 11707                           ;usb_device_mgr.c: 153: break;
 11708  0054E8  0012               	return	
 11709  0054EA                     l1997:
 11710  0054EA  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11711  0054EE  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11712                           
 11713                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11714                           ; Switch size 1, requested type "space"
 11715                           ; Number of cases is 2, Range of values is 0 to 127
 11716                           ; switch strategies available:
 11717                           ; Name         Instructions Cycles
 11718                           ; simple_byte            7     4 (average)
 11719                           ;	Chosen strategy is simple_byte
 11720  0054F2  0100               	movlb	0	; () banked
 11721  0054F4  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11722  0054F6  0A00               	xorlw	0	; case 0
 11723  0054F8  B4D8               	btfsc	status,2,c
 11724  0054FA  D004               	goto	l16328
 11725  0054FC  0A7F               	xorlw	127	; case 127
 11726  0054FE  A4D8               	btfss	status,2,c
 11727  005500  0012               	return	
 11728  005502  D018               	goto	l16330
 11729  005504                     l16328:
 11730                           
 11731                           ; BSR set to: 0
 11732                           ; Switch size 1, requested type "space"
 11733                           ; Number of cases is 8, Range of values is 1 to 117
 11734                           ; switch strategies available:
 11735                           ; Name         Instructions Cycles
 11736                           ; simple_byte           25    13 (average)
 11737                           ;	Chosen strategy is simple_byte
 11738  005504  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11739  005506  0A01               	xorlw	1	; case 1
 11740  005508  B4D8               	btfsc	status,2,c
 11741  00550A  D7E9               	goto	l2003
 11742  00550C  0A03               	xorlw	3	; case 2
 11743  00550E  B4D8               	btfsc	status,2,c
 11744  005510  0012               	return	
 11745  005512  0A01               	xorlw	1	; case 3
 11746  005514  B4D8               	btfsc	status,2,c
 11747  005516  D7E6               	goto	l2005
 11748  005518  0A06               	xorlw	6	; case 5
 11749  00551A  B4D8               	btfsc	status,2,c
 11750  00551C  0012               	return	
 11751  00551E  0A77               	xorlw	119	; case 114
 11752  005520  B4D8               	btfsc	status,2,c
 11753  005522  0012               	return	
 11754  005524  0A01               	xorlw	1	; case 115
 11755  005526  B4D8               	btfsc	status,2,c
 11756  005528  0012               	return	
 11757  00552A  0A07               	xorlw	7	; case 116
 11758  00552C  B4D8               	btfsc	status,2,c
 11759  00552E  0012               	return	
 11760  005530  0A01               	xorlw	1	; case 117
 11761  005532  0012               	return	
 11762  005534                     l16330:
 11763                           
 11764                           ; BSR set to: 0
 11765                           ; Switch size 1, requested type "space"
 11766                           ; Number of cases is 1, Range of values is 255 to 255
 11767                           ; switch strategies available:
 11768                           ; Name         Instructions Cycles
 11769                           ; simple_byte            4     3 (average)
 11770                           ;	Chosen strategy is simple_byte
 11771  005534  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11772  005536  0AFF               	xorlw	255	; case 255
 11773  005538  0012               	return	
 11774  00553A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11775                           	opt stack 0
 11776                           tosu	equ	0xFFF
 11777                           tosh	equ	0xFFE
 11778                           tosl	equ	0xFFD
 11779                           pclath	equ	0xFFA
 11780                           tblptru	equ	0xFF8
 11781                           tblptrh	equ	0xFF7
 11782                           tblptrl	equ	0xFF6
 11783                           tablat	equ	0xFF5
 11784                           prodh	equ	0xFF4
 11785                           prodl	equ	0xFF3
 11786                           intcon	equ	0xFF2
 11787                           intcon2	equ	0xFF1
 11788                           intcon3	equ	0xFF0
 11789                           indf0	equ	0xFEF
 11790                           postinc0	equ	0xFEE
 11791                           plusw0	equ	0xFEB
 11792                           fsr0h	equ	0xFEA
 11793                           fsr0l	equ	0xFE9
 11794                           wreg	equ	0xFE8
 11795                           postinc1	equ	0xFE6
 11796                           postdec1	equ	0xFE5
 11797                           fsr1h	equ	0xFE2
 11798                           fsr1l	equ	0xFE1
 11799                           indf2	equ	0xFDF
 11800                           postinc2	equ	0xFDE
 11801                           postdec2	equ	0xFDD
 11802                           plusw2	equ	0xFDB
 11803                           fsr2h	equ	0xFDA
 11804                           fsr2l	equ	0xFD9
 11805                           status	equ	0xFD8
 11806                           
 11807 ;; *************** function _USBCheckCDCRequest *****************
 11808 ;; Defined at:
 11809 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;		None
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;		None
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  1    wreg      void 
 11816 ;; Registers used:
 11817 ;;		wreg, status,2, status,0
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11827 ;;Total ram usage:        0 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:   11
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837                           	psect	text45
 11838  004324                     __ptext45:
 11839                           	opt stack 0
 11840  004324                     _USBCheckCDCRequest:
 11841                           	opt stack 14
 11842                           
 11843                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11844                           
 11845                           ;incstack = 0
 11846  004324  0104               	movlb	4	; () banked
 11847  004326  5130               	movf	48,w,b	;volatile
 11848  004328  0B1F               	andlw	31
 11849  00432A  06E8               	decf	wreg,f,c
 11850  00432C  A4D8               	btfss	status,2,c
 11851  00432E  0012               	return	
 11852                           
 11853                           ; BSR set to: 4
 11854                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11855                           
 11856                           ; BSR set to: 4
 11857                           
 11858                           ; BSR set to: 4
 11859  004330  3930               	swapf	48,w,b	;volatile
 11860  004332  32E8               	rrcf	wreg,f,c
 11861  004334  0B03               	andlw	3
 11862  004336  06E8               	decf	wreg,f,c
 11863  004338  A4D8               	btfss	status,2,c
 11864  00433A  0012               	return	
 11865                           
 11866                           ; BSR set to: 4
 11867                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11868                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11869                           
 11870                           ; BSR set to: 4
 11871                           
 11872                           ; BSR set to: 4
 11873  00433C  5134               	movf	52,w,b	;volatile
 11874  00433E  B4D8               	btfsc	status,2,c
 11875  004340  D037               	goto	l1899
 11876                           
 11877                           ; BSR set to: 4
 11878  004342  0534               	decf	52,w,b	;volatile
 11879  004344  A4D8               	btfss	status,2,c
 11880  004346  0012               	return	
 11881  004348  D033               	goto	l1899
 11882  00434A                     
 11883                           ; BSR set to: 4
 11884                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11885                           
 11886                           ; BSR set to: 4
 11887  00434A  0E6D               	movlw	low _dummy_encapsulated_cmd_response
 11888  00434C  0100               	movlb	0	; () banked
 11889  00434E  6FB0               	movwf	_inPipes& (0+255),b
 11890  004350  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11891  004352  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11895  004354  0E00               	movlw	0
 11896  004356  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11897  004358  0E08               	movlw	8
 11898  00435A  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11902  00435C  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11903                           
 11904                           ; BSR set to: 0
 11905                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11906  00435E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11907                           
 11908                           ;usb_device_cdc.c: 178: break;
 11909  004360  0012               	return	
 11910  004362                     
 11911                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11912                           
 11913                           ; BSR set to: 0
 11914  004362  0E6D               	movlw	low _dummy_encapsulated_cmd_response
 11915  004364  0100               	movlb	0	; () banked
 11916  004366  6FB0               	movwf	_inPipes& (0+255),b
 11917  004368  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11918  00436A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11919                           
 11920                           ; BSR set to: 0
 11921                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11922  00436C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11923                           
 11924                           ;usb_device_cdc.c: 183: break;
 11925  00436E  0012               	return	
 11926  004370                     l1903:
 11927                           
 11928                           ; BSR set to: 4
 11929                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11930  004370  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11931  004374  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11932                           
 11933                           ; BSR set to: 4
 11934                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11935  004378  0E75               	movlw	low _line_coding
 11936  00437A  0101               	movlb	1	; () banked
 11937  00437C  6FC9               	movwf	_outPipes& (0+255),b
 11938  00437E  0E03               	movlw	high _line_coding
 11939  004380  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11940                           
 11941                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11942  004382  0E00               	movlw	0
 11943  004384  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11944  004386  0E00               	movlw	0
 11945  004388  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11946                           
 11947                           ; BSR set to: 1
 11948                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11949  00438A  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11950                           
 11951                           ;usb_device_cdc.c: 192: break;
 11952  00438C  0012               	return	
 11953  00438E                     
 11954                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11955                           
 11956                           ; BSR set to: 1
 11957  00438E  0E75               	movlw	low _line_coding
 11958  004390  0100               	movlb	0	; () banked
 11959  004392  6FB0               	movwf	_inPipes& (0+255),b
 11960  004394  0E03               	movlw	high _line_coding
 11961  004396  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11962                           
 11963                           ; BSR set to: 0
 11964  004398  0E00               	movlw	0
 11965  00439A  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11966  00439C  0E07               	movlw	7
 11967  00439E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11968                           
 11969                           ; BSR set to: 0
 11970  0043A0  0EC1               	movlw	193
 11971  0043A2  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11972                           
 11973                           ;usb_device_cdc.c: 199: break;
 11974  0043A4  0012               	return	
 11975  0043A6                     l1905:
 11976                           
 11977                           ; BSR set to: 4
 11978                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11979  0043A6  C432 F1DF          	movff	1074,_control_signal_bitmap	;volatile
 11980                           
 11981                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11982  0043AA  0100               	movlb	0	; () banked
 11983  0043AC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11984                           
 11985                           ; BSR set to: 0
 11986                           ;usb_device_cdc.c: 261: }
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;usb_device_cdc.c: 260: break;
 11990                           
 11991                           ;usb_device_cdc.c: 259: default:
 11992                           
 11993                           ;usb_device_cdc.c: 235: break;
 11994  0043AE  0012               	return	
 11995  0043B0                     l1899:
 11996                           
 11997                           ; BSR set to: 0
 11998  0043B0  0104               	movlb	4	; () banked
 11999  0043B2  5131               	movf	49,w,b	;volatile
 12000                           
 12001                           ; Switch size 1, requested type "space"
 12002                           ; Number of cases is 5, Range of values is 0 to 34
 12003                           ; switch strategies available:
 12004                           ; Name         Instructions Cycles
 12005                           ; simple_byte           16     9 (average)
 12006                           ;	Chosen strategy is simple_byte
 12007  0043B4  0A00               	xorlw	0	; case 0
 12008  0043B6  B4D8               	btfsc	status,2,c
 12009  0043B8  D7C8               	goto	l1900
 12010  0043BA  0A01               	xorlw	1	; case 1
 12011  0043BC  B4D8               	btfsc	status,2,c
 12012  0043BE  D7D1               	goto	l1902
 12013  0043C0  0A21               	xorlw	33	; case 32
 12014  0043C2  B4D8               	btfsc	status,2,c
 12015  0043C4  D7D5               	goto	l1903
 12016  0043C6  0A01               	xorlw	1	; case 33
 12017  0043C8  B4D8               	btfsc	status,2,c
 12018  0043CA  D7E1               	goto	l1904
 12019  0043CC  0A03               	xorlw	3	; case 34
 12020  0043CE  A4D8               	btfss	status,2,c
 12021  0043D0  0012               	return	
 12022  0043D2  D7E9               	goto	l1905
 12023  0043D4                     __end_of_USBCheckCDCRequest:
 12024                           	opt stack 0
 12025                           tosu	equ	0xFFF
 12026                           tosh	equ	0xFFE
 12027                           tosl	equ	0xFFD
 12028                           pclath	equ	0xFFA
 12029                           tblptru	equ	0xFF8
 12030                           tblptrh	equ	0xFF7
 12031                           tblptrl	equ	0xFF6
 12032                           tablat	equ	0xFF5
 12033                           prodh	equ	0xFF4
 12034                           prodl	equ	0xFF3
 12035                           intcon	equ	0xFF2
 12036                           intcon2	equ	0xFF1
 12037                           intcon3	equ	0xFF0
 12038                           indf0	equ	0xFEF
 12039                           postinc0	equ	0xFEE
 12040                           plusw0	equ	0xFEB
 12041                           fsr0h	equ	0xFEA
 12042                           fsr0l	equ	0xFE9
 12043                           wreg	equ	0xFE8
 12044                           postinc1	equ	0xFE6
 12045                           postdec1	equ	0xFE5
 12046                           fsr1h	equ	0xFE2
 12047                           fsr1l	equ	0xFE1
 12048                           indf2	equ	0xFDF
 12049                           postinc2	equ	0xFDE
 12050                           postdec2	equ	0xFDD
 12051                           plusw2	equ	0xFDB
 12052                           fsr2h	equ	0xFDA
 12053                           fsr2l	equ	0xFD9
 12054                           status	equ	0xFD8
 12055                           
 12056 ;; *************** function _CDCInitEP *****************
 12057 ;; Defined at:
 12058 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;		None
 12061 ;; Auto vars:     Size  Location     Type
 12062 ;;		None
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  1    wreg      void 
 12065 ;; Registers used:
 12066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12067 ;; Tracked objects:
 12068 ;;		On entry : 0/0
 12069 ;;		On exit  : 0/0
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12076 ;;Total ram usage:        0 bytes
 12077 ;; Hardware stack levels used:    1
 12078 ;; Hardware stack levels required when called:   13
 12079 ;; This function calls:
 12080 ;;		_USBEnableEndpoint
 12081 ;;		_USBTransferOnePacket
 12082 ;; This function is called by:
 12083 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12084 ;; This function uses a non-reentrant model
 12085 ;;
 12086                           
 12087                           	psect	text46
 12088  005208                     __ptext46:
 12089                           	opt stack 0
 12090  005208                     _CDCInitEP:
 12091                           	opt stack 12
 12092                           
 12093                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 12094                           
 12095                           ;incstack = 0
 12096  005208  0E80               	movlw	128
 12097  00520A  0103               	movlb	3	; () banked
 12098  00520C  6F75               	movwf	_line_coding& (0+255),b
 12099  00520E  0E25               	movlw	37
 12100  005210  6F76               	movwf	(_line_coding+1)& (0+255),b
 12101  005212  0E00               	movlw	0
 12102  005214  6F77               	movwf	(_line_coding+2)& (0+255),b
 12103  005216  0E00               	movlw	0
 12104  005218  6F78               	movwf	(_line_coding+3)& (0+255),b
 12105                           
 12106                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 12107  00521A  0E00               	movlw	0
 12108  00521C  6F79               	movwf	(_line_coding+4)& (0+255),b
 12109                           
 12110                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 12111  00521E  0E00               	movlw	0
 12112  005220  6F7A               	movwf	(_line_coding+5)& (0+255),b
 12113                           
 12114                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 12115  005222  0E08               	movlw	8
 12116  005224  6F7B               	movwf	(_line_coding+6)& (0+255),b
 12117                           
 12118                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 12119  005226  0E00               	movlw	0
 12120  005228  0100               	movlb	0	; () banked
 12121  00522A  6FC6               	movwf	_cdc_rx_len& (0+255),b
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 12125  00522C  0E1A               	movlw	26
 12126  00522E  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12127  005230  0E01               	movlw	1
 12128  005232  ECB6  F02E         	call	_USBEnableEndpoint
 12129                           
 12130                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 12131  005236  0E1E               	movlw	30
 12132  005238  0100               	movlb	0	; () banked
 12133  00523A  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12134  00523C  0E02               	movlw	2
 12135  00523E  ECB6  F02E         	call	_USBEnableEndpoint
 12136                           
 12137                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12138  005242  0E00               	movlw	0
 12139  005244  0100               	movlb	0	; () banked
 12140  005246  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 12141  005248  0E00               	movlw	low _cdc_data_rx
 12142  00524A  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 12143  00524C  0E05               	movlw	high _cdc_data_rx
 12144  00524E  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12145  005250  0E40               	movlw	64
 12146  005252  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 12147  005254  0E02               	movlw	2
 12148  005256  ECDA  F020         	call	_USBTransferOnePacket
 12149  00525A  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12150  00525E  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12151                           
 12152                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 12153  005262  0E00               	movlw	0
 12154  005264  0101               	movlb	1	; () banked
 12155  005266  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 12156  005268  0E00               	movlw	0
 12157  00526A  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 12158                           
 12159                           ; BSR set to: 1
 12160                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 12161  00526C  0E00               	movlw	0
 12162  00526E  0100               	movlb	0	; () banked
 12163  005270  6FC5               	movwf	_cdc_trf_state& (0+255),b
 12164                           
 12165                           ; BSR set to: 0
 12166  005272  0012               	return		;funcret
 12167  005274                     __end_of_CDCInitEP:
 12168                           	opt stack 0
 12169                           tosu	equ	0xFFF
 12170                           tosh	equ	0xFFE
 12171                           tosl	equ	0xFFD
 12172                           pclath	equ	0xFFA
 12173                           tblptru	equ	0xFF8
 12174                           tblptrh	equ	0xFF7
 12175                           tblptrl	equ	0xFF6
 12176                           tablat	equ	0xFF5
 12177                           prodh	equ	0xFF4
 12178                           prodl	equ	0xFF3
 12179                           intcon	equ	0xFF2
 12180                           intcon2	equ	0xFF1
 12181                           intcon3	equ	0xFF0
 12182                           indf0	equ	0xFEF
 12183                           postinc0	equ	0xFEE
 12184                           plusw0	equ	0xFEB
 12185                           fsr0h	equ	0xFEA
 12186                           fsr0l	equ	0xFE9
 12187                           wreg	equ	0xFE8
 12188                           postinc1	equ	0xFE6
 12189                           postdec1	equ	0xFE5
 12190                           fsr1h	equ	0xFE2
 12191                           fsr1l	equ	0xFE1
 12192                           indf2	equ	0xFDF
 12193                           postinc2	equ	0xFDE
 12194                           postdec2	equ	0xFDD
 12195                           plusw2	equ	0xFDB
 12196                           fsr2h	equ	0xFDA
 12197                           fsr2l	equ	0xFD9
 12198                           status	equ	0xFD8
 12199                           
 12200 ;; *************** function _USBEnableEndpoint *****************
 12201 ;; Defined at:
 12202 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12203 ;; Parameters:    Size  Location     Type
 12204 ;;  ep              1    wreg     unsigned char 
 12205 ;;  options         1   37[BANK0 ] unsigned char 
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;  ep              1   40[BANK0 ] unsigned char 
 12208 ;;  p               2   38[BANK0 ] PTR unsigned char 
 12209 ;;		 -> UEP0(1), 
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  1    wreg      void 
 12212 ;; Registers used:
 12213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12219 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12220 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12222 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12223 ;;Total ram usage:        4 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:   12
 12226 ;; This function calls:
 12227 ;;		_USBConfigureEndpoint
 12228 ;; This function is called by:
 12229 ;;		_CDCInitEP
 12230 ;; This function uses a non-reentrant model
 12231 ;;
 12232                           
 12233                           	psect	text47
 12234  005D6C                     __ptext47:
 12235                           	opt stack 0
 12236  005D6C                     _USBEnableEndpoint:
 12237                           	opt stack 12
 12238                           
 12239                           ; BSR set to: 0
 12240                           ;incstack = 0
 12241                           ;USBEnableEndpoint@ep stored from wreg
 12242  005D6C  0100               	movlb	0	; () banked
 12243  005D6E  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 12244                           
 12245                           ;usb_device.c: 898: unsigned char* p;
 12246                           ;usb_device.c: 902: if(options & 0x04)
 12247  005D70  0100               	movlb	0	; () banked
 12248  005D72  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 12249  005D74  D005               	goto	l1640
 12250                           
 12251                           ; BSR set to: 0
 12252                           ;usb_device.c: 903: {
 12253                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 12254  005D76  0E00               	movlw	0
 12255  005D78  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12256  005D7A  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12257  005D7C  EC2D  F024         	call	_USBConfigureEndpoint
 12258  005D80                     l1640:
 12259                           
 12260                           ;usb_device.c: 905: }
 12261                           ;usb_device.c: 906: if(options & 0x02)
 12262  005D80  0100               	movlb	0	; () banked
 12263  005D82  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 12264  005D84  D005               	goto	l1641
 12265                           
 12266                           ; BSR set to: 0
 12267                           ;usb_device.c: 907: {
 12268                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 12269  005D86  0E01               	movlw	1
 12270  005D88  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12271  005D8A  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12272  005D8C  EC2D  F024         	call	_USBConfigureEndpoint
 12273  005D90                     l1641:
 12274                           
 12275                           ;usb_device.c: 909: }
 12276                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 12277  005D90  0100               	movlb	0	; () banked
 12278  005D92  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12279  005D94  0D01               	mullw	1
 12280  005D96  0E26               	movlw	38
 12281  005D98  24F3               	addwf	prodl,w,c
 12282  005D9A  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 12283  005D9C  0E0F               	movlw	15
 12284  005D9E  20F4               	addwfc	prodh,w,c
 12285  005DA0  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 12286                           
 12287                           ; BSR set to: 0
 12288                           ;usb_device.c: 919: *p = options;
 12289  005DA2  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 12290  005DA6  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 12291  005DAA  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 12292                           
 12293                           ; BSR set to: 0
 12294  005DAE  0012               	return		;funcret
 12295  005DB0                     __end_of_USBEnableEndpoint:
 12296                           	opt stack 0
 12297                           tosu	equ	0xFFF
 12298                           tosh	equ	0xFFE
 12299                           tosl	equ	0xFFD
 12300                           pclath	equ	0xFFA
 12301                           tblptru	equ	0xFF8
 12302                           tblptrh	equ	0xFF7
 12303                           tblptrl	equ	0xFF6
 12304                           tablat	equ	0xFF5
 12305                           prodh	equ	0xFF4
 12306                           prodl	equ	0xFF3
 12307                           intcon	equ	0xFF2
 12308                           intcon2	equ	0xFF1
 12309                           intcon3	equ	0xFF0
 12310                           indf0	equ	0xFEF
 12311                           postinc0	equ	0xFEE
 12312                           plusw0	equ	0xFEB
 12313                           fsr0h	equ	0xFEA
 12314                           fsr0l	equ	0xFE9
 12315                           wreg	equ	0xFE8
 12316                           postinc1	equ	0xFE6
 12317                           postdec1	equ	0xFE5
 12318                           fsr1h	equ	0xFE2
 12319                           fsr1l	equ	0xFE1
 12320                           indf2	equ	0xFDF
 12321                           postinc2	equ	0xFDE
 12322                           postdec2	equ	0xFDD
 12323                           plusw2	equ	0xFDB
 12324                           fsr2h	equ	0xFDA
 12325                           fsr2l	equ	0xFD9
 12326                           status	equ	0xFD8
 12327                           
 12328 ;; *************** function _USBConfigureEndpoint *****************
 12329 ;; Defined at:
 12330 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12331 ;; Parameters:    Size  Location     Type
 12332 ;;  EPNum           1    wreg     unsigned char 
 12333 ;;  direction       1   29[BANK0 ] unsigned char 
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12336 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12337 ;;		 -> BDT(48), 
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  1    wreg      void 
 12340 ;; Registers used:
 12341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12347 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12348 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12349 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12350 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12351 ;;Total ram usage:        8 bytes
 12352 ;; Hardware stack levels used:    1
 12353 ;; Hardware stack levels required when called:   11
 12354 ;; This function calls:
 12355 ;;		Nothing
 12356 ;; This function is called by:
 12357 ;;		_USBEnableEndpoint
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361                           	psect	text48
 12362  00485A                     __ptext48:
 12363                           	opt stack 0
 12364  00485A                     _USBConfigureEndpoint:
 12365                           	opt stack 12
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;incstack = 0
 12369                           ;USBConfigureEndpoint@EPNum stored from wreg
 12370  00485A  0100               	movlb	0	; () banked
 12371  00485C  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12372                           
 12373                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12374                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12375  00485E  0E00               	movlw	0
 12376  004860  0100               	movlb	0	; () banked
 12377  004862  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12378  004864  0E04               	movlw	4
 12379  004866  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12383  004868  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12384  00486A  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12385  00486C  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12386  00486E  90D8               	bcf	status,0,c
 12387  004870  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12388  004872  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12389  004874  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12390  004876  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12391  004878  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12392  00487A  90D8               	bcf	status,0,c
 12393  00487C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12394  00487E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12395  004880  90D8               	bcf	status,0,c
 12396  004882  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12397  004884  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12398  004886  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12399  004888  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12400  00488A  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12401  00488C  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12402  00488E  90D8               	bcf	status,0,c
 12403  004890  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12404  004892  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12405  004894  90D8               	bcf	status,0,c
 12406  004896  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12407  004898  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12408  00489A  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12409  00489C  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12410  00489E  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12411  0048A0  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12412                           
 12413                           ; BSR set to: 0
 12414                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12415  0048A2  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12416  0048A6  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12417  0048AA  9EDF               	bcf	indf2,7,c
 12418                           
 12419                           ; BSR set to: 0
 12420                           ;usb_device.c: 1575: if(direction == 0)
 12421  0048AC  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12422  0048AE  A4D8               	btfss	status,2,c
 12423  0048B0  D007               	goto	l1676
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;usb_device.c: 1576: {
 12427                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12428  0048B2  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12429  0048B4  0D02               	mullw	2
 12430  0048B6  0E0E               	movlw	low _pBDTEntryOut
 12431  0048B8  24F3               	addwf	prodl,w,c
 12432  0048BA  6ED9               	movwf	fsr2l,c
 12433  0048BC  0E03               	movlw	high _pBDTEntryOut
 12434  0048BE  D006               	goto	L10
 12435  0048C0                     l1676:
 12436                           
 12437                           ; BSR set to: 0
 12438                           ;usb_device.c: 1579: else
 12439                           ;usb_device.c: 1580: {
 12440                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12441                           
 12442                           ; BSR set to: 0
 12443  0048C0  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12444  0048C2  0D02               	mullw	2
 12445  0048C4  0EB6               	movlw	low _pBDTEntryIn
 12446  0048C6  24F3               	addwf	prodl,w,c
 12447  0048C8  6ED9               	movwf	fsr2l,c
 12448  0048CA  0E00               	movlw	high _pBDTEntryIn
 12449  0048CC                     L10:
 12450  0048CC  20F4               	addwfc	prodh,w,c
 12451  0048CE  6EDA               	movwf	fsr2h,c
 12452  0048D0  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12453  0048D4  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12454                           
 12455                           ; BSR set to: 0
 12456                           ;usb_device.c: 1582: }
 12457                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12458                           
 12459                           ; BSR set to: 0
 12460  0048D8  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12461  0048DC  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12462  0048E0  9CDF               	bcf	indf2,6,c
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12466  0048E2  EE20 F004          	lfsr	2,4
 12467  0048E6  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12468  0048E8  26D9               	addwf	fsr2l,f,c
 12469  0048EA  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12470  0048EC  22DA               	addwfc	fsr2h,f,c
 12471  0048EE  8CDF               	bsf	indf2,6,c
 12472                           
 12473                           ; BSR set to: 0
 12474  0048F0  0012               	return		;funcret
 12475  0048F2                     __end_of_USBConfigureEndpoint:
 12476                           	opt stack 0
 12477                           tosu	equ	0xFFF
 12478                           tosh	equ	0xFFE
 12479                           tosl	equ	0xFFD
 12480                           pclath	equ	0xFFA
 12481                           tblptru	equ	0xFF8
 12482                           tblptrh	equ	0xFF7
 12483                           tblptrl	equ	0xFF6
 12484                           tablat	equ	0xFF5
 12485                           prodh	equ	0xFF4
 12486                           prodl	equ	0xFF3
 12487                           intcon	equ	0xFF2
 12488                           intcon2	equ	0xFF1
 12489                           intcon3	equ	0xFF0
 12490                           indf0	equ	0xFEF
 12491                           postinc0	equ	0xFEE
 12492                           plusw0	equ	0xFEB
 12493                           fsr0h	equ	0xFEA
 12494                           fsr0l	equ	0xFE9
 12495                           wreg	equ	0xFE8
 12496                           postinc1	equ	0xFE6
 12497                           postdec1	equ	0xFE5
 12498                           fsr1h	equ	0xFE2
 12499                           fsr1l	equ	0xFE1
 12500                           indf2	equ	0xFDF
 12501                           postinc2	equ	0xFDE
 12502                           postdec2	equ	0xFDD
 12503                           plusw2	equ	0xFDB
 12504                           fsr2h	equ	0xFDA
 12505                           fsr2l	equ	0xFD9
 12506                           status	equ	0xFD8
 12507                           
 12508 ;; *************** function _USBCtrlTrfOutHandler *****************
 12509 ;; Defined at:
 12510 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12511 ;; Parameters:    Size  Location     Type
 12512 ;;		None
 12513 ;; Auto vars:     Size  Location     Type
 12514 ;;		None
 12515 ;; Return value:  Size  Location     Type
 12516 ;;                  1    wreg      void 
 12517 ;; Registers used:
 12518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12519 ;; Tracked objects:
 12520 ;;		On entry : 0/0
 12521 ;;		On exit  : 0/0
 12522 ;;		Unchanged: 0/0
 12523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12528 ;;Total ram usage:        0 bytes
 12529 ;; Hardware stack levels used:    1
 12530 ;; Hardware stack levels required when called:   13
 12531 ;; This function calls:
 12532 ;;		_USBCtrlTrfRxService
 12533 ;; This function is called by:
 12534 ;;		_USBCtrlEPService
 12535 ;; This function uses a non-reentrant model
 12536 ;;
 12537                           
 12538                           	psect	text49
 12539  005348                     __ptext49:
 12540                           	opt stack 0
 12541  005348                     _USBCtrlTrfOutHandler:
 12542                           	opt stack 12
 12543                           
 12544                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;incstack = 0
 12548  005348  0E02               	movlw	2
 12549  00534A  0100               	movlb	0	; () banked
 12550  00534C  19CB               	xorwf	_controlTransferState& (0+255),w,b
 12551  00534E  A4D8               	btfss	status,2,c
 12552  005350  D003               	goto	l1782
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;usb_device.c: 2558: {
 12556                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12557  005352  EC4F  F018         	call	_USBCtrlTrfRxService	;wreg free
 12558                           
 12559                           ;usb_device.c: 2560: }
 12560  005356  0012               	return	
 12561  005358                     l1782:
 12562                           
 12563                           ;usb_device.c: 2561: else
 12564                           ;usb_device.c: 2562: {
 12565                           ;usb_device.c: 2565: controlTransferState = 0;
 12566  005358  0E00               	movlw	0
 12567  00535A  0100               	movlb	0	; () banked
 12568  00535C  6FCB               	movwf	_controlTransferState& (0+255),b
 12569                           
 12570                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12571  00535E  0101               	movlb	1	; () banked
 12572  005360  51E2               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12573  005362  A4D8               	btfss	status,2,c
 12574  005364  D020               	goto	l1784
 12575                           
 12576                           ; BSR set to: 1
 12577                           ;usb_device.c: 2573: {
 12578                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12579  005366  0100               	movlb	0	; () banked
 12580  005368  EE20 F001          	lfsr	2,1
 12581  00536C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12582  00536E  26D9               	addwf	fsr2l,f,c
 12583  005370  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12584  005372  22DA               	addwfc	fsr2h,f,c
 12585  005374  0E08               	movlw	8
 12586  005376  6EDF               	movwf	indf2,c
 12587                           
 12588                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12589  005378  EE20 F002          	lfsr	2,2
 12590  00537C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12591  00537E  26D9               	addwf	fsr2l,f,c
 12592  005380  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12593  005382  22DA               	addwfc	fsr2h,f,c
 12594  005384  0E30               	movlw	48
 12595  005386  6EDE               	movwf	postinc2,c
 12596  005388  0E04               	movlw	4
 12597  00538A  6EDD               	movwf	postdec2,c
 12598                           
 12599                           ; BSR set to: 0
 12600                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12601  00538C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12602  005390  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12603  005394  0E0C               	movlw	12
 12604  005396  6EDF               	movwf	indf2,c
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12608  005398  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12609  00539C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12610  0053A0  0E00               	movlw	0
 12611  0053A2  8EDB               	bsf	plusw2,7,c
 12612                           
 12613                           ;usb_device.c: 2578: }
 12614  0053A4  0012               	return	
 12615  0053A6                     l1784:
 12616                           
 12617                           ;usb_device.c: 2579: else
 12618                           ;usb_device.c: 2580: {
 12619                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12620                           
 12621                           ; BSR set to: 0
 12622  0053A6  0E00               	movlw	0
 12623  0053A8  0101               	movlb	1	; () banked
 12624  0053AA  6FE2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12625                           
 12626                           ; BSR set to: 1
 12627  0053AC  0012               	return	
 12628  0053AE                     __end_of_USBCtrlTrfOutHandler:
 12629                           	opt stack 0
 12630                           tosu	equ	0xFFF
 12631                           tosh	equ	0xFFE
 12632                           tosl	equ	0xFFD
 12633                           pclath	equ	0xFFA
 12634                           tblptru	equ	0xFF8
 12635                           tblptrh	equ	0xFF7
 12636                           tblptrl	equ	0xFF6
 12637                           tablat	equ	0xFF5
 12638                           prodh	equ	0xFF4
 12639                           prodl	equ	0xFF3
 12640                           intcon	equ	0xFF2
 12641                           intcon2	equ	0xFF1
 12642                           intcon3	equ	0xFF0
 12643                           indf0	equ	0xFEF
 12644                           postinc0	equ	0xFEE
 12645                           plusw0	equ	0xFEB
 12646                           fsr0h	equ	0xFEA
 12647                           fsr0l	equ	0xFE9
 12648                           wreg	equ	0xFE8
 12649                           postinc1	equ	0xFE6
 12650                           postdec1	equ	0xFE5
 12651                           fsr1h	equ	0xFE2
 12652                           fsr1l	equ	0xFE1
 12653                           indf2	equ	0xFDF
 12654                           postinc2	equ	0xFDE
 12655                           postdec2	equ	0xFDD
 12656                           plusw2	equ	0xFDB
 12657                           fsr2h	equ	0xFDA
 12658                           fsr2l	equ	0xFD9
 12659                           status	equ	0xFD8
 12660                           
 12661 ;; *************** function _USBCtrlTrfRxService *****************
 12662 ;; Defined at:
 12663 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12664 ;; Parameters:    Size  Location     Type
 12665 ;;		None
 12666 ;; Auto vars:     Size  Location     Type
 12667 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12668 ;;  i               1   29[BANK0 ] unsigned char 
 12669 ;; Return value:  Size  Location     Type
 12670 ;;                  1    wreg      void 
 12671 ;; Registers used:
 12672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12673 ;; Tracked objects:
 12674 ;;		On entry : 0/0
 12675 ;;		On exit  : 0/0
 12676 ;;		Unchanged: 0/0
 12677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12679 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12681 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12682 ;;Total ram usage:        2 bytes
 12683 ;; Hardware stack levels used:    1
 12684 ;; Hardware stack levels required when called:   12
 12685 ;; This function calls:
 12686 ;;		_USBCtrlEPAllowStatusStage
 12687 ;; This function is called by:
 12688 ;;		_USBCtrlTrfOutHandler
 12689 ;; This function uses a non-reentrant model
 12690 ;;
 12691                           
 12692                           	psect	text50
 12693  00309E                     __ptext50:
 12694                           	opt stack 0
 12695  00309E                     _USBCtrlTrfRxService:
 12696                           	opt stack 12
 12697                           
 12698                           ;usb_device.c: 1872: uint8_t byteToRead;
 12699                           ;usb_device.c: 1873: uint8_t i;
 12700                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12701                           
 12702                           ;incstack = 0
 12703  00309E  0100               	movlb	0	; () banked
 12704  0030A0  EE20 F001          	lfsr	2,1
 12705  0030A4  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12706  0030A6  26D9               	addwf	fsr2l,f,c
 12707  0030A8  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12708  0030AA  22DA               	addwfc	fsr2h,f,c
 12709  0030AC  50DF               	movf	indf2,w,c
 12710  0030AE  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12711                           
 12712                           ; BSR set to: 0
 12713                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12714  0030B0  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12715  0030B2  0101               	movlb	1	; () banked
 12716  0030B4  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12717  0030B6  0E00               	movlw	0
 12718  0030B8  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12719  0030BA  A0D8               	btfss	status,0,c
 12720                           
 12721                           ; BSR set to: 1
 12722                           ;usb_device.c: 1884: {
 12723                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12724  0030BC  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12725                           
 12726                           ; BSR set to: 1
 12727                           ;usb_device.c: 1886: }
 12728                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12729                           
 12730                           ; BSR set to: 1
 12731  0030C0  0100               	movlb	0	; () banked
 12732  0030C2  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12733  0030C4  0101               	movlb	1	; () banked
 12734  0030C6  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12735  0030C8  0E00               	movlw	0
 12736  0030CA  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12737                           
 12738                           ; BSR set to: 1
 12739                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12740  0030CC  0E00               	movlw	0
 12741  0030CE  0100               	movlb	0	; () banked
 12742  0030D0  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12743  0030D2  D013               	goto	l1710
 12744  0030D4                     
 12745                           ; BSR set to: 0
 12746                           ;usb_device.c: 1893: {
 12747                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12748                           
 12749                           ; BSR set to: 0
 12750  0030D4  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12751  0030D6  0D01               	mullw	1
 12752  0030D8  0E38               	movlw	56
 12753  0030DA  24F3               	addwf	prodl,w,c
 12754  0030DC  6ED9               	movwf	fsr2l,c
 12755  0030DE  0E04               	movlw	4
 12756  0030E0  20F4               	addwfc	prodh,w,c
 12757  0030E2  6EDA               	movwf	fsr2h,c
 12758  0030E4  C1C9  FFE1         	movff	_outPipes,fsr1l
 12759  0030E8  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12760  0030EC  CFDF FFE7          	movff	indf2,indf1
 12761                           
 12762                           ; BSR set to: 0
 12763  0030F0  0101               	movlb	1	; () banked
 12764  0030F2  4BC9               	infsnz	_outPipes& (0+255),f,b
 12765  0030F4  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12766                           
 12767                           ; BSR set to: 1
 12768  0030F6  0100               	movlb	0	; () banked
 12769  0030F8  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12770  0030FA                     l1710:
 12771                           
 12772                           ; BSR set to: 0
 12773                           
 12774                           ; BSR set to: 0
 12775  0030FA  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12776  0030FC  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12777  0030FE  A0D8               	btfss	status,0,c
 12778  003100  D7E9               	goto	l1711
 12779                           
 12780                           ; BSR set to: 0
 12781                           ;usb_device.c: 1895: }
 12782                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12783                           
 12784                           ; BSR set to: 0
 12785  003102  0101               	movlb	1	; () banked
 12786  003104  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12787  003106  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12788  003108  B4D8               	btfsc	status,2,c
 12789  00310A  D033               	goto	l1713
 12790                           
 12791                           ; BSR set to: 1
 12792                           ;usb_device.c: 1900: {
 12793                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12794  00310C  0100               	movlb	0	; () banked
 12795  00310E  EE20 F001          	lfsr	2,1
 12796  003112  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12797  003114  26D9               	addwf	fsr2l,f,c
 12798  003116  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12799  003118  22DA               	addwfc	fsr2h,f,c
 12800  00311A  0E08               	movlw	8
 12801  00311C  6EDF               	movwf	indf2,c
 12802                           
 12803                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12804  00311E  EE20 F002          	lfsr	2,2
 12805  003122  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12806  003124  26D9               	addwf	fsr2l,f,c
 12807  003126  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12808  003128  22DA               	addwfc	fsr2h,f,c
 12809  00312A  0E38               	movlw	56
 12810  00312C  6EDE               	movwf	postinc2,c
 12811  00312E  0E04               	movlw	4
 12812  003130  6EDD               	movwf	postdec2,c
 12813                           
 12814                           ; BSR set to: 0
 12815                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12816  003132  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12817  003136  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12818  00313A  BCDF               	btfsc	indf2,6,c
 12819  00313C  D00D               	goto	l1714
 12820                           
 12821                           ; BSR set to: 0
 12822                           ;usb_device.c: 1904: {
 12823                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12824  00313E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12825  003142  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12826  003146  0E48               	movlw	72
 12827  003148  6EDF               	movwf	indf2,c
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12831  00314A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12832  00314E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12833  003152  0E00               	movlw	0
 12834  003154  8EDB               	bsf	plusw2,7,c
 12835                           
 12836                           ;usb_device.c: 1907: }
 12837  003156  0012               	return	
 12838  003158                     l1714:
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;usb_device.c: 1908: else
 12842                           ;usb_device.c: 1909: {
 12843                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12844                           
 12845                           ; BSR set to: 0
 12846  003158  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12847  00315C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12848  003160  0E08               	movlw	8
 12849  003162  6EDF               	movwf	indf2,c
 12850                           
 12851                           ; BSR set to: 0
 12852                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12853  003164  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12854  003168  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12855  00316C  0E00               	movlw	0
 12856  00316E  8EDB               	bsf	plusw2,7,c
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;usb_device.c: 1912: }
 12860                           ;usb_device.c: 1913: }
 12861  003170  0012               	return	
 12862  003172                     l1713:
 12863                           
 12864                           ;usb_device.c: 1914: else
 12865                           ;usb_device.c: 1915: {
 12866                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12867                           
 12868                           ; BSR set to: 0
 12869  003172  0100               	movlb	0	; () banked
 12870  003174  EE20 F001          	lfsr	2,1
 12871  003178  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12872  00317A  26D9               	addwf	fsr2l,f,c
 12873  00317C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12874  00317E  22DA               	addwfc	fsr2h,f,c
 12875  003180  0E08               	movlw	8
 12876  003182  6EDF               	movwf	indf2,c
 12877                           
 12878                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12879  003184  EE20 F002          	lfsr	2,2
 12880  003188  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12881  00318A  26D9               	addwf	fsr2l,f,c
 12882  00318C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12883  00318E  22DA               	addwfc	fsr2h,f,c
 12884  003190  0E30               	movlw	48
 12885  003192  6EDE               	movwf	postinc2,c
 12886  003194  0E04               	movlw	4
 12887  003196  6EDD               	movwf	postdec2,c
 12888                           
 12889                           ; BSR set to: 0
 12890                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12891  003198  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12892  00319C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12893  0031A0  0E04               	movlw	4
 12894  0031A2  6EDF               	movwf	indf2,c
 12895                           
 12896                           ; BSR set to: 0
 12897                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12898  0031A4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12899  0031A8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12900  0031AC  0E00               	movlw	0
 12901  0031AE  8EDB               	bsf	plusw2,7,c
 12902                           
 12903                           ; BSR set to: 0
 12904                           ;usb_device.c: 1944: }
 12905                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12906                           
 12907                           ; BSR set to: 0
 12908  0031B0  0101               	movlb	1	; () banked
 12909  0031B2  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12910                           
 12911                           ; BSR set to: 1
 12912                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12913  0031B4  0100               	movlb	0	; () banked
 12914  0031B6  51C8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12915  0031B8  A4D8               	btfss	status,2,c
 12916  0031BA  0012               	return	
 12917                           
 12918                           ; BSR set to: 0
 12919                           ;usb_device.c: 1960: {
 12920                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12921  0031BC  EC20  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12922  0031C0  0012               	return	
 12923  0031C2                     __end_of_USBCtrlTrfRxService:
 12924                           	opt stack 0
 12925                           tosu	equ	0xFFF
 12926                           tosh	equ	0xFFE
 12927                           tosl	equ	0xFFD
 12928                           pclath	equ	0xFFA
 12929                           tblptru	equ	0xFF8
 12930                           tblptrh	equ	0xFF7
 12931                           tblptrl	equ	0xFF6
 12932                           tablat	equ	0xFF5
 12933                           prodh	equ	0xFF4
 12934                           prodl	equ	0xFF3
 12935                           intcon	equ	0xFF2
 12936                           intcon2	equ	0xFF1
 12937                           intcon3	equ	0xFF0
 12938                           indf0	equ	0xFEF
 12939                           postinc0	equ	0xFEE
 12940                           plusw0	equ	0xFEB
 12941                           fsr0h	equ	0xFEA
 12942                           fsr0l	equ	0xFE9
 12943                           wreg	equ	0xFE8
 12944                           indf1	equ	0xFE7
 12945                           postinc1	equ	0xFE6
 12946                           postdec1	equ	0xFE5
 12947                           fsr1h	equ	0xFE2
 12948                           fsr1l	equ	0xFE1
 12949                           indf2	equ	0xFDF
 12950                           postinc2	equ	0xFDE
 12951                           postdec2	equ	0xFDD
 12952                           plusw2	equ	0xFDB
 12953                           fsr2h	equ	0xFDA
 12954                           fsr2l	equ	0xFD9
 12955                           status	equ	0xFD8
 12956                           
 12957 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12958 ;; Defined at:
 12959 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12960 ;; Parameters:    Size  Location     Type
 12961 ;;		None
 12962 ;; Auto vars:     Size  Location     Type
 12963 ;;		None
 12964 ;; Return value:  Size  Location     Type
 12965 ;;                  1    wreg      void 
 12966 ;; Registers used:
 12967 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12968 ;; Tracked objects:
 12969 ;;		On entry : 0/0
 12970 ;;		On exit  : 0/0
 12971 ;;		Unchanged: 0/0
 12972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12977 ;;Total ram usage:        0 bytes
 12978 ;; Hardware stack levels used:    1
 12979 ;; Hardware stack levels required when called:   11
 12980 ;; This function calls:
 12981 ;;		Nothing
 12982 ;; This function is called by:
 12983 ;;		_USBDeviceTasks
 12984 ;;		_USBCtrlEPServiceComplete
 12985 ;;		_USBCtrlTrfRxService
 12986 ;; This function uses a non-reentrant model
 12987 ;;
 12988                           
 12989                           	psect	text51
 12990  003C40                     __ptext51:
 12991                           	opt stack 0
 12992  003C40                     _USBCtrlEPAllowStatusStage:
 12993                           	opt stack 12
 12994                           
 12995                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12996                           
 12997                           ;incstack = 0
 12998  003C40  0100               	movlb	0	; () banked
 12999  003C42  51C7               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 13000  003C44  A4D8               	btfss	status,2,c
 13001  003C46  0012               	return	
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;usb_device.c: 1442: {
 13005                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 13006  003C48  0E01               	movlw	1
 13007  003C4A  6FC7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13008                           
 13009                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 13010  003C4C  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 13011  003C4E  A4D8               	btfss	status,2,c
 13012  003C50  0012               	return	
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;usb_device.c: 1445: {
 13016                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 13017  003C52  0E01               	movlw	1
 13018  003C54  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;usb_device.c: 1450: if(controlTransferState == 2)
 13022  003C56  0E02               	movlw	2
 13023  003C58  19CB               	xorwf	_controlTransferState& (0+255),w,b
 13024  003C5A  A4D8               	btfss	status,2,c
 13025  003C5C  D015               	goto	l1664
 13026                           
 13027                           ; BSR set to: 0
 13028                           ;usb_device.c: 1451: {
 13029                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 13030  003C5E  EE20 F001          	lfsr	2,1
 13031  003C62  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13032  003C64  26D9               	addwf	fsr2l,f,c
 13033  003C66  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13034  003C68  22DA               	addwfc	fsr2h,f,c
 13035  003C6A  0E00               	movlw	0
 13036  003C6C  6EDF               	movwf	indf2,c
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13040  003C6E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13041  003C72  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13042  003C76  0E48               	movlw	72
 13043  003C78  6EDF               	movwf	indf2,c
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13047  003C7A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13048  003C7E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13049  003C82  0E00               	movlw	0
 13050  003C84  8EDB               	bsf	plusw2,7,c
 13051                           
 13052                           ;usb_device.c: 1455: }
 13053  003C86  0012               	return	
 13054  003C88                     l1664:
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 13058                           
 13059                           ; BSR set to: 0
 13060  003C88  05CB               	decf	_controlTransferState& (0+255),w,b
 13061  003C8A  A4D8               	btfss	status,2,c
 13062  003C8C  0012               	return	
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;usb_device.c: 1457: {
 13066                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 13067  003C8E  0E00               	movlw	0
 13068  003C90  0101               	movlb	1	; () banked
 13069  003C92  6FE2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13070                           
 13071                           ; BSR set to: 1
 13072                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 13073  003C94  0100               	movlb	0	; () banked
 13074  003C96  EE20 F001          	lfsr	2,1
 13075  003C9A  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13076  003C9C  26D9               	addwf	fsr2l,f,c
 13077  003C9E  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13078  003CA0  22DA               	addwfc	fsr2h,f,c
 13079  003CA2  0E08               	movlw	8
 13080  003CA4  6EDF               	movwf	indf2,c
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 13084  003CA6  EE20 F002          	lfsr	2,2
 13085  003CAA  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13086  003CAC  26D9               	addwf	fsr2l,f,c
 13087  003CAE  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13088  003CB0  22DA               	addwfc	fsr2h,f,c
 13089  003CB2  0E30               	movlw	48
 13090  003CB4  6EDE               	movwf	postinc2,c
 13091  003CB6  0E04               	movlw	4
 13092  003CB8  6EDD               	movwf	postdec2,c
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 13096  003CBA  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13097  003CBE  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13098  003CC2  0E04               	movlw	4
 13099  003CC4  6EDF               	movwf	indf2,c
 13100                           
 13101                           ; BSR set to: 0
 13102                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13103  003CC6  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13104  003CCA  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13105  003CCE  0E00               	movlw	0
 13106  003CD0  8EDB               	bsf	plusw2,7,c
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 13110  003CD2  0E01               	movlw	1
 13111  003CD4  0101               	movlb	1	; () banked
 13112  003CD6  6FE2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13113                           
 13114                           ; BSR set to: 1
 13115                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 13116  003CD8  0100               	movlb	0	; () banked
 13117  003CDA  EE20 F001          	lfsr	2,1
 13118  003CDE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13119  003CE0  26D9               	addwf	fsr2l,f,c
 13120  003CE2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13121  003CE4  22DA               	addwfc	fsr2h,f,c
 13122  003CE6  0E08               	movlw	8
 13123  003CE8  6EDF               	movwf	indf2,c
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13127  003CEA  EE20 F002          	lfsr	2,2
 13128  003CEE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13129  003CF0  26D9               	addwf	fsr2l,f,c
 13130  003CF2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13131  003CF4  22DA               	addwfc	fsr2h,f,c
 13132  003CF6  0E30               	movlw	48
 13133  003CF8  6EDE               	movwf	postinc2,c
 13134  003CFA  0E04               	movlw	4
 13135  003CFC  6EDD               	movwf	postdec2,c
 13136                           
 13137                           ; BSR set to: 0
 13138                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 13139  003CFE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13140  003D02  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13141  003D06  0E80               	movlw	128
 13142  003D08  6EDF               	movwf	indf2,c
 13143                           
 13144                           ; BSR set to: 0
 13145                           
 13146                           ; BSR set to: 0
 13147                           
 13148                           ; BSR set to: 0
 13149  003D0A  0012               	return	
 13150  003D0C                     __end_of_USBCtrlEPAllowStatusStage:
 13151                           	opt stack 0
 13152                           tosu	equ	0xFFF
 13153                           tosh	equ	0xFFE
 13154                           tosl	equ	0xFFD
 13155                           pclath	equ	0xFFA
 13156                           tblptru	equ	0xFF8
 13157                           tblptrh	equ	0xFF7
 13158                           tblptrl	equ	0xFF6
 13159                           tablat	equ	0xFF5
 13160                           prodh	equ	0xFF4
 13161                           prodl	equ	0xFF3
 13162                           intcon	equ	0xFF2
 13163                           intcon2	equ	0xFF1
 13164                           intcon3	equ	0xFF0
 13165                           indf0	equ	0xFEF
 13166                           postinc0	equ	0xFEE
 13167                           plusw0	equ	0xFEB
 13168                           fsr0h	equ	0xFEA
 13169                           fsr0l	equ	0xFE9
 13170                           wreg	equ	0xFE8
 13171                           indf1	equ	0xFE7
 13172                           postinc1	equ	0xFE6
 13173                           postdec1	equ	0xFE5
 13174                           fsr1h	equ	0xFE2
 13175                           fsr1l	equ	0xFE1
 13176                           indf2	equ	0xFDF
 13177                           postinc2	equ	0xFDE
 13178                           postdec2	equ	0xFDD
 13179                           plusw2	equ	0xFDB
 13180                           fsr2h	equ	0xFDA
 13181                           fsr2l	equ	0xFD9
 13182                           status	equ	0xFD8
 13183                           
 13184 ;; *************** function _USBCtrlTrfInHandler *****************
 13185 ;; Defined at:
 13186 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13187 ;; Parameters:    Size  Location     Type
 13188 ;;		None
 13189 ;; Auto vars:     Size  Location     Type
 13190 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 13191 ;; Return value:  Size  Location     Type
 13192 ;;                  1    wreg      void 
 13193 ;; Registers used:
 13194 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13195 ;; Tracked objects:
 13196 ;;		On entry : 0/0
 13197 ;;		On exit  : 0/0
 13198 ;;		Unchanged: 0/0
 13199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13201 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13203 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13204 ;;Total ram usage:        1 bytes
 13205 ;; Hardware stack levels used:    1
 13206 ;; Hardware stack levels required when called:   12
 13207 ;; This function calls:
 13208 ;;		_USBCtrlTrfTxService
 13209 ;; This function is called by:
 13210 ;;		_USBCtrlEPService
 13211 ;; This function uses a non-reentrant model
 13212 ;;
 13213                           
 13214                           	psect	text52
 13215  0040F2                     __ptext52:
 13216                           	opt stack 0
 13217  0040F2                     _USBCtrlTrfInHandler:
 13218                           	opt stack 13
 13219                           
 13220                           ;usb_device.c: 2611: uint8_t lastDTS;
 13221                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13222                           
 13223                           ; BSR set to: 0
 13224                           ;incstack = 0
 13225  0040F2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13226  0040F6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13227  0040FA  0100               	movlb	0	; () banked
 13228  0040FC  0E00               	movlw	0
 13229  0040FE  BCDF               	btfsc	indf2,6,c
 13230  004100  0E01               	movlw	1
 13231  004102  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 13232                           
 13233                           ; BSR set to: 0
 13234                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13235  004104  0E04               	movlw	4
 13236  004106  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 13240  004108  0E08               	movlw	8
 13241  00410A  19CD               	xorwf	_USBDeviceState& (0+255),w,b
 13242  00410C  A4D8               	btfss	status,2,c
 13243  00410E  D00D               	goto	l1791
 13244                           
 13245                           ; BSR set to: 0
 13246                           ;usb_device.c: 2622: {
 13247                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 13248  004110  0104               	movlb	4	; () banked
 13249  004112  5132               	movf	50,w,b	;volatile
 13250  004114  0B7F               	andlw	127
 13251  004116  010F               	movlb	15	; () banked
 13252  004118  6F38               	movwf	56,b	;volatile
 13253                           
 13254                           ; BSR set to: 15
 13255                           ;usb_device.c: 2624: if(UADDR != 0u)
 13256  00411A  5138               	movf	56,w,b	;volatile
 13257  00411C  B4D8               	btfsc	status,2,c
 13258  00411E  D002               	goto	l1790
 13259                           
 13260                           ; BSR set to: 15
 13261                           ;usb_device.c: 2625: {
 13262                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 13263  004120  0E10               	movlw	16
 13264  004122  D001               	goto	L11
 13265  004124                     l1790:
 13266                           
 13267                           ;usb_device.c: 2628: else
 13268                           ;usb_device.c: 2629: {
 13269                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 13270                           
 13271                           ; BSR set to: 0
 13272  004124  0E04               	movlw	4
 13273  004126                     L11:
 13274  004126  0100               	movlb	0	; () banked
 13275  004128  6FCD               	movwf	_USBDeviceState& (0+255),b
 13276  00412A                     l1791:
 13277                           
 13278                           ; BSR set to: 0
 13279                           ;usb_device.c: 2631: }
 13280                           ;usb_device.c: 2632: }
 13281                           ;usb_device.c: 2635: if(controlTransferState == 1)
 13282                           
 13283                           ; BSR set to: 0
 13284                           
 13285                           ; BSR set to: 0
 13286  00412A  05CB               	decf	_controlTransferState& (0+255),w,b
 13287  00412C  A4D8               	btfss	status,2,c
 13288  00412E  D03B               	goto	l1792
 13289                           
 13290                           ; BSR set to: 0
 13291                           ;usb_device.c: 2636: {
 13292                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 13293  004130  EE20 F002          	lfsr	2,2
 13294  004134  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13295  004136  26D9               	addwf	fsr2l,f,c
 13296  004138  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13297  00413A  22DA               	addwfc	fsr2h,f,c
 13298  00413C  0E38               	movlw	56
 13299  00413E  6EDE               	movwf	postinc2,c
 13300  004140  0E04               	movlw	4
 13301  004142  6EDD               	movwf	postdec2,c
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13305  004144  EC12  F01C         	call	_USBCtrlTrfTxService	;wreg free
 13306                           
 13307                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13308  004148  0E02               	movlw	2
 13309  00414A  0100               	movlb	0	; () banked
 13310  00414C  19CC               	xorwf	_shortPacketStatus& (0+255),w,b
 13311  00414E  A4D8               	btfss	status,2,c
 13312  004150  D00D               	goto	l1793
 13313                           
 13314                           ; BSR set to: 0
 13315                           ;usb_device.c: 2645: {
 13316                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13317  004152  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13318  004156  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13319  00415A  0E04               	movlw	4
 13320  00415C  6EDF               	movwf	indf2,c
 13321                           
 13322                           ; BSR set to: 0
 13323                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13324  00415E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13325  004162  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13326  004166  0E00               	movlw	0
 13327  004168  8EDB               	bsf	plusw2,7,c
 13328                           
 13329                           ;usb_device.c: 2650: }
 13330  00416A  0012               	return	
 13331  00416C                     l1793:
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;usb_device.c: 2651: else
 13335                           ;usb_device.c: 2652: {
 13336                           ;usb_device.c: 2653: if(lastDTS == 0)
 13337                           
 13338                           ; BSR set to: 0
 13339  00416C  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13340  00416E  A4D8               	btfss	status,2,c
 13341  004170  D00D               	goto	l1795
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;usb_device.c: 2654: {
 13345                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13346  004172  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13347  004176  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13348  00417A  0E48               	movlw	72
 13349  00417C  6EDF               	movwf	indf2,c
 13350                           
 13351                           ; BSR set to: 0
 13352                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13353  00417E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13354  004182  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13355  004186  0E00               	movlw	0
 13356  004188  8EDB               	bsf	plusw2,7,c
 13357                           
 13358                           ;usb_device.c: 2657: }
 13359  00418A  0012               	return	
 13360  00418C                     l1795:
 13361                           
 13362                           ; BSR set to: 0
 13363                           ;usb_device.c: 2658: else
 13364                           ;usb_device.c: 2659: {
 13365                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13366                           
 13367                           ; BSR set to: 0
 13368  00418C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13369  004190  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13370  004194  0E08               	movlw	8
 13371  004196  6EDF               	movwf	indf2,c
 13372                           
 13373                           ; BSR set to: 0
 13374                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13375  004198  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13376  00419C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13377  0041A0  0E00               	movlw	0
 13378  0041A2  8EDB               	bsf	plusw2,7,c
 13379                           
 13380                           ; BSR set to: 0
 13381                           ;usb_device.c: 2662: }
 13382                           ;usb_device.c: 2663: }
 13383                           ;usb_device.c: 2664: }
 13384                           
 13385                           ; BSR set to: 0
 13386  0041A4  0012               	return	
 13387  0041A6                     l1792:
 13388                           
 13389                           ; BSR set to: 0
 13390                           ;usb_device.c: 2665: else
 13391                           ;usb_device.c: 2666: {
 13392                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13393  0041A6  0101               	movlb	1	; () banked
 13394  0041A8  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13395                           
 13396                           ; BSR set to: 1
 13397                           ;usb_device.c: 2675: }
 13398                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13399                           
 13400                           ; BSR set to: 1
 13401  0041AA  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13402                           
 13403                           ; BSR set to: 1
 13404                           ;usb_device.c: 2677: }
 13405                           ;usb_device.c: 2679: controlTransferState = 0;
 13406                           
 13407                           ; BSR set to: 1
 13408  0041AC  0E00               	movlw	0
 13409  0041AE  0100               	movlb	0	; () banked
 13410  0041B0  6FCB               	movwf	_controlTransferState& (0+255),b
 13411  0041B2  0012               	return	
 13412  0041B4                     __end_of_USBCtrlTrfInHandler:
 13413                           	opt stack 0
 13414                           tosu	equ	0xFFF
 13415                           tosh	equ	0xFFE
 13416                           tosl	equ	0xFFD
 13417                           pclath	equ	0xFFA
 13418                           tblptru	equ	0xFF8
 13419                           tblptrh	equ	0xFF7
 13420                           tblptrl	equ	0xFF6
 13421                           tablat	equ	0xFF5
 13422                           prodh	equ	0xFF4
 13423                           prodl	equ	0xFF3
 13424                           intcon	equ	0xFF2
 13425                           intcon2	equ	0xFF1
 13426                           intcon3	equ	0xFF0
 13427                           indf0	equ	0xFEF
 13428                           postinc0	equ	0xFEE
 13429                           plusw0	equ	0xFEB
 13430                           fsr0h	equ	0xFEA
 13431                           fsr0l	equ	0xFE9
 13432                           wreg	equ	0xFE8
 13433                           indf1	equ	0xFE7
 13434                           postinc1	equ	0xFE6
 13435                           postdec1	equ	0xFE5
 13436                           fsr1h	equ	0xFE2
 13437                           fsr1l	equ	0xFE1
 13438                           indf2	equ	0xFDF
 13439                           postinc2	equ	0xFDE
 13440                           postdec2	equ	0xFDD
 13441                           plusw2	equ	0xFDB
 13442                           fsr2h	equ	0xFDA
 13443                           fsr2l	equ	0xFD9
 13444                           status	equ	0xFD8
 13445                           
 13446 ;; *************** function _USBCtrlTrfTxService *****************
 13447 ;; Defined at:
 13448 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13449 ;; Parameters:    Size  Location     Type
 13450 ;;		None
 13451 ;; Auto vars:     Size  Location     Type
 13452 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13453 ;; Return value:  Size  Location     Type
 13454 ;;                  1    wreg      void 
 13455 ;; Registers used:
 13456 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13457 ;; Tracked objects:
 13458 ;;		On entry : 0/0
 13459 ;;		On exit  : 0/0
 13460 ;;		Unchanged: 0/0
 13461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13465 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13466 ;;Total ram usage:        1 bytes
 13467 ;; Hardware stack levels used:    1
 13468 ;; Hardware stack levels required when called:   11
 13469 ;; This function calls:
 13470 ;;		Nothing
 13471 ;; This function is called by:
 13472 ;;		_USBCtrlEPAllowDataStage
 13473 ;;		_USBCtrlTrfInHandler
 13474 ;; This function uses a non-reentrant model
 13475 ;;
 13476                           
 13477                           	psect	text53
 13478  003824                     __ptext53:
 13479                           	opt stack 0
 13480  003824                     _USBCtrlTrfTxService:
 13481                           	opt stack 11
 13482                           
 13483                           ;usb_device.c: 1791: uint8_t byteToSend;
 13484                           ;usb_device.c: 1795: byteToSend = 8;
 13485                           
 13486                           ; BSR set to: 0
 13487                           ;incstack = 0
 13488  003824  0E08               	movlw	8
 13489  003826  0100               	movlb	0	; () banked
 13490  003828  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13491                           
 13492                           ; BSR set to: 0
 13493                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13494  00382A  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13495  00382C  E110               	bnz	l12546
 13496  00382E  0E08               	movlw	8
 13497  003830  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13498  003832  B0D8               	btfsc	status,0,c
 13499  003834  D00C               	goto	l1697
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;usb_device.c: 1797: {
 13503                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13504  003836  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13505                           
 13506                           ; BSR set to: 0
 13507                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13508  00383A  51CC               	movf	_shortPacketStatus& (0+255),w,b
 13509  00383C  A4D8               	btfss	status,2,c
 13510  00383E  D002               	goto	l1695
 13511                           
 13512                           ; BSR set to: 0
 13513                           ;usb_device.c: 1806: {
 13514                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13515  003840  0E01               	movlw	1
 13516  003842  D004               	goto	L12
 13517  003844                     l1695:
 13518                           
 13519                           ; BSR set to: 0
 13520                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13521                           
 13522                           ; BSR set to: 0
 13523  003844  05CC               	decf	_shortPacketStatus& (0+255),w,b
 13524  003846  A4D8               	btfss	status,2,c
 13525  003848  D002               	goto	l1697
 13526                           
 13527                           ; BSR set to: 0
 13528                           ;usb_device.c: 1810: {
 13529                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13530  00384A  0E02               	movlw	2
 13531  00384C                     L12:
 13532  00384C  6FCC               	movwf	_shortPacketStatus& (0+255),b
 13533  00384E                     l1697:
 13534  00384E                     l12546:
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;usb_device.c: 1812: }
 13538                           ;usb_device.c: 1813: }
 13539                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13540  00384E  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13541  003850  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13542  003852  0E00               	movlw	0
 13543  003854  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13544                           
 13545                           ; BSR set to: 0
 13546                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13547  003856  EE20 F001          	lfsr	2,1
 13548  00385A  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13549  00385C  26D9               	addwf	fsr2l,f,c
 13550  00385E  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13551  003860  22DA               	addwfc	fsr2h,f,c
 13552  003862  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13553                           
 13554                           ; BSR set to: 0
 13555                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13556  003866  0E38               	movlw	56
 13557  003868  0102               	movlb	2	; () banked
 13558  00386A  6FD5               	movwf	_pDst& (0+255),b
 13559  00386C  0E04               	movlw	4
 13560  00386E  6FD6               	movwf	(_pDst+1)& (0+255),b
 13561                           
 13562                           ; BSR set to: 2
 13563                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13564  003870  0100               	movlb	0	; () banked
 13565  003872  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13566  003874  D01E               	goto	l1699
 13567  003876  D03E               	goto	l1703
 13568  003878                     
 13569                           ; BSR set to: 0
 13570                           ;usb_device.c: 1830: {
 13571                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13572                           
 13573                           ; BSR set to: 0
 13574  003878  C0B0  FFF6         	movff	_inPipes,tblptrl
 13575  00387C  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13576  003880  6AF8               	clrf	tblptru,c
 13577  003882  C2D5  FFD9         	movff	_pDst,fsr2l
 13578  003886  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13579  00388A  0E0E               	movlw	(high __ramtop+-1)
 13580  00388C  64F7               	cpfsgt	tblptrh,c
 13581  00388E  D003               	bra	u11137
 13582  003890  0008               	tblrd		*
 13583  003892  50F5               	movf	tablat,w,c
 13584  003894  D005               	bra	u11130
 13585  003896                     u11137:
 13586  003896  CFF6 FFE9          	movff	tblptrl,fsr0l
 13587  00389A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13588  00389E  50EF               	movf	indf0,w,c
 13589  0038A0                     u11130:
 13590  0038A0  6EDF               	movwf	indf2,c
 13591  0038A2  0100               	movlb	0	; () banked
 13592  0038A4  4BB0               	infsnz	_inPipes& (0+255),f,b
 13593  0038A6  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13594                           
 13595                           ; BSR set to: 0
 13596  0038A8  0102               	movlb	2	; () banked
 13597  0038AA  4BD5               	infsnz	_pDst& (0+255),f,b
 13598  0038AC  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13599                           
 13600                           ; BSR set to: 2
 13601                           ;usb_device.c: 1832: byteToSend--;
 13602  0038AE  0100               	movlb	0	; () banked
 13603  0038B0  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13604  0038B2                     l1699:
 13605                           
 13606                           ; BSR set to: 0
 13607                           
 13608                           ; BSR set to: 0
 13609  0038B2  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13610  0038B4  B4D8               	btfsc	status,2,c
 13611  0038B6  0012               	return	
 13612  0038B8  D7DF               	goto	l1700
 13613  0038BA                     
 13614                           ; BSR set to: 0
 13615                           ;usb_device.c: 1838: {
 13616                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13617                           
 13618                           ; BSR set to: 0
 13619  0038BA  C0B0  FFF6         	movff	_inPipes,tblptrl
 13620  0038BE  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13621  0038C2  6AF8               	clrf	tblptru,c
 13622  0038C4  C2D5  FFD9         	movff	_pDst,fsr2l
 13623  0038C8  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13624  0038CC  0E0E               	movlw	(high __ramtop+-1)
 13625  0038CE  64F7               	cpfsgt	tblptrh,c
 13626  0038D0  D003               	bra	u11157
 13627  0038D2  0008               	tblrd		*
 13628  0038D4  50F5               	movf	tablat,w,c
 13629  0038D6  D005               	bra	u11150
 13630  0038D8                     u11157:
 13631  0038D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 13632  0038DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 13633  0038E0  50EF               	movf	indf0,w,c
 13634  0038E2                     u11150:
 13635  0038E2  6EDF               	movwf	indf2,c
 13636  0038E4  0100               	movlb	0	; () banked
 13637  0038E6  4BB0               	infsnz	_inPipes& (0+255),f,b
 13638  0038E8  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13639                           
 13640                           ; BSR set to: 0
 13641  0038EA  0102               	movlb	2	; () banked
 13642  0038EC  4BD5               	infsnz	_pDst& (0+255),f,b
 13643  0038EE  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13644                           
 13645                           ; BSR set to: 2
 13646                           ;usb_device.c: 1840: byteToSend--;
 13647  0038F0  0100               	movlb	0	; () banked
 13648  0038F2  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13649  0038F4                     l1703:
 13650                           
 13651                           ; BSR set to: 0
 13652                           
 13653                           ; BSR set to: 0
 13654  0038F4  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13655  0038F6  B4D8               	btfsc	status,2,c
 13656  0038F8  0012               	return	
 13657  0038FA  D7DF               	goto	l1704
 13658  0038FC                     __end_of_USBCtrlTrfTxService:
 13659                           	opt stack 0
 13660                           tosu	equ	0xFFF
 13661                           tosh	equ	0xFFE
 13662                           tosl	equ	0xFFD
 13663                           pclath	equ	0xFFA
 13664                           tblptru	equ	0xFF8
 13665                           tblptrh	equ	0xFF7
 13666                           tblptrl	equ	0xFF6
 13667                           tablat	equ	0xFF5
 13668                           prodh	equ	0xFF4
 13669                           prodl	equ	0xFF3
 13670                           intcon	equ	0xFF2
 13671                           intcon2	equ	0xFF1
 13672                           intcon3	equ	0xFF0
 13673                           indf0	equ	0xFEF
 13674                           postinc0	equ	0xFEE
 13675                           plusw0	equ	0xFEB
 13676                           fsr0h	equ	0xFEA
 13677                           fsr0l	equ	0xFE9
 13678                           wreg	equ	0xFE8
 13679                           indf1	equ	0xFE7
 13680                           postinc1	equ	0xFE6
 13681                           postdec1	equ	0xFE5
 13682                           fsr1h	equ	0xFE2
 13683                           fsr1l	equ	0xFE1
 13684                           indf2	equ	0xFDF
 13685                           postinc2	equ	0xFDE
 13686                           postdec2	equ	0xFDD
 13687                           plusw2	equ	0xFDB
 13688                           fsr2h	equ	0xFDA
 13689                           fsr2l	equ	0xFD9
 13690                           status	equ	0xFD8
 13691                           
 13692 ;; *************** function _CDCTxService *****************
 13693 ;; Defined at:
 13694 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;		None
 13697 ;; Auto vars:     Size  Location     Type
 13698 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13699 ;;  i               1   36[BANK0 ] unsigned char 
 13700 ;; Return value:  Size  Location     Type
 13701 ;;                  1    wreg      void 
 13702 ;; Registers used:
 13703 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13704 ;; Tracked objects:
 13705 ;;		On entry : 0/0
 13706 ;;		On exit  : 0/0
 13707 ;;		Unchanged: 0/0
 13708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13710 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13712 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13713 ;;Total ram usage:        2 bytes
 13714 ;; Hardware stack levels used:    1
 13715 ;; Hardware stack levels required when called:   12
 13716 ;; This function calls:
 13717 ;;		_USBTransferOnePacket
 13718 ;; This function is called by:
 13719 ;;		_UsbDevice_MainTask
 13720 ;; This function uses a non-reentrant model
 13721 ;;
 13722                           
 13723                           	psect	text54
 13724  002A9A                     __ptext54:
 13725                           	opt stack 0
 13726  002A9A                     _CDCTxService:
 13727                           	opt stack 15
 13728                           
 13729                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13730                           ;usb_device_cdc.c: 842: uint8_t i;
 13731                           ;usb_device_cdc.c: 844: ;
 13732                           ;usb_device_cdc.c: 846: {};
 13733                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;incstack = 0
 13737  002A9A  0101               	movlb	1	; () banked
 13738  002A9C  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13739  002A9E  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13740  002AA0  B4D8               	btfsc	status,2,c
 13741  002AA2  D006               	goto	l1949
 13742                           
 13743                           ; BSR set to: 1
 13744  002AA4  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13745  002AA8  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13746  002AAC  BEDF               	btfsc	indf2,7,c
 13747  002AAE  0012               	return	
 13748  002AB0                     l1949:
 13749                           
 13750                           ; BSR set to: 1
 13751                           ;usb_device_cdc.c: 852: }
 13752                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13753                           
 13754                           ; BSR set to: 1
 13755  002AB0  0E03               	movlw	3
 13756  002AB2  0100               	movlb	0	; () banked
 13757  002AB4  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13758  002AB6  A4D8               	btfss	status,2,c
 13759  002AB8  D002               	goto	l1951
 13760                           
 13761                           ; BSR set to: 0
 13762                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13763  002ABA  0E00               	movlw	0
 13764  002ABC  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13765  002ABE                     l1951:
 13766                           
 13767                           ; BSR set to: 0
 13768                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13769  002ABE  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13770  002AC0  B4D8               	btfsc	status,2,c
 13771  002AC2  0012               	return	
 13772                           
 13773                           ; BSR set to: 0
 13774                           ;usb_device_cdc.c: 869: }
 13775                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13776                           
 13777                           ; BSR set to: 0
 13778                           
 13779                           ; BSR set to: 0
 13780                           ;usb_device_cdc.c: 866: {
 13781                           ;usb_device_cdc.c: 867: ;
 13782                           ;usb_device_cdc.c: 868: return;
 13783  002AC4  0E02               	movlw	2
 13784  002AC6  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13785  002AC8  A4D8               	btfss	status,2,c
 13786  002ACA  D013               	goto	l1953
 13787                           
 13788                           ; BSR set to: 0
 13789                           ;usb_device_cdc.c: 875: {
 13790                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13791  002ACC  0E01               	movlw	1
 13792  002ACE  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13793  002AD0  0E00               	movlw	0
 13794  002AD2  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13795  002AD4  0E00               	movlw	0
 13796  002AD6  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13797  002AD8  0E00               	movlw	0
 13798  002ADA  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13799  002ADC  0E02               	movlw	2
 13800  002ADE  ECDA  F020         	call	_USBTransferOnePacket
 13801  002AE2  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13802  002AE6  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13803                           
 13804                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13805  002AEA  0E03               	movlw	3
 13806  002AEC  0100               	movlb	0	; () banked
 13807  002AEE  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13808                           
 13809                           ;usb_device_cdc.c: 879: }
 13810  002AF0  0012               	return	
 13811  002AF2                     l1953:
 13812                           
 13813                           ; BSR set to: 0
 13814                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13815                           
 13816                           ; BSR set to: 0
 13817  002AF2  05C5               	decf	_cdc_trf_state& (0+255),w,b
 13818  002AF4  A4D8               	btfss	status,2,c
 13819  002AF6  0012               	return	
 13820                           
 13821                           ; BSR set to: 0
 13822                           ;usb_device_cdc.c: 881: {
 13823                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13824  002AF8  0E40               	movlw	64
 13825  002AFA  65C4               	cpfsgt	_cdc_tx_len& (0+255),b
 13826  002AFC  D003               	goto	l1956
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13830  002AFE  0E40               	movlw	64
 13831  002B00  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13832  002B02  D002               	goto	l1957
 13833  002B04                     l1956:
 13834                           
 13835                           ; BSR set to: 0
 13836                           ;usb_device_cdc.c: 887: else
 13837                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13838  002B04  C0C4  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13839  002B08                     l1957:
 13840                           
 13841                           ; BSR set to: 0
 13842                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13843                           
 13844                           ; BSR set to: 0
 13845  002B08  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13846  002B0A  0800               	sublw	0
 13847  002B0C  25C4               	addwf	_cdc_tx_len& (0+255),w,b
 13848  002B0E  6FC4               	movwf	_cdc_tx_len& (0+255),b
 13849                           
 13850                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13851  002B10  0EB6               	movlw	low _cdc_data_tx
 13852  002B12  0102               	movlb	2	; () banked
 13853  002B14  6FC9               	movwf	_pCDCDst& (0+255),b
 13854  002B16  0E07               	movlw	high _cdc_data_tx
 13855  002B18  6FCA               	movwf	(_pCDCDst+1)& (0+255),b
 13856                           
 13857                           ; BSR set to: 2
 13858                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13859  002B1A  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13860                           
 13861                           ; BSR set to: 2
 13862                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13863  002B1E  0101               	movlb	1	; () banked
 13864  002B20  51E0               	movf	_cdc_mem_type& (0+255),w,b
 13865  002B22  B4D8               	btfsc	status,2,c
 13866  002B24  D01D               	goto	l1959
 13867  002B26  D03D               	goto	l1963
 13868  002B28                     
 13869                           ;usb_device_cdc.c: 901: {
 13870                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13871                           
 13872                           ; BSR set to: 1
 13873  002B28  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13874  002B2C  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13875  002B30  6AF8               	clrf	tblptru,c
 13876  002B32  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13877  002B36  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13878  002B3A  0E0E               	movlw	(high __ramtop+-1)
 13879  002B3C  64F7               	cpfsgt	tblptrh,c
 13880  002B3E  D003               	bra	u15147
 13881  002B40  0008               	tblrd		*
 13882  002B42  50F5               	movf	tablat,w,c
 13883  002B44  D005               	bra	u15140
 13884  002B46                     u15147:
 13885  002B46  CFF6 FFE9          	movff	tblptrl,fsr0l
 13886  002B4A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13887  002B4E  50EF               	movf	indf0,w,c
 13888  002B50                     u15140:
 13889  002B50  6EDF               	movwf	indf2,c
 13890                           
 13891                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13892  002B52  0102               	movlb	2	; () banked
 13893  002B54  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13894  002B56  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13895                           
 13896                           ; BSR set to: 2
 13897                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13898  002B58  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13899  002B5A  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13900                           
 13901                           ; BSR set to: 2
 13902                           ;usb_device_cdc.c: 905: i--;
 13903  002B5C  0100               	movlb	0	; () banked
 13904  002B5E  0784               	decf	CDCTxService@i& (0+255),f,b
 13905  002B60                     l1959:
 13906                           
 13907                           ; BSR set to: 0
 13908  002B60  0100               	movlb	0	; () banked
 13909  002B62  5184               	movf	CDCTxService@i& (0+255),w,b
 13910  002B64  B4D8               	btfsc	status,2,c
 13911  002B66  D021               	goto	u15170
 13912  002B68  D7DF               	goto	l1960
 13913  002B6A                     
 13914                           ; BSR set to: 0
 13915                           ;usb_device_cdc.c: 911: {
 13916                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13917                           
 13918                           ; BSR set to: 0
 13919  002B6A  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13920  002B6E  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13921  002B72  6AF8               	clrf	tblptru,c
 13922  002B74  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13923  002B78  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13924  002B7C  0E0E               	movlw	(high __ramtop+-1)
 13925  002B7E  64F7               	cpfsgt	tblptrh,c
 13926  002B80  D003               	bra	u15167
 13927  002B82  0008               	tblrd		*
 13928  002B84  50F5               	movf	tablat,w,c
 13929  002B86  D005               	bra	u15160
 13930  002B88                     u15167:
 13931  002B88  CFF6 FFE9          	movff	tblptrl,fsr0l
 13932  002B8C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13933  002B90  50EF               	movf	indf0,w,c
 13934  002B92                     u15160:
 13935  002B92  6EDF               	movwf	indf2,c
 13936                           
 13937                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13938  002B94  0102               	movlb	2	; () banked
 13939  002B96  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13940  002B98  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13941                           
 13942                           ; BSR set to: 2
 13943                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13944  002B9A  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13945  002B9C  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13946                           
 13947                           ; BSR set to: 2
 13948                           ;usb_device_cdc.c: 915: i--;
 13949  002B9E  0100               	movlb	0	; () banked
 13950  002BA0  0784               	decf	CDCTxService@i& (0+255),f,b
 13951  002BA2                     l1963:
 13952                           
 13953                           ; BSR set to: 0
 13954  002BA2  0100               	movlb	0	; () banked
 13955  002BA4  5184               	movf	CDCTxService@i& (0+255),w,b
 13956  002BA6  A4D8               	btfss	status,2,c
 13957  002BA8  D7E0               	goto	l1964
 13958  002BAA                     u15170:
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;usb_device_cdc.c: 916: }
 13962                           ;usb_device_cdc.c: 917: }
 13963                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13964                           
 13965                           ; BSR set to: 0
 13966                           
 13967                           ; BSR set to: 0
 13968  002BAA  51C4               	movf	_cdc_tx_len& (0+255),w,b
 13969  002BAC  A4D8               	btfss	status,2,c
 13970  002BAE  D008               	goto	l1968
 13971                           
 13972                           ; BSR set to: 0
 13973                           ;usb_device_cdc.c: 924: {
 13974                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13975  002BB0  0E40               	movlw	64
 13976  002BB2  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13977  002BB4  A4D8               	btfss	status,2,c
 13978  002BB6  D002               	goto	l1967
 13979                           
 13980                           ; BSR set to: 0
 13981                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13982  002BB8  0E02               	movlw	2
 13983  002BBA  D001               	goto	L13
 13984  002BBC                     l1967:
 13985                           
 13986                           ; BSR set to: 0
 13987                           ;usb_device_cdc.c: 927: else
 13988                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13989                           
 13990                           ; BSR set to: 0
 13991  002BBC  0E03               	movlw	3
 13992  002BBE                     L13:
 13993  002BBE  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13994  002BC0                     l1968:
 13995                           
 13996                           ; BSR set to: 0
 13997                           ;usb_device_cdc.c: 929: }
 13998                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13999                           
 14000                           ; BSR set to: 0
 14001                           
 14002                           ; BSR set to: 0
 14003  002BC0  0E01               	movlw	1
 14004  002BC2  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 14005  002BC4  0EB6               	movlw	low _cdc_data_tx
 14006  002BC6  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 14007  002BC8  0E07               	movlw	high _cdc_data_tx
 14008  002BCA  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14009  002BCC  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 14010  002BD0  0E02               	movlw	2
 14011  002BD2  ECDA  F020         	call	_USBTransferOnePacket
 14012  002BD6  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 14013  002BDA  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 14014  002BDE  0012               	return	
 14015  002BE0                     __end_of_CDCTxService:
 14016                           	opt stack 0
 14017                           tosu	equ	0xFFF
 14018                           tosh	equ	0xFFE
 14019                           tosl	equ	0xFFD
 14020                           pclath	equ	0xFFA
 14021                           tblptru	equ	0xFF8
 14022                           tblptrh	equ	0xFF7
 14023                           tblptrl	equ	0xFF6
 14024                           tablat	equ	0xFF5
 14025                           prodh	equ	0xFF4
 14026                           prodl	equ	0xFF3
 14027                           intcon	equ	0xFF2
 14028                           intcon2	equ	0xFF1
 14029                           intcon3	equ	0xFF0
 14030                           indf0	equ	0xFEF
 14031                           postinc0	equ	0xFEE
 14032                           plusw0	equ	0xFEB
 14033                           fsr0h	equ	0xFEA
 14034                           fsr0l	equ	0xFE9
 14035                           wreg	equ	0xFE8
 14036                           indf1	equ	0xFE7
 14037                           postinc1	equ	0xFE6
 14038                           postdec1	equ	0xFE5
 14039                           fsr1h	equ	0xFE2
 14040                           fsr1l	equ	0xFE1
 14041                           indf2	equ	0xFDF
 14042                           postinc2	equ	0xFDE
 14043                           postdec2	equ	0xFDD
 14044                           plusw2	equ	0xFDB
 14045                           fsr2h	equ	0xFDA
 14046                           fsr2l	equ	0xFD9
 14047                           status	equ	0xFD8
 14048                           
 14049 ;; *************** function _Term_MainSm *****************
 14050 ;; Defined at:
 14051 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14052 ;; Parameters:    Size  Location     Type
 14053 ;;		None
 14054 ;; Auto vars:     Size  Location     Type
 14055 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 14056 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 14057 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 14058 ;;  FwkBuildYear    4    0        unsigned char [4]
 14059 ;;  FwkBuildMont    4    0        unsigned char [4]
 14060 ;;  FwkBuildDayS    4    0        unsigned char [4]
 14061 ;; Return value:  Size  Location     Type
 14062 ;;                  1    wreg      void 
 14063 ;; Registers used:
 14064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14065 ;; Tracked objects:
 14066 ;;		On entry : 0/0
 14067 ;;		On exit  : 0/0
 14068 ;;		Unchanged: 0/0
 14069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14071 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14073 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14074 ;;Total ram usage:       12 bytes
 14075 ;; Hardware stack levels used:    1
 14076 ;; Hardware stack levels required when called:   16
 14077 ;; This function calls:
 14078 ;;		_OsTmr_GetTimerStatus
 14079 ;;		_OsTmr_StartTimer
 14080 ;;		_Terminal
 14081 ;;		_memset
 14082 ;;		_putUSBUSART
 14083 ;;		_sprintf
 14084 ;;		_strcat
 14085 ;;		_strcpy
 14086 ;;		_strlen
 14087 ;;		_utoa
 14088 ;; This function is called by:
 14089 ;;		_Term_MainTask
 14090 ;; This function uses a non-reentrant model
 14091 ;;
 14092                           
 14093                           	psect	text55
 14094  0010B6                     __ptext55:
 14095                           	opt stack 0
 14096  0010B6                     _Term_MainSm:
 14097                           	opt stack 11
 14098                           
 14099                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 14100                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 14101                           ;term.c: 711: static UINT8 Data[50];
 14102                           ;term.c: 712: UINT8 FwkMajorStr[4];
 14103                           ;term.c: 713: UINT8 FwkMinorStr[4];
 14104                           ;term.c: 714: UINT8 FwkBuildStr[4];
 14105                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 14106                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 14107                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 14108                           ;term.c: 719: switch (TermMainSmState)
 14109                           
 14110                           ;incstack = 0
 14111  0010B6  D133               	goto	l2453
 14112  0010B8                     
 14113                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 14114  0010B8  0ED4               	movlw	low Term_MainSm@TermDelay
 14115  0010BA  0100               	movlb	0	; () banked
 14116  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 14117  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 14118  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 14119  0010C2  0ED0               	movlw	208
 14120  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 14121  0010C6  0E07               	movlw	7
 14122  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 14123  0010CA  0E00               	movlw	0
 14124  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 14125  0010CE  0E00               	movlw	0
 14126  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 14127  0010D2  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 14128                           
 14129                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 14130  0010D6  0E01               	movlw	1
 14131  0010D8  0102               	movlb	2	; () banked
 14132  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14133                           
 14134                           ;term.c: 726: break;
 14135  0010DC  0012               	return	
 14136  0010DE                     
 14137                           ; BSR set to: 2
 14138                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 14139                           
 14140                           ; BSR set to: 2
 14141  0010DE  0ED4               	movlw	low Term_MainSm@TermDelay
 14142  0010E0  0100               	movlb	0	; () banked
 14143  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 14144  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 14145  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 14146  0010E8  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 14147  0010EC  06E8               	decf	wreg,f,c
 14148  0010EE  A4D8               	btfss	status,2,c
 14149  0010F0  0012               	return	
 14150                           
 14151                           ;term.c: 731: {
 14152                           ;term.c: 733: TermMainSmState = Term_InitState;
 14153  0010F2  0E02               	movlw	2
 14154  0010F4  0102               	movlb	2	; () banked
 14155  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14156                           
 14157                           ; BSR set to: 2
 14158                           ;term.c: 734: }
 14159                           ;term.c: 735: break;
 14160  0010F8  0012               	return	
 14161  0010FA                     
 14162                           ; BSR set to: 2
 14163                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 14164                           
 14165                           ; BSR set to: 2
 14166  0010FA  0E1F               	movlw	31
 14167  0010FC  0100               	movlb	0	; () banked
 14168  0010FE  65CD               	cpfsgt	_USBDeviceState& (0+255),b
 14169  001100  0012               	return	
 14170                           
 14171                           ; BSR set to: 0
 14172  001102  B265               	btfsc	3941,1,c	;volatile
 14173  001104  0012               	return	
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;term.c: 743: else
 14177                           ;term.c: 744: {
 14178                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 14179                           
 14180                           ; BSR set to: 0
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;term.c: 740: {
 14184                           ;term.c: 742: }
 14185  001106  0E03               	movlw	3
 14186  001108  0102               	movlb	2	; () banked
 14187  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14188                           
 14189                           ; BSR set to: 2
 14190                           ;term.c: 747: }
 14191                           ;term.c: 748: break;
 14192  00110C  0012               	return	
 14193  00110E                     
 14194                           ; BSR set to: 2
 14195                           ;term.c: 752: if((cdc_trf_state == 0))
 14196                           
 14197                           ; BSR set to: 2
 14198  00110E  0100               	movlb	0	; () banked
 14199  001110  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14200  001112  A4D8               	btfss	status,2,c
 14201  001114  0012               	return	
 14202                           
 14203                           ; BSR set to: 0
 14204                           ;term.c: 753: {
 14205                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 14206  001116  0E22               	movlw	low _Welcome
 14207  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 14208  00111A  0EFD               	movlw	high _Welcome
 14209  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14210  00111E  0E88               	movlw	136
 14211  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 14212  001122  EC38  F032         	call	_putUSBUSART	;wreg free
 14213                           
 14214                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 14215  001126  0E04               	movlw	4
 14216  001128  0102               	movlb	2	; () banked
 14217  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14218                           
 14219                           ; BSR set to: 2
 14220                           ;term.c: 758: }
 14221                           ;term.c: 759: break;
 14222  00112C  0012               	return	
 14223  00112E                     
 14224                           ; BSR set to: 2
 14225                           ;term.c: 763: if((cdc_trf_state == 0))
 14226                           
 14227                           ; BSR set to: 2
 14228  00112E  0100               	movlb	0	; () banked
 14229  001130  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14230  001132  A4D8               	btfss	status,2,c
 14231  001134  0012               	return	
 14232                           
 14233                           ; BSR set to: 0
 14234                           ;term.c: 764: {
 14235                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 14236  001136  0E32               	movlw	low _MsgFormat
 14237  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 14238  00113A  0EFC               	movlw	high _MsgFormat
 14239  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14240  00113E  0EEF               	movlw	239
 14241  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 14242  001142  EC38  F032         	call	_putUSBUSART	;wreg free
 14243                           
 14244                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 14245  001146  0E05               	movlw	5
 14246  001148  0102               	movlb	2	; () banked
 14247  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14248                           
 14249                           ; BSR set to: 2
 14250                           ;term.c: 769: }
 14251                           ;term.c: 770: break;
 14252  00114C  0012               	return	
 14253  00114E                     
 14254                           ; BSR set to: 2
 14255                           ;term.c: 774: if((cdc_trf_state == 0))
 14256                           
 14257                           ; BSR set to: 2
 14258  00114E  0100               	movlb	0	; () banked
 14259  001150  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14260  001152  A4D8               	btfss	status,2,c
 14261  001154  0012               	return	
 14262                           
 14263                           ; BSR set to: 0
 14264                           ;term.c: 775: {
 14265                           ;term.c: 777: memset(Data,0,50);
 14266  001156  0E63               	movlw	low Term_MainSm@Data
 14267  001158  6F7D               	movwf	memset@p1& (0+255),b
 14268  00115A  0E04               	movlw	high Term_MainSm@Data
 14269  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14270  00115E  0E00               	movlw	0
 14271  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 14272  001162  0E00               	movlw	0
 14273  001164  6F7F               	movwf	memset@c& (0+255),b
 14274  001166  0E00               	movlw	0
 14275  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 14276  00116A  0E32               	movlw	50
 14277  00116C  6F81               	movwf	memset@n& (0+255),b
 14278  00116E  ECCD  F030         	call	_memset	;wreg free
 14279                           
 14280                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 14281  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14282  001174  0100               	movlb	0	; () banked
 14283  001176  6F8A               	movwf	utoa@buf& (0+255),b
 14284  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14285  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14286  00117C  0E00               	movlw	0
 14287  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14288  001180  0E01               	movlw	1
 14289  001182  6F8C               	movwf	utoa@val& (0+255),b
 14290  001184  0E00               	movlw	0
 14291  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14292  001188  0E0A               	movlw	10
 14293  00118A  6F8E               	movwf	utoa@base& (0+255),b
 14294  00118C  EC40  F022         	call	_utoa	;wreg free
 14295                           
 14296                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 14297  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14298  001192  0100               	movlb	0	; () banked
 14299  001194  6F8A               	movwf	utoa@buf& (0+255),b
 14300  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14301  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14302  00119A  0E00               	movlw	0
 14303  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14304  00119E  0E02               	movlw	2
 14305  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 14306  0011A2  0E00               	movlw	0
 14307  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14308  0011A6  0E0A               	movlw	10
 14309  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 14310  0011AA  EC40  F022         	call	_utoa	;wreg free
 14311                           
 14312                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 14313  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14314  0011B0  0100               	movlb	0	; () banked
 14315  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 14316  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14317  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14318  0011B8  0E00               	movlw	0
 14319  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14320  0011BC  0E00               	movlw	0
 14321  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 14322  0011C0  0E00               	movlw	0
 14323  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14324  0011C4  0E0A               	movlw	10
 14325  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 14326  0011C8  EC40  F022         	call	_utoa	;wreg free
 14327                           
 14328                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14329  0011CC  0E63               	movlw	low Term_MainSm@Data
 14330  0011CE  0100               	movlb	0	; () banked
 14331  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 14332  0011D2  0E04               	movlw	high Term_MainSm@Data
 14333  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14334  0011D6  0ED2               	movlw	low STR_23
 14335  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 14336  0011DA  0EFE               	movlw	high STR_23
 14337  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14338  0011DE  EC9C  F030         	call	_strcpy	;wreg free
 14339                           
 14340                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14341  0011E2  0E63               	movlw	low Term_MainSm@Data
 14342  0011E4  0100               	movlb	0	; () banked
 14343  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 14344  0011E8  0E04               	movlw	high Term_MainSm@Data
 14345  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14346  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14347  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 14348  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14349  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 14350  0011F4  ECCC  F02A         	call	_strcat	;wreg free
 14351                           
 14352                           ;term.c: 784: strcat(Data,".");
 14353  0011F8  0E63               	movlw	low Term_MainSm@Data
 14354  0011FA  0100               	movlb	0	; () banked
 14355  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 14356  0011FE  0E04               	movlw	high Term_MainSm@Data
 14357  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14358  001202  0EF5               	movlw	low STR_24
 14359  001204  6F7F               	movwf	strcat@from& (0+255),b
 14360  001206  0EFF               	movlw	high STR_24
 14361  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 14362  00120A  ECCC  F02A         	call	_strcat	;wreg free
 14363                           
 14364                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14365  00120E  0E63               	movlw	low Term_MainSm@Data
 14366  001210  0100               	movlb	0	; () banked
 14367  001212  6F7D               	movwf	strcat@to& (0+255),b
 14368  001214  0E04               	movlw	high Term_MainSm@Data
 14369  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14370  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14371  00121A  6F7F               	movwf	strcat@from& (0+255),b
 14372  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14373  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14374  001220  ECCC  F02A         	call	_strcat	;wreg free
 14375                           
 14376                           ;term.c: 786: strcat(Data,".");
 14377  001224  0E63               	movlw	low Term_MainSm@Data
 14378  001226  0100               	movlb	0	; () banked
 14379  001228  6F7D               	movwf	strcat@to& (0+255),b
 14380  00122A  0E04               	movlw	high Term_MainSm@Data
 14381  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14382  00122E  0EF5               	movlw	low STR_24
 14383  001230  6F7F               	movwf	strcat@from& (0+255),b
 14384  001232  0EFF               	movlw	high STR_24
 14385  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 14386  001236  ECCC  F02A         	call	_strcat	;wreg free
 14387                           
 14388                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14389  00123A  0E63               	movlw	low Term_MainSm@Data
 14390  00123C  0100               	movlb	0	; () banked
 14391  00123E  6F7D               	movwf	strcat@to& (0+255),b
 14392  001240  0E04               	movlw	high Term_MainSm@Data
 14393  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14394  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14395  001246  6F7F               	movwf	strcat@from& (0+255),b
 14396  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14397  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14398  00124C  ECCC  F02A         	call	_strcat	;wreg free
 14399                           
 14400                           ;term.c: 788: strcat(Data,"\r\n");
 14401  001250  0E63               	movlw	low Term_MainSm@Data
 14402  001252  0100               	movlb	0	; () banked
 14403  001254  6F7D               	movwf	strcat@to& (0+255),b
 14404  001256  0E04               	movlw	high Term_MainSm@Data
 14405  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14406  00125A  0E86               	movlw	low (STR_21+39)
 14407  00125C  6F7F               	movwf	strcat@from& (0+255),b
 14408  00125E  0EFE               	movlw	high (STR_21+39)
 14409  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 14410  001262  ECCC  F02A         	call	_strcat	;wreg free
 14411                           
 14412                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14413  001266  0E63               	movlw	low Term_MainSm@Data
 14414  001268  0100               	movlb	0	; () banked
 14415  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14416  00126C  0E04               	movlw	high Term_MainSm@Data
 14417  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14418  001270  0E63               	movlw	low Term_MainSm@Data
 14419  001272  6F7D               	movwf	strlen@s& (0+255),b
 14420  001274  0E04               	movlw	high Term_MainSm@Data
 14421  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14422  001278  EC7E  F02F         	call	_strlen	;wreg free
 14423  00127C  0100               	movlb	0	; () banked
 14424  00127E  517D               	movf	?_strlen& (0+255),w,b
 14425  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 14426  001282  EC38  F032         	call	_putUSBUSART	;wreg free
 14427                           
 14428                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14429  001286  0E06               	movlw	6
 14430  001288  0102               	movlb	2	; () banked
 14431  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14432                           
 14433                           ; BSR set to: 2
 14434                           ;term.c: 793: }
 14435                           ;term.c: 794: break;
 14436  00128C  0012               	return	
 14437  00128E                     
 14438                           ; BSR set to: 2
 14439                           ;term.c: 798: if((cdc_trf_state == 0))
 14440                           
 14441                           ; BSR set to: 2
 14442  00128E  0100               	movlb	0	; () banked
 14443  001290  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14444  001292  A4D8               	btfss	status,2,c
 14445  001294  0012               	return	
 14446                           
 14447                           ; BSR set to: 0
 14448                           ;term.c: 799: {
 14449                           ;term.c: 801: memset(Data,0,50);
 14450  001296  0E63               	movlw	low Term_MainSm@Data
 14451  001298  6F7D               	movwf	memset@p1& (0+255),b
 14452  00129A  0E04               	movlw	high Term_MainSm@Data
 14453  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14454  00129E  0E00               	movlw	0
 14455  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 14456  0012A2  0E00               	movlw	0
 14457  0012A4  6F7F               	movwf	memset@c& (0+255),b
 14458  0012A6  0E00               	movlw	0
 14459  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 14460  0012AA  0E32               	movlw	50
 14461  0012AC  6F81               	movwf	memset@n& (0+255),b
 14462  0012AE  ECCD  F030         	call	_memset	;wreg free
 14463                           
 14464                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 26 2022");
 14465  0012B2  0E63               	movlw	low Term_MainSm@Data
 14466  0012B4  0100               	movlb	0	; () banked
 14467  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14468  0012B8  0E04               	movlw	high Term_MainSm@Data
 14469  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14470  0012BC  0E0D               	movlw	low STR_27
 14471  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14472  0012C0  0EFF               	movlw	high STR_27
 14473  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14474  0012C4  0EB6               	movlw	low STR_28
 14475  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14476  0012C8  0EFF               	movlw	high STR_28
 14477  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14478  0012CC  EC53  F01D         	call	_sprintf	;wreg free
 14479                           
 14480                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14481  0012D0  0E63               	movlw	low Term_MainSm@Data
 14482  0012D2  0100               	movlb	0	; () banked
 14483  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14484  0012D6  0E04               	movlw	high Term_MainSm@Data
 14485  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14486  0012DA  0E63               	movlw	low Term_MainSm@Data
 14487  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14488  0012DE  0E04               	movlw	high Term_MainSm@Data
 14489  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14490  0012E2  EC7E  F02F         	call	_strlen	;wreg free
 14491  0012E6  0100               	movlb	0	; () banked
 14492  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14493  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14494  0012EC  EC38  F032         	call	_putUSBUSART	;wreg free
 14495                           
 14496                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14497  0012F0  0E07               	movlw	7
 14498  0012F2  0102               	movlb	2	; () banked
 14499  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14500                           
 14501                           ; BSR set to: 2
 14502                           ;term.c: 808: }
 14503                           ;term.c: 809: break;
 14504  0012F6  0012               	return	
 14505  0012F8                     
 14506                           ; BSR set to: 2
 14507                           ;term.c: 813: if((cdc_trf_state == 0))
 14508                           
 14509                           ; BSR set to: 2
 14510  0012F8  0100               	movlb	0	; () banked
 14511  0012FA  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14512  0012FC  A4D8               	btfss	status,2,c
 14513  0012FE  0012               	return	
 14514                           
 14515                           ; BSR set to: 0
 14516                           ;term.c: 814: {
 14517                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14518  001300  0E32               	movlw	low _MsgReady
 14519  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14520  001304  0EFE               	movlw	high _MsgReady
 14521  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14522  001308  0E16               	movlw	22
 14523  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14524  00130C  EC38  F032         	call	_putUSBUSART	;wreg free
 14525                           
 14526                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14527  001310  0E08               	movlw	8
 14528  001312  0102               	movlb	2	; () banked
 14529  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14530                           
 14531                           ; BSR set to: 2
 14532                           ;term.c: 819: }
 14533                           ;term.c: 820: break;
 14534  001316  0012               	return	
 14535  001318                     
 14536                           ; BSR set to: 2
 14537                           ;term.c: 824: Terminal();
 14538                           
 14539                           ; BSR set to: 2
 14540  001318  EC68  F000         	call	_Terminal	;wreg free
 14541                           
 14542                           ;term.c: 829: }
 14543                           
 14544                           ;term.c: 828: break;
 14545                           
 14546                           ;term.c: 827: default:
 14547                           
 14548                           ;term.c: 825: break;
 14549  00131C  0012               	return	
 14550  00131E                     l2453:
 14551  00131E  0102               	movlb	2	; () banked
 14552  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14553                           
 14554                           ; Switch size 1, requested type "space"
 14555                           ; Number of cases is 9, Range of values is 0 to 8
 14556                           ; switch strategies available:
 14557                           ; Name         Instructions Cycles
 14558                           ; simple_byte           28    15 (average)
 14559                           ;	Chosen strategy is simple_byte
 14560  001322  0A00               	xorlw	0	; case 0
 14561  001324  B4D8               	btfsc	status,2,c
 14562  001326  D6C8               	goto	l2454
 14563  001328  0A01               	xorlw	1	; case 1
 14564  00132A  B4D8               	btfsc	status,2,c
 14565  00132C  D6D8               	goto	l2456
 14566  00132E  0A03               	xorlw	3	; case 2
 14567  001330  B4D8               	btfsc	status,2,c
 14568  001332  D6E3               	goto	l2458
 14569  001334  0A01               	xorlw	1	; case 3
 14570  001336  B4D8               	btfsc	status,2,c
 14571  001338  D6EA               	goto	l2463
 14572  00133A  0A07               	xorlw	7	; case 4
 14573  00133C  B4D8               	btfsc	status,2,c
 14574  00133E  D6F7               	goto	l2465
 14575  001340  0A01               	xorlw	1	; case 5
 14576  001342  B4D8               	btfsc	status,2,c
 14577  001344  D704               	goto	l2467
 14578  001346  0A03               	xorlw	3	; case 6
 14579  001348  B4D8               	btfsc	status,2,c
 14580  00134A  D7A1               	goto	l2469
 14581  00134C  0A01               	xorlw	1	; case 7
 14582  00134E  B4D8               	btfsc	status,2,c
 14583  001350  D7D3               	goto	l2471
 14584  001352  0A0F               	xorlw	15	; case 8
 14585  001354  A4D8               	btfss	status,2,c
 14586  001356  0012               	return	
 14587  001358  D7DF               	goto	l2473
 14588  00135A                     __end_of_Term_MainSm:
 14589                           	opt stack 0
 14590                           tosu	equ	0xFFF
 14591                           tosh	equ	0xFFE
 14592                           tosl	equ	0xFFD
 14593                           pclath	equ	0xFFA
 14594                           tblptru	equ	0xFF8
 14595                           tblptrh	equ	0xFF7
 14596                           tblptrl	equ	0xFF6
 14597                           tablat	equ	0xFF5
 14598                           prodh	equ	0xFF4
 14599                           prodl	equ	0xFF3
 14600                           intcon	equ	0xFF2
 14601                           intcon2	equ	0xFF1
 14602                           intcon3	equ	0xFF0
 14603                           indf0	equ	0xFEF
 14604                           postinc0	equ	0xFEE
 14605                           plusw0	equ	0xFEB
 14606                           fsr0h	equ	0xFEA
 14607                           fsr0l	equ	0xFE9
 14608                           wreg	equ	0xFE8
 14609                           indf1	equ	0xFE7
 14610                           postinc1	equ	0xFE6
 14611                           postdec1	equ	0xFE5
 14612                           fsr1h	equ	0xFE2
 14613                           fsr1l	equ	0xFE1
 14614                           indf2	equ	0xFDF
 14615                           postinc2	equ	0xFDE
 14616                           postdec2	equ	0xFDD
 14617                           plusw2	equ	0xFDB
 14618                           fsr2h	equ	0xFDA
 14619                           fsr2l	equ	0xFD9
 14620                           status	equ	0xFD8
 14621                           
 14622 ;; *************** function _strlen *****************
 14623 ;; Defined at:
 14624 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14625 ;; Parameters:    Size  Location     Type
 14626 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14627 ;;		 -> Term_MainSm@Data(50), 
 14628 ;; Auto vars:     Size  Location     Type
 14629 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14630 ;;		 -> Term_MainSm@Data(50), 
 14631 ;; Return value:  Size  Location     Type
 14632 ;;                  2   29[BANK0 ] unsigned int 
 14633 ;; Registers used:
 14634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14635 ;; Tracked objects:
 14636 ;;		On entry : 0/0
 14637 ;;		On exit  : 0/0
 14638 ;;		Unchanged: 0/0
 14639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14641 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14642 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14643 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14644 ;;Total ram usage:        6 bytes
 14645 ;; Hardware stack levels used:    1
 14646 ;; Hardware stack levels required when called:   11
 14647 ;; This function calls:
 14648 ;;		Nothing
 14649 ;; This function is called by:
 14650 ;;		_Term_MainSm
 14651 ;; This function uses a non-reentrant model
 14652 ;;
 14653                           
 14654                           	psect	text56
 14655  005EFC                     __ptext56:
 14656                           	opt stack 0
 14657  005EFC                     _strlen:
 14658                           	opt stack 15
 14659                           
 14660                           ;incstack = 0
 14661  005EFC  C07D  F081         	movff	strlen@s,strlen@cp
 14662  005F00  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14663  005F04  D003               	goto	l3424
 14664  005F06  0100               	movlb	0	; () banked
 14665  005F08  4B81               	infsnz	strlen@cp& (0+255),f,b
 14666  005F0A  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14667  005F0C                     l3424:
 14668                           
 14669                           ; BSR set to: 0
 14670  005F0C  C081  FFD9         	movff	strlen@cp,fsr2l
 14671  005F10  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14672  005F14  50DF               	movf	indf2,w,c
 14673  005F16  A4D8               	btfss	status,2,c
 14674  005F18  D7F6               	goto	l3425
 14675  005F1A  C07D  F07F         	movff	strlen@s,??_strlen
 14676  005F1E  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14677  005F22  0100               	movlb	0	; () banked
 14678  005F24  1F7F               	comf	??_strlen& (0+255),f,b
 14679  005F26  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14680  005F28  4B7F               	infsnz	??_strlen& (0+255),f,b
 14681  005F2A  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14682  005F2C  5181               	movf	strlen@cp& (0+255),w,b
 14683  005F2E  257F               	addwf	??_strlen& (0+255),w,b
 14684  005F30  6F7D               	movwf	?_strlen& (0+255),b
 14685  005F32  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14686  005F34  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14687  005F36  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14688  005F38  0012               	return	
 14689  005F3A                     __end_of_strlen:
 14690                           	opt stack 0
 14691                           tosu	equ	0xFFF
 14692                           tosh	equ	0xFFE
 14693                           tosl	equ	0xFFD
 14694                           pclath	equ	0xFFA
 14695                           tblptru	equ	0xFF8
 14696                           tblptrh	equ	0xFF7
 14697                           tblptrl	equ	0xFF6
 14698                           tablat	equ	0xFF5
 14699                           prodh	equ	0xFF4
 14700                           prodl	equ	0xFF3
 14701                           intcon	equ	0xFF2
 14702                           intcon2	equ	0xFF1
 14703                           intcon3	equ	0xFF0
 14704                           indf0	equ	0xFEF
 14705                           postinc0	equ	0xFEE
 14706                           plusw0	equ	0xFEB
 14707                           fsr0h	equ	0xFEA
 14708                           fsr0l	equ	0xFE9
 14709                           wreg	equ	0xFE8
 14710                           indf1	equ	0xFE7
 14711                           postinc1	equ	0xFE6
 14712                           postdec1	equ	0xFE5
 14713                           fsr1h	equ	0xFE2
 14714                           fsr1l	equ	0xFE1
 14715                           indf2	equ	0xFDF
 14716                           postinc2	equ	0xFDE
 14717                           postdec2	equ	0xFDD
 14718                           plusw2	equ	0xFDB
 14719                           fsr2h	equ	0xFDA
 14720                           fsr2l	equ	0xFD9
 14721                           status	equ	0xFD8
 14722                           
 14723 ;; *************** function _strcat *****************
 14724 ;; Defined at:
 14725 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14726 ;; Parameters:    Size  Location     Type
 14727 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14728 ;;		 -> Term_MainSm@Data(50), 
 14729 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14730 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14731 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14732 ;; Auto vars:     Size  Location     Type
 14733 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14734 ;;		 -> Term_MainSm@Data(50), 
 14735 ;; Return value:  Size  Location     Type
 14736 ;;                  2   29[BANK0 ] PTR unsigned char 
 14737 ;; Registers used:
 14738 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14739 ;; Tracked objects:
 14740 ;;		On entry : 0/0
 14741 ;;		On exit  : 0/0
 14742 ;;		Unchanged: 0/0
 14743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14744 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14745 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14747 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14748 ;;Total ram usage:        6 bytes
 14749 ;; Hardware stack levels used:    1
 14750 ;; Hardware stack levels required when called:   11
 14751 ;; This function calls:
 14752 ;;		Nothing
 14753 ;; This function is called by:
 14754 ;;		_Term_MainSm
 14755 ;; This function uses a non-reentrant model
 14756 ;;
 14757                           
 14758                           	psect	text57
 14759  005598                     __ptext57:
 14760                           	opt stack 0
 14761  005598                     _strcat:
 14762                           	opt stack 15
 14763                           
 14764                           ; BSR set to: 0
 14765                           ;incstack = 0
 14766  005598  C07D  F081         	movff	strcat@to,strcat@cp
 14767  00559C  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14768  0055A0  D003               	goto	l3409
 14769  0055A2  0100               	movlb	0	; () banked
 14770  0055A4  4B81               	infsnz	strcat@cp& (0+255),f,b
 14771  0055A6  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14772  0055A8                     l3409:
 14773                           
 14774                           ; BSR set to: 0
 14775  0055A8  C081  FFD9         	movff	strcat@cp,fsr2l
 14776  0055AC  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14777  0055B0  50DF               	movf	indf2,w,c
 14778  0055B2  B4D8               	btfsc	status,2,c
 14779  0055B4  D006               	goto	l3412
 14780  0055B6  D7F5               	goto	l3410
 14781  0055B8  0100               	movlb	0	; () banked
 14782  0055BA  4B81               	infsnz	strcat@cp& (0+255),f,b
 14783  0055BC  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14784  0055BE  4B7F               	infsnz	strcat@from& (0+255),f,b
 14785  0055C0  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14786  0055C2                     l3412:
 14787                           
 14788                           ; BSR set to: 0
 14789  0055C2  C07F  FFF6         	movff	strcat@from,tblptrl
 14790  0055C6  C080  FFF7         	movff	strcat@from+1,tblptrh
 14791  0055CA  6AF8               	clrf	tblptru,c
 14792  0055CC  C081  FFD9         	movff	strcat@cp,fsr2l
 14793  0055D0  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14794  0055D4  0E0E               	movlw	(high __ramtop+-1)
 14795  0055D6  64F7               	cpfsgt	tblptrh,c
 14796  0055D8  D003               	bra	u13847
 14797  0055DA  0008               	tblrd		*
 14798  0055DC  50F5               	movf	tablat,w,c
 14799  0055DE  D005               	bra	u13840
 14800  0055E0                     u13847:
 14801  0055E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 14802  0055E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 14803  0055E8  50EF               	movf	indf0,w,c
 14804  0055EA                     u13840:
 14805  0055EA  6EDF               	movwf	indf2,c
 14806  0055EC  50DF               	movf	indf2,w,c
 14807  0055EE  B4D8               	btfsc	status,2,c
 14808  0055F0  0012               	return	
 14809  0055F2  D7E2               	goto	l3413
 14810  0055F4                     __end_of_strcat:
 14811                           	opt stack 0
 14812                           tosu	equ	0xFFF
 14813                           tosh	equ	0xFFE
 14814                           tosl	equ	0xFFD
 14815                           pclath	equ	0xFFA
 14816                           tblptru	equ	0xFF8
 14817                           tblptrh	equ	0xFF7
 14818                           tblptrl	equ	0xFF6
 14819                           tablat	equ	0xFF5
 14820                           prodh	equ	0xFF4
 14821                           prodl	equ	0xFF3
 14822                           intcon	equ	0xFF2
 14823                           intcon2	equ	0xFF1
 14824                           intcon3	equ	0xFF0
 14825                           indf0	equ	0xFEF
 14826                           postinc0	equ	0xFEE
 14827                           plusw0	equ	0xFEB
 14828                           fsr0h	equ	0xFEA
 14829                           fsr0l	equ	0xFE9
 14830                           wreg	equ	0xFE8
 14831                           indf1	equ	0xFE7
 14832                           postinc1	equ	0xFE6
 14833                           postdec1	equ	0xFE5
 14834                           fsr1h	equ	0xFE2
 14835                           fsr1l	equ	0xFE1
 14836                           indf2	equ	0xFDF
 14837                           postinc2	equ	0xFDE
 14838                           postdec2	equ	0xFDD
 14839                           plusw2	equ	0xFDB
 14840                           fsr2h	equ	0xFDA
 14841                           fsr2l	equ	0xFD9
 14842                           status	equ	0xFD8
 14843                           
 14844 ;; *************** function _sprintf *****************
 14845 ;; Defined at:
 14846 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14847 ;; Parameters:    Size  Location     Type
 14848 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14849 ;;		 -> Term_MainSm@Data(50), 
 14850 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14851 ;;		 -> STR_27(17), 
 14852 ;; Auto vars:     Size  Location     Type
 14853 ;;  tmpval          4    0        struct .
 14854 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14855 ;;		 -> STR_33(7), STR_28(12), 
 14856 ;;  ap              2   36[BANK0 ] PTR void [1]
 14857 ;;		 -> ?_sprintf(2), 
 14858 ;;  len             2    0        unsigned int 
 14859 ;;  val             2    0        unsigned int 
 14860 ;;  c               1   38[BANK0 ] char 
 14861 ;;  flag            1   35[BANK0 ] unsigned char 
 14862 ;;  prec            1    0        char 
 14863 ;; Return value:  Size  Location     Type
 14864 ;;                  2   29[BANK0 ] int 
 14865 ;; Registers used:
 14866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14867 ;; Tracked objects:
 14868 ;;		On entry : 0/0
 14869 ;;		On exit  : 0/0
 14870 ;;		Unchanged: 0/0
 14871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14872 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14873 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14875 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14876 ;;Total ram usage:       12 bytes
 14877 ;; Hardware stack levels used:    1
 14878 ;; Hardware stack levels required when called:   11
 14879 ;; This function calls:
 14880 ;;		Nothing
 14881 ;; This function is called by:
 14882 ;;		_Term_MainSm
 14883 ;; This function uses a non-reentrant model
 14884 ;;
 14885                           
 14886                           	psect	text58
 14887  003AA6                     __ptext58:
 14888                           	opt stack 0
 14889  003AA6                     _sprintf:
 14890                           	opt stack 15
 14891                           
 14892                           ;doprnt.c: 494: va_list ap;
 14893                           ;doprnt.c: 499: signed char c;
 14894                           ;doprnt.c: 506: signed char prec;
 14895                           ;doprnt.c: 508: unsigned char flag;
 14896                           ;doprnt.c: 523: union {
 14897                           ;doprnt.c: 524: unsigned long vd;
 14898                           ;doprnt.c: 525: double integ;
 14899                           ;doprnt.c: 526: } tmpval;
 14900                           ;doprnt.c: 528: unsigned int val;
 14901                           ;doprnt.c: 529: unsigned len;
 14902                           ;doprnt.c: 530: const char * cp;
 14903                           ;doprnt.c: 533: *ap = __va_start();
 14904                           
 14905                           ;incstack = 0
 14906  003AA6  0E81               	movlw	low (?_sprintf+4)
 14907  003AA8  0100               	movlb	0	; () banked
 14908  003AAA  6F84               	movwf	sprintf@ap& (0+255),b
 14909  003AAC  0E00               	movlw	high (?_sprintf+4)
 14910  003AAE  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14911                           
 14912                           ;doprnt.c: 536: while(c = *f++) {
 14913  003AB0  D04E               	goto	l2813
 14914  003AB2                     
 14915                           ; BSR set to: 0
 14916                           ;doprnt.c: 538: if(c != '%')
 14917                           
 14918                           ; BSR set to: 0
 14919  003AB2  0E25               	movlw	37
 14920  003AB4  1986               	xorwf	sprintf@c& (0+255),w,b
 14921  003AB6  B4D8               	btfsc	status,2,c
 14922  003AB8  D009               	goto	l2803
 14923                           
 14924                           ; BSR set to: 0
 14925                           ;doprnt.c: 540: {
 14926                           ;doprnt.c: 541: ((*sp++ = (c)));
 14927  003ABA  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14928  003ABE  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14929  003AC2  C086  FFDF         	movff	sprintf@c,indf2
 14930                           
 14931                           ; BSR set to: 0
 14932  003AC6  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14933  003AC8  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14934                           
 14935                           ;doprnt.c: 542: continue;
 14936  003ACA  D041               	goto	l2813
 14937  003ACC                     l2803:
 14938                           
 14939                           ; BSR set to: 0
 14940                           ;doprnt.c: 543: }
 14941                           ;doprnt.c: 548: flag = 0;
 14942                           
 14943                           ; BSR set to: 0
 14944  003ACC  0E00               	movlw	0
 14945  003ACE  6F83               	movwf	sprintf@flag& (0+255),b
 14946                           
 14947                           ;doprnt.c: 635: switch(c = *f++) {
 14948  003AD0  D02E               	goto	l2804
 14949  003AD2                     
 14950                           ; BSR set to: 0
 14951                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14952                           
 14953                           ; BSR set to: 0
 14954  003AD2  C084  FFD9         	movff	sprintf@ap,fsr2l
 14955  003AD6  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14956  003ADA  CFDE F087          	movff	postinc2,sprintf@cp
 14957  003ADE  CFDD F088          	movff	postdec2,sprintf@cp+1
 14958                           
 14959                           ; BSR set to: 0
 14960  003AE2  0E02               	movlw	2
 14961  003AE4  2784               	addwf	sprintf@ap& (0+255),f,b
 14962  003AE6  0E00               	movlw	0
 14963  003AE8  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14964                           
 14965                           ; BSR set to: 0
 14966                           ;doprnt.c: 740: if(!cp)
 14967  003AEA  5187               	movf	sprintf@cp& (0+255),w,b
 14968  003AEC  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14969  003AEE  A4D8               	btfss	status,2,c
 14970  003AF0  D014               	goto	l2809
 14971                           
 14972                           ; BSR set to: 0
 14973                           ;doprnt.c: 741: cp = "(null)";
 14974  003AF2  0ED8               	movlw	low STR_33
 14975  003AF4  6F87               	movwf	sprintf@cp& (0+255),b
 14976  003AF6  0EFF               	movlw	high STR_33
 14977  003AF8  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14978                           
 14979                           ; BSR set to: 0
 14980                           ;doprnt.c: 777: while(*cp)
 14981  003AFA  D00F               	goto	l2809
 14982  003AFC                     
 14983                           ; BSR set to: 0
 14984                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14985                           
 14986                           ; BSR set to: 0
 14987  003AFC  C087  FFF6         	movff	sprintf@cp,tblptrl
 14988  003B00  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14989  003B04                     	if	0	;tblptru may be non-zero
 14990  003B04                     	endif
 14991  003B04                     	if	0	;tblptru may be non-zero
 14992  003B04                     	endif
 14993  003B04  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14994  003B08  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14995  003B0C  0008               	tblrd		*
 14996  003B0E  CFF5 FFDF          	movff	tablat,indf2
 14997                           
 14998                           ; BSR set to: 0
 14999  003B12  4B87               	infsnz	sprintf@cp& (0+255),f,b
 15000  003B14  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 15001                           
 15002                           ; BSR set to: 0
 15003  003B16  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 15004  003B18  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 15005  003B1A                     l2809:
 15006                           
 15007                           ; BSR set to: 0
 15008                           
 15009                           ; BSR set to: 0
 15010  003B1A  C087  FFF6         	movff	sprintf@cp,tblptrl
 15011  003B1E  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 15012  003B22                     	if	0	;tblptru may be non-zero
 15013  003B22                     	endif
 15014  003B22                     	if	0	;tblptru may be non-zero
 15015  003B22                     	endif
 15016  003B22  0008               	tblrd		*
 15017  003B24  50F5               	movf	tablat,w,c
 15018  003B26  0900               	iorlw	0
 15019  003B28  B4D8               	btfsc	status,2,c
 15020  003B2A  D011               	goto	l2813
 15021  003B2C  D7E7               	goto	l2810
 15022  003B2E                     l2804:
 15023                           
 15024                           ; BSR set to: 0
 15025                           
 15026                           ; BSR set to: 0
 15027  003B2E  C07F  FFF6         	movff	sprintf@f,tblptrl
 15028  003B32  C080  FFF7         	movff	sprintf@f+1,tblptrh
 15029  003B36  4B7F               	infsnz	sprintf@f& (0+255),f,b
 15030  003B38  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 15031  003B3A                     	if	0	;tblptru may be non-zero
 15032  003B3A                     	endif
 15033  003B3A                     	if	0	;tblptru may be non-zero
 15034  003B3A                     	endif
 15035  003B3A  0008               	tblrd		*
 15036  003B3C  CFF5 F086          	movff	tablat,sprintf@c
 15037  003B40  5186               	movf	sprintf@c& (0+255),w,b
 15038                           
 15039                           ; Switch size 1, requested type "space"
 15040                           ; Number of cases is 2, Range of values is 0 to 115
 15041                           ; switch strategies available:
 15042                           ; Name         Instructions Cycles
 15043                           ; simple_byte            7     4 (average)
 15044                           ;	Chosen strategy is simple_byte
 15045  003B42  0A00               	xorlw	0	; case 0
 15046  003B44  B4D8               	btfsc	status,2,c
 15047  003B46  D00F               	goto	u13900
 15048  003B48  0A73               	xorlw	115	; case 115
 15049  003B4A  B4D8               	btfsc	status,2,c
 15050  003B4C  D7C2               	goto	l2807
 15051  003B4E                     l2813:
 15052                           
 15053                           ; BSR set to: 0
 15054                           
 15055                           ; BSR set to: 0
 15056                           
 15057                           ;doprnt.c: 1422: {
 15058                           
 15059                           ; BSR set to: 0
 15060  003B4E  C07F  FFF6         	movff	sprintf@f,tblptrl
 15061  003B52  C080  FFF7         	movff	sprintf@f+1,tblptrh
 15062  003B56  4B7F               	infsnz	sprintf@f& (0+255),f,b
 15063  003B58  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 15064  003B5A                     	if	0	;tblptru may be non-zero
 15065  003B5A                     	endif
 15066  003B5A                     	if	0	;tblptru may be non-zero
 15067  003B5A                     	endif
 15068  003B5A  0008               	tblrd		*
 15069  003B5C  CFF5 F086          	movff	tablat,sprintf@c
 15070  003B60  5186               	movf	sprintf@c& (0+255),w,b
 15071  003B62  A4D8               	btfss	status,2,c
 15072  003B64  D7A6               	goto	l2802
 15073  003B66                     u13900:
 15074                           
 15075                           ; BSR set to: 0
 15076                           ;doprnt.c: 1538: *sp = 0;
 15077                           
 15078                           ; BSR set to: 0
 15079                           
 15080                           ;doprnt.c: 1469: }
 15081                           ;doprnt.c: 1533: }
 15082                           ;doprnt.c: 1535: alldone:
 15083                           
 15084                           ; BSR set to: 0
 15085  003B66  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15086  003B6A  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15087  003B6E  0E00               	movlw	0
 15088  003B70  6EDF               	movwf	indf2,c
 15089  003B72  0012               	return	
 15090  003B74                     __end_of_sprintf:
 15091                           	opt stack 0
 15092                           tosu	equ	0xFFF
 15093                           tosh	equ	0xFFE
 15094                           tosl	equ	0xFFD
 15095                           pclath	equ	0xFFA
 15096                           tblptru	equ	0xFF8
 15097                           tblptrh	equ	0xFF7
 15098                           tblptrl	equ	0xFF6
 15099                           tablat	equ	0xFF5
 15100                           prodh	equ	0xFF4
 15101                           prodl	equ	0xFF3
 15102                           intcon	equ	0xFF2
 15103                           intcon2	equ	0xFF1
 15104                           intcon3	equ	0xFF0
 15105                           indf0	equ	0xFEF
 15106                           postinc0	equ	0xFEE
 15107                           plusw0	equ	0xFEB
 15108                           fsr0h	equ	0xFEA
 15109                           fsr0l	equ	0xFE9
 15110                           wreg	equ	0xFE8
 15111                           indf1	equ	0xFE7
 15112                           postinc1	equ	0xFE6
 15113                           postdec1	equ	0xFE5
 15114                           fsr1h	equ	0xFE2
 15115                           fsr1l	equ	0xFE1
 15116                           indf2	equ	0xFDF
 15117                           postinc2	equ	0xFDE
 15118                           postdec2	equ	0xFDD
 15119                           plusw2	equ	0xFDB
 15120                           fsr2h	equ	0xFDA
 15121                           fsr2l	equ	0xFD9
 15122                           status	equ	0xFD8
 15123                           
 15124 ;; *************** function _memset *****************
 15125 ;; Defined at:
 15126 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 15127 ;; Parameters:    Size  Location     Type
 15128 ;;  p1              2   29[BANK0 ] PTR void 
 15129 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15130 ;;  c               2   31[BANK0 ] int 
 15131 ;;  n               2   33[BANK0 ] unsigned int 
 15132 ;; Auto vars:     Size  Location     Type
 15133 ;;  p               2   35[BANK0 ] PTR unsigned char 
 15134 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15135 ;; Return value:  Size  Location     Type
 15136 ;;                  2   29[BANK0 ] PTR void 
 15137 ;; Registers used:
 15138 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15139 ;; Tracked objects:
 15140 ;;		On entry : 0/0
 15141 ;;		On exit  : 0/0
 15142 ;;		Unchanged: 0/0
 15143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15144 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15145 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15147 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15148 ;;Total ram usage:        8 bytes
 15149 ;; Hardware stack levels used:    1
 15150 ;; Hardware stack levels required when called:   11
 15151 ;; This function calls:
 15152 ;;		Nothing
 15153 ;; This function is called by:
 15154 ;;		_USBDeviceInit
 15155 ;;		_USBStdSetCfgHandler
 15156 ;;		_Term_MainSm
 15157 ;; This function uses a non-reentrant model
 15158 ;;
 15159                           
 15160                           	psect	text59
 15161  00619A                     __ptext59:
 15162                           	opt stack 0
 15163  00619A                     _memset:
 15164                           	opt stack 14
 15165                           
 15166                           ; BSR set to: 0
 15167                           ;incstack = 0
 15168  00619A  C07D  F083         	movff	memset@p1,memset@p
 15169  00619E  C07E  F084         	movff	memset@p1+1,memset@p+1
 15170  0061A2  D009               	goto	l3283
 15171  0061A4                     l12508:
 15172  0061A4  C083  FFD9         	movff	memset@p,fsr2l
 15173  0061A8  C084  FFDA         	movff	memset@p+1,fsr2h
 15174  0061AC  C07F  FFDF         	movff	memset@c,indf2
 15175  0061B0  0100               	movlb	0	; () banked
 15176  0061B2  4B83               	infsnz	memset@p& (0+255),f,b
 15177  0061B4  2B84               	incf	(memset@p+1)& (0+255),f,b
 15178  0061B6                     l3283:
 15179                           
 15180                           ; BSR set to: 0
 15181  0061B6  0100               	movlb	0	; () banked
 15182  0061B8  0781               	decf	memset@n& (0+255),f,b
 15183  0061BA  A0D8               	btfss	status,0,c
 15184  0061BC  0782               	decf	(memset@n+1)& (0+255),f,b
 15185  0061BE  2981               	incf	memset@n& (0+255),w,b
 15186  0061C0  E1F1               	bnz	l12508
 15187  0061C2  2982               	incf	(memset@n+1)& (0+255),w,b
 15188  0061C4  B4D8               	btfsc	status,2,c
 15189  0061C6  0012               	return	
 15190  0061C8  D7ED               	goto	l3284
 15191  0061CA                     __end_of_memset:
 15192                           	opt stack 0
 15193                           tosu	equ	0xFFF
 15194                           tosh	equ	0xFFE
 15195                           tosl	equ	0xFFD
 15196                           pclath	equ	0xFFA
 15197                           tblptru	equ	0xFF8
 15198                           tblptrh	equ	0xFF7
 15199                           tblptrl	equ	0xFF6
 15200                           tablat	equ	0xFF5
 15201                           prodh	equ	0xFF4
 15202                           prodl	equ	0xFF3
 15203                           intcon	equ	0xFF2
 15204                           intcon2	equ	0xFF1
 15205                           intcon3	equ	0xFF0
 15206                           indf0	equ	0xFEF
 15207                           postinc0	equ	0xFEE
 15208                           plusw0	equ	0xFEB
 15209                           fsr0h	equ	0xFEA
 15210                           fsr0l	equ	0xFE9
 15211                           wreg	equ	0xFE8
 15212                           indf1	equ	0xFE7
 15213                           postinc1	equ	0xFE6
 15214                           postdec1	equ	0xFE5
 15215                           fsr1h	equ	0xFE2
 15216                           fsr1l	equ	0xFE1
 15217                           indf2	equ	0xFDF
 15218                           postinc2	equ	0xFDE
 15219                           postdec2	equ	0xFDD
 15220                           plusw2	equ	0xFDB
 15221                           fsr2h	equ	0xFDA
 15222                           fsr2l	equ	0xFD9
 15223                           status	equ	0xFD8
 15224                           
 15225 ;; *************** function _Terminal *****************
 15226 ;; Defined at:
 15227 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 15228 ;; Parameters:    Size  Location     Type
 15229 ;;		None
 15230 ;; Auto vars:     Size  Location     Type
 15231 ;;  i               1   68[BANK0 ] unsigned char 
 15232 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 15233 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 15234 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 15235 ;;  Index           1   70[BANK0 ] unsigned char 
 15236 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 15237 ;; Return value:  Size  Location     Type
 15238 ;;                  1    wreg      void 
 15239 ;; Registers used:
 15240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15241 ;; Tracked objects:
 15242 ;;		On entry : 0/0
 15243 ;;		On exit  : 0/0
 15244 ;;		Unchanged: 0/0
 15245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15247 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15248 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15249 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15250 ;;Total ram usage:      455 bytes
 15251 ;; Hardware stack levels used:    1
 15252 ;; Hardware stack levels required when called:   15
 15253 ;; This function calls:
 15254 ;;		_I2cSlv_I2cReadMsgSts
 15255 ;;		_I2cSlv_ReceiveI2cMsg
 15256 ;;		_I2cSlv_SendI2cMsg
 15257 ;;		_OsTmr_Wait
 15258 ;;		_atoi
 15259 ;;		_getsUSBUSART
 15260 ;;		_itoa
 15261 ;;		_putUSBUSART
 15262 ;;		_strcpy
 15263 ;;		_strtol
 15264 ;;		_xtoi
 15265 ;; This function is called by:
 15266 ;;		_Term_MainSm
 15267 ;; This function uses a non-reentrant model
 15268 ;;
 15269                           
 15270                           	psect	text60
 15271  0000D0                     __ptext60:
 15272                           	opt stack 0
 15273  0000D0                     _Terminal:
 15274                           	opt stack 11
 15275                           
 15276                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 15277                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 15278                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 15279                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 15280                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 15281                           ;term.c: 435: UINT8 Index;
 15282                           ;term.c: 436: static UINT8 Len[4];
 15283                           ;term.c: 437: static UINT8 PackageLen;
 15284                           ;term.c: 438: static UINT8 Addr[4];
 15285                           ;term.c: 439: static UINT8 SlaveAddr;
 15286                           ;term.c: 440: static PayloadType Payload[20u];
 15287                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 15288                           
 15289                           ; BSR set to: 0
 15290                           ;incstack = 0
 15291  0000D0  0E00               	movlw	0
 15292  0000D2  0100               	movlb	0	; () banked
 15293  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15294                           
 15295                           ; BSR set to: 0
 15296                           ;term.c: 443: static UINT8 FormatOption = 0u;
 15297                           ;term.c: 444: static UINT8 EchoOption = 1u;
 15298                           ;term.c: 445: static SwTimerType SwTimer;
 15299                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15300  0000D6  0E1F               	movlw	31
 15301  0000D8  65CD               	cpfsgt	_USBDeviceState& (0+255),b
 15302  0000DA  0012               	return	
 15303                           
 15304                           ; BSR set to: 0
 15305  0000DC  B265               	btfsc	3941,1,c	;volatile
 15306  0000DE  0012               	return	
 15307  0000E0  D278               	goto	l2393
 15308  0000E2                     
 15309                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15310                           
 15311                           ; BSR set to: 0
 15312  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15313  0000E4  0100               	movlb	0	; () banked
 15314  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15315  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15316  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15317  0000EC  0EC8               	movlw	200
 15318  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15319  0000F0  ECC4  F024         	call	_getsUSBUSART	;wreg free
 15320  0000F4  0100               	movlb	0	; () banked
 15321  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15322                           
 15323                           ; BSR set to: 0
 15324                           ;term.c: 458: if (ReceivedBytes > 0)
 15325  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15326  0000FA  B4D8               	btfsc	status,2,c
 15327  0000FC  0012               	return	
 15328                           
 15329                           ; BSR set to: 0
 15330                           ;term.c: 459: {
 15331                           ;term.c: 461: if (EchoOption == 1u)
 15332  0000FE  0102               	movlb	2	; () banked
 15333  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 15334  000102  A4D8               	btfss	status,2,c
 15335  000104  D026               	goto	l2397
 15336                           
 15337                           ; BSR set to: 2
 15338                           ;term.c: 462: {
 15339                           ;term.c: 464: if((cdc_trf_state == 0))
 15340  000106  0100               	movlb	0	; () banked
 15341  000108  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15342  00010A  A4D8               	btfss	status,2,c
 15343  00010C  D022               	goto	l2397
 15344                           
 15345                           ; BSR set to: 0
 15346                           ;term.c: 465: {
 15347                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15348  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15349  000110  0D01               	mullw	1
 15350  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15351  000114  24F3               	addwf	prodl,w,c
 15352  000116  6ED9               	movwf	fsr2l,c
 15353  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15354  00011A  20F4               	addwfc	prodh,w,c
 15355  00011C  6EDA               	movwf	fsr2h,c
 15356  00011E  0E0D               	movlw	13
 15357  000120  6EDF               	movwf	indf2,c
 15358                           
 15359                           ; BSR set to: 0
 15360                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15361  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15362  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15363  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15364  000128  0E01               	movlw	1
 15365  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15366  00012C  0E00               	movlw	0
 15367  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15368  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15369  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15370  000134  6ED9               	movwf	fsr2l,c
 15371  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15372  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15373  00013A  6EDA               	movwf	fsr2h,c
 15374  00013C  0E0A               	movlw	10
 15375  00013E  6EDF               	movwf	indf2,c
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15379  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15380  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15381  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15382  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15383  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15384  00014A  0F02               	addlw	2
 15385  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15386  00014E  EC38  F032         	call	_putUSBUSART	;wreg free
 15387  000152                     l2397:
 15388                           
 15389                           ;term.c: 469: }
 15390                           ;term.c: 470: }
 15391                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15392                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15393                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15394  000152  0E53               	movlw	83
 15395  000154  010A               	movlb	10	; () banked
 15396  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15397  000158  A4D8               	btfss	status,2,c
 15398  00015A  D043               	goto	l2398
 15399                           
 15400                           ; BSR set to: 10
 15401  00015C  0E4F               	movlw	79
 15402  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15403  000160  A4D8               	btfss	status,2,c
 15404  000162  D03F               	goto	l2398
 15405                           
 15406                           ; BSR set to: 10
 15407  000164  0E3A               	movlw	58
 15408  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15409  000168  A4D8               	btfss	status,2,c
 15410  00016A  D03B               	goto	l2398
 15411                           
 15412                           ; BSR set to: 10
 15413                           ;term.c: 476: {
 15414                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15415  00016C  0E47               	movlw	71
 15416  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15417  000170  A4D8               	btfss	status,2,c
 15418  000172  0012               	return	
 15419                           
 15420                           ; BSR set to: 10
 15421  000174  0E3A               	movlw	58
 15422  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15423  000178  A4D8               	btfss	status,2,c
 15424  00017A  0012               	return	
 15425                           
 15426                           ; BSR set to: 10
 15427                           ;term.c: 479: {
 15428                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15429  00017C  0E44               	movlw	68
 15430  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15431  000180  A4D8               	btfss	status,2,c
 15432  000182  D015               	goto	l2400
 15433                           
 15434                           ; BSR set to: 10
 15435  000184  0E46               	movlw	70
 15436  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15437  000188  A4D8               	btfss	status,2,c
 15438  00018A  D011               	goto	l2400
 15439                           
 15440                           ; BSR set to: 10
 15441                           ;term.c: 482: {
 15442                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15443  00018C  0E41               	movlw	65
 15444  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15445  000190  A4D8               	btfss	status,2,c
 15446  000192  D004               	goto	l2401
 15447                           
 15448                           ; BSR set to: 10
 15449                           ;term.c: 484: {
 15450                           ;term.c: 485: FormatOption = 1u;
 15451  000194  0E01               	movlw	1
 15452  000196  0102               	movlb	2	; () banked
 15453  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15454                           
 15455                           ;term.c: 486: }
 15456  00019A  0012               	return	
 15457  00019C                     l2401:
 15458                           
 15459                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15460                           
 15461                           ; BSR set to: 2
 15462  00019C  0E42               	movlw	66
 15463  00019E  010A               	movlb	10	; () banked
 15464  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15465  0001A2  A4D8               	btfss	status,2,c
 15466  0001A4  0012               	return	
 15467                           
 15468                           ; BSR set to: 10
 15469                           ;term.c: 488: {
 15470                           ;term.c: 489: FormatOption = 0u;
 15471  0001A6  0E00               	movlw	0
 15472  0001A8  0102               	movlb	2	; () banked
 15473  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15474                           
 15475                           ; BSR set to: 2
 15476                           ;term.c: 490: }
 15477                           ;term.c: 491: }
 15478                           
 15479                           ; BSR set to: 2
 15480  0001AC  0012               	return	
 15481  0001AE                     l2400:
 15482                           
 15483                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15484                           
 15485                           ; BSR set to: 2
 15486  0001AE  0E45               	movlw	69
 15487  0001B0  010A               	movlb	10	; () banked
 15488  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15489  0001B4  A4D8               	btfss	status,2,c
 15490  0001B6  0012               	return	
 15491                           
 15492                           ; BSR set to: 10
 15493  0001B8  0E4D               	movlw	77
 15494  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15495  0001BC  A4D8               	btfss	status,2,c
 15496  0001BE  0012               	return	
 15497                           
 15498                           ; BSR set to: 10
 15499                           ;term.c: 494: {
 15500                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15501  0001C0  0E31               	movlw	49
 15502  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15503  0001C4  A4D8               	btfss	status,2,c
 15504  0001C6  D004               	goto	l2406
 15505                           
 15506                           ; BSR set to: 10
 15507                           ;term.c: 496: {
 15508                           ;term.c: 497: EchoOption = 1u;
 15509  0001C8  0E01               	movlw	1
 15510  0001CA  0102               	movlb	2	; () banked
 15511  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15512                           
 15513                           ;term.c: 498: }
 15514  0001CE  0012               	return	
 15515  0001D0                     l2406:
 15516                           
 15517                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15518                           
 15519                           ; BSR set to: 2
 15520  0001D0  0E30               	movlw	48
 15521  0001D2  010A               	movlb	10	; () banked
 15522  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15523  0001D6  A4D8               	btfss	status,2,c
 15524  0001D8  0012               	return	
 15525                           
 15526                           ; BSR set to: 10
 15527                           ;term.c: 500: {
 15528                           ;term.c: 501: EchoOption = 0u;
 15529  0001DA  0E00               	movlw	0
 15530  0001DC  0102               	movlb	2	; () banked
 15531  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15532                           
 15533                           ; BSR set to: 2
 15534                           ;term.c: 507: }
 15535                           ;term.c: 508: }
 15536                           ;term.c: 509: }
 15537                           
 15538                           ; BSR set to: 2
 15539                           
 15540                           ; BSR set to: 2
 15541                           
 15542                           ;term.c: 504: else
 15543                           ;term.c: 505: {
 15544                           
 15545                           ; BSR set to: 2
 15546                           
 15547                           ; BSR set to: 2
 15548                           ;term.c: 502: }
 15549                           ;term.c: 503: }
 15550                           
 15551                           ; BSR set to: 2
 15552  0001E0  0012               	return	
 15553  0001E2                     l2398:
 15554                           
 15555                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15556                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15557                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15558                           
 15559                           ; BSR set to: 2
 15560  0001E2  0E53               	movlw	83
 15561  0001E4  010A               	movlb	10	; () banked
 15562  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15563  0001E8  A4D8               	btfss	status,2,c
 15564  0001EA  D0D3               	goto	l2411
 15565                           
 15566                           ; BSR set to: 10
 15567  0001EC  0E42               	movlw	66
 15568  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15569  0001F0  A4D8               	btfss	status,2,c
 15570  0001F2  D0CF               	goto	l2411
 15571                           
 15572                           ; BSR set to: 10
 15573  0001F4  0E3A               	movlw	58
 15574  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15575  0001F8  A4D8               	btfss	status,2,c
 15576  0001FA  D0CB               	goto	l2411
 15577                           
 15578                           ; BSR set to: 10
 15579                           ;term.c: 513: {
 15580                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15581  0001FC  0E57               	movlw	87
 15582  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15583  000200  A4D8               	btfss	status,2,c
 15584  000202  D091               	goto	l2412
 15585                           
 15586                           ; BSR set to: 10
 15587  000204  0E3A               	movlw	58
 15588  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15589  000208  A4D8               	btfss	status,2,c
 15590  00020A  D08D               	goto	l2412
 15591                           
 15592                           ; BSR set to: 10
 15593                           ;term.c: 515: {
 15594                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15595  00020C  CA05  F3A7         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15596                           
 15597                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15598  000210  CA06  F3A8         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15599                           
 15600                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15601  000214  CA08  F3A3         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15602                           
 15603                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15604  000218  CA09  F3A4         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15605                           
 15606                           ; BSR set to: 10
 15607                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15608  00021C  0EA7               	movlw	low Terminal@Len
 15609  00021E  0100               	movlb	0	; () banked
 15610  000220  6F83               	movwf	atoi@s& (0+255),b
 15611  000222  0E03               	movlw	high Terminal@Len
 15612  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15613  000226  EC7E  F01C         	call	_atoi	;wreg free
 15614  00022A  0100               	movlb	0	; () banked
 15615  00022C  5183               	movf	?_atoi& (0+255),w,b
 15616  00022E  0102               	movlb	2	; () banked
 15617  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15618                           
 15619                           ; BSR set to: 2
 15620                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15621  000232  0EA3               	movlw	low Terminal@Addr
 15622  000234  0100               	movlb	0	; () banked
 15623  000236  6F83               	movwf	xtoi@s& (0+255),b
 15624  000238  0E03               	movlw	high Terminal@Addr
 15625  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15626  00023C  ECBF  F01A         	call	_xtoi	;wreg free
 15627  000240  0100               	movlb	0	; () banked
 15628  000242  5183               	movf	?_xtoi& (0+255),w,b
 15629  000244  0102               	movlb	2	; () banked
 15630  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15631                           
 15632                           ; BSR set to: 2
 15633                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15634  000248  0E00               	movlw	0
 15635  00024A  0100               	movlb	0	; () banked
 15636  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15637  00024E  D032               	goto	l2413
 15638  000250                     
 15639                           ;term.c: 527: {
 15640                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15641                           
 15642                           ; BSR set to: 0
 15643  000250  0100               	movlb	0	; () banked
 15644  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15645  000254  0D02               	mullw	2
 15646  000256  0E0B               	movlw	11
 15647  000258  26F3               	addwf	prodl,f,c
 15648  00025A  0E00               	movlw	0
 15649  00025C  22F4               	addwfc	prodh,f,c
 15650  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15651  000260  24F3               	addwf	prodl,w,c
 15652  000262  6ED9               	movwf	fsr2l,c
 15653  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15654  000266  20F4               	addwfc	prodh,w,c
 15655  000268  6EDA               	movwf	fsr2h,c
 15656  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15657  00026C  0D04               	mullw	4
 15658  00026E  0E66               	movlw	low Terminal@Payload
 15659  000270  24F3               	addwf	prodl,w,c
 15660  000272  6EE1               	movwf	fsr1l,c
 15661  000274  0E07               	movlw	high Terminal@Payload
 15662  000276  20F4               	addwfc	prodh,w,c
 15663  000278  6EE2               	movwf	fsr1h,c
 15664  00027A  CFDF FFE7          	movff	indf2,indf1
 15665                           
 15666                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15667  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15668  000280  0D02               	mullw	2
 15669  000282  0E0C               	movlw	12
 15670  000284  26F3               	addwf	prodl,f,c
 15671  000286  0E00               	movlw	0
 15672  000288  22F4               	addwfc	prodh,f,c
 15673  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15674  00028C  24F3               	addwf	prodl,w,c
 15675  00028E  6ED9               	movwf	fsr2l,c
 15676  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15677  000292  20F4               	addwfc	prodh,w,c
 15678  000294  6EDA               	movwf	fsr2h,c
 15679  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15680  000298  0D04               	mullw	4
 15681  00029A  0E01               	movlw	1
 15682  00029C  26F3               	addwf	prodl,f,c
 15683  00029E  0E00               	movlw	0
 15684  0002A0  22F4               	addwfc	prodh,f,c
 15685  0002A2  0E66               	movlw	low Terminal@Payload
 15686  0002A4  24F3               	addwf	prodl,w,c
 15687  0002A6  6EE1               	movwf	fsr1l,c
 15688  0002A8  0E07               	movlw	high Terminal@Payload
 15689  0002AA  20F4               	addwfc	prodh,w,c
 15690  0002AC  6EE2               	movwf	fsr1h,c
 15691  0002AE  CFDF FFE7          	movff	indf2,indf1
 15692                           
 15693                           ; BSR set to: 0
 15694  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15695  0002B4                     l2413:
 15696                           
 15697                           ; BSR set to: 0
 15698                           
 15699                           ; BSR set to: 0
 15700  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15701  0002B6  0102               	movlb	2	; () banked
 15702  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15703  0002BA  B0D8               	btfsc	status,0,c
 15704  0002BC  D7C9               	goto	l2414
 15705                           
 15706                           ; BSR set to: 2
 15707                           ;term.c: 530: }
 15708                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15709                           
 15710                           ; BSR set to: 2
 15711  0002BE  0E00               	movlw	0
 15712  0002C0  0100               	movlb	0	; () banked
 15713  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15714  0002C4  D01F               	goto	l2416
 15715  0002C6                     
 15716                           ;term.c: 533: {
 15717                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15718                           
 15719                           ; BSR set to: 0
 15720  0002C6  0100               	movlb	0	; () banked
 15721  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15722  0002CA  0D04               	mullw	4
 15723  0002CC  0E66               	movlw	low Terminal@Payload
 15724  0002CE  24F3               	addwf	prodl,w,c
 15725  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15726  0002D2  0E07               	movlw	high Terminal@Payload
 15727  0002D4  20F4               	addwfc	prodh,w,c
 15728  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15729  0002D8  0E00               	movlw	0
 15730  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15731  0002DC  0E00               	movlw	0
 15732  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15733  0002E0  0E00               	movlw	0
 15734  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15735  0002E4  0E10               	movlw	16
 15736  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15737  0002E8  EC50  F00D         	call	_strtol	;wreg free
 15738  0002EC  0100               	movlb	0	; () banked
 15739  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15740  0002F0  0D01               	mullw	1
 15741  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15742  0002F4  24F3               	addwf	prodl,w,c
 15743  0002F6  6ED9               	movwf	fsr2l,c
 15744  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15745  0002FA  20F4               	addwfc	prodh,w,c
 15746  0002FC  6EDA               	movwf	fsr2h,c
 15747  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15748                           
 15749                           ; BSR set to: 0
 15750  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15751  000304                     l2416:
 15752                           
 15753                           ; BSR set to: 0
 15754                           
 15755                           ; BSR set to: 0
 15756  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15757  000306  0102               	movlb	2	; () banked
 15758  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15759  00030A  B0D8               	btfsc	status,0,c
 15760  00030C  D7DC               	goto	l2417
 15761                           
 15762                           ; BSR set to: 2
 15763                           ;term.c: 539: }
 15764                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15765                           
 15766                           ; BSR set to: 2
 15767  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15768  000310  0100               	movlb	0	; () banked
 15769  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15770  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15771  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15772  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15773  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15774  000320  EC9D  F02F         	call	_I2cSlv_SendI2cMsg	;wreg free
 15775                           
 15776                           ;term.c: 543: }
 15777  000324  0012               	return	
 15778  000326                     l2412:
 15779                           
 15780                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15781  000326  0E52               	movlw	82
 15782  000328  010A               	movlb	10	; () banked
 15783  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15784  00032C  A4D8               	btfss	status,2,c
 15785  00032E  0012               	return	
 15786                           
 15787                           ; BSR set to: 10
 15788  000330  0E3A               	movlw	58
 15789  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15790  000334  A4D8               	btfss	status,2,c
 15791  000336  0012               	return	
 15792                           
 15793                           ; BSR set to: 10
 15794                           ;term.c: 545: {
 15795                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15796  000338  CA05  F3A7         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15797                           
 15798                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15799  00033C  CA06  F3A8         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15800                           
 15801                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15802  000340  CA08  F3A3         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15803                           
 15804                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15805  000344  CA09  F3A4         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15806                           
 15807                           ; BSR set to: 10
 15808                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15809  000348  0EA7               	movlw	low Terminal@Len
 15810  00034A  0100               	movlb	0	; () banked
 15811  00034C  6F83               	movwf	atoi@s& (0+255),b
 15812  00034E  0E03               	movlw	high Terminal@Len
 15813  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15814  000352  EC7E  F01C         	call	_atoi	;wreg free
 15815  000356  0100               	movlb	0	; () banked
 15816  000358  5183               	movf	?_atoi& (0+255),w,b
 15817  00035A  0102               	movlb	2	; () banked
 15818  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15819                           
 15820                           ; BSR set to: 2
 15821                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15822  00035E  0EA3               	movlw	low Terminal@Addr
 15823  000360  0100               	movlb	0	; () banked
 15824  000362  6F83               	movwf	xtoi@s& (0+255),b
 15825  000364  0E03               	movlw	high Terminal@Addr
 15826  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15827  000368  ECBF  F01A         	call	_xtoi	;wreg free
 15828  00036C  0100               	movlb	0	; () banked
 15829  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15830  000370  0102               	movlb	2	; () banked
 15831  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15832                           
 15833                           ; BSR set to: 2
 15834                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15835  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15836  000376  0100               	movlb	0	; () banked
 15837  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15838  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15839  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15840  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15841  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15842  000386  EC3E  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15843                           
 15844                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15845  00038A  0E01               	movlw	1
 15846  00038C  0102               	movlb	2	; () banked
 15847  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15848                           
 15849                           ; BSR set to: 2
 15850                           ;term.c: 561: }
 15851                           ;term.c: 562: }
 15852                           
 15853                           ; BSR set to: 2
 15854  000390  0012               	return	
 15855  000392                     l2411:
 15856                           
 15857                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15858                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15859                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15860                           
 15861                           ; BSR set to: 2
 15862  000392  0E54               	movlw	84
 15863  000394  010A               	movlb	10	; () banked
 15864  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15865  000398  A4D8               	btfss	status,2,c
 15866  00039A  0012               	return	
 15867                           
 15868                           ; BSR set to: 10
 15869  00039C  0E45               	movlw	69
 15870  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15871  0003A0  A4D8               	btfss	status,2,c
 15872  0003A2  0012               	return	
 15873                           
 15874                           ; BSR set to: 10
 15875  0003A4  0E4C               	movlw	76
 15876  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15877  0003A8  A4D8               	btfss	status,2,c
 15878  0003AA  0012               	return	
 15879                           
 15880                           ; BSR set to: 10
 15881                           ;term.c: 566: {
 15882                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15883  0003AC  CA03  F3A7         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15884                           
 15885                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15886  0003B0  CA04  F3A8         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15887                           
 15888                           ; BSR set to: 10
 15889                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15890  0003B4  0EA7               	movlw	low Terminal@Len
 15891  0003B6  0100               	movlb	0	; () banked
 15892  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15893  0003BA  0E03               	movlw	high Terminal@Len
 15894  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15895  0003BE  EC7E  F01C         	call	_atoi	;wreg free
 15896  0003C2  C083  F322         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15897  0003C6  C084  F323         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15898                           
 15899                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15900  0003CA  0E00               	movlw	0
 15901  0003CC  0100               	movlb	0	; () banked
 15902  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15903  0003D0  D018               	goto	l2423
 15904  0003D2                     
 15905                           ; BSR set to: 0
 15906                           ;term.c: 573: {
 15907                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15908                           
 15909                           ; BSR set to: 0
 15910  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15911  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15912  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15913  0003D8  0E05               	movlw	5
 15914  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15915  0003DC  0E00               	movlw	0
 15916  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15917  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15918  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15919  0003E4  6ED9               	movwf	fsr2l,c
 15920  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15921  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15922  0003EA  6EDA               	movwf	fsr2h,c
 15923  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15924  0003EE  0D01               	mullw	1
 15925  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15926  0003F2  24F3               	addwf	prodl,w,c
 15927  0003F4  6EE1               	movwf	fsr1l,c
 15928  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15929  0003F8  20F4               	addwfc	prodh,w,c
 15930  0003FA  6EE2               	movwf	fsr1h,c
 15931  0003FC  CFDF FFE7          	movff	indf2,indf1
 15932                           
 15933                           ; BSR set to: 0
 15934  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15935  000402                     l2423:
 15936                           
 15937                           ; BSR set to: 0
 15938                           
 15939                           ; BSR set to: 0
 15940  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15941  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15942  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15943  000408  0103               	movlb	3	; () banked
 15944  00040A  5122               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15945  00040C  0100               	movlb	0	; () banked
 15946  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15947  000410  0103               	movlb	3	; () banked
 15948  000412  5123               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15949  000414  0100               	movlb	0	; () banked
 15950  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15951  000418  B0D8               	btfsc	status,0,c
 15952  00041A  0012               	return	
 15953  00041C  D7DA               	goto	l2424
 15954  00041E                     
 15955                           ;term.c: 619: if((cdc_trf_state == 0))
 15956                           
 15957                           ; BSR set to: 0
 15958  00041E  0100               	movlb	0	; () banked
 15959  000420  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15960  000422  A4D8               	btfss	status,2,c
 15961  000424  0012               	return	
 15962                           
 15963                           ; BSR set to: 0
 15964                           ;term.c: 620: {
 15965                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15966  000426  0E53               	movlw	83
 15967  000428  0102               	movlb	2	; () banked
 15968  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15969                           
 15970                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15971  00042C  0E42               	movlw	66
 15972  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15973                           
 15974                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15975  000430  0E5B               	movlw	91
 15976  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15977                           
 15978                           ; BSR set to: 2
 15979                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15980  000434  C3A3  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15981                           
 15982                           ; BSR set to: 2
 15983                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15984  000438  C3A4  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15985                           
 15986                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15987  00043C  0E5D               	movlw	93
 15988  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15989                           
 15990                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15991  000440  0E3A               	movlw	58
 15992  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15993                           
 15994                           ; BSR set to: 2
 15995                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15996  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15997  000446  0100               	movlb	0	; () banked
 15998  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15999  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 16000  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16001  00044E  0E07               	movlw	7
 16002  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 16003  000452  EC38  F032         	call	_putUSBUSART	;wreg free
 16004                           
 16005                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 16006  000456  0E02               	movlw	2
 16007  000458  0102               	movlb	2	; () banked
 16008  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 16009                           
 16010                           ; BSR set to: 2
 16011                           ;term.c: 632: }
 16012                           ;term.c: 633: break;
 16013  00045C  0012               	return	
 16014  00045E                     
 16015                           ; BSR set to: 2
 16016                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 16017                           
 16018                           ; BSR set to: 2
 16019  00045E  EC5A  F032         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 16020  000462  06E8               	decf	wreg,f,c
 16021  000464  A4D8               	btfss	status,2,c
 16022  000466  D088               	goto	l2432
 16023                           
 16024                           ;term.c: 638: {
 16025                           ;term.c: 640: if (FormatOption == 1u)
 16026  000468  0102               	movlb	2	; () banked
 16027  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 16028  00046C  A4D8               	btfss	status,2,c
 16029  00046E  D027               	goto	u13780
 16030                           
 16031                           ; BSR set to: 2
 16032                           ;term.c: 641: {
 16033                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 16034  000470  0E00               	movlw	0
 16035  000472  0100               	movlb	0	; () banked
 16036  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 16037  000476  D01E               	goto	l2434
 16038  000478                     
 16039                           ;term.c: 644: {
 16040                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 16041                           
 16042                           ; BSR set to: 0
 16043  000478  0100               	movlb	0	; () banked
 16044  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 16045  00047C  0D04               	mullw	4
 16046  00047E  0E66               	movlw	low Terminal@Payload
 16047  000480  24F3               	addwf	prodl,w,c
 16048  000482  6F93               	movwf	itoa@buf& (0+255),b
 16049  000484  0E07               	movlw	high Terminal@Payload
 16050  000486  20F4               	addwfc	prodh,w,c
 16051  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 16052  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 16053  00048C  0D01               	mullw	1
 16054  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 16055  000490  24F3               	addwf	prodl,w,c
 16056  000492  6ED9               	movwf	fsr2l,c
 16057  000494  0E05               	movlw	high Terminal@TermRxBuffer
 16058  000496  20F4               	addwfc	prodh,w,c
 16059  000498  6EDA               	movwf	fsr2h,c
 16060  00049A  50DF               	movf	indf2,w,c
 16061  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 16062  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 16063  0004A0  6F95               	movwf	itoa@val& (0+255),b
 16064  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 16065  0004A4  0E00               	movlw	0
 16066  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 16067  0004A8  0E0A               	movlw	10
 16068  0004AA  6F97               	movwf	itoa@base& (0+255),b
 16069  0004AC  ECD8  F02E         	call	_itoa	;wreg free
 16070  0004B0  0100               	movlb	0	; () banked
 16071  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 16072  0004B4                     l2434:
 16073                           
 16074                           ; BSR set to: 0
 16075                           
 16076                           ; BSR set to: 0
 16077  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 16078  0004B6  0102               	movlb	2	; () banked
 16079  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 16080  0004BA  B0D8               	btfsc	status,0,c
 16081  0004BC  D7DD               	goto	l2435
 16082  0004BE                     u13780:
 16083                           
 16084                           ; BSR set to: 2
 16085                           ;term.c: 646: }
 16086                           ;term.c: 647: }
 16087                           ;term.c: 650: if((cdc_trf_state == 0))
 16088                           
 16089                           ; BSR set to: 2
 16090                           
 16091                           ; BSR set to: 2
 16092  0004BE  0100               	movlb	0	; () banked
 16093  0004C0  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16094  0004C2  A4D8               	btfss	status,2,c
 16095  0004C4  0012               	return	
 16096                           
 16097                           ; BSR set to: 0
 16098                           ;term.c: 651: {
 16099                           ;term.c: 653: if (FormatOption == 1u)
 16100  0004C6  0102               	movlb	2	; () banked
 16101  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 16102  0004CA  A4D8               	btfss	status,2,c
 16103  0004CC  D02B               	goto	l2438
 16104                           
 16105                           ; BSR set to: 2
 16106                           ;term.c: 654: {
 16107                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 16108  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16109  0004D0  0D08               	mullw	8
 16110  0004D2  0E03               	movlw	3
 16111  0004D4  26F3               	addwf	prodl,f,c
 16112  0004D6  0E00               	movlw	0
 16113  0004D8  22F4               	addwfc	prodh,f,c
 16114  0004DA  0E66               	movlw	low Terminal@Payload
 16115  0004DC  24F3               	addwf	prodl,w,c
 16116  0004DE  6ED9               	movwf	fsr2l,c
 16117  0004E0  0E07               	movlw	high Terminal@Payload
 16118  0004E2  20F4               	addwfc	prodh,w,c
 16119  0004E4  6EDA               	movwf	fsr2h,c
 16120  0004E6  0E0D               	movlw	13
 16121  0004E8  6EDF               	movwf	indf2,c
 16122                           
 16123                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 16124  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16125  0004EC  0D08               	mullw	8
 16126  0004EE  0E02               	movlw	2
 16127  0004F0  26F3               	addwf	prodl,f,c
 16128  0004F2  0E00               	movlw	0
 16129  0004F4  22F4               	addwfc	prodh,f,c
 16130  0004F6  0E66               	movlw	low Terminal@Payload
 16131  0004F8  24F3               	addwf	prodl,w,c
 16132  0004FA  6ED9               	movwf	fsr2l,c
 16133  0004FC  0E07               	movlw	high Terminal@Payload
 16134  0004FE  20F4               	addwfc	prodh,w,c
 16135  000500  6EDA               	movwf	fsr2h,c
 16136  000502  0E0A               	movlw	10
 16137  000504  6EDF               	movwf	indf2,c
 16138                           
 16139                           ; BSR set to: 2
 16140                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 16141  000506  0E66               	movlw	low Terminal@Payload
 16142  000508  0100               	movlb	0	; () banked
 16143  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 16144  00050C  0E07               	movlw	high Terminal@Payload
 16145  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16146  000510  0102               	movlb	2	; () banked
 16147  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16148  000514  0D02               	mullw	2
 16149  000516  50F3               	movf	prodl,w,c
 16150  000518  0F04               	addlw	4
 16151  00051A  0100               	movlb	0	; () banked
 16152  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 16153  00051E  EC38  F032         	call	_putUSBUSART	;wreg free
 16154                           
 16155                           ;term.c: 659: }
 16156  000522  D026               	goto	l2439
 16157  000524                     l2438:
 16158                           
 16159                           ;term.c: 660: else
 16160                           ;term.c: 661: {
 16161                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 16162  000524  0102               	movlb	2	; () banked
 16163  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16164  000528  0D01               	mullw	1
 16165  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 16166  00052C  24F3               	addwf	prodl,w,c
 16167  00052E  6ED9               	movwf	fsr2l,c
 16168  000530  0E05               	movlw	high Terminal@TermRxBuffer
 16169  000532  20F4               	addwfc	prodh,w,c
 16170  000534  6EDA               	movwf	fsr2h,c
 16171  000536  0E0D               	movlw	13
 16172  000538  6EDF               	movwf	indf2,c
 16173                           
 16174                           ; BSR set to: 2
 16175                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 16176  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16177  00053C  0100               	movlb	0	; () banked
 16178  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 16179  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16180  000542  0E01               	movlw	1
 16181  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 16182  000546  0E00               	movlw	0
 16183  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16184  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 16185  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 16186  00054E  6ED9               	movwf	fsr2l,c
 16187  000550  0E05               	movlw	high Terminal@TermRxBuffer
 16188  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16189  000554  6EDA               	movwf	fsr2h,c
 16190  000556  0E0A               	movlw	10
 16191  000558  6EDF               	movwf	indf2,c
 16192                           
 16193                           ; BSR set to: 0
 16194                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 16195  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 16196  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 16197  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 16198  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16199  000562  0102               	movlb	2	; () banked
 16200  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16201  000566  0F02               	addlw	2
 16202  000568  0100               	movlb	0	; () banked
 16203  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 16204  00056C  EC38  F032         	call	_putUSBUSART	;wreg free
 16205  000570                     l2439:
 16206                           
 16207                           ;term.c: 666: }
 16208                           ;term.c: 668: TermState = Term_GetData;
 16209  000570  0E00               	movlw	0
 16210  000572  0102               	movlb	2	; () banked
 16211  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 16212                           
 16213                           ; BSR set to: 2
 16214                           ;term.c: 669: }
 16215                           ;term.c: 670: }
 16216  000576  0012               	return	
 16217  000578                     l2432:
 16218                           
 16219                           ;term.c: 671: else
 16220                           ;term.c: 672: {
 16221                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 16222                           
 16223                           ; BSR set to: 2
 16224  000578  0ED9               	movlw	low Terminal@SwTimer
 16225  00057A  0100               	movlb	0	; () banked
 16226  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 16227  00057E  0E04               	movlw	high Terminal@SwTimer
 16228  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 16229  000582  0EB8               	movlw	184
 16230  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 16231  000586  0E0B               	movlw	11
 16232  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 16233  00058A  0E00               	movlw	0
 16234  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 16235  00058E  0E00               	movlw	0
 16236  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 16237  000592  EC17  F028         	call	_OsTmr_Wait	;wreg free
 16238  000596  06E8               	decf	wreg,f,c
 16239  000598  A4D8               	btfss	status,2,c
 16240  00059A  0012               	return	
 16241                           
 16242                           ;term.c: 675: {
 16243                           ;term.c: 677: if((cdc_trf_state == 0))
 16244  00059C  0100               	movlb	0	; () banked
 16245  00059E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16246  0005A0  A4D8               	btfss	status,2,c
 16247  0005A2  0012               	return	
 16248                           
 16249                           ; BSR set to: 0
 16250                           ;term.c: 678: {
 16251                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 16252  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 16253  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 16254  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 16255  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 16256  0005AC  0E5F               	movlw	low STR_21
 16257  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 16258  0005B0  0EFE               	movlw	high STR_21
 16259  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 16260  0005B4  EC9C  F030         	call	_strcpy	;wreg free
 16261                           
 16262                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 16263  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 16264  0005BA  0100               	movlb	0	; () banked
 16265  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 16266  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 16267  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16268  0005C2  0E29               	movlw	41
 16269  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 16270  0005C6  EC38  F032         	call	_putUSBUSART	;wreg free
 16271                           
 16272                           ;term.c: 682: TermState = Term_GetData;
 16273  0005CA  0E00               	movlw	0
 16274  0005CC  0102               	movlb	2	; () banked
 16275  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 16276                           
 16277                           ; BSR set to: 2
 16278                           ;term.c: 693: }
 16279                           
 16280                           ; BSR set to: 2
 16281                           ;term.c: 692: break;
 16282                           
 16283                           ;term.c: 691: default:
 16284                           
 16285                           ; BSR set to: 2
 16286                           ;term.c: 689: break;
 16287                           
 16288                           ;term.c: 688: case Term_ReadSlvUartData:
 16289                           
 16290                           ; BSR set to: 2
 16291                           ;term.c: 683: }
 16292                           ;term.c: 684: }
 16293                           ;term.c: 685: }
 16294                           ;term.c: 686: break;
 16295                           
 16296                           ; BSR set to: 2
 16297                           
 16298                           ; BSR set to: 2
 16299  0005D0  0012               	return	
 16300  0005D2                     l2393:
 16301                           
 16302                           ; BSR set to: 2
 16303  0005D2  0102               	movlb	2	; () banked
 16304  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 16305                           
 16306                           ; Switch size 1, requested type "space"
 16307                           ; Number of cases is 4, Range of values is 0 to 3
 16308                           ; switch strategies available:
 16309                           ; Name         Instructions Cycles
 16310                           ; simple_byte           13     7 (average)
 16311                           ;	Chosen strategy is simple_byte
 16312  0005D6  0A00               	xorlw	0	; case 0
 16313  0005D8  B4D8               	btfsc	status,2,c
 16314  0005DA  D583               	goto	l2394
 16315  0005DC  0A01               	xorlw	1	; case 1
 16316  0005DE  B4D8               	btfsc	status,2,c
 16317  0005E0  D71E               	goto	l2429
 16318  0005E2  0A03               	xorlw	3	; case 2
 16319  0005E4  B4D8               	btfsc	status,2,c
 16320  0005E6  D73B               	goto	l2431
 16321  0005E8  0A01               	xorlw	1	; case 3
 16322  0005EA  0012               	return	
 16323  0005EC                     __end_of_Terminal:
 16324                           	opt stack 0
 16325                           tosu	equ	0xFFF
 16326                           tosh	equ	0xFFE
 16327                           tosl	equ	0xFFD
 16328                           pclath	equ	0xFFA
 16329                           tblptru	equ	0xFF8
 16330                           tblptrh	equ	0xFF7
 16331                           tblptrl	equ	0xFF6
 16332                           tablat	equ	0xFF5
 16333                           prodh	equ	0xFF4
 16334                           prodl	equ	0xFF3
 16335                           intcon	equ	0xFF2
 16336                           intcon2	equ	0xFF1
 16337                           intcon3	equ	0xFF0
 16338                           indf0	equ	0xFEF
 16339                           postinc0	equ	0xFEE
 16340                           plusw0	equ	0xFEB
 16341                           fsr0h	equ	0xFEA
 16342                           fsr0l	equ	0xFE9
 16343                           wreg	equ	0xFE8
 16344                           indf1	equ	0xFE7
 16345                           postinc1	equ	0xFE6
 16346                           postdec1	equ	0xFE5
 16347                           fsr1h	equ	0xFE2
 16348                           fsr1l	equ	0xFE1
 16349                           indf2	equ	0xFDF
 16350                           postinc2	equ	0xFDE
 16351                           postdec2	equ	0xFDD
 16352                           plusw2	equ	0xFDB
 16353                           fsr2h	equ	0xFDA
 16354                           fsr2l	equ	0xFD9
 16355                           status	equ	0xFD8
 16356                           
 16357 ;; *************** function _xtoi *****************
 16358 ;; Defined at:
 16359 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16360 ;; Parameters:    Size  Location     Type
 16361 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16362 ;;		 -> Terminal@Addr(4), 
 16363 ;; Auto vars:     Size  Location     Type
 16364 ;;  val             2   40[BANK0 ] unsigned int 
 16365 ;;  c               1   42[BANK0 ] unsigned char 
 16366 ;;  sign            1   39[BANK0 ] unsigned char 
 16367 ;; Return value:  Size  Location     Type
 16368 ;;                  2   35[BANK0 ] unsigned int 
 16369 ;; Registers used:
 16370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16371 ;; Tracked objects:
 16372 ;;		On entry : 0/0
 16373 ;;		On exit  : 0/0
 16374 ;;		Unchanged: 0/0
 16375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16377 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16379 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16380 ;;Total ram usage:        8 bytes
 16381 ;; Hardware stack levels used:    1
 16382 ;; Hardware stack levels required when called:   13
 16383 ;; This function calls:
 16384 ;;		_isdigit
 16385 ;;		_isspace
 16386 ;;		_isupper
 16387 ;;		_isxdigit
 16388 ;;		_tolower
 16389 ;; This function is called by:
 16390 ;;		_Terminal
 16391 ;; This function uses a non-reentrant model
 16392 ;;
 16393                           
 16394                           	psect	text61
 16395  00357E                     __ptext61:
 16396                           	opt stack 0
 16397  00357E                     _xtoi:
 16398                           	opt stack 12
 16399                           
 16400                           ;incstack = 0
 16401  00357E  0E00               	movlw	0
 16402  003580  0100               	movlb	0	; () banked
 16403  003582  6F87               	movwf	xtoi@sign& (0+255),b
 16404  003584  0E00               	movlw	0
 16405  003586  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16406  003588  0E00               	movlw	0
 16407  00358A  6F88               	movwf	xtoi@val& (0+255),b
 16408  00358C  D003               	goto	l3478
 16409  00358E                     
 16410                           ; BSR set to: 0
 16411  00358E  0100               	movlb	0	; () banked
 16412  003590  4B83               	infsnz	xtoi@s& (0+255),f,b
 16413  003592  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16414  003594                     l3478:
 16415                           
 16416                           ; BSR set to: 0
 16417                           
 16418                           ; BSR set to: 0
 16419  003594  C083  FFD9         	movff	xtoi@s,fsr2l
 16420  003598  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16421  00359C  50DF               	movf	indf2,w,c
 16422  00359E  EC6E  F031         	call	_isspace
 16423  0035A2  B0D8               	btfsc	status,0,c
 16424  0035A4  D7F4               	goto	l3479
 16425  0035A6  C083  FFD9         	movff	xtoi@s,fsr2l
 16426  0035AA  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16427  0035AE  0E2D               	movlw	45
 16428  0035B0  18DE               	xorwf	postinc2,w,c
 16429  0035B2  A4D8               	btfss	status,2,c
 16430  0035B4  D003               	goto	l3481
 16431  0035B6  0100               	movlb	0	; () banked
 16432  0035B8  2B87               	incf	xtoi@sign& (0+255),f,b
 16433  0035BA  D009               	goto	L15
 16434  0035BC                     l3481:
 16435                           
 16436                           ; BSR set to: 0
 16437  0035BC  C083  FFD9         	movff	xtoi@s,fsr2l
 16438  0035C0  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16439  0035C4  0E2B               	movlw	43
 16440  0035C6  18DE               	xorwf	postinc2,w,c
 16441  0035C8  A4D8               	btfss	status,2,c
 16442  0035CA  D028               	goto	l3484
 16443  0035CC  0100               	movlb	0	; () banked
 16444  0035CE                     L15:
 16445  0035CE  4B83               	infsnz	xtoi@s& (0+255),f,b
 16446  0035D0  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16447                           
 16448                           ; BSR set to: 0
 16449                           
 16450                           ; BSR set to: 0
 16451  0035D2  D024               	goto	l3484
 16452  0035D4                     
 16453                           ; BSR set to: 0
 16454  0035D4  0100               	movlb	0	; () banked
 16455  0035D6  518A               	movf	xtoi@c& (0+255),w,b
 16456  0035D8  EC27  F032         	call	_isupper
 16457  0035DC  A0D8               	btfss	status,0,c
 16458  0035DE  D006               	goto	l3486
 16459  0035E0  0100               	movlb	0	; () banked
 16460  0035E2  518A               	movf	xtoi@c& (0+255),w,b
 16461  0035E4  EC09  F033         	call	_tolower
 16462  0035E8  0100               	movlb	0	; () banked
 16463  0035EA  6F8A               	movwf	xtoi@c& (0+255),b
 16464  0035EC                     l3486:
 16465  0035EC  0100               	movlb	0	; () banked
 16466  0035EE  518A               	movf	xtoi@c& (0+255),w,b
 16467  0035F0  EC49  F032         	call	_isdigit
 16468  0035F4  A0D8               	btfss	status,0,c
 16469  0035F6  D002               	goto	l3487
 16470  0035F8  0E30               	movlw	48
 16471  0035FA  D001               	goto	L14
 16472  0035FC                     l3487:
 16473                           
 16474                           ; BSR set to: 0
 16475  0035FC  0E57               	movlw	87
 16476  0035FE                     L14:
 16477  0035FE  0100               	movlb	0	; () banked
 16478  003600  5F8A               	subwf	xtoi@c& (0+255),f,b
 16479                           
 16480                           ; BSR set to: 0
 16481  003602  3B88               	swapf	xtoi@val& (0+255),f,b
 16482  003604  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16483  003606  0EF0               	movlw	240
 16484  003608  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16485  00360A  5188               	movf	xtoi@val& (0+255),w,b
 16486  00360C  0B0F               	andlw	15
 16487  00360E  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16488  003610  0EF0               	movlw	240
 16489  003612  1788               	andwf	xtoi@val& (0+255),f,b
 16490  003614  518A               	movf	xtoi@c& (0+255),w,b
 16491  003616  2788               	addwf	xtoi@val& (0+255),f,b
 16492  003618  0E00               	movlw	0
 16493  00361A  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16494  00361C                     l3484:
 16495                           
 16496                           ; BSR set to: 0
 16497  00361C  C083  FFD9         	movff	xtoi@s,fsr2l
 16498  003620  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16499  003624  0100               	movlb	0	; () banked
 16500  003626  4B83               	infsnz	xtoi@s& (0+255),f,b
 16501  003628  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16502  00362A  50DF               	movf	indf2,w,c
 16503  00362C  6F8A               	movwf	xtoi@c& (0+255),b
 16504  00362E  518A               	movf	xtoi@c& (0+255),w,b
 16505  003630  ECDB  F02F         	call	_isxdigit
 16506  003634  B0D8               	btfsc	status,0,c
 16507  003636  D7CE               	goto	l3485
 16508  003638  0100               	movlb	0	; () banked
 16509  00363A  5187               	movf	xtoi@sign& (0+255),w,b
 16510  00363C  B4D8               	btfsc	status,2,c
 16511  00363E  D00D               	goto	l3490
 16512                           
 16513                           ; BSR set to: 0
 16514  003640  C088  F085         	movff	xtoi@val,??_xtoi
 16515  003644  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16516  003648  1F85               	comf	??_xtoi& (0+255),f,b
 16517  00364A  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16518  00364C  4B85               	infsnz	??_xtoi& (0+255),f,b
 16519  00364E  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16520  003650  C085  F083         	movff	??_xtoi,?_xtoi
 16521  003654  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16522  003658  0012               	return	
 16523  00365A                     l3490:
 16524                           
 16525                           ; BSR set to: 0
 16526  00365A  C088  F083         	movff	xtoi@val,?_xtoi
 16527  00365E  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16528                           
 16529                           ; BSR set to: 0
 16530  003662  0012               	return		;funcret
 16531  003664                     __end_of_xtoi:
 16532                           	opt stack 0
 16533                           tosu	equ	0xFFF
 16534                           tosh	equ	0xFFE
 16535                           tosl	equ	0xFFD
 16536                           pclath	equ	0xFFA
 16537                           tblptru	equ	0xFF8
 16538                           tblptrh	equ	0xFF7
 16539                           tblptrl	equ	0xFF6
 16540                           tablat	equ	0xFF5
 16541                           prodh	equ	0xFF4
 16542                           prodl	equ	0xFF3
 16543                           intcon	equ	0xFF2
 16544                           intcon2	equ	0xFF1
 16545                           intcon3	equ	0xFF0
 16546                           indf0	equ	0xFEF
 16547                           postinc0	equ	0xFEE
 16548                           plusw0	equ	0xFEB
 16549                           fsr0h	equ	0xFEA
 16550                           fsr0l	equ	0xFE9
 16551                           wreg	equ	0xFE8
 16552                           indf1	equ	0xFE7
 16553                           postinc1	equ	0xFE6
 16554                           postdec1	equ	0xFE5
 16555                           fsr1h	equ	0xFE2
 16556                           fsr1l	equ	0xFE1
 16557                           indf2	equ	0xFDF
 16558                           postinc2	equ	0xFDE
 16559                           postdec2	equ	0xFDD
 16560                           plusw2	equ	0xFDB
 16561                           fsr2h	equ	0xFDA
 16562                           fsr2l	equ	0xFD9
 16563                           status	equ	0xFD8
 16564                           
 16565 ;; *************** function _tolower *****************
 16566 ;; Defined at:
 16567 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16568 ;; Parameters:    Size  Location     Type
 16569 ;;  c               1    wreg     unsigned char 
 16570 ;; Auto vars:     Size  Location     Type
 16571 ;;  c               1   29[BANK0 ] unsigned char 
 16572 ;; Return value:  Size  Location     Type
 16573 ;;                  1    wreg      unsigned char 
 16574 ;; Registers used:
 16575 ;;		wreg, status,2, status,0
 16576 ;; Tracked objects:
 16577 ;;		On entry : 0/0
 16578 ;;		On exit  : 0/0
 16579 ;;		Unchanged: 0/0
 16580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16584 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16585 ;;Total ram usage:        1 bytes
 16586 ;; Hardware stack levels used:    1
 16587 ;; Hardware stack levels required when called:   11
 16588 ;; This function calls:
 16589 ;;		Nothing
 16590 ;; This function is called by:
 16591 ;;		_xtoi
 16592 ;; This function uses a non-reentrant model
 16593 ;;
 16594                           
 16595                           	psect	text62
 16596  006612                     __ptext62:
 16597                           	opt stack 0
 16598  006612                     _tolower:
 16599                           	opt stack 13
 16600                           
 16601                           ; BSR set to: 0
 16602                           ;incstack = 0
 16603                           ;tolower@c stored from wreg
 16604  006612  0100               	movlb	0	; () banked
 16605  006614  6F7D               	movwf	tolower@c& (0+255),b
 16606  006616  0E5B               	movlw	91
 16607  006618  0100               	movlb	0	; () banked
 16608  00661A  617D               	cpfslt	tolower@c& (0+255),b
 16609  00661C  D004               	goto	l3537
 16610                           
 16611                           ; BSR set to: 0
 16612  00661E  0E40               	movlw	64
 16613  006620  657D               	cpfsgt	tolower@c& (0+255),b
 16614  006622  D001               	goto	l3537
 16615                           
 16616                           ; BSR set to: 0
 16617  006624  8B7D               	bsf	tolower@c& (0+255),5,b
 16618  006626                     l3537:
 16619                           
 16620                           ; BSR set to: 0
 16621                           
 16622                           ; BSR set to: 0
 16623  006626  517D               	movf	tolower@c& (0+255),w,b
 16624  006628  0012               	return	
 16625  00662A                     __end_of_tolower:
 16626                           	opt stack 0
 16627                           tosu	equ	0xFFF
 16628                           tosh	equ	0xFFE
 16629                           tosl	equ	0xFFD
 16630                           pclath	equ	0xFFA
 16631                           tblptru	equ	0xFF8
 16632                           tblptrh	equ	0xFF7
 16633                           tblptrl	equ	0xFF6
 16634                           tablat	equ	0xFF5
 16635                           prodh	equ	0xFF4
 16636                           prodl	equ	0xFF3
 16637                           intcon	equ	0xFF2
 16638                           intcon2	equ	0xFF1
 16639                           intcon3	equ	0xFF0
 16640                           indf0	equ	0xFEF
 16641                           postinc0	equ	0xFEE
 16642                           plusw0	equ	0xFEB
 16643                           fsr0h	equ	0xFEA
 16644                           fsr0l	equ	0xFE9
 16645                           wreg	equ	0xFE8
 16646                           indf1	equ	0xFE7
 16647                           postinc1	equ	0xFE6
 16648                           postdec1	equ	0xFE5
 16649                           fsr1h	equ	0xFE2
 16650                           fsr1l	equ	0xFE1
 16651                           indf2	equ	0xFDF
 16652                           postinc2	equ	0xFDE
 16653                           postdec2	equ	0xFDD
 16654                           plusw2	equ	0xFDB
 16655                           fsr2h	equ	0xFDA
 16656                           fsr2l	equ	0xFD9
 16657                           status	equ	0xFD8
 16658                           
 16659 ;; *************** function _isxdigit *****************
 16660 ;; Defined at:
 16661 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16662 ;; Parameters:    Size  Location     Type
 16663 ;;  c               1    wreg     unsigned char 
 16664 ;; Auto vars:     Size  Location     Type
 16665 ;;  c               1   34[BANK0 ] unsigned char 
 16666 ;; Return value:  Size  Location     Type
 16667 ;;		None               void
 16668 ;; Registers used:
 16669 ;;		wreg, status,2, status,0, cstack
 16670 ;; Tracked objects:
 16671 ;;		On entry : 0/0
 16672 ;;		On exit  : 0/0
 16673 ;;		Unchanged: 0/0
 16674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16676 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16678 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16679 ;;Total ram usage:        3 bytes
 16680 ;; Hardware stack levels used:    1
 16681 ;; Hardware stack levels required when called:   12
 16682 ;; This function calls:
 16683 ;;		_isdigit
 16684 ;; This function is called by:
 16685 ;;		_xtoi
 16686 ;; This function uses a non-reentrant model
 16687 ;;
 16688                           
 16689                           	psect	text63
 16690  005FB6                     __ptext63:
 16691                           	opt stack 0
 16692  005FB6                     _isxdigit:
 16693                           	opt stack 12
 16694                           
 16695                           ; BSR set to: 0
 16696                           ;incstack = 0
 16697                           ;isxdigit@c stored from wreg
 16698  005FB6  0100               	movlb	0	; () banked
 16699  005FB8  6F82               	movwf	isxdigit@c& (0+255),b
 16700  005FBA  0E01               	movlw	1
 16701  005FBC  0100               	movlb	0	; () banked
 16702  005FBE  6F81               	movwf	_isxdigit$6624& (0+255),b
 16703                           
 16704                           ; BSR set to: 0
 16705  005FC0  0E67               	movlw	103
 16706  005FC2  6182               	cpfslt	isxdigit@c& (0+255),b
 16707  005FC4  D003               	goto	u12160
 16708                           
 16709                           ; BSR set to: 0
 16710  005FC6  0E61               	movlw	97
 16711  005FC8  6182               	cpfslt	isxdigit@c& (0+255),b
 16712  005FCA  D00E               	goto	l3533
 16713  005FCC                     u12160:
 16714                           
 16715                           ; BSR set to: 0
 16716                           
 16717                           ; BSR set to: 0
 16718  005FCC  0E47               	movlw	71
 16719  005FCE  6182               	cpfslt	isxdigit@c& (0+255),b
 16720  005FD0  D003               	goto	u12180
 16721                           
 16722                           ; BSR set to: 0
 16723  005FD2  0E41               	movlw	65
 16724  005FD4  6182               	cpfslt	isxdigit@c& (0+255),b
 16725  005FD6  D008               	goto	l3533
 16726  005FD8                     u12180:
 16727                           
 16728                           ; BSR set to: 0
 16729                           
 16730                           ; BSR set to: 0
 16731  005FD8  5182               	movf	isxdigit@c& (0+255),w,b
 16732  005FDA  EC49  F032         	call	_isdigit
 16733  005FDE  B0D8               	btfsc	status,0,c
 16734  005FE0  D003               	goto	l3533
 16735  005FE2  0E00               	movlw	0
 16736  005FE4  0100               	movlb	0	; () banked
 16737  005FE6  6F81               	movwf	_isxdigit$6624& (0+255),b
 16738  005FE8                     l3533:
 16739                           
 16740                           ; BSR set to: 0
 16741  005FE8  C081  F080         	movff	_isxdigit$6624,??_isxdigit
 16742  005FEC  0100               	movlb	0	; () banked
 16743  005FEE  3180               	rrcf	??_isxdigit& (0+255),w,b
 16744  005FF0  0012               	return	
 16745  005FF2                     __end_of_isxdigit:
 16746                           	opt stack 0
 16747                           tosu	equ	0xFFF
 16748                           tosh	equ	0xFFE
 16749                           tosl	equ	0xFFD
 16750                           pclath	equ	0xFFA
 16751                           tblptru	equ	0xFF8
 16752                           tblptrh	equ	0xFF7
 16753                           tblptrl	equ	0xFF6
 16754                           tablat	equ	0xFF5
 16755                           prodh	equ	0xFF4
 16756                           prodl	equ	0xFF3
 16757                           intcon	equ	0xFF2
 16758                           intcon2	equ	0xFF1
 16759                           intcon3	equ	0xFF0
 16760                           indf0	equ	0xFEF
 16761                           postinc0	equ	0xFEE
 16762                           plusw0	equ	0xFEB
 16763                           fsr0h	equ	0xFEA
 16764                           fsr0l	equ	0xFE9
 16765                           wreg	equ	0xFE8
 16766                           indf1	equ	0xFE7
 16767                           postinc1	equ	0xFE6
 16768                           postdec1	equ	0xFE5
 16769                           fsr1h	equ	0xFE2
 16770                           fsr1l	equ	0xFE1
 16771                           indf2	equ	0xFDF
 16772                           postinc2	equ	0xFDE
 16773                           postdec2	equ	0xFDD
 16774                           plusw2	equ	0xFDB
 16775                           fsr2h	equ	0xFDA
 16776                           fsr2l	equ	0xFD9
 16777                           status	equ	0xFD8
 16778                           
 16779 ;; *************** function _strtol *****************
 16780 ;; Defined at:
 16781 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16782 ;; Parameters:    Size  Location     Type
 16783 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16784 ;;		 -> Terminal@Payload(80), 
 16785 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16786 ;;		 -> NULL(0), 
 16787 ;;  base            2   45[BANK0 ] int 
 16788 ;; Auto vars:     Size  Location     Type
 16789 ;;  a               4   52[BANK0 ] long 
 16790 ;;  c               1   56[BANK0 ] unsigned char 
 16791 ;;  sign            1   51[BANK0 ] unsigned char 
 16792 ;; Return value:  Size  Location     Type
 16793 ;;                  4   41[BANK0 ] long 
 16794 ;; Registers used:
 16795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16796 ;; Tracked objects:
 16797 ;;		On entry : 0/0
 16798 ;;		On exit  : 0/0
 16799 ;;		Unchanged: 0/0
 16800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16801 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16802 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16803 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16804 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16805 ;;Total ram usage:       16 bytes
 16806 ;; Hardware stack levels used:    1
 16807 ;; Hardware stack levels required when called:   13
 16808 ;; This function calls:
 16809 ;;		___lmul
 16810 ;;		_isalpha
 16811 ;;		_isdigit
 16812 ;;		_isspace
 16813 ;;		_toupper
 16814 ;; This function is called by:
 16815 ;;		_Terminal
 16816 ;; This function uses a non-reentrant model
 16817 ;;
 16818                           
 16819                           	psect	text64
 16820  001AA0                     __ptext64:
 16821                           	opt stack 0
 16822  001AA0                     _strtol:
 16823                           	opt stack 12
 16824                           
 16825                           ; BSR set to: 0
 16826                           ;incstack = 0
 16827  001AA0  C089  FFD9         	movff	strtol@s,fsr2l
 16828  001AA4  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16829  001AA8  50DF               	movf	indf2,w,c
 16830  001AAA  0100               	movlb	0	; () banked
 16831  001AAC  6F98               	movwf	strtol@c& (0+255),b
 16832                           
 16833                           ; BSR set to: 0
 16834  001AAE  4B89               	infsnz	strtol@s& (0+255),f,b
 16835  001AB0  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16836                           
 16837                           ; BSR set to: 0
 16838  001AB2  5198               	movf	strtol@c& (0+255),w,b
 16839  001AB4  EC6E  F031         	call	_isspace
 16840  001AB8  B0D8               	btfsc	status,0,c
 16841  001ABA  D7F2               	goto	_strtol
 16842  001ABC  0E00               	movlw	0
 16843  001ABE  0100               	movlb	0	; () banked
 16844  001AC0  6F94               	movwf	strtol@a& (0+255),b
 16845  001AC2  0E00               	movlw	0
 16846  001AC4  6F95               	movwf	(strtol@a+1)& (0+255),b
 16847  001AC6  0E00               	movlw	0
 16848  001AC8  6F96               	movwf	(strtol@a+2)& (0+255),b
 16849  001ACA  0E00               	movlw	0
 16850  001ACC  6F97               	movwf	(strtol@a+3)& (0+255),b
 16851  001ACE  0E00               	movlw	0
 16852  001AD0  6F93               	movwf	strtol@sign& (0+255),b
 16853                           
 16854                           ; BSR set to: 0
 16855  001AD2  0E2D               	movlw	45
 16856  001AD4  1998               	xorwf	strtol@c& (0+255),w,b
 16857  001AD6  A4D8               	btfss	status,2,c
 16858  001AD8  D003               	goto	l3440
 16859                           
 16860                           ; BSR set to: 0
 16861  001ADA  0E01               	movlw	1
 16862  001ADC  6F93               	movwf	strtol@sign& (0+255),b
 16863  001ADE  D004               	goto	u12660
 16864  001AE0                     l3440:
 16865                           
 16866                           ; BSR set to: 0
 16867                           
 16868                           ; BSR set to: 0
 16869  001AE0  0E2B               	movlw	43
 16870  001AE2  1998               	xorwf	strtol@c& (0+255),w,b
 16871  001AE4  A4D8               	btfss	status,2,c
 16872  001AE6  D008               	goto	l3442
 16873  001AE8                     u12660:
 16874                           
 16875                           ; BSR set to: 0
 16876  001AE8  C089  FFD9         	movff	strtol@s,fsr2l
 16877  001AEC  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16878  001AF0  50DF               	movf	indf2,w,c
 16879  001AF2  6F98               	movwf	strtol@c& (0+255),b
 16880                           
 16881                           ; BSR set to: 0
 16882  001AF4  4B89               	infsnz	strtol@s& (0+255),f,b
 16883  001AF6  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16884  001AF8                     l3442:
 16885                           
 16886                           ; BSR set to: 0
 16887                           
 16888                           ; BSR set to: 0
 16889                           
 16890                           ; BSR set to: 0
 16891  001AF8  0E30               	movlw	48
 16892  001AFA  1998               	xorwf	strtol@c& (0+255),w,b
 16893  001AFC  A4D8               	btfss	status,2,c
 16894  001AFE  D02E               	goto	l3450
 16895                           
 16896                           ; BSR set to: 0
 16897  001B00  C089  FFD9         	movff	strtol@s,fsr2l
 16898  001B04  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16899  001B08  50DF               	movf	indf2,w,c
 16900  001B0A  6F98               	movwf	strtol@c& (0+255),b
 16901                           
 16902                           ; BSR set to: 0
 16903  001B0C  4B89               	infsnz	strtol@s& (0+255),f,b
 16904  001B0E  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16905                           
 16906                           ; BSR set to: 0
 16907  001B10  518D               	movf	strtol@base& (0+255),w,b
 16908  001B12  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16909  001B14  B4D8               	btfsc	status,2,c
 16910  001B16  D005               	goto	u12690
 16911                           
 16912                           ; BSR set to: 0
 16913  001B18  0E10               	movlw	16
 16914  001B1A  198D               	xorwf	strtol@base& (0+255),w,b
 16915  001B1C  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16916  001B1E  A4D8               	btfss	status,2,c
 16917  001B20  D015               	goto	l3444
 16918  001B22                     u12690:
 16919                           
 16920                           ; BSR set to: 0
 16921                           
 16922                           ; BSR set to: 0
 16923  001B22  0E78               	movlw	120
 16924  001B24  1998               	xorwf	strtol@c& (0+255),w,b
 16925  001B26  B4D8               	btfsc	status,2,c
 16926  001B28  D004               	goto	u12710
 16927                           
 16928                           ; BSR set to: 0
 16929  001B2A  0E58               	movlw	88
 16930  001B2C  1998               	xorwf	strtol@c& (0+255),w,b
 16931  001B2E  A4D8               	btfss	status,2,c
 16932  001B30  D00D               	goto	l3444
 16933  001B32                     u12710:
 16934                           
 16935                           ; BSR set to: 0
 16936                           
 16937                           ; BSR set to: 0
 16938  001B32  0E00               	movlw	0
 16939  001B34  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16940  001B36  0E10               	movlw	16
 16941  001B38  6F8D               	movwf	strtol@base& (0+255),b
 16942                           
 16943                           ; BSR set to: 0
 16944  001B3A  C089  FFD9         	movff	strtol@s,fsr2l
 16945  001B3E  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16946  001B42  50DF               	movf	indf2,w,c
 16947  001B44  6F98               	movwf	strtol@c& (0+255),b
 16948                           
 16949                           ; BSR set to: 0
 16950  001B46  4B89               	infsnz	strtol@s& (0+255),f,b
 16951  001B48  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16952  001B4A  D008               	goto	l3450
 16953  001B4C                     l3444:
 16954                           
 16955                           ; BSR set to: 0
 16956                           
 16957                           ; BSR set to: 0
 16958  001B4C  518D               	movf	strtol@base& (0+255),w,b
 16959  001B4E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16960  001B50  A4D8               	btfss	status,2,c
 16961  001B52  D004               	goto	l3450
 16962                           
 16963                           ; BSR set to: 0
 16964  001B54  0E00               	movlw	0
 16965  001B56  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16966  001B58  0E08               	movlw	8
 16967  001B5A  6F8D               	movwf	strtol@base& (0+255),b
 16968  001B5C                     l3450:
 16969                           
 16970                           ; BSR set to: 0
 16971                           
 16972                           ; BSR set to: 0
 16973                           
 16974                           ; BSR set to: 0
 16975                           
 16976                           ; BSR set to: 0
 16977  001B5C  518D               	movf	strtol@base& (0+255),w,b
 16978  001B5E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16979  001B60  A4D8               	btfss	status,2,c
 16980  001B62  D004               	goto	l3451
 16981                           
 16982                           ; BSR set to: 0
 16983  001B64  0E00               	movlw	0
 16984  001B66  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16985  001B68  0E0A               	movlw	10
 16986  001B6A  6F8D               	movwf	strtol@base& (0+255),b
 16987  001B6C                     l3451:
 16988                           
 16989                           ; BSR set to: 0
 16990                           
 16991                           ; BSR set to: 0
 16992                           
 16993                           ; BSR set to: 0
 16994  001B6C  5198               	movf	strtol@c& (0+255),w,b
 16995  001B6E  ECE5  F030         	call	_isalpha
 16996  001B72  A0D8               	btfss	status,0,c
 16997  001B74  D008               	goto	l3453
 16998  001B76  0100               	movlb	0	; () banked
 16999  001B78  5198               	movf	strtol@c& (0+255),w,b
 17000  001B7A  EC15  F033         	call	_toupper
 17001  001B7E  0FC9               	addlw	201
 17002  001B80  0100               	movlb	0	; () banked
 17003  001B82  6F98               	movwf	strtol@c& (0+255),b
 17004  001B84  D009               	goto	l3456
 17005  001B86                     l3453:
 17006                           
 17007                           ; BSR set to: 0
 17008  001B86  0100               	movlb	0	; () banked
 17009  001B88  5198               	movf	strtol@c& (0+255),w,b
 17010  001B8A  EC49  F032         	call	_isdigit
 17011  001B8E  A0D8               	btfss	status,0,c
 17012  001B90  D039               	goto	l3457
 17013  001B92  0E30               	movlw	48
 17014  001B94  0100               	movlb	0	; () banked
 17015  001B96  5F98               	subwf	strtol@c& (0+255),f,b
 17016  001B98                     l3456:
 17017                           
 17018                           ; BSR set to: 0
 17019                           
 17020                           ; BSR set to: 0
 17021                           
 17022                           ; BSR set to: 0
 17023  001B98  5198               	movf	strtol@c& (0+255),w,b
 17024  001B9A  6F8F               	movwf	??_strtol& (0+255),b
 17025  001B9C  6B90               	clrf	(??_strtol+1)& (0+255),b
 17026  001B9E  518D               	movf	strtol@base& (0+255),w,b
 17027  001BA0  5D8F               	subwf	??_strtol& (0+255),w,b
 17028  001BA2  5190               	movf	(??_strtol+1)& (0+255),w,b
 17029  001BA4  0A80               	xorlw	128
 17030  001BA6  6F91               	movwf	(??_strtol+2)& (0+255),b
 17031  001BA8  518E               	movf	(strtol@base+1)& (0+255),w,b
 17032  001BAA  0A80               	xorlw	128
 17033  001BAC  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 17034  001BAE  B0D8               	btfsc	status,0,c
 17035  001BB0  D029               	goto	l3457
 17036                           
 17037                           ; BSR set to: 0
 17038                           
 17039                           ; BSR set to: 0
 17040                           
 17041                           ; BSR set to: 0
 17042  001BB2  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 17043  001BB6  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 17044  001BBA  0E00               	movlw	0
 17045  001BBC  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17046  001BBE  0EFF               	movlw	-1
 17047  001BC0  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 17048  001BC2  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 17049  001BC4  C094  F081         	movff	strtol@a,___lmul@multiplicand
 17050  001BC8  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 17051  001BCC  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 17052  001BD0  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 17053  001BD4  EC26  F02B         	call	___lmul	;wreg free
 17054  001BD8  0100               	movlb	0	; () banked
 17055  001BDA  5198               	movf	strtol@c& (0+255),w,b
 17056  001BDC  257D               	addwf	?___lmul& (0+255),w,b
 17057  001BDE  6F94               	movwf	strtol@a& (0+255),b
 17058  001BE0  0E00               	movlw	0
 17059  001BE2  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 17060  001BE4  6F95               	movwf	(strtol@a+1)& (0+255),b
 17061  001BE6  0E00               	movlw	0
 17062  001BE8  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 17063  001BEA  6F96               	movwf	(strtol@a+2)& (0+255),b
 17064  001BEC  0E00               	movlw	0
 17065  001BEE  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 17066  001BF0  6F97               	movwf	(strtol@a+3)& (0+255),b
 17067                           
 17068                           ; BSR set to: 0
 17069  001BF2  C089  FFD9         	movff	strtol@s,fsr2l
 17070  001BF6  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17071  001BFA  50DF               	movf	indf2,w,c
 17072  001BFC  6F98               	movwf	strtol@c& (0+255),b
 17073                           
 17074                           ; BSR set to: 0
 17075  001BFE  4B89               	infsnz	strtol@s& (0+255),f,b
 17076  001C00  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17077  001C02  D7B4               	goto	l3451
 17078  001C04                     l3457:
 17079                           
 17080                           ; BSR set to: 0
 17081  001C04  0100               	movlb	0	; () banked
 17082  001C06  518B               	movf	strtol@endptr& (0+255),w,b
 17083  001C08  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 17084  001C0A  B4D8               	btfsc	status,2,c
 17085  001C0C  D00E               	goto	l3459
 17086                           
 17087                           ; BSR set to: 0
 17088  001C0E  0EFF               	movlw	255
 17089  001C10  2589               	addwf	strtol@s& (0+255),w,b
 17090  001C12  6F8F               	movwf	??_strtol& (0+255),b
 17091  001C14  0EFF               	movlw	255
 17092  001C16  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 17093  001C18  6F90               	movwf	(??_strtol+1)& (0+255),b
 17094  001C1A  C08B  FFD9         	movff	strtol@endptr,fsr2l
 17095  001C1E  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 17096  001C22  C08F  FFDE         	movff	??_strtol,postinc2
 17097  001C26  C090  FFDD         	movff	??_strtol+1,postdec2
 17098  001C2A                     l3459:
 17099                           
 17100                           ; BSR set to: 0
 17101                           
 17102                           ; BSR set to: 0
 17103  001C2A  5193               	movf	strtol@sign& (0+255),w,b
 17104  001C2C  B4D8               	btfsc	status,2,c
 17105  001C2E  D01A               	goto	l3460
 17106                           
 17107                           ; BSR set to: 0
 17108  001C30  C094  F08F         	movff	strtol@a,??_strtol
 17109  001C34  C095  F090         	movff	strtol@a+1,??_strtol+1
 17110  001C38  C096  F091         	movff	strtol@a+2,??_strtol+2
 17111  001C3C  C097  F092         	movff	strtol@a+3,??_strtol+3
 17112  001C40  1F8F               	comf	??_strtol& (0+255),f,b
 17113  001C42  1F90               	comf	(??_strtol+1)& (0+255),f,b
 17114  001C44  1F91               	comf	(??_strtol+2)& (0+255),f,b
 17115  001C46  1F92               	comf	(??_strtol+3)& (0+255),f,b
 17116  001C48  2B8F               	incf	??_strtol& (0+255),f,b
 17117  001C4A  0E00               	movlw	0
 17118  001C4C  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 17119  001C4E  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 17120  001C50  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 17121  001C52  C08F  F089         	movff	??_strtol,?_strtol
 17122  001C56  C090  F08A         	movff	??_strtol+1,?_strtol+1
 17123  001C5A  C091  F08B         	movff	??_strtol+2,?_strtol+2
 17124  001C5E  C092  F08C         	movff	??_strtol+3,?_strtol+3
 17125                           
 17126                           ; BSR set to: 0
 17127  001C62  0012               	return	
 17128  001C64                     l3460:
 17129                           
 17130                           ; BSR set to: 0
 17131  001C64  C094  F089         	movff	strtol@a,?_strtol
 17132  001C68  C095  F08A         	movff	strtol@a+1,?_strtol+1
 17133  001C6C  C096  F08B         	movff	strtol@a+2,?_strtol+2
 17134  001C70  C097  F08C         	movff	strtol@a+3,?_strtol+3
 17135                           
 17136                           ; BSR set to: 0
 17137  001C74  0012               	return		;funcret
 17138  001C76                     __end_of_strtol:
 17139                           	opt stack 0
 17140                           tosu	equ	0xFFF
 17141                           tosh	equ	0xFFE
 17142                           tosl	equ	0xFFD
 17143                           pclath	equ	0xFFA
 17144                           tblptru	equ	0xFF8
 17145                           tblptrh	equ	0xFF7
 17146                           tblptrl	equ	0xFF6
 17147                           tablat	equ	0xFF5
 17148                           prodh	equ	0xFF4
 17149                           prodl	equ	0xFF3
 17150                           intcon	equ	0xFF2
 17151                           intcon2	equ	0xFF1
 17152                           intcon3	equ	0xFF0
 17153                           indf0	equ	0xFEF
 17154                           postinc0	equ	0xFEE
 17155                           plusw0	equ	0xFEB
 17156                           fsr0h	equ	0xFEA
 17157                           fsr0l	equ	0xFE9
 17158                           wreg	equ	0xFE8
 17159                           indf1	equ	0xFE7
 17160                           postinc1	equ	0xFE6
 17161                           postdec1	equ	0xFE5
 17162                           fsr1h	equ	0xFE2
 17163                           fsr1l	equ	0xFE1
 17164                           indf2	equ	0xFDF
 17165                           postinc2	equ	0xFDE
 17166                           postdec2	equ	0xFDD
 17167                           plusw2	equ	0xFDB
 17168                           fsr2h	equ	0xFDA
 17169                           fsr2l	equ	0xFD9
 17170                           status	equ	0xFD8
 17171                           
 17172 ;; *************** function _toupper *****************
 17173 ;; Defined at:
 17174 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 17175 ;; Parameters:    Size  Location     Type
 17176 ;;  c               1    wreg     unsigned char 
 17177 ;; Auto vars:     Size  Location     Type
 17178 ;;  c               1   29[BANK0 ] unsigned char 
 17179 ;; Return value:  Size  Location     Type
 17180 ;;                  1    wreg      unsigned char 
 17181 ;; Registers used:
 17182 ;;		wreg, status,2, status,0
 17183 ;; Tracked objects:
 17184 ;;		On entry : 0/0
 17185 ;;		On exit  : 0/0
 17186 ;;		Unchanged: 0/0
 17187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17189 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17191 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17192 ;;Total ram usage:        1 bytes
 17193 ;; Hardware stack levels used:    1
 17194 ;; Hardware stack levels required when called:   11
 17195 ;; This function calls:
 17196 ;;		Nothing
 17197 ;; This function is called by:
 17198 ;;		_strtol
 17199 ;; This function uses a non-reentrant model
 17200 ;;
 17201                           
 17202                           	psect	text65
 17203  00662A                     __ptext65:
 17204                           	opt stack 0
 17205  00662A                     _toupper:
 17206                           	opt stack 13
 17207                           
 17208                           ; BSR set to: 0
 17209                           ;incstack = 0
 17210                           ;toupper@c stored from wreg
 17211  00662A  0100               	movlb	0	; () banked
 17212  00662C  6F7D               	movwf	toupper@c& (0+255),b
 17213  00662E  0E7B               	movlw	123
 17214  006630  0100               	movlb	0	; () banked
 17215  006632  617D               	cpfslt	toupper@c& (0+255),b
 17216  006634  D004               	goto	l3464
 17217                           
 17218                           ; BSR set to: 0
 17219  006636  0E60               	movlw	96
 17220  006638  657D               	cpfsgt	toupper@c& (0+255),b
 17221  00663A  D001               	goto	l3464
 17222                           
 17223                           ; BSR set to: 0
 17224  00663C  9B7D               	bcf	toupper@c& (0+255),5,b
 17225  00663E                     l3464:
 17226                           
 17227                           ; BSR set to: 0
 17228                           
 17229                           ; BSR set to: 0
 17230  00663E  517D               	movf	toupper@c& (0+255),w,b
 17231  006640  0012               	return	
 17232  006642                     __end_of_toupper:
 17233                           	opt stack 0
 17234                           tosu	equ	0xFFF
 17235                           tosh	equ	0xFFE
 17236                           tosl	equ	0xFFD
 17237                           pclath	equ	0xFFA
 17238                           tblptru	equ	0xFF8
 17239                           tblptrh	equ	0xFF7
 17240                           tblptrl	equ	0xFF6
 17241                           tablat	equ	0xFF5
 17242                           prodh	equ	0xFF4
 17243                           prodl	equ	0xFF3
 17244                           intcon	equ	0xFF2
 17245                           intcon2	equ	0xFF1
 17246                           intcon3	equ	0xFF0
 17247                           indf0	equ	0xFEF
 17248                           postinc0	equ	0xFEE
 17249                           plusw0	equ	0xFEB
 17250                           fsr0h	equ	0xFEA
 17251                           fsr0l	equ	0xFE9
 17252                           wreg	equ	0xFE8
 17253                           indf1	equ	0xFE7
 17254                           postinc1	equ	0xFE6
 17255                           postdec1	equ	0xFE5
 17256                           fsr1h	equ	0xFE2
 17257                           fsr1l	equ	0xFE1
 17258                           indf2	equ	0xFDF
 17259                           postinc2	equ	0xFDE
 17260                           postdec2	equ	0xFDD
 17261                           plusw2	equ	0xFDB
 17262                           fsr2h	equ	0xFDA
 17263                           fsr2l	equ	0xFD9
 17264                           status	equ	0xFD8
 17265                           
 17266 ;; *************** function _isspace *****************
 17267 ;; Defined at:
 17268 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 17269 ;; Parameters:    Size  Location     Type
 17270 ;;  c               1    wreg     unsigned char 
 17271 ;; Auto vars:     Size  Location     Type
 17272 ;;  c               1   31[BANK0 ] unsigned char 
 17273 ;; Return value:  Size  Location     Type
 17274 ;;		None               void
 17275 ;; Registers used:
 17276 ;;		wreg, status,2, status,0
 17277 ;; Tracked objects:
 17278 ;;		On entry : 0/0
 17279 ;;		On exit  : 0/0
 17280 ;;		Unchanged: 0/0
 17281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17283 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17284 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17285 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17286 ;;Total ram usage:        3 bytes
 17287 ;; Hardware stack levels used:    1
 17288 ;; Hardware stack levels required when called:   11
 17289 ;; This function calls:
 17290 ;;		Nothing
 17291 ;; This function is called by:
 17292 ;;		_strtol
 17293 ;;		_xtoi
 17294 ;; This function uses a non-reentrant model
 17295 ;;
 17296                           
 17297                           	psect	text66
 17298  0062DC                     __ptext66:
 17299                           	opt stack 0
 17300  0062DC                     _isspace:
 17301                           	opt stack 13
 17302                           
 17303                           ; BSR set to: 0
 17304                           ;incstack = 0
 17305                           ;isspace@c stored from wreg
 17306  0062DC  0100               	movlb	0	; () banked
 17307  0062DE  6F7F               	movwf	isspace@c& (0+255),b
 17308  0062E0  0E01               	movlw	1
 17309  0062E2  0100               	movlb	0	; () banked
 17310  0062E4  6F7E               	movwf	_isspace$6617& (0+255),b
 17311                           
 17312                           ; BSR set to: 0
 17313  0062E6  0E20               	movlw	32
 17314  0062E8  197F               	xorwf	isspace@c& (0+255),w,b
 17315  0062EA  B4D8               	btfsc	status,2,c
 17316  0062EC  D008               	goto	l3521
 17317                           
 17318                           ; BSR set to: 0
 17319  0062EE  0E0E               	movlw	14
 17320  0062F0  617F               	cpfslt	isspace@c& (0+255),b
 17321  0062F2  D003               	goto	u12070
 17322                           
 17323                           ; BSR set to: 0
 17324  0062F4  0E09               	movlw	9
 17325  0062F6  617F               	cpfslt	isspace@c& (0+255),b
 17326  0062F8  D002               	goto	l3521
 17327  0062FA                     u12070:
 17328                           
 17329                           ; BSR set to: 0
 17330                           
 17331                           ; BSR set to: 0
 17332  0062FA  0E00               	movlw	0
 17333  0062FC  6F7E               	movwf	_isspace$6617& (0+255),b
 17334  0062FE                     l3521:
 17335                           
 17336                           ; BSR set to: 0
 17337                           
 17338                           ; BSR set to: 0
 17339  0062FE  C07E  F07D         	movff	_isspace$6617,??_isspace
 17340  006302  317D               	rrcf	??_isspace& (0+255),w,b
 17341  006304  0012               	return	
 17342  006306                     __end_of_isspace:
 17343                           	opt stack 0
 17344                           tosu	equ	0xFFF
 17345                           tosh	equ	0xFFE
 17346                           tosl	equ	0xFFD
 17347                           pclath	equ	0xFFA
 17348                           tblptru	equ	0xFF8
 17349                           tblptrh	equ	0xFF7
 17350                           tblptrl	equ	0xFF6
 17351                           tablat	equ	0xFF5
 17352                           prodh	equ	0xFF4
 17353                           prodl	equ	0xFF3
 17354                           intcon	equ	0xFF2
 17355                           intcon2	equ	0xFF1
 17356                           intcon3	equ	0xFF0
 17357                           indf0	equ	0xFEF
 17358                           postinc0	equ	0xFEE
 17359                           plusw0	equ	0xFEB
 17360                           fsr0h	equ	0xFEA
 17361                           fsr0l	equ	0xFE9
 17362                           wreg	equ	0xFE8
 17363                           indf1	equ	0xFE7
 17364                           postinc1	equ	0xFE6
 17365                           postdec1	equ	0xFE5
 17366                           fsr1h	equ	0xFE2
 17367                           fsr1l	equ	0xFE1
 17368                           indf2	equ	0xFDF
 17369                           postinc2	equ	0xFDE
 17370                           postdec2	equ	0xFDD
 17371                           plusw2	equ	0xFDB
 17372                           fsr2h	equ	0xFDA
 17373                           fsr2l	equ	0xFD9
 17374                           status	equ	0xFD8
 17375                           
 17376 ;; *************** function _isalpha *****************
 17377 ;; Defined at:
 17378 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17379 ;; Parameters:    Size  Location     Type
 17380 ;;  c               1    wreg     unsigned char 
 17381 ;; Auto vars:     Size  Location     Type
 17382 ;;  c               1   34[BANK0 ] unsigned char 
 17383 ;; Return value:  Size  Location     Type
 17384 ;;		None               void
 17385 ;; Registers used:
 17386 ;;		wreg, status,2, status,0, cstack
 17387 ;; Tracked objects:
 17388 ;;		On entry : 0/0
 17389 ;;		On exit  : 0/0
 17390 ;;		Unchanged: 0/0
 17391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17393 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17395 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17396 ;;Total ram usage:        3 bytes
 17397 ;; Hardware stack levels used:    1
 17398 ;; Hardware stack levels required when called:   12
 17399 ;; This function calls:
 17400 ;;		_isupper
 17401 ;; This function is called by:
 17402 ;;		_strtol
 17403 ;; This function uses a non-reentrant model
 17404 ;;
 17405                           
 17406                           	psect	text67
 17407  0061CA                     __ptext67:
 17408                           	opt stack 0
 17409  0061CA                     _isalpha:
 17410                           	opt stack 12
 17411                           
 17412                           ; BSR set to: 0
 17413                           ;incstack = 0
 17414                           ;isalpha@c stored from wreg
 17415  0061CA  0100               	movlb	0	; () banked
 17416  0061CC  6F82               	movwf	isalpha@c& (0+255),b
 17417  0061CE  0E01               	movlw	1
 17418  0061D0  0100               	movlb	0	; () banked
 17419  0061D2  6F81               	movwf	_isalpha$6614& (0+255),b
 17420                           
 17421                           ; BSR set to: 0
 17422  0061D4  0E7B               	movlw	123
 17423  0061D6  6182               	cpfslt	isalpha@c& (0+255),b
 17424  0061D8  D003               	goto	u12090
 17425                           
 17426                           ; BSR set to: 0
 17427  0061DA  0E61               	movlw	97
 17428  0061DC  6182               	cpfslt	isalpha@c& (0+255),b
 17429  0061DE  D008               	goto	l3516
 17430  0061E0                     u12090:
 17431                           
 17432                           ; BSR set to: 0
 17433                           
 17434                           ; BSR set to: 0
 17435  0061E0  5182               	movf	isalpha@c& (0+255),w,b
 17436  0061E2  EC27  F032         	call	_isupper
 17437  0061E6  B0D8               	btfsc	status,0,c
 17438  0061E8  D003               	goto	l3516
 17439  0061EA  0E00               	movlw	0
 17440  0061EC  0100               	movlb	0	; () banked
 17441  0061EE  6F81               	movwf	_isalpha$6614& (0+255),b
 17442  0061F0                     l3516:
 17443                           
 17444                           ; BSR set to: 0
 17445  0061F0  C081  F080         	movff	_isalpha$6614,??_isalpha
 17446  0061F4  0100               	movlb	0	; () banked
 17447  0061F6  3180               	rrcf	??_isalpha& (0+255),w,b
 17448  0061F8  0012               	return	
 17449  0061FA                     __end_of_isalpha:
 17450                           	opt stack 0
 17451                           tosu	equ	0xFFF
 17452                           tosh	equ	0xFFE
 17453                           tosl	equ	0xFFD
 17454                           pclath	equ	0xFFA
 17455                           tblptru	equ	0xFF8
 17456                           tblptrh	equ	0xFF7
 17457                           tblptrl	equ	0xFF6
 17458                           tablat	equ	0xFF5
 17459                           prodh	equ	0xFF4
 17460                           prodl	equ	0xFF3
 17461                           intcon	equ	0xFF2
 17462                           intcon2	equ	0xFF1
 17463                           intcon3	equ	0xFF0
 17464                           indf0	equ	0xFEF
 17465                           postinc0	equ	0xFEE
 17466                           plusw0	equ	0xFEB
 17467                           fsr0h	equ	0xFEA
 17468                           fsr0l	equ	0xFE9
 17469                           wreg	equ	0xFE8
 17470                           indf1	equ	0xFE7
 17471                           postinc1	equ	0xFE6
 17472                           postdec1	equ	0xFE5
 17473                           fsr1h	equ	0xFE2
 17474                           fsr1l	equ	0xFE1
 17475                           indf2	equ	0xFDF
 17476                           postinc2	equ	0xFDE
 17477                           postdec2	equ	0xFDD
 17478                           plusw2	equ	0xFDB
 17479                           fsr2h	equ	0xFDA
 17480                           fsr2l	equ	0xFD9
 17481                           status	equ	0xFD8
 17482                           
 17483 ;; *************** function _isupper *****************
 17484 ;; Defined at:
 17485 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17486 ;; Parameters:    Size  Location     Type
 17487 ;;  c               1    wreg     unsigned char 
 17488 ;; Auto vars:     Size  Location     Type
 17489 ;;  c               1   31[BANK0 ] unsigned char 
 17490 ;; Return value:  Size  Location     Type
 17491 ;;		None               void
 17492 ;; Registers used:
 17493 ;;		wreg, status,2, status,0
 17494 ;; Tracked objects:
 17495 ;;		On entry : 0/0
 17496 ;;		On exit  : 0/0
 17497 ;;		Unchanged: 0/0
 17498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17500 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17501 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17502 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17503 ;;Total ram usage:        3 bytes
 17504 ;; Hardware stack levels used:    1
 17505 ;; Hardware stack levels required when called:   11
 17506 ;; This function calls:
 17507 ;;		Nothing
 17508 ;; This function is called by:
 17509 ;;		_xtoi
 17510 ;;		_isalpha
 17511 ;; This function uses a non-reentrant model
 17512 ;;
 17513                           
 17514                           	psect	text68
 17515  00644E                     __ptext68:
 17516                           	opt stack 0
 17517  00644E                     _isupper:
 17518                           	opt stack 13
 17519                           
 17520                           ; BSR set to: 0
 17521                           ;incstack = 0
 17522                           ;isupper@c stored from wreg
 17523  00644E  0100               	movlb	0	; () banked
 17524  006450  6F7F               	movwf	isupper@c& (0+255),b
 17525  006452  0E00               	movlw	0
 17526  006454  0100               	movlb	0	; () banked
 17527  006456  6F7E               	movwf	_isupper$6620& (0+255),b
 17528                           
 17529                           ; BSR set to: 0
 17530  006458  0E5B               	movlw	91
 17531  00645A  617F               	cpfslt	isupper@c& (0+255),b
 17532  00645C  D005               	goto	l3526
 17533                           
 17534                           ; BSR set to: 0
 17535  00645E  0E40               	movlw	64
 17536  006460  657F               	cpfsgt	isupper@c& (0+255),b
 17537  006462  D002               	goto	l3526
 17538                           
 17539                           ; BSR set to: 0
 17540  006464  0E01               	movlw	1
 17541  006466  6F7E               	movwf	_isupper$6620& (0+255),b
 17542  006468                     l3526:
 17543                           
 17544                           ; BSR set to: 0
 17545                           
 17546                           ; BSR set to: 0
 17547  006468  C07E  F07D         	movff	_isupper$6620,??_isupper
 17548  00646C  317D               	rrcf	??_isupper& (0+255),w,b
 17549  00646E  0012               	return	
 17550  006470                     __end_of_isupper:
 17551                           	opt stack 0
 17552                           tosu	equ	0xFFF
 17553                           tosh	equ	0xFFE
 17554                           tosl	equ	0xFFD
 17555                           pclath	equ	0xFFA
 17556                           tblptru	equ	0xFF8
 17557                           tblptrh	equ	0xFF7
 17558                           tblptrl	equ	0xFF6
 17559                           tablat	equ	0xFF5
 17560                           prodh	equ	0xFF4
 17561                           prodl	equ	0xFF3
 17562                           intcon	equ	0xFF2
 17563                           intcon2	equ	0xFF1
 17564                           intcon3	equ	0xFF0
 17565                           indf0	equ	0xFEF
 17566                           postinc0	equ	0xFEE
 17567                           plusw0	equ	0xFEB
 17568                           fsr0h	equ	0xFEA
 17569                           fsr0l	equ	0xFE9
 17570                           wreg	equ	0xFE8
 17571                           indf1	equ	0xFE7
 17572                           postinc1	equ	0xFE6
 17573                           postdec1	equ	0xFE5
 17574                           fsr1h	equ	0xFE2
 17575                           fsr1l	equ	0xFE1
 17576                           indf2	equ	0xFDF
 17577                           postinc2	equ	0xFDE
 17578                           postdec2	equ	0xFDD
 17579                           plusw2	equ	0xFDB
 17580                           fsr2h	equ	0xFDA
 17581                           fsr2l	equ	0xFD9
 17582                           status	equ	0xFD8
 17583                           
 17584 ;; *************** function _strcpy *****************
 17585 ;; Defined at:
 17586 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17587 ;; Parameters:    Size  Location     Type
 17588 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17589 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17590 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17591 ;;		 -> STR_23(20), STR_21(42), 
 17592 ;; Auto vars:     Size  Location     Type
 17593 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17594 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17595 ;; Return value:  Size  Location     Type
 17596 ;;                  2   29[BANK0 ] PTR unsigned char 
 17597 ;; Registers used:
 17598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17599 ;; Tracked objects:
 17600 ;;		On entry : 0/0
 17601 ;;		On exit  : 0/0
 17602 ;;		Unchanged: 0/0
 17603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17605 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17607 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17608 ;;Total ram usage:        6 bytes
 17609 ;; Hardware stack levels used:    1
 17610 ;; Hardware stack levels required when called:   11
 17611 ;; This function calls:
 17612 ;;		Nothing
 17613 ;; This function is called by:
 17614 ;;		_Terminal
 17615 ;;		_Term_MainSm
 17616 ;; This function uses a non-reentrant model
 17617 ;;
 17618                           
 17619                           	psect	text69
 17620  006138                     __ptext69:
 17621                           	opt stack 0
 17622  006138                     _strcpy:
 17623                           	opt stack 15
 17624                           
 17625                           ; BSR set to: 0
 17626                           ;incstack = 0
 17627  006138  C07D  F081         	movff	strcpy@to,strcpy@cp
 17628  00613C  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17629  006140  D005               	goto	l3418
 17630  006142  0100               	movlb	0	; () banked
 17631  006144  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17632  006146  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17633  006148  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17634  00614A  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17635  00614C                     l3418:
 17636                           
 17637                           ; BSR set to: 0
 17638  00614C  C07F  FFF6         	movff	strcpy@from,tblptrl
 17639  006150  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17640  006154                     	if	0	;tblptru may be non-zero
 17641  006154                     	endif
 17642  006154                     	if	0	;tblptru may be non-zero
 17643  006154                     	endif
 17644  006154  C081  FFD9         	movff	strcpy@cp,fsr2l
 17645  006158  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17646  00615C  0008               	tblrd		*
 17647  00615E  CFF5 FFDF          	movff	tablat,indf2
 17648  006162  50DF               	movf	indf2,w,c
 17649  006164  B4D8               	btfsc	status,2,c
 17650  006166  0012               	return	
 17651  006168  D7EC               	goto	l3419
 17652  00616A                     __end_of_strcpy:
 17653                           	opt stack 0
 17654                           tosu	equ	0xFFF
 17655                           tosh	equ	0xFFE
 17656                           tosl	equ	0xFFD
 17657                           pclath	equ	0xFFA
 17658                           tblptru	equ	0xFF8
 17659                           tblptrh	equ	0xFF7
 17660                           tblptrl	equ	0xFF6
 17661                           tablat	equ	0xFF5
 17662                           prodh	equ	0xFF4
 17663                           prodl	equ	0xFF3
 17664                           intcon	equ	0xFF2
 17665                           intcon2	equ	0xFF1
 17666                           intcon3	equ	0xFF0
 17667                           indf0	equ	0xFEF
 17668                           postinc0	equ	0xFEE
 17669                           plusw0	equ	0xFEB
 17670                           fsr0h	equ	0xFEA
 17671                           fsr0l	equ	0xFE9
 17672                           wreg	equ	0xFE8
 17673                           indf1	equ	0xFE7
 17674                           postinc1	equ	0xFE6
 17675                           postdec1	equ	0xFE5
 17676                           fsr1h	equ	0xFE2
 17677                           fsr1l	equ	0xFE1
 17678                           indf2	equ	0xFDF
 17679                           postinc2	equ	0xFDE
 17680                           postdec2	equ	0xFDD
 17681                           plusw2	equ	0xFDB
 17682                           fsr2h	equ	0xFDA
 17683                           fsr2l	equ	0xFD9
 17684                           status	equ	0xFD8
 17685                           
 17686 ;; *************** function _putUSBUSART *****************
 17687 ;; Defined at:
 17688 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17689 ;; Parameters:    Size  Location     Type
 17690 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17691 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17692 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17693 ;;		 -> RxBuffer(400), 
 17694 ;;  length          1   37[BANK0 ] unsigned char 
 17695 ;; Auto vars:     Size  Location     Type
 17696 ;;		None
 17697 ;; Return value:  Size  Location     Type
 17698 ;;                  1    wreg      void 
 17699 ;; Registers used:
 17700 ;;		wreg, status,2, status,0
 17701 ;; Tracked objects:
 17702 ;;		On entry : 0/0
 17703 ;;		On exit  : 0/0
 17704 ;;		Unchanged: 0/0
 17705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17706 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17709 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17710 ;;Total ram usage:        3 bytes
 17711 ;; Hardware stack levels used:    1
 17712 ;; Hardware stack levels required when called:   11
 17713 ;; This function calls:
 17714 ;;		Nothing
 17715 ;; This function is called by:
 17716 ;;		_Terminal
 17717 ;;		_Term_MainSm
 17718 ;;		_GsmGprsTerminal
 17719 ;; This function uses a non-reentrant model
 17720 ;;
 17721                           
 17722                           	psect	text70
 17723  006470                     __ptext70:
 17724                           	opt stack 0
 17725  006470                     _putUSBUSART:
 17726                           	opt stack 15
 17727                           
 17728                           ;usb_device_cdc.c: 584: ;
 17729                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17730                           
 17731                           ;incstack = 0
 17732  006470  0100               	movlb	0	; () banked
 17733  006472  51C5               	movf	_cdc_trf_state& (0+255),w,b
 17734  006474  A4D8               	btfss	status,2,c
 17735  006476  0012               	return	
 17736                           
 17737                           ; BSR set to: 0
 17738                           ;usb_device_cdc.c: 586: {
 17739                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17740  006478  C083  F2CC         	movff	putUSBUSART@data,_pCDCSrc
 17741  00647C  C084  F2CD         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17742                           
 17743                           ; BSR set to: 0
 17744  006480  C085  F0C4         	movff	putUSBUSART@length,_cdc_tx_len
 17745                           
 17746                           ; BSR set to: 0
 17747  006484  0E01               	movlw	1
 17748  006486  0101               	movlb	1	; () banked
 17749  006488  6FE0               	movwf	_cdc_mem_type& (0+255),b
 17750                           
 17751                           ; BSR set to: 1
 17752  00648A  0E01               	movlw	1
 17753  00648C  0100               	movlb	0	; () banked
 17754  00648E  6FC5               	movwf	_cdc_trf_state& (0+255),b
 17755  006490  0012               	return	
 17756  006492                     __end_of_putUSBUSART:
 17757                           	opt stack 0
 17758                           tosu	equ	0xFFF
 17759                           tosh	equ	0xFFE
 17760                           tosl	equ	0xFFD
 17761                           pclath	equ	0xFFA
 17762                           tblptru	equ	0xFF8
 17763                           tblptrh	equ	0xFF7
 17764                           tblptrl	equ	0xFF6
 17765                           tablat	equ	0xFF5
 17766                           prodh	equ	0xFF4
 17767                           prodl	equ	0xFF3
 17768                           intcon	equ	0xFF2
 17769                           intcon2	equ	0xFF1
 17770                           intcon3	equ	0xFF0
 17771                           indf0	equ	0xFEF
 17772                           postinc0	equ	0xFEE
 17773                           plusw0	equ	0xFEB
 17774                           fsr0h	equ	0xFEA
 17775                           fsr0l	equ	0xFE9
 17776                           wreg	equ	0xFE8
 17777                           indf1	equ	0xFE7
 17778                           postinc1	equ	0xFE6
 17779                           postdec1	equ	0xFE5
 17780                           fsr1h	equ	0xFE2
 17781                           fsr1l	equ	0xFE1
 17782                           indf2	equ	0xFDF
 17783                           postinc2	equ	0xFDE
 17784                           postdec2	equ	0xFDD
 17785                           plusw2	equ	0xFDB
 17786                           fsr2h	equ	0xFDA
 17787                           fsr2l	equ	0xFD9
 17788                           status	equ	0xFD8
 17789                           
 17790 ;; *************** function _itoa *****************
 17791 ;; Defined at:
 17792 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17793 ;; Parameters:    Size  Location     Type
 17794 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17795 ;;		 -> Terminal@Payload(80), 
 17796 ;;  val             2   53[BANK0 ] int 
 17797 ;;  base            2   55[BANK0 ] int 
 17798 ;; Auto vars:     Size  Location     Type
 17799 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17800 ;;		 -> Terminal@Payload(80), 
 17801 ;; Return value:  Size  Location     Type
 17802 ;;                  2   51[BANK0 ] PTR unsigned char 
 17803 ;; Registers used:
 17804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17805 ;; Tracked objects:
 17806 ;;		On entry : 0/0
 17807 ;;		On exit  : 0/0
 17808 ;;		Unchanged: 0/0
 17809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17810 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17811 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17813 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17814 ;;Total ram usage:        8 bytes
 17815 ;; Hardware stack levels used:    1
 17816 ;; Hardware stack levels required when called:   13
 17817 ;; This function calls:
 17818 ;;		_utoa
 17819 ;; This function is called by:
 17820 ;;		_Terminal
 17821 ;; This function uses a non-reentrant model
 17822 ;;
 17823                           
 17824                           	psect	text71
 17825  005DB0                     __ptext71:
 17826                           	opt stack 0
 17827  005DB0                     _itoa:
 17828                           	opt stack 12
 17829                           
 17830                           ; BSR set to: 0
 17831                           ;incstack = 0
 17832  005DB0  C093  F099         	movff	itoa@buf,itoa@cp
 17833  005DB4  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17834  005DB8  0100               	movlb	0	; () banked
 17835  005DBA  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17836  005DBC  D00C               	goto	l3166
 17837                           
 17838                           ; BSR set to: 0
 17839  005DBE  C093  FFD9         	movff	itoa@buf,fsr2l
 17840  005DC2  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17841  005DC6  0E2D               	movlw	45
 17842  005DC8  6EDF               	movwf	indf2,c
 17843                           
 17844                           ; BSR set to: 0
 17845  005DCA  4B93               	infsnz	itoa@buf& (0+255),f,b
 17846  005DCC  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17847                           
 17848                           ; BSR set to: 0
 17849  005DCE  6D95               	negf	itoa@val& (0+255),b
 17850  005DD0  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17851  005DD2  B0D8               	btfsc	status,0,c
 17852  005DD4  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17853  005DD6                     l3166:
 17854                           
 17855                           ; BSR set to: 0
 17856                           
 17857                           ; BSR set to: 0
 17858  005DD6  C093  F08A         	movff	itoa@buf,utoa@buf
 17859  005DDA  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17860  005DDE  C095  F08C         	movff	itoa@val,utoa@val
 17861  005DE2  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17862  005DE6  C097  F08E         	movff	itoa@base,utoa@base
 17863  005DEA  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17864  005DEE  EC40  F022         	call	_utoa	;wreg free
 17865  005DF2  0012               	return	
 17866  005DF4                     __end_of_itoa:
 17867                           	opt stack 0
 17868                           tosu	equ	0xFFF
 17869                           tosh	equ	0xFFE
 17870                           tosl	equ	0xFFD
 17871                           pclath	equ	0xFFA
 17872                           tblptru	equ	0xFF8
 17873                           tblptrh	equ	0xFF7
 17874                           tblptrl	equ	0xFF6
 17875                           tablat	equ	0xFF5
 17876                           prodh	equ	0xFF4
 17877                           prodl	equ	0xFF3
 17878                           intcon	equ	0xFF2
 17879                           intcon2	equ	0xFF1
 17880                           intcon3	equ	0xFF0
 17881                           indf0	equ	0xFEF
 17882                           postinc0	equ	0xFEE
 17883                           plusw0	equ	0xFEB
 17884                           fsr0h	equ	0xFEA
 17885                           fsr0l	equ	0xFE9
 17886                           wreg	equ	0xFE8
 17887                           indf1	equ	0xFE7
 17888                           postinc1	equ	0xFE6
 17889                           postdec1	equ	0xFE5
 17890                           fsr1h	equ	0xFE2
 17891                           fsr1l	equ	0xFE1
 17892                           indf2	equ	0xFDF
 17893                           postinc2	equ	0xFDE
 17894                           postdec2	equ	0xFDD
 17895                           plusw2	equ	0xFDB
 17896                           fsr2h	equ	0xFDA
 17897                           fsr2l	equ	0xFD9
 17898                           status	equ	0xFD8
 17899                           
 17900 ;; *************** function _utoa *****************
 17901 ;; Defined at:
 17902 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17903 ;; Parameters:    Size  Location     Type
 17904 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17905 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17906 ;;  val             2   44[BANK0 ] unsigned int 
 17907 ;;  base            2   46[BANK0 ] int 
 17908 ;; Auto vars:     Size  Location     Type
 17909 ;;  v               2   48[BANK0 ] unsigned int 
 17910 ;;  c               1   50[BANK0 ] unsigned char 
 17911 ;; Return value:  Size  Location     Type
 17912 ;;                  2   42[BANK0 ] PTR unsigned char 
 17913 ;; Registers used:
 17914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17915 ;; Tracked objects:
 17916 ;;		On entry : 0/0
 17917 ;;		On exit  : 0/0
 17918 ;;		Unchanged: 0/0
 17919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17920 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17921 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17923 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17924 ;;Total ram usage:        9 bytes
 17925 ;; Hardware stack levels used:    1
 17926 ;; Hardware stack levels required when called:   12
 17927 ;; This function calls:
 17928 ;;		___lwdiv
 17929 ;;		___lwmod
 17930 ;; This function is called by:
 17931 ;;		_Term_MainSm
 17932 ;;		_itoa
 17933 ;; This function uses a non-reentrant model
 17934 ;;
 17935                           
 17936                           	psect	text72
 17937  004480                     __ptext72:
 17938                           	opt stack 0
 17939  004480                     _utoa:
 17940                           	opt stack 14
 17941                           
 17942                           ;incstack = 0
 17943  004480  C08C  F090         	movff	utoa@val,utoa@v
 17944  004484  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17945  004488  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17946  00448C  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17947  004490  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17948  004494  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17949  004498  EC52  F02C         	call	___lwdiv	;wreg free
 17950  00449C  C083  F090         	movff	?___lwdiv,utoa@v
 17951  0044A0  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17952  0044A4  0100               	movlb	0	; () banked
 17953  0044A6  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17954  0044A8  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17955                           
 17956                           ; BSR set to: 0
 17957  0044AA  5190               	movf	utoa@v& (0+255),w,b
 17958  0044AC  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17959  0044AE  A4D8               	btfss	status,2,c
 17960  0044B0  D7EB               	goto	l3170
 17961                           
 17962                           ; BSR set to: 0
 17963                           
 17964                           ; BSR set to: 0
 17965  0044B2  C08A  FFD9         	movff	utoa@buf,fsr2l
 17966  0044B6  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17967  0044BA  0E00               	movlw	0
 17968  0044BC  6EDF               	movwf	indf2,c
 17969                           
 17970                           ; BSR set to: 0
 17971  0044BE  078A               	decf	utoa@buf& (0+255),f,b
 17972  0044C0  A0D8               	btfss	status,0,c
 17973  0044C2  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17974  0044C4                     
 17975                           ; BSR set to: 0
 17976                           
 17977                           ; BSR set to: 0
 17978  0044C4  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17979  0044C8  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17980  0044CC  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17981  0044D0  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17982  0044D4  ECFA  F02E         	call	___lwmod	;wreg free
 17983  0044D8  0100               	movlb	0	; () banked
 17984  0044DA  517D               	movf	?___lwmod& (0+255),w,b
 17985  0044DC  6F92               	movwf	utoa@c& (0+255),b
 17986                           
 17987                           ; BSR set to: 0
 17988  0044DE  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17989  0044E2  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17990  0044E6  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17991  0044EA  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17992  0044EE  EC52  F02C         	call	___lwdiv	;wreg free
 17993  0044F2  C083  F08C         	movff	?___lwdiv,utoa@val
 17994  0044F6  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17995  0044FA  0E09               	movlw	9
 17996  0044FC  0100               	movlb	0	; () banked
 17997  0044FE  6592               	cpfsgt	utoa@c& (0+255),b
 17998  004500  D002               	goto	l3173
 17999                           
 18000                           ; BSR set to: 0
 18001  004502  0E07               	movlw	7
 18002  004504  2792               	addwf	utoa@c& (0+255),f,b
 18003  004506                     l3173:
 18004                           
 18005                           ; BSR set to: 0
 18006  004506  0E30               	movlw	48
 18007  004508  2792               	addwf	utoa@c& (0+255),f,b
 18008                           
 18009                           ; BSR set to: 0
 18010  00450A  C08A  FFD9         	movff	utoa@buf,fsr2l
 18011  00450E  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 18012  004512  C092  FFDF         	movff	utoa@c,indf2
 18013                           
 18014                           ; BSR set to: 0
 18015  004516  078A               	decf	utoa@buf& (0+255),f,b
 18016  004518  A0D8               	btfss	status,0,c
 18017  00451A  078B               	decf	(utoa@buf+1)& (0+255),f,b
 18018                           
 18019                           ; BSR set to: 0
 18020  00451C  518C               	movf	utoa@val& (0+255),w,b
 18021  00451E  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 18022  004520  A4D8               	btfss	status,2,c
 18023  004522  D7D0               	goto	l3172
 18024                           
 18025                           ; BSR set to: 0
 18026                           ;	Return value of _utoa is never used
 18027                           
 18028                           ; BSR set to: 0
 18029  004524  4B8A               	infsnz	utoa@buf& (0+255),f,b
 18030  004526  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 18031  004528  0012               	return	
 18032  00452A                     __end_of_utoa:
 18033                           	opt stack 0
 18034                           tosu	equ	0xFFF
 18035                           tosh	equ	0xFFE
 18036                           tosl	equ	0xFFD
 18037                           pclath	equ	0xFFA
 18038                           tblptru	equ	0xFF8
 18039                           tblptrh	equ	0xFF7
 18040                           tblptrl	equ	0xFF6
 18041                           tablat	equ	0xFF5
 18042                           prodh	equ	0xFF4
 18043                           prodl	equ	0xFF3
 18044                           intcon	equ	0xFF2
 18045                           intcon2	equ	0xFF1
 18046                           intcon3	equ	0xFF0
 18047                           indf0	equ	0xFEF
 18048                           postinc0	equ	0xFEE
 18049                           plusw0	equ	0xFEB
 18050                           fsr0h	equ	0xFEA
 18051                           fsr0l	equ	0xFE9
 18052                           wreg	equ	0xFE8
 18053                           indf1	equ	0xFE7
 18054                           postinc1	equ	0xFE6
 18055                           postdec1	equ	0xFE5
 18056                           fsr1h	equ	0xFE2
 18057                           fsr1l	equ	0xFE1
 18058                           indf2	equ	0xFDF
 18059                           postinc2	equ	0xFDE
 18060                           postdec2	equ	0xFDD
 18061                           plusw2	equ	0xFDB
 18062                           fsr2h	equ	0xFDA
 18063                           fsr2l	equ	0xFD9
 18064                           status	equ	0xFD8
 18065                           
 18066 ;; *************** function ___lwmod *****************
 18067 ;; Defined at:
 18068 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 18069 ;; Parameters:    Size  Location     Type
 18070 ;;  dividend        2   29[BANK0 ] unsigned int 
 18071 ;;  divisor         2   31[BANK0 ] unsigned int 
 18072 ;; Auto vars:     Size  Location     Type
 18073 ;;  counter         1   33[BANK0 ] unsigned char 
 18074 ;; Return value:  Size  Location     Type
 18075 ;;                  2   29[BANK0 ] unsigned int 
 18076 ;; Registers used:
 18077 ;;		wreg, status,2, status,0
 18078 ;; Tracked objects:
 18079 ;;		On entry : 0/0
 18080 ;;		On exit  : 0/0
 18081 ;;		Unchanged: 0/0
 18082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18086 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18087 ;;Total ram usage:        5 bytes
 18088 ;; Hardware stack levels used:    1
 18089 ;; Hardware stack levels required when called:   11
 18090 ;; This function calls:
 18091 ;;		Nothing
 18092 ;; This function is called by:
 18093 ;;		_utoa
 18094 ;; This function uses a non-reentrant model
 18095 ;;
 18096                           
 18097                           	psect	text73
 18098  005DF4                     __ptext73:
 18099                           	opt stack 0
 18100  005DF4                     ___lwmod:
 18101                           	opt stack 14
 18102                           
 18103                           ; BSR set to: 0
 18104                           ;incstack = 0
 18105  005DF4  0100               	movlb	0	; () banked
 18106  005DF6  517F               	movf	___lwmod@divisor& (0+255),w,b
 18107  005DF8  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18108  005DFA  B4D8               	btfsc	status,2,c
 18109  005DFC  D018               	goto	l3268
 18110                           
 18111                           ; BSR set to: 0
 18112  005DFE  0E01               	movlw	1
 18113  005E00  6F81               	movwf	___lwmod@counter& (0+255),b
 18114  005E02  D004               	goto	l3263
 18115  005E04                     
 18116                           ; BSR set to: 0
 18117                           
 18118                           ; BSR set to: 0
 18119  005E04  90D8               	bcf	status,0,c
 18120  005E06  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 18121  005E08  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18122  005E0A  2B81               	incf	___lwmod@counter& (0+255),f,b
 18123  005E0C                     l3263:
 18124                           
 18125                           ; BSR set to: 0
 18126                           
 18127                           ; BSR set to: 0
 18128  005E0C  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18129  005E0E  D7FA               	goto	l3264
 18130  005E10                     u11730:
 18131                           
 18132                           ; BSR set to: 0
 18133                           
 18134                           ; BSR set to: 0
 18135                           
 18136                           ; BSR set to: 0
 18137  005E10  517F               	movf	___lwmod@divisor& (0+255),w,b
 18138  005E12  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 18139  005E14  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18140  005E16  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18141  005E18  A0D8               	btfss	status,0,c
 18142  005E1A  D004               	goto	l3267
 18143                           
 18144                           ; BSR set to: 0
 18145  005E1C  517F               	movf	___lwmod@divisor& (0+255),w,b
 18146  005E1E  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 18147  005E20  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18148  005E22  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18149  005E24                     l3267:
 18150                           
 18151                           ; BSR set to: 0
 18152                           
 18153                           ; BSR set to: 0
 18154  005E24  90D8               	bcf	status,0,c
 18155  005E26  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18156  005E28  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 18157                           
 18158                           ; BSR set to: 0
 18159  005E2A  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 18160  005E2C  D7F1               	goto	u11730
 18161  005E2E                     l3268:
 18162                           
 18163                           ; BSR set to: 0
 18164                           
 18165                           ; BSR set to: 0
 18166  005E2E  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 18167  005E32  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 18168                           
 18169                           ; BSR set to: 0
 18170  005E36  0012               	return		;funcret
 18171  005E38                     __end_of___lwmod:
 18172                           	opt stack 0
 18173                           tosu	equ	0xFFF
 18174                           tosh	equ	0xFFE
 18175                           tosl	equ	0xFFD
 18176                           pclath	equ	0xFFA
 18177                           tblptru	equ	0xFF8
 18178                           tblptrh	equ	0xFF7
 18179                           tblptrl	equ	0xFF6
 18180                           tablat	equ	0xFF5
 18181                           prodh	equ	0xFF4
 18182                           prodl	equ	0xFF3
 18183                           intcon	equ	0xFF2
 18184                           intcon2	equ	0xFF1
 18185                           intcon3	equ	0xFF0
 18186                           indf0	equ	0xFEF
 18187                           postinc0	equ	0xFEE
 18188                           plusw0	equ	0xFEB
 18189                           fsr0h	equ	0xFEA
 18190                           fsr0l	equ	0xFE9
 18191                           wreg	equ	0xFE8
 18192                           indf1	equ	0xFE7
 18193                           postinc1	equ	0xFE6
 18194                           postdec1	equ	0xFE5
 18195                           fsr1h	equ	0xFE2
 18196                           fsr1l	equ	0xFE1
 18197                           indf2	equ	0xFDF
 18198                           postinc2	equ	0xFDE
 18199                           postdec2	equ	0xFDD
 18200                           plusw2	equ	0xFDB
 18201                           fsr2h	equ	0xFDA
 18202                           fsr2l	equ	0xFD9
 18203                           status	equ	0xFD8
 18204                           
 18205 ;; *************** function _getsUSBUSART *****************
 18206 ;; Defined at:
 18207 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 18208 ;; Parameters:    Size  Location     Type
 18209 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 18210 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 18211 ;;  len             1   38[BANK0 ] unsigned char 
 18212 ;; Auto vars:     Size  Location     Type
 18213 ;;		None
 18214 ;; Return value:  Size  Location     Type
 18215 ;;                  1    wreg      unsigned char 
 18216 ;; Registers used:
 18217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18218 ;; Tracked objects:
 18219 ;;		On entry : 0/0
 18220 ;;		On exit  : 0/0
 18221 ;;		Unchanged: 0/0
 18222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18223 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18225 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18226 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18227 ;;Total ram usage:        4 bytes
 18228 ;; Hardware stack levels used:    1
 18229 ;; Hardware stack levels required when called:   12
 18230 ;; This function calls:
 18231 ;;		_USBTransferOnePacket
 18232 ;; This function is called by:
 18233 ;;		_Terminal
 18234 ;;		_GsmGprsTerminal
 18235 ;; This function uses a non-reentrant model
 18236 ;;
 18237                           
 18238                           	psect	text74
 18239  004988                     __ptext74:
 18240                           	opt stack 0
 18241  004988                     _getsUSBUSART:
 18242                           	opt stack 13
 18243                           
 18244                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 18245                           
 18246                           ; BSR set to: 0
 18247                           ;incstack = 0
 18248  004988  0E00               	movlw	0
 18249  00498A  0100               	movlb	0	; () banked
 18250  00498C  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18251                           
 18252                           ; BSR set to: 0
 18253                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 18254  00498E  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18255  004990  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18256  004992  B4D8               	btfsc	status,2,c
 18257  004994  D006               	goto	u12450
 18258                           
 18259                           ; BSR set to: 0
 18260  004996  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18261  00499A  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18262  00499E  BEDF               	btfsc	indf2,7,c
 18263  0049A0  D03B               	goto	l1921
 18264  0049A2                     u12450:
 18265                           
 18266                           ; BSR set to: 0
 18267                           ;usb_device_cdc.c: 493: {
 18268                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18269                           
 18270                           ; BSR set to: 0
 18271  0049A2  EE20 F001          	lfsr	2,1
 18272  0049A6  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18273  0049A8  26D9               	addwf	fsr2l,f,c
 18274  0049AA  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18275  0049AC  22DA               	addwfc	fsr2h,f,c
 18276  0049AE  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18277  0049B0  5CDE               	subwf	postinc2,w,c
 18278  0049B2  B0D8               	btfsc	status,0,c
 18279  0049B4  D008               	goto	l1924
 18280                           
 18281                           ; BSR set to: 0
 18282                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18283  0049B6  EE20 F001          	lfsr	2,1
 18284  0049BA  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18285  0049BC  26D9               	addwf	fsr2l,f,c
 18286  0049BE  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18287  0049C0  22DA               	addwfc	fsr2h,f,c
 18288  0049C2  50DF               	movf	indf2,w,c
 18289  0049C4  6F86               	movwf	getsUSBUSART@len& (0+255),b
 18290  0049C6                     l1924:
 18291                           
 18292                           ; BSR set to: 0
 18293                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18294                           
 18295                           ; BSR set to: 0
 18296  0049C6  0E00               	movlw	0
 18297  0049C8  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18298  0049CA  D013               	goto	l1925
 18299  0049CC                     
 18300                           ; BSR set to: 0
 18301                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18302                           
 18303                           ; BSR set to: 0
 18304  0049CC  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18305  0049CE  0D01               	mullw	1
 18306  0049D0  0E00               	movlw	low _cdc_data_rx
 18307  0049D2  24F3               	addwf	prodl,w,c
 18308  0049D4  6ED9               	movwf	fsr2l,c
 18309  0049D6  0E05               	movlw	high _cdc_data_rx
 18310  0049D8  20F4               	addwfc	prodh,w,c
 18311  0049DA  6EDA               	movwf	fsr2h,c
 18312  0049DC  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18313  0049DE  0D01               	mullw	1
 18314  0049E0  50F3               	movf	prodl,w,c
 18315  0049E2  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18316  0049E4  6EE1               	movwf	fsr1l,c
 18317  0049E6  50F4               	movf	prodh,w,c
 18318  0049E8  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18319  0049EA  6EE2               	movwf	fsr1h,c
 18320  0049EC  CFDF FFE7          	movff	indf2,indf1
 18321                           
 18322                           ; BSR set to: 0
 18323  0049F0  2BC6               	incf	_cdc_rx_len& (0+255),f,b
 18324  0049F2                     l1925:
 18325                           
 18326                           ; BSR set to: 0
 18327                           
 18328                           ; BSR set to: 0
 18329  0049F2  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18330  0049F4  5DC6               	subwf	_cdc_rx_len& (0+255),w,b
 18331  0049F6  A0D8               	btfss	status,0,c
 18332  0049F8  D7E9               	goto	l1926
 18333                           
 18334                           ; BSR set to: 0
 18335                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18336                           
 18337                           ; BSR set to: 0
 18338  0049FA  0E00               	movlw	0
 18339  0049FC  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18340  0049FE  0E00               	movlw	low _cdc_data_rx
 18341  004A00  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18342  004A02  0E05               	movlw	high _cdc_data_rx
 18343  004A04  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18344  004A06  0E40               	movlw	64
 18345  004A08  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18346  004A0A  0E02               	movlw	2
 18347  004A0C  ECDA  F020         	call	_USBTransferOnePacket
 18348  004A10  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18349  004A14  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18350  004A18                     l1921:
 18351                           
 18352                           ;usb_device_cdc.c: 513: }
 18353                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18354  004A18  0100               	movlb	0	; () banked
 18355  004A1A  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18356  004A1C  0012               	return	
 18357  004A1E                     __end_of_getsUSBUSART:
 18358                           	opt stack 0
 18359                           tosu	equ	0xFFF
 18360                           tosh	equ	0xFFE
 18361                           tosl	equ	0xFFD
 18362                           pclath	equ	0xFFA
 18363                           tblptru	equ	0xFF8
 18364                           tblptrh	equ	0xFF7
 18365                           tblptrl	equ	0xFF6
 18366                           tablat	equ	0xFF5
 18367                           prodh	equ	0xFF4
 18368                           prodl	equ	0xFF3
 18369                           intcon	equ	0xFF2
 18370                           intcon2	equ	0xFF1
 18371                           intcon3	equ	0xFF0
 18372                           indf0	equ	0xFEF
 18373                           postinc0	equ	0xFEE
 18374                           plusw0	equ	0xFEB
 18375                           fsr0h	equ	0xFEA
 18376                           fsr0l	equ	0xFE9
 18377                           wreg	equ	0xFE8
 18378                           indf1	equ	0xFE7
 18379                           postinc1	equ	0xFE6
 18380                           postdec1	equ	0xFE5
 18381                           fsr1h	equ	0xFE2
 18382                           fsr1l	equ	0xFE1
 18383                           indf2	equ	0xFDF
 18384                           postinc2	equ	0xFDE
 18385                           postdec2	equ	0xFDD
 18386                           plusw2	equ	0xFDB
 18387                           fsr2h	equ	0xFDA
 18388                           fsr2l	equ	0xFD9
 18389                           status	equ	0xFD8
 18390                           
 18391 ;; *************** function _USBTransferOnePacket *****************
 18392 ;; Defined at:
 18393 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18394 ;; Parameters:    Size  Location     Type
 18395 ;;  ep              1    wreg     unsigned char 
 18396 ;;  dir             1   29[BANK0 ] unsigned char 
 18397 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18398 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18399 ;;  len             1   32[BANK0 ] unsigned char 
 18400 ;; Auto vars:     Size  Location     Type
 18401 ;;  ep              1   33[BANK0 ] unsigned char 
 18402 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18403 ;;		 -> NULL(0), BDT(48), 
 18404 ;; Return value:  Size  Location     Type
 18405 ;;                  2   29[BANK0 ] PTR void 
 18406 ;; Registers used:
 18407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18408 ;; Tracked objects:
 18409 ;;		On entry : 0/0
 18410 ;;		On exit  : 0/0
 18411 ;;		Unchanged: 0/0
 18412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18413 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18414 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18416 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18417 ;;Total ram usage:        7 bytes
 18418 ;; Hardware stack levels used:    1
 18419 ;; Hardware stack levels required when called:   11
 18420 ;; This function calls:
 18421 ;;		Nothing
 18422 ;; This function is called by:
 18423 ;;		_CDCInitEP
 18424 ;;		_getsUSBUSART
 18425 ;;		_CDCTxService
 18426 ;;		_USBCDCEventHandler
 18427 ;; This function uses a non-reentrant model
 18428 ;;
 18429                           
 18430                           	psect	text75
 18431  0041B4                     __ptext75:
 18432                           	opt stack 0
 18433  0041B4                     _USBTransferOnePacket:
 18434                           	opt stack 13
 18435                           
 18436                           ; BSR set to: 0
 18437                           ;incstack = 0
 18438                           ;USBTransferOnePacket@ep stored from wreg
 18439  0041B4  0100               	movlb	0	; () banked
 18440  0041B6  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18441                           
 18442                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18443                           ;usb_device.c: 1018: if(dir != 0)
 18444  0041B8  0100               	movlb	0	; () banked
 18445  0041BA  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18446  0041BC  B4D8               	btfsc	status,2,c
 18447  0041BE  D007               	goto	l1645
 18448                           
 18449                           ; BSR set to: 0
 18450                           ;usb_device.c: 1019: {
 18451                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18452  0041C0  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18453  0041C2  0D02               	mullw	2
 18454  0041C4  0EB6               	movlw	low _pBDTEntryIn
 18455  0041C6  24F3               	addwf	prodl,w,c
 18456  0041C8  6ED9               	movwf	fsr2l,c
 18457  0041CA  0E00               	movlw	high _pBDTEntryIn
 18458  0041CC  D006               	goto	L16
 18459  0041CE                     l1645:
 18460                           
 18461                           ; BSR set to: 0
 18462                           ;usb_device.c: 1023: else
 18463                           ;usb_device.c: 1024: {
 18464                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18465                           
 18466                           ; BSR set to: 0
 18467  0041CE  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18468  0041D0  0D02               	mullw	2
 18469  0041D2  0E0E               	movlw	low _pBDTEntryOut
 18470  0041D4  24F3               	addwf	prodl,w,c
 18471  0041D6  6ED9               	movwf	fsr2l,c
 18472  0041D8  0E03               	movlw	high _pBDTEntryOut
 18473  0041DA                     L16:
 18474  0041DA  20F4               	addwfc	prodh,w,c
 18475  0041DC  6EDA               	movwf	fsr2h,c
 18476  0041DE  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18477  0041E2  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18478                           
 18479                           ; BSR set to: 0
 18480                           ;usb_device.c: 1027: }
 18481                           ;usb_device.c: 1031: if(handle == 0)
 18482                           
 18483                           ; BSR set to: 0
 18484  0041E6  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18485  0041E8  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18486  0041EA  A4D8               	btfss	status,2,c
 18487  0041EC  D005               	goto	l1647
 18488                           
 18489                           ; BSR set to: 0
 18490                           ;usb_device.c: 1032: {
 18491                           ;usb_device.c: 1033: return 0;
 18492  0041EE  0E00               	movlw	0
 18493  0041F0  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18494  0041F2  0E00               	movlw	0
 18495  0041F4  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18496                           
 18497                           ; BSR set to: 0
 18498  0041F6  0012               	return	
 18499  0041F8                     l1647:
 18500                           
 18501                           ; BSR set to: 0
 18502                           ;usb_device.c: 1034: }
 18503                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18504                           
 18505                           ; BSR set to: 0
 18506  0041F8  EE20 F002          	lfsr	2,2
 18507  0041FC  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18508  0041FE  26D9               	addwf	fsr2l,f,c
 18509  004200  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18510  004202  22DA               	addwfc	fsr2h,f,c
 18511  004204  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18512  004208  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18513                           
 18514                           ;usb_device.c: 1048: handle->CNT = len;
 18515  00420C  EE20 F001          	lfsr	2,1
 18516  004210  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18517  004212  26D9               	addwf	fsr2l,f,c
 18518  004214  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18519  004216  22DA               	addwfc	fsr2h,f,c
 18520  004218  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18521                           
 18522                           ; BSR set to: 0
 18523                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18524  00421C  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18525  004220  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18526  004224  0E40               	movlw	64
 18527  004226  16DF               	andwf	indf2,f,c
 18528                           
 18529                           ; BSR set to: 0
 18530                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18531  004228  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18532  00422C  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18533  004230  0E00               	movlw	0
 18534  004232  86DB               	bsf	plusw2,3,c
 18535                           
 18536                           ; BSR set to: 0
 18537                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18538  004234  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18539  004238  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18540  00423C  0E00               	movlw	0
 18541  00423E  8EDB               	bsf	plusw2,7,c
 18542                           
 18543                           ; BSR set to: 0
 18544                           ;usb_device.c: 1054: if(dir != 0)
 18545  004240  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18546  004242  B4D8               	btfsc	status,2,c
 18547  004244  D007               	goto	l1649
 18548                           
 18549                           ; BSR set to: 0
 18550                           ;usb_device.c: 1055: {
 18551                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18552  004246  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18553  004248  0D02               	mullw	2
 18554  00424A  0EB6               	movlw	low _pBDTEntryIn
 18555  00424C  24F3               	addwf	prodl,w,c
 18556  00424E  6ED9               	movwf	fsr2l,c
 18557  004250  0E00               	movlw	high _pBDTEntryIn
 18558  004252  D006               	goto	L17
 18559  004254                     l1649:
 18560                           
 18561                           ; BSR set to: 0
 18562                           ;usb_device.c: 1059: else
 18563                           ;usb_device.c: 1060: {
 18564                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18565                           
 18566                           ; BSR set to: 0
 18567  004254  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18568  004256  0D02               	mullw	2
 18569  004258  0E0E               	movlw	low _pBDTEntryOut
 18570  00425A  24F3               	addwf	prodl,w,c
 18571  00425C  6ED9               	movwf	fsr2l,c
 18572  00425E  0E03               	movlw	high _pBDTEntryOut
 18573  004260                     L17:
 18574  004260  20F4               	addwfc	prodh,w,c
 18575  004262  6EDA               	movwf	fsr2h,c
 18576  004264  0E04               	movlw	4
 18577  004266  1ADF               	xorwf	indf2,f,c
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;usb_device.c: 1063: }
 18581                           ;usb_device.c: 1064: return (void*)handle;
 18582                           
 18583                           ; BSR set to: 0
 18584  004268  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18585  00426C  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18586  004270  0012               	return	
 18587  004272                     __end_of_USBTransferOnePacket:
 18588                           	opt stack 0
 18589                           tosu	equ	0xFFF
 18590                           tosh	equ	0xFFE
 18591                           tosl	equ	0xFFD
 18592                           pclath	equ	0xFFA
 18593                           tblptru	equ	0xFF8
 18594                           tblptrh	equ	0xFF7
 18595                           tblptrl	equ	0xFF6
 18596                           tablat	equ	0xFF5
 18597                           prodh	equ	0xFF4
 18598                           prodl	equ	0xFF3
 18599                           intcon	equ	0xFF2
 18600                           intcon2	equ	0xFF1
 18601                           intcon3	equ	0xFF0
 18602                           indf0	equ	0xFEF
 18603                           postinc0	equ	0xFEE
 18604                           plusw0	equ	0xFEB
 18605                           fsr0h	equ	0xFEA
 18606                           fsr0l	equ	0xFE9
 18607                           wreg	equ	0xFE8
 18608                           indf1	equ	0xFE7
 18609                           postinc1	equ	0xFE6
 18610                           postdec1	equ	0xFE5
 18611                           fsr1h	equ	0xFE2
 18612                           fsr1l	equ	0xFE1
 18613                           indf2	equ	0xFDF
 18614                           postinc2	equ	0xFDE
 18615                           postdec2	equ	0xFDD
 18616                           plusw2	equ	0xFDB
 18617                           fsr2h	equ	0xFDA
 18618                           fsr2l	equ	0xFD9
 18619                           status	equ	0xFD8
 18620                           
 18621 ;; *************** function _atoi *****************
 18622 ;; Defined at:
 18623 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18624 ;; Parameters:    Size  Location     Type
 18625 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18626 ;;		 -> Terminal@Len(4), 
 18627 ;; Auto vars:     Size  Location     Type
 18628 ;;  a               2   40[BANK0 ] int 
 18629 ;;  sign            1   39[BANK0 ] unsigned char 
 18630 ;; Return value:  Size  Location     Type
 18631 ;;                  2   35[BANK0 ] int 
 18632 ;; Registers used:
 18633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18634 ;; Tracked objects:
 18635 ;;		On entry : 0/0
 18636 ;;		On exit  : 0/0
 18637 ;;		Unchanged: 0/0
 18638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18639 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18640 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18641 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18642 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18643 ;;Total ram usage:        7 bytes
 18644 ;; Hardware stack levels used:    1
 18645 ;; Hardware stack levels required when called:   12
 18646 ;; This function calls:
 18647 ;;		___wmul
 18648 ;;		_isdigit
 18649 ;; This function is called by:
 18650 ;;		_Terminal
 18651 ;; This function uses a non-reentrant model
 18652 ;;
 18653                           
 18654                           	psect	text76
 18655  0038FC                     __ptext76:
 18656                           	opt stack 0
 18657  0038FC                     _atoi:
 18658                           	opt stack 13
 18659                           
 18660                           ; BSR set to: 0
 18661                           ;incstack = 0
 18662  0038FC  D003               	goto	l2979
 18663  0038FE  0100               	movlb	0	; () banked
 18664  003900  4B83               	infsnz	atoi@s& (0+255),f,b
 18665  003902  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18666  003904                     l2979:
 18667                           
 18668                           ; BSR set to: 0
 18669  003904  C083  FFD9         	movff	atoi@s,fsr2l
 18670  003908  C084  FFDA         	movff	atoi@s+1,fsr2h
 18671  00390C  0E20               	movlw	32
 18672  00390E  18DE               	xorwf	postinc2,w,c
 18673  003910  B4D8               	btfsc	status,2,c
 18674  003912  D7F5               	goto	l2980
 18675  003914  C083  FFD9         	movff	atoi@s,fsr2l
 18676  003918  C084  FFDA         	movff	atoi@s+1,fsr2h
 18677  00391C  0E09               	movlw	9
 18678  00391E  18DE               	xorwf	postinc2,w,c
 18679  003920  B4D8               	btfsc	status,2,c
 18680  003922  D7ED               	goto	l2980
 18681  003924  0E00               	movlw	0
 18682  003926  0100               	movlb	0	; () banked
 18683  003928  6F89               	movwf	(atoi@a+1)& (0+255),b
 18684  00392A  0E00               	movlw	0
 18685  00392C  6F88               	movwf	atoi@a& (0+255),b
 18686  00392E  0E00               	movlw	0
 18687  003930  6F87               	movwf	atoi@sign& (0+255),b
 18688                           
 18689                           ; BSR set to: 0
 18690  003932  C083  FFD9         	movff	atoi@s,fsr2l
 18691  003936  C084  FFDA         	movff	atoi@s+1,fsr2h
 18692  00393A  0E2D               	movlw	45
 18693  00393C  18DE               	xorwf	postinc2,w,c
 18694  00393E  A4D8               	btfss	status,2,c
 18695  003940  D002               	goto	l2982
 18696                           
 18697                           ; BSR set to: 0
 18698  003942  2B87               	incf	atoi@sign& (0+255),f,b
 18699  003944  D026               	goto	l13560
 18700  003946                     l2982:
 18701                           
 18702                           ; BSR set to: 0
 18703                           
 18704                           ; BSR set to: 0
 18705  003946  C083  FFD9         	movff	atoi@s,fsr2l
 18706  00394A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18707  00394E  0E2B               	movlw	43
 18708  003950  18DE               	xorwf	postinc2,w,c
 18709  003952  A4D8               	btfss	status,2,c
 18710  003954  D020               	goto	l2985
 18711  003956  D01D               	goto	l13560
 18712  003958                     
 18713                           ; BSR set to: 0
 18714  003958  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18715  00395C  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18716  003960  0E00               	movlw	0
 18717  003962  0100               	movlb	0	; () banked
 18718  003964  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18719  003966  0E0A               	movlw	10
 18720  003968  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18721  00396A  EC83  F031         	call	___wmul	;wreg free
 18722  00396E  C083  FFD9         	movff	atoi@s,fsr2l
 18723  003972  C084  FFDA         	movff	atoi@s+1,fsr2h
 18724  003976  50DF               	movf	indf2,w,c
 18725  003978  0100               	movlb	0	; () banked
 18726  00397A  6F85               	movwf	??_atoi& (0+255),b
 18727  00397C  6B86               	clrf	(??_atoi+1)& (0+255),b
 18728  00397E  517D               	movf	?___wmul& (0+255),w,b
 18729  003980  2785               	addwf	??_atoi& (0+255),f,b
 18730  003982  517E               	movf	(?___wmul+1)& (0+255),w,b
 18731  003984  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18732  003986  0ED0               	movlw	208
 18733  003988  2585               	addwf	??_atoi& (0+255),w,b
 18734  00398A  6F88               	movwf	atoi@a& (0+255),b
 18735  00398C  0EFF               	movlw	255
 18736  00398E  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18737  003990  6F89               	movwf	(atoi@a+1)& (0+255),b
 18738  003992                     l13560:
 18739                           
 18740                           ; BSR set to: 0
 18741  003992  4B83               	infsnz	atoi@s& (0+255),f,b
 18742  003994  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18743  003996                     l2985:
 18744                           
 18745                           ; BSR set to: 0
 18746                           
 18747                           ; BSR set to: 0
 18748  003996  C083  FFD9         	movff	atoi@s,fsr2l
 18749  00399A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18750  00399E  50DF               	movf	indf2,w,c
 18751  0039A0  EC49  F032         	call	_isdigit
 18752  0039A4  B0D8               	btfsc	status,0,c
 18753  0039A6  D7D8               	goto	l2986
 18754  0039A8  0100               	movlb	0	; () banked
 18755  0039AA  5187               	movf	atoi@sign& (0+255),w,b
 18756  0039AC  B4D8               	btfsc	status,2,c
 18757  0039AE  D00D               	goto	l2988
 18758                           
 18759                           ; BSR set to: 0
 18760  0039B0  C088  F085         	movff	atoi@a,??_atoi
 18761  0039B4  C089  F086         	movff	atoi@a+1,??_atoi+1
 18762  0039B8  1F85               	comf	??_atoi& (0+255),f,b
 18763  0039BA  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18764  0039BC  4B85               	infsnz	??_atoi& (0+255),f,b
 18765  0039BE  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18766  0039C0  C085  F083         	movff	??_atoi,?_atoi
 18767  0039C4  C086  F084         	movff	??_atoi+1,?_atoi+1
 18768  0039C8  0012               	return	
 18769  0039CA                     l2988:
 18770                           
 18771                           ; BSR set to: 0
 18772  0039CA  C088  F083         	movff	atoi@a,?_atoi
 18773  0039CE  C089  F084         	movff	atoi@a+1,?_atoi+1
 18774                           
 18775                           ; BSR set to: 0
 18776  0039D2  0012               	return		;funcret
 18777  0039D4                     __end_of_atoi:
 18778                           	opt stack 0
 18779                           tosu	equ	0xFFF
 18780                           tosh	equ	0xFFE
 18781                           tosl	equ	0xFFD
 18782                           pclath	equ	0xFFA
 18783                           tblptru	equ	0xFF8
 18784                           tblptrh	equ	0xFF7
 18785                           tblptrl	equ	0xFF6
 18786                           tablat	equ	0xFF5
 18787                           prodh	equ	0xFF4
 18788                           prodl	equ	0xFF3
 18789                           intcon	equ	0xFF2
 18790                           intcon2	equ	0xFF1
 18791                           intcon3	equ	0xFF0
 18792                           indf0	equ	0xFEF
 18793                           postinc0	equ	0xFEE
 18794                           plusw0	equ	0xFEB
 18795                           fsr0h	equ	0xFEA
 18796                           fsr0l	equ	0xFE9
 18797                           wreg	equ	0xFE8
 18798                           indf1	equ	0xFE7
 18799                           postinc1	equ	0xFE6
 18800                           postdec1	equ	0xFE5
 18801                           fsr1h	equ	0xFE2
 18802                           fsr1l	equ	0xFE1
 18803                           indf2	equ	0xFDF
 18804                           postinc2	equ	0xFDE
 18805                           postdec2	equ	0xFDD
 18806                           plusw2	equ	0xFDB
 18807                           fsr2h	equ	0xFDA
 18808                           fsr2l	equ	0xFD9
 18809                           status	equ	0xFD8
 18810                           
 18811 ;; *************** function _isdigit *****************
 18812 ;; Defined at:
 18813 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18814 ;; Parameters:    Size  Location     Type
 18815 ;;  c               1    wreg     unsigned char 
 18816 ;; Auto vars:     Size  Location     Type
 18817 ;;  c               1   31[BANK0 ] unsigned char 
 18818 ;; Return value:  Size  Location     Type
 18819 ;;		None               void
 18820 ;; Registers used:
 18821 ;;		wreg, status,2, status,0
 18822 ;; Tracked objects:
 18823 ;;		On entry : 0/0
 18824 ;;		On exit  : 0/0
 18825 ;;		Unchanged: 0/0
 18826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18828 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18829 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18830 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18831 ;;Total ram usage:        3 bytes
 18832 ;; Hardware stack levels used:    1
 18833 ;; Hardware stack levels required when called:   11
 18834 ;; This function calls:
 18835 ;;		Nothing
 18836 ;; This function is called by:
 18837 ;;		_atoi
 18838 ;;		_strtol
 18839 ;;		_xtoi
 18840 ;;		_isxdigit
 18841 ;; This function uses a non-reentrant model
 18842 ;;
 18843                           
 18844                           	psect	text77
 18845  006492                     __ptext77:
 18846                           	opt stack 0
 18847  006492                     _isdigit:
 18848                           	opt stack 12
 18849                           
 18850                           ; BSR set to: 0
 18851                           ;incstack = 0
 18852                           ;isdigit@c stored from wreg
 18853  006492  0100               	movlb	0	; () banked
 18854  006494  6F7F               	movwf	isdigit@c& (0+255),b
 18855  006496  0E00               	movlw	0
 18856  006498  0100               	movlb	0	; () banked
 18857  00649A  6F7E               	movwf	_isdigit$6348& (0+255),b
 18858                           
 18859                           ; BSR set to: 0
 18860  00649C  0E3A               	movlw	58
 18861  00649E  617F               	cpfslt	isdigit@c& (0+255),b
 18862  0064A0  D005               	goto	l3160
 18863                           
 18864                           ; BSR set to: 0
 18865  0064A2  0E2F               	movlw	47
 18866  0064A4  657F               	cpfsgt	isdigit@c& (0+255),b
 18867  0064A6  D002               	goto	l3160
 18868                           
 18869                           ; BSR set to: 0
 18870  0064A8  0E01               	movlw	1
 18871  0064AA  6F7E               	movwf	_isdigit$6348& (0+255),b
 18872  0064AC                     l3160:
 18873                           
 18874                           ; BSR set to: 0
 18875                           
 18876                           ; BSR set to: 0
 18877  0064AC  C07E  F07D         	movff	_isdigit$6348,??_isdigit
 18878  0064B0  317D               	rrcf	??_isdigit& (0+255),w,b
 18879  0064B2  0012               	return	
 18880  0064B4                     __end_of_isdigit:
 18881                           	opt stack 0
 18882                           tosu	equ	0xFFF
 18883                           tosh	equ	0xFFE
 18884                           tosl	equ	0xFFD
 18885                           pclath	equ	0xFFA
 18886                           tblptru	equ	0xFF8
 18887                           tblptrh	equ	0xFF7
 18888                           tblptrl	equ	0xFF6
 18889                           tablat	equ	0xFF5
 18890                           prodh	equ	0xFF4
 18891                           prodl	equ	0xFF3
 18892                           intcon	equ	0xFF2
 18893                           intcon2	equ	0xFF1
 18894                           intcon3	equ	0xFF0
 18895                           indf0	equ	0xFEF
 18896                           postinc0	equ	0xFEE
 18897                           plusw0	equ	0xFEB
 18898                           fsr0h	equ	0xFEA
 18899                           fsr0l	equ	0xFE9
 18900                           wreg	equ	0xFE8
 18901                           indf1	equ	0xFE7
 18902                           postinc1	equ	0xFE6
 18903                           postdec1	equ	0xFE5
 18904                           fsr1h	equ	0xFE2
 18905                           fsr1l	equ	0xFE1
 18906                           indf2	equ	0xFDF
 18907                           postinc2	equ	0xFDE
 18908                           postdec2	equ	0xFDD
 18909                           plusw2	equ	0xFDB
 18910                           fsr2h	equ	0xFDA
 18911                           fsr2l	equ	0xFD9
 18912                           status	equ	0xFD8
 18913                           
 18914 ;; *************** function _Rtcm_SetRtccDate *****************
 18915 ;; Defined at:
 18916 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18917 ;; Parameters:    Size  Location     Type
 18918 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18919 ;; Auto vars:     Size  Location     Type
 18920 ;;		None
 18921 ;; Return value:  Size  Location     Type
 18922 ;;                  1    wreg      void 
 18923 ;; Registers used:
 18924 ;;		wreg, status,2, status,0, cstack
 18925 ;; Tracked objects:
 18926 ;;		On entry : 0/0
 18927 ;;		On exit  : 0/0
 18928 ;;		Unchanged: 0/0
 18929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18930 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18933 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18934 ;;Total ram usage:        8 bytes
 18935 ;; Hardware stack levels used:    1
 18936 ;; Hardware stack levels required when called:   13
 18937 ;; This function calls:
 18938 ;;		_Rtcc_LockRtc
 18939 ;;		_Rtcc_SetRtccValue
 18940 ;;		_Rtcc_UnlockRtc
 18941 ;; This function is called by:
 18942 ;;		_Rtcm_MainTask
 18943 ;; This function uses a non-reentrant model
 18944 ;;
 18945                           
 18946                           	psect	text78
 18947  0057A8                     __ptext78:
 18948                           	opt stack 0
 18949  0057A8                     _Rtcm_SetRtccDate:
 18950                           	opt stack 14
 18951                           
 18952                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18953                           
 18954                           ; BSR set to: 0
 18955                           ;incstack = 0
 18956  0057A8  EC7E  F033         	call	_Rtcc_UnlockRtc	;wreg free
 18957                           
 18958                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18959  0057AC  0100               	movlb	0	; () banked
 18960  0057AE  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18961  0057B0  0F30               	addlw	48
 18962  0057B2  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18963  0057B4  0E00               	movlw	0
 18964  0057B6  EC39  F00C         	call	_Rtcc_SetRtccValue
 18965                           
 18966                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18967  0057BA  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18968  0057BE  0E01               	movlw	1
 18969  0057C0  EC39  F00C         	call	_Rtcc_SetRtccValue
 18970                           
 18971                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18972  0057C4  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18973  0057C8  0E02               	movlw	2
 18974  0057CA  EC39  F00C         	call	_Rtcc_SetRtccValue
 18975                           
 18976                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18977  0057CE  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18978  0057D2  0E03               	movlw	3
 18979  0057D4  EC39  F00C         	call	_Rtcc_SetRtccValue
 18980                           
 18981                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18982  0057D8  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18983  0057DC  0E04               	movlw	4
 18984  0057DE  EC39  F00C         	call	_Rtcc_SetRtccValue
 18985                           
 18986                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18987  0057E2  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18988  0057E6  0E05               	movlw	5
 18989  0057E8  EC39  F00C         	call	_Rtcc_SetRtccValue
 18990                           
 18991                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18992  0057EC  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18993  0057F0  0E06               	movlw	6
 18994  0057F2  EC39  F00C         	call	_Rtcc_SetRtccValue
 18995                           
 18996                           ;rtcm.c: 191: Rtcc_LockRtc();
 18997  0057F6  EC86  F033         	call	_Rtcc_LockRtc	;wreg free
 18998  0057FA  0012               	return		;funcret
 18999  0057FC                     __end_of_Rtcm_SetRtccDate:
 19000                           	opt stack 0
 19001                           tosu	equ	0xFFF
 19002                           tosh	equ	0xFFE
 19003                           tosl	equ	0xFFD
 19004                           pclath	equ	0xFFA
 19005                           tblptru	equ	0xFF8
 19006                           tblptrh	equ	0xFF7
 19007                           tblptrl	equ	0xFF6
 19008                           tablat	equ	0xFF5
 19009                           prodh	equ	0xFF4
 19010                           prodl	equ	0xFF3
 19011                           intcon	equ	0xFF2
 19012                           intcon2	equ	0xFF1
 19013                           intcon3	equ	0xFF0
 19014                           indf0	equ	0xFEF
 19015                           postinc0	equ	0xFEE
 19016                           plusw0	equ	0xFEB
 19017                           fsr0h	equ	0xFEA
 19018                           fsr0l	equ	0xFE9
 19019                           wreg	equ	0xFE8
 19020                           indf1	equ	0xFE7
 19021                           postinc1	equ	0xFE6
 19022                           postdec1	equ	0xFE5
 19023                           fsr1h	equ	0xFE2
 19024                           fsr1l	equ	0xFE1
 19025                           indf2	equ	0xFDF
 19026                           postinc2	equ	0xFDE
 19027                           postdec2	equ	0xFDD
 19028                           plusw2	equ	0xFDB
 19029                           fsr2h	equ	0xFDA
 19030                           fsr2l	equ	0xFD9
 19031                           status	equ	0xFD8
 19032                           
 19033 ;; *************** function _Rtcc_UnlockRtc *****************
 19034 ;; Defined at:
 19035 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19036 ;; Parameters:    Size  Location     Type
 19037 ;;		None
 19038 ;; Auto vars:     Size  Location     Type
 19039 ;;		None
 19040 ;; Return value:  Size  Location     Type
 19041 ;;                  1    wreg      void 
 19042 ;; Registers used:
 19043 ;;		None
 19044 ;; Tracked objects:
 19045 ;;		On entry : 0/0
 19046 ;;		On exit  : 0/0
 19047 ;;		Unchanged: 0/0
 19048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19053 ;;Total ram usage:        0 bytes
 19054 ;; Hardware stack levels used:    1
 19055 ;; Hardware stack levels required when called:   11
 19056 ;; This function calls:
 19057 ;;		Nothing
 19058 ;; This function is called by:
 19059 ;;		_Rtcm_MainTask
 19060 ;;		_Rtcm_SetRtccDate
 19061 ;;		_Rtcm_SetRtccAlarm
 19062 ;; This function uses a non-reentrant model
 19063 ;;
 19064                           
 19065                           	psect	text79
 19066  0066FC                     __ptext79:
 19067                           	opt stack 0
 19068  0066FC                     _Rtcc_UnlockRtc:
 19069                           	opt stack 15
 19070                           
 19071                           ;incstack = 0
 19072  0066FC  010F               	movlb	15	;# 
 19073  0066FE  0E55               	movlw	85	;# 
 19074  006700  6EA7               	movwf	4007,c	;# 
 19075  006702  0EAA               	movlw	170	;# 
 19076  006704  6EA7               	movwf	4007,c	;# 
 19077                           
 19078                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 19079  006706  010F               	movlb	15	; () banked
 19080  006708  8B3F               	bsf	63,5,b	;volatile
 19081                           
 19082                           ; BSR set to: 15
 19083  00670A  0012               	return		;funcret
 19084  00670C                     __end_of_Rtcc_UnlockRtc:
 19085                           	opt stack 0
 19086                           tosu	equ	0xFFF
 19087                           tosh	equ	0xFFE
 19088                           tosl	equ	0xFFD
 19089                           pclath	equ	0xFFA
 19090                           tblptru	equ	0xFF8
 19091                           tblptrh	equ	0xFF7
 19092                           tblptrl	equ	0xFF6
 19093                           tablat	equ	0xFF5
 19094                           prodh	equ	0xFF4
 19095                           prodl	equ	0xFF3
 19096                           intcon	equ	0xFF2
 19097                           intcon2	equ	0xFF1
 19098                           intcon3	equ	0xFF0
 19099                           indf0	equ	0xFEF
 19100                           postinc0	equ	0xFEE
 19101                           plusw0	equ	0xFEB
 19102                           fsr0h	equ	0xFEA
 19103                           fsr0l	equ	0xFE9
 19104                           wreg	equ	0xFE8
 19105                           indf1	equ	0xFE7
 19106                           postinc1	equ	0xFE6
 19107                           postdec1	equ	0xFE5
 19108                           fsr1h	equ	0xFE2
 19109                           fsr1l	equ	0xFE1
 19110                           indf2	equ	0xFDF
 19111                           postinc2	equ	0xFDE
 19112                           postdec2	equ	0xFDD
 19113                           plusw2	equ	0xFDB
 19114                           fsr2h	equ	0xFDA
 19115                           fsr2l	equ	0xFD9
 19116                           status	equ	0xFD8
 19117                           
 19118 ;; *************** function _Rtcc_SetRtccValue *****************
 19119 ;; Defined at:
 19120 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19121 ;; Parameters:    Size  Location     Type
 19122 ;;  RtccPtrVal      1    wreg     enum E7757
 19123 ;;  Value           1   37[BANK0 ] unsigned char 
 19124 ;; Auto vars:     Size  Location     Type
 19125 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19126 ;; Return value:  Size  Location     Type
 19127 ;;                  1    wreg      void 
 19128 ;; Registers used:
 19129 ;;		wreg, status,2, status,0, cstack
 19130 ;; Tracked objects:
 19131 ;;		On entry : 0/0
 19132 ;;		On exit  : 0/0
 19133 ;;		Unchanged: 0/0
 19134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19135 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19137 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19138 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19139 ;;Total ram usage:        4 bytes
 19140 ;; Hardware stack levels used:    1
 19141 ;; Hardware stack levels required when called:   12
 19142 ;; This function calls:
 19143 ;;		___awdiv
 19144 ;;		___awmod
 19145 ;; This function is called by:
 19146 ;;		_Rtcm_SetRtccDate
 19147 ;; This function uses a non-reentrant model
 19148 ;;
 19149                           
 19150                           	psect	text80
 19151  001872                     __ptext80:
 19152                           	opt stack 0
 19153  001872                     _Rtcc_SetRtccValue:
 19154                           	opt stack 14
 19155                           
 19156                           ; BSR set to: 15
 19157                           ;incstack = 0
 19158                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19159  001872  0100               	movlb	0	; () banked
 19160  001874  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19161                           
 19162                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19163  001876  D0FC               	goto	l441
 19164  001878                     l442:
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19168  001878  010F               	movlb	15	; () banked
 19169  00187A  833F               	bsf	63,1,b	;volatile
 19170                           
 19171                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19172  00187C  813F               	bsf	63,0,b	;volatile
 19173                           
 19174                           ; BSR set to: 15
 19175                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19176  00187E  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19177  001882  0100               	movlb	0	; () banked
 19178  001884  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19179  001886  0E00               	movlw	0
 19180  001888  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19181  00188A  0E0A               	movlw	10
 19182  00188C  6F7F               	movwf	___awmod@divisor& (0+255),b
 19183  00188E  EC92  F028         	call	___awmod	;wreg free
 19184  001892  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19185  001896  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19186  00189A  0E0F               	movlw	15
 19187  00189C  0100               	movlb	0	; () banked
 19188  00189E  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19189  0018A0  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19190  0018A4  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19191  0018A6  0E00               	movlw	0
 19192  0018A8  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19193  0018AA  0E0A               	movlw	10
 19194  0018AC  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19195  0018AE  EC92  F027         	call	___awdiv	;wreg free
 19196  0018B2  0100               	movlb	0	; () banked
 19197  0018B4  397D               	swapf	?___awdiv& (0+255),w,b
 19198  0018B6  0BF0               	andlw	240
 19199  0018B8  0BF0               	andlw	240
 19200  0018BA  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19201  0018BC  6E98               	movwf	3992,c	;volatile
 19202                           
 19203                           ;rtcc_drv.c: 393: break;
 19204  0018BE  0012               	return	
 19205  0018C0                     l444:
 19206                           
 19207                           ; BSR set to: 0
 19208                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19209  0018C0  010F               	movlb	15	; () banked
 19210  0018C2  833F               	bsf	63,1,b	;volatile
 19211                           
 19212                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19213  0018C4  913F               	bcf	63,0,b	;volatile
 19214                           
 19215                           ; BSR set to: 15
 19216                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19217  0018C6  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19218  0018CA  0100               	movlb	0	; () banked
 19219  0018CC  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19220  0018CE  0E00               	movlw	0
 19221  0018D0  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19222  0018D2  0E0A               	movlw	10
 19223  0018D4  6F7F               	movwf	___awmod@divisor& (0+255),b
 19224  0018D6  EC92  F028         	call	___awmod	;wreg free
 19225  0018DA  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19226  0018DE  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19227  0018E2  0E0F               	movlw	15
 19228  0018E4  0100               	movlb	0	; () banked
 19229  0018E6  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19230  0018E8  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19231  0018EC  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19232  0018EE  0E00               	movlw	0
 19233  0018F0  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19234  0018F2  0E0A               	movlw	10
 19235  0018F4  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19236  0018F6  EC92  F027         	call	___awdiv	;wreg free
 19237  0018FA  0100               	movlb	0	; () banked
 19238  0018FC  397D               	swapf	?___awdiv& (0+255),w,b
 19239  0018FE  0BF0               	andlw	240
 19240  001900  0BF0               	andlw	240
 19241  001902  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19242  001904  6E99               	movwf	3993,c	;volatile
 19243                           
 19244                           ;rtcc_drv.c: 401: break;
 19245  001906  0012               	return	
 19246  001908                     l445:
 19247                           
 19248                           ; BSR set to: 0
 19249                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19250  001908  010F               	movlb	15	; () banked
 19251  00190A  833F               	bsf	63,1,b	;volatile
 19252                           
 19253                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19254  00190C  913F               	bcf	63,0,b	;volatile
 19255                           
 19256                           ; BSR set to: 15
 19257                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19258  00190E  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19259  001912  0100               	movlb	0	; () banked
 19260  001914  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19261  001916  0E00               	movlw	0
 19262  001918  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19263  00191A  0E0A               	movlw	10
 19264  00191C  6F7F               	movwf	___awmod@divisor& (0+255),b
 19265  00191E  EC92  F028         	call	___awmod	;wreg free
 19266  001922  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19267  001926  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19268  00192A  0E0F               	movlw	15
 19269  00192C  0100               	movlb	0	; () banked
 19270  00192E  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19271  001930  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19272  001934  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19273  001936  0E00               	movlw	0
 19274  001938  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19275  00193A  0E0A               	movlw	10
 19276  00193C  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19277  00193E  EC92  F027         	call	___awdiv	;wreg free
 19278  001942  0100               	movlb	0	; () banked
 19279  001944  397D               	swapf	?___awdiv& (0+255),w,b
 19280  001946  0BF0               	andlw	240
 19281  001948  0BF0               	andlw	240
 19282  00194A  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19283  00194C  6E98               	movwf	3992,c	;volatile
 19284                           
 19285                           ;rtcc_drv.c: 409: break;
 19286  00194E  0012               	return	
 19287  001950                     l446:
 19288                           
 19289                           ; BSR set to: 0
 19290                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19291  001950  010F               	movlb	15	; () banked
 19292  001952  933F               	bcf	63,1,b	;volatile
 19293                           
 19294                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19295  001954  813F               	bsf	63,0,b	;volatile
 19296                           
 19297                           ; BSR set to: 15
 19298                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19299  001956  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19300  00195A  0100               	movlb	0	; () banked
 19301  00195C  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19302  00195E  0E00               	movlw	0
 19303  001960  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19304  001962  0E0A               	movlw	10
 19305  001964  6F7F               	movwf	___awmod@divisor& (0+255),b
 19306  001966  EC92  F028         	call	___awmod	;wreg free
 19307  00196A  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19308  00196E  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19309  001972  0E0F               	movlw	15
 19310  001974  0100               	movlb	0	; () banked
 19311  001976  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19312  001978  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19313  00197C  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19314  00197E  0E00               	movlw	0
 19315  001980  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19316  001982  0E0A               	movlw	10
 19317  001984  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19318  001986  EC92  F027         	call	___awdiv	;wreg free
 19319  00198A  0100               	movlb	0	; () banked
 19320  00198C  397D               	swapf	?___awdiv& (0+255),w,b
 19321  00198E  0BF0               	andlw	240
 19322  001990  0BF0               	andlw	240
 19323  001992  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19324  001994  6E99               	movwf	3993,c	;volatile
 19325                           
 19326                           ;rtcc_drv.c: 417: break;
 19327  001996  0012               	return	
 19328  001998                     l447:
 19329                           
 19330                           ; BSR set to: 0
 19331                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19332  001998  010F               	movlb	15	; () banked
 19333  00199A  933F               	bcf	63,1,b	;volatile
 19334                           
 19335                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19336  00199C  813F               	bsf	63,0,b	;volatile
 19337                           
 19338                           ; BSR set to: 15
 19339                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19340  00199E  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19341  0019A2  0100               	movlb	0	; () banked
 19342  0019A4  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19343  0019A6  0E00               	movlw	0
 19344  0019A8  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19345  0019AA  0E0A               	movlw	10
 19346  0019AC  6F7F               	movwf	___awmod@divisor& (0+255),b
 19347  0019AE  EC92  F028         	call	___awmod	;wreg free
 19348  0019B2  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19349  0019B6  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19350  0019BA  0E0F               	movlw	15
 19351  0019BC  0100               	movlb	0	; () banked
 19352  0019BE  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19353  0019C0  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19354  0019C4  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19355  0019C6  0E00               	movlw	0
 19356  0019C8  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19357  0019CA  0E0A               	movlw	10
 19358  0019CC  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19359  0019CE  EC92  F027         	call	___awdiv	;wreg free
 19360  0019D2  0100               	movlb	0	; () banked
 19361  0019D4  397D               	swapf	?___awdiv& (0+255),w,b
 19362  0019D6  0BF0               	andlw	240
 19363  0019D8  0BF0               	andlw	240
 19364  0019DA  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19365  0019DC  6E98               	movwf	3992,c	;volatile
 19366                           
 19367                           ;rtcc_drv.c: 425: break;
 19368  0019DE  0012               	return	
 19369  0019E0                     l448:
 19370                           
 19371                           ; BSR set to: 0
 19372                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19373  0019E0  010F               	movlb	15	; () banked
 19374  0019E2  933F               	bcf	63,1,b	;volatile
 19375                           
 19376                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19377  0019E4  913F               	bcf	63,0,b	;volatile
 19378                           
 19379                           ; BSR set to: 15
 19380                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19381  0019E6  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19382  0019EA  0100               	movlb	0	; () banked
 19383  0019EC  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19384  0019EE  0E00               	movlw	0
 19385  0019F0  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19386  0019F2  0E0A               	movlw	10
 19387  0019F4  6F7F               	movwf	___awmod@divisor& (0+255),b
 19388  0019F6  EC92  F028         	call	___awmod	;wreg free
 19389  0019FA  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19390  0019FE  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19391  001A02  0E0F               	movlw	15
 19392  001A04  0100               	movlb	0	; () banked
 19393  001A06  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19394  001A08  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19395  001A0C  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19396  001A0E  0E00               	movlw	0
 19397  001A10  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19398  001A12  0E0A               	movlw	10
 19399  001A14  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19400  001A16  EC92  F027         	call	___awdiv	;wreg free
 19401  001A1A  0100               	movlb	0	; () banked
 19402  001A1C  397D               	swapf	?___awdiv& (0+255),w,b
 19403  001A1E  0BF0               	andlw	240
 19404  001A20  0BF0               	andlw	240
 19405  001A22  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19406  001A24  6E99               	movwf	3993,c	;volatile
 19407                           
 19408                           ;rtcc_drv.c: 433: break;
 19409  001A26  0012               	return	
 19410  001A28                     l449:
 19411                           
 19412                           ; BSR set to: 0
 19413                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19414  001A28  010F               	movlb	15	; () banked
 19415  001A2A  933F               	bcf	63,1,b	;volatile
 19416                           
 19417                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19418  001A2C  913F               	bcf	63,0,b	;volatile
 19419                           
 19420                           ; BSR set to: 15
 19421                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19422  001A2E  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19423  001A32  0100               	movlb	0	; () banked
 19424  001A34  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19425  001A36  0E00               	movlw	0
 19426  001A38  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19427  001A3A  0E0A               	movlw	10
 19428  001A3C  6F7F               	movwf	___awmod@divisor& (0+255),b
 19429  001A3E  EC92  F028         	call	___awmod	;wreg free
 19430  001A42  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19431  001A46  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19432  001A4A  0E0F               	movlw	15
 19433  001A4C  0100               	movlb	0	; () banked
 19434  001A4E  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19435  001A50  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19436  001A54  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19437  001A56  0E00               	movlw	0
 19438  001A58  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19439  001A5A  0E0A               	movlw	10
 19440  001A5C  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19441  001A5E  EC92  F027         	call	___awdiv	;wreg free
 19442  001A62  0100               	movlb	0	; () banked
 19443  001A64  397D               	swapf	?___awdiv& (0+255),w,b
 19444  001A66  0BF0               	andlw	240
 19445  001A68  0BF0               	andlw	240
 19446  001A6A  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19447  001A6C  6E98               	movwf	3992,c	;volatile
 19448                           
 19449                           ; BSR set to: 0
 19450                           ;rtcc_drv.c: 445: }
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;rtcc_drv.c: 444: break;
 19454                           
 19455                           ;rtcc_drv.c: 443: default:
 19456                           
 19457                           ;rtcc_drv.c: 441: break;
 19458  001A6E  0012               	return	
 19459  001A70                     l441:
 19460                           
 19461                           ; BSR set to: 0
 19462  001A70  0100               	movlb	0	; () banked
 19463  001A72  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19464                           
 19465                           ; Switch size 1, requested type "space"
 19466                           ; Number of cases is 7, Range of values is 0 to 6
 19467                           ; switch strategies available:
 19468                           ; Name         Instructions Cycles
 19469                           ; simple_byte           22    12 (average)
 19470                           ;	Chosen strategy is simple_byte
 19471  001A74  0A00               	xorlw	0	; case 0
 19472  001A76  B4D8               	btfsc	status,2,c
 19473  001A78  D6FF               	goto	l442
 19474  001A7A  0A01               	xorlw	1	; case 1
 19475  001A7C  B4D8               	btfsc	status,2,c
 19476  001A7E  D720               	goto	l444
 19477  001A80  0A03               	xorlw	3	; case 2
 19478  001A82  B4D8               	btfsc	status,2,c
 19479  001A84  D741               	goto	l445
 19480  001A86  0A01               	xorlw	1	; case 3
 19481  001A88  B4D8               	btfsc	status,2,c
 19482  001A8A  D762               	goto	l446
 19483  001A8C  0A07               	xorlw	7	; case 4
 19484  001A8E  B4D8               	btfsc	status,2,c
 19485  001A90  D783               	goto	l447
 19486  001A92  0A01               	xorlw	1	; case 5
 19487  001A94  B4D8               	btfsc	status,2,c
 19488  001A96  D7A4               	goto	l448
 19489  001A98  0A03               	xorlw	3	; case 6
 19490  001A9A  A4D8               	btfss	status,2,c
 19491  001A9C  0012               	return	
 19492  001A9E  D7C4               	goto	l449
 19493  001AA0                     __end_of_Rtcc_SetRtccValue:
 19494                           	opt stack 0
 19495                           tosu	equ	0xFFF
 19496                           tosh	equ	0xFFE
 19497                           tosl	equ	0xFFD
 19498                           pclath	equ	0xFFA
 19499                           tblptru	equ	0xFF8
 19500                           tblptrh	equ	0xFF7
 19501                           tblptrl	equ	0xFF6
 19502                           tablat	equ	0xFF5
 19503                           prodh	equ	0xFF4
 19504                           prodl	equ	0xFF3
 19505                           intcon	equ	0xFF2
 19506                           intcon2	equ	0xFF1
 19507                           intcon3	equ	0xFF0
 19508                           indf0	equ	0xFEF
 19509                           postinc0	equ	0xFEE
 19510                           plusw0	equ	0xFEB
 19511                           fsr0h	equ	0xFEA
 19512                           fsr0l	equ	0xFE9
 19513                           wreg	equ	0xFE8
 19514                           indf1	equ	0xFE7
 19515                           postinc1	equ	0xFE6
 19516                           postdec1	equ	0xFE5
 19517                           fsr1h	equ	0xFE2
 19518                           fsr1l	equ	0xFE1
 19519                           indf2	equ	0xFDF
 19520                           postinc2	equ	0xFDE
 19521                           postdec2	equ	0xFDD
 19522                           plusw2	equ	0xFDB
 19523                           fsr2h	equ	0xFDA
 19524                           fsr2l	equ	0xFD9
 19525                           status	equ	0xFD8
 19526                           
 19527 ;; *************** function ___awmod *****************
 19528 ;; Defined at:
 19529 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19530 ;; Parameters:    Size  Location     Type
 19531 ;;  dividend        2   29[BANK0 ] int 
 19532 ;;  divisor         2   31[BANK0 ] int 
 19533 ;; Auto vars:     Size  Location     Type
 19534 ;;  sign            1   34[BANK0 ] unsigned char 
 19535 ;;  counter         1   33[BANK0 ] unsigned char 
 19536 ;; Return value:  Size  Location     Type
 19537 ;;                  2   29[BANK0 ] int 
 19538 ;; Registers used:
 19539 ;;		wreg, status,2, status,0
 19540 ;; Tracked objects:
 19541 ;;		On entry : 0/0
 19542 ;;		On exit  : 0/0
 19543 ;;		Unchanged: 0/0
 19544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19545 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19546 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19548 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19549 ;;Total ram usage:        6 bytes
 19550 ;; Hardware stack levels used:    1
 19551 ;; Hardware stack levels required when called:   11
 19552 ;; This function calls:
 19553 ;;		Nothing
 19554 ;; This function is called by:
 19555 ;;		_Rtcc_SetRtccValue
 19556 ;;		_Rtcc_SetRtccAlarm
 19557 ;; This function uses a non-reentrant model
 19558 ;;
 19559                           
 19560                           	psect	text81
 19561  005124                     __ptext81:
 19562                           	opt stack 0
 19563  005124                     ___awmod:
 19564                           	opt stack 14
 19565                           
 19566                           ; BSR set to: 0
 19567                           ;incstack = 0
 19568  005124  0E00               	movlw	0
 19569  005126  0100               	movlb	0	; () banked
 19570  005128  6F82               	movwf	___awmod@sign& (0+255),b
 19571                           
 19572                           ; BSR set to: 0
 19573  00512A  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19574  00512C  D006               	goto	l3011
 19575                           
 19576                           ; BSR set to: 0
 19577  00512E  6D7D               	negf	___awmod@dividend& (0+255),b
 19578  005130  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19579  005132  B0D8               	btfsc	status,0,c
 19580  005134  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19581                           
 19582                           ; BSR set to: 0
 19583  005136  0E01               	movlw	1
 19584  005138  6F82               	movwf	___awmod@sign& (0+255),b
 19585  00513A                     l3011:
 19586                           
 19587                           ; BSR set to: 0
 19588                           
 19589                           ; BSR set to: 0
 19590  00513A  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19591  00513C  D004               	goto	l3012
 19592                           
 19593                           ; BSR set to: 0
 19594  00513E  6D7F               	negf	___awmod@divisor& (0+255),b
 19595  005140  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19596  005142  B0D8               	btfsc	status,0,c
 19597  005144  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19598  005146                     l3012:
 19599                           
 19600                           ; BSR set to: 0
 19601                           
 19602                           ; BSR set to: 0
 19603  005146  517F               	movf	___awmod@divisor& (0+255),w,b
 19604  005148  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19605  00514A  B4D8               	btfsc	status,2,c
 19606  00514C  D018               	goto	l3019
 19607                           
 19608                           ; BSR set to: 0
 19609  00514E  0E01               	movlw	1
 19610  005150  6F81               	movwf	___awmod@counter& (0+255),b
 19611  005152  D004               	goto	l3014
 19612  005154                     
 19613                           ; BSR set to: 0
 19614                           
 19615                           ; BSR set to: 0
 19616  005154  90D8               	bcf	status,0,c
 19617  005156  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19618  005158  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19619  00515A  2B81               	incf	___awmod@counter& (0+255),f,b
 19620  00515C                     l3014:
 19621                           
 19622                           ; BSR set to: 0
 19623                           
 19624                           ; BSR set to: 0
 19625  00515C  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19626  00515E  D7FA               	goto	l3015
 19627  005160                     u12930:
 19628                           
 19629                           ; BSR set to: 0
 19630                           
 19631                           ; BSR set to: 0
 19632                           
 19633                           ; BSR set to: 0
 19634  005160  517F               	movf	___awmod@divisor& (0+255),w,b
 19635  005162  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19636  005164  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19637  005166  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19638  005168  A0D8               	btfss	status,0,c
 19639  00516A  D004               	goto	l3018
 19640                           
 19641                           ; BSR set to: 0
 19642  00516C  517F               	movf	___awmod@divisor& (0+255),w,b
 19643  00516E  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19644  005170  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19645  005172  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19646  005174                     l3018:
 19647                           
 19648                           ; BSR set to: 0
 19649                           
 19650                           ; BSR set to: 0
 19651  005174  90D8               	bcf	status,0,c
 19652  005176  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19653  005178  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19654                           
 19655                           ; BSR set to: 0
 19656  00517A  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19657  00517C  D7F1               	goto	u12930
 19658  00517E                     l3019:
 19659                           
 19660                           ; BSR set to: 0
 19661                           
 19662                           ; BSR set to: 0
 19663                           
 19664                           ; BSR set to: 0
 19665  00517E  5182               	movf	___awmod@sign& (0+255),w,b
 19666  005180  B4D8               	btfsc	status,2,c
 19667  005182  D004               	goto	l3020
 19668                           
 19669                           ; BSR set to: 0
 19670  005184  6D7D               	negf	___awmod@dividend& (0+255),b
 19671  005186  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19672  005188  B0D8               	btfsc	status,0,c
 19673  00518A  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19674  00518C                     l3020:
 19675                           
 19676                           ; BSR set to: 0
 19677                           
 19678                           ; BSR set to: 0
 19679  00518C  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19680  005190  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19681  005194  0012               	return	
 19682  005196                     __end_of___awmod:
 19683                           	opt stack 0
 19684                           tosu	equ	0xFFF
 19685                           tosh	equ	0xFFE
 19686                           tosl	equ	0xFFD
 19687                           pclath	equ	0xFFA
 19688                           tblptru	equ	0xFF8
 19689                           tblptrh	equ	0xFF7
 19690                           tblptrl	equ	0xFF6
 19691                           tablat	equ	0xFF5
 19692                           prodh	equ	0xFF4
 19693                           prodl	equ	0xFF3
 19694                           intcon	equ	0xFF2
 19695                           intcon2	equ	0xFF1
 19696                           intcon3	equ	0xFF0
 19697                           indf0	equ	0xFEF
 19698                           postinc0	equ	0xFEE
 19699                           plusw0	equ	0xFEB
 19700                           fsr0h	equ	0xFEA
 19701                           fsr0l	equ	0xFE9
 19702                           wreg	equ	0xFE8
 19703                           indf1	equ	0xFE7
 19704                           postinc1	equ	0xFE6
 19705                           postdec1	equ	0xFE5
 19706                           fsr1h	equ	0xFE2
 19707                           fsr1l	equ	0xFE1
 19708                           indf2	equ	0xFDF
 19709                           postinc2	equ	0xFDE
 19710                           postdec2	equ	0xFDD
 19711                           plusw2	equ	0xFDB
 19712                           fsr2h	equ	0xFDA
 19713                           fsr2l	equ	0xFD9
 19714                           status	equ	0xFD8
 19715                           
 19716 ;; *************** function ___awdiv *****************
 19717 ;; Defined at:
 19718 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19719 ;; Parameters:    Size  Location     Type
 19720 ;;  dividend        2   29[BANK0 ] int 
 19721 ;;  divisor         2   31[BANK0 ] int 
 19722 ;; Auto vars:     Size  Location     Type
 19723 ;;  quotient        2   35[BANK0 ] int 
 19724 ;;  sign            1   34[BANK0 ] unsigned char 
 19725 ;;  counter         1   33[BANK0 ] unsigned char 
 19726 ;; Return value:  Size  Location     Type
 19727 ;;                  2   29[BANK0 ] int 
 19728 ;; Registers used:
 19729 ;;		wreg, status,2, status,0
 19730 ;; Tracked objects:
 19731 ;;		On entry : 0/0
 19732 ;;		On exit  : 0/0
 19733 ;;		Unchanged: 0/0
 19734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19735 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19736 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19738 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19739 ;;Total ram usage:        8 bytes
 19740 ;; Hardware stack levels used:    1
 19741 ;; Hardware stack levels required when called:   11
 19742 ;; This function calls:
 19743 ;;		Nothing
 19744 ;; This function is called by:
 19745 ;;		_Rtcc_SetRtccValue
 19746 ;;		_Rtcc_SetRtccAlarm
 19747 ;; This function uses a non-reentrant model
 19748 ;;
 19749                           
 19750                           	psect	text82
 19751  004F24                     __ptext82:
 19752                           	opt stack 0
 19753  004F24                     ___awdiv:
 19754                           	opt stack 14
 19755                           
 19756                           ; BSR set to: 0
 19757                           ;incstack = 0
 19758  004F24  0E00               	movlw	0
 19759  004F26  0100               	movlb	0	; () banked
 19760  004F28  6F82               	movwf	___awdiv@sign& (0+255),b
 19761                           
 19762                           ; BSR set to: 0
 19763  004F2A  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19764  004F2C  D006               	goto	l2998
 19765                           
 19766                           ; BSR set to: 0
 19767  004F2E  6D7F               	negf	___awdiv@divisor& (0+255),b
 19768  004F30  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19769  004F32  B0D8               	btfsc	status,0,c
 19770  004F34  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19771                           
 19772                           ; BSR set to: 0
 19773  004F36  0E01               	movlw	1
 19774  004F38  6F82               	movwf	___awdiv@sign& (0+255),b
 19775  004F3A                     l2998:
 19776                           
 19777                           ; BSR set to: 0
 19778                           
 19779                           ; BSR set to: 0
 19780  004F3A  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19781  004F3C  D006               	goto	l2999
 19782                           
 19783                           ; BSR set to: 0
 19784  004F3E  6D7D               	negf	___awdiv@dividend& (0+255),b
 19785  004F40  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19786  004F42  B0D8               	btfsc	status,0,c
 19787  004F44  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19788                           
 19789                           ; BSR set to: 0
 19790  004F46  0E01               	movlw	1
 19791  004F48  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19792  004F4A                     l2999:
 19793                           
 19794                           ; BSR set to: 0
 19795                           
 19796                           ; BSR set to: 0
 19797  004F4A  0E00               	movlw	0
 19798  004F4C  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19799  004F4E  0E00               	movlw	0
 19800  004F50  6F83               	movwf	___awdiv@quotient& (0+255),b
 19801                           
 19802                           ; BSR set to: 0
 19803  004F52  517F               	movf	___awdiv@divisor& (0+255),w,b
 19804  004F54  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19805  004F56  B4D8               	btfsc	status,2,c
 19806  004F58  D01C               	goto	l3006
 19807                           
 19808                           ; BSR set to: 0
 19809  004F5A  0E01               	movlw	1
 19810  004F5C  6F81               	movwf	___awdiv@counter& (0+255),b
 19811  004F5E  D004               	goto	l3001
 19812  004F60                     
 19813                           ; BSR set to: 0
 19814                           
 19815                           ; BSR set to: 0
 19816  004F60  90D8               	bcf	status,0,c
 19817  004F62  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19818  004F64  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19819  004F66  2B81               	incf	___awdiv@counter& (0+255),f,b
 19820  004F68                     l3001:
 19821                           
 19822                           ; BSR set to: 0
 19823                           
 19824                           ; BSR set to: 0
 19825  004F68  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19826  004F6A  D7FA               	goto	l3002
 19827  004F6C                     u12870:
 19828                           
 19829                           ; BSR set to: 0
 19830                           
 19831                           ; BSR set to: 0
 19832                           
 19833                           ; BSR set to: 0
 19834  004F6C  90D8               	bcf	status,0,c
 19835  004F6E  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19836  004F70  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19837                           
 19838                           ; BSR set to: 0
 19839  004F72  517F               	movf	___awdiv@divisor& (0+255),w,b
 19840  004F74  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19841  004F76  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19842  004F78  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19843  004F7A  A0D8               	btfss	status,0,c
 19844  004F7C  D005               	goto	l3005
 19845                           
 19846                           ; BSR set to: 0
 19847  004F7E  517F               	movf	___awdiv@divisor& (0+255),w,b
 19848  004F80  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19849  004F82  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19850  004F84  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19851                           
 19852                           ; BSR set to: 0
 19853  004F86  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19854  004F88                     l3005:
 19855                           
 19856                           ; BSR set to: 0
 19857                           
 19858                           ; BSR set to: 0
 19859  004F88  90D8               	bcf	status,0,c
 19860  004F8A  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19861  004F8C  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19862                           
 19863                           ; BSR set to: 0
 19864  004F8E  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19865  004F90  D7ED               	goto	u12870
 19866  004F92                     l3006:
 19867                           
 19868                           ; BSR set to: 0
 19869                           
 19870                           ; BSR set to: 0
 19871                           
 19872                           ; BSR set to: 0
 19873  004F92  5182               	movf	___awdiv@sign& (0+255),w,b
 19874  004F94  B4D8               	btfsc	status,2,c
 19875  004F96  D004               	goto	l3007
 19876                           
 19877                           ; BSR set to: 0
 19878  004F98  6D83               	negf	___awdiv@quotient& (0+255),b
 19879  004F9A  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19880  004F9C  B0D8               	btfsc	status,0,c
 19881  004F9E  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19882  004FA0                     l3007:
 19883                           
 19884                           ; BSR set to: 0
 19885                           
 19886                           ; BSR set to: 0
 19887  004FA0  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19888  004FA4  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19889  004FA8  0012               	return	
 19890  004FAA                     __end_of___awdiv:
 19891                           	opt stack 0
 19892                           tosu	equ	0xFFF
 19893                           tosh	equ	0xFFE
 19894                           tosl	equ	0xFFD
 19895                           pclath	equ	0xFFA
 19896                           tblptru	equ	0xFF8
 19897                           tblptrh	equ	0xFF7
 19898                           tblptrl	equ	0xFF6
 19899                           tablat	equ	0xFF5
 19900                           prodh	equ	0xFF4
 19901                           prodl	equ	0xFF3
 19902                           intcon	equ	0xFF2
 19903                           intcon2	equ	0xFF1
 19904                           intcon3	equ	0xFF0
 19905                           indf0	equ	0xFEF
 19906                           postinc0	equ	0xFEE
 19907                           plusw0	equ	0xFEB
 19908                           fsr0h	equ	0xFEA
 19909                           fsr0l	equ	0xFE9
 19910                           wreg	equ	0xFE8
 19911                           indf1	equ	0xFE7
 19912                           postinc1	equ	0xFE6
 19913                           postdec1	equ	0xFE5
 19914                           fsr1h	equ	0xFE2
 19915                           fsr1l	equ	0xFE1
 19916                           indf2	equ	0xFDF
 19917                           postinc2	equ	0xFDE
 19918                           postdec2	equ	0xFDD
 19919                           plusw2	equ	0xFDB
 19920                           fsr2h	equ	0xFDA
 19921                           fsr2l	equ	0xFD9
 19922                           status	equ	0xFD8
 19923                           
 19924 ;; *************** function _Rtcc_LockRtc *****************
 19925 ;; Defined at:
 19926 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19927 ;; Parameters:    Size  Location     Type
 19928 ;;		None
 19929 ;; Auto vars:     Size  Location     Type
 19930 ;;		None
 19931 ;; Return value:  Size  Location     Type
 19932 ;;                  1    wreg      void 
 19933 ;; Registers used:
 19934 ;;		None
 19935 ;; Tracked objects:
 19936 ;;		On entry : 0/0
 19937 ;;		On exit  : 0/0
 19938 ;;		Unchanged: 0/0
 19939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19944 ;;Total ram usage:        0 bytes
 19945 ;; Hardware stack levels used:    1
 19946 ;; Hardware stack levels required when called:   11
 19947 ;; This function calls:
 19948 ;;		Nothing
 19949 ;; This function is called by:
 19950 ;;		_Rtcm_MainTask
 19951 ;;		_Rtcm_SetRtccDate
 19952 ;;		_Rtcm_SetRtccAlarm
 19953 ;; This function uses a non-reentrant model
 19954 ;;
 19955                           
 19956                           	psect	text83
 19957  00670C                     __ptext83:
 19958                           	opt stack 0
 19959  00670C                     _Rtcc_LockRtc:
 19960                           	opt stack 15
 19961                           
 19962                           ; BSR set to: 0
 19963                           ;incstack = 0
 19964  00670C  010F               	movlb	15	;# 
 19965  00670E  0E55               	movlw	85	;# 
 19966  006710  6EA7               	movwf	4007,c	;# 
 19967  006712  0EAA               	movlw	170	;# 
 19968  006714  6EA7               	movwf	4007,c	;# 
 19969                           
 19970                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19971  006716  010F               	movlb	15	; () banked
 19972  006718  9B3F               	bcf	63,5,b	;volatile
 19973                           
 19974                           ; BSR set to: 15
 19975  00671A  0012               	return		;funcret
 19976  00671C                     __end_of_Rtcc_LockRtc:
 19977                           	opt stack 0
 19978                           tosu	equ	0xFFF
 19979                           tosh	equ	0xFFE
 19980                           tosl	equ	0xFFD
 19981                           pclath	equ	0xFFA
 19982                           tblptru	equ	0xFF8
 19983                           tblptrh	equ	0xFF7
 19984                           tblptrl	equ	0xFF6
 19985                           tablat	equ	0xFF5
 19986                           prodh	equ	0xFF4
 19987                           prodl	equ	0xFF3
 19988                           intcon	equ	0xFF2
 19989                           intcon2	equ	0xFF1
 19990                           intcon3	equ	0xFF0
 19991                           indf0	equ	0xFEF
 19992                           postinc0	equ	0xFEE
 19993                           plusw0	equ	0xFEB
 19994                           fsr0h	equ	0xFEA
 19995                           fsr0l	equ	0xFE9
 19996                           wreg	equ	0xFE8
 19997                           indf1	equ	0xFE7
 19998                           postinc1	equ	0xFE6
 19999                           postdec1	equ	0xFE5
 20000                           fsr1h	equ	0xFE2
 20001                           fsr1l	equ	0xFE1
 20002                           indf2	equ	0xFDF
 20003                           postinc2	equ	0xFDE
 20004                           postdec2	equ	0xFDD
 20005                           plusw2	equ	0xFDB
 20006                           fsr2h	equ	0xFDA
 20007                           fsr2l	equ	0xFD9
 20008                           status	equ	0xFD8
 20009                           
 20010 ;; *************** function _Rtcm_GetRtccDate *****************
 20011 ;; Defined at:
 20012 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 20013 ;; Parameters:    Size  Location     Type
 20014 ;;		None
 20015 ;; Auto vars:     Size  Location     Type
 20016 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 20017 ;; Return value:  Size  Location     Type
 20018 ;;                  8   33[BANK0 ] struct _RtccDateType
 20019 ;; Registers used:
 20020 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20021 ;; Tracked objects:
 20022 ;;		On entry : 0/0
 20023 ;;		On exit  : 0/0
 20024 ;;		Unchanged: 0/0
 20025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20026 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20027 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20028 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20029 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20030 ;;Total ram usage:       17 bytes
 20031 ;; Hardware stack levels used:    1
 20032 ;; Hardware stack levels required when called:   12
 20033 ;; This function calls:
 20034 ;;		_Rtcc_GetRtccValue
 20035 ;; This function is called by:
 20036 ;;		_Rtcm_MainTask
 20037 ;; This function uses a non-reentrant model
 20038 ;;
 20039                           
 20040                           	psect	text84
 20041  0053AE                     __ptext84:
 20042                           	opt stack 0
 20043  0053AE                     _Rtcm_GetRtccDate:
 20044                           	opt stack 15
 20045                           
 20046                           ;rtcm.c: 204: RtccDateType LocalDate;
 20047                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 20048                           
 20049                           ; BSR set to: 15
 20050                           ;incstack = 0
 20051  0053AE  0E00               	movlw	0
 20052  0053B0  EC59  F025         	call	_Rtcc_GetRtccValue
 20053  0053B4  0100               	movlb	0	; () banked
 20054  0053B6  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 20055  0053B8  0ED0               	movlw	208
 20056  0053BA  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 20057  0053BC  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 20058  0053BE  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 20059  0053C0  0E07               	movlw	7
 20060  0053C2  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 20061                           
 20062                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 20063  0053C4  0E01               	movlw	1
 20064  0053C6  EC59  F025         	call	_Rtcc_GetRtccValue
 20065  0053CA  0100               	movlb	0	; () banked
 20066  0053CC  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 20067                           
 20068                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 20069  0053CE  0E02               	movlw	2
 20070  0053D0  EC59  F025         	call	_Rtcc_GetRtccValue
 20071  0053D4  0100               	movlb	0	; () banked
 20072  0053D6  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 20073                           
 20074                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 20075  0053D8  0E03               	movlw	3
 20076  0053DA  EC59  F025         	call	_Rtcc_GetRtccValue
 20077  0053DE  0100               	movlb	0	; () banked
 20078  0053E0  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 20079                           
 20080                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 20081  0053E2  0E04               	movlw	4
 20082  0053E4  EC59  F025         	call	_Rtcc_GetRtccValue
 20083  0053E8  0100               	movlb	0	; () banked
 20084  0053EA  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 20085                           
 20086                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20087  0053EC  0E05               	movlw	5
 20088  0053EE  EC59  F025         	call	_Rtcc_GetRtccValue
 20089  0053F2  0100               	movlb	0	; () banked
 20090  0053F4  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20091                           
 20092                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20093  0053F6  0E06               	movlw	6
 20094  0053F8  EC59  F025         	call	_Rtcc_GetRtccValue
 20095  0053FC  0100               	movlb	0	; () banked
 20096  0053FE  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20097                           
 20098                           ; BSR set to: 0
 20099                           ;rtcm.c: 216: return LocalDate;
 20100  005400  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20101  005404  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20102  005408  0E07               	movlw	7
 20103  00540A                     u15211:
 20104  00540A  CFDB FFEB          	movff	plusw2,plusw0
 20105  00540E  06E8               	decf	wreg,f,c
 20106  005410  E2FC               	bc	u15211
 20107  005412  0012               	return	
 20108  005414                     __end_of_Rtcm_GetRtccDate:
 20109                           	opt stack 0
 20110                           tosu	equ	0xFFF
 20111                           tosh	equ	0xFFE
 20112                           tosl	equ	0xFFD
 20113                           pclath	equ	0xFFA
 20114                           tblptru	equ	0xFF8
 20115                           tblptrh	equ	0xFF7
 20116                           tblptrl	equ	0xFF6
 20117                           tablat	equ	0xFF5
 20118                           prodh	equ	0xFF4
 20119                           prodl	equ	0xFF3
 20120                           intcon	equ	0xFF2
 20121                           intcon2	equ	0xFF1
 20122                           intcon3	equ	0xFF0
 20123                           indf0	equ	0xFEF
 20124                           postinc0	equ	0xFEE
 20125                           plusw0	equ	0xFEB
 20126                           fsr0h	equ	0xFEA
 20127                           fsr0l	equ	0xFE9
 20128                           wreg	equ	0xFE8
 20129                           indf1	equ	0xFE7
 20130                           postinc1	equ	0xFE6
 20131                           postdec1	equ	0xFE5
 20132                           fsr1h	equ	0xFE2
 20133                           fsr1l	equ	0xFE1
 20134                           indf2	equ	0xFDF
 20135                           postinc2	equ	0xFDE
 20136                           postdec2	equ	0xFDD
 20137                           plusw2	equ	0xFDB
 20138                           fsr2h	equ	0xFDA
 20139                           fsr2l	equ	0xFD9
 20140                           status	equ	0xFD8
 20141                           
 20142 ;; *************** function _Rtcc_GetRtccValue *****************
 20143 ;; Defined at:
 20144 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20145 ;; Parameters:    Size  Location     Type
 20146 ;;  RtccPtrVal      1    wreg     enum E7757
 20147 ;; Auto vars:     Size  Location     Type
 20148 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20149 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20150 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20151 ;; Return value:  Size  Location     Type
 20152 ;;                  1    wreg      unsigned char 
 20153 ;; Registers used:
 20154 ;;		wreg, status,2, status,0, prodl, prodh
 20155 ;; Tracked objects:
 20156 ;;		On entry : 0/0
 20157 ;;		On exit  : 0/0
 20158 ;;		Unchanged: 0/0
 20159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20161 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20163 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20164 ;;Total ram usage:        4 bytes
 20165 ;; Hardware stack levels used:    1
 20166 ;; Hardware stack levels required when called:   11
 20167 ;; This function calls:
 20168 ;;		Nothing
 20169 ;; This function is called by:
 20170 ;;		_Rtcm_GetRtccDate
 20171 ;; This function uses a non-reentrant model
 20172 ;;
 20173                           
 20174                           	psect	text85
 20175  004AB2                     __ptext85:
 20176                           	opt stack 0
 20177  004AB2                     _Rtcc_GetRtccValue:
 20178                           	opt stack 15
 20179                           
 20180                           ; BSR set to: 0
 20181                           ;incstack = 0
 20182                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20183  004AB2  0100               	movlb	0	; () banked
 20184  004AB4  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20185                           
 20186                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20187                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20188                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20189  004AB6  D02D               	goto	l416
 20190  004AB8                     l417:
 20191                           
 20192                           ; BSR set to: 0
 20193                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20194  004AB8  010F               	movlb	15	; () banked
 20195  004ABA  833F               	bsf	63,1,b	;volatile
 20196  004ABC                     
 20197                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20198  004ABC  813F               	bsf	63,0,b	;volatile
 20199  004ABE  D01C               	goto	L18
 20200  004AC0                     l419:
 20201                           
 20202                           ; BSR set to: 0
 20203                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20204  004AC0  010F               	movlb	15	; () banked
 20205  004AC2  833F               	bsf	63,1,b	;volatile
 20206  004AC4  D01E               	goto	L19
 20207  004AC6                     l420:
 20208                           
 20209                           ; BSR set to: 0
 20210                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20211  004AC6  010F               	movlb	15	; () banked
 20212  004AC8  833F               	bsf	63,1,b	;volatile
 20213  004ACA  D021               	goto	L22
 20214  004ACC                     l13948:
 20215                           
 20216                           ; BSR set to: 15
 20217                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20218  004ACC  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20219  004AD0  0E0F               	movlw	15
 20220  004AD2  0100               	movlb	0	; () banked
 20221  004AD4  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20222  004AD6  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20223  004AD8  0B0F               	andlw	15
 20224  004ADA  0B0F               	andlw	15
 20225  004ADC  0D0A               	mullw	10
 20226  004ADE  50F3               	movf	prodl,w,c
 20227  004AE0  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20228  004AE2  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20229                           
 20230                           ;rtcc_drv.c: 241: break;
 20231  004AE4  D02D               	goto	l418
 20232  004AE6                     l421:
 20233                           
 20234                           ; BSR set to: 0
 20235                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20236  004AE6  010F               	movlb	15	; () banked
 20237  004AE8  933F               	bcf	63,1,b	;volatile
 20238                           
 20239                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20240  004AEA  813F               	bsf	63,0,b	;volatile
 20241                           
 20242                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20243  004AEC  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20244                           
 20245                           ;rtcc_drv.c: 249: break;
 20246  004AF0  D027               	goto	l418
 20247  004AF2                     l422:
 20248                           
 20249                           ; BSR set to: 0
 20250                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20251  004AF2  010F               	movlb	15	; () banked
 20252  004AF4  933F               	bcf	63,1,b	;volatile
 20253  004AF6  D7E2               	goto	L20
 20254  004AF8                     L18:
 20255                           
 20256                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20257  004AF8  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20258  004AFC  D7E7               	goto	l13948
 20259  004AFE                     l423:
 20260                           
 20261                           ; BSR set to: 0
 20262                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20263  004AFE  010F               	movlb	15	; () banked
 20264  004B00  933F               	bcf	63,1,b	;volatile
 20265  004B02                     L19:
 20266                           
 20267                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20268  004B02  913F               	bcf	63,0,b	;volatile
 20269                           
 20270                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20271  004B04  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20272  004B08  D7E1               	goto	l13948
 20273  004B0A                     l424:
 20274                           
 20275                           ; BSR set to: 0
 20276                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20277  004B0A  010F               	movlb	15	; () banked
 20278  004B0C  933F               	bcf	63,1,b	;volatile
 20279  004B0E                     L22:
 20280                           
 20281                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20282  004B0E  913F               	bcf	63,0,b	;volatile
 20283  004B10  D7F3               	goto	L18
 20284  004B12                     l416:
 20285                           
 20286                           ; BSR set to: 0
 20287  004B12  0100               	movlb	0	; () banked
 20288  004B14  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20289                           
 20290                           ; Switch size 1, requested type "space"
 20291                           ; Number of cases is 7, Range of values is 0 to 6
 20292                           ; switch strategies available:
 20293                           ; Name         Instructions Cycles
 20294                           ; simple_byte           22    12 (average)
 20295                           ;	Chosen strategy is simple_byte
 20296  004B16  0A00               	xorlw	0	; case 0
 20297  004B18  B4D8               	btfsc	status,2,c
 20298  004B1A  D7CE               	goto	l417
 20299  004B1C  0A01               	xorlw	1	; case 1
 20300  004B1E  B4D8               	btfsc	status,2,c
 20301  004B20  D7CF               	goto	l419
 20302  004B22  0A03               	xorlw	3	; case 2
 20303  004B24  B4D8               	btfsc	status,2,c
 20304  004B26  D7CF               	goto	l420
 20305  004B28  0A01               	xorlw	1	; case 3
 20306  004B2A  B4D8               	btfsc	status,2,c
 20307  004B2C  D7DC               	goto	l421
 20308  004B2E  0A07               	xorlw	7	; case 4
 20309  004B30  B4D8               	btfsc	status,2,c
 20310  004B32  D7DF               	goto	l422
 20311  004B34  0A01               	xorlw	1	; case 5
 20312  004B36  B4D8               	btfsc	status,2,c
 20313  004B38  D7E2               	goto	l423
 20314  004B3A  0A03               	xorlw	3	; case 6
 20315  004B3C  B4D8               	btfsc	status,2,c
 20316  004B3E  D7E5               	goto	l424
 20317  004B40                     l418:
 20318                           
 20319                           ;rtcc_drv.c: 286: return RetValue;
 20320                           
 20321                           ; BSR set to: 0
 20322  004B40  0100               	movlb	0	; () banked
 20323  004B42  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20324  004B44  0012               	return	
 20325  004B46                     __end_of_Rtcc_GetRtccValue:
 20326                           	opt stack 0
 20327                           tosu	equ	0xFFF
 20328                           tosh	equ	0xFFE
 20329                           tosl	equ	0xFFD
 20330                           pclath	equ	0xFFA
 20331                           tblptru	equ	0xFF8
 20332                           tblptrh	equ	0xFF7
 20333                           tblptrl	equ	0xFF6
 20334                           tablat	equ	0xFF5
 20335                           prodh	equ	0xFF4
 20336                           prodl	equ	0xFF3
 20337                           intcon	equ	0xFF2
 20338                           intcon2	equ	0xFF1
 20339                           intcon3	equ	0xFF0
 20340                           indf0	equ	0xFEF
 20341                           postinc0	equ	0xFEE
 20342                           plusw0	equ	0xFEB
 20343                           fsr0h	equ	0xFEA
 20344                           fsr0l	equ	0xFE9
 20345                           wreg	equ	0xFE8
 20346                           indf1	equ	0xFE7
 20347                           postinc1	equ	0xFE6
 20348                           postdec1	equ	0xFE5
 20349                           fsr1h	equ	0xFE2
 20350                           fsr1l	equ	0xFE1
 20351                           indf2	equ	0xFDF
 20352                           postinc2	equ	0xFDE
 20353                           postdec2	equ	0xFDD
 20354                           plusw2	equ	0xFDB
 20355                           fsr2h	equ	0xFDA
 20356                           fsr2l	equ	0xFD9
 20357                           status	equ	0xFD8
 20358                           
 20359 ;; *************** function _Rtcc_SetRtcStatus *****************
 20360 ;; Defined at:
 20361 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20362 ;; Parameters:    Size  Location     Type
 20363 ;;  Status          1    wreg     unsigned char 
 20364 ;; Auto vars:     Size  Location     Type
 20365 ;;  Status          1   29[BANK0 ] unsigned char 
 20366 ;; Return value:  Size  Location     Type
 20367 ;;                  1    wreg      void 
 20368 ;; Registers used:
 20369 ;;		wreg
 20370 ;; Tracked objects:
 20371 ;;		On entry : 0/0
 20372 ;;		On exit  : 0/0
 20373 ;;		Unchanged: 0/0
 20374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20378 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20379 ;;Total ram usage:        1 bytes
 20380 ;; Hardware stack levels used:    1
 20381 ;; Hardware stack levels required when called:   11
 20382 ;; This function calls:
 20383 ;;		Nothing
 20384 ;; This function is called by:
 20385 ;;		_Rtcm_MainTask
 20386 ;; This function uses a non-reentrant model
 20387 ;;
 20388                           
 20389                           	psect	text86
 20390  00665A                     __ptext86:
 20391                           	opt stack 0
 20392  00665A                     _Rtcc_SetRtcStatus:
 20393                           	opt stack 16
 20394                           
 20395                           ; BSR set to: 0
 20396                           ;incstack = 0
 20397                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20398  00665A  0100               	movlb	0	; () banked
 20399  00665C  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20400                           
 20401                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20402  00665E  0100               	movlb	0	; () banked
 20403  006660  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20404  006662  D003               	bra	u14125
 20405  006664  010F               	movlb	15	; () banked
 20406  006666  9F3F               	bcf	63,7,b	;volatile
 20407  006668  D002               	bra	u14126
 20408  00666A                     u14125:
 20409  00666A  010F               	movlb	15	; () banked
 20410  00666C  8F3F               	bsf	63,7,b	;volatile
 20411  00666E                     u14126:
 20412                           
 20413                           ; BSR set to: 15
 20414  00666E  0012               	return		;funcret
 20415  006670                     __end_of_Rtcc_SetRtcStatus:
 20416                           	opt stack 0
 20417                           tosu	equ	0xFFF
 20418                           tosh	equ	0xFFE
 20419                           tosl	equ	0xFFD
 20420                           pclath	equ	0xFFA
 20421                           tblptru	equ	0xFF8
 20422                           tblptrh	equ	0xFF7
 20423                           tblptrl	equ	0xFF6
 20424                           tablat	equ	0xFF5
 20425                           prodh	equ	0xFF4
 20426                           prodl	equ	0xFF3
 20427                           intcon	equ	0xFF2
 20428                           intcon2	equ	0xFF1
 20429                           intcon3	equ	0xFF0
 20430                           indf0	equ	0xFEF
 20431                           postinc0	equ	0xFEE
 20432                           plusw0	equ	0xFEB
 20433                           fsr0h	equ	0xFEA
 20434                           fsr0l	equ	0xFE9
 20435                           wreg	equ	0xFE8
 20436                           indf1	equ	0xFE7
 20437                           postinc1	equ	0xFE6
 20438                           postdec1	equ	0xFE5
 20439                           fsr1h	equ	0xFE2
 20440                           fsr1l	equ	0xFE1
 20441                           indf2	equ	0xFDF
 20442                           postinc2	equ	0xFDE
 20443                           postdec2	equ	0xFDD
 20444                           plusw2	equ	0xFDB
 20445                           fsr2h	equ	0xFDA
 20446                           fsr2l	equ	0xFD9
 20447                           status	equ	0xFD8
 20448                           
 20449 ;; *************** function _Rtcc_RtcConfig *****************
 20450 ;; Defined at:
 20451 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20452 ;; Parameters:    Size  Location     Type
 20453 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20454 ;;		 -> RtcConfig(4), 
 20455 ;; Auto vars:     Size  Location     Type
 20456 ;;		None
 20457 ;; Return value:  Size  Location     Type
 20458 ;;                  1    wreg      void 
 20459 ;; Registers used:
 20460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20461 ;; Tracked objects:
 20462 ;;		On entry : 0/0
 20463 ;;		On exit  : 0/0
 20464 ;;		Unchanged: 0/0
 20465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20466 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20468 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20469 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20470 ;;Total ram usage:        3 bytes
 20471 ;; Hardware stack levels used:    1
 20472 ;; Hardware stack levels required when called:   12
 20473 ;; This function calls:
 20474 ;;		_RtccIrqInit
 20475 ;; This function is called by:
 20476 ;;		_Rtcm_MainTask
 20477 ;; This function uses a non-reentrant model
 20478 ;;
 20479                           
 20480                           	psect	text87
 20481  00471C                     __ptext87:
 20482                           	opt stack 0
 20483  00471C                     _Rtcc_RtcConfig:
 20484                           	opt stack 15
 20485                           
 20486                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20487                           
 20488                           ; BSR set to: 15
 20489                           ;incstack = 0
 20490  00471C  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20491  004720  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20492  004724  50DF               	movf	indf2,w,c
 20493  004726  0100               	movlb	0	; () banked
 20494  004728  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20495  00472A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20496  00472C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20497  00472E  010F               	movlb	15	; () banked
 20498  004730  513F               	movf	63,w,b	;volatile
 20499  004732  0100               	movlb	0	; () banked
 20500  004734  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20501  004736  0BFB               	andlw	-5
 20502  004738  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20503  00473A  010F               	movlb	15	; () banked
 20504  00473C  6F3F               	movwf	63,b	;volatile
 20505                           
 20506                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20507  00473E  0100               	movlb	0	; () banked
 20508  004740  EE20 F001          	lfsr	2,1
 20509  004744  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20510  004746  26D9               	addwf	fsr2l,f,c
 20511  004748  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20512  00474A  22DA               	addwfc	fsr2h,f,c
 20513  00474C  50DF               	movf	indf2,w,c
 20514  00474E  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20515  004750  0E01               	movlw	1
 20516  004752  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20517  004754  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20518  004756  010F               	movlb	15	; () banked
 20519  004758  513C               	movf	60,w,b	;volatile
 20520  00475A  0100               	movlb	0	; () banked
 20521  00475C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20522  00475E  0BFD               	andlw	-3
 20523  004760  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20524  004762  010F               	movlb	15	; () banked
 20525  004764  6F3C               	movwf	60,b	;volatile
 20526                           
 20527                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20528  004766  0100               	movlb	0	; () banked
 20529  004768  EE20 F001          	lfsr	2,1
 20530  00476C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20531  00476E  26D9               	addwf	fsr2l,f,c
 20532  004770  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20533  004772  22DA               	addwfc	fsr2h,f,c
 20534  004774  50DF               	movf	indf2,w,c
 20535  004776  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20536  004778  90D8               	bcf	status,0,c
 20537  00477A  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20538  00477C  0E01               	movlw	1
 20539  00477E  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20540  004780  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20541  004782  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20542  004784  010F               	movlb	15	; () banked
 20543  004786  513C               	movf	60,w,b	;volatile
 20544  004788  0100               	movlb	0	; () banked
 20545  00478A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20546  00478C  0BFB               	andlw	-5
 20547  00478E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20548  004790  010F               	movlb	15	; () banked
 20549  004792  6F3C               	movwf	60,b	;volatile
 20550                           
 20551                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20552  004794  0100               	movlb	0	; () banked
 20553  004796  EE20 F002          	lfsr	2,2
 20554  00479A  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20555  00479C  26D9               	addwf	fsr2l,f,c
 20556  00479E  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20557  0047A0  22DA               	addwfc	fsr2h,f,c
 20558  0047A2  04DE               	decf	postinc2,w,c
 20559  0047A4  A4D8               	btfss	status,2,c
 20560  0047A6  0012               	return	
 20561                           
 20562                           ; BSR set to: 0
 20563                           ;rtcc_drv.c: 115: {
 20564                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20565  0047A8  EE20 F003          	lfsr	2,3
 20566  0047AC  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20567  0047AE  26D9               	addwf	fsr2l,f,c
 20568  0047B0  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20569  0047B2  22DA               	addwfc	fsr2h,f,c
 20570  0047B4  50DF               	movf	indf2,w,c
 20571  0047B6  EC38  F033         	call	_RtccIrqInit
 20572  0047BA  0012               	return	
 20573  0047BC                     __end_of_Rtcc_RtcConfig:
 20574                           	opt stack 0
 20575                           tosu	equ	0xFFF
 20576                           tosh	equ	0xFFE
 20577                           tosl	equ	0xFFD
 20578                           pclath	equ	0xFFA
 20579                           tblptru	equ	0xFF8
 20580                           tblptrh	equ	0xFF7
 20581                           tblptrl	equ	0xFF6
 20582                           tablat	equ	0xFF5
 20583                           prodh	equ	0xFF4
 20584                           prodl	equ	0xFF3
 20585                           intcon	equ	0xFF2
 20586                           intcon2	equ	0xFF1
 20587                           intcon3	equ	0xFF0
 20588                           indf0	equ	0xFEF
 20589                           postinc0	equ	0xFEE
 20590                           plusw0	equ	0xFEB
 20591                           fsr0h	equ	0xFEA
 20592                           fsr0l	equ	0xFE9
 20593                           wreg	equ	0xFE8
 20594                           indf1	equ	0xFE7
 20595                           postinc1	equ	0xFE6
 20596                           postdec1	equ	0xFE5
 20597                           fsr1h	equ	0xFE2
 20598                           fsr1l	equ	0xFE1
 20599                           indf2	equ	0xFDF
 20600                           postinc2	equ	0xFDE
 20601                           postdec2	equ	0xFDD
 20602                           plusw2	equ	0xFDB
 20603                           fsr2h	equ	0xFDA
 20604                           fsr2l	equ	0xFD9
 20605                           status	equ	0xFD8
 20606                           
 20607 ;; *************** function _RtccIrqInit *****************
 20608 ;; Defined at:
 20609 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20610 ;; Parameters:    Size  Location     Type
 20611 ;;  Priority        1    wreg     enum E7716
 20612 ;; Auto vars:     Size  Location     Type
 20613 ;;  Priority        1   29[BANK0 ] enum E7716
 20614 ;; Return value:  Size  Location     Type
 20615 ;;                  1    wreg      void 
 20616 ;; Registers used:
 20617 ;;		wreg
 20618 ;; Tracked objects:
 20619 ;;		On entry : 0/0
 20620 ;;		On exit  : 0/0
 20621 ;;		Unchanged: 0/0
 20622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20626 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20627 ;;Total ram usage:        1 bytes
 20628 ;; Hardware stack levels used:    1
 20629 ;; Hardware stack levels required when called:   11
 20630 ;; This function calls:
 20631 ;;		Nothing
 20632 ;; This function is called by:
 20633 ;;		_Rtcc_RtcConfig
 20634 ;; This function uses a non-reentrant model
 20635 ;;
 20636                           
 20637                           	psect	text88
 20638  006670                     __ptext88:
 20639                           	opt stack 0
 20640  006670                     _RtccIrqInit:
 20641                           	opt stack 15
 20642                           
 20643                           ;incstack = 0
 20644                           ;RtccIrqInit@Priority stored from wreg
 20645  006670  0100               	movlb	0	; () banked
 20646  006672  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20647                           
 20648                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20649  006674  90A4               	bcf	4004,0,c	;volatile
 20650                           
 20651                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20652  006676  0100               	movlb	0	; () banked
 20653  006678  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20654  00667A  D002               	bra	u13085
 20655  00667C  90A5               	bcf	4005,0,c	;volatile
 20656  00667E  D001               	bra	u13086
 20657  006680                     u13085:
 20658  006680  80A5               	bsf	4005,0,c	;volatile
 20659  006682                     u13086:
 20660                           
 20661                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20662  006682  80A3               	bsf	4003,0,c	;volatile
 20663  006684  0012               	return		;funcret
 20664  006686                     __end_of_RtccIrqInit:
 20665                           	opt stack 0
 20666                           tosu	equ	0xFFF
 20667                           tosh	equ	0xFFE
 20668                           tosl	equ	0xFFD
 20669                           pclath	equ	0xFFA
 20670                           tblptru	equ	0xFF8
 20671                           tblptrh	equ	0xFF7
 20672                           tblptrl	equ	0xFF6
 20673                           tablat	equ	0xFF5
 20674                           prodh	equ	0xFF4
 20675                           prodl	equ	0xFF3
 20676                           intcon	equ	0xFF2
 20677                           intcon2	equ	0xFF1
 20678                           intcon3	equ	0xFF0
 20679                           indf0	equ	0xFEF
 20680                           postinc0	equ	0xFEE
 20681                           plusw0	equ	0xFEB
 20682                           fsr0h	equ	0xFEA
 20683                           fsr0l	equ	0xFE9
 20684                           wreg	equ	0xFE8
 20685                           indf1	equ	0xFE7
 20686                           postinc1	equ	0xFE6
 20687                           postdec1	equ	0xFE5
 20688                           fsr1h	equ	0xFE2
 20689                           fsr1l	equ	0xFE1
 20690                           indf2	equ	0xFDF
 20691                           postinc2	equ	0xFDE
 20692                           postdec2	equ	0xFDD
 20693                           plusw2	equ	0xFDB
 20694                           fsr2h	equ	0xFDA
 20695                           fsr2l	equ	0xFD9
 20696                           status	equ	0xFD8
 20697                           
 20698 ;; *************** function _Rtcc_AlarmConfig *****************
 20699 ;; Defined at:
 20700 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20701 ;; Parameters:    Size  Location     Type
 20702 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20703 ;;		 -> AlCfg(4), 
 20704 ;; Auto vars:     Size  Location     Type
 20705 ;;		None
 20706 ;; Return value:  Size  Location     Type
 20707 ;;                  1    wreg      void 
 20708 ;; Registers used:
 20709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20710 ;; Tracked objects:
 20711 ;;		On entry : 0/0
 20712 ;;		On exit  : 0/0
 20713 ;;		Unchanged: 0/0
 20714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20715 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20718 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20719 ;;Total ram usage:        3 bytes
 20720 ;; Hardware stack levels used:    1
 20721 ;; Hardware stack levels required when called:   11
 20722 ;; This function calls:
 20723 ;;		Nothing
 20724 ;; This function is called by:
 20725 ;;		_Rtcm_MainTask
 20726 ;; This function uses a non-reentrant model
 20727 ;;
 20728                           
 20729                           	psect	text89
 20730  005274                     __ptext89:
 20731                           	opt stack 0
 20732  005274                     _Rtcc_AlarmConfig:
 20733                           	opt stack 16
 20734                           
 20735                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20736                           
 20737                           ;incstack = 0
 20738  005274  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20739  005278  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20740  00527C  50DF               	movf	indf2,w,c
 20741  00527E  0100               	movlb	0	; () banked
 20742  005280  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20743  005282  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20744  005284  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20745  005286  5091               	movf	3985,w,c	;volatile
 20746  005288  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20747  00528A  0B7F               	andlw	-129
 20748  00528C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20749  00528E  6E91               	movwf	3985,c	;volatile
 20750                           
 20751                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20752  005290  EE20 F001          	lfsr	2,1
 20753  005294  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20754  005296  26D9               	addwf	fsr2l,f,c
 20755  005298  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20756  00529A  22DA               	addwfc	fsr2h,f,c
 20757  00529C  50DF               	movf	indf2,w,c
 20758  00529E  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20759  0052A0  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20760  0052A2  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20761  0052A4  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20762  0052A6  5091               	movf	3985,w,c	;volatile
 20763  0052A8  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20764  0052AA  0BBF               	andlw	-65
 20765  0052AC  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20766  0052AE  6E91               	movwf	3985,c	;volatile
 20767                           
 20768                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20769  0052B0  EE20 F002          	lfsr	2,2
 20770  0052B4  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20771  0052B6  26D9               	addwf	fsr2l,f,c
 20772  0052B8  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20773  0052BA  22DA               	addwfc	fsr2h,f,c
 20774  0052BC  50DF               	movf	indf2,w,c
 20775  0052BE  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20776  0052C0  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20777  0052C2  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20778  0052C4  5091               	movf	3985,w,c	;volatile
 20779  0052C6  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20780  0052C8  0BC3               	andlw	-61
 20781  0052CA  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20782  0052CC  6E91               	movwf	3985,c	;volatile
 20783                           
 20784                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20785  0052CE  EE20 F003          	lfsr	2,3
 20786  0052D2  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20787  0052D4  26D9               	addwf	fsr2l,f,c
 20788  0052D6  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20789  0052D8  22DA               	addwfc	fsr2h,f,c
 20790  0052DA  50DF               	movf	indf2,w,c
 20791  0052DC  6E90               	movwf	3984,c	;volatile
 20792                           
 20793                           ; BSR set to: 0
 20794  0052DE  0012               	return		;funcret
 20795  0052E0                     __end_of_Rtcc_AlarmConfig:
 20796                           	opt stack 0
 20797                           tosu	equ	0xFFF
 20798                           tosh	equ	0xFFE
 20799                           tosl	equ	0xFFD
 20800                           pclath	equ	0xFFA
 20801                           tblptru	equ	0xFF8
 20802                           tblptrh	equ	0xFF7
 20803                           tblptrl	equ	0xFF6
 20804                           tablat	equ	0xFF5
 20805                           prodh	equ	0xFF4
 20806                           prodl	equ	0xFF3
 20807                           intcon	equ	0xFF2
 20808                           intcon2	equ	0xFF1
 20809                           intcon3	equ	0xFF0
 20810                           indf0	equ	0xFEF
 20811                           postinc0	equ	0xFEE
 20812                           plusw0	equ	0xFEB
 20813                           fsr0h	equ	0xFEA
 20814                           fsr0l	equ	0xFE9
 20815                           wreg	equ	0xFE8
 20816                           indf1	equ	0xFE7
 20817                           postinc1	equ	0xFE6
 20818                           postdec1	equ	0xFE5
 20819                           fsr1h	equ	0xFE2
 20820                           fsr1l	equ	0xFE1
 20821                           indf2	equ	0xFDF
 20822                           postinc2	equ	0xFDE
 20823                           postdec2	equ	0xFDD
 20824                           plusw2	equ	0xFDB
 20825                           fsr2h	equ	0xFDA
 20826                           fsr2l	equ	0xFD9
 20827                           status	equ	0xFD8
 20828                           
 20829 ;; *************** function _waitSetupCall *****************
 20830 ;; Defined at:
 20831 ;;		line 84 in file "../Source/c/04_App/app_gate.c"
 20832 ;; Parameters:    Size  Location     Type
 20833 ;;		None
 20834 ;; Auto vars:     Size  Location     Type
 20835 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 20836 ;; Return value:  Size  Location     Type
 20837 ;;                  1    wreg      unsigned char 
 20838 ;; Registers used:
 20839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20840 ;; Tracked objects:
 20841 ;;		On entry : 0/0
 20842 ;;		On exit  : 0/0
 20843 ;;		Unchanged: 0/0
 20844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20848 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20849 ;;Total ram usage:        1 bytes
 20850 ;; Hardware stack levels used:    1
 20851 ;; Hardware stack levels required when called:   15
 20852 ;; This function calls:
 20853 ;;		_Led_SetLedStatus
 20854 ;;		_getSetupCall
 20855 ;;		_secondsAppTimer
 20856 ;; This function is called by:
 20857 ;;		_MyApp_Task
 20858 ;; This function uses a non-reentrant model
 20859 ;;
 20860                           
 20861                           	psect	text90
 20862  005A8C                     __ptext90:
 20863                           	opt stack 0
 20864  005A8C                     _waitSetupCall:
 20865                           	opt stack 12
 20866                           
 20867                           ;app_gate.c: 86: bool isCallArrived = 0;
 20868                           
 20869                           ; BSR set to: 0
 20870                           ;incstack = 0
 20871  005A8C  0E00               	movlw	0
 20872  005A8E  0100               	movlb	0	; () banked
 20873  005A90  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 20874                           
 20875                           ; BSR set to: 0
 20876                           ;app_gate.c: 87: if (!secondsAppTimer(30, &setupCallTicks, 0))
 20877  005A92  0EB3               	movlw	low _setupCallTicks
 20878  005A94  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20879  005A96  0E03               	movlw	high _setupCallTicks
 20880  005A98  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20881  005A9A  0E00               	movlw	0
 20882  005A9C  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20883  005A9E  0E1E               	movlw	30
 20884  005AA0  EC3D  F023         	call	_secondsAppTimer
 20885  005AA4  0900               	iorlw	0
 20886  005AA6  A4D8               	btfss	status,2,c
 20887  005AA8  D00F               	goto	l2757
 20888                           
 20889                           ;app_gate.c: 88: {
 20890                           ;app_gate.c: 89: Led_SetLedStatus(1u, LED_STS_BLINK);
 20891  005AAA  0E03               	movlw	3
 20892  005AAC  0100               	movlb	0	; () banked
 20893  005AAE  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20894  005AB0  0E01               	movlw	1
 20895  005AB2  ECFD  F030         	call	_Led_SetLedStatus
 20896                           
 20897                           ;app_gate.c: 90: if (getSetupCall())
 20898  005AB6  EC7B  F032         	call	_getSetupCall	;wreg free
 20899  005ABA  0900               	iorlw	0
 20900  005ABC  B4D8               	btfsc	status,2,c
 20901  005ABE  D00A               	goto	l2759
 20902                           
 20903                           ;app_gate.c: 91: {
 20904                           ;app_gate.c: 92: isCallArrived = 1;
 20905  005AC0  0E01               	movlw	1
 20906  005AC2  0100               	movlb	0	; () banked
 20907  005AC4  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 20908                           
 20909                           ; BSR set to: 0
 20910                           ;app_gate.c: 93: }
 20911                           ;app_gate.c: 94: }
 20912  005AC6  D006               	goto	l2759
 20913  005AC8                     l2757:
 20914                           
 20915                           ;app_gate.c: 95: else
 20916                           ;app_gate.c: 96: {
 20917                           ;app_gate.c: 97: Led_SetLedStatus(1u, LED_STS_ON);
 20918                           
 20919                           ; BSR set to: 0
 20920  005AC8  0E01               	movlw	1
 20921  005ACA  0100               	movlb	0	; () banked
 20922  005ACC  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20923  005ACE  0E01               	movlw	1
 20924  005AD0  ECFD  F030         	call	_Led_SetLedStatus
 20925  005AD4                     l2759:
 20926                           
 20927                           ;app_gate.c: 98: }
 20928                           ;app_gate.c: 99: return isCallArrived;
 20929  005AD4  0100               	movlb	0	; () banked
 20930  005AD6  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 20931  005AD8  0012               	return	
 20932  005ADA                     __end_of_waitSetupCall:
 20933                           	opt stack 0
 20934                           tosu	equ	0xFFF
 20935                           tosh	equ	0xFFE
 20936                           tosl	equ	0xFFD
 20937                           pclath	equ	0xFFA
 20938                           tblptru	equ	0xFF8
 20939                           tblptrh	equ	0xFF7
 20940                           tblptrl	equ	0xFF6
 20941                           tablat	equ	0xFF5
 20942                           prodh	equ	0xFF4
 20943                           prodl	equ	0xFF3
 20944                           intcon	equ	0xFF2
 20945                           intcon2	equ	0xFF1
 20946                           intcon3	equ	0xFF0
 20947                           indf0	equ	0xFEF
 20948                           postinc0	equ	0xFEE
 20949                           plusw0	equ	0xFEB
 20950                           fsr0h	equ	0xFEA
 20951                           fsr0l	equ	0xFE9
 20952                           wreg	equ	0xFE8
 20953                           indf1	equ	0xFE7
 20954                           postinc1	equ	0xFE6
 20955                           postdec1	equ	0xFE5
 20956                           fsr1h	equ	0xFE2
 20957                           fsr1l	equ	0xFE1
 20958                           indf2	equ	0xFDF
 20959                           postinc2	equ	0xFDE
 20960                           postdec2	equ	0xFDD
 20961                           plusw2	equ	0xFDB
 20962                           fsr2h	equ	0xFDA
 20963                           fsr2l	equ	0xFD9
 20964                           status	equ	0xFD8
 20965                           
 20966 ;; *************** function _getSetupCall *****************
 20967 ;; Defined at:
 20968 ;;		line 65 in file "../Source/c/04_App/app_gate.c"
 20969 ;; Parameters:    Size  Location     Type
 20970 ;;		None
 20971 ;; Auto vars:     Size  Location     Type
 20972 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 20973 ;; Return value:  Size  Location     Type
 20974 ;;                  1    wreg      unsigned char 
 20975 ;; Registers used:
 20976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20977 ;; Tracked objects:
 20978 ;;		On entry : 0/0
 20979 ;;		On exit  : 0/0
 20980 ;;		Unchanged: 0/0
 20981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20985 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20986 ;;Total ram usage:        1 bytes
 20987 ;; Hardware stack levels used:    1
 20988 ;; Hardware stack levels required when called:   14
 20989 ;; This function calls:
 20990 ;;		_Mdm_HangPhoneCall
 20991 ;;		_Mdm_IsRinging
 20992 ;; This function is called by:
 20993 ;;		_waitSetupCall
 20994 ;; This function uses a non-reentrant model
 20995 ;;
 20996                           
 20997                           	psect	text91
 20998  0064F6                     __ptext91:
 20999                           	opt stack 0
 21000  0064F6                     _getSetupCall:
 21001                           	opt stack 12
 21002                           
 21003                           ;app_gate.c: 67: bool isCalledReceived = 0;
 21004                           
 21005                           ; BSR set to: 0
 21006                           ;incstack = 0
 21007  0064F6  0E00               	movlw	0
 21008  0064F8  0100               	movlb	0	; () banked
 21009  0064FA  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21010                           
 21011                           ; BSR set to: 0
 21012                           ;app_gate.c: 69: if (Mdm_IsRinging())
 21013  0064FC  ECCF  F031         	call	_Mdm_IsRinging	;wreg free
 21014  006500  0900               	iorlw	0
 21015  006502  B4D8               	btfsc	status,2,c
 21016  006504  D005               	goto	l2753
 21017                           
 21018                           ;app_gate.c: 70: {
 21019                           ;app_gate.c: 71: Mdm_HangPhoneCall();
 21020  006506  EC6C  F033         	call	_Mdm_HangPhoneCall	;wreg free
 21021                           
 21022                           ;app_gate.c: 72: isCalledReceived = 1;
 21023  00650A  0E01               	movlw	1
 21024  00650C  0100               	movlb	0	; () banked
 21025  00650E  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21026  006510                     l2753:
 21027                           
 21028                           ;app_gate.c: 73: }
 21029                           ;app_gate.c: 74: return isCalledReceived;
 21030                           
 21031                           ; BSR set to: 0
 21032  006510  0100               	movlb	0	; () banked
 21033  006512  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21034  006514  0012               	return	
 21035  006516                     __end_of_getSetupCall:
 21036                           	opt stack 0
 21037                           tosu	equ	0xFFF
 21038                           tosh	equ	0xFFE
 21039                           tosl	equ	0xFFD
 21040                           pclath	equ	0xFFA
 21041                           tblptru	equ	0xFF8
 21042                           tblptrh	equ	0xFF7
 21043                           tblptrl	equ	0xFF6
 21044                           tablat	equ	0xFF5
 21045                           prodh	equ	0xFF4
 21046                           prodl	equ	0xFF3
 21047                           intcon	equ	0xFF2
 21048                           intcon2	equ	0xFF1
 21049                           intcon3	equ	0xFF0
 21050                           indf0	equ	0xFEF
 21051                           postinc0	equ	0xFEE
 21052                           plusw0	equ	0xFEB
 21053                           fsr0h	equ	0xFEA
 21054                           fsr0l	equ	0xFE9
 21055                           wreg	equ	0xFE8
 21056                           indf1	equ	0xFE7
 21057                           postinc1	equ	0xFE6
 21058                           postdec1	equ	0xFE5
 21059                           fsr1h	equ	0xFE2
 21060                           fsr1l	equ	0xFE1
 21061                           indf2	equ	0xFDF
 21062                           postinc2	equ	0xFDE
 21063                           postdec2	equ	0xFDD
 21064                           plusw2	equ	0xFDB
 21065                           fsr2h	equ	0xFDA
 21066                           fsr2l	equ	0xFD9
 21067                           status	equ	0xFD8
 21068                           
 21069 ;; *************** function _Mdm_IsRinging *****************
 21070 ;; Defined at:
 21071 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21072 ;; Parameters:    Size  Location     Type
 21073 ;;		None
 21074 ;; Auto vars:     Size  Location     Type
 21075 ;;  Ret             1   33[BANK0 ] enum E8924
 21076 ;; Return value:  Size  Location     Type
 21077 ;;                  1    wreg      enum E8924
 21078 ;; Registers used:
 21079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21080 ;; Tracked objects:
 21081 ;;		On entry : 0/0
 21082 ;;		On exit  : 0/0
 21083 ;;		Unchanged: 0/0
 21084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21088 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21089 ;;Total ram usage:        1 bytes
 21090 ;; Hardware stack levels used:    1
 21091 ;; Hardware stack levels required when called:   12
 21092 ;; This function calls:
 21093 ;;		_ReceiveEvt
 21094 ;; This function is called by:
 21095 ;;		_MyApp_Task
 21096 ;;		_getSetupCall
 21097 ;; This function uses a non-reentrant model
 21098 ;;
 21099                           
 21100                           	psect	text92
 21101  00639E                     __ptext92:
 21102                           	opt stack 0
 21103  00639E                     _Mdm_IsRinging:
 21104                           	opt stack 13
 21105                           
 21106                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 21107                           
 21108                           ; BSR set to: 0
 21109                           ;incstack = 0
 21110  00639E  0E00               	movlw	0
 21111  0063A0  0100               	movlb	0	; () banked
 21112  0063A2  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21113                           
 21114                           ; BSR set to: 0
 21115                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 21116  0063A4  0EDF               	movlw	low _RingEvent
 21117  0063A6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21118  0063A8  0E00               	movlw	high _RingEvent
 21119  0063AA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21120  0063AC  EC2C  F031         	call	_ReceiveEvt	;wreg free
 21121  0063B0  0900               	iorlw	0
 21122  0063B2  B4D8               	btfsc	status,2,c
 21123  0063B4  D003               	goto	l1152
 21124                           
 21125                           ;mdm_gsm_gprs.c: 1030: {
 21126                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 21127  0063B6  0E01               	movlw	1
 21128  0063B8  0100               	movlb	0	; () banked
 21129  0063BA  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21130  0063BC                     l1152:
 21131                           
 21132                           ;mdm_gsm_gprs.c: 1032: }
 21133                           ;mdm_gsm_gprs.c: 1034: return Ret;
 21134  0063BC  0100               	movlb	0	; () banked
 21135  0063BE  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21136  0063C0  0012               	return	
 21137  0063C2                     __end_of_Mdm_IsRinging:
 21138                           	opt stack 0
 21139                           tosu	equ	0xFFF
 21140                           tosh	equ	0xFFE
 21141                           tosl	equ	0xFFD
 21142                           pclath	equ	0xFFA
 21143                           tblptru	equ	0xFF8
 21144                           tblptrh	equ	0xFF7
 21145                           tblptrl	equ	0xFF6
 21146                           tablat	equ	0xFF5
 21147                           prodh	equ	0xFF4
 21148                           prodl	equ	0xFF3
 21149                           intcon	equ	0xFF2
 21150                           intcon2	equ	0xFF1
 21151                           intcon3	equ	0xFF0
 21152                           indf0	equ	0xFEF
 21153                           postinc0	equ	0xFEE
 21154                           plusw0	equ	0xFEB
 21155                           fsr0h	equ	0xFEA
 21156                           fsr0l	equ	0xFE9
 21157                           wreg	equ	0xFE8
 21158                           indf1	equ	0xFE7
 21159                           postinc1	equ	0xFE6
 21160                           postdec1	equ	0xFE5
 21161                           fsr1h	equ	0xFE2
 21162                           fsr1l	equ	0xFE1
 21163                           indf2	equ	0xFDF
 21164                           postinc2	equ	0xFDE
 21165                           postdec2	equ	0xFDD
 21166                           plusw2	equ	0xFDB
 21167                           fsr2h	equ	0xFDA
 21168                           fsr2l	equ	0xFD9
 21169                           status	equ	0xFD8
 21170                           
 21171 ;; *************** function _Mdm_HangPhoneCall *****************
 21172 ;; Defined at:
 21173 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21174 ;; Parameters:    Size  Location     Type
 21175 ;;		None
 21176 ;; Auto vars:     Size  Location     Type
 21177 ;;		None
 21178 ;; Return value:  Size  Location     Type
 21179 ;;                  1    wreg      void 
 21180 ;; Registers used:
 21181 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21182 ;; Tracked objects:
 21183 ;;		On entry : 0/0
 21184 ;;		On exit  : 0/0
 21185 ;;		Unchanged: 0/0
 21186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21191 ;;Total ram usage:        0 bytes
 21192 ;; Hardware stack levels used:    1
 21193 ;; Hardware stack levels required when called:   13
 21194 ;; This function calls:
 21195 ;;		_Uart_WriteConstString
 21196 ;; This function is called by:
 21197 ;;		_MyApp_Task
 21198 ;;		_getSetupCall
 21199 ;; This function uses a non-reentrant model
 21200 ;;
 21201                           
 21202                           	psect	text93
 21203  0066D8                     __ptext93:
 21204                           	opt stack 0
 21205  0066D8                     _Mdm_HangPhoneCall:
 21206                           	opt stack 12
 21207                           
 21208                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 21209                           
 21210                           ; BSR set to: 0
 21211                           ;incstack = 0
 21212  0066D8  0EF0               	movlw	low STR_6
 21213  0066DA  0100               	movlb	0	; () banked
 21214  0066DC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21215  0066DE  0EFF               	movlw	high STR_6
 21216  0066E0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21217  0066E2  0E01               	movlw	1
 21218  0066E4  EC1C  F02F         	call	_Uart_WriteConstString
 21219  0066E8  0012               	return		;funcret
 21220  0066EA                     __end_of_Mdm_HangPhoneCall:
 21221                           	opt stack 0
 21222                           tosu	equ	0xFFF
 21223                           tosh	equ	0xFFE
 21224                           tosl	equ	0xFFD
 21225                           pclath	equ	0xFFA
 21226                           tblptru	equ	0xFF8
 21227                           tblptrh	equ	0xFF7
 21228                           tblptrl	equ	0xFF6
 21229                           tablat	equ	0xFF5
 21230                           prodh	equ	0xFF4
 21231                           prodl	equ	0xFF3
 21232                           intcon	equ	0xFF2
 21233                           intcon2	equ	0xFF1
 21234                           intcon3	equ	0xFF0
 21235                           indf0	equ	0xFEF
 21236                           postinc0	equ	0xFEE
 21237                           plusw0	equ	0xFEB
 21238                           fsr0h	equ	0xFEA
 21239                           fsr0l	equ	0xFE9
 21240                           wreg	equ	0xFE8
 21241                           indf1	equ	0xFE7
 21242                           postinc1	equ	0xFE6
 21243                           postdec1	equ	0xFE5
 21244                           fsr1h	equ	0xFE2
 21245                           fsr1l	equ	0xFE1
 21246                           indf2	equ	0xFDF
 21247                           postinc2	equ	0xFDE
 21248                           postdec2	equ	0xFDD
 21249                           plusw2	equ	0xFDB
 21250                           fsr2h	equ	0xFDA
 21251                           fsr2l	equ	0xFD9
 21252                           status	equ	0xFD8
 21253                           
 21254 ;; *************** function _saveNumberInMemory *****************
 21255 ;; Defined at:
 21256 ;;		line 108 in file "../Source/c/04_App/app_gate.c"
 21257 ;; Parameters:    Size  Location     Type
 21258 ;;  address         1    wreg     unsigned char 
 21259 ;;  phoneNumber     2   46[BANK0 ] PTR unsigned char 
 21260 ;;		 -> MyApp_Task@emptyNumber(13), callerNumber(13), 
 21261 ;; Auto vars:     Size  Location     Type
 21262 ;;  address         1   48[BANK0 ] unsigned char 
 21263 ;; Return value:  Size  Location     Type
 21264 ;;                  1    wreg      void 
 21265 ;; Registers used:
 21266 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21267 ;; Tracked objects:
 21268 ;;		On entry : 0/0
 21269 ;;		On exit  : 0/0
 21270 ;;		Unchanged: 0/0
 21271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21272 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21275 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21276 ;;Total ram usage:        3 bytes
 21277 ;; Hardware stack levels used:    1
 21278 ;; Hardware stack levels required when called:   14
 21279 ;; This function calls:
 21280 ;;		_Eeprom_Write
 21281 ;; This function is called by:
 21282 ;;		_MyApp_Task
 21283 ;; This function uses a non-reentrant model
 21284 ;;
 21285                           
 21286                           	psect	text94
 21287  0065DE                     __ptext94:
 21288                           	opt stack 0
 21289  0065DE                     _saveNumberInMemory:
 21290                           	opt stack 13
 21291                           
 21292                           ;incstack = 0
 21293                           ;saveNumberInMemory@address stored from wreg
 21294  0065DE  0100               	movlb	0	; () banked
 21295  0065E0  6F90               	movwf	saveNumberInMemory@address& (0+255),b
 21296                           
 21297                           ;app_gate.c: 110: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 21298  0065E2  C08E  F087         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 21299  0065E6  C08F  F088         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 21300  0065EA  0E0D               	movlw	13
 21301  0065EC  0100               	movlb	0	; () banked
 21302  0065EE  6F89               	movwf	Eeprom_Write@DataLength& (0+255),b
 21303  0065F0  5190               	movf	saveNumberInMemory@address& (0+255),w,b
 21304  0065F2  EC7C  F02C         	call	_Eeprom_Write
 21305  0065F6  0012               	return		;funcret
 21306  0065F8                     __end_of_saveNumberInMemory:
 21307                           	opt stack 0
 21308                           tosu	equ	0xFFF
 21309                           tosh	equ	0xFFE
 21310                           tosl	equ	0xFFD
 21311                           pclath	equ	0xFFA
 21312                           tblptru	equ	0xFF8
 21313                           tblptrh	equ	0xFF7
 21314                           tblptrl	equ	0xFF6
 21315                           tablat	equ	0xFF5
 21316                           prodh	equ	0xFF4
 21317                           prodl	equ	0xFF3
 21318                           intcon	equ	0xFF2
 21319                           intcon2	equ	0xFF1
 21320                           intcon3	equ	0xFF0
 21321                           indf0	equ	0xFEF
 21322                           postinc0	equ	0xFEE
 21323                           plusw0	equ	0xFEB
 21324                           fsr0h	equ	0xFEA
 21325                           fsr0l	equ	0xFE9
 21326                           wreg	equ	0xFE8
 21327                           indf1	equ	0xFE7
 21328                           postinc1	equ	0xFE6
 21329                           postdec1	equ	0xFE5
 21330                           fsr1h	equ	0xFE2
 21331                           fsr1l	equ	0xFE1
 21332                           indf2	equ	0xFDF
 21333                           postinc2	equ	0xFDE
 21334                           postdec2	equ	0xFDD
 21335                           plusw2	equ	0xFDB
 21336                           fsr2h	equ	0xFDA
 21337                           fsr2l	equ	0xFD9
 21338                           status	equ	0xFD8
 21339                           
 21340 ;; *************** function _parseCommand *****************
 21341 ;; Defined at:
 21342 ;;		line 89 in file "../Source/c/04_App/app.c"
 21343 ;; Parameters:    Size  Location     Type
 21344 ;;  text            2   40[BANK0 ] PTR unsigned char 
 21345 ;;		 -> smsText(20), 
 21346 ;; Auto vars:     Size  Location     Type
 21347 ;;  deleteNumber    3   45[BANK0 ] const unsigned char [3]
 21348 ;;  addNumberCmd    3   42[BANK0 ] const unsigned char [3]
 21349 ;;  state           1   48[BANK0 ] enum E8991
 21350 ;; Return value:  Size  Location     Type
 21351 ;;                  1    wreg      enum E8991
 21352 ;; Registers used:
 21353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21354 ;; Tracked objects:
 21355 ;;		On entry : 0/0
 21356 ;;		On exit  : 0/0
 21357 ;;		Unchanged: 0/0
 21358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21359 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21360 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21362 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21363 ;;Total ram usage:        9 bytes
 21364 ;; Hardware stack levels used:    1
 21365 ;; Hardware stack levels required when called:   12
 21366 ;; This function calls:
 21367 ;;		_StringCompare
 21368 ;; This function is called by:
 21369 ;;		_MyApp_Task
 21370 ;; This function uses a non-reentrant model
 21371 ;;
 21372                           
 21373                           	psect	text95
 21374  004B46                     __ptext95:
 21375                           	opt stack 0
 21376  004B46                     _parseCommand:
 21377                           	opt stack 15
 21378                           
 21379                           ;app.c: 91: const uint8_t addNumberCmd[] = {'A', 'D', 'D'};
 21380                           
 21381                           ;incstack = 0
 21382  004B46  0E2B               	movlw	low parseCommand@F9015
 21383  004B48  6EF6               	movwf	tblptrl,c
 21384  004B4A                     	if	1	;There is more than 1 active tblptr byte
 21385  004B4A  0EFC               	movlw	high parseCommand@F9015
 21386  004B4C  6EF7               	movwf	tblptrh,c
 21387  004B4E                     	endif
 21388  004B4E                     	if	0	;There are less than 3 active tblptr bytes
 21389  004B4E                     	endif
 21390  004B4E  0009               	tblrd		*+
 21391  004B50  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd
 21392  004B54  0009               	tblrd		*+
 21393  004B56  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+1
 21394  004B5A  000A               	tblrd		*-
 21395  004B5C  CFF5 F08C          	movff	tablat,parseCommand@addNumberCmd+2
 21396                           
 21397                           ;app.c: 92: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L'};
 21398  004B60  0E28               	movlw	low parseCommand@F9017
 21399  004B62  6EF6               	movwf	tblptrl,c
 21400  004B64                     	if	1	;There is more than 1 active tblptr byte
 21401  004B64  0EFC               	movlw	high parseCommand@F9017
 21402  004B66  6EF7               	movwf	tblptrh,c
 21403  004B68                     	endif
 21404  004B68                     	if	0	;There are less than 3 active tblptr bytes
 21405  004B68                     	endif
 21406  004B68  0009               	tblrd		*+
 21407  004B6A  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd
 21408  004B6E  0009               	tblrd		*+
 21409  004B70  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+1
 21410  004B74  000A               	tblrd		*-
 21411  004B76  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+2
 21412                           
 21413                           ;app.c: 93: gateFsmStates state = GATE_WAIT_EVENT;
 21414  004B7A  0E03               	movlw	3
 21415  004B7C  0100               	movlb	0	; () banked
 21416  004B7E  6F90               	movwf	parseCommand@state& (0+255),b
 21417                           
 21418                           ; BSR set to: 0
 21419                           ;app.c: 95: if (StringCompare(text, addNumberCmd, sizeof(addNumberCmd)))
 21420  004B80  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21421  004B84  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21422  004B88  0E8A               	movlw	low parseCommand@addNumberCmd
 21423  004B8A  6F7F               	movwf	StringCompare@String2& (0+255),b
 21424  004B8C  0E00               	movlw	high parseCommand@addNumberCmd
 21425  004B8E  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21426  004B90  0E00               	movlw	0
 21427  004B92  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21428  004B94  0E03               	movlw	3
 21429  004B96  6F81               	movwf	StringCompare@Len& (0+255),b
 21430  004B98  ECA5  F02C         	call	_StringCompare	;wreg free
 21431  004B9C  0900               	iorlw	0
 21432  004B9E  B4D8               	btfsc	status,2,c
 21433  004BA0  D002               	goto	l2574
 21434                           
 21435                           ;app.c: 96: {
 21436                           ;app.c: 97: state = GATE_ADD_CMD;
 21437  004BA2  0E04               	movlw	4
 21438  004BA4  D013               	goto	L23
 21439  004BA6                     l2574:
 21440                           
 21441                           ;app.c: 99: else if (StringCompare(text, deleteNumberCmd, sizeof(deleteNumberCmd)))
 21442                           
 21443                           ; BSR set to: 0
 21444  004BA6  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21445  004BAA  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21446  004BAE  0E8D               	movlw	low parseCommand@deleteNumberCmd
 21447  004BB0  0100               	movlb	0	; () banked
 21448  004BB2  6F7F               	movwf	StringCompare@String2& (0+255),b
 21449  004BB4  0E00               	movlw	high parseCommand@deleteNumberCmd
 21450  004BB6  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21451  004BB8  0E00               	movlw	0
 21452  004BBA  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21453  004BBC  0E03               	movlw	3
 21454  004BBE  6F81               	movwf	StringCompare@Len& (0+255),b
 21455  004BC0  ECA5  F02C         	call	_StringCompare	;wreg free
 21456  004BC4  0900               	iorlw	0
 21457  004BC6  B4D8               	btfsc	status,2,c
 21458  004BC8  D003               	goto	l2576
 21459                           
 21460                           ;app.c: 100: {
 21461                           ;app.c: 101: state = GATE_DEL_CMD;
 21462  004BCA  0E05               	movlw	5
 21463  004BCC                     L23:
 21464  004BCC  0100               	movlb	0	; () banked
 21465  004BCE  6F90               	movwf	parseCommand@state& (0+255),b
 21466  004BD0                     l2576:
 21467                           
 21468                           ;app.c: 106: }
 21469                           ;app.c: 107: return state;
 21470                           
 21471                           ; BSR set to: 0
 21472                           
 21473                           ; BSR set to: 0
 21474                           
 21475                           ;app.c: 103: else
 21476                           ;app.c: 104: {
 21477                           
 21478                           ; BSR set to: 0
 21479  004BD0  0100               	movlb	0	; () banked
 21480  004BD2  5190               	movf	parseCommand@state& (0+255),w,b
 21481  004BD4  0012               	return	
 21482  004BD6                     __end_of_parseCommand:
 21483                           	opt stack 0
 21484                           tosu	equ	0xFFF
 21485                           tosh	equ	0xFFE
 21486                           tosl	equ	0xFFD
 21487                           pclath	equ	0xFFA
 21488                           tblptru	equ	0xFF8
 21489                           tblptrh	equ	0xFF7
 21490                           tblptrl	equ	0xFF6
 21491                           tablat	equ	0xFF5
 21492                           prodh	equ	0xFF4
 21493                           prodl	equ	0xFF3
 21494                           intcon	equ	0xFF2
 21495                           intcon2	equ	0xFF1
 21496                           intcon3	equ	0xFF0
 21497                           indf0	equ	0xFEF
 21498                           postinc0	equ	0xFEE
 21499                           plusw0	equ	0xFEB
 21500                           fsr0h	equ	0xFEA
 21501                           fsr0l	equ	0xFE9
 21502                           wreg	equ	0xFE8
 21503                           indf1	equ	0xFE7
 21504                           postinc1	equ	0xFE6
 21505                           postdec1	equ	0xFE5
 21506                           fsr1h	equ	0xFE2
 21507                           fsr1l	equ	0xFE1
 21508                           indf2	equ	0xFDF
 21509                           postinc2	equ	0xFDE
 21510                           postdec2	equ	0xFDD
 21511                           plusw2	equ	0xFDB
 21512                           fsr2h	equ	0xFDA
 21513                           fsr2l	equ	0xFD9
 21514                           status	equ	0xFD8
 21515                           
 21516 ;; *************** function _isNumberInMemory *****************
 21517 ;; Defined at:
 21518 ;;		line 174 in file "../Source/c/04_App/app_gate.c"
 21519 ;; Parameters:    Size  Location     Type
 21520 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 21521 ;;		 -> callerNumber(13), 
 21522 ;; Auto vars:     Size  Location     Type
 21523 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 21524 ;;  memoryOpResu    1   18[BANK1 ] enum E8244
 21525 ;;  positionInMe    1   17[BANK1 ] unsigned char 
 21526 ;;  searchInProg    1   16[BANK1 ] const unsigned char 
 21527 ;;  searchFailed    1   15[BANK1 ] const unsigned char 
 21528 ;; Return value:  Size  Location     Type
 21529 ;;                  1    wreg      unsigned char 
 21530 ;; Registers used:
 21531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21532 ;; Tracked objects:
 21533 ;;		On entry : 0/0
 21534 ;;		On exit  : 0/0
 21535 ;;		Unchanged: 0/0
 21536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21537 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21538 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21540 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21541 ;;Total ram usage:       19 bytes
 21542 ;; Hardware stack levels used:    1
 21543 ;; Hardware stack levels required when called:   17
 21544 ;; This function calls:
 21545 ;;		_Eeprom_Read
 21546 ;;		_StringCompare
 21547 ;;		_isNumberValid
 21548 ;; This function is called by:
 21549 ;;		_MyApp_Task
 21550 ;; This function uses a non-reentrant model
 21551 ;;
 21552                           
 21553                           	psect	text96
 21554  004E10                     __ptext96:
 21555                           	opt stack 0
 21556  004E10                     _isNumberInMemory:
 21557                           	opt stack 10
 21558                           
 21559                           ;app_gate.c: 176: const uint8_t searchInProgress = 0;
 21560                           
 21561                           ; BSR set to: 0
 21562                           ;incstack = 0
 21563  004E10  0E00               	movlw	0
 21564  004E12  0101               	movlb	1	; () banked
 21565  004E14  6F10               	movwf	isNumberInMemory@searchInProgress& (0+255),b
 21566                           
 21567                           ;app_gate.c: 177: const uint8_t searchFailed = 1;
 21568  004E16  0E01               	movlw	1
 21569  004E18  6F0F               	movwf	isNumberInMemory@searchFailed& (0+255),b
 21570                           
 21571                           ; BSR set to: 1
 21572                           ;app_gate.c: 178: static uint8_t currentPosition = 16;
 21573                           ;app_gate.c: 179: uint8_t positionInMemory = searchInProgress;
 21574  004E1A  C110  F111         	movff	isNumberInMemory@searchInProgress,isNumberInMemory@positionInMemory
 21575                           
 21576                           ;app_gate.c: 180: uint8_t readBuffer[((UINT8)(13))];
 21577                           ;app_gate.c: 181: EepromStsType memoryOpResult = OP_PENDING;
 21578  004E1E  0E02               	movlw	2
 21579  004E20  6F12               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21580                           
 21581                           ; BSR set to: 1
 21582                           ;app_gate.c: 183: if (currentPosition >= 16 * 10)
 21583  004E22  0E9F               	movlw	159
 21584  004E24  0100               	movlb	0	; () banked
 21585  004E26  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 21586  004E28  D002               	goto	l2789
 21587                           
 21588                           ; BSR set to: 0
 21589                           ;app_gate.c: 184: {
 21590                           ;app_gate.c: 185: currentPosition = 16;
 21591  004E2A  0E10               	movlw	16
 21592  004E2C  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21593  004E2E                     l2789:
 21594                           
 21595                           ; BSR set to: 0
 21596                           ;app_gate.c: 186: }
 21597                           ;app_gate.c: 187: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)
      +                          ));
 21598                           
 21599                           ; BSR set to: 0
 21600  004E2E  0E02               	movlw	low isNumberInMemory@readBuffer
 21601  004E30  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 21602  004E32  0E01               	movlw	high isNumberInMemory@readBuffer
 21603  004E34  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 21604  004E36  0E0D               	movlw	13
 21605  004E38  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 21606  004E3A  51E2               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 21607  004E3C  ECFE  F02B         	call	_Eeprom_Read
 21608  004E40  0101               	movlb	1	; () banked
 21609  004E42  6F12               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21610                           
 21611                           ; BSR set to: 1
 21612                           ;app_gate.c: 188: if (memoryOpResult != OP_PENDING)
 21613  004E44  0E02               	movlw	2
 21614  004E46  1912               	xorwf	isNumberInMemory@memoryOpResult& (0+255),w,b
 21615  004E48  B4D8               	btfsc	status,2,c
 21616  004E4A  D024               	goto	l2790
 21617                           
 21618                           ; BSR set to: 1
 21619                           ;app_gate.c: 189: {
 21620                           ;app_gate.c: 190: if (isNumberValid(readBuffer))
 21621  004E4C  0E02               	movlw	low isNumberInMemory@readBuffer
 21622  004E4E  0100               	movlb	0	; () banked
 21623  004E50  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 21624  004E52  0E01               	movlw	high isNumberInMemory@readBuffer
 21625  004E54  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 21626  004E56  EC0A  F02A         	call	_isNumberValid	;wreg free
 21627  004E5A  0900               	iorlw	0
 21628  004E5C  B4D8               	btfsc	status,2,c
 21629  004E5E  D017               	goto	l2792
 21630                           
 21631                           ;app_gate.c: 191: {
 21632                           ;app_gate.c: 192: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 21633  004E60  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 21634  004E64  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 21635  004E68  0E02               	movlw	low isNumberInMemory@readBuffer
 21636  004E6A  0100               	movlb	0	; () banked
 21637  004E6C  6F7F               	movwf	StringCompare@String2& (0+255),b
 21638  004E6E  0E01               	movlw	high isNumberInMemory@readBuffer
 21639  004E70  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21640  004E72  0E00               	movlw	0
 21641  004E74  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21642  004E76  0E0D               	movlw	13
 21643  004E78  6F81               	movwf	StringCompare@Len& (0+255),b
 21644  004E7A  ECA5  F02C         	call	_StringCompare	;wreg free
 21645  004E7E  0900               	iorlw	0
 21646  004E80  B4D8               	btfsc	status,2,c
 21647  004E82  D005               	goto	l2792
 21648                           
 21649                           ;app_gate.c: 193: {
 21650                           ;app_gate.c: 194: positionInMemory = currentPosition;
 21651  004E84  C0E2  F111         	movff	isNumberInMemory@currentPosition,isNumberInMemory@positionInMemory
 21652                           
 21653                           ;app_gate.c: 195: currentPosition = 16 * 10;
 21654  004E88  0EA0               	movlw	160
 21655  004E8A  0100               	movlb	0	; () banked
 21656  004E8C  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21657  004E8E                     l2792:
 21658                           
 21659                           ;app_gate.c: 200: }
 21660                           ;app_gate.c: 202: }
 21661                           ;app_gate.c: 203: currentPosition += 16;
 21662                           
 21663                           ; BSR set to: 0
 21664                           
 21665                           ; BSR set to: 0
 21666                           
 21667                           ;app_gate.c: 197: else
 21668                           ;app_gate.c: 198: {
 21669                           
 21670                           ; BSR set to: 0
 21671  004E8E  0E10               	movlw	16
 21672  004E90  0100               	movlb	0	; () banked
 21673  004E92  27E2               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 21674  004E94                     l2790:
 21675                           
 21676                           ;app_gate.c: 204: }
 21677                           ;app_gate.c: 205: return positionInMemory;
 21678                           
 21679                           ; BSR set to: 0
 21680  004E94  0101               	movlb	1	; () banked
 21681  004E96  5111               	movf	isNumberInMemory@positionInMemory& (0+255),w,b
 21682  004E98  0012               	return	
 21683  004E9A                     __end_of_isNumberInMemory:
 21684                           	opt stack 0
 21685                           tosu	equ	0xFFF
 21686                           tosh	equ	0xFFE
 21687                           tosl	equ	0xFFD
 21688                           pclath	equ	0xFFA
 21689                           tblptru	equ	0xFF8
 21690                           tblptrh	equ	0xFF7
 21691                           tblptrl	equ	0xFF6
 21692                           tablat	equ	0xFF5
 21693                           prodh	equ	0xFF4
 21694                           prodl	equ	0xFF3
 21695                           intcon	equ	0xFF2
 21696                           intcon2	equ	0xFF1
 21697                           intcon3	equ	0xFF0
 21698                           indf0	equ	0xFEF
 21699                           postinc0	equ	0xFEE
 21700                           plusw0	equ	0xFEB
 21701                           fsr0h	equ	0xFEA
 21702                           fsr0l	equ	0xFE9
 21703                           wreg	equ	0xFE8
 21704                           indf1	equ	0xFE7
 21705                           postinc1	equ	0xFE6
 21706                           postdec1	equ	0xFE5
 21707                           fsr1h	equ	0xFE2
 21708                           fsr1l	equ	0xFE1
 21709                           indf2	equ	0xFDF
 21710                           postinc2	equ	0xFDE
 21711                           postdec2	equ	0xFDD
 21712                           plusw2	equ	0xFDB
 21713                           fsr2h	equ	0xFDA
 21714                           fsr2l	equ	0xFD9
 21715                           status	equ	0xFD8
 21716                           
 21717 ;; *************** function _isNumberValid *****************
 21718 ;; Defined at:
 21719 ;;		line 152 in file "../Source/c/04_App/app_gate.c"
 21720 ;; Parameters:    Size  Location     Type
 21721 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 21722 ;;		 -> isNumberInMemory@readBuffer(13), smsText(20), 
 21723 ;; Auto vars:     Size  Location     Type
 21724 ;;  i               1   33[BANK0 ] unsigned char 
 21725 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 21726 ;; Return value:  Size  Location     Type
 21727 ;;                  1    wreg      unsigned char 
 21728 ;; Registers used:
 21729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21730 ;; Tracked objects:
 21731 ;;		On entry : 0/0
 21732 ;;		On exit  : 0/0
 21733 ;;		Unchanged: 0/0
 21734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21735 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21736 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21738 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21739 ;;Total ram usage:        5 bytes
 21740 ;; Hardware stack levels used:    1
 21741 ;; Hardware stack levels required when called:   11
 21742 ;; This function calls:
 21743 ;;		Nothing
 21744 ;; This function is called by:
 21745 ;;		_MyApp_Task
 21746 ;;		_isNumberInMemory
 21747 ;; This function uses a non-reentrant model
 21748 ;;
 21749                           
 21750                           	psect	text97
 21751  005414                     __ptext97:
 21752                           	opt stack 0
 21753  005414                     _isNumberValid:
 21754                           	opt stack 16
 21755                           
 21756                           ;app_gate.c: 154: bool isNumberOk = 0;
 21757                           
 21758                           ; BSR set to: 1
 21759                           ;incstack = 0
 21760  005414  0E00               	movlw	0
 21761  005416  0100               	movlb	0	; () banked
 21762  005418  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 21763                           
 21764                           ;app_gate.c: 155: uint8_t i = 0;
 21765  00541A  0E00               	movlw	0
 21766  00541C  6F81               	movwf	isNumberValid@i& (0+255),b
 21767                           
 21768                           ; BSR set to: 0
 21769                           ;app_gate.c: 156: if (phoneNumber[0] == '+')
 21770  00541E  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 21771  005422  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 21772  005426  0E2B               	movlw	43
 21773  005428  18DE               	xorwf	postinc2,w,c
 21774  00542A  A4D8               	btfss	status,2,c
 21775  00542C  D024               	goto	u13950
 21776                           
 21777                           ; BSR set to: 0
 21778                           ;app_gate.c: 157: {
 21779                           ;app_gate.c: 158: for (i = 1; i < ((UINT8)(13)); i++)
 21780  00542E  0E01               	movlw	1
 21781  005430  6F81               	movwf	isNumberValid@i& (0+255),b
 21782  005432                     l14562:
 21783                           
 21784                           ; BSR set to: 0
 21785  005432  0E0C               	movlw	12
 21786  005434  6581               	cpfsgt	isNumberValid@i& (0+255),b
 21787  005436  D001               	goto	l2780
 21788  005438  D01E               	goto	u13950
 21789  00543A                     l2780:
 21790                           
 21791                           ; BSR set to: 0
 21792                           ;app_gate.c: 159: {
 21793                           ;app_gate.c: 160: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 21794                           
 21795                           ; BSR set to: 0
 21796  00543A  5181               	movf	isNumberValid@i& (0+255),w,b
 21797  00543C  0D01               	mullw	1
 21798  00543E  50F3               	movf	prodl,w,c
 21799  005440  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 21800  005442  6ED9               	movwf	fsr2l,c
 21801  005444  50F4               	movf	prodh,w,c
 21802  005446  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 21803  005448  6EDA               	movwf	fsr2h,c
 21804  00544A  0E2F               	movlw	47
 21805  00544C  64DF               	cpfsgt	indf2,c
 21806  00544E  D00E               	goto	l2782
 21807                           
 21808                           ; BSR set to: 0
 21809  005450  5181               	movf	isNumberValid@i& (0+255),w,b
 21810  005452  0D01               	mullw	1
 21811  005454  50F3               	movf	prodl,w,c
 21812  005456  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 21813  005458  6ED9               	movwf	fsr2l,c
 21814  00545A  50F4               	movf	prodh,w,c
 21815  00545C  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 21816  00545E  6EDA               	movwf	fsr2h,c
 21817  005460  0E3A               	movlw	58
 21818  005462  60DF               	cpfslt	indf2,c
 21819  005464  D003               	goto	l2782
 21820                           
 21821                           ; BSR set to: 0
 21822                           ;app_gate.c: 161: {
 21823                           ;app_gate.c: 162: isNumberOk = 1;
 21824  005466  0E01               	movlw	1
 21825  005468  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 21826                           
 21827                           ;app_gate.c: 163: }
 21828  00546A  D003               	goto	l2783
 21829  00546C                     l2782:
 21830                           
 21831                           ; BSR set to: 0
 21832                           ;app_gate.c: 164: else
 21833                           ;app_gate.c: 165: {
 21834                           ;app_gate.c: 166: isNumberOk = 0;
 21835                           
 21836                           ; BSR set to: 0
 21837  00546C  0E00               	movlw	0
 21838  00546E  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 21839                           
 21840                           ;app_gate.c: 167: break;
 21841  005470  D002               	goto	u13950
 21842  005472                     l2783:
 21843                           
 21844                           ; BSR set to: 0
 21845                           
 21846                           ; BSR set to: 0
 21847  005472  2B81               	incf	isNumberValid@i& (0+255),f,b
 21848  005474  D7DE               	goto	l14562
 21849  005476                     u13950:
 21850                           
 21851                           ; BSR set to: 0
 21852                           ;app_gate.c: 168: }
 21853                           ;app_gate.c: 169: }
 21854                           ;app_gate.c: 170: }
 21855                           ;app_gate.c: 171: return isNumberOk;
 21856                           
 21857                           ; BSR set to: 0
 21858                           
 21859                           ; BSR set to: 0
 21860  005476  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 21861  005478  0012               	return	
 21862  00547A                     __end_of_isNumberValid:
 21863                           	opt stack 0
 21864                           tosu	equ	0xFFF
 21865                           tosh	equ	0xFFE
 21866                           tosl	equ	0xFFD
 21867                           pclath	equ	0xFFA
 21868                           tblptru	equ	0xFF8
 21869                           tblptrh	equ	0xFF7
 21870                           tblptrl	equ	0xFF6
 21871                           tablat	equ	0xFF5
 21872                           prodh	equ	0xFF4
 21873                           prodl	equ	0xFF3
 21874                           intcon	equ	0xFF2
 21875                           intcon2	equ	0xFF1
 21876                           intcon3	equ	0xFF0
 21877                           indf0	equ	0xFEF
 21878                           postinc0	equ	0xFEE
 21879                           plusw0	equ	0xFEB
 21880                           fsr0h	equ	0xFEA
 21881                           fsr0l	equ	0xFE9
 21882                           wreg	equ	0xFE8
 21883                           indf1	equ	0xFE7
 21884                           postinc1	equ	0xFE6
 21885                           postdec1	equ	0xFE5
 21886                           fsr1h	equ	0xFE2
 21887                           fsr1l	equ	0xFE1
 21888                           indf2	equ	0xFDF
 21889                           postinc2	equ	0xFDE
 21890                           postdec2	equ	0xFDD
 21891                           plusw2	equ	0xFDB
 21892                           fsr2h	equ	0xFDA
 21893                           fsr2l	equ	0xFD9
 21894                           status	equ	0xFD8
 21895                           
 21896 ;; *************** function _initMemorizedNumbersCount *****************
 21897 ;; Defined at:
 21898 ;;		line 117 in file "../Source/c/04_App/app_gate.c"
 21899 ;; Parameters:    Size  Location     Type
 21900 ;;		None
 21901 ;; Auto vars:     Size  Location     Type
 21902 ;;		None
 21903 ;; Return value:  Size  Location     Type
 21904 ;;                  1    wreg      void 
 21905 ;; Registers used:
 21906 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21907 ;; Tracked objects:
 21908 ;;		On entry : 0/0
 21909 ;;		On exit  : 0/0
 21910 ;;		Unchanged: 0/0
 21911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21916 ;;Total ram usage:        0 bytes
 21917 ;; Hardware stack levels used:    1
 21918 ;; Hardware stack levels required when called:   14
 21919 ;; This function calls:
 21920 ;;		_Eeprom_Write
 21921 ;;		_initPreamble
 21922 ;; This function is called by:
 21923 ;;		_MyApp_Task
 21924 ;; This function uses a non-reentrant model
 21925 ;;
 21926                           
 21927                           	psect	text98
 21928  0065F8                     __ptext98:
 21929                           	opt stack 0
 21930  0065F8                     _initMemorizedNumbersCount:
 21931                           	opt stack 13
 21932                           
 21933                           ;app_gate.c: 119: Eeprom_Write(0, initPreamble(), 5);
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;incstack = 0
 21937  0065F8  EC97  F031         	call	_initPreamble	;wreg free
 21938  0065FC  C07D  F087         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21939  006600  C07E  F088         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21940  006604  0E05               	movlw	5
 21941  006606  0100               	movlb	0	; () banked
 21942  006608  6F89               	movwf	Eeprom_Write@DataLength& (0+255),b
 21943  00660A  0E00               	movlw	0
 21944  00660C  EC7C  F02C         	call	_Eeprom_Write
 21945  006610  0012               	return		;funcret
 21946  006612                     __end_of_initMemorizedNumbersCount:
 21947                           	opt stack 0
 21948                           tosu	equ	0xFFF
 21949                           tosh	equ	0xFFE
 21950                           tosl	equ	0xFFD
 21951                           pclath	equ	0xFFA
 21952                           tblptru	equ	0xFF8
 21953                           tblptrh	equ	0xFF7
 21954                           tblptrl	equ	0xFF6
 21955                           tablat	equ	0xFF5
 21956                           prodh	equ	0xFF4
 21957                           prodl	equ	0xFF3
 21958                           intcon	equ	0xFF2
 21959                           intcon2	equ	0xFF1
 21960                           intcon3	equ	0xFF0
 21961                           indf0	equ	0xFEF
 21962                           postinc0	equ	0xFEE
 21963                           plusw0	equ	0xFEB
 21964                           fsr0h	equ	0xFEA
 21965                           fsr0l	equ	0xFE9
 21966                           wreg	equ	0xFE8
 21967                           indf1	equ	0xFE7
 21968                           postinc1	equ	0xFE6
 21969                           postdec1	equ	0xFE5
 21970                           fsr1h	equ	0xFE2
 21971                           fsr1l	equ	0xFE1
 21972                           indf2	equ	0xFDF
 21973                           postinc2	equ	0xFDE
 21974                           postdec2	equ	0xFDD
 21975                           plusw2	equ	0xFDB
 21976                           fsr2h	equ	0xFDA
 21977                           fsr2l	equ	0xFD9
 21978                           status	equ	0xFD8
 21979                           
 21980 ;; *************** function _initPreamble *****************
 21981 ;; Defined at:
 21982 ;;		line 213 in file "../Source/c/04_App/app_init.c"
 21983 ;; Parameters:    Size  Location     Type
 21984 ;;		None
 21985 ;; Auto vars:     Size  Location     Type
 21986 ;;		None
 21987 ;; Return value:  Size  Location     Type
 21988 ;;                  2   29[BANK0 ] PTR unsigned char 
 21989 ;; Registers used:
 21990 ;;		wreg, status,2, status,0
 21991 ;; Tracked objects:
 21992 ;;		On entry : 0/0
 21993 ;;		On exit  : 0/0
 21994 ;;		Unchanged: 0/0
 21995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22000 ;;Total ram usage:        2 bytes
 22001 ;; Hardware stack levels used:    1
 22002 ;; Hardware stack levels required when called:   11
 22003 ;; This function calls:
 22004 ;;		Nothing
 22005 ;; This function is called by:
 22006 ;;		_initMemorizedNumbersCount
 22007 ;; This function uses a non-reentrant model
 22008 ;;
 22009                           
 22010                           	psect	text99
 22011  00632E                     __ptext99:
 22012                           	opt stack 0
 22013  00632E                     _initPreamble:
 22014                           	opt stack 15
 22015                           
 22016                           ;app_init.c: 215: memoryPreamble[0] = 'U';
 22017                           
 22018                           ;incstack = 0
 22019  00632E  0E55               	movlw	85
 22020  006330  0103               	movlb	3	; () banked
 22021  006332  6F94               	movwf	_memoryPreamble& (0+255),b
 22022                           
 22023                           ;app_init.c: 216: memoryPreamble[1] = 'S';
 22024  006334  0E53               	movlw	83
 22025  006336  6F95               	movwf	(_memoryPreamble+1)& (0+255),b
 22026                           
 22027                           ;app_init.c: 217: memoryPreamble[2] = 'I';
 22028  006338  0E49               	movlw	73
 22029  00633A  6F96               	movwf	(_memoryPreamble+2)& (0+255),b
 22030                           
 22031                           ;app_init.c: 218: memoryPreamble[3] = 'M';
 22032  00633C  0E4D               	movlw	77
 22033  00633E  6F97               	movwf	(_memoryPreamble+3)& (0+255),b
 22034                           
 22035                           ;app_init.c: 219: memoryPreamble[4] = 1;
 22036  006340  0E01               	movlw	1
 22037  006342  6F98               	movwf	(_memoryPreamble+4)& (0+255),b
 22038                           
 22039                           ;app_init.c: 220: memorizedNumbersCount[0] = 1;
 22040  006344  0E01               	movlw	1
 22041  006346  6E38               	movwf	_memorizedNumbersCount,c
 22042                           
 22043                           ; BSR set to: 3
 22044                           ;app_init.c: 221: return memoryPreamble;
 22045  006348  0E94               	movlw	low _memoryPreamble
 22046  00634A  0100               	movlb	0	; () banked
 22047  00634C  6F7D               	movwf	?_initPreamble& (0+255),b
 22048  00634E  0E03               	movlw	high _memoryPreamble
 22049  006350  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 22050  006352  0012               	return	
 22051  006354                     __end_of_initPreamble:
 22052                           	opt stack 0
 22053                           tosu	equ	0xFFF
 22054                           tosh	equ	0xFFE
 22055                           tosl	equ	0xFFD
 22056                           pclath	equ	0xFFA
 22057                           tblptru	equ	0xFF8
 22058                           tblptrh	equ	0xFF7
 22059                           tblptrl	equ	0xFF6
 22060                           tablat	equ	0xFF5
 22061                           prodh	equ	0xFF4
 22062                           prodl	equ	0xFF3
 22063                           intcon	equ	0xFF2
 22064                           intcon2	equ	0xFF1
 22065                           intcon3	equ	0xFF0
 22066                           indf0	equ	0xFEF
 22067                           postinc0	equ	0xFEE
 22068                           plusw0	equ	0xFEB
 22069                           fsr0h	equ	0xFEA
 22070                           fsr0l	equ	0xFE9
 22071                           wreg	equ	0xFE8
 22072                           indf1	equ	0xFE7
 22073                           postinc1	equ	0xFE6
 22074                           postdec1	equ	0xFE5
 22075                           fsr1h	equ	0xFE2
 22076                           fsr1l	equ	0xFE1
 22077                           indf2	equ	0xFDF
 22078                           postinc2	equ	0xFDE
 22079                           postdec2	equ	0xFDD
 22080                           plusw2	equ	0xFDB
 22081                           fsr2h	equ	0xFDA
 22082                           fsr2l	equ	0xFD9
 22083                           status	equ	0xFD8
 22084                           
 22085 ;; *************** function _Eeprom_Write *****************
 22086 ;; Defined at:
 22087 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 22088 ;; Parameters:    Size  Location     Type
 22089 ;;  MemoryAddres    1    wreg     unsigned char 
 22090 ;;  WriteBuffer     2   39[BANK0 ] PTR unsigned char 
 22091 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), MyApp_Task@emptyNumber(13), callerNumber(13), 
 22092 ;;  DataLength      1   41[BANK0 ] unsigned char 
 22093 ;; Auto vars:     Size  Location     Type
 22094 ;;  MemoryAddres    1   43[BANK0 ] unsigned char 
 22095 ;;  CommandLengt    1   45[BANK0 ] const unsigned char 
 22096 ;;  SlaveAddress    1   44[BANK0 ] const unsigned char 
 22097 ;;  WriteSts        1   42[BANK0 ] unsigned char 
 22098 ;; Return value:  Size  Location     Type
 22099 ;;                  1    wreg      unsigned char 
 22100 ;; Registers used:
 22101 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22102 ;; Tracked objects:
 22103 ;;		On entry : 0/0
 22104 ;;		On exit  : 0/0
 22105 ;;		Unchanged: 0/0
 22106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22107 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22108 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22110 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22111 ;;Total ram usage:        7 bytes
 22112 ;; Hardware stack levels used:    1
 22113 ;; Hardware stack levels required when called:   13
 22114 ;; This function calls:
 22115 ;;		_I2cSlv_SendI2cMsg
 22116 ;;		_StringCopy
 22117 ;; This function is called by:
 22118 ;;		_saveNumberInMemory
 22119 ;;		_initMemorizedNumbersCount
 22120 ;;		_incrementMemorizedNumbersCount
 22121 ;;		_decrementMemorizedNumbersCount
 22122 ;; This function uses a non-reentrant model
 22123 ;;
 22124                           
 22125                           	psect	text100
 22126  0058F8                     __ptext100:
 22127                           	opt stack 0
 22128  0058F8                     _Eeprom_Write:
 22129                           	opt stack 13
 22130                           
 22131                           ; BSR set to: 0
 22132                           ;incstack = 0
 22133                           ;Eeprom_Write@MemoryAddress stored from wreg
 22134  0058F8  0100               	movlb	0	; () banked
 22135  0058FA  6F8B               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 22136                           
 22137                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 22138  0058FC  0E50               	movlw	80
 22139  0058FE  0100               	movlb	0	; () banked
 22140  005900  6F8C               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 22141                           
 22142                           ; BSR set to: 0
 22143                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 22144  005902  2989               	incf	Eeprom_Write@DataLength& (0+255),w,b
 22145  005904  6F8D               	movwf	Eeprom_Write@CommandLength& (0+255),b
 22146                           
 22147                           ; BSR set to: 0
 22148                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 22149  005906  0E00               	movlw	0
 22150  005908  6F8A               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22151                           
 22152                           ; BSR set to: 0
 22153                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 22154  00590A  0E10               	movlw	16
 22155  00590C  618D               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 22156  00590E  0012               	return	
 22157                           
 22158                           ; BSR set to: 0
 22159                           ;eeprom_if.c: 85: {
 22160                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 22161  005910  C08B  F4BD         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 22162                           
 22163                           ; BSR set to: 0
 22164                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 22165  005914  C087  F07D         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 22166  005918  C088  F07E         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 22167  00591C  0EBE               	movlw	low (_EepromBuffer+1)
 22168  00591E  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22169  005920  0E04               	movlw	high (_EepromBuffer+1)
 22170  005922  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22171  005924  C089  F081         	movff	Eeprom_Write@DataLength,StringCopy@Len
 22172  005928  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22173  00592A  EC3D  F02A         	call	_StringCopy	;wreg free
 22174                           
 22175                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 22176  00592E  0EBD               	movlw	low _EepromBuffer
 22177  005930  0100               	movlb	0	; () banked
 22178  005932  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 22179  005934  0E04               	movlw	high _EepromBuffer
 22180  005936  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 22181  005938  C08C  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 22182  00593C  C08D  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 22183  005940  EC9D  F02F         	call	_I2cSlv_SendI2cMsg	;wreg free
 22184  005944  0100               	movlb	0	; () banked
 22185  005946  6F8A               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22186                           
 22187                           ; BSR set to: 0
 22188  005948  0012               	return	
 22189  00594A                     __end_of_Eeprom_Write:
 22190                           	opt stack 0
 22191                           tosu	equ	0xFFF
 22192                           tosh	equ	0xFFE
 22193                           tosl	equ	0xFFD
 22194                           pclath	equ	0xFFA
 22195                           tblptru	equ	0xFF8
 22196                           tblptrh	equ	0xFF7
 22197                           tblptrl	equ	0xFF6
 22198                           tablat	equ	0xFF5
 22199                           prodh	equ	0xFF4
 22200                           prodl	equ	0xFF3
 22201                           intcon	equ	0xFF2
 22202                           intcon2	equ	0xFF1
 22203                           intcon3	equ	0xFF0
 22204                           indf0	equ	0xFEF
 22205                           postinc0	equ	0xFEE
 22206                           plusw0	equ	0xFEB
 22207                           fsr0h	equ	0xFEA
 22208                           fsr0l	equ	0xFE9
 22209                           wreg	equ	0xFE8
 22210                           indf1	equ	0xFE7
 22211                           postinc1	equ	0xFE6
 22212                           postdec1	equ	0xFE5
 22213                           fsr1h	equ	0xFE2
 22214                           fsr1l	equ	0xFE1
 22215                           indf2	equ	0xFDF
 22216                           postinc2	equ	0xFDE
 22217                           postdec2	equ	0xFDD
 22218                           plusw2	equ	0xFDB
 22219                           fsr2h	equ	0xFDA
 22220                           fsr2l	equ	0xFD9
 22221                           status	equ	0xFD8
 22222                           
 22223 ;; *************** function _initFsm *****************
 22224 ;; Defined at:
 22225 ;;		line 177 in file "../Source/c/04_App/app_init.c"
 22226 ;; Parameters:    Size  Location     Type
 22227 ;;		None
 22228 ;; Auto vars:     Size  Location     Type
 22229 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 22230 ;; Return value:  Size  Location     Type
 22231 ;;                  1    wreg      unsigned char 
 22232 ;; Registers used:
 22233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22234 ;; Tracked objects:
 22235 ;;		On entry : 0/0
 22236 ;;		On exit  : 0/0
 22237 ;;		Unchanged: 0/0
 22238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22240 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22242 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22243 ;;Total ram usage:        1 bytes
 22244 ;; Hardware stack levels used:    1
 22245 ;; Hardware stack levels required when called:   18
 22246 ;; This function calls:
 22247 ;;		_initEeprom
 22248 ;;		_initGprsModem
 22249 ;; This function is called by:
 22250 ;;		_MyApp_Task
 22251 ;; This function uses a non-reentrant model
 22252 ;;
 22253                           
 22254                           	psect	text101
 22255  005C54                     __ptext101:
 22256                           	opt stack 0
 22257  005C54                     _initFsm:
 22258                           	opt stack 9
 22259                           
 22260                           ;app_init.c: 179: static initFsmStates currentState = INIT_FSM_MODEM;
 22261                           ;app_init.c: 180: bool isInitialized = 0;
 22262                           
 22263                           ; BSR set to: 0
 22264                           ;incstack = 0
 22265  005C54  0E00               	movlw	0
 22266  005C56  0101               	movlb	1	; () banked
 22267  005C58  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22268                           
 22269                           ;app_init.c: 182: switch (currentState)
 22270  005C5A  D013               	goto	l2693
 22271  005C5C                     
 22272                           ; BSR set to: 1
 22273                           ;app_init.c: 185: if (initGprsModem())
 22274                           
 22275                           ; BSR set to: 1
 22276  005C5C  ECEB  F025         	call	_initGprsModem	;wreg free
 22277  005C60  0900               	iorlw	0
 22278  005C62  B4D8               	btfsc	status,2,c
 22279  005C64  D018               	goto	l2696
 22280                           
 22281                           ;app_init.c: 186: {
 22282                           ;app_init.c: 187: currentState = INIT_FSM_EEPROM;
 22283  005C66  0E01               	movlw	1
 22284  005C68  D006               	goto	L24
 22285  005C6A                     
 22286                           ; BSR set to: 1
 22287                           ;app_init.c: 192: if (initEeprom())
 22288                           
 22289                           ; BSR set to: 1
 22290  005C6A  EC4D  F027         	call	_initEeprom	;wreg free
 22291  005C6E  0900               	iorlw	0
 22292  005C70  B4D8               	btfsc	status,2,c
 22293  005C72  D011               	goto	l2696
 22294                           
 22295                           ;app_init.c: 193: {
 22296                           ;app_init.c: 194: currentState = INIT_FSM_COMPLETE;
 22297  005C74  0E02               	movlw	2
 22298  005C76                     L24:
 22299  005C76  0101               	movlb	1	; () banked
 22300  005C78  6FD3               	movwf	initFsm@currentState& (0+255),b
 22301                           
 22302                           ; BSR set to: 1
 22303                           ;app_init.c: 195: }
 22304                           ;app_init.c: 196: break;
 22305  005C7A  D00D               	goto	l2696
 22306  005C7C                     
 22307                           ; BSR set to: 1
 22308                           ;app_init.c: 199: isInitialized = 1;
 22309                           
 22310                           ; BSR set to: 1
 22311  005C7C  0E01               	movlw	1
 22312  005C7E  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22313                           
 22314                           ; BSR set to: 1
 22315                           ;app_init.c: 204: }
 22316                           
 22317                           ; BSR set to: 1
 22318                           ;app_init.c: 203: break;
 22319                           
 22320                           ;app_init.c: 202: default:
 22321                           
 22322                           ;app_init.c: 200: break;
 22323  005C80  D00A               	goto	l2696
 22324  005C82                     l2693:
 22325                           
 22326                           ; BSR set to: 1
 22327                           
 22328                           ; BSR set to: 1
 22329  005C82  51D3               	movf	initFsm@currentState& (0+255),w,b
 22330                           
 22331                           ; Switch size 1, requested type "space"
 22332                           ; Number of cases is 3, Range of values is 0 to 2
 22333                           ; switch strategies available:
 22334                           ; Name         Instructions Cycles
 22335                           ; simple_byte           10     6 (average)
 22336                           ;	Chosen strategy is simple_byte
 22337  005C84  0A00               	xorlw	0	; case 0
 22338  005C86  B4D8               	btfsc	status,2,c
 22339  005C88  D7E9               	goto	l2694
 22340  005C8A  0A01               	xorlw	1	; case 1
 22341  005C8C  B4D8               	btfsc	status,2,c
 22342  005C8E  D7ED               	goto	l2697
 22343  005C90  0A03               	xorlw	3	; case 2
 22344  005C92  B4D8               	btfsc	status,2,c
 22345  005C94  D7F3               	goto	l2699
 22346  005C96                     l2696:
 22347                           
 22348                           ;app_init.c: 205: return isInitialized;
 22349                           
 22350                           ; BSR set to: 1
 22351  005C96  0101               	movlb	1	; () banked
 22352  005C98  5103               	movf	initFsm@isInitialized& (0+255),w,b
 22353  005C9A  0012               	return	
 22354  005C9C                     __end_of_initFsm:
 22355                           	opt stack 0
 22356                           tosu	equ	0xFFF
 22357                           tosh	equ	0xFFE
 22358                           tosl	equ	0xFFD
 22359                           pclath	equ	0xFFA
 22360                           tblptru	equ	0xFF8
 22361                           tblptrh	equ	0xFF7
 22362                           tblptrl	equ	0xFF6
 22363                           tablat	equ	0xFF5
 22364                           prodh	equ	0xFF4
 22365                           prodl	equ	0xFF3
 22366                           intcon	equ	0xFF2
 22367                           intcon2	equ	0xFF1
 22368                           intcon3	equ	0xFF0
 22369                           indf0	equ	0xFEF
 22370                           postinc0	equ	0xFEE
 22371                           plusw0	equ	0xFEB
 22372                           fsr0h	equ	0xFEA
 22373                           fsr0l	equ	0xFE9
 22374                           wreg	equ	0xFE8
 22375                           indf1	equ	0xFE7
 22376                           postinc1	equ	0xFE6
 22377                           postdec1	equ	0xFE5
 22378                           fsr1h	equ	0xFE2
 22379                           fsr1l	equ	0xFE1
 22380                           indf2	equ	0xFDF
 22381                           postinc2	equ	0xFDE
 22382                           postdec2	equ	0xFDD
 22383                           plusw2	equ	0xFDB
 22384                           fsr2h	equ	0xFDA
 22385                           fsr2l	equ	0xFD9
 22386                           status	equ	0xFD8
 22387                           
 22388 ;; *************** function _initGprsModem *****************
 22389 ;; Defined at:
 22390 ;;		line 84 in file "../Source/c/04_App/app_init.c"
 22391 ;; Parameters:    Size  Location     Type
 22392 ;;		None
 22393 ;; Auto vars:     Size  Location     Type
 22394 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 22395 ;; Return value:  Size  Location     Type
 22396 ;;                  1    wreg      unsigned char 
 22397 ;; Registers used:
 22398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22399 ;; Tracked objects:
 22400 ;;		On entry : 0/0
 22401 ;;		On exit  : 0/0
 22402 ;;		Unchanged: 0/0
 22403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22408 ;;Total ram usage:        1 bytes
 22409 ;; Hardware stack levels used:    1
 22410 ;; Hardware stack levels required when called:   14
 22411 ;; This function calls:
 22412 ;;		_Mdm_SetSmsFormat
 22413 ;;		_Uart_WriteConstString
 22414 ;;		_secondsAppTimer
 22415 ;; This function is called by:
 22416 ;;		_initFsm
 22417 ;; This function uses a non-reentrant model
 22418 ;;
 22419                           
 22420                           	psect	text102
 22421  004BD6                     __ptext102:
 22422                           	opt stack 0
 22423  004BD6                     _initGprsModem:
 22424                           	opt stack 12
 22425                           
 22426                           ;app_init.c: 86: static uint16_t modemCounter = 0;
 22427                           ;app_init.c: 87: static modemStates currentState = MODEM_INIT;
 22428                           ;app_init.c: 88: bool isInitialized = 0;
 22429                           
 22430                           ; BSR set to: 1
 22431                           ;incstack = 0
 22432  004BD6  0E00               	movlw	0
 22433  004BD8  0100               	movlb	0	; () banked
 22434  004BDA  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22435                           
 22436                           ;app_init.c: 90: switch(currentState)
 22437  004BDC  D033               	goto	l2663
 22438  004BDE                     
 22439                           ;app_init.c: 93: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 22440                           
 22441                           ; BSR set to: 0
 22442  004BDE  0E03               	movlw	3
 22443  004BE0  0100               	movlb	0	; () banked
 22444  004BE2  19D1               	xorwf	_MdmStatus& (0+255),w,b
 22445  004BE4  B4D8               	btfsc	status,2,c
 22446  004BE6  D003               	goto	u13970
 22447                           
 22448                           ; BSR set to: 0
 22449  004BE8  05D1               	decf	_MdmStatus& (0+255),w,b
 22450  004BEA  A4D8               	btfss	status,2,c
 22451  004BEC  D039               	goto	l2669
 22452  004BEE                     u13970:
 22453                           
 22454                           ; BSR set to: 0
 22455                           ;app_init.c: 94: {
 22456                           ;app_init.c: 95: if (secondsAppTimer(5, &modemCounter, 0))
 22457                           
 22458                           ; BSR set to: 0
 22459  004BEE  0EB5               	movlw	low initGprsModem@modemCounter
 22460  004BF0  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 22461  004BF2  0E03               	movlw	high initGprsModem@modemCounter
 22462  004BF4  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 22463  004BF6  0E00               	movlw	0
 22464  004BF8  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 22465  004BFA  0E05               	movlw	5
 22466  004BFC  EC3D  F023         	call	_secondsAppTimer
 22467  004C00  0900               	iorlw	0
 22468  004C02  B4D8               	btfsc	status,2,c
 22469  004C04  D02D               	goto	l2669
 22470                           
 22471                           ;app_init.c: 96: {
 22472                           ;app_init.c: 97: Mdm_SetSmsFormat(1);
 22473  004C06  0E01               	movlw	1
 22474  004C08  EC1E  F02D         	call	_Mdm_SetSmsFormat
 22475                           
 22476                           ;app_init.c: 98: currentState = MODEM_DELETE_SMS;
 22477  004C0C  0E01               	movlw	1
 22478  004C0E  D013               	goto	L26
 22479  004C10                     
 22480                           ; BSR set to: 1
 22481                           ;app_init.c: 104: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 22482                           
 22483                           ; BSR set to: 1
 22484  004C10  0EFA               	movlw	low STR_31
 22485  004C12  0100               	movlb	0	; () banked
 22486  004C14  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22487  004C16  0EFE               	movlw	high STR_31
 22488  004C18  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22489  004C1A  0E01               	movlw	1
 22490  004C1C  EC1C  F02F         	call	_Uart_WriteConstString
 22491                           
 22492                           ;app_init.c: 105: currentState = MODEM_SET_CALLER_ID;
 22493  004C20  0E02               	movlw	2
 22494  004C22  D009               	goto	L26
 22495  004C24                     
 22496                           ; BSR set to: 1
 22497                           ;app_init.c: 109: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 22498                           
 22499                           ; BSR set to: 1
 22500  004C24  0EAA               	movlw	low STR_32
 22501  004C26  0100               	movlb	0	; () banked
 22502  004C28  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22503  004C2A  0EFF               	movlw	high STR_32
 22504  004C2C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22505  004C2E  0E01               	movlw	1
 22506  004C30  EC1C  F02F         	call	_Uart_WriteConstString
 22507                           
 22508                           ;app_init.c: 110: currentState = MODEM_INIT_COMPLETE;
 22509  004C34  0E03               	movlw	3
 22510  004C36                     L26:
 22511  004C36  0101               	movlb	1	; () banked
 22512  004C38  6FD5               	movwf	initGprsModem@currentState& (0+255),b
 22513                           
 22514                           ;app_init.c: 111: break;
 22515  004C3A  D012               	goto	l2669
 22516  004C3C                     
 22517                           ; BSR set to: 1
 22518                           ;app_init.c: 114: isInitialized = 1;
 22519                           
 22520                           ; BSR set to: 1
 22521  004C3C  0E01               	movlw	1
 22522  004C3E  0100               	movlb	0	; () banked
 22523  004C40  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22524                           
 22525                           ; BSR set to: 0
 22526                           ;app_init.c: 119: }
 22527                           
 22528                           ; BSR set to: 0
 22529                           ;app_init.c: 118: break;
 22530                           
 22531                           ;app_init.c: 117: default:
 22532                           
 22533                           ;app_init.c: 115: break;
 22534  004C42  D00E               	goto	l2669
 22535  004C44                     l2663:
 22536                           
 22537                           ; BSR set to: 0
 22538                           
 22539                           ; BSR set to: 0
 22540  004C44  0101               	movlb	1	; () banked
 22541  004C46  51D5               	movf	initGprsModem@currentState& (0+255),w,b
 22542                           
 22543                           ; Switch size 1, requested type "space"
 22544                           ; Number of cases is 4, Range of values is 0 to 3
 22545                           ; switch strategies available:
 22546                           ; Name         Instructions Cycles
 22547                           ; simple_byte           13     7 (average)
 22548                           ;	Chosen strategy is simple_byte
 22549  004C48  0A00               	xorlw	0	; case 0
 22550  004C4A  B4D8               	btfsc	status,2,c
 22551  004C4C  D7C8               	goto	l2664
 22552  004C4E  0A01               	xorlw	1	; case 1
 22553  004C50  B4D8               	btfsc	status,2,c
 22554  004C52  D7DE               	goto	l2670
 22555  004C54  0A03               	xorlw	3	; case 2
 22556  004C56  B4D8               	btfsc	status,2,c
 22557  004C58  D7E5               	goto	l2671
 22558  004C5A  0A01               	xorlw	1	; case 3
 22559  004C5C  B4D8               	btfsc	status,2,c
 22560  004C5E  D7EE               	goto	l2672
 22561  004C60                     l2669:
 22562                           
 22563                           ;app_init.c: 120: return isInitialized;
 22564                           
 22565                           ; BSR set to: 1
 22566  004C60  0100               	movlb	0	; () banked
 22567  004C62  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 22568  004C64  0012               	return	
 22569  004C66                     __end_of_initGprsModem:
 22570                           	opt stack 0
 22571                           tosu	equ	0xFFF
 22572                           tosh	equ	0xFFE
 22573                           tosl	equ	0xFFD
 22574                           pclath	equ	0xFFA
 22575                           tblptru	equ	0xFF8
 22576                           tblptrh	equ	0xFF7
 22577                           tblptrl	equ	0xFF6
 22578                           tablat	equ	0xFF5
 22579                           prodh	equ	0xFF4
 22580                           prodl	equ	0xFF3
 22581                           intcon	equ	0xFF2
 22582                           intcon2	equ	0xFF1
 22583                           intcon3	equ	0xFF0
 22584                           indf0	equ	0xFEF
 22585                           postinc0	equ	0xFEE
 22586                           plusw0	equ	0xFEB
 22587                           fsr0h	equ	0xFEA
 22588                           fsr0l	equ	0xFE9
 22589                           wreg	equ	0xFE8
 22590                           indf1	equ	0xFE7
 22591                           postinc1	equ	0xFE6
 22592                           postdec1	equ	0xFE5
 22593                           fsr1h	equ	0xFE2
 22594                           fsr1l	equ	0xFE1
 22595                           indf2	equ	0xFDF
 22596                           postinc2	equ	0xFDE
 22597                           postdec2	equ	0xFDD
 22598                           plusw2	equ	0xFDB
 22599                           fsr2h	equ	0xFDA
 22600                           fsr2l	equ	0xFD9
 22601                           status	equ	0xFD8
 22602                           
 22603 ;; *************** function _secondsAppTimer *****************
 22604 ;; Defined at:
 22605 ;;		line 66 in file "../Source/c/04_App/app_utils.c"
 22606 ;; Parameters:    Size  Location     Type
 22607 ;;  seconds         1    wreg     unsigned char 
 22608 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 22609 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 22610 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 22611 ;; Auto vars:     Size  Location     Type
 22612 ;;  seconds         1   47[BANK0 ] unsigned char 
 22613 ;;  destinationT    2   49[BANK0 ] unsigned int 
 22614 ;;  isExpired       1   48[BANK0 ] unsigned char 
 22615 ;; Return value:  Size  Location     Type
 22616 ;;                  1    wreg      unsigned char 
 22617 ;; Registers used:
 22618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22619 ;; Tracked objects:
 22620 ;;		On entry : 0/0
 22621 ;;		On exit  : 0/0
 22622 ;;		Unchanged: 0/0
 22623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22624 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22625 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22626 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22627 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22628 ;;Total ram usage:        9 bytes
 22629 ;; Hardware stack levels used:    1
 22630 ;; Hardware stack levels required when called:   12
 22631 ;; This function calls:
 22632 ;;		___lwdiv
 22633 ;;		___wmul
 22634 ;; This function is called by:
 22635 ;;		_initGprsModem
 22636 ;;		_waitSetupCall
 22637 ;;		_blinkForSeconds
 22638 ;; This function uses a non-reentrant model
 22639 ;;
 22640                           
 22641                           	psect	text103
 22642  00467A                     __ptext103:
 22643                           	opt stack 0
 22644  00467A                     _secondsAppTimer:
 22645                           	opt stack 14
 22646                           
 22647                           ; BSR set to: 0
 22648                           ;incstack = 0
 22649                           ;secondsAppTimer@seconds stored from wreg
 22650  00467A  0100               	movlb	0	; () banked
 22651  00467C  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 22652                           
 22653                           ;app_utils.c: 68: bool isExpired = 1;
 22654  00467E  0E01               	movlw	1
 22655  004680  0100               	movlb	0	; () banked
 22656  004682  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22657                           
 22658                           ; BSR set to: 0
 22659                           ;app_utils.c: 69: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 22660  004684  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 22661  004688  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 22662  00468A  0E03               	movlw	3
 22663  00468C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22664  00468E  0EE8               	movlw	232
 22665  004690  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 22666  004692  EC83  F031         	call	___wmul	;wreg free
 22667  004696  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 22668  00469A  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 22669  00469E  0E00               	movlw	0
 22670  0046A0  0100               	movlb	0	; () banked
 22671  0046A2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 22672  0046A4  0E64               	movlw	100
 22673  0046A6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 22674  0046A8  EC52  F02C         	call	___lwdiv	;wreg free
 22675  0046AC  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 22676  0046B0  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 22677                           
 22678                           ;app_utils.c: 71: if (*counter < destinationTicks)
 22679  0046B4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22680  0046B8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22681  0046BC  0100               	movlb	0	; () banked
 22682  0046BE  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22683  0046C0  5CDE               	subwf	postinc2,w,c
 22684  0046C2  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22685  0046C4  58DE               	subwfb	postinc2,w,c
 22686  0046C6  B0D8               	btfsc	status,0,c
 22687  0046C8  D009               	goto	l2715
 22688                           
 22689                           ; BSR set to: 0
 22690                           ;app_utils.c: 72: {
 22691                           ;app_utils.c: 73: *counter += 1;
 22692  0046CA  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22693  0046CE  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22694  0046D2  2ADE               	incf	postinc2,f,c
 22695  0046D4  0E00               	movlw	0
 22696  0046D6  22DD               	addwfc	postdec2,f,c
 22697                           
 22698                           ; BSR set to: 0
 22699                           ;app_utils.c: 74: isExpired = 0;
 22700  0046D8  0E00               	movlw	0
 22701  0046DA  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22702  0046DC                     l2715:
 22703                           
 22704                           ; BSR set to: 0
 22705                           ;app_utils.c: 75: }
 22706                           ;app_utils.c: 76: if (*counter == destinationTicks)
 22707                           
 22708                           ; BSR set to: 0
 22709  0046DC  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22710  0046E0  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22711  0046E4  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22712  0046E6  18DE               	xorwf	postinc2,w,c
 22713  0046E8  E117               	bnz	l13710
 22714  0046EA  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22715  0046EC  18DE               	xorwf	postinc2,w,c
 22716  0046EE  A4D8               	btfss	status,2,c
 22717  0046F0  D013               	goto	l2718
 22718                           
 22719                           ; BSR set to: 0
 22720                           ;app_utils.c: 77: {
 22721                           ;app_utils.c: 78: if (isCyclic)
 22722  0046F2  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 22723  0046F4  B4D8               	btfsc	status,2,c
 22724  0046F6  D008               	goto	l2717
 22725                           
 22726                           ; BSR set to: 0
 22727                           ;app_utils.c: 79: {
 22728                           ;app_utils.c: 80: *counter = 0;
 22729  0046F8  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22730  0046FC  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22731  004700  0E00               	movlw	0
 22732  004702  6EDE               	movwf	postinc2,c
 22733  004704  0E00               	movlw	0
 22734  004706  D007               	goto	L27
 22735  004708                     l2717:
 22736                           
 22737                           ; BSR set to: 0
 22738                           ;app_utils.c: 82: else
 22739                           ;app_utils.c: 83: {
 22740                           ;app_utils.c: 84: *counter = 0xFFFF;
 22741                           
 22742                           ; BSR set to: 0
 22743  004708  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22744  00470C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22745  004710  0EFF               	movlw	255
 22746  004712  6EDE               	movwf	postinc2,c
 22747  004714  0EFF               	movlw	255
 22748  004716                     L27:
 22749  004716  6EDD               	movwf	postdec2,c
 22750  004718                     l2718:
 22751  004718                     l13710:
 22752                           
 22753                           ; BSR set to: 0
 22754                           ;app_utils.c: 85: }
 22755                           ;app_utils.c: 86: }
 22756                           ;app_utils.c: 87: return isExpired;
 22757  004718  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 22758  00471A  0012               	return	
 22759  00471C                     __end_of_secondsAppTimer:
 22760                           	opt stack 0
 22761                           tosu	equ	0xFFF
 22762                           tosh	equ	0xFFE
 22763                           tosl	equ	0xFFD
 22764                           pclath	equ	0xFFA
 22765                           tblptru	equ	0xFF8
 22766                           tblptrh	equ	0xFF7
 22767                           tblptrl	equ	0xFF6
 22768                           tablat	equ	0xFF5
 22769                           prodh	equ	0xFF4
 22770                           prodl	equ	0xFF3
 22771                           intcon	equ	0xFF2
 22772                           intcon2	equ	0xFF1
 22773                           intcon3	equ	0xFF0
 22774                           indf0	equ	0xFEF
 22775                           postinc0	equ	0xFEE
 22776                           plusw0	equ	0xFEB
 22777                           fsr0h	equ	0xFEA
 22778                           fsr0l	equ	0xFE9
 22779                           wreg	equ	0xFE8
 22780                           indf1	equ	0xFE7
 22781                           postinc1	equ	0xFE6
 22782                           postdec1	equ	0xFE5
 22783                           fsr1h	equ	0xFE2
 22784                           fsr1l	equ	0xFE1
 22785                           indf2	equ	0xFDF
 22786                           postinc2	equ	0xFDE
 22787                           postdec2	equ	0xFDD
 22788                           plusw2	equ	0xFDB
 22789                           fsr2h	equ	0xFDA
 22790                           fsr2l	equ	0xFD9
 22791                           status	equ	0xFD8
 22792                           
 22793 ;; *************** function _Mdm_SetSmsFormat *****************
 22794 ;; Defined at:
 22795 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22796 ;; Parameters:    Size  Location     Type
 22797 ;;  TextFormat      1    wreg     unsigned char 
 22798 ;; Auto vars:     Size  Location     Type
 22799 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 22800 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 22801 ;;  Index           1   35[BANK0 ] unsigned char 
 22802 ;; Return value:  Size  Location     Type
 22803 ;;                  1    wreg      void 
 22804 ;; Registers used:
 22805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22806 ;; Tracked objects:
 22807 ;;		On entry : 0/0
 22808 ;;		On exit  : 0/0
 22809 ;;		Unchanged: 0/0
 22810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22812 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22814 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22815 ;;Total ram usage:       22 bytes
 22816 ;; Hardware stack levels used:    1
 22817 ;; Hardware stack levels required when called:   13
 22818 ;; This function calls:
 22819 ;;		_Uart_WriteString
 22820 ;; This function is called by:
 22821 ;;		_initGprsModem
 22822 ;; This function uses a non-reentrant model
 22823 ;;
 22824                           
 22825                           	psect	text104
 22826  005A3C                     __ptext104:
 22827                           	opt stack 0
 22828  005A3C                     _Mdm_SetSmsFormat:
 22829                           	opt stack 12
 22830                           
 22831                           ; BSR set to: 0
 22832                           ;incstack = 0
 22833                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 22834  005A3C  0100               	movlb	0	; () banked
 22835  005A3E  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 22836                           
 22837                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 22838                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 22839  005A40  0E00               	movlw	0
 22840  005A42  0100               	movlb	0	; () banked
 22841  005A44  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 22842                           
 22843                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 22844  005A46  0E41               	movlw	65
 22845  005A48  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 22846                           
 22847                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 22848  005A4A  0E54               	movlw	84
 22849  005A4C  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 22850                           
 22851                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 22852  005A4E  0E2B               	movlw	43
 22853  005A50  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 22854                           
 22855                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 22856  005A52  0E43               	movlw	67
 22857  005A54  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 22858                           
 22859                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22860  005A56  0E4D               	movlw	77
 22861  005A58  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22862                           
 22863                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22864  005A5A  0E47               	movlw	71
 22865  005A5C  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22866                           
 22867                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22868  005A5E  0E46               	movlw	70
 22869  005A60  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22870                           
 22871                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22872  005A62  0E3D               	movlw	61
 22873  005A64  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22874                           
 22875                           ; BSR set to: 0
 22876                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22877  005A66  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22878  005A68  A4D8               	btfss	status,2,c
 22879  005A6A  D002               	goto	l1121
 22880                           
 22881                           ; BSR set to: 0
 22882                           ;mdm_gsm_gprs.c: 854: {
 22883                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22884  005A6C  0E31               	movlw	49
 22885  005A6E  D001               	goto	L28
 22886  005A70                     l1121:
 22887                           
 22888                           ; BSR set to: 0
 22889                           ;mdm_gsm_gprs.c: 857: else
 22890                           ;mdm_gsm_gprs.c: 858: {
 22891                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22892                           
 22893                           ; BSR set to: 0
 22894  005A70  0E30               	movlw	48
 22895  005A72                     L28:
 22896  005A72  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22897                           
 22898                           ; BSR set to: 0
 22899                           ;mdm_gsm_gprs.c: 860: }
 22900                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22901  005A74  0E0D               	movlw	13
 22902  005A76  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22903                           
 22904                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22905  005A78  0E00               	movlw	0
 22906  005A7A  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22907                           
 22908                           ; BSR set to: 0
 22909                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22910  005A7C  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22911  005A7E  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22912  005A80  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22913  005A82  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22914  005A84  0E01               	movlw	1
 22915  005A86  ECBC  F02F         	call	_Uart_WriteString
 22916  005A8A  0012               	return		;funcret
 22917  005A8C                     __end_of_Mdm_SetSmsFormat:
 22918                           	opt stack 0
 22919                           tosu	equ	0xFFF
 22920                           tosh	equ	0xFFE
 22921                           tosl	equ	0xFFD
 22922                           pclath	equ	0xFFA
 22923                           tblptru	equ	0xFF8
 22924                           tblptrh	equ	0xFF7
 22925                           tblptrl	equ	0xFF6
 22926                           tablat	equ	0xFF5
 22927                           prodh	equ	0xFF4
 22928                           prodl	equ	0xFF3
 22929                           intcon	equ	0xFF2
 22930                           intcon2	equ	0xFF1
 22931                           intcon3	equ	0xFF0
 22932                           indf0	equ	0xFEF
 22933                           postinc0	equ	0xFEE
 22934                           plusw0	equ	0xFEB
 22935                           fsr0h	equ	0xFEA
 22936                           fsr0l	equ	0xFE9
 22937                           wreg	equ	0xFE8
 22938                           indf1	equ	0xFE7
 22939                           postinc1	equ	0xFE6
 22940                           postdec1	equ	0xFE5
 22941                           fsr1h	equ	0xFE2
 22942                           fsr1l	equ	0xFE1
 22943                           indf2	equ	0xFDF
 22944                           postinc2	equ	0xFDE
 22945                           postdec2	equ	0xFDD
 22946                           plusw2	equ	0xFDB
 22947                           fsr2h	equ	0xFDA
 22948                           fsr2l	equ	0xFD9
 22949                           status	equ	0xFD8
 22950                           
 22951 ;; *************** function _initEeprom *****************
 22952 ;; Defined at:
 22953 ;;		line 127 in file "../Source/c/04_App/app_init.c"
 22954 ;; Parameters:    Size  Location     Type
 22955 ;;		None
 22956 ;; Auto vars:     Size  Location     Type
 22957 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22958 ;;  memoryOpResu    1    1[BANK1 ] enum E8244
 22959 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22960 ;; Return value:  Size  Location     Type
 22961 ;;                  1    wreg      unsigned char 
 22962 ;; Registers used:
 22963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22964 ;; Tracked objects:
 22965 ;;		On entry : 0/0
 22966 ;;		On exit  : 0/0
 22967 ;;		Unchanged: 0/0
 22968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22970 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22972 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22973 ;;Total ram usage:        3 bytes
 22974 ;; Hardware stack levels used:    1
 22975 ;; Hardware stack levels required when called:   17
 22976 ;; This function calls:
 22977 ;;		_Eeprom_Read
 22978 ;; This function is called by:
 22979 ;;		_initFsm
 22980 ;; This function uses a non-reentrant model
 22981 ;;
 22982                           
 22983                           	psect	text105
 22984  004E9A                     __ptext105:
 22985                           	opt stack 0
 22986  004E9A                     _initEeprom:
 22987                           	opt stack 9
 22988                           
 22989                           ;app_init.c: 129: const uint8_t addressToRead = 0;
 22990                           
 22991                           ;incstack = 0
 22992  004E9A  0E00               	movlw	0
 22993  004E9C  0101               	movlb	1	; () banked
 22994  004E9E  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22995                           
 22996                           ;app_init.c: 130: static eepromStates currentState = EEPROM_INIT;
 22997                           ;app_init.c: 131: EepromStsType memoryOpResult = OP_PENDING;
 22998  004EA0  0E02               	movlw	2
 22999  004EA2  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 23000                           
 23001                           ;app_init.c: 132: bool isInitialized = 0;
 23002  004EA4  0E00               	movlw	0
 23003  004EA6  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23004                           
 23005                           ;app_init.c: 134: switch (currentState)
 23006  004EA8  D031               	goto	l2679
 23007  004EAA                     
 23008                           ; BSR set to: 1
 23009                           ;app_init.c: 137: memoryOpResult = Eeprom_Read(0, memoryPreamble, 5);
 23010                           
 23011                           ; BSR set to: 1
 23012  004EAA  0E94               	movlw	low _memoryPreamble
 23013  004EAC  0100               	movlb	0	; () banked
 23014  004EAE  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 23015  004EB0  0E03               	movlw	high _memoryPreamble
 23016  004EB2  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 23017  004EB4  0E05               	movlw	5
 23018  004EB6  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 23019  004EB8  0E00               	movlw	0
 23020  004EBA  ECFE  F02B         	call	_Eeprom_Read
 23021  004EBE  0101               	movlb	1	; () banked
 23022  004EC0  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 23023                           
 23024                           ; BSR set to: 1
 23025                           ;app_init.c: 138: if (memoryOpResult != OP_PENDING)
 23026  004EC2  0E02               	movlw	2
 23027  004EC4  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 23028  004EC6  B4D8               	btfsc	status,2,c
 23029  004EC8  D02B               	goto	l2684
 23030                           
 23031                           ; BSR set to: 1
 23032                           ;app_init.c: 139: {
 23033                           ;app_init.c: 140: if (memoryPreamble[0] == 'U' &&
 23034                           ;app_init.c: 141: memoryPreamble[1] == 'S' &&
 23035                           ;app_init.c: 142: memoryPreamble[2] == 'I' &&
 23036                           ;app_init.c: 143: memoryPreamble[3] == 'M')
 23037  004ECA  0E55               	movlw	85
 23038  004ECC  0103               	movlb	3	; () banked
 23039  004ECE  1994               	xorwf	_memoryPreamble& (0+255),w,b
 23040  004ED0  A4D8               	btfss	status,2,c
 23041  004ED2  D00E               	goto	l2682
 23042                           
 23043                           ; BSR set to: 3
 23044  004ED4  0E53               	movlw	83
 23045  004ED6  1995               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 23046  004ED8  A4D8               	btfss	status,2,c
 23047  004EDA  D00A               	goto	l2682
 23048                           
 23049                           ; BSR set to: 3
 23050  004EDC  0E49               	movlw	73
 23051  004EDE  1996               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 23052  004EE0  A4D8               	btfss	status,2,c
 23053  004EE2  D006               	goto	l2682
 23054                           
 23055                           ; BSR set to: 3
 23056  004EE4  0E4D               	movlw	77
 23057  004EE6  1997               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 23058  004EE8  A4D8               	btfss	status,2,c
 23059  004EEA  D002               	goto	l2682
 23060                           
 23061                           ; BSR set to: 3
 23062                           ;app_init.c: 144: {
 23063                           ;app_init.c: 145: currentState = EEPROM_NOT_EMPTY;
 23064  004EEC  0E02               	movlw	2
 23065  004EEE  D003               	goto	L29
 23066  004EF0                     l2682:
 23067                           
 23068                           ; BSR set to: 3
 23069                           ;app_init.c: 147: else
 23070                           ;app_init.c: 148: {
 23071                           ;app_init.c: 149: memorizedNumbersCount[0] = memoryPreamble[4];
 23072  004EF0  C398  F038         	movff	_memoryPreamble+4,_memorizedNumbersCount
 23073                           
 23074                           ; BSR set to: 3
 23075                           ;app_init.c: 150: currentState = EEPROM_EMPTY;
 23076  004EF4  0E01               	movlw	1
 23077  004EF6                     L29:
 23078  004EF6  0101               	movlb	1	; () banked
 23079  004EF8  6FD4               	movwf	initEeprom@currentState& (0+255),b
 23080                           
 23081                           ; BSR set to: 1
 23082                           ;app_init.c: 151: }
 23083                           ;app_init.c: 152: }
 23084                           ;app_init.c: 153: break;
 23085                           
 23086                           ; BSR set to: 1
 23087  004EFA  D012               	goto	l2684
 23088  004EFC                     
 23089                           ; BSR set to: 1
 23090                           ;app_init.c: 156: isInitialized = 1;
 23091                           
 23092                           ; BSR set to: 1
 23093  004EFC  0E01               	movlw	1
 23094  004EFE  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23095                           
 23096                           ;app_init.c: 157: break;
 23097  004F00  D00F               	goto	l2684
 23098  004F02                     
 23099                           ; BSR set to: 1
 23100                           ;app_init.c: 160: isInitialized = 1;
 23101                           
 23102                           ; BSR set to: 1
 23103  004F02  0E01               	movlw	1
 23104  004F04  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23105                           
 23106                           ;app_init.c: 161: isMemoryEmpty = 0;
 23107  004F06  0E00               	movlw	0
 23108  004F08  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 23109                           
 23110                           ; BSR set to: 1
 23111                           ;app_init.c: 166: }
 23112                           
 23113                           ; BSR set to: 1
 23114                           ;app_init.c: 165: break;
 23115                           
 23116                           ;app_init.c: 164: default:
 23117                           
 23118                           ;app_init.c: 162: break;
 23119  004F0A  D00A               	goto	l2684
 23120  004F0C                     l2679:
 23121                           
 23122                           ; BSR set to: 1
 23123                           
 23124                           ; BSR set to: 1
 23125  004F0C  51D4               	movf	initEeprom@currentState& (0+255),w,b
 23126                           
 23127                           ; Switch size 1, requested type "space"
 23128                           ; Number of cases is 3, Range of values is 0 to 2
 23129                           ; switch strategies available:
 23130                           ; Name         Instructions Cycles
 23131                           ; simple_byte           10     6 (average)
 23132                           ;	Chosen strategy is simple_byte
 23133  004F0E  0A00               	xorlw	0	; case 0
 23134  004F10  B4D8               	btfsc	status,2,c
 23135  004F12  D7CB               	goto	l2680
 23136  004F14  0A01               	xorlw	1	; case 1
 23137  004F16  B4D8               	btfsc	status,2,c
 23138  004F18  D7F1               	goto	l2685
 23139  004F1A  0A03               	xorlw	3	; case 2
 23140  004F1C  B4D8               	btfsc	status,2,c
 23141  004F1E  D7F1               	goto	l2686
 23142  004F20                     l2684:
 23143                           
 23144                           ; BSR set to: 1
 23145                           ;app_init.c: 167: return isInitialized;
 23146                           
 23147                           ; BSR set to: 1
 23148  004F20  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 23149  004F22  0012               	return	
 23150  004F24                     __end_of_initEeprom:
 23151                           	opt stack 0
 23152                           tosu	equ	0xFFF
 23153                           tosh	equ	0xFFE
 23154                           tosl	equ	0xFFD
 23155                           pclath	equ	0xFFA
 23156                           tblptru	equ	0xFF8
 23157                           tblptrh	equ	0xFF7
 23158                           tblptrl	equ	0xFF6
 23159                           tablat	equ	0xFF5
 23160                           prodh	equ	0xFF4
 23161                           prodl	equ	0xFF3
 23162                           intcon	equ	0xFF2
 23163                           intcon2	equ	0xFF1
 23164                           intcon3	equ	0xFF0
 23165                           indf0	equ	0xFEF
 23166                           postinc0	equ	0xFEE
 23167                           plusw0	equ	0xFEB
 23168                           fsr0h	equ	0xFEA
 23169                           fsr0l	equ	0xFE9
 23170                           wreg	equ	0xFE8
 23171                           indf1	equ	0xFE7
 23172                           postinc1	equ	0xFE6
 23173                           postdec1	equ	0xFE5
 23174                           fsr1h	equ	0xFE2
 23175                           fsr1l	equ	0xFE1
 23176                           indf2	equ	0xFDF
 23177                           postinc2	equ	0xFDE
 23178                           postdec2	equ	0xFDD
 23179                           plusw2	equ	0xFDB
 23180                           fsr2h	equ	0xFDA
 23181                           fsr2l	equ	0xFD9
 23182                           status	equ	0xFD8
 23183                           
 23184 ;; *************** function _Eeprom_Read *****************
 23185 ;; Defined at:
 23186 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 23187 ;; Parameters:    Size  Location     Type
 23188 ;;  MemoryAddres    1    wreg     unsigned char 
 23189 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 23190 ;;		 -> isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23191 ;;  DataLength      1   75[BANK0 ] unsigned char 
 23192 ;; Auto vars:     Size  Location     Type
 23193 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 23194 ;;  QuerySts        1   79[BANK0 ] enum E8930
 23195 ;;  ReadSts         1   78[BANK0 ] enum E8956
 23196 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 23197 ;; Return value:  Size  Location     Type
 23198 ;;                  1    wreg      enum E8956
 23199 ;; Registers used:
 23200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23201 ;; Tracked objects:
 23202 ;;		On entry : 0/0
 23203 ;;		On exit  : 0/0
 23204 ;;		Unchanged: 0/0
 23205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23206 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23207 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23209 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23210 ;;Total ram usage:        7 bytes
 23211 ;; Hardware stack levels used:    1
 23212 ;; Hardware stack levels required when called:   16
 23213 ;; This function calls:
 23214 ;;		_I2cSlv_QueryI2cData
 23215 ;; This function is called by:
 23216 ;;		_initEeprom
 23217 ;;		_isNumberInMemory
 23218 ;; This function uses a non-reentrant model
 23219 ;;
 23220                           
 23221                           	psect	text106
 23222  0057FC                     __ptext106:
 23223                           	opt stack 0
 23224  0057FC                     _Eeprom_Read:
 23225                           	opt stack 10
 23226                           
 23227                           ; BSR set to: 1
 23228                           ;incstack = 0
 23229                           ;Eeprom_Read@MemoryAddress stored from wreg
 23230  0057FC  0100               	movlb	0	; () banked
 23231  0057FE  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 23232                           
 23233                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 23234  005800  0E50               	movlw	80
 23235  005802  0100               	movlb	0	; () banked
 23236  005804  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 23237                           
 23238                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 23239  005806  0E00               	movlw	0
 23240  005808  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23241                           
 23242                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 23243  00580A  0E02               	movlw	2
 23244  00580C  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23245                           
 23246                           ; BSR set to: 0
 23247                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 23248  00580E  C0AC  F1FC         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 23249                           
 23250                           ; BSR set to: 0
 23251                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 23252  005812  0EFC               	movlw	low _ReadAddress
 23253  005814  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 23254  005816  0E01               	movlw	high _ReadAddress
 23255  005818  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 23256  00581A  0E01               	movlw	1
 23257  00581C  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 23258  00581E  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 23259  005822  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 23260  005826  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 23261  00582A  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 23262  00582E  ECEA  F01C         	call	_I2cSlv_QueryI2cData	;wreg free
 23263  005832  0100               	movlb	0	; () banked
 23264  005834  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23265                           
 23266                           ; BSR set to: 0
 23267                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 23268  005836  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 23269  005838  A4D8               	btfss	status,2,c
 23270  00583A  D002               	goto	l2032
 23271                           
 23272                           ; BSR set to: 0
 23273                           ;eeprom_if.c: 114: {
 23274                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 23275  00583C  0E00               	movlw	0
 23276  00583E  D005               	goto	L30
 23277  005840                     l2032:
 23278                           
 23279                           ; BSR set to: 0
 23280                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 23281                           
 23282                           ; BSR set to: 0
 23283  005840  0E02               	movlw	2
 23284  005842  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 23285  005844  A4D8               	btfss	status,2,c
 23286  005846  D002               	goto	l2034
 23287                           
 23288                           ; BSR set to: 0
 23289                           ;eeprom_if.c: 118: {
 23290                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 23291  005848  0E01               	movlw	1
 23292  00584A                     L30:
 23293  00584A  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23294  00584C                     l2034:
 23295                           
 23296                           ; BSR set to: 0
 23297                           ;eeprom_if.c: 120: }
 23298                           ;eeprom_if.c: 121: return ReadSts;
 23299                           
 23300                           ; BSR set to: 0
 23301  00584C  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 23302  00584E  0012               	return	
 23303  005850                     __end_of_Eeprom_Read:
 23304                           	opt stack 0
 23305                           tosu	equ	0xFFF
 23306                           tosh	equ	0xFFE
 23307                           tosl	equ	0xFFD
 23308                           pclath	equ	0xFFA
 23309                           tblptru	equ	0xFF8
 23310                           tblptrh	equ	0xFF7
 23311                           tblptrl	equ	0xFF6
 23312                           tablat	equ	0xFF5
 23313                           prodh	equ	0xFF4
 23314                           prodl	equ	0xFF3
 23315                           intcon	equ	0xFF2
 23316                           intcon2	equ	0xFF1
 23317                           intcon3	equ	0xFF0
 23318                           indf0	equ	0xFEF
 23319                           postinc0	equ	0xFEE
 23320                           plusw0	equ	0xFEB
 23321                           fsr0h	equ	0xFEA
 23322                           fsr0l	equ	0xFE9
 23323                           wreg	equ	0xFE8
 23324                           indf1	equ	0xFE7
 23325                           postinc1	equ	0xFE6
 23326                           postdec1	equ	0xFE5
 23327                           fsr1h	equ	0xFE2
 23328                           fsr1l	equ	0xFE1
 23329                           indf2	equ	0xFDF
 23330                           postinc2	equ	0xFDE
 23331                           postdec2	equ	0xFDD
 23332                           plusw2	equ	0xFDB
 23333                           fsr2h	equ	0xFDA
 23334                           fsr2l	equ	0xFD9
 23335                           status	equ	0xFD8
 23336                           
 23337 ;; *************** function _I2cSlv_QueryI2cData *****************
 23338 ;; Defined at:
 23339 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 23340 ;; Parameters:    Size  Location     Type
 23341 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 23342 ;;		 -> ReadAddress(1), 
 23343 ;;  TxLen           1   68[BANK0 ] unsigned char 
 23344 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 23345 ;;		 -> isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23346 ;;  RxLen           1   71[BANK0 ] unsigned char 
 23347 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 23348 ;; Auto vars:     Size  Location     Type
 23349 ;;		None
 23350 ;; Return value:  Size  Location     Type
 23351 ;;                  1    wreg      enum E8943
 23352 ;; Registers used:
 23353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23354 ;; Tracked objects:
 23355 ;;		On entry : 0/0
 23356 ;;		On exit  : 0/0
 23357 ;;		Unchanged: 0/0
 23358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23359 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23362 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23363 ;;Total ram usage:        7 bytes
 23364 ;; Hardware stack levels used:    1
 23365 ;; Hardware stack levels required when called:   15
 23366 ;; This function calls:
 23367 ;;		_I2cSlv_I2cReadMsgSts
 23368 ;;		_I2cSlv_ReceiveI2cMsg
 23369 ;;		_I2cSlv_SendI2cMsg
 23370 ;;		_OsTmr_GetTimerStatus
 23371 ;;		_OsTmr_StartTimer
 23372 ;;		_OsTmr_Wait
 23373 ;; This function is called by:
 23374 ;;		_Eeprom_Read
 23375 ;; This function uses a non-reentrant model
 23376 ;;
 23377                           
 23378                           	psect	text107
 23379  0039D4                     __ptext107:
 23380                           	opt stack 0
 23381  0039D4                     _I2cSlv_QueryI2cData:
 23382                           	opt stack 10
 23383                           
 23384                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 23385                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 23386                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 23387                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 23388                           ;i2c_slv.c: 388: switch(I2cOpState)
 23389                           
 23390                           ; BSR set to: 0
 23391                           ;incstack = 0
 23392  0039D4  D05B               	goto	l1437
 23393  0039D6                     
 23394                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 23395  0039D6  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 23396  0039DA  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 23397  0039DE  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 23398  0039E2  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 23399  0039E6  EC9D  F02F         	call	_I2cSlv_SendI2cMsg	;wreg free
 23400                           
 23401                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 23402  0039EA  0E01               	movlw	1
 23403  0039EC  0101               	movlb	1	; () banked
 23404  0039EE  6FE6               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23405                           
 23406                           ; BSR set to: 1
 23407                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 23408  0039F0  0E00               	movlw	0
 23409  0039F2  D04A               	goto	L34
 23410  0039F4                     
 23411                           ; BSR set to: 1
 23412                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 23413                           
 23414                           ; BSR set to: 1
 23415  0039F4  0EE4               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 23416  0039F6  0100               	movlb	0	; () banked
 23417  0039F8  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 23418  0039FA  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 23419  0039FC  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 23420  0039FE  0EF4               	movlw	244
 23421  003A00  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 23422  003A02  0E01               	movlw	1
 23423  003A04  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 23424  003A06  0E00               	movlw	0
 23425  003A08  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 23426  003A0A  0E00               	movlw	0
 23427  003A0C  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 23428  003A0E  EC17  F028         	call	_OsTmr_Wait	;wreg free
 23429  003A12  06E8               	decf	wreg,f,c
 23430  003A14  A4D8               	btfss	status,2,c
 23431  003A16  D036               	goto	l1445
 23432                           
 23433                           ;i2c_slv.c: 402: {
 23434                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 23435  003A18  0E3D               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23436  003A1A  0100               	movlb	0	; () banked
 23437  003A1C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 23438  003A1E  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23439  003A20  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 23440  003A22  0EC4               	movlw	196
 23441  003A24  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 23442  003A26  0E09               	movlw	9
 23443  003A28  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 23444  003A2A  0E00               	movlw	0
 23445  003A2C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 23446  003A2E  0E00               	movlw	0
 23447  003A30  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 23448  003A32  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 23449                           
 23450                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 23451  003A36  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 23452  003A3A  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 23453  003A3E  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 23454  003A42  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 23455  003A46  EC3E  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 23456                           
 23457                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 23458  003A4A  0E02               	movlw	2
 23459  003A4C  0101               	movlb	1	; () banked
 23460  003A4E  6FE6               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23461  003A50  D019               	goto	l1445
 23462  003A52                     
 23463                           ; BSR set to: 1
 23464                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 23465                           
 23466                           ; BSR set to: 1
 23467  003A52  EC5A  F032         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 23468  003A56  06E8               	decf	wreg,f,c
 23469  003A58  A4D8               	btfss	status,2,c
 23470  003A5A  D005               	goto	l1443
 23471                           
 23472                           ;i2c_slv.c: 414: {
 23473                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 23474  003A5C  0E00               	movlw	0
 23475  003A5E  0101               	movlb	1	; () banked
 23476  003A60  6FE6               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23477                           
 23478                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 23479  003A62  0E01               	movlw	1
 23480  003A64  D011               	goto	L34
 23481  003A66                     l1443:
 23482                           
 23483                           ;i2c_slv.c: 420: else
 23484                           ;i2c_slv.c: 421: {
 23485                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 23486                           
 23487                           ; BSR set to: 1
 23488  003A66  0E3D               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23489  003A68  0100               	movlb	0	; () banked
 23490  003A6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23491  003A6C  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23492  003A6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23493  003A70  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 23494  003A74  06E8               	decf	wreg,f,c
 23495  003A76  A4D8               	btfss	status,2,c
 23496  003A78  D005               	goto	l1445
 23497                           
 23498                           ;i2c_slv.c: 423: {
 23499                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 23500  003A7A  0E00               	movlw	0
 23501  003A7C  0101               	movlb	1	; () banked
 23502  003A7E  6FE6               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23503                           
 23504                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 23505  003A80  0E02               	movlw	2
 23506  003A82  D002               	goto	L34
 23507  003A84                     l1445:
 23508                           
 23509                           ;i2c_slv.c: 429: else
 23510                           ;i2c_slv.c: 430: {
 23511                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 23512                           
 23513                           ; BSR set to: 1
 23514  003A84  0E00               	movlw	0
 23515  003A86  0101               	movlb	1	; () banked
 23516  003A88                     L34:
 23517  003A88  6FE5               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 23518                           
 23519                           ; BSR set to: 1
 23520                           ;i2c_slv.c: 439: }
 23521                           
 23522                           ; BSR set to: 1
 23523                           ;i2c_slv.c: 438: break;
 23524                           
 23525                           ;i2c_slv.c: 437: default:
 23526                           
 23527                           ; BSR set to: 1
 23528                           ;i2c_slv.c: 433: }
 23529                           ;i2c_slv.c: 434: }
 23530                           ;i2c_slv.c: 435: break;
 23531                           
 23532                           ; BSR set to: 1
 23533  003A8A  D00B               	goto	l1439
 23534  003A8C                     l1437:
 23535                           
 23536                           ; BSR set to: 1
 23537  003A8C  0101               	movlb	1	; () banked
 23538  003A8E  51E6               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 23539                           
 23540                           ; Switch size 1, requested type "space"
 23541                           ; Number of cases is 3, Range of values is 0 to 2
 23542                           ; switch strategies available:
 23543                           ; Name         Instructions Cycles
 23544                           ; simple_byte           10     6 (average)
 23545                           ;	Chosen strategy is simple_byte
 23546  003A90  0A00               	xorlw	0	; case 0
 23547  003A92  B4D8               	btfsc	status,2,c
 23548  003A94  D7A0               	goto	l1438
 23549  003A96  0A01               	xorlw	1	; case 1
 23550  003A98  B4D8               	btfsc	status,2,c
 23551  003A9A  D7AC               	goto	l1440
 23552  003A9C  0A03               	xorlw	3	; case 2
 23553  003A9E  B4D8               	btfsc	status,2,c
 23554  003AA0  D7D8               	goto	l1442
 23555  003AA2                     l1439:
 23556                           
 23557                           ; BSR set to: 1
 23558                           ;i2c_slv.c: 441: return Ret;
 23559                           
 23560                           ; BSR set to: 1
 23561  003AA2  51E5               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 23562  003AA4  0012               	return	
 23563  003AA6                     __end_of_I2cSlv_QueryI2cData:
 23564                           	opt stack 0
 23565                           tosu	equ	0xFFF
 23566                           tosh	equ	0xFFE
 23567                           tosl	equ	0xFFD
 23568                           pclath	equ	0xFFA
 23569                           tblptru	equ	0xFF8
 23570                           tblptrh	equ	0xFF7
 23571                           tblptrl	equ	0xFF6
 23572                           tablat	equ	0xFF5
 23573                           prodh	equ	0xFF4
 23574                           prodl	equ	0xFF3
 23575                           intcon	equ	0xFF2
 23576                           intcon2	equ	0xFF1
 23577                           intcon3	equ	0xFF0
 23578                           indf0	equ	0xFEF
 23579                           postinc0	equ	0xFEE
 23580                           plusw0	equ	0xFEB
 23581                           fsr0h	equ	0xFEA
 23582                           fsr0l	equ	0xFE9
 23583                           wreg	equ	0xFE8
 23584                           indf1	equ	0xFE7
 23585                           postinc1	equ	0xFE6
 23586                           postdec1	equ	0xFE5
 23587                           fsr1h	equ	0xFE2
 23588                           fsr1l	equ	0xFE1
 23589                           indf2	equ	0xFDF
 23590                           postinc2	equ	0xFDE
 23591                           postdec2	equ	0xFDD
 23592                           plusw2	equ	0xFDB
 23593                           fsr2h	equ	0xFDA
 23594                           fsr2l	equ	0xFD9
 23595                           status	equ	0xFD8
 23596                           
 23597 ;; *************** function _OsTmr_Wait *****************
 23598 ;; Defined at:
 23599 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 23600 ;; Parameters:    Size  Location     Type
 23601 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 23602 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 23603 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 23604 ;; Auto vars:     Size  Location     Type
 23605 ;;  Ret             1   65[BANK0 ] enum E7749
 23606 ;; Return value:  Size  Location     Type
 23607 ;;                  1    wreg      enum E7749
 23608 ;; Registers used:
 23609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23610 ;; Tracked objects:
 23611 ;;		On entry : 0/0
 23612 ;;		On exit  : 0/0
 23613 ;;		Unchanged: 0/0
 23614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23615 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23618 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23619 ;;Total ram usage:        7 bytes
 23620 ;; Hardware stack levels used:    1
 23621 ;; Hardware stack levels required when called:   14
 23622 ;; This function calls:
 23623 ;;		_OsTmr_GetTimerStatus
 23624 ;;		_OsTmr_StartTimer
 23625 ;; This function is called by:
 23626 ;;		_I2cSlv_QueryI2cData
 23627 ;;		_Terminal
 23628 ;; This function uses a non-reentrant model
 23629 ;;
 23630                           
 23631                           	psect	text108
 23632  00502E                     __ptext108:
 23633                           	opt stack 0
 23634  00502E                     _OsTmr_Wait:
 23635                           	opt stack 11
 23636                           
 23637                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 23638                           
 23639                           ; BSR set to: 1
 23640                           ;incstack = 0
 23641  00502E  0E00               	movlw	0
 23642  005030  0100               	movlb	0	; () banked
 23643  005032  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 23644                           
 23645                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 23646  005034  D02D               	goto	l855
 23647  005036                     
 23648                           ; BSR set to: 0
 23649                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 23650                           
 23651                           ; BSR set to: 0
 23652  005036  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 23653  00503A  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 23654  00503E  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 23655  005042  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 23656  005046  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 23657  00504A  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 23658  00504E  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 23659                           
 23660                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 23661  005052  0100               	movlb	0	; () banked
 23662  005054  EE20 F00A          	lfsr	2,10
 23663  005058  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 23664  00505A  26D9               	addwf	fsr2l,f,c
 23665  00505C  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 23666  00505E  22DA               	addwfc	fsr2h,f,c
 23667  005060  0E01               	movlw	1
 23668  005062  6EDF               	movwf	indf2,c
 23669                           
 23670                           ;os_timers.c: 165: break;
 23671  005064  D022               	goto	l857
 23672  005066                     
 23673                           ; BSR set to: 0
 23674                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 23675                           
 23676                           ; BSR set to: 0
 23677  005066  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 23678  00506A  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 23679  00506E  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 23680  005072  06E8               	decf	wreg,f,c
 23681  005074  A4D8               	btfss	status,2,c
 23682  005076  D019               	goto	l857
 23683                           
 23684                           ;os_timers.c: 170: {
 23685                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 23686  005078  0100               	movlb	0	; () banked
 23687  00507A  EE20 F00A          	lfsr	2,10
 23688  00507E  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 23689  005080  26D9               	addwf	fsr2l,f,c
 23690  005082  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 23691  005084  22DA               	addwfc	fsr2h,f,c
 23692  005086  0E00               	movlw	0
 23693  005088  6EDF               	movwf	indf2,c
 23694                           
 23695                           ; BSR set to: 0
 23696                           ;os_timers.c: 174: Ret = DelayExpired;
 23697  00508A  0E01               	movlw	1
 23698  00508C  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 23699                           
 23700                           ; BSR set to: 0
 23701                           ;os_timers.c: 180: }
 23702                           
 23703                           ; BSR set to: 0
 23704                           ;os_timers.c: 179: break;
 23705                           
 23706                           ;os_timers.c: 178: default:
 23707                           
 23708                           ; BSR set to: 0
 23709                           ;os_timers.c: 175: }
 23710                           ;os_timers.c: 176: break;
 23711  00508E  D00D               	goto	l857
 23712  005090                     l855:
 23713                           
 23714                           ; BSR set to: 0
 23715                           
 23716                           ; BSR set to: 0
 23717  005090  EE20 F00A          	lfsr	2,10
 23718  005094  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 23719  005096  26D9               	addwf	fsr2l,f,c
 23720  005098  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 23721  00509A  22DA               	addwfc	fsr2h,f,c
 23722  00509C  50DF               	movf	indf2,w,c
 23723                           
 23724                           ; Switch size 1, requested type "space"
 23725                           ; Number of cases is 2, Range of values is 0 to 1
 23726                           ; switch strategies available:
 23727                           ; Name         Instructions Cycles
 23728                           ; simple_byte            7     4 (average)
 23729                           ;	Chosen strategy is simple_byte
 23730  00509E  0A00               	xorlw	0	; case 0
 23731  0050A0  B4D8               	btfsc	status,2,c
 23732  0050A2  D7C9               	goto	l856
 23733  0050A4  0A01               	xorlw	1	; case 1
 23734  0050A6  B4D8               	btfsc	status,2,c
 23735  0050A8  D7DE               	goto	l858
 23736  0050AA                     l857:
 23737                           
 23738                           ;os_timers.c: 182: return Ret;
 23739                           
 23740                           ; BSR set to: 0
 23741  0050AA  0100               	movlb	0	; () banked
 23742  0050AC  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 23743  0050AE  0012               	return	
 23744  0050B0                     __end_of_OsTmr_Wait:
 23745                           	opt stack 0
 23746                           tosu	equ	0xFFF
 23747                           tosh	equ	0xFFE
 23748                           tosl	equ	0xFFD
 23749                           pclath	equ	0xFFA
 23750                           tblptru	equ	0xFF8
 23751                           tblptrh	equ	0xFF7
 23752                           tblptrl	equ	0xFF6
 23753                           tablat	equ	0xFF5
 23754                           prodh	equ	0xFF4
 23755                           prodl	equ	0xFF3
 23756                           intcon	equ	0xFF2
 23757                           intcon2	equ	0xFF1
 23758                           intcon3	equ	0xFF0
 23759                           indf0	equ	0xFEF
 23760                           postinc0	equ	0xFEE
 23761                           plusw0	equ	0xFEB
 23762                           fsr0h	equ	0xFEA
 23763                           fsr0l	equ	0xFE9
 23764                           wreg	equ	0xFE8
 23765                           indf1	equ	0xFE7
 23766                           postinc1	equ	0xFE6
 23767                           postdec1	equ	0xFE5
 23768                           fsr1h	equ	0xFE2
 23769                           fsr1l	equ	0xFE1
 23770                           indf2	equ	0xFDF
 23771                           postinc2	equ	0xFDE
 23772                           postdec2	equ	0xFDD
 23773                           plusw2	equ	0xFDB
 23774                           fsr2h	equ	0xFDA
 23775                           fsr2l	equ	0xFD9
 23776                           status	equ	0xFD8
 23777                           
 23778 ;; *************** function _I2cSlv_SendI2cMsg *****************
 23779 ;; Defined at:
 23780 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 23781 ;; Parameters:    Size  Location     Type
 23782 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 23783 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 23784 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 23785 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 23786 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 23787 ;; Auto vars:     Size  Location     Type
 23788 ;;  TxSts           1   36[BANK0 ] unsigned char 
 23789 ;; Return value:  Size  Location     Type
 23790 ;;                  1    wreg      unsigned char 
 23791 ;; Registers used:
 23792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23793 ;; Tracked objects:
 23794 ;;		On entry : 0/0
 23795 ;;		On exit  : 0/0
 23796 ;;		Unchanged: 0/0
 23797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23798 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23801 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23802 ;;Total ram usage:        5 bytes
 23803 ;; Hardware stack levels used:    1
 23804 ;; Hardware stack levels required when called:   12
 23805 ;; This function calls:
 23806 ;;		_GenerateEvt
 23807 ;; This function is called by:
 23808 ;;		_I2cSlv_QueryI2cData
 23809 ;;		_Eeprom_Write
 23810 ;;		_Terminal
 23811 ;;		_triggerRelay
 23812 ;; This function uses a non-reentrant model
 23813 ;;
 23814                           
 23815                           	psect	text109
 23816  005F3A                     __ptext109:
 23817                           	opt stack 0
 23818  005F3A                     _I2cSlv_SendI2cMsg:
 23819                           	opt stack 13
 23820                           
 23821                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 23822                           
 23823                           ; BSR set to: 0
 23824                           ;incstack = 0
 23825  005F3A  0E00               	movlw	0
 23826  005F3C  0100               	movlb	0	; () banked
 23827  005F3E  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 23828                           
 23829                           ; BSR set to: 0
 23830                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 23831  005F40  05CE               	decf	_I2cComSts& (0+255),w,b
 23832  005F42  B4D8               	btfsc	status,2,c
 23833  005F44  D015               	goto	l1409
 23834                           
 23835                           ; BSR set to: 0
 23836                           ;i2c_slv.c: 257: {
 23837                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 23838  005F46  C082  F399         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 23839                           
 23840                           ; BSR set to: 0
 23841                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 23842  005F4A  0E00               	movlw	0
 23843  005F4C  0103               	movlb	3	; () banked
 23844  005F4E  6F9A               	movwf	(_I2cTxPacket+1)& (0+255),b
 23845                           
 23846                           ; BSR set to: 3
 23847                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 23848  005F50  C083  F39D         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 23849                           
 23850                           ; BSR set to: 3
 23851                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 23852  005F54  C080  F39B         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 23853  005F58  C081  F39C         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 23854                           
 23855                           ; BSR set to: 3
 23856                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 23857  005F5C  0ED8               	movlw	low _I2cWriteDataEvt
 23858  005F5E  0100               	movlb	0	; () banked
 23859  005F60  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23860  005F62  0E00               	movlw	high _I2cWriteDataEvt
 23861  005F64  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23862  005F66  EC21  F033         	call	_GenerateEvt	;wreg free
 23863                           
 23864                           ;i2c_slv.c: 267: TxSts = 1u;
 23865  005F6A  0E01               	movlw	1
 23866  005F6C  0100               	movlb	0	; () banked
 23867  005F6E  D001               	goto	L35
 23868  005F70                     l1409:
 23869                           
 23870                           ; BSR set to: 0
 23871                           ;i2c_slv.c: 269: else
 23872                           ;i2c_slv.c: 270: {
 23873                           ;i2c_slv.c: 272: TxSts = 0u;
 23874                           
 23875                           ; BSR set to: 0
 23876  005F70  0E00               	movlw	0
 23877  005F72                     L35:
 23878  005F72  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 23879                           
 23880                           ; BSR set to: 0
 23881                           ;i2c_slv.c: 273: }
 23882                           ;i2c_slv.c: 275: return TxSts;
 23883  005F74  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 23884  005F76  0012               	return	
 23885  005F78                     __end_of_I2cSlv_SendI2cMsg:
 23886                           	opt stack 0
 23887                           tosu	equ	0xFFF
 23888                           tosh	equ	0xFFE
 23889                           tosl	equ	0xFFD
 23890                           pclath	equ	0xFFA
 23891                           tblptru	equ	0xFF8
 23892                           tblptrh	equ	0xFF7
 23893                           tblptrl	equ	0xFF6
 23894                           tablat	equ	0xFF5
 23895                           prodh	equ	0xFF4
 23896                           prodl	equ	0xFF3
 23897                           intcon	equ	0xFF2
 23898                           intcon2	equ	0xFF1
 23899                           intcon3	equ	0xFF0
 23900                           indf0	equ	0xFEF
 23901                           postinc0	equ	0xFEE
 23902                           plusw0	equ	0xFEB
 23903                           fsr0h	equ	0xFEA
 23904                           fsr0l	equ	0xFE9
 23905                           wreg	equ	0xFE8
 23906                           indf1	equ	0xFE7
 23907                           postinc1	equ	0xFE6
 23908                           postdec1	equ	0xFE5
 23909                           fsr1h	equ	0xFE2
 23910                           fsr1l	equ	0xFE1
 23911                           indf2	equ	0xFDF
 23912                           postinc2	equ	0xFDE
 23913                           postdec2	equ	0xFDD
 23914                           plusw2	equ	0xFDB
 23915                           fsr2h	equ	0xFDA
 23916                           fsr2l	equ	0xFD9
 23917                           status	equ	0xFD8
 23918                           
 23919 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 23920 ;; Defined at:
 23921 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 23922 ;; Parameters:    Size  Location     Type
 23923 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 23924 ;;		 -> isNumberInMemory@readBuffer(13), memoryPreamble(5), Terminal@TermRxBuffer(50), 
 23925 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 23926 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 23927 ;; Auto vars:     Size  Location     Type
 23928 ;;  RxSts           1   36[BANK0 ] unsigned char 
 23929 ;; Return value:  Size  Location     Type
 23930 ;;                  1    wreg      unsigned char 
 23931 ;; Registers used:
 23932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23933 ;; Tracked objects:
 23934 ;;		On entry : 0/0
 23935 ;;		On exit  : 0/0
 23936 ;;		Unchanged: 0/0
 23937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23938 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23941 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23942 ;;Total ram usage:        5 bytes
 23943 ;; Hardware stack levels used:    1
 23944 ;; Hardware stack levels required when called:   12
 23945 ;; This function calls:
 23946 ;;		_GenerateEvt
 23947 ;; This function is called by:
 23948 ;;		_I2cSlv_QueryI2cData
 23949 ;;		_Terminal
 23950 ;; This function uses a non-reentrant model
 23951 ;;
 23952                           
 23953                           	psect	text110
 23954  005E7C                     __ptext110:
 23955                           	opt stack 0
 23956  005E7C                     _I2cSlv_ReceiveI2cMsg:
 23957                           	opt stack 13
 23958                           
 23959                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 23960                           
 23961                           ; BSR set to: 0
 23962                           ;incstack = 0
 23963  005E7C  0E00               	movlw	0
 23964  005E7E  0100               	movlb	0	; () banked
 23965  005E80  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 23966                           
 23967                           ; BSR set to: 0
 23968                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 23969  005E82  0E02               	movlw	2
 23970  005E84  19CE               	xorwf	_I2cComSts& (0+255),w,b
 23971  005E86  B4D8               	btfsc	status,2,c
 23972  005E88  D016               	goto	l1414
 23973                           
 23974                           ; BSR set to: 0
 23975                           ;i2c_slv.c: 294: {
 23976                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 23977  005E8A  C082  F38E         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 23978                           
 23979                           ; BSR set to: 0
 23980                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 23981  005E8E  0E01               	movlw	1
 23982  005E90  0103               	movlb	3	; () banked
 23983  005E92  6F8F               	movwf	(_I2cRxPacket+1)& (0+255),b
 23984                           
 23985                           ; BSR set to: 3
 23986                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 23987  005E94  C083  F392         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 23988                           
 23989                           ; BSR set to: 3
 23990                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 23991  005E98  C080  F390         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 23992  005E9C  C081  F391         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 23993                           
 23994                           ; BSR set to: 3
 23995                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 23996  005EA0  0ED7               	movlw	low _I2cReadDataEvt
 23997  005EA2  0100               	movlb	0	; () banked
 23998  005EA4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23999  005EA6  0E00               	movlw	high _I2cReadDataEvt
 24000  005EA8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24001  005EAA  EC21  F033         	call	_GenerateEvt	;wreg free
 24002                           
 24003                           ;i2c_slv.c: 304: RxSts = 1u;
 24004  005EAE  0E01               	movlw	1
 24005  005EB0  0100               	movlb	0	; () banked
 24006  005EB2  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24007                           
 24008                           ;i2c_slv.c: 305: }
 24009  005EB4  0012               	return	
 24010  005EB6                     l1414:
 24011                           
 24012                           ; BSR set to: 0
 24013                           ;i2c_slv.c: 306: else
 24014                           ;i2c_slv.c: 307: {
 24015                           ;i2c_slv.c: 309: RxSts = 0u;
 24016                           
 24017                           ; BSR set to: 0
 24018  005EB6  0E00               	movlw	0
 24019  005EB8  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24020                           
 24021                           ; BSR set to: 0
 24022  005EBA  0012               	return	
 24023  005EBC                     __end_of_I2cSlv_ReceiveI2cMsg:
 24024                           	opt stack 0
 24025                           tosu	equ	0xFFF
 24026                           tosh	equ	0xFFE
 24027                           tosl	equ	0xFFD
 24028                           pclath	equ	0xFFA
 24029                           tblptru	equ	0xFF8
 24030                           tblptrh	equ	0xFF7
 24031                           tblptrl	equ	0xFF6
 24032                           tablat	equ	0xFF5
 24033                           prodh	equ	0xFF4
 24034                           prodl	equ	0xFF3
 24035                           intcon	equ	0xFF2
 24036                           intcon2	equ	0xFF1
 24037                           intcon3	equ	0xFF0
 24038                           indf0	equ	0xFEF
 24039                           postinc0	equ	0xFEE
 24040                           plusw0	equ	0xFEB
 24041                           fsr0h	equ	0xFEA
 24042                           fsr0l	equ	0xFE9
 24043                           wreg	equ	0xFE8
 24044                           indf1	equ	0xFE7
 24045                           postinc1	equ	0xFE6
 24046                           postdec1	equ	0xFE5
 24047                           fsr1h	equ	0xFE2
 24048                           fsr1l	equ	0xFE1
 24049                           indf2	equ	0xFDF
 24050                           postinc2	equ	0xFDE
 24051                           postdec2	equ	0xFDD
 24052                           plusw2	equ	0xFDB
 24053                           fsr2h	equ	0xFDA
 24054                           fsr2l	equ	0xFD9
 24055                           status	equ	0xFD8
 24056                           
 24057 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 24058 ;; Defined at:
 24059 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24060 ;; Parameters:    Size  Location     Type
 24061 ;;		None
 24062 ;; Auto vars:     Size  Location     Type
 24063 ;;  Result          1   33[BANK0 ] enum E8931
 24064 ;; Return value:  Size  Location     Type
 24065 ;;                  1    wreg      enum E8931
 24066 ;; Registers used:
 24067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24068 ;; Tracked objects:
 24069 ;;		On entry : 0/0
 24070 ;;		On exit  : 0/0
 24071 ;;		Unchanged: 0/0
 24072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24074 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24076 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24077 ;;Total ram usage:        1 bytes
 24078 ;; Hardware stack levels used:    1
 24079 ;; Hardware stack levels required when called:   12
 24080 ;; This function calls:
 24081 ;;		_ReceiveEvt
 24082 ;; This function is called by:
 24083 ;;		_I2cSlv_QueryI2cData
 24084 ;;		_Terminal
 24085 ;; This function uses a non-reentrant model
 24086 ;;
 24087                           
 24088                           	psect	text111
 24089  0064B4                     __ptext111:
 24090                           	opt stack 0
 24091  0064B4                     _I2cSlv_I2cReadMsgSts:
 24092                           	opt stack 13
 24093                           
 24094                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 24095                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 24096                           
 24097                           ; BSR set to: 0
 24098                           ;incstack = 0
 24099  0064B4  0E93               	movlw	low (_I2cRxPacket+5)
 24100  0064B6  0100               	movlb	0	; () banked
 24101  0064B8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24102  0064BA  0E03               	movlw	high (_I2cRxPacket+5)
 24103  0064BC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24104  0064BE  EC2C  F031         	call	_ReceiveEvt	;wreg free
 24105  0064C2  0900               	iorlw	0
 24106  0064C4  B4D8               	btfsc	status,2,c
 24107  0064C6  D002               	goto	l1419
 24108                           
 24109                           ;i2c_slv.c: 331: {
 24110                           ;i2c_slv.c: 332: Result = MessageReceived;
 24111  0064C8  0E01               	movlw	1
 24112  0064CA  D001               	goto	L36
 24113  0064CC                     l1419:
 24114                           
 24115                           ;i2c_slv.c: 334: else
 24116                           ;i2c_slv.c: 335: {
 24117                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 24118                           
 24119                           ; BSR set to: 0
 24120  0064CC  0E00               	movlw	0
 24121  0064CE                     L36:
 24122  0064CE  0100               	movlb	0	; () banked
 24123  0064D0  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 24124                           
 24125                           ; BSR set to: 0
 24126                           ;i2c_slv.c: 337: }
 24127                           ;i2c_slv.c: 339: return Result;
 24128  0064D2  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 24129  0064D4  0012               	return	
 24130  0064D6                     __end_of_I2cSlv_I2cReadMsgSts:
 24131                           	opt stack 0
 24132                           tosu	equ	0xFFF
 24133                           tosh	equ	0xFFE
 24134                           tosl	equ	0xFFD
 24135                           pclath	equ	0xFFA
 24136                           tblptru	equ	0xFF8
 24137                           tblptrh	equ	0xFF7
 24138                           tblptrl	equ	0xFF6
 24139                           tablat	equ	0xFF5
 24140                           prodh	equ	0xFF4
 24141                           prodl	equ	0xFF3
 24142                           intcon	equ	0xFF2
 24143                           intcon2	equ	0xFF1
 24144                           intcon3	equ	0xFF0
 24145                           indf0	equ	0xFEF
 24146                           postinc0	equ	0xFEE
 24147                           plusw0	equ	0xFEB
 24148                           fsr0h	equ	0xFEA
 24149                           fsr0l	equ	0xFE9
 24150                           wreg	equ	0xFE8
 24151                           indf1	equ	0xFE7
 24152                           postinc1	equ	0xFE6
 24153                           postdec1	equ	0xFE5
 24154                           fsr1h	equ	0xFE2
 24155                           fsr1l	equ	0xFE1
 24156                           indf2	equ	0xFDF
 24157                           postinc2	equ	0xFDE
 24158                           postdec2	equ	0xFDD
 24159                           plusw2	equ	0xFDB
 24160                           fsr2h	equ	0xFDA
 24161                           fsr2l	equ	0xFD9
 24162                           status	equ	0xFD8
 24163                           
 24164 ;; *************** function _Mdm_RequestSmsData *****************
 24165 ;; Defined at:
 24166 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24167 ;; Parameters:    Size  Location     Type
 24168 ;;		None
 24169 ;; Auto vars:     Size  Location     Type
 24170 ;;		None
 24171 ;; Return value:  Size  Location     Type
 24172 ;;                  1    wreg      void 
 24173 ;; Registers used:
 24174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24175 ;; Tracked objects:
 24176 ;;		On entry : 0/0
 24177 ;;		On exit  : 0/0
 24178 ;;		Unchanged: 0/0
 24179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24184 ;;Total ram usage:        0 bytes
 24185 ;; Hardware stack levels used:    1
 24186 ;; Hardware stack levels required when called:   12
 24187 ;; This function calls:
 24188 ;;		_GenerateEvt
 24189 ;; This function is called by:
 24190 ;;		_MyApp_Task
 24191 ;; This function uses a non-reentrant model
 24192 ;;
 24193                           
 24194                           	psect	text112
 24195  00671C                     __ptext112:
 24196                           	opt stack 0
 24197  00671C                     _Mdm_RequestSmsData:
 24198                           	opt stack 15
 24199                           
 24200                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 24201                           
 24202                           ; BSR set to: 0
 24203                           ;incstack = 0
 24204  00671C  0EDC               	movlw	low _GetSmsText
 24205  00671E  0100               	movlb	0	; () banked
 24206  006720  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24207  006722  0E00               	movlw	high _GetSmsText
 24208  006724  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24209  006726  EC21  F033         	call	_GenerateEvt	;wreg free
 24210  00672A  0012               	return		;funcret
 24211  00672C                     __end_of_Mdm_RequestSmsData:
 24212                           	opt stack 0
 24213                           tosu	equ	0xFFF
 24214                           tosh	equ	0xFFE
 24215                           tosl	equ	0xFFD
 24216                           pclath	equ	0xFFA
 24217                           tblptru	equ	0xFF8
 24218                           tblptrh	equ	0xFF7
 24219                           tblptrl	equ	0xFF6
 24220                           tablat	equ	0xFF5
 24221                           prodh	equ	0xFF4
 24222                           prodl	equ	0xFF3
 24223                           intcon	equ	0xFF2
 24224                           intcon2	equ	0xFF1
 24225                           intcon3	equ	0xFF0
 24226                           indf0	equ	0xFEF
 24227                           postinc0	equ	0xFEE
 24228                           plusw0	equ	0xFEB
 24229                           fsr0h	equ	0xFEA
 24230                           fsr0l	equ	0xFE9
 24231                           wreg	equ	0xFE8
 24232                           indf1	equ	0xFE7
 24233                           postinc1	equ	0xFE6
 24234                           postdec1	equ	0xFE5
 24235                           fsr1h	equ	0xFE2
 24236                           fsr1l	equ	0xFE1
 24237                           indf2	equ	0xFDF
 24238                           postinc2	equ	0xFDE
 24239                           postdec2	equ	0xFDD
 24240                           plusw2	equ	0xFDB
 24241                           fsr2h	equ	0xFDA
 24242                           fsr2l	equ	0xFD9
 24243                           status	equ	0xFD8
 24244                           
 24245 ;; *************** function _Mdm_IsSmsReceived *****************
 24246 ;; Defined at:
 24247 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24248 ;; Parameters:    Size  Location     Type
 24249 ;;		None
 24250 ;; Auto vars:     Size  Location     Type
 24251 ;;  Ret             1   33[BANK0 ] enum E8928
 24252 ;; Return value:  Size  Location     Type
 24253 ;;                  1    wreg      enum E8928
 24254 ;; Registers used:
 24255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24256 ;; Tracked objects:
 24257 ;;		On entry : 0/0
 24258 ;;		On exit  : 0/0
 24259 ;;		Unchanged: 0/0
 24260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24264 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24265 ;;Total ram usage:        1 bytes
 24266 ;; Hardware stack levels used:    1
 24267 ;; Hardware stack levels required when called:   12
 24268 ;; This function calls:
 24269 ;;		_ReceiveEvt
 24270 ;; This function is called by:
 24271 ;;		_MyApp_Task
 24272 ;; This function uses a non-reentrant model
 24273 ;;
 24274                           
 24275                           	psect	text113
 24276  0063C2                     __ptext113:
 24277                           	opt stack 0
 24278  0063C2                     _Mdm_IsSmsReceived:
 24279                           	opt stack 15
 24280                           
 24281                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 24282                           
 24283                           ;incstack = 0
 24284  0063C2  0E00               	movlw	0
 24285  0063C4  0100               	movlb	0	; () banked
 24286  0063C6  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24287                           
 24288                           ; BSR set to: 0
 24289                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 24290  0063C8  0EDD               	movlw	low _SmsEvent
 24291  0063CA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24292  0063CC  0E00               	movlw	high _SmsEvent
 24293  0063CE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24294  0063D0  EC2C  F031         	call	_ReceiveEvt	;wreg free
 24295  0063D4  0900               	iorlw	0
 24296  0063D6  B4D8               	btfsc	status,2,c
 24297  0063D8  D003               	goto	l1136
 24298                           
 24299                           ;mdm_gsm_gprs.c: 947: {
 24300                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 24301  0063DA  0E01               	movlw	1
 24302  0063DC  0100               	movlb	0	; () banked
 24303  0063DE  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24304  0063E0                     l1136:
 24305                           
 24306                           ;mdm_gsm_gprs.c: 949: }
 24307                           ;mdm_gsm_gprs.c: 951: return Ret;
 24308  0063E0  0100               	movlb	0	; () banked
 24309  0063E2  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 24310  0063E4  0012               	return	
 24311  0063E6                     __end_of_Mdm_IsSmsReceived:
 24312                           	opt stack 0
 24313                           tosu	equ	0xFFF
 24314                           tosh	equ	0xFFE
 24315                           tosl	equ	0xFFD
 24316                           pclath	equ	0xFFA
 24317                           tblptru	equ	0xFF8
 24318                           tblptrh	equ	0xFF7
 24319                           tblptrl	equ	0xFF6
 24320                           tablat	equ	0xFF5
 24321                           prodh	equ	0xFF4
 24322                           prodl	equ	0xFF3
 24323                           intcon	equ	0xFF2
 24324                           intcon2	equ	0xFF1
 24325                           intcon3	equ	0xFF0
 24326                           indf0	equ	0xFEF
 24327                           postinc0	equ	0xFEE
 24328                           plusw0	equ	0xFEB
 24329                           fsr0h	equ	0xFEA
 24330                           fsr0l	equ	0xFE9
 24331                           wreg	equ	0xFE8
 24332                           indf1	equ	0xFE7
 24333                           postinc1	equ	0xFE6
 24334                           postdec1	equ	0xFE5
 24335                           fsr1h	equ	0xFE2
 24336                           fsr1l	equ	0xFE1
 24337                           indf2	equ	0xFDF
 24338                           postinc2	equ	0xFDE
 24339                           postdec2	equ	0xFDD
 24340                           plusw2	equ	0xFDB
 24341                           fsr2h	equ	0xFDA
 24342                           fsr2l	equ	0xFD9
 24343                           status	equ	0xFD8
 24344                           
 24345 ;; *************** function _Mdm_GetSmsData *****************
 24346 ;; Defined at:
 24347 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24348 ;; Parameters:    Size  Location     Type
 24349 ;;  MessageText     2   39[BANK0 ] PTR unsigned char 
 24350 ;;		 -> smsText(20), 
 24351 ;; Auto vars:     Size  Location     Type
 24352 ;;  GetSmsStatus    1   41[BANK0 ] enum E8920
 24353 ;; Return value:  Size  Location     Type
 24354 ;;                  1    wreg      enum E8920
 24355 ;; Registers used:
 24356 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24357 ;; Tracked objects:
 24358 ;;		On entry : 0/0
 24359 ;;		On exit  : 0/0
 24360 ;;		Unchanged: 0/0
 24361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24362 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24365 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24366 ;;Total ram usage:        3 bytes
 24367 ;; Hardware stack levels used:    1
 24368 ;; Hardware stack levels required when called:   12
 24369 ;; This function calls:
 24370 ;;		_ReceiveEvt
 24371 ;;		_StringCopy
 24372 ;; This function is called by:
 24373 ;;		_MyApp_Task
 24374 ;; This function uses a non-reentrant model
 24375 ;;
 24376                           
 24377                           	psect	text114
 24378  0052E0                     __ptext114:
 24379                           	opt stack 0
 24380  0052E0                     _Mdm_GetSmsData:
 24381                           	opt stack 15
 24382                           
 24383                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 24384                           
 24385                           ; BSR set to: 0
 24386                           ;incstack = 0
 24387  0052E0  0E00               	movlw	0
 24388  0052E2  0100               	movlb	0	; () banked
 24389  0052E4  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24390                           
 24391                           ; BSR set to: 0
 24392                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 24393  0052E6  0EDB               	movlw	low _SmsTxtReady
 24394  0052E8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24395  0052EA  0E00               	movlw	high _SmsTxtReady
 24396  0052EC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24397  0052EE  EC2C  F031         	call	_ReceiveEvt	;wreg free
 24398  0052F2  0900               	iorlw	0
 24399  0052F4  B4D8               	btfsc	status,2,c
 24400  0052F6  D025               	goto	l1129
 24401                           
 24402                           ;mdm_gsm_gprs.c: 898: {
 24403                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 24404  0052F8  0E50               	movlw	low (_Mdm_SmsRx+80)
 24405  0052FA  0100               	movlb	0	; () banked
 24406  0052FC  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24407  0052FE  0E07               	movlw	high (_Mdm_SmsRx+80)
 24408  005300  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24409  005302  C087  F07F         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 24410  005306  C088  F080         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 24411  00530A  0E01               	movlw	1
 24412  00530C  0107               	movlb	7	; () banked
 24413  00530E  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 24414  005310  0100               	movlb	0	; () banked
 24415  005312  6F81               	movwf	StringCopy@Len& (0+255),b
 24416  005314  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 24417  005316  0E00               	movlw	0
 24418  005318  2382               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 24419  00531A  EC3D  F02A         	call	_StringCopy	;wreg free
 24420                           
 24421                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ) - 1);
 24422  00531E  0E15               	movlw	low (_Mdm_SmsRx+21)
 24423  005320  0100               	movlb	0	; () banked
 24424  005322  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24425  005324  0E07               	movlw	high (_Mdm_SmsRx+21)
 24426  005326  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24427  005328  0ECC               	movlw	low _callerNumber
 24428  00532A  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24429  00532C  0E04               	movlw	high _callerNumber
 24430  00532E  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24431  005330  0E00               	movlw	0
 24432  005332  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 24433  005334  0E0C               	movlw	12
 24434  005336  6F81               	movwf	StringCopy@Len& (0+255),b
 24435  005338  EC3D  F02A         	call	_StringCopy	;wreg free
 24436                           
 24437                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 24438  00533C  0E01               	movlw	1
 24439  00533E  0100               	movlb	0	; () banked
 24440  005340  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24441  005342                     l1129:
 24442                           
 24443                           ;mdm_gsm_gprs.c: 904: }
 24444                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 24445                           
 24446                           ; BSR set to: 0
 24447  005342  0100               	movlb	0	; () banked
 24448  005344  5189               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 24449  005346  0012               	return	
 24450  005348                     __end_of_Mdm_GetSmsData:
 24451                           	opt stack 0
 24452                           tosu	equ	0xFFF
 24453                           tosh	equ	0xFFE
 24454                           tosl	equ	0xFFD
 24455                           pclath	equ	0xFFA
 24456                           tblptru	equ	0xFF8
 24457                           tblptrh	equ	0xFF7
 24458                           tblptrl	equ	0xFF6
 24459                           tablat	equ	0xFF5
 24460                           prodh	equ	0xFF4
 24461                           prodl	equ	0xFF3
 24462                           intcon	equ	0xFF2
 24463                           intcon2	equ	0xFF1
 24464                           intcon3	equ	0xFF0
 24465                           indf0	equ	0xFEF
 24466                           postinc0	equ	0xFEE
 24467                           plusw0	equ	0xFEB
 24468                           fsr0h	equ	0xFEA
 24469                           fsr0l	equ	0xFE9
 24470                           wreg	equ	0xFE8
 24471                           indf1	equ	0xFE7
 24472                           postinc1	equ	0xFE6
 24473                           postdec1	equ	0xFE5
 24474                           fsr1h	equ	0xFE2
 24475                           fsr1l	equ	0xFE1
 24476                           indf2	equ	0xFDF
 24477                           postinc2	equ	0xFDE
 24478                           postdec2	equ	0xFDD
 24479                           plusw2	equ	0xFDB
 24480                           fsr2h	equ	0xFDA
 24481                           fsr2l	equ	0xFD9
 24482                           status	equ	0xFD8
 24483                           
 24484 ;; *************** function _Led_SetLedBlinkTime *****************
 24485 ;; Defined at:
 24486 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 24487 ;; Parameters:    Size  Location     Type
 24488 ;;  Led             1    wreg     unsigned char 
 24489 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 24490 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 24491 ;; Auto vars:     Size  Location     Type
 24492 ;;  Led             1   33[BANK0 ] unsigned char 
 24493 ;; Return value:  Size  Location     Type
 24494 ;;                  1    wreg      void 
 24495 ;; Registers used:
 24496 ;;		wreg, status,2, status,0
 24497 ;; Tracked objects:
 24498 ;;		On entry : 0/0
 24499 ;;		On exit  : 0/0
 24500 ;;		Unchanged: 0/0
 24501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24505 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24506 ;;Total ram usage:        5 bytes
 24507 ;; Hardware stack levels used:    1
 24508 ;; Hardware stack levels required when called:   11
 24509 ;; This function calls:
 24510 ;;		Nothing
 24511 ;; This function is called by:
 24512 ;;		_MyApp_Task
 24513 ;; This function uses a non-reentrant model
 24514 ;;
 24515                           
 24516                           	psect	text115
 24517  005850                     __ptext115:
 24518                           	opt stack 0
 24519  005850                     _Led_SetLedBlinkTime:
 24520                           	opt stack 16
 24521                           
 24522                           ; BSR set to: 0
 24523                           ;incstack = 0
 24524                           ;Led_SetLedBlinkTime@Led stored from wreg
 24525  005850  0100               	movlb	0	; () banked
 24526  005852  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 24527                           
 24528                           ;led.c: 374: switch (Led)
 24529  005854  D01B               	goto	l2139
 24530  005856                     l2140:
 24531                           
 24532                           ; BSR set to: 0
 24533                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 24534  005856  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 24535  00585A  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 24536                           
 24537                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 24538  00585E  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 24539  005862  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 24540                           
 24541                           ;led.c: 379: break;
 24542  005866  0012               	return	
 24543  005868                     l2142:
 24544                           
 24545                           ; BSR set to: 0
 24546                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 24547  005868  C07D  F35F         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 24548  00586C  C07E  F360         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 24549                           
 24550                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 24551  005870  C07F  F361         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 24552  005874  C080  F362         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 24553                           
 24554                           ;led.c: 384: break;
 24555  005878  0012               	return	
 24556  00587A                     l2143:
 24557                           
 24558                           ; BSR set to: 0
 24559                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 24560  00587A  C07D  F35F         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 24561  00587E  C07E  F360         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 24562                           
 24563                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 24564  005882  C07F  F361         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 24565  005886  C080  F362         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 24566                           
 24567                           ; BSR set to: 0
 24568                           ;led.c: 393: }
 24569                           
 24570                           ; BSR set to: 0
 24571                           ;led.c: 392: break;
 24572                           
 24573                           ;led.c: 391: default:
 24574                           
 24575                           ;led.c: 389: break;
 24576  00588A  0012               	return	
 24577  00588C                     l2139:
 24578                           
 24579                           ; BSR set to: 0
 24580  00588C  0100               	movlb	0	; () banked
 24581  00588E  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 24582                           
 24583                           ; Switch size 1, requested type "space"
 24584                           ; Number of cases is 3, Range of values is 1 to 3
 24585                           ; switch strategies available:
 24586                           ; Name         Instructions Cycles
 24587                           ; simple_byte           10     6 (average)
 24588                           ;	Chosen strategy is simple_byte
 24589  005890  0A01               	xorlw	1	; case 1
 24590  005892  B4D8               	btfsc	status,2,c
 24591  005894  D7E0               	goto	l2140
 24592  005896  0A03               	xorlw	3	; case 2
 24593  005898  B4D8               	btfsc	status,2,c
 24594  00589A  D7E6               	goto	l2142
 24595  00589C  0A01               	xorlw	1	; case 3
 24596  00589E  A4D8               	btfss	status,2,c
 24597  0058A0  0012               	return	
 24598  0058A2  D7EB               	goto	l2143
 24599  0058A4                     __end_of_Led_SetLedBlinkTime:
 24600                           	opt stack 0
 24601                           tosu	equ	0xFFF
 24602                           tosh	equ	0xFFE
 24603                           tosl	equ	0xFFD
 24604                           pclath	equ	0xFFA
 24605                           tblptru	equ	0xFF8
 24606                           tblptrh	equ	0xFF7
 24607                           tblptrl	equ	0xFF6
 24608                           tablat	equ	0xFF5
 24609                           prodh	equ	0xFF4
 24610                           prodl	equ	0xFF3
 24611                           intcon	equ	0xFF2
 24612                           intcon2	equ	0xFF1
 24613                           intcon3	equ	0xFF0
 24614                           indf0	equ	0xFEF
 24615                           postinc0	equ	0xFEE
 24616                           plusw0	equ	0xFEB
 24617                           fsr0h	equ	0xFEA
 24618                           fsr0l	equ	0xFE9
 24619                           wreg	equ	0xFE8
 24620                           indf1	equ	0xFE7
 24621                           postinc1	equ	0xFE6
 24622                           postdec1	equ	0xFE5
 24623                           fsr1h	equ	0xFE2
 24624                           fsr1l	equ	0xFE1
 24625                           indf2	equ	0xFDF
 24626                           postinc2	equ	0xFDE
 24627                           postdec2	equ	0xFDD
 24628                           plusw2	equ	0xFDB
 24629                           fsr2h	equ	0xFDA
 24630                           fsr2l	equ	0xFD9
 24631                           status	equ	0xFD8
 24632                           
 24633 ;; *************** function _GetCallerNumber *****************
 24634 ;; Defined at:
 24635 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24636 ;; Parameters:    Size  Location     Type
 24637 ;;		None
 24638 ;; Auto vars:     Size  Location     Type
 24639 ;;		None
 24640 ;; Return value:  Size  Location     Type
 24641 ;;                  2   35[BANK0 ] PTR unsigned char 
 24642 ;; Registers used:
 24643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24644 ;; Tracked objects:
 24645 ;;		On entry : 0/0
 24646 ;;		On exit  : 0/0
 24647 ;;		Unchanged: 0/0
 24648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24652 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24653 ;;Total ram usage:        2 bytes
 24654 ;; Hardware stack levels used:    1
 24655 ;; Hardware stack levels required when called:   12
 24656 ;; This function calls:
 24657 ;;		_ClearBuffer
 24658 ;;		_ReceiveEvt
 24659 ;; This function is called by:
 24660 ;;		_MyApp_Task
 24661 ;; This function uses a non-reentrant model
 24662 ;;
 24663                           
 24664                           	psect	text116
 24665  006066                     __ptext116:
 24666                           	opt stack 0
 24667  006066                     _GetCallerNumber:
 24668                           	opt stack 15
 24669                           
 24670                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 24671                           
 24672                           ; BSR set to: 0
 24673                           ;incstack = 0
 24674  006066  0EDE               	movlw	low _ClipEvent
 24675  006068  0100               	movlb	0	; () banked
 24676  00606A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24677  00606C  0E00               	movlw	high _ClipEvent
 24678  00606E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24679  006070  EC2C  F031         	call	_ReceiveEvt	;wreg free
 24680  006074  0900               	iorlw	0
 24681  006076  A4D8               	btfss	status,2,c
 24682  006078  D00B               	goto	l1156
 24683                           
 24684                           ;mdm_gsm_gprs.c: 1040: {
 24685                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 24686  00607A  0ECC               	movlw	low _callerNumber
 24687  00607C  0100               	movlb	0	; () banked
 24688  00607E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24689  006080  0E04               	movlw	high _callerNumber
 24690  006082  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24691  006084  0E00               	movlw	0
 24692  006086  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24693  006088  0E0D               	movlw	13
 24694  00608A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24695  00608C  EC4E  F030         	call	_ClearBuffer	;wreg free
 24696  006090                     l1156:
 24697                           
 24698                           ;mdm_gsm_gprs.c: 1042: }
 24699                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 24700  006090  0ECC               	movlw	low _callerNumber
 24701  006092  0100               	movlb	0	; () banked
 24702  006094  6F83               	movwf	?_GetCallerNumber& (0+255),b
 24703  006096  0E04               	movlw	high _callerNumber
 24704  006098  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 24705  00609A  0012               	return	
 24706  00609C                     __end_of_GetCallerNumber:
 24707                           	opt stack 0
 24708                           tosu	equ	0xFFF
 24709                           tosh	equ	0xFFE
 24710                           tosl	equ	0xFFD
 24711                           pclath	equ	0xFFA
 24712                           tblptru	equ	0xFF8
 24713                           tblptrh	equ	0xFF7
 24714                           tblptrl	equ	0xFF6
 24715                           tablat	equ	0xFF5
 24716                           prodh	equ	0xFF4
 24717                           prodl	equ	0xFF3
 24718                           intcon	equ	0xFF2
 24719                           intcon2	equ	0xFF1
 24720                           intcon3	equ	0xFF0
 24721                           indf0	equ	0xFEF
 24722                           postinc0	equ	0xFEE
 24723                           plusw0	equ	0xFEB
 24724                           fsr0h	equ	0xFEA
 24725                           fsr0l	equ	0xFE9
 24726                           wreg	equ	0xFE8
 24727                           indf1	equ	0xFE7
 24728                           postinc1	equ	0xFE6
 24729                           postdec1	equ	0xFE5
 24730                           fsr1h	equ	0xFE2
 24731                           fsr1l	equ	0xFE1
 24732                           indf2	equ	0xFDF
 24733                           postinc2	equ	0xFDE
 24734                           postdec2	equ	0xFDD
 24735                           plusw2	equ	0xFDB
 24736                           fsr2h	equ	0xFDA
 24737                           fsr2l	equ	0xFD9
 24738                           status	equ	0xFD8
 24739                           
 24740 ;; *************** function _UartSetConfig *****************
 24741 ;; Defined at:
 24742 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24743 ;; Parameters:    Size  Location     Type
 24744 ;;		None
 24745 ;; Auto vars:     Size  Location     Type
 24746 ;;		None
 24747 ;; Return value:  Size  Location     Type
 24748 ;;                  1    wreg      void 
 24749 ;; Registers used:
 24750 ;;		wreg, status,2
 24751 ;; Tracked objects:
 24752 ;;		On entry : 0/0
 24753 ;;		On exit  : 0/0
 24754 ;;		Unchanged: 0/0
 24755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24760 ;;Total ram usage:        0 bytes
 24761 ;; Hardware stack levels used:    1
 24762 ;; Hardware stack levels required when called:   11
 24763 ;; This function calls:
 24764 ;;		Nothing
 24765 ;; This function is called by:
 24766 ;;		_Mdm_MainTask
 24767 ;; This function uses a non-reentrant model
 24768 ;;
 24769                           
 24770                           	psect	text117
 24771  0055F4                     __ptext117:
 24772                           	opt stack 0
 24773  0055F4                     _UartSetConfig:
 24774                           	opt stack 16
 24775                           
 24776                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 24777                           
 24778                           ; BSR set to: 0
 24779                           ;incstack = 0
 24780  0055F4  0E01               	movlw	1
 24781  0055F6  0103               	movlb	3	; () banked
 24782  0055F8  6F28               	movwf	_UartConfig& (0+255),b
 24783                           
 24784                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 24785  0055FA  0E00               	movlw	0
 24786  0055FC  6F29               	movwf	(_UartConfig+1)& (0+255),b
 24787                           
 24788                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 24789  0055FE  0E00               	movlw	0
 24790  005600  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 24791                           
 24792                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 24793  005602  0E00               	movlw	0
 24794  005604  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 24795                           
 24796                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 24797  005606  0E00               	movlw	0
 24798  005608  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 24799                           
 24800                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 24801  00560A  0E00               	movlw	0
 24802  00560C  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 24803                           
 24804                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 24805  00560E  0E01               	movlw	1
 24806  005610  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 24807                           
 24808                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 24809  005612  0E01               	movlw	1
 24810  005614  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 24811                           
 24812                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 24813  005616  0E00               	movlw	0
 24814  005618  6F30               	movwf	(_UartConfig+8)& (0+255),b
 24815                           
 24816                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 24817  00561A  0E00               	movlw	0
 24818  00561C  6F31               	movwf	(_UartConfig+9)& (0+255),b
 24819                           
 24820                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 24821  00561E  0E00               	movlw	0
 24822  005620  6F32               	movwf	(_UartConfig+10)& (0+255),b
 24823                           
 24824                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 24825  005622  0E00               	movlw	0
 24826  005624  6F33               	movwf	(_UartConfig+11)& (0+255),b
 24827                           
 24828                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 24829  005626  0E01               	movlw	1
 24830  005628  6F34               	movwf	(_UartConfig+12)& (0+255),b
 24831                           
 24832                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 24833  00562A  0E00               	movlw	0
 24834  00562C  6F35               	movwf	(_UartConfig+13)& (0+255),b
 24835  00562E  0E6C               	movlw	108
 24836  005630  6F36               	movwf	(_UartConfig+14)& (0+255),b
 24837  005632  0EDC               	movlw	220
 24838  005634  6F37               	movwf	(_UartConfig+15)& (0+255),b
 24839  005636  0E02               	movlw	2
 24840  005638  6F38               	movwf	(_UartConfig+16)& (0+255),b
 24841                           
 24842                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 24843  00563A  0E80               	movlw	128
 24844  00563C  6F39               	movwf	(_UartConfig+17)& (0+255),b
 24845  00563E  0E25               	movlw	37
 24846  005640  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 24847  005642  0E00               	movlw	0
 24848  005644  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 24849  005646  0E00               	movlw	0
 24850  005648  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 24851                           
 24852                           ; BSR set to: 3
 24853  00564A  0012               	return		;funcret
 24854  00564C                     __end_of_UartSetConfig:
 24855                           	opt stack 0
 24856                           tosu	equ	0xFFF
 24857                           tosh	equ	0xFFE
 24858                           tosl	equ	0xFFD
 24859                           pclath	equ	0xFFA
 24860                           tblptru	equ	0xFF8
 24861                           tblptrh	equ	0xFF7
 24862                           tblptrl	equ	0xFF6
 24863                           tablat	equ	0xFF5
 24864                           prodh	equ	0xFF4
 24865                           prodl	equ	0xFF3
 24866                           intcon	equ	0xFF2
 24867                           intcon2	equ	0xFF1
 24868                           intcon3	equ	0xFF0
 24869                           indf0	equ	0xFEF
 24870                           postinc0	equ	0xFEE
 24871                           plusw0	equ	0xFEB
 24872                           fsr0h	equ	0xFEA
 24873                           fsr0l	equ	0xFE9
 24874                           wreg	equ	0xFE8
 24875                           indf1	equ	0xFE7
 24876                           postinc1	equ	0xFE6
 24877                           postdec1	equ	0xFE5
 24878                           fsr1h	equ	0xFE2
 24879                           fsr1l	equ	0xFE1
 24880                           indf2	equ	0xFDF
 24881                           postinc2	equ	0xFDE
 24882                           postdec2	equ	0xFDD
 24883                           plusw2	equ	0xFDB
 24884                           fsr2h	equ	0xFDA
 24885                           fsr2l	equ	0xFD9
 24886                           status	equ	0xFD8
 24887                           
 24888 ;; *************** function _TurnOnModem *****************
 24889 ;; Defined at:
 24890 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24891 ;; Parameters:    Size  Location     Type
 24892 ;;		None
 24893 ;; Auto vars:     Size  Location     Type
 24894 ;;		None
 24895 ;; Return value:  Size  Location     Type
 24896 ;;                  1    wreg      void 
 24897 ;; Registers used:
 24898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24899 ;; Tracked objects:
 24900 ;;		On entry : 0/0
 24901 ;;		On exit  : 0/0
 24902 ;;		Unchanged: 0/0
 24903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24908 ;;Total ram usage:        0 bytes
 24909 ;; Hardware stack levels used:    1
 24910 ;; Hardware stack levels required when called:   12
 24911 ;; This function calls:
 24912 ;;		_GenerateEvt
 24913 ;; This function is called by:
 24914 ;;		_Mdm_MainTask
 24915 ;; This function uses a non-reentrant model
 24916 ;;
 24917                           
 24918                           	psect	text118
 24919  005CE2                     __ptext118:
 24920                           	opt stack 0
 24921  005CE2                     _TurnOnModem:
 24922                           	opt stack 15
 24923                           
 24924                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 24925                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 24926                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 24927                           
 24928                           ; BSR set to: 3
 24929                           ;incstack = 0
 24930  005CE2  D019               	goto	l1009
 24931  005CE4                     
 24932                           ;mdm_gsm_gprs.c: 385: Counter++;
 24933  005CE4  0102               	movlb	2	; () banked
 24934  005CE6  4BD9               	infsnz	TurnOnModem@Counter& (0+255),f,b
 24935  005CE8  2BDA               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 24936                           
 24937                           ; BSR set to: 2
 24938                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 24939  005CEA  0EB8               	movlw	184
 24940  005CEC  5DD9               	subwf	TurnOnModem@Counter& (0+255),w,b
 24941  005CEE  0E0B               	movlw	11
 24942  005CF0  59DA               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 24943  005CF2  A0D8               	btfss	status,0,c
 24944  005CF4  0012               	return	
 24945                           
 24946                           ; BSR set to: 2
 24947                           ;mdm_gsm_gprs.c: 388: {
 24948                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 24949  005CF6  0E01               	movlw	1
 24950  005CF8  6E28               	movwf	TurnOnModem@TurnOnMdmState,c
 24951                           
 24952                           ; BSR set to: 2
 24953                           ;mdm_gsm_gprs.c: 391: }
 24954                           ;mdm_gsm_gprs.c: 392: break;
 24955  005CFA  0012               	return	
 24956  005CFC                     
 24957                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 24958                           
 24959                           ; BSR set to: 2
 24960  005CFC  0EE1               	movlw	low _MdmOnOffPulseRequest
 24961  005CFE  0100               	movlb	0	; () banked
 24962  005D00  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24963  005D02  0E00               	movlw	high _MdmOnOffPulseRequest
 24964  005D04  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24965  005D06  EC21  F033         	call	_GenerateEvt	;wreg free
 24966                           
 24967                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 24968  005D0A  0E01               	movlw	1
 24969  005D0C  0100               	movlb	0	; () banked
 24970  005D0E  6FD1               	movwf	_MdmStatus& (0+255),b
 24971                           
 24972                           ; BSR set to: 0
 24973                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 24974  005D10  0E02               	movlw	2
 24975  005D12  6E28               	movwf	TurnOnModem@TurnOnMdmState,c
 24976                           
 24977                           ; BSR set to: 0
 24978                           ;mdm_gsm_gprs.c: 408: }
 24979                           
 24980                           ; BSR set to: 0
 24981                           ;mdm_gsm_gprs.c: 407: break;
 24982                           
 24983                           ;mdm_gsm_gprs.c: 406: default:
 24984                           
 24985                           ; BSR set to: 0
 24986                           ;mdm_gsm_gprs.c: 404: break;
 24987                           
 24988                           ;mdm_gsm_gprs.c: 403: case Stop:
 24989                           
 24990                           ;mdm_gsm_gprs.c: 401: break;
 24991  005D14  0012               	return	
 24992  005D16                     l1009:
 24993                           
 24994                           ; BSR set to: 0
 24995  005D16  5028               	movf	TurnOnModem@TurnOnMdmState,w,c
 24996                           
 24997                           ; Switch size 1, requested type "space"
 24998                           ; Number of cases is 3, Range of values is 0 to 2
 24999                           ; switch strategies available:
 25000                           ; Name         Instructions Cycles
 25001                           ; simple_byte           10     6 (average)
 25002                           ;	Chosen strategy is simple_byte
 25003  005D18  0A00               	xorlw	0	; case 0
 25004  005D1A  B4D8               	btfsc	status,2,c
 25005  005D1C  D7E3               	goto	l1010
 25006  005D1E  0A01               	xorlw	1	; case 1
 25007  005D20  B4D8               	btfsc	status,2,c
 25008  005D22  D7EC               	goto	l1013
 25009  005D24  0A03               	xorlw	3	; case 2
 25010  005D26  0012               	return	
 25011  005D28                     __end_of_TurnOnModem:
 25012                           	opt stack 0
 25013                           tosu	equ	0xFFF
 25014                           tosh	equ	0xFFE
 25015                           tosl	equ	0xFFD
 25016                           pclath	equ	0xFFA
 25017                           tblptru	equ	0xFF8
 25018                           tblptrh	equ	0xFF7
 25019                           tblptrl	equ	0xFF6
 25020                           tablat	equ	0xFF5
 25021                           prodh	equ	0xFF4
 25022                           prodl	equ	0xFF3
 25023                           intcon	equ	0xFF2
 25024                           intcon2	equ	0xFF1
 25025                           intcon3	equ	0xFF0
 25026                           indf0	equ	0xFEF
 25027                           postinc0	equ	0xFEE
 25028                           plusw0	equ	0xFEB
 25029                           fsr0h	equ	0xFEA
 25030                           fsr0l	equ	0xFE9
 25031                           wreg	equ	0xFE8
 25032                           indf1	equ	0xFE7
 25033                           postinc1	equ	0xFE6
 25034                           postdec1	equ	0xFE5
 25035                           fsr1h	equ	0xFE2
 25036                           fsr1l	equ	0xFE1
 25037                           indf2	equ	0xFDF
 25038                           postinc2	equ	0xFDE
 25039                           postdec2	equ	0xFDD
 25040                           plusw2	equ	0xFDB
 25041                           fsr2h	equ	0xFDA
 25042                           fsr2l	equ	0xFD9
 25043                           status	equ	0xFD8
 25044                           
 25045 ;; *************** function _SendSmsSm *****************
 25046 ;; Defined at:
 25047 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25048 ;; Parameters:    Size  Location     Type
 25049 ;;		None
 25050 ;; Auto vars:     Size  Location     Type
 25051 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 25052 ;; Return value:  Size  Location     Type
 25053 ;;                  1    wreg      void 
 25054 ;; Registers used:
 25055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25056 ;; Tracked objects:
 25057 ;;		On entry : 0/0
 25058 ;;		On exit  : 0/0
 25059 ;;		Unchanged: 0/0
 25060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25062 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25063 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25064 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25065 ;;Total ram usage:       52 bytes
 25066 ;; Hardware stack levels used:    1
 25067 ;; Hardware stack levels required when called:   14
 25068 ;; This function calls:
 25069 ;;		_OsTmr_GetTimerStatus
 25070 ;;		_OsTmr_StartTimer
 25071 ;;		_ReceiveEvt
 25072 ;;		_StringCopy
 25073 ;;		_Uart_WriteStringLen
 25074 ;; This function is called by:
 25075 ;;		_Mdm_MainTask
 25076 ;; This function uses a non-reentrant model
 25077 ;;
 25078                           
 25079                           	psect	text119
 25080  001C76                     __ptext119:
 25081                           	opt stack 0
 25082  001C76                     _SendSmsSm:
 25083                           	opt stack 13
 25084                           
 25085                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 25086                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 25087                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25088                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 25089                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 25090                           
 25091                           ;incstack = 0
 25092  001C76  0E03               	movlw	3
 25093  001C78  0100               	movlb	0	; () banked
 25094  001C7A  19D1               	xorwf	_MdmStatus& (0+255),w,b
 25095  001C7C  A4D8               	btfss	status,2,c
 25096  001C7E  0012               	return	
 25097  001C80  D0C1               	goto	l1091
 25098  001C82                     
 25099                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 25100                           
 25101                           ; BSR set to: 0
 25102  001C82  0EE0               	movlw	low _SendSmsEvent
 25103  001C84  0100               	movlb	0	; () banked
 25104  001C86  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25105  001C88  0E00               	movlw	high _SendSmsEvent
 25106  001C8A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25107  001C8C  EC2C  F031         	call	_ReceiveEvt	;wreg free
 25108  001C90  0900               	iorlw	0
 25109  001C92  B4D8               	btfsc	status,2,c
 25110  001C94  0012               	return	
 25111                           
 25112                           ;mdm_gsm_gprs.c: 671: {
 25113                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 25114  001C96  0E01               	movlw	1
 25115  001C98  0101               	movlb	1	; () banked
 25116  001C9A  6FF1               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25117                           
 25118                           ; BSR set to: 1
 25119                           ;mdm_gsm_gprs.c: 674: }
 25120                           ;mdm_gsm_gprs.c: 675: break;
 25121  001C9C  0012               	return	
 25122  001C9E                     
 25123                           ; BSR set to: 1
 25124                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 25125                           
 25126                           ; BSR set to: 1
 25127  001C9E  0ECE               	movlw	low STR_5
 25128  001CA0  0100               	movlb	0	; () banked
 25129  001CA2  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25130  001CA4  0EFF               	movlw	high STR_5
 25131  001CA6  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25132  001CA8  0E00               	movlw	low SendSmsSm@UartMessage
 25133  001CAA  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25134  001CAC  0E01               	movlw	high SendSmsSm@UartMessage
 25135  001CAE  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25136  001CB0  0E00               	movlw	0
 25137  001CB2  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 25138  001CB4  0E09               	movlw	9
 25139  001CB6  6F81               	movwf	StringCopy@Len& (0+255),b
 25140  001CB8  EC3D  F02A         	call	_StringCopy	;wreg free
 25141                           
 25142                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 25143  001CBC  0EA9               	movlw	low _PhoneNumber
 25144  001CBE  0100               	movlb	0	; () banked
 25145  001CC0  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25146  001CC2  0E04               	movlw	high _PhoneNumber
 25147  001CC4  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25148  001CC6  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 25149  001CC8  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25150  001CCA  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 25151  001CCC  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25152  001CCE  C0D2  F081         	movff	_PhoneNumbLen,StringCopy@Len
 25153  001CD2  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 25154  001CD4  EC3D  F02A         	call	_StringCopy	;wreg free
 25155                           
 25156                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 25157  001CD8  0100               	movlb	0	; () banked
 25158  001CDA  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 25159  001CDC  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25160  001CDE  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25161  001CE0  0E09               	movlw	9
 25162  001CE2  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25163  001CE4  0E00               	movlw	0
 25164  001CE6  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25165  001CE8  0E00               	movlw	low SendSmsSm@UartMessage
 25166  001CEA  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25167  001CEC  6ED9               	movwf	fsr2l,c
 25168  001CEE  0E01               	movlw	high SendSmsSm@UartMessage
 25169  001CF0  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25170  001CF2  6EDA               	movwf	fsr2h,c
 25171  001CF4  0E22               	movlw	34
 25172  001CF6  6EDF               	movwf	indf2,c
 25173                           
 25174                           ; BSR set to: 0
 25175                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 25176  001CF8  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 25177  001CFA  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25178  001CFC  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25179  001CFE  0E0A               	movlw	10
 25180  001D00  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25181  001D02  0E00               	movlw	0
 25182  001D04  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25183  001D06  0E00               	movlw	low SendSmsSm@UartMessage
 25184  001D08  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25185  001D0A  6ED9               	movwf	fsr2l,c
 25186  001D0C  0E01               	movlw	high SendSmsSm@UartMessage
 25187  001D0E  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25188  001D10  6EDA               	movwf	fsr2h,c
 25189  001D12  0E0D               	movlw	13
 25190  001D14  6EDF               	movwf	indf2,c
 25191                           
 25192                           ; BSR set to: 0
 25193                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 25194  001D16  0E00               	movlw	low SendSmsSm@UartMessage
 25195  001D18  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25196  001D1A  0E01               	movlw	high SendSmsSm@UartMessage
 25197  001D1C  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25198  001D1E  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 25199  001D20  0F0B               	addlw	11
 25200  001D22  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25201  001D24  0E01               	movlw	1
 25202  001D26  EC5E  F02F         	call	_Uart_WriteStringLen
 25203                           
 25204                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 25205  001D2A  0EEA               	movlw	low SendSmsSm@SwTimer
 25206  001D2C  0100               	movlb	0	; () banked
 25207  001D2E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25208  001D30  0E03               	movlw	high SendSmsSm@SwTimer
 25209  001D32  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25210  001D34  0EC4               	movlw	196
 25211  001D36  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25212  001D38  0E09               	movlw	9
 25213  001D3A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25214  001D3C  0E00               	movlw	0
 25215  001D3E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25216  001D40  0E00               	movlw	0
 25217  001D42  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25218  001D44  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 25219                           
 25220                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 25221  001D48  0E05               	movlw	5
 25222  001D4A  0101               	movlb	1	; () banked
 25223  001D4C  6FF1               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25224                           
 25225                           ; BSR set to: 1
 25226                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 25227  001D4E  0E02               	movlw	2
 25228  001D50  6FF0               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 25229                           
 25230                           ;mdm_gsm_gprs.c: 691: break;
 25231  001D52  0012               	return	
 25232  001D54                     
 25233                           ; BSR set to: 1
 25234                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 25235                           
 25236                           ; BSR set to: 1
 25237  001D54  0E0A               	movlw	10
 25238  001D56  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 25239                           
 25240                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 25241  001D58  0E0D               	movlw	13
 25242  001D5A  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 25243                           
 25244                           ; BSR set to: 1
 25245                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 25246  001D5C  0E00               	movlw	low SendSmsSm@UartMessage
 25247  001D5E  0100               	movlb	0	; () banked
 25248  001D60  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25249  001D62  0E01               	movlw	high SendSmsSm@UartMessage
 25250  001D64  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25251  001D66  0E02               	movlw	2
 25252  001D68  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25253  001D6A  0E01               	movlw	1
 25254  001D6C  EC5E  F02F         	call	_Uart_WriteStringLen
 25255                           
 25256                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 25257  001D70  0E03               	movlw	3
 25258  001D72  0101               	movlb	1	; () banked
 25259  001D74  6FF1               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25260                           
 25261                           ;mdm_gsm_gprs.c: 701: break;
 25262  001D76  0012               	return	
 25263  001D78                     
 25264                           ; BSR set to: 1
 25265                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 25266                           
 25267                           ; BSR set to: 1
 25268  001D78  0E3C               	movlw	low _NewStringReceived
 25269  001D7A  0100               	movlb	0	; () banked
 25270  001D7C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25271  001D7E  0E00               	movlw	high _NewStringReceived
 25272  001D80  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25273  001D82  EC2C  F031         	call	_ReceiveEvt	;wreg free
 25274  001D86  0900               	iorlw	0
 25275  001D88  B4D8               	btfsc	status,2,c
 25276  001D8A  0012               	return	
 25277                           
 25278                           ;mdm_gsm_gprs.c: 706: {
 25279                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 25280  001D8C  CC58  FFE8         	movff	_RxBuffer,wreg
 25281  001D90  0A3E               	xorlw	62
 25282  001D92  A4D8               	btfss	status,2,c
 25283  001D94  0012               	return	
 25284                           
 25285                           ;mdm_gsm_gprs.c: 709: {
 25286                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 25287  001D96  0E04               	movlw	4
 25288  001D98  0101               	movlb	1	; () banked
 25289  001D9A  6FF1               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25290                           
 25291                           ; BSR set to: 1
 25292                           ;mdm_gsm_gprs.c: 712: }
 25293                           ;mdm_gsm_gprs.c: 713: }
 25294                           ;mdm_gsm_gprs.c: 714: break;
 25295                           
 25296                           ; BSR set to: 1
 25297  001D9C  0012               	return	
 25298  001D9E                     
 25299                           ; BSR set to: 1
 25300                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 25301                           
 25302                           ; BSR set to: 1
 25303  001D9E  0E72               	movlw	low _MessageText
 25304  001DA0  0100               	movlb	0	; () banked
 25305  001DA2  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25306  001DA4  0E05               	movlw	high _MessageText
 25307  001DA6  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25308  001DA8  0E00               	movlw	low SendSmsSm@UartMessage
 25309  001DAA  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25310  001DAC  0E01               	movlw	high SendSmsSm@UartMessage
 25311  001DAE  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25312  001DB0  C0D3  F081         	movff	_SmsLen,StringCopy@Len
 25313  001DB4  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 25314  001DB6  EC3D  F02A         	call	_StringCopy	;wreg free
 25315                           
 25316                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 25317  001DBA  0100               	movlb	0	; () banked
 25318  001DBC  51D3               	movf	_SmsLen& (0+255),w,b
 25319  001DBE  0D01               	mullw	1
 25320  001DC0  0E00               	movlw	low SendSmsSm@UartMessage
 25321  001DC2  24F3               	addwf	prodl,w,c
 25322  001DC4  6ED9               	movwf	fsr2l,c
 25323  001DC6  0E01               	movlw	high SendSmsSm@UartMessage
 25324  001DC8  20F4               	addwfc	prodh,w,c
 25325  001DCA  6EDA               	movwf	fsr2h,c
 25326  001DCC  0E1A               	movlw	26
 25327  001DCE  6EDF               	movwf	indf2,c
 25328                           
 25329                           ; BSR set to: 0
 25330                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 25331  001DD0  0E00               	movlw	low SendSmsSm@UartMessage
 25332  001DD2  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25333  001DD4  0E01               	movlw	high SendSmsSm@UartMessage
 25334  001DD6  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25335  001DD8  29D3               	incf	_SmsLen& (0+255),w,b
 25336  001DDA  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25337  001DDC  0E01               	movlw	1
 25338  001DDE  EC5E  F02F         	call	_Uart_WriteStringLen
 25339                           
 25340                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 25341  001DE2  0E00               	movlw	0
 25342  001DE4  0101               	movlb	1	; () banked
 25343  001DE6  6FF1               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25344                           
 25345                           ;mdm_gsm_gprs.c: 725: break;
 25346  001DE8  0012               	return	
 25347  001DEA                     
 25348                           ; BSR set to: 1
 25349                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 25350                           
 25351                           ; BSR set to: 1
 25352  001DEA  0EEA               	movlw	low SendSmsSm@SwTimer
 25353  001DEC  0100               	movlb	0	; () banked
 25354  001DEE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25355  001DF0  0E03               	movlw	high SendSmsSm@SwTimer
 25356  001DF2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25357  001DF4  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 25358  001DF8  06E8               	decf	wreg,f,c
 25359  001DFA  A4D8               	btfss	status,2,c
 25360  001DFC  0012               	return	
 25361                           
 25362                           ;mdm_gsm_gprs.c: 730: {
 25363                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 25364  001DFE  C1F0  F1F1         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 25365                           
 25366                           ;mdm_gsm_gprs.c: 738: }
 25367                           
 25368                           ;mdm_gsm_gprs.c: 737: break;
 25369                           
 25370                           ;mdm_gsm_gprs.c: 736: default:
 25371                           
 25372                           ;mdm_gsm_gprs.c: 733: }
 25373                           ;mdm_gsm_gprs.c: 734: break;
 25374  001E02  0012               	return	
 25375  001E04                     l1091:
 25376  001E04  0101               	movlb	1	; () banked
 25377  001E06  51F1               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 25378                           
 25379                           ; Switch size 1, requested type "space"
 25380                           ; Number of cases is 6, Range of values is 0 to 5
 25381                           ; switch strategies available:
 25382                           ; Name         Instructions Cycles
 25383                           ; simple_byte           19    10 (average)
 25384                           ;	Chosen strategy is simple_byte
 25385  001E08  0A00               	xorlw	0	; case 0
 25386  001E0A  B4D8               	btfsc	status,2,c
 25387  001E0C  D73A               	goto	l1092
 25388  001E0E  0A01               	xorlw	1	; case 1
 25389  001E10  B4D8               	btfsc	status,2,c
 25390  001E12  D745               	goto	l1095
 25391  001E14  0A03               	xorlw	3	; case 2
 25392  001E16  B4D8               	btfsc	status,2,c
 25393  001E18  D79D               	goto	l1096
 25394  001E1A  0A01               	xorlw	1	; case 3
 25395  001E1C  B4D8               	btfsc	status,2,c
 25396  001E1E  D7AC               	goto	l1097
 25397  001E20  0A07               	xorlw	7	; case 4
 25398  001E22  B4D8               	btfsc	status,2,c
 25399  001E24  D7BC               	goto	l1100
 25400  001E26  0A01               	xorlw	1	; case 5
 25401  001E28  A4D8               	btfss	status,2,c
 25402                           
 25403                           ; BSR set to: 1
 25404  001E2A  0012               	return	
 25405  001E2C  D7DE               	goto	l1101
 25406  001E2E                     __end_of_SendSmsSm:
 25407                           	opt stack 0
 25408                           tosu	equ	0xFFF
 25409                           tosh	equ	0xFFE
 25410                           tosl	equ	0xFFD
 25411                           pclath	equ	0xFFA
 25412                           tblptru	equ	0xFF8
 25413                           tblptrh	equ	0xFF7
 25414                           tblptrl	equ	0xFF6
 25415                           tablat	equ	0xFF5
 25416                           prodh	equ	0xFF4
 25417                           prodl	equ	0xFF3
 25418                           intcon	equ	0xFF2
 25419                           intcon2	equ	0xFF1
 25420                           intcon3	equ	0xFF0
 25421                           indf0	equ	0xFEF
 25422                           postinc0	equ	0xFEE
 25423                           plusw0	equ	0xFEB
 25424                           fsr0h	equ	0xFEA
 25425                           fsr0l	equ	0xFE9
 25426                           wreg	equ	0xFE8
 25427                           indf1	equ	0xFE7
 25428                           postinc1	equ	0xFE6
 25429                           postdec1	equ	0xFE5
 25430                           fsr1h	equ	0xFE2
 25431                           fsr1l	equ	0xFE1
 25432                           indf2	equ	0xFDF
 25433                           postinc2	equ	0xFDE
 25434                           postdec2	equ	0xFDD
 25435                           plusw2	equ	0xFDB
 25436                           fsr2h	equ	0xFDA
 25437                           fsr2l	equ	0xFD9
 25438                           status	equ	0xFD8
 25439                           
 25440 ;; *************** function _Uart_WriteStringLen *****************
 25441 ;; Defined at:
 25442 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25443 ;; Parameters:    Size  Location     Type
 25444 ;;  Module          1    wreg     unsigned char 
 25445 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 25446 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 25447 ;;  Len             1   34[BANK0 ] unsigned char 
 25448 ;; Auto vars:     Size  Location     Type
 25449 ;;  Module          1   36[BANK0 ] unsigned char 
 25450 ;;  Index           1   35[BANK0 ] unsigned char 
 25451 ;; Return value:  Size  Location     Type
 25452 ;;                  1    wreg      void 
 25453 ;; Registers used:
 25454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25455 ;; Tracked objects:
 25456 ;;		On entry : 0/0
 25457 ;;		On exit  : 0/0
 25458 ;;		Unchanged: 0/0
 25459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25460 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25461 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25463 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25464 ;;Total ram usage:        5 bytes
 25465 ;; Hardware stack levels used:    1
 25466 ;; Hardware stack levels required when called:   12
 25467 ;; This function calls:
 25468 ;;		_UartTxBufferStatus
 25469 ;;		_UartWriteByte
 25470 ;; This function is called by:
 25471 ;;		_SendSmsSm
 25472 ;;		_GsmGprsTerminal
 25473 ;; This function uses a non-reentrant model
 25474 ;;
 25475                           
 25476                           	psect	text120
 25477  005EBC                     __ptext120:
 25478                           	opt stack 0
 25479  005EBC                     _Uart_WriteStringLen:
 25480                           	opt stack 14
 25481                           
 25482                           ;incstack = 0
 25483                           ;Uart_WriteStringLen@Module stored from wreg
 25484  005EBC  0100               	movlb	0	; () banked
 25485  005EBE  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 25486                           
 25487                           ;uart_drv.c: 544: UINT8 Index;
 25488                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 25489  005EC0  0E00               	movlw	0
 25490  005EC2  0100               	movlb	0	; () banked
 25491  005EC4  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 25492  005EC6  D015               	goto	l715
 25493  005EC8                     
 25494                           ; BSR set to: 0
 25495                           ;uart_drv.c: 547: {
 25496                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 25497                           
 25498                           ; BSR set to: 0
 25499  005EC8  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 25500  005ECC  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 25501  005ED0  50DF               	movf	indf2,w,c
 25502  005ED2  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 25503  005ED4  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 25504  005ED6  EC8B  F032         	call	_UartWriteByte
 25505                           
 25506                           ;uart_drv.c: 551: StringToWrite++;
 25507  005EDA  0100               	movlb	0	; () banked
 25508  005EDC  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 25509  005EDE  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 25510  005EE0                     
 25511                           ; BSR set to: 0
 25512                           
 25513                           ; BSR set to: 0
 25514  005EE0  0100               	movlb	0	; () banked
 25515  005EE2  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 25516  005EE4  EC6D  F02D         	call	_UartTxBufferStatus
 25517  005EE8  06E8               	decf	wreg,f,c
 25518  005EEA  B4D8               	btfsc	status,2,c
 25519  005EEC  D7F9               	goto	l718
 25520  005EEE  0100               	movlb	0	; () banked
 25521  005EF0  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 25522  005EF2                     l715:
 25523                           
 25524                           ; BSR set to: 0
 25525                           
 25526                           ; BSR set to: 0
 25527  005EF2  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 25528  005EF4  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 25529  005EF6  B0D8               	btfsc	status,0,c
 25530  005EF8  0012               	return	
 25531  005EFA  D7E6               	goto	l716
 25532  005EFC                     __end_of_Uart_WriteStringLen:
 25533                           	opt stack 0
 25534                           tosu	equ	0xFFF
 25535                           tosh	equ	0xFFE
 25536                           tosl	equ	0xFFD
 25537                           pclath	equ	0xFFA
 25538                           tblptru	equ	0xFF8
 25539                           tblptrh	equ	0xFF7
 25540                           tblptrl	equ	0xFF6
 25541                           tablat	equ	0xFF5
 25542                           prodh	equ	0xFF4
 25543                           prodl	equ	0xFF3
 25544                           intcon	equ	0xFF2
 25545                           intcon2	equ	0xFF1
 25546                           intcon3	equ	0xFF0
 25547                           indf0	equ	0xFEF
 25548                           postinc0	equ	0xFEE
 25549                           plusw0	equ	0xFEB
 25550                           fsr0h	equ	0xFEA
 25551                           fsr0l	equ	0xFE9
 25552                           wreg	equ	0xFE8
 25553                           indf1	equ	0xFE7
 25554                           postinc1	equ	0xFE6
 25555                           postdec1	equ	0xFE5
 25556                           fsr1h	equ	0xFE2
 25557                           fsr1l	equ	0xFE1
 25558                           indf2	equ	0xFDF
 25559                           postinc2	equ	0xFDE
 25560                           postdec2	equ	0xFDD
 25561                           plusw2	equ	0xFDB
 25562                           fsr2h	equ	0xFDA
 25563                           fsr2l	equ	0xFD9
 25564                           status	equ	0xFD8
 25565                           
 25566 ;; *************** function _ModemEvtParser *****************
 25567 ;; Defined at:
 25568 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25569 ;; Parameters:    Size  Location     Type
 25570 ;;		None
 25571 ;; Auto vars:     Size  Location     Type
 25572 ;;  CallReadyStr   10   40[BANK0 ] unsigned char [10]
 25573 ;;  SmsString       5   55[BANK0 ] unsigned char [5]
 25574 ;;  ClipString      5   50[BANK0 ] unsigned char [5]
 25575 ;;  RingString      4   60[BANK0 ] unsigned char [4]
 25576 ;;  CompareIdx      1   65[BANK0 ] unsigned char 
 25577 ;;  Match           1   64[BANK0 ] unsigned char 
 25578 ;; Return value:  Size  Location     Type
 25579 ;;                  1    wreg      void 
 25580 ;; Registers used:
 25581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25582 ;; Tracked objects:
 25583 ;;		On entry : 0/0
 25584 ;;		On exit  : 0/0
 25585 ;;		Unchanged: 0/0
 25586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25588 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25590 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25591 ;;Total ram usage:       26 bytes
 25592 ;; Hardware stack levels used:    1
 25593 ;; Hardware stack levels required when called:   12
 25594 ;; This function calls:
 25595 ;;		_GenerateEvt
 25596 ;;		_ReceiveEvt
 25597 ;;		_StringCompare
 25598 ;;		_StringCopy
 25599 ;;		_Uart_ClearRxBuffer
 25600 ;; This function is called by:
 25601 ;;		_Mdm_MainTask
 25602 ;; This function uses a non-reentrant model
 25603 ;;
 25604                           
 25605                           	psect	text121
 25606  001FB6                     __ptext121:
 25607                           	opt stack 0
 25608  001FB6                     _ModemEvtParser:
 25609                           	opt stack 15
 25610                           
 25611                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 25612                           
 25613                           ; BSR set to: 0
 25614                           ;incstack = 0
 25615  001FB6  C3CB  F09C         	movff	ModemEvtParser@F9106,ModemEvtParser@RingString
 25616  001FBA  C3CC  F09D         	movff	ModemEvtParser@F9106+1,ModemEvtParser@RingString+1
 25617  001FBE  C3CD  F09E         	movff	ModemEvtParser@F9106+2,ModemEvtParser@RingString+2
 25618  001FC2  C3CE  F09F         	movff	ModemEvtParser@F9106+3,ModemEvtParser@RingString+3
 25619                           
 25620                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 25621  001FC6  EE23  F0C6         	lfsr	2,ModemEvtParser@F9108
 25622  001FCA  EE10  F092         	lfsr	1,ModemEvtParser@ClipString
 25623  001FCE  0E04               	movlw	4
 25624  001FD0                     u14251:
 25625  001FD0  CFDB FFE3          	movff	plusw2,plusw1
 25626  001FD4  06E8               	decf	wreg,f,c
 25627  001FD6  E2FC               	bc	u14251
 25628                           
 25629                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 25630  001FD8  EE23  F0C1         	lfsr	2,ModemEvtParser@F9110
 25631  001FDC  EE10  F097         	lfsr	1,ModemEvtParser@SmsString
 25632  001FE0  0E04               	movlw	4
 25633  001FE2                     u14261:
 25634  001FE2  CFDB FFE3          	movff	plusw2,plusw1
 25635  001FE6  06E8               	decf	wreg,f,c
 25636  001FE8  E2FC               	bc	u14261
 25637                           
 25638                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 25639  001FEA  EE23  F0B7         	lfsr	2,ModemEvtParser@F9112
 25640  001FEE  EE10  F088         	lfsr	1,ModemEvtParser@CallReadyString
 25641  001FF2  0E09               	movlw	9
 25642  001FF4                     u14271:
 25643  001FF4  CFDB FFE3          	movff	plusw2,plusw1
 25644  001FF8  06E8               	decf	wreg,f,c
 25645  001FFA  E2FC               	bc	u14271
 25646                           
 25647                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 25648  001FFC  0E00               	movlw	0
 25649  001FFE  0100               	movlb	0	; () banked
 25650  002000  6FA1               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 25651                           
 25652                           ; BSR set to: 0
 25653                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 25654  002002  0E00               	movlw	0
 25655  002004  6FA0               	movwf	ModemEvtParser@Match& (0+255),b
 25656                           
 25657                           ; BSR set to: 0
 25658                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 25659  002006  0E3B               	movlw	low _NewMdmEvtParserRequest
 25660  002008  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25661  00200A  0E00               	movlw	high _NewMdmEvtParserRequest
 25662  00200C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25663  00200E  EC2C  F031         	call	_ReceiveEvt	;wreg free
 25664  002012  0900               	iorlw	0
 25665  002014  B4D8               	btfsc	status,2,c
 25666  002016  0012               	return	
 25667                           
 25668                           ;mdm_gsm_gprs.c: 510: {
 25669                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 25670  002018  0E00               	movlw	0
 25671  00201A  0100               	movlb	0	; () banked
 25672  00201C  6FA1               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 25673  00201E                     l14862:
 25674                           
 25675                           ; BSR set to: 0
 25676  00201E  0E03               	movlw	3
 25677  002020  65A1               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 25678  002022  D074               	goto	l1052
 25679  002024  D083               	goto	u14340
 25680  002026                     
 25681                           ; BSR set to: 0
 25682                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 25683                           
 25684                           ; BSR set to: 0
 25685  002026  0E9C               	movlw	low ModemEvtParser@RingString
 25686  002028  6F7D               	movwf	StringCompare@String1& (0+255),b
 25687  00202A  0E00               	movlw	high ModemEvtParser@RingString
 25688  00202C  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 25689  00202E  0E58               	movlw	low _RxBuffer
 25690  002030  6F7F               	movwf	StringCompare@String2& (0+255),b
 25691  002032  0E0C               	movlw	high _RxBuffer
 25692  002034  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25693  002036  0E00               	movlw	0
 25694  002038  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25695  00203A  0E04               	movlw	4
 25696  00203C  6F81               	movwf	StringCompare@Len& (0+255),b
 25697  00203E  ECA5  F02C         	call	_StringCompare	;wreg free
 25698  002042  0900               	iorlw	0
 25699  002044  B4D8               	btfsc	status,2,c
 25700  002046  D06F               	goto	l1055
 25701                           
 25702                           ;mdm_gsm_gprs.c: 518: {
 25703                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 25704  002048  0EDF               	movlw	low _RingEvent
 25705  00204A  0100               	movlb	0	; () banked
 25706  00204C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25707  00204E  0E00               	movlw	high _RingEvent
 25708  002050  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25709  002052  EC21  F033         	call	_GenerateEvt	;wreg free
 25710  002056  D040               	goto	l14884
 25711  002058                     
 25712                           ; BSR set to: 0
 25713                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 25714                           
 25715                           ; BSR set to: 0
 25716  002058  0E92               	movlw	low ModemEvtParser@ClipString
 25717  00205A  6F7D               	movwf	StringCompare@String1& (0+255),b
 25718  00205C  0E00               	movlw	high ModemEvtParser@ClipString
 25719  00205E  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 25720  002060  0E58               	movlw	low _RxBuffer
 25721  002062  6F7F               	movwf	StringCompare@String2& (0+255),b
 25722  002064  0E0C               	movlw	high _RxBuffer
 25723  002066  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25724  002068  0E00               	movlw	0
 25725  00206A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25726  00206C  0E05               	movlw	5
 25727  00206E  6F81               	movwf	StringCompare@Len& (0+255),b
 25728  002070  ECA5  F02C         	call	_StringCompare	;wreg free
 25729  002074  0900               	iorlw	0
 25730  002076  B4D8               	btfsc	status,2,c
 25731  002078  D056               	goto	l1055
 25732                           
 25733                           ;mdm_gsm_gprs.c: 529: {
 25734                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 25735  00207A  0E60               	movlw	low (_RxBuffer+8)
 25736  00207C  0100               	movlb	0	; () banked
 25737  00207E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25738  002080  0E0C               	movlw	high (_RxBuffer+8)
 25739  002082  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25740  002084  0ECC               	movlw	low _callerNumber
 25741  002086  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25742  002088  0E04               	movlw	high _callerNumber
 25743  00208A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25744  00208C  0E00               	movlw	0
 25745  00208E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 25746  002090  0E0D               	movlw	13
 25747  002092  6F81               	movwf	StringCopy@Len& (0+255),b
 25748  002094  EC3D  F02A         	call	_StringCopy	;wreg free
 25749                           
 25750                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 25751  002098  0EDE               	movlw	low _ClipEvent
 25752  00209A  0100               	movlb	0	; () banked
 25753  00209C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25754  00209E  0E00               	movlw	high _ClipEvent
 25755  0020A0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25756  0020A2  EC21  F033         	call	_GenerateEvt	;wreg free
 25757  0020A6  D018               	goto	l14884
 25758  0020A8                     
 25759                           ; BSR set to: 0
 25760                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 25761                           
 25762                           ; BSR set to: 0
 25763  0020A8  0E97               	movlw	low ModemEvtParser@SmsString
 25764  0020AA  6F7D               	movwf	StringCompare@String1& (0+255),b
 25765  0020AC  0E00               	movlw	high ModemEvtParser@SmsString
 25766  0020AE  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 25767  0020B0  0E58               	movlw	low _RxBuffer
 25768  0020B2  6F7F               	movwf	StringCompare@String2& (0+255),b
 25769  0020B4  0E0C               	movlw	high _RxBuffer
 25770  0020B6  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25771  0020B8  0E00               	movlw	0
 25772  0020BA  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25773  0020BC  0E05               	movlw	5
 25774  0020BE  6F81               	movwf	StringCompare@Len& (0+255),b
 25775  0020C0  ECA5  F02C         	call	_StringCompare	;wreg free
 25776  0020C4  0900               	iorlw	0
 25777  0020C6  B4D8               	btfsc	status,2,c
 25778  0020C8  D02E               	goto	l1055
 25779                           
 25780                           ;mdm_gsm_gprs.c: 541: {
 25781                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 25782  0020CA  0EDD               	movlw	low _SmsEvent
 25783  0020CC  0100               	movlb	0	; () banked
 25784  0020CE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25785  0020D0  0E00               	movlw	high _SmsEvent
 25786  0020D2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25787  0020D4  EC21  F033         	call	_GenerateEvt	;wreg free
 25788  0020D8                     l14884:
 25789                           
 25790                           ;mdm_gsm_gprs.c: 545: Match = 1;
 25791  0020D8  0E01               	movlw	1
 25792  0020DA  0100               	movlb	0	; () banked
 25793  0020DC  D015               	goto	L37
 25794  0020DE                     
 25795                           ; BSR set to: 0
 25796                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 25797                           
 25798                           ; BSR set to: 0
 25799  0020DE  0E88               	movlw	low ModemEvtParser@CallReadyString
 25800  0020E0  6F7D               	movwf	StringCompare@String1& (0+255),b
 25801  0020E2  0E00               	movlw	high ModemEvtParser@CallReadyString
 25802  0020E4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 25803  0020E6  0E58               	movlw	low _RxBuffer
 25804  0020E8  6F7F               	movwf	StringCompare@String2& (0+255),b
 25805  0020EA  0E0C               	movlw	high _RxBuffer
 25806  0020EC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25807  0020EE  0E00               	movlw	0
 25808  0020F0  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25809  0020F2  0E0A               	movlw	10
 25810  0020F4  6F81               	movwf	StringCompare@Len& (0+255),b
 25811  0020F6  ECA5  F02C         	call	_StringCompare	;wreg free
 25812  0020FA  0900               	iorlw	0
 25813  0020FC  B4D8               	btfsc	status,2,c
 25814  0020FE  D013               	goto	l1055
 25815                           
 25816                           ;mdm_gsm_gprs.c: 552: {
 25817                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 25818  002100  0E02               	movlw	2
 25819  002102  0100               	movlb	0	; () banked
 25820  002104  6FD1               	movwf	_MdmStatus& (0+255),b
 25821                           
 25822                           ;mdm_gsm_gprs.c: 556: Match = 1;
 25823  002106  0E01               	movlw	1
 25824  002108                     L37:
 25825  002108  6FA0               	movwf	ModemEvtParser@Match& (0+255),b
 25826                           
 25827                           ; BSR set to: 0
 25828                           ;mdm_gsm_gprs.c: 562: }
 25829                           
 25830                           ; BSR set to: 0
 25831                           ;mdm_gsm_gprs.c: 561: break;
 25832                           
 25833                           ;mdm_gsm_gprs.c: 560: default:
 25834                           
 25835                           ; BSR set to: 0
 25836                           ;mdm_gsm_gprs.c: 557: }
 25837                           ;mdm_gsm_gprs.c: 558: break;
 25838  00210A  D00D               	goto	l1055
 25839  00210C                     l1052:
 25840                           
 25841                           ; BSR set to: 0
 25842                           
 25843                           ; BSR set to: 0
 25844  00210C  51A1               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 25845                           
 25846                           ; Switch size 1, requested type "space"
 25847                           ; Number of cases is 4, Range of values is 0 to 3
 25848                           ; switch strategies available:
 25849                           ; Name         Instructions Cycles
 25850                           ; simple_byte           13     7 (average)
 25851                           ;	Chosen strategy is simple_byte
 25852  00210E  0A00               	xorlw	0	; case 0
 25853  002110  B4D8               	btfsc	status,2,c
 25854  002112  D789               	goto	l1053
 25855  002114  0A01               	xorlw	1	; case 1
 25856  002116  B4D8               	btfsc	status,2,c
 25857  002118  D7C7               	goto	l1058
 25858  00211A  0A03               	xorlw	3	; case 2
 25859  00211C  B4D8               	btfsc	status,2,c
 25860  00211E  D7DF               	goto	l1060
 25861  002120  0A01               	xorlw	1	; case 3
 25862  002122  B4D8               	btfsc	status,2,c
 25863  002124  D799               	goto	l1056
 25864  002126                     l1055:
 25865                           
 25866                           ; BSR set to: 0
 25867  002126  0100               	movlb	0	; () banked
 25868  002128  2BA1               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 25869  00212A  D779               	goto	l14862
 25870  00212C                     u14340:
 25871                           
 25872                           ; BSR set to: 0
 25873                           ;mdm_gsm_gprs.c: 563: }
 25874                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 25875                           
 25876                           ; BSR set to: 0
 25877  00212C  05A0               	decf	ModemEvtParser@Match& (0+255),w,b
 25878  00212E  A4D8               	btfss	status,2,c
 25879  002130  0012               	return	
 25880                           
 25881                           ; BSR set to: 0
 25882                           ;mdm_gsm_gprs.c: 567: {
 25883                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 25884  002132  EC69  F030         	call	_Uart_ClearRxBuffer	;wreg free
 25885  002136  0012               	return	
 25886  002138                     __end_of_ModemEvtParser:
 25887                           	opt stack 0
 25888                           tosu	equ	0xFFF
 25889                           tosh	equ	0xFFE
 25890                           tosl	equ	0xFFD
 25891                           pclath	equ	0xFFA
 25892                           tblptru	equ	0xFF8
 25893                           tblptrh	equ	0xFF7
 25894                           tblptrl	equ	0xFF6
 25895                           tablat	equ	0xFF5
 25896                           prodh	equ	0xFF4
 25897                           prodl	equ	0xFF3
 25898                           intcon	equ	0xFF2
 25899                           intcon2	equ	0xFF1
 25900                           intcon3	equ	0xFF0
 25901                           indf0	equ	0xFEF
 25902                           postinc0	equ	0xFEE
 25903                           plusw0	equ	0xFEB
 25904                           fsr0h	equ	0xFEA
 25905                           fsr0l	equ	0xFE9
 25906                           wreg	equ	0xFE8
 25907                           indf1	equ	0xFE7
 25908                           postinc1	equ	0xFE6
 25909                           postdec1	equ	0xFE5
 25910                           plusw1	equ	0xFE3
 25911                           fsr1h	equ	0xFE2
 25912                           fsr1l	equ	0xFE1
 25913                           indf2	equ	0xFDF
 25914                           postinc2	equ	0xFDE
 25915                           postdec2	equ	0xFDD
 25916                           plusw2	equ	0xFDB
 25917                           fsr2h	equ	0xFDA
 25918                           fsr2l	equ	0xFD9
 25919                           status	equ	0xFD8
 25920                           
 25921 ;; *************** function _Uart_ClearRxBuffer *****************
 25922 ;; Defined at:
 25923 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25924 ;; Parameters:    Size  Location     Type
 25925 ;;		None
 25926 ;; Auto vars:     Size  Location     Type
 25927 ;;  Index           2   29[BANK0 ] unsigned short 
 25928 ;; Return value:  Size  Location     Type
 25929 ;;                  1    wreg      void 
 25930 ;; Registers used:
 25931 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25932 ;; Tracked objects:
 25933 ;;		On entry : 0/0
 25934 ;;		On exit  : 0/0
 25935 ;;		Unchanged: 0/0
 25936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25938 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25940 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25941 ;;Total ram usage:        2 bytes
 25942 ;; Hardware stack levels used:    1
 25943 ;; Hardware stack levels required when called:   11
 25944 ;; This function calls:
 25945 ;;		Nothing
 25946 ;; This function is called by:
 25947 ;;		_ModemEvtParser
 25948 ;; This function uses a non-reentrant model
 25949 ;;
 25950                           
 25951                           	psect	text122
 25952  0060D2                     __ptext122:
 25953                           	opt stack 0
 25954  0060D2                     _Uart_ClearRxBuffer:
 25955                           	opt stack 15
 25956                           
 25957                           ;uart_drv.c: 567: UINT16 Index = 0;
 25958                           
 25959                           ;incstack = 0
 25960  0060D2  0E00               	movlw	0
 25961  0060D4  0100               	movlb	0	; () banked
 25962  0060D6  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 25963  0060D8  0E00               	movlw	0
 25964  0060DA  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 25965                           
 25966                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 25967  0060DC  0E00               	movlw	0
 25968  0060DE  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 25969  0060E0  0E00               	movlw	0
 25970  0060E2  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 25971  0060E4                     l14074:
 25972                           
 25973                           ; BSR set to: 0
 25974  0060E4  0E90               	movlw	144
 25975  0060E6  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 25976  0060E8  0E01               	movlw	1
 25977  0060EA  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 25978  0060EC  B0D8               	btfsc	status,0,c
 25979  0060EE  0012               	return	
 25980                           
 25981                           ; BSR set to: 0
 25982                           ;uart_drv.c: 571: {
 25983                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 25984                           
 25985                           ; BSR set to: 0
 25986                           
 25987                           ; BSR set to: 0
 25988  0060F0  0E58               	movlw	low _RxBuffer
 25989  0060F2  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 25990  0060F4  6ED9               	movwf	fsr2l,c
 25991  0060F6  0E0C               	movlw	high _RxBuffer
 25992  0060F8  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 25993  0060FA  6EDA               	movwf	fsr2h,c
 25994  0060FC  0E00               	movlw	0
 25995  0060FE  6EDF               	movwf	indf2,c
 25996                           
 25997                           ; BSR set to: 0
 25998  006100  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 25999  006102  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 26000  006104  D7EF               	goto	l14074
 26001  006106                     __end_of_Uart_ClearRxBuffer:
 26002                           	opt stack 0
 26003                           tosu	equ	0xFFF
 26004                           tosh	equ	0xFFE
 26005                           tosl	equ	0xFFD
 26006                           pclath	equ	0xFFA
 26007                           tblptru	equ	0xFF8
 26008                           tblptrh	equ	0xFF7
 26009                           tblptrl	equ	0xFF6
 26010                           tablat	equ	0xFF5
 26011                           prodh	equ	0xFF4
 26012                           prodl	equ	0xFF3
 26013                           intcon	equ	0xFF2
 26014                           intcon2	equ	0xFF1
 26015                           intcon3	equ	0xFF0
 26016                           indf0	equ	0xFEF
 26017                           postinc0	equ	0xFEE
 26018                           plusw0	equ	0xFEB
 26019                           fsr0h	equ	0xFEA
 26020                           fsr0l	equ	0xFE9
 26021                           wreg	equ	0xFE8
 26022                           indf1	equ	0xFE7
 26023                           postinc1	equ	0xFE6
 26024                           postdec1	equ	0xFE5
 26025                           plusw1	equ	0xFE3
 26026                           fsr1h	equ	0xFE2
 26027                           fsr1l	equ	0xFE1
 26028                           indf2	equ	0xFDF
 26029                           postinc2	equ	0xFDE
 26030                           postdec2	equ	0xFDD
 26031                           plusw2	equ	0xFDB
 26032                           fsr2h	equ	0xFDA
 26033                           fsr2l	equ	0xFD9
 26034                           status	equ	0xFD8
 26035                           
 26036 ;; *************** function _StringCompare *****************
 26037 ;; Defined at:
 26038 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 26039 ;; Parameters:    Size  Location     Type
 26040 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 26041 ;;		 -> smsText(20), callerNumber(13), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 26042 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 26043 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 26044 ;;		 -> isNumberInMemory@readBuffer(13), MyApp_Task@cmdAddNumber(4), parseCommand@deleteNumberCmd(3), parseCommand@addNu
      +mberCmd(3), 
 26045 ;;		 -> RxBuffer(400), 
 26046 ;;  Len             2   33[BANK0 ] unsigned short 
 26047 ;; Auto vars:     Size  Location     Type
 26048 ;;  Index           2   38[BANK0 ] unsigned short 
 26049 ;;  Result          1   37[BANK0 ] unsigned char 
 26050 ;; Return value:  Size  Location     Type
 26051 ;;                  1    wreg      unsigned char 
 26052 ;; Registers used:
 26053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26054 ;; Tracked objects:
 26055 ;;		On entry : 0/0
 26056 ;;		On exit  : 0/0
 26057 ;;		Unchanged: 0/0
 26058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26059 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26060 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26061 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26062 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26063 ;;Total ram usage:       11 bytes
 26064 ;; Hardware stack levels used:    1
 26065 ;; Hardware stack levels required when called:   11
 26066 ;; This function calls:
 26067 ;;		Nothing
 26068 ;; This function is called by:
 26069 ;;		_ModemEvtParser
 26070 ;;		_parseCommand
 26071 ;;		_MyApp_Task
 26072 ;;		_isNumberInMemory
 26073 ;; This function uses a non-reentrant model
 26074 ;;
 26075                           
 26076                           	psect	text123
 26077  00594A                     __ptext123:
 26078                           	opt stack 0
 26079  00594A                     _StringCompare:
 26080                           	opt stack 15
 26081                           
 26082                           ;sf.c: 77: UINT16 Index = 0;
 26083                           
 26084                           ; BSR set to: 0
 26085                           ;incstack = 0
 26086  00594A  0E00               	movlw	0
 26087  00594C  0100               	movlb	0	; () banked
 26088  00594E  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26089  005950  0E00               	movlw	0
 26090  005952  6F86               	movwf	StringCompare@Index& (0+255),b
 26091                           
 26092                           ;sf.c: 78: UINT8 Result = 1;
 26093  005954  0E01               	movlw	1
 26094  005956  6F85               	movwf	StringCompare@Result& (0+255),b
 26095                           
 26096                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 26097  005958  0E00               	movlw	0
 26098  00595A  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26099  00595C  0E00               	movlw	0
 26100  00595E  6F86               	movwf	StringCompare@Index& (0+255),b
 26101  005960  D015               	goto	l2237
 26102  005962                     
 26103                           ; BSR set to: 0
 26104                           ;sf.c: 82: {
 26105                           ;sf.c: 83: if (String1[Index] != String2[Index])
 26106                           
 26107                           ; BSR set to: 0
 26108  005962  5186               	movf	StringCompare@Index& (0+255),w,b
 26109  005964  257F               	addwf	StringCompare@String2& (0+255),w,b
 26110  005966  6ED9               	movwf	fsr2l,c
 26111  005968  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26112  00596A  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 26113  00596C  6EDA               	movwf	fsr2h,c
 26114  00596E  5186               	movf	StringCompare@Index& (0+255),w,b
 26115  005970  257D               	addwf	StringCompare@String1& (0+255),w,b
 26116  005972  6EE1               	movwf	fsr1l,c
 26117  005974  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26118  005976  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 26119  005978  6EE2               	movwf	fsr1h,c
 26120  00597A  50DE               	movf	postinc2,w,c
 26121  00597C  18E6               	xorwf	postinc1,w,c
 26122  00597E  B4D8               	btfsc	status,2,c
 26123  005980  D003               	goto	l2239
 26124                           
 26125                           ; BSR set to: 0
 26126                           ;sf.c: 84: {
 26127                           ;sf.c: 85: Result = 0;
 26128  005982  0E00               	movlw	0
 26129  005984  6F85               	movwf	StringCompare@Result& (0+255),b
 26130                           
 26131                           ;sf.c: 86: break;
 26132  005986  D008               	goto	u13220
 26133  005988                     l2239:
 26134                           
 26135                           ; BSR set to: 0
 26136                           
 26137                           ; BSR set to: 0
 26138  005988  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 26139  00598A  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 26140  00598C                     l2237:
 26141                           
 26142                           ; BSR set to: 0
 26143                           
 26144                           ; BSR set to: 0
 26145  00598C  5181               	movf	StringCompare@Len& (0+255),w,b
 26146  00598E  5D86               	subwf	StringCompare@Index& (0+255),w,b
 26147  005990  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 26148  005992  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 26149  005994  A0D8               	btfss	status,0,c
 26150  005996  D7E5               	goto	l2238
 26151  005998                     u13220:
 26152                           
 26153                           ; BSR set to: 0
 26154                           ;sf.c: 87: }
 26155                           ;sf.c: 88: }
 26156                           ;sf.c: 91: return Result;
 26157                           
 26158                           ; BSR set to: 0
 26159  005998  5185               	movf	StringCompare@Result& (0+255),w,b
 26160  00599A  0012               	return	
 26161  00599C                     __end_of_StringCompare:
 26162                           	opt stack 0
 26163                           tosu	equ	0xFFF
 26164                           tosh	equ	0xFFE
 26165                           tosl	equ	0xFFD
 26166                           pclath	equ	0xFFA
 26167                           tblptru	equ	0xFF8
 26168                           tblptrh	equ	0xFF7
 26169                           tblptrl	equ	0xFF6
 26170                           tablat	equ	0xFF5
 26171                           prodh	equ	0xFF4
 26172                           prodl	equ	0xFF3
 26173                           intcon	equ	0xFF2
 26174                           intcon2	equ	0xFF1
 26175                           intcon3	equ	0xFF0
 26176                           indf0	equ	0xFEF
 26177                           postinc0	equ	0xFEE
 26178                           plusw0	equ	0xFEB
 26179                           fsr0h	equ	0xFEA
 26180                           fsr0l	equ	0xFE9
 26181                           wreg	equ	0xFE8
 26182                           indf1	equ	0xFE7
 26183                           postinc1	equ	0xFE6
 26184                           postdec1	equ	0xFE5
 26185                           plusw1	equ	0xFE3
 26186                           fsr1h	equ	0xFE2
 26187                           fsr1l	equ	0xFE1
 26188                           indf2	equ	0xFDF
 26189                           postinc2	equ	0xFDE
 26190                           postdec2	equ	0xFDD
 26191                           plusw2	equ	0xFDB
 26192                           fsr2h	equ	0xFDA
 26193                           fsr2l	equ	0xFD9
 26194                           status	equ	0xFD8
 26195                           
 26196 ;; *************** function _GetSmsSm *****************
 26197 ;; Defined at:
 26198 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26199 ;; Parameters:    Size  Location     Type
 26200 ;;		None
 26201 ;; Auto vars:     Size  Location     Type
 26202 ;;		None
 26203 ;; Return value:  Size  Location     Type
 26204 ;;                  1    wreg      void 
 26205 ;; Registers used:
 26206 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26207 ;; Tracked objects:
 26208 ;;		On entry : 0/0
 26209 ;;		On exit  : 0/0
 26210 ;;		Unchanged: 0/0
 26211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26216 ;;Total ram usage:        0 bytes
 26217 ;; Hardware stack levels used:    1
 26218 ;; Hardware stack levels required when called:   13
 26219 ;; This function calls:
 26220 ;;		_ClearBuffer
 26221 ;;		_GenerateEvt
 26222 ;;		_ReceiveEvt
 26223 ;;		_StringCopy
 26224 ;;		_Uart_WriteConstString
 26225 ;; This function is called by:
 26226 ;;		_Mdm_MainTask
 26227 ;; This function uses a non-reentrant model
 26228 ;;
 26229                           
 26230                           	psect	text124
 26231  002D18                     __ptext124:
 26232                           	opt stack 0
 26233  002D18                     _GetSmsSm:
 26234                           	opt stack 14
 26235                           
 26236                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 26237                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 26238                           
 26239                           ; BSR set to: 0
 26240                           ;incstack = 0
 26241  002D18  0E03               	movlw	3
 26242  002D1A  0100               	movlb	0	; () banked
 26243  002D1C  19D1               	xorwf	_MdmStatus& (0+255),w,b
 26244  002D1E  A4D8               	btfss	status,2,c
 26245  002D20  0012               	return	
 26246  002D22  D084               	goto	l1070
 26247  002D24                     
 26248                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 26249                           
 26250                           ; BSR set to: 0
 26251  002D24  0EDC               	movlw	low _GetSmsText
 26252  002D26  0100               	movlb	0	; () banked
 26253  002D28  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26254  002D2A  0E00               	movlw	high _GetSmsText
 26255  002D2C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26256  002D2E  EC2C  F031         	call	_ReceiveEvt	;wreg free
 26257  002D32  0900               	iorlw	0
 26258  002D34  B4D8               	btfsc	status,2,c
 26259  002D36  0012               	return	
 26260                           
 26261                           ;mdm_gsm_gprs.c: 596: {
 26262                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 26263  002D38  0E01               	movlw	1
 26264  002D3A  0101               	movlb	1	; () banked
 26265  002D3C  6FF2               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26266                           
 26267                           ; BSR set to: 1
 26268                           ;mdm_gsm_gprs.c: 599: }
 26269                           ;mdm_gsm_gprs.c: 600: break;
 26270  002D3E  0012               	return	
 26271  002D40                     
 26272                           ; BSR set to: 1
 26273                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 26274                           
 26275                           ; BSR set to: 1
 26276  002D40  0EC2               	movlw	low STR_4
 26277  002D42  0100               	movlb	0	; () banked
 26278  002D44  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26279  002D46  0EFF               	movlw	high STR_4
 26280  002D48  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26281  002D4A  0E01               	movlw	1
 26282  002D4C  EC1C  F02F         	call	_Uart_WriteConstString
 26283                           
 26284                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 26285  002D50  0E02               	movlw	2
 26286  002D52  0101               	movlb	1	; () banked
 26287  002D54  6FF2               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26288                           
 26289                           ;mdm_gsm_gprs.c: 607: break;
 26290  002D56  0012               	return	
 26291  002D58                     
 26292                           ; BSR set to: 1
 26293                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 26294                           
 26295                           ; BSR set to: 1
 26296  002D58  0E3C               	movlw	low _NewStringReceived
 26297  002D5A  0100               	movlb	0	; () banked
 26298  002D5C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26299  002D5E  0E00               	movlw	high _NewStringReceived
 26300  002D60  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26301  002D62  EC2C  F031         	call	_ReceiveEvt	;wreg free
 26302  002D66  0900               	iorlw	0
 26303  002D68  B4D8               	btfsc	status,2,c
 26304  002D6A  0012               	return	
 26305                           
 26306                           ;mdm_gsm_gprs.c: 612: {
 26307                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 26308  002D6C  CC58  FFE8         	movff	_RxBuffer,wreg
 26309  002D70  0A2B               	xorlw	43
 26310  002D72  A4D8               	btfss	status,2,c
 26311  002D74  0012               	return	
 26312  002D76  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26313  002D7A  0A43               	xorlw	67
 26314  002D7C  A4D8               	btfss	status,2,c
 26315  002D7E  0012               	return	
 26316  002D80  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 26317  002D84  0A4D               	xorlw	77
 26318  002D86  A4D8               	btfss	status,2,c
 26319  002D88  0012               	return	
 26320                           
 26321                           ;mdm_gsm_gprs.c: 614: {
 26322                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 26323  002D8A  0E00               	movlw	low _Mdm_SmsRx
 26324  002D8C  0100               	movlb	0	; () banked
 26325  002D8E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26326  002D90  0E07               	movlw	high _Mdm_SmsRx
 26327  002D92  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26328  002D94  0E00               	movlw	0
 26329  002D96  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26330  002D98  0E50               	movlw	80
 26331  002D9A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26332  002D9C  EC4E  F030         	call	_ClearBuffer	;wreg free
 26333                           
 26334                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 26335  002DA0  0E58               	movlw	low _RxBuffer
 26336  002DA2  0100               	movlb	0	; () banked
 26337  002DA4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26338  002DA6  0E0C               	movlw	high _RxBuffer
 26339  002DA8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26340  002DAA  0E00               	movlw	low _Mdm_SmsRx
 26341  002DAC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26342  002DAE  0E07               	movlw	high _Mdm_SmsRx
 26343  002DB0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26344  002DB2  C0C2  F081         	movff	_RxLen,StringCopy@Len
 26345  002DB6  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 26346  002DBA  EC3D  F02A         	call	_StringCopy	;wreg free
 26347                           
 26348                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 26349  002DBE  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 26350                           
 26351                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 26352  002DC2  0E03               	movlw	3
 26353  002DC4  0101               	movlb	1	; () banked
 26354  002DC6  6FF2               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26355                           
 26356                           ; BSR set to: 1
 26357                           ;mdm_gsm_gprs.c: 622: }
 26358                           ;mdm_gsm_gprs.c: 623: }
 26359                           ;mdm_gsm_gprs.c: 624: break;
 26360                           
 26361                           ; BSR set to: 1
 26362  002DC8  0012               	return	
 26363  002DCA                     
 26364                           ; BSR set to: 1
 26365                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 26366                           
 26367                           ; BSR set to: 1
 26368  002DCA  0E3C               	movlw	low _NewStringReceived
 26369  002DCC  0100               	movlb	0	; () banked
 26370  002DCE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26371  002DD0  0E00               	movlw	high _NewStringReceived
 26372  002DD2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26373  002DD4  EC2C  F031         	call	_ReceiveEvt	;wreg free
 26374  002DD8  0900               	iorlw	0
 26375  002DDA  B4D8               	btfsc	status,2,c
 26376  002DDC  0012               	return	
 26377                           
 26378                           ;mdm_gsm_gprs.c: 629: {
 26379                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 26380  002DDE  0E50               	movlw	low (_Mdm_SmsRx+80)
 26381  002DE0  0100               	movlb	0	; () banked
 26382  002DE2  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26383  002DE4  0E07               	movlw	high (_Mdm_SmsRx+80)
 26384  002DE6  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26385  002DE8  0E00               	movlw	0
 26386  002DEA  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26387  002DEC  0E14               	movlw	20
 26388  002DEE  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26389  002DF0  EC4E  F030         	call	_ClearBuffer	;wreg free
 26390                           
 26391                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 26392  002DF4  0E58               	movlw	low _RxBuffer
 26393  002DF6  0100               	movlb	0	; () banked
 26394  002DF8  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26395  002DFA  0E0C               	movlw	high _RxBuffer
 26396  002DFC  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26397  002DFE  0E50               	movlw	low (_Mdm_SmsRx+80)
 26398  002E00  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26399  002E02  0E07               	movlw	high (_Mdm_SmsRx+80)
 26400  002E04  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26401  002E06  C0C2  F081         	movff	_RxLen,StringCopy@Len
 26402  002E0A  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 26403  002E0E  EC3D  F02A         	call	_StringCopy	;wreg free
 26404                           
 26405                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 26406  002E12  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 26407                           
 26408                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 26409  002E16  0E00               	movlw	0
 26410  002E18  0101               	movlb	1	; () banked
 26411  002E1A  6FF2               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26412                           
 26413                           ; BSR set to: 1
 26414                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 26415  002E1C  0EDB               	movlw	low _SmsTxtReady
 26416  002E1E  0100               	movlb	0	; () banked
 26417  002E20  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26418  002E22  0E00               	movlw	high _SmsTxtReady
 26419  002E24  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26420  002E26  EC21  F033         	call	_GenerateEvt	;wreg free
 26421                           
 26422                           ;mdm_gsm_gprs.c: 644: }
 26423                           
 26424                           ;mdm_gsm_gprs.c: 643: break;
 26425                           
 26426                           ;mdm_gsm_gprs.c: 642: default:
 26427                           
 26428                           ;mdm_gsm_gprs.c: 639: }
 26429                           ;mdm_gsm_gprs.c: 640: break;
 26430  002E2A  0012               	return	
 26431  002E2C                     l1070:
 26432  002E2C  0101               	movlb	1	; () banked
 26433  002E2E  51F2               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 26434                           
 26435                           ; Switch size 1, requested type "space"
 26436                           ; Number of cases is 4, Range of values is 0 to 3
 26437                           ; switch strategies available:
 26438                           ; Name         Instructions Cycles
 26439                           ; simple_byte           13     7 (average)
 26440                           ;	Chosen strategy is simple_byte
 26441  002E30  0A00               	xorlw	0	; case 0
 26442  002E32  B4D8               	btfsc	status,2,c
 26443  002E34  D777               	goto	l1071
 26444  002E36  0A01               	xorlw	1	; case 1
 26445  002E38  B4D8               	btfsc	status,2,c
 26446  002E3A  D782               	goto	l1074
 26447  002E3C  0A03               	xorlw	3	; case 2
 26448  002E3E  B4D8               	btfsc	status,2,c
 26449  002E40  D78B               	goto	l1075
 26450  002E42  0A01               	xorlw	1	; case 3
 26451  002E44  A4D8               	btfss	status,2,c
 26452                           
 26453                           ; BSR set to: 1
 26454  002E46  0012               	return	
 26455  002E48  D7C0               	goto	l1078
 26456  002E4A                     __end_of_GetSmsSm:
 26457                           	opt stack 0
 26458                           tosu	equ	0xFFF
 26459                           tosh	equ	0xFFE
 26460                           tosl	equ	0xFFD
 26461                           pclath	equ	0xFFA
 26462                           tblptru	equ	0xFF8
 26463                           tblptrh	equ	0xFF7
 26464                           tblptrl	equ	0xFF6
 26465                           tablat	equ	0xFF5
 26466                           prodh	equ	0xFF4
 26467                           prodl	equ	0xFF3
 26468                           intcon	equ	0xFF2
 26469                           intcon2	equ	0xFF1
 26470                           intcon3	equ	0xFF0
 26471                           indf0	equ	0xFEF
 26472                           postinc0	equ	0xFEE
 26473                           plusw0	equ	0xFEB
 26474                           fsr0h	equ	0xFEA
 26475                           fsr0l	equ	0xFE9
 26476                           wreg	equ	0xFE8
 26477                           indf1	equ	0xFE7
 26478                           postinc1	equ	0xFE6
 26479                           postdec1	equ	0xFE5
 26480                           plusw1	equ	0xFE3
 26481                           fsr1h	equ	0xFE2
 26482                           fsr1l	equ	0xFE1
 26483                           indf2	equ	0xFDF
 26484                           postinc2	equ	0xFDE
 26485                           postdec2	equ	0xFDD
 26486                           plusw2	equ	0xFDB
 26487                           fsr2h	equ	0xFDA
 26488                           fsr2l	equ	0xFD9
 26489                           status	equ	0xFD8
 26490                           
 26491 ;; *************** function _ConfigureModem *****************
 26492 ;; Defined at:
 26493 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26494 ;; Parameters:    Size  Location     Type
 26495 ;;		None
 26496 ;; Auto vars:     Size  Location     Type
 26497 ;;		None
 26498 ;; Return value:  Size  Location     Type
 26499 ;;                  1    wreg      void 
 26500 ;; Registers used:
 26501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26502 ;; Tracked objects:
 26503 ;;		On entry : 0/0
 26504 ;;		On exit  : 0/0
 26505 ;;		Unchanged: 0/0
 26506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26511 ;;Total ram usage:        0 bytes
 26512 ;; Hardware stack levels used:    1
 26513 ;; Hardware stack levels required when called:   14
 26514 ;; This function calls:
 26515 ;;		_GenerateEvt
 26516 ;;		_UartSetConfigLow
 26517 ;;		_Uart_InitUartModule
 26518 ;;		_Uart_WriteConstString
 26519 ;; This function is called by:
 26520 ;;		_Mdm_MainTask
 26521 ;; This function uses a non-reentrant model
 26522 ;;
 26523                           
 26524                           	psect	text125
 26525  003748                     __ptext125:
 26526                           	opt stack 0
 26527  003748                     _ConfigureModem:
 26528                           	opt stack 13
 26529                           
 26530                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 26531                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 26532                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 26533                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 26534                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 26535                           
 26536                           ;incstack = 0
 26537  003748  D05A               	goto	l1027
 26538  00374A                     
 26539                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 26540  00374A  0E02               	movlw	2
 26541  00374C  0100               	movlb	0	; () banked
 26542  00374E  19D1               	xorwf	_MdmStatus& (0+255),w,b
 26543  003750  A4D8               	btfss	status,2,c
 26544  003752  0012               	return	
 26545                           
 26546                           ; BSR set to: 0
 26547                           ;mdm_gsm_gprs.c: 431: {
 26548                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 26549  003754  0E01               	movlw	1
 26550  003756  0101               	movlb	1	; () banked
 26551  003758  6FF4               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26552                           
 26553                           ; BSR set to: 1
 26554                           ;mdm_gsm_gprs.c: 434: }
 26555                           ;mdm_gsm_gprs.c: 435: break;
 26556  00375A  0012               	return	
 26557  00375C                     
 26558                           ; BSR set to: 1
 26559                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 26560                           
 26561                           ; BSR set to: 1
 26562  00375C  0E75               	movlw	low STR_2
 26563  00375E  0100               	movlb	0	; () banked
 26564  003760  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26565  003762  0EFF               	movlw	high STR_2
 26566  003764  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26567  003766  0E01               	movlw	1
 26568  003768  EC1C  F02F         	call	_Uart_WriteConstString
 26569                           
 26570                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 26571  00376C  EC52  F02B         	call	_UartSetConfigLow	;wreg free
 26572                           
 26573                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 26574  003770  0E28               	movlw	low _UartConfig
 26575  003772  0100               	movlb	0	; () banked
 26576  003774  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 26577  003776  0E03               	movlw	high _UartConfig
 26578  003778  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 26579  00377A  0E01               	movlw	1
 26580  00377C  EC5E  F005         	call	_Uart_InitUartModule
 26581                           
 26582                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 26583  003780  0E03               	movlw	3
 26584  003782  0102               	movlb	2	; () banked
 26585  003784  6FD8               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 26586  003786  0EE8               	movlw	232
 26587  003788  6FD7               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 26588                           
 26589                           ; BSR set to: 2
 26590                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 26591  00378A  0E02               	movlw	2
 26592  00378C  0101               	movlb	1	; () banked
 26593  00378E  6FF3               	movwf	ConfigureModem@NextState& (0+255),b
 26594                           
 26595                           ; BSR set to: 1
 26596                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 26597  003790  0E04               	movlw	4
 26598  003792  6FF4               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26599                           
 26600                           ;mdm_gsm_gprs.c: 449: break;
 26601  003794  0012               	return	
 26602  003796                     
 26603                           ; BSR set to: 1
 26604                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 26605                           
 26606                           ; BSR set to: 1
 26607  003796  0EDF               	movlw	low STR_3
 26608  003798  0100               	movlb	0	; () banked
 26609  00379A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26610  00379C  0EFF               	movlw	high STR_3
 26611  00379E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26612  0037A0  0E01               	movlw	1
 26613  0037A2  EC1C  F02F         	call	_Uart_WriteConstString
 26614                           
 26615                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 26616  0037A6  0E03               	movlw	3
 26617  0037A8  0102               	movlb	2	; () banked
 26618  0037AA  6FD8               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 26619  0037AC  0EE8               	movlw	232
 26620  0037AE  6FD7               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 26621                           
 26622                           ; BSR set to: 2
 26623                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 26624  0037B0  0E05               	movlw	5
 26625  0037B2  0101               	movlb	1	; () banked
 26626  0037B4  6FF3               	movwf	ConfigureModem@NextState& (0+255),b
 26627                           
 26628                           ; BSR set to: 1
 26629                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 26630  0037B6  0E04               	movlw	4
 26631  0037B8  6FF4               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26632                           
 26633                           ;mdm_gsm_gprs.c: 459: break;
 26634  0037BA  0012               	return	
 26635  0037BC                     
 26636                           ; BSR set to: 1
 26637                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 26638                           
 26639                           ; BSR set to: 1
 26640  0037BC  0103               	movlb	3	; () banked
 26641  0037BE  4B26               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 26642  0037C0  2B27               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 26643                           
 26644                           ; BSR set to: 3
 26645                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 26646  0037C2  0102               	movlb	2	; () banked
 26647  0037C4  51D7               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 26648  0037C6  0103               	movlb	3	; () banked
 26649  0037C8  5D26               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 26650  0037CA  0102               	movlb	2	; () banked
 26651  0037CC  51D8               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 26652  0037CE  0103               	movlb	3	; () banked
 26653  0037D0  5927               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 26654  0037D2  A0D8               	btfss	status,0,c
 26655  0037D4  0012               	return	
 26656                           
 26657                           ; BSR set to: 3
 26658                           ;mdm_gsm_gprs.c: 466: {
 26659                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 26660  0037D6  0E00               	movlw	0
 26661  0037D8  6F27               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 26662  0037DA  0E00               	movlw	0
 26663  0037DC  6F26               	movwf	ConfigureModem@DelayCounter& (0+255),b
 26664                           
 26665                           ; BSR set to: 3
 26666                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 26667  0037DE  C1F3  F1F4         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 26668                           
 26669                           ; BSR set to: 3
 26670                           ;mdm_gsm_gprs.c: 471: }
 26671                           ;mdm_gsm_gprs.c: 472: break;
 26672  0037E2  0012               	return	
 26673  0037E4                     
 26674                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 26675                           
 26676                           ; BSR set to: 3
 26677  0037E4  0E03               	movlw	3
 26678  0037E6  0100               	movlb	0	; () banked
 26679  0037E8  6FD1               	movwf	_MdmStatus& (0+255),b
 26680                           
 26681                           ; BSR set to: 0
 26682                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 26683  0037EA  0E39               	movlw	low _MdmStsReady
 26684  0037EC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26685  0037EE  0E00               	movlw	high _MdmStsReady
 26686  0037F0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26687  0037F2  EC21  F033         	call	_GenerateEvt	;wreg free
 26688                           
 26689                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 26690  0037F6  0E06               	movlw	6
 26691  0037F8  0101               	movlb	1	; () banked
 26692  0037FA  6FF4               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26693                           
 26694                           ; BSR set to: 1
 26695                           ;mdm_gsm_gprs.c: 488: }
 26696                           
 26697                           ; BSR set to: 1
 26698                           ;mdm_gsm_gprs.c: 487: break;
 26699                           
 26700                           ;mdm_gsm_gprs.c: 486: default:
 26701                           
 26702                           ; BSR set to: 1
 26703                           ;mdm_gsm_gprs.c: 484: break;
 26704                           
 26705                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 26706                           
 26707                           ;mdm_gsm_gprs.c: 481: break;
 26708  0037FC  0012               	return	
 26709  0037FE                     l1027:
 26710                           
 26711                           ; BSR set to: 1
 26712  0037FE  0101               	movlb	1	; () banked
 26713  003800  51F4               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 26714                           
 26715                           ; Switch size 1, requested type "space"
 26716                           ; Number of cases is 6, Range of values is 0 to 6
 26717                           ; switch strategies available:
 26718                           ; Name         Instructions Cycles
 26719                           ; simple_byte           19    10 (average)
 26720                           ;	Chosen strategy is simple_byte
 26721  003802  0A00               	xorlw	0	; case 0
 26722  003804  B4D8               	btfsc	status,2,c
 26723  003806  D7A1               	goto	l1028
 26724  003808  0A01               	xorlw	1	; case 1
 26725  00380A  B4D8               	btfsc	status,2,c
 26726  00380C  D7A7               	goto	l1031
 26727  00380E  0A03               	xorlw	3	; case 2
 26728  003810  B4D8               	btfsc	status,2,c
 26729  003812  D7C1               	goto	l1032
 26730  003814  0A06               	xorlw	6	; case 4
 26731  003816  B4D8               	btfsc	status,2,c
 26732  003818  D7D1               	goto	l1033
 26733  00381A  0A01               	xorlw	1	; case 5
 26734  00381C  B4D8               	btfsc	status,2,c
 26735  00381E  D7E2               	goto	l1035
 26736  003820  0A03               	xorlw	3	; case 6
 26737  003822  0012               	return	
 26738  003824                     __end_of_ConfigureModem:
 26739                           	opt stack 0
 26740                           tosu	equ	0xFFF
 26741                           tosh	equ	0xFFE
 26742                           tosl	equ	0xFFD
 26743                           pclath	equ	0xFFA
 26744                           tblptru	equ	0xFF8
 26745                           tblptrh	equ	0xFF7
 26746                           tblptrl	equ	0xFF6
 26747                           tablat	equ	0xFF5
 26748                           prodh	equ	0xFF4
 26749                           prodl	equ	0xFF3
 26750                           intcon	equ	0xFF2
 26751                           intcon2	equ	0xFF1
 26752                           intcon3	equ	0xFF0
 26753                           indf0	equ	0xFEF
 26754                           postinc0	equ	0xFEE
 26755                           plusw0	equ	0xFEB
 26756                           fsr0h	equ	0xFEA
 26757                           fsr0l	equ	0xFE9
 26758                           wreg	equ	0xFE8
 26759                           indf1	equ	0xFE7
 26760                           postinc1	equ	0xFE6
 26761                           postdec1	equ	0xFE5
 26762                           plusw1	equ	0xFE3
 26763                           fsr1h	equ	0xFE2
 26764                           fsr1l	equ	0xFE1
 26765                           indf2	equ	0xFDF
 26766                           postinc2	equ	0xFDE
 26767                           postdec2	equ	0xFDD
 26768                           plusw2	equ	0xFDB
 26769                           fsr2h	equ	0xFDA
 26770                           fsr2l	equ	0xFD9
 26771                           status	equ	0xFD8
 26772                           
 26773 ;; *************** function _Uart_InitUartModule *****************
 26774 ;; Defined at:
 26775 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26776 ;; Parameters:    Size  Location     Type
 26777 ;;  Module          1    wreg     unsigned char 
 26778 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 26779 ;;		 -> UartConfig(21), 
 26780 ;; Auto vars:     Size  Location     Type
 26781 ;;  Module          1   65[BANK0 ] unsigned char 
 26782 ;; Return value:  Size  Location     Type
 26783 ;;                  1    wreg      void 
 26784 ;; Registers used:
 26785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26786 ;; Tracked objects:
 26787 ;;		On entry : 0/0
 26788 ;;		On exit  : 0/0
 26789 ;;		Unchanged: 0/0
 26790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26791 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26793 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26794 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26795 ;;Total ram usage:        5 bytes
 26796 ;; Hardware stack levels used:    1
 26797 ;; Hardware stack levels required when called:   13
 26798 ;; This function calls:
 26799 ;;		_SetUartBaudRate
 26800 ;; This function is called by:
 26801 ;;		_ConfigureModem
 26802 ;;		_Mdm_MainTask
 26803 ;; This function uses a non-reentrant model
 26804 ;;
 26805                           
 26806                           	psect	text126
 26807  000ABC                     __ptext126:
 26808                           	opt stack 0
 26809  000ABC                     _Uart_InitUartModule:
 26810                           	opt stack 14
 26811                           
 26812                           ;incstack = 0
 26813                           ;Uart_InitUartModule@Module stored from wreg
 26814  000ABC  0100               	movlb	0	; () banked
 26815  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 26816                           
 26817                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 26818  000AC0  0100               	movlb	0	; () banked
 26819  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 26820  000AC4  A4D8               	btfss	status,2,c
 26821  000AC6  D0BE               	goto	l668
 26822                           
 26823                           ; BSR set to: 0
 26824                           ;uart_drv.c: 291: {
 26825                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 26826  000AC8  9C94               	bcf	3988,6,c	;volatile
 26827                           
 26828                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 26829  000ACA  8E94               	bsf	3988,7,c	;volatile
 26830                           
 26831                           ; BSR set to: 0
 26832                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 26833  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 26834  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 26835  000AD4  0E01               	movlw	1
 26836  000AD6  ECF0  F015         	call	_SetUartBaudRate
 26837                           
 26838                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 26839  000ADA  0E00               	movlw	0
 26840  000ADC  6EAD               	movwf	4013,c	;volatile
 26841                           
 26842                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 26843  000ADE  0100               	movlb	0	; () banked
 26844  000AE0  EE20 F004          	lfsr	2,4
 26845  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26846  000AE6  26D9               	addwf	fsr2l,f,c
 26847  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26848  000AEA  22DA               	addwfc	fsr2h,f,c
 26849  000AEC  50DF               	movf	indf2,w,c
 26850  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26851  000AF0  0E06               	movlw	6
 26852  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 26853  000AF4                     u13105:
 26854  000AF4  90D8               	bcf	status,0,c
 26855  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26856  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 26857  000AFA  D7FC               	goto	u13105
 26858  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26859  000AFE  12AD               	iorwf	4013,f,c	;volatile
 26860                           
 26861                           ; BSR set to: 0
 26862                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 26863  000B00  EE20 F006          	lfsr	2,6
 26864  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26865  000B06  26D9               	addwf	fsr2l,f,c
 26866  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26867  000B0A  22DA               	addwfc	fsr2h,f,c
 26868  000B0C  50DF               	movf	indf2,w,c
 26869  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26870  000B10  0E05               	movlw	5
 26871  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 26872  000B14                     u13115:
 26873  000B14  90D8               	bcf	status,0,c
 26874  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26875  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 26876  000B1A  D7FC               	goto	u13115
 26877  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26878  000B1E  12AD               	iorwf	4013,f,c	;volatile
 26879                           
 26880                           ; BSR set to: 0
 26881                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 26882  000B20  EE20 F001          	lfsr	2,1
 26883  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26884  000B26  26D9               	addwf	fsr2l,f,c
 26885  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26886  000B2A  22DA               	addwfc	fsr2h,f,c
 26887  000B2C  50DF               	movf	indf2,w,c
 26888  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26889  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 26890  000B32  0BF0               	andlw	240
 26891  000B34  12AD               	iorwf	4013,f,c	;volatile
 26892                           
 26893                           ; BSR set to: 0
 26894                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 26895  000B36  EE20 F008          	lfsr	2,8
 26896  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26897  000B3C  26D9               	addwf	fsr2l,f,c
 26898  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26899  000B40  22DA               	addwfc	fsr2h,f,c
 26900  000B42  50DF               	movf	indf2,w,c
 26901  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26902  000B46  90D8               	bcf	status,0,c
 26903  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26904  000B4A  90D8               	bcf	status,0,c
 26905  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26906  000B4E  90D8               	bcf	status,0,c
 26907  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26908  000B52  12AD               	iorwf	4013,f,c	;volatile
 26909                           
 26910                           ; BSR set to: 0
 26911                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 26912  000B54  EE20 F003          	lfsr	2,3
 26913  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26914  000B5A  26D9               	addwf	fsr2l,f,c
 26915  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26916  000B5E  22DA               	addwfc	fsr2h,f,c
 26917  000B60  50DF               	movf	indf2,w,c
 26918  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26919  000B64  90D8               	bcf	status,0,c
 26920  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26921  000B68  90D8               	bcf	status,0,c
 26922  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26923  000B6C  12AD               	iorwf	4013,f,c	;volatile
 26924                           
 26925                           ; BSR set to: 0
 26926                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 26927  000B6E  0E00               	movlw	0
 26928  000B70  6EAC               	movwf	4012,c	;volatile
 26929                           
 26930                           ; BSR set to: 0
 26931                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 26932  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 26933  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 26934  000B7A  50DF               	movf	indf2,w,c
 26935  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26936  000B7E  0E00               	movlw	0
 26937  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 26938  000B82  0E80               	movlw	128
 26939  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26940  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26941  000B88  12AC               	iorwf	4012,f,c	;volatile
 26942                           
 26943                           ; BSR set to: 0
 26944                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 26945  000B8A  EE20 F005          	lfsr	2,5
 26946  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26947  000B90  26D9               	addwf	fsr2l,f,c
 26948  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26949  000B94  22DA               	addwfc	fsr2h,f,c
 26950  000B96  50DF               	movf	indf2,w,c
 26951  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26952  000B9A  0E06               	movlw	6
 26953  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 26954  000B9E                     u13125:
 26955  000B9E  90D8               	bcf	status,0,c
 26956  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26957  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 26958  000BA4  D7FC               	goto	u13125
 26959  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26960  000BA8  12AC               	iorwf	4012,f,c	;volatile
 26961                           
 26962                           ; BSR set to: 0
 26963                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 26964  000BAA  EE20 F007          	lfsr	2,7
 26965  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26966  000BB0  26D9               	addwf	fsr2l,f,c
 26967  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26968  000BB4  22DA               	addwfc	fsr2h,f,c
 26969  000BB6  50DF               	movf	indf2,w,c
 26970  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26971  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 26972  000BBC  0BF0               	andlw	240
 26973  000BBE  12AC               	iorwf	4012,f,c	;volatile
 26974                           
 26975                           ; BSR set to: 0
 26976                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 26977  000BC0  0E00               	movlw	0
 26978  000BC2  6E7E               	movwf	3966,c	;volatile
 26979                           
 26980                           ; BSR set to: 0
 26981                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 26982  000BC4  EE20 F002          	lfsr	2,2
 26983  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26984  000BCA  26D9               	addwf	fsr2l,f,c
 26985  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26986  000BCE  22DA               	addwfc	fsr2h,f,c
 26987  000BD0  50DF               	movf	indf2,w,c
 26988  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26989  000BD4  90D8               	bcf	status,0,c
 26990  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26991  000BD8  90D8               	bcf	status,0,c
 26992  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26993  000BDC  90D8               	bcf	status,0,c
 26994  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26995  000BE0  127E               	iorwf	3966,f,c	;volatile
 26996                           
 26997                           ; BSR set to: 0
 26998                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 26999  000BE2  EE20 F00A          	lfsr	2,10
 27000  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27001  000BE8  26D9               	addwf	fsr2l,f,c
 27002  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27003  000BEC  22DA               	addwfc	fsr2h,f,c
 27004  000BEE  50DF               	movf	indf2,w,c
 27005  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27006  000BF2  90D8               	bcf	status,0,c
 27007  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27008  000BF6  127E               	iorwf	3966,f,c	;volatile
 27009                           
 27010                           ; BSR set to: 0
 27011                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 27012  000BF8  EE20 F009          	lfsr	2,9
 27013  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27014  000BFE  26D9               	addwf	fsr2l,f,c
 27015  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27016  000C02  22DA               	addwfc	fsr2h,f,c
 27017  000C04  50DF               	movf	indf2,w,c
 27018  000C06  127E               	iorwf	3966,f,c	;volatile
 27019                           
 27020                           ; BSR set to: 0
 27021                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 27022  000C08  EE20 F00B          	lfsr	2,11
 27023  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27024  000C0E  26D9               	addwf	fsr2l,f,c
 27025  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27026  000C12  22DA               	addwfc	fsr2h,f,c
 27027  000C14  50DF               	movf	indf2,w,c
 27028  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27029  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27030  000C1A  509D               	movf	3997,w,c	;volatile
 27031  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27032  000C1E  0BEF               	andlw	-17
 27033  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27034  000C22  6E9D               	movwf	3997,c	;volatile
 27035                           
 27036                           ; BSR set to: 0
 27037                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 27038  000C24  EE20 F00C          	lfsr	2,12
 27039  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27040  000C2A  26D9               	addwf	fsr2l,f,c
 27041  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27042  000C2E  22DA               	addwfc	fsr2h,f,c
 27043  000C30  50DF               	movf	indf2,w,c
 27044  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27045  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27046  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 27047  000C38  509D               	movf	3997,w,c	;volatile
 27048  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27049  000C3C  0BDF               	andlw	-33
 27050  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27051  000C40  6E9D               	movwf	3997,c	;volatile
 27052                           
 27053                           ;uart_drv.c: 326: }
 27054  000C42  0012               	return	
 27055  000C44                     l668:
 27056                           
 27057                           ; BSR set to: 0
 27058                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 27059                           
 27060                           ; BSR set to: 0
 27061  000C44  0E02               	movlw	2
 27062  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 27063  000C48  A4D8               	btfss	status,2,c
 27064  000C4A  0012               	return	
 27065                           
 27066                           ; BSR set to: 0
 27067                           ;uart_drv.c: 328: {
 27068                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 27069  000C4C  9094               	bcf	3988,0,c	;volatile
 27070                           
 27071                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 27072  000C4E  8294               	bsf	3988,1,c	;volatile
 27073                           
 27074                           ; BSR set to: 0
 27075                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 27076  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 27077  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 27078  000C58  0E02               	movlw	2
 27079  000C5A  ECF0  F015         	call	_SetUartBaudRate
 27080                           
 27081                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 27082  000C5E  0E00               	movlw	0
 27083  000C60  6EA8               	movwf	4008,c	;volatile
 27084                           
 27085                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 27086  000C62  0100               	movlb	0	; () banked
 27087  000C64  EE20 F004          	lfsr	2,4
 27088  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27089  000C6A  26D9               	addwf	fsr2l,f,c
 27090  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27091  000C6E  22DA               	addwfc	fsr2h,f,c
 27092  000C70  50DF               	movf	indf2,w,c
 27093  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27094  000C74  0E06               	movlw	6
 27095  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27096  000C78                     u13145:
 27097  000C78  90D8               	bcf	status,0,c
 27098  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27099  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27100  000C7E  D7FC               	goto	u13145
 27101  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27102  000C82  12A8               	iorwf	4008,f,c	;volatile
 27103                           
 27104                           ; BSR set to: 0
 27105                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 27106  000C84  EE20 F006          	lfsr	2,6
 27107  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27108  000C8A  26D9               	addwf	fsr2l,f,c
 27109  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27110  000C8E  22DA               	addwfc	fsr2h,f,c
 27111  000C90  50DF               	movf	indf2,w,c
 27112  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27113  000C94  0E05               	movlw	5
 27114  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27115  000C98                     u13155:
 27116  000C98  90D8               	bcf	status,0,c
 27117  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27118  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27119  000C9E  D7FC               	goto	u13155
 27120  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27121  000CA2  12A8               	iorwf	4008,f,c	;volatile
 27122                           
 27123                           ; BSR set to: 0
 27124                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 27125  000CA4  EE20 F001          	lfsr	2,1
 27126  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27127  000CAA  26D9               	addwf	fsr2l,f,c
 27128  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27129  000CAE  22DA               	addwfc	fsr2h,f,c
 27130  000CB0  50DF               	movf	indf2,w,c
 27131  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27132  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27133  000CB6  0BF0               	andlw	240
 27134  000CB8  12A8               	iorwf	4008,f,c	;volatile
 27135                           
 27136                           ; BSR set to: 0
 27137                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 27138  000CBA  EE20 F008          	lfsr	2,8
 27139  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27140  000CC0  26D9               	addwf	fsr2l,f,c
 27141  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27142  000CC4  22DA               	addwfc	fsr2h,f,c
 27143  000CC6  50DF               	movf	indf2,w,c
 27144  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27145  000CCA  90D8               	bcf	status,0,c
 27146  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27147  000CCE  90D8               	bcf	status,0,c
 27148  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27149  000CD2  90D8               	bcf	status,0,c
 27150  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27151  000CD6  12A8               	iorwf	4008,f,c	;volatile
 27152                           
 27153                           ; BSR set to: 0
 27154                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 27155  000CD8  EE20 F003          	lfsr	2,3
 27156  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27157  000CDE  26D9               	addwf	fsr2l,f,c
 27158  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27159  000CE2  22DA               	addwfc	fsr2h,f,c
 27160  000CE4  50DF               	movf	indf2,w,c
 27161  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27162  000CE8  90D8               	bcf	status,0,c
 27163  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27164  000CEC  90D8               	bcf	status,0,c
 27165  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27166  000CF0  12A8               	iorwf	4008,f,c	;volatile
 27167                           
 27168                           ; BSR set to: 0
 27169                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 27170  000CF2  0E00               	movlw	0
 27171  000CF4  6E9C               	movwf	3996,c	;volatile
 27172                           
 27173                           ; BSR set to: 0
 27174                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 27175  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 27176  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 27177  000CFE  50DF               	movf	indf2,w,c
 27178  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27179  000D02  0E00               	movlw	0
 27180  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 27181  000D06  0E80               	movlw	128
 27182  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27183  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27184  000D0C  129C               	iorwf	3996,f,c	;volatile
 27185                           
 27186                           ; BSR set to: 0
 27187                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 27188  000D0E  EE20 F005          	lfsr	2,5
 27189  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27190  000D14  26D9               	addwf	fsr2l,f,c
 27191  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27192  000D18  22DA               	addwfc	fsr2h,f,c
 27193  000D1A  50DF               	movf	indf2,w,c
 27194  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27195  000D1E  0E06               	movlw	6
 27196  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27197  000D22                     u13165:
 27198  000D22  90D8               	bcf	status,0,c
 27199  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27200  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27201  000D28  D7FC               	goto	u13165
 27202  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27203  000D2C  129C               	iorwf	3996,f,c	;volatile
 27204                           
 27205                           ; BSR set to: 0
 27206                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 27207  000D2E  EE20 F007          	lfsr	2,7
 27208  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27209  000D34  26D9               	addwf	fsr2l,f,c
 27210  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27211  000D38  22DA               	addwfc	fsr2h,f,c
 27212  000D3A  50DF               	movf	indf2,w,c
 27213  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27214  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27215  000D40  0BF0               	andlw	240
 27216  000D42  129C               	iorwf	3996,f,c	;volatile
 27217                           
 27218                           ; BSR set to: 0
 27219                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 27220  000D44  0E00               	movlw	0
 27221  000D46  6E7C               	movwf	3964,c	;volatile
 27222                           
 27223                           ; BSR set to: 0
 27224                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 27225  000D48  EE20 F002          	lfsr	2,2
 27226  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27227  000D4E  26D9               	addwf	fsr2l,f,c
 27228  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27229  000D52  22DA               	addwfc	fsr2h,f,c
 27230  000D54  50DF               	movf	indf2,w,c
 27231  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27232  000D58  90D8               	bcf	status,0,c
 27233  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27234  000D5C  90D8               	bcf	status,0,c
 27235  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27236  000D60  90D8               	bcf	status,0,c
 27237  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27238  000D64  127C               	iorwf	3964,f,c	;volatile
 27239                           
 27240                           ; BSR set to: 0
 27241                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 27242  000D66  EE20 F00A          	lfsr	2,10
 27243  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27244  000D6C  26D9               	addwf	fsr2l,f,c
 27245  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27246  000D70  22DA               	addwfc	fsr2h,f,c
 27247  000D72  50DF               	movf	indf2,w,c
 27248  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27249  000D76  90D8               	bcf	status,0,c
 27250  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27251  000D7A  127C               	iorwf	3964,f,c	;volatile
 27252                           
 27253                           ; BSR set to: 0
 27254                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 27255  000D7C  EE20 F009          	lfsr	2,9
 27256  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27257  000D82  26D9               	addwf	fsr2l,f,c
 27258  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27259  000D86  22DA               	addwfc	fsr2h,f,c
 27260  000D88  50DF               	movf	indf2,w,c
 27261  000D8A  127C               	iorwf	3964,f,c	;volatile
 27262                           
 27263                           ; BSR set to: 0
 27264                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 27265  000D8C  EE20 F00B          	lfsr	2,11
 27266  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27267  000D92  26D9               	addwf	fsr2l,f,c
 27268  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27269  000D96  22DA               	addwfc	fsr2h,f,c
 27270  000D98  50DF               	movf	indf2,w,c
 27271  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27272  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27273  000D9E  50A3               	movf	4003,w,c	;volatile
 27274  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27275  000DA2  0BEF               	andlw	-17
 27276  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27277  000DA6  6EA3               	movwf	4003,c	;volatile
 27278                           
 27279                           ; BSR set to: 0
 27280                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 27281  000DA8  EE20 F00C          	lfsr	2,12
 27282  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27283  000DAE  26D9               	addwf	fsr2l,f,c
 27284  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27285  000DB2  22DA               	addwfc	fsr2h,f,c
 27286  000DB4  50DF               	movf	indf2,w,c
 27287  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27288  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27289  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 27290  000DBC  50A3               	movf	4003,w,c	;volatile
 27291  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27292  000DC0  0BDF               	andlw	-33
 27293  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27294  000DC4  6EA3               	movwf	4003,c	;volatile
 27295                           
 27296                           ; BSR set to: 0
 27297  000DC6  0012               	return	
 27298  000DC8                     __end_of_Uart_InitUartModule:
 27299                           	opt stack 0
 27300                           tosu	equ	0xFFF
 27301                           tosh	equ	0xFFE
 27302                           tosl	equ	0xFFD
 27303                           pclath	equ	0xFFA
 27304                           tblptru	equ	0xFF8
 27305                           tblptrh	equ	0xFF7
 27306                           tblptrl	equ	0xFF6
 27307                           tablat	equ	0xFF5
 27308                           prodh	equ	0xFF4
 27309                           prodl	equ	0xFF3
 27310                           intcon	equ	0xFF2
 27311                           intcon2	equ	0xFF1
 27312                           intcon3	equ	0xFF0
 27313                           indf0	equ	0xFEF
 27314                           postinc0	equ	0xFEE
 27315                           plusw0	equ	0xFEB
 27316                           fsr0h	equ	0xFEA
 27317                           fsr0l	equ	0xFE9
 27318                           wreg	equ	0xFE8
 27319                           indf1	equ	0xFE7
 27320                           postinc1	equ	0xFE6
 27321                           postdec1	equ	0xFE5
 27322                           plusw1	equ	0xFE3
 27323                           fsr1h	equ	0xFE2
 27324                           fsr1l	equ	0xFE1
 27325                           indf2	equ	0xFDF
 27326                           postinc2	equ	0xFDE
 27327                           postdec2	equ	0xFDD
 27328                           plusw2	equ	0xFDB
 27329                           fsr2h	equ	0xFDA
 27330                           fsr2l	equ	0xFD9
 27331                           status	equ	0xFD8
 27332                           
 27333 ;; *************** function _SetUartBaudRate *****************
 27334 ;; Defined at:
 27335 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27336 ;; Parameters:    Size  Location     Type
 27337 ;;  Module          1    wreg     unsigned char 
 27338 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 27339 ;;		 -> UartConfig(21), 
 27340 ;; Auto vars:     Size  Location     Type
 27341 ;;  Module          1   57[BANK0 ] unsigned char 
 27342 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 27343 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 27344 ;; Return value:  Size  Location     Type
 27345 ;;                  1    wreg      void 
 27346 ;; Registers used:
 27347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27348 ;; Tracked objects:
 27349 ;;		On entry : 0/0
 27350 ;;		On exit  : 0/0
 27351 ;;		Unchanged: 0/0
 27352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27354 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27355 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27356 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27357 ;;Total ram usage:        7 bytes
 27358 ;; Hardware stack levels used:    1
 27359 ;; Hardware stack levels required when called:   12
 27360 ;; This function calls:
 27361 ;;		___lldiv
 27362 ;;		___lmul
 27363 ;; This function is called by:
 27364 ;;		_Uart_InitUartModule
 27365 ;; This function uses a non-reentrant model
 27366 ;;
 27367                           
 27368                           	psect	text127
 27369  002BE0                     __ptext127:
 27370                           	opt stack 0
 27371  002BE0                     _SetUartBaudRate:
 27372                           	opt stack 14
 27373                           
 27374                           ; BSR set to: 0
 27375                           ;incstack = 0
 27376                           ;SetUartBaudRate@Module stored from wreg
 27377  002BE0  0100               	movlb	0	; () banked
 27378  002BE2  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 27379                           
 27380                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 27381  002BE4  0E00               	movlw	0
 27382  002BE6  0100               	movlb	0	; () banked
 27383  002BE8  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 27384  002BEA  0E00               	movlw	0
 27385  002BEC  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 27386                           
 27387                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 27388  002BEE  0E00               	movlw	0
 27389  002BF0  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 27390                           
 27391                           ; BSR set to: 0
 27392                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 27393  002BF2  EE20 F002          	lfsr	2,2
 27394  002BF6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27395  002BF8  26D9               	addwf	fsr2l,f,c
 27396  002BFA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27397  002BFC  22DA               	addwfc	fsr2h,f,c
 27398  002BFE  50DF               	movf	indf2,w,c
 27399  002C00  A4D8               	btfss	status,2,c
 27400  002C02  D00B               	goto	l625
 27401                           
 27402                           ; BSR set to: 0
 27403  002C04  EE20 F002          	lfsr	2,2
 27404  002C08  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27405  002C0A  26D9               	addwf	fsr2l,f,c
 27406  002C0C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27407  002C0E  22DA               	addwfc	fsr2h,f,c
 27408  002C10  50DF               	movf	indf2,w,c
 27409  002C12  A4D8               	btfss	status,2,c
 27410  002C14  D002               	goto	l625
 27411                           
 27412                           ; BSR set to: 0
 27413                           ;uart_drv.c: 128: {
 27414                           ;uart_drv.c: 129: DivisionFactor = 64;
 27415  002C16  0E40               	movlw	64
 27416  002C18  D039               	goto	L39
 27417  002C1A                     l625:
 27418                           
 27419                           ; BSR set to: 0
 27420                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 27421                           
 27422                           ; BSR set to: 0
 27423  002C1A  EE20 F002          	lfsr	2,2
 27424  002C1E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27425  002C20  26D9               	addwf	fsr2l,f,c
 27426  002C22  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27427  002C24  22DA               	addwfc	fsr2h,f,c
 27428  002C26  04DE               	decf	postinc2,w,c
 27429  002C28  A4D8               	btfss	status,2,c
 27430  002C2A  D009               	goto	l627
 27431                           
 27432                           ; BSR set to: 0
 27433  002C2C  EE20 F002          	lfsr	2,2
 27434  002C30  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27435  002C32  26D9               	addwf	fsr2l,f,c
 27436  002C34  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27437  002C36  22DA               	addwfc	fsr2h,f,c
 27438  002C38  50DF               	movf	indf2,w,c
 27439  002C3A  B4D8               	btfsc	status,2,c
 27440  002C3C  D012               	goto	u12260
 27441  002C3E                     l627:
 27442                           
 27443                           ; BSR set to: 0
 27444                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 27445                           
 27446                           ; BSR set to: 0
 27447  002C3E  EE20 F002          	lfsr	2,2
 27448  002C42  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27449  002C44  26D9               	addwf	fsr2l,f,c
 27450  002C46  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27451  002C48  22DA               	addwfc	fsr2h,f,c
 27452  002C4A  50DF               	movf	indf2,w,c
 27453  002C4C  A4D8               	btfss	status,2,c
 27454  002C4E  D00B               	goto	l629
 27455                           
 27456                           ; BSR set to: 0
 27457  002C50  EE20 F002          	lfsr	2,2
 27458  002C54  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27459  002C56  26D9               	addwf	fsr2l,f,c
 27460  002C58  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27461  002C5A  22DA               	addwfc	fsr2h,f,c
 27462  002C5C  04DE               	decf	postinc2,w,c
 27463  002C5E  A4D8               	btfss	status,2,c
 27464  002C60  D002               	goto	l629
 27465  002C62                     u12260:
 27466                           
 27467                           ; BSR set to: 0
 27468                           ;uart_drv.c: 136: {
 27469                           ;uart_drv.c: 137: DivisionFactor = 16;
 27470  002C62  0E10               	movlw	16
 27471  002C64  D013               	goto	L39
 27472  002C66                     l629:
 27473                           
 27474                           ; BSR set to: 0
 27475                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 27476                           
 27477                           ; BSR set to: 0
 27478  002C66  EE20 F002          	lfsr	2,2
 27479  002C6A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27480  002C6C  26D9               	addwf	fsr2l,f,c
 27481  002C6E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27482  002C70  22DA               	addwfc	fsr2h,f,c
 27483  002C72  04DE               	decf	postinc2,w,c
 27484  002C74  A4D8               	btfss	status,2,c
 27485  002C76  D00B               	goto	l631
 27486                           
 27487                           ; BSR set to: 0
 27488  002C78  EE20 F002          	lfsr	2,2
 27489  002C7C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27490  002C7E  26D9               	addwf	fsr2l,f,c
 27491  002C80  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27492  002C82  22DA               	addwfc	fsr2h,f,c
 27493  002C84  04DE               	decf	postinc2,w,c
 27494  002C86  A4D8               	btfss	status,2,c
 27495  002C88  D002               	goto	l631
 27496                           
 27497                           ; BSR set to: 0
 27498                           ;uart_drv.c: 140: {
 27499                           ;uart_drv.c: 141: DivisionFactor = 4;
 27500  002C8A  0E04               	movlw	4
 27501  002C8C                     L39:
 27502  002C8C  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 27503  002C8E                     l631:
 27504                           
 27505                           ; BSR set to: 0
 27506                           ;uart_drv.c: 146: }
 27507                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 27508                           
 27509                           ; BSR set to: 0
 27510                           
 27511                           ; BSR set to: 0
 27512                           
 27513                           ; BSR set to: 0
 27514                           
 27515                           ; BSR set to: 0
 27516                           
 27517                           ;uart_drv.c: 143: else
 27518                           ;uart_drv.c: 144: {
 27519                           
 27520                           ; BSR set to: 0
 27521  002C8E  EE20 F00D          	lfsr	2,13
 27522  002C92  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27523  002C94  26D9               	addwf	fsr2l,f,c
 27524  002C96  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27525  002C98  22DA               	addwfc	fsr2h,f,c
 27526  002C9A  CFDE F089          	movff	postinc2,___lldiv@dividend
 27527  002C9E  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 27528  002CA2  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 27529  002CA6  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 27530  002CAA  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 27531  002CAC  6F7D               	movwf	___lmul@multiplier& (0+255),b
 27532  002CAE  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 27533  002CB0  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 27534  002CB2  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 27535  002CB4  EE20 F011          	lfsr	2,17
 27536  002CB8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27537  002CBA  26D9               	addwf	fsr2l,f,c
 27538  002CBC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27539  002CBE  22DA               	addwfc	fsr2h,f,c
 27540  002CC0  CFDE F081          	movff	postinc2,___lmul@multiplicand
 27541  002CC4  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 27542  002CC8  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 27543  002CCC  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 27544  002CD0  EC26  F02B         	call	___lmul	;wreg free
 27545  002CD4  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 27546  002CD8  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 27547  002CDC  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 27548  002CE0  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 27549  002CE4  ECD5  F027         	call	___lldiv	;wreg free
 27550  002CE8  0EFF               	movlw	255
 27551  002CEA  0100               	movlb	0	; () banked
 27552  002CEC  2589               	addwf	?___lldiv& (0+255),w,b
 27553  002CEE  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 27554  002CF0  0EFF               	movlw	255
 27555  002CF2  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 27556  002CF4  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 27557                           
 27558                           ; BSR set to: 0
 27559                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 27560  002CF6  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 27561  002CF8  A4D8               	btfss	status,2,c
 27562  002CFA  D005               	goto	l633
 27563                           
 27564                           ; BSR set to: 0
 27565                           ;uart_drv.c: 152: {
 27566                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 27567  002CFC  0E00               	movlw	0
 27568  002CFE  6E7F               	movwf	3967,c	;volatile
 27569                           
 27570                           ; BSR set to: 0
 27571                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 27572  002D00  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 27573                           
 27574                           ;uart_drv.c: 156: }
 27575  002D04  0012               	return	
 27576  002D06                     l633:
 27577                           
 27578                           ; BSR set to: 0
 27579                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 27580                           
 27581                           ; BSR set to: 0
 27582  002D06  0E02               	movlw	2
 27583  002D08  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 27584  002D0A  A4D8               	btfss	status,2,c
 27585  002D0C  0012               	return	
 27586                           
 27587                           ; BSR set to: 0
 27588                           ;uart_drv.c: 158: {
 27589                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 27590  002D0E  0E00               	movlw	0
 27591  002D10  6E7D               	movwf	3965,c	;volatile
 27592                           
 27593                           ; BSR set to: 0
 27594                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 27595  002D12  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 27596                           
 27597                           ; BSR set to: 0
 27598  002D16  0012               	return	
 27599  002D18                     __end_of_SetUartBaudRate:
 27600                           	opt stack 0
 27601                           tosu	equ	0xFFF
 27602                           tosh	equ	0xFFE
 27603                           tosl	equ	0xFFD
 27604                           pclath	equ	0xFFA
 27605                           tblptru	equ	0xFF8
 27606                           tblptrh	equ	0xFF7
 27607                           tblptrl	equ	0xFF6
 27608                           tablat	equ	0xFF5
 27609                           prodh	equ	0xFF4
 27610                           prodl	equ	0xFF3
 27611                           intcon	equ	0xFF2
 27612                           intcon2	equ	0xFF1
 27613                           intcon3	equ	0xFF0
 27614                           indf0	equ	0xFEF
 27615                           postinc0	equ	0xFEE
 27616                           plusw0	equ	0xFEB
 27617                           fsr0h	equ	0xFEA
 27618                           fsr0l	equ	0xFE9
 27619                           wreg	equ	0xFE8
 27620                           indf1	equ	0xFE7
 27621                           postinc1	equ	0xFE6
 27622                           postdec1	equ	0xFE5
 27623                           plusw1	equ	0xFE3
 27624                           fsr1h	equ	0xFE2
 27625                           fsr1l	equ	0xFE1
 27626                           indf2	equ	0xFDF
 27627                           postinc2	equ	0xFDE
 27628                           postdec2	equ	0xFDD
 27629                           plusw2	equ	0xFDB
 27630                           fsr2h	equ	0xFDA
 27631                           fsr2l	equ	0xFD9
 27632                           status	equ	0xFD8
 27633                           
 27634 ;; *************** function ___lmul *****************
 27635 ;; Defined at:
 27636 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 27637 ;; Parameters:    Size  Location     Type
 27638 ;;  multiplier      4   29[BANK0 ] unsigned long 
 27639 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 27640 ;; Auto vars:     Size  Location     Type
 27641 ;;  product         4   37[BANK0 ] unsigned long 
 27642 ;; Return value:  Size  Location     Type
 27643 ;;                  4   29[BANK0 ] unsigned long 
 27644 ;; Registers used:
 27645 ;;		wreg, status,2, status,0
 27646 ;; Tracked objects:
 27647 ;;		On entry : 0/0
 27648 ;;		On exit  : 0/0
 27649 ;;		Unchanged: 0/0
 27650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27651 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27652 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27654 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27655 ;;Total ram usage:       12 bytes
 27656 ;; Hardware stack levels used:    1
 27657 ;; Hardware stack levels required when called:   11
 27658 ;; This function calls:
 27659 ;;		Nothing
 27660 ;; This function is called by:
 27661 ;;		_Tmr_TmrBPrSet
 27662 ;;		_SetUartBaudRate
 27663 ;;		_strtol
 27664 ;; This function uses a non-reentrant model
 27665 ;;
 27666                           
 27667                           	psect	text128
 27668  00564C                     __ptext128:
 27669                           	opt stack 0
 27670  00564C                     ___lmul:
 27671                           	opt stack 15
 27672                           
 27673                           ; BSR set to: 0
 27674                           ;incstack = 0
 27675  00564C  0E00               	movlw	0
 27676  00564E  0100               	movlb	0	; () banked
 27677  005650  6F85               	movwf	___lmul@product& (0+255),b
 27678  005652  0E00               	movlw	0
 27679  005654  6F86               	movwf	(___lmul@product+1)& (0+255),b
 27680  005656  0E00               	movlw	0
 27681  005658  6F87               	movwf	(___lmul@product+2)& (0+255),b
 27682  00565A  0E00               	movlw	0
 27683  00565C  6F88               	movwf	(___lmul@product+3)& (0+255),b
 27684  00565E                     
 27685                           ; BSR set to: 0
 27686                           
 27687                           ; BSR set to: 0
 27688  00565E  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 27689  005660  D008               	goto	l2828
 27690                           
 27691                           ; BSR set to: 0
 27692  005662  5181               	movf	___lmul@multiplicand& (0+255),w,b
 27693  005664  2785               	addwf	___lmul@product& (0+255),f,b
 27694  005666  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 27695  005668  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 27696  00566A  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 27697  00566C  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 27698  00566E  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 27699  005670  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 27700  005672                     l2828:
 27701                           
 27702                           ; BSR set to: 0
 27703                           
 27704                           ; BSR set to: 0
 27705  005672  90D8               	bcf	status,0,c
 27706  005674  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 27707  005676  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 27708  005678  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 27709  00567A  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 27710                           
 27711                           ; BSR set to: 0
 27712  00567C  90D8               	bcf	status,0,c
 27713  00567E  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 27714  005680  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 27715  005682  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 27716  005684  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 27717  005686  517D               	movf	___lmul@multiplier& (0+255),w,b
 27718  005688  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 27719  00568A  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 27720  00568C  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 27721  00568E  A4D8               	btfss	status,2,c
 27722  005690  D7E6               	goto	l2827
 27723                           
 27724                           ; BSR set to: 0
 27725  005692  C085  F07D         	movff	___lmul@product,?___lmul
 27726  005696  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 27727  00569A  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 27728  00569E  C088  F080         	movff	___lmul@product+3,?___lmul+3
 27729                           
 27730                           ; BSR set to: 0
 27731  0056A2  0012               	return		;funcret
 27732  0056A4                     __end_of___lmul:
 27733                           	opt stack 0
 27734                           tosu	equ	0xFFF
 27735                           tosh	equ	0xFFE
 27736                           tosl	equ	0xFFD
 27737                           pclath	equ	0xFFA
 27738                           tblptru	equ	0xFF8
 27739                           tblptrh	equ	0xFF7
 27740                           tblptrl	equ	0xFF6
 27741                           tablat	equ	0xFF5
 27742                           prodh	equ	0xFF4
 27743                           prodl	equ	0xFF3
 27744                           intcon	equ	0xFF2
 27745                           intcon2	equ	0xFF1
 27746                           intcon3	equ	0xFF0
 27747                           indf0	equ	0xFEF
 27748                           postinc0	equ	0xFEE
 27749                           plusw0	equ	0xFEB
 27750                           fsr0h	equ	0xFEA
 27751                           fsr0l	equ	0xFE9
 27752                           wreg	equ	0xFE8
 27753                           indf1	equ	0xFE7
 27754                           postinc1	equ	0xFE6
 27755                           postdec1	equ	0xFE5
 27756                           plusw1	equ	0xFE3
 27757                           fsr1h	equ	0xFE2
 27758                           fsr1l	equ	0xFE1
 27759                           indf2	equ	0xFDF
 27760                           postinc2	equ	0xFDE
 27761                           postdec2	equ	0xFDD
 27762                           plusw2	equ	0xFDB
 27763                           fsr2h	equ	0xFDA
 27764                           fsr2l	equ	0xFD9
 27765                           status	equ	0xFD8
 27766                           
 27767 ;; *************** function _UartSetConfigLow *****************
 27768 ;; Defined at:
 27769 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27770 ;; Parameters:    Size  Location     Type
 27771 ;;		None
 27772 ;; Auto vars:     Size  Location     Type
 27773 ;;		None
 27774 ;; Return value:  Size  Location     Type
 27775 ;;                  1    wreg      void 
 27776 ;; Registers used:
 27777 ;;		wreg, status,2
 27778 ;; Tracked objects:
 27779 ;;		On entry : 0/0
 27780 ;;		On exit  : 0/0
 27781 ;;		Unchanged: 0/0
 27782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27787 ;;Total ram usage:        0 bytes
 27788 ;; Hardware stack levels used:    1
 27789 ;; Hardware stack levels required when called:   11
 27790 ;; This function calls:
 27791 ;;		Nothing
 27792 ;; This function is called by:
 27793 ;;		_ConfigureModem
 27794 ;; This function uses a non-reentrant model
 27795 ;;
 27796                           
 27797                           	psect	text129
 27798  0056A4                     __ptext129:
 27799                           	opt stack 0
 27800  0056A4                     _UartSetConfigLow:
 27801                           	opt stack 15
 27802                           
 27803                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 27804                           
 27805                           ; BSR set to: 0
 27806                           ;incstack = 0
 27807  0056A4  0E01               	movlw	1
 27808  0056A6  0103               	movlb	3	; () banked
 27809  0056A8  6F28               	movwf	_UartConfig& (0+255),b
 27810                           
 27811                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 27812  0056AA  0E00               	movlw	0
 27813  0056AC  6F29               	movwf	(_UartConfig+1)& (0+255),b
 27814                           
 27815                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 27816  0056AE  0E00               	movlw	0
 27817  0056B0  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 27818                           
 27819                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 27820  0056B2  0E00               	movlw	0
 27821  0056B4  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 27822                           
 27823                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 27824  0056B6  0E00               	movlw	0
 27825  0056B8  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 27826                           
 27827                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 27828  0056BA  0E00               	movlw	0
 27829  0056BC  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 27830                           
 27831                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 27832  0056BE  0E01               	movlw	1
 27833  0056C0  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 27834                           
 27835                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 27836  0056C2  0E01               	movlw	1
 27837  0056C4  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 27838                           
 27839                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 27840  0056C6  0E00               	movlw	0
 27841  0056C8  6F30               	movwf	(_UartConfig+8)& (0+255),b
 27842                           
 27843                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 27844  0056CA  0E00               	movlw	0
 27845  0056CC  6F31               	movwf	(_UartConfig+9)& (0+255),b
 27846                           
 27847                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 27848  0056CE  0E00               	movlw	0
 27849  0056D0  6F32               	movwf	(_UartConfig+10)& (0+255),b
 27850                           
 27851                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 27852  0056D2  0E00               	movlw	0
 27853  0056D4  6F33               	movwf	(_UartConfig+11)& (0+255),b
 27854                           
 27855                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 27856  0056D6  0E01               	movlw	1
 27857  0056D8  6F34               	movwf	(_UartConfig+12)& (0+255),b
 27858                           
 27859                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 27860  0056DA  0E00               	movlw	0
 27861  0056DC  6F35               	movwf	(_UartConfig+13)& (0+255),b
 27862  0056DE  0E6C               	movlw	108
 27863  0056E0  6F36               	movwf	(_UartConfig+14)& (0+255),b
 27864  0056E2  0EDC               	movlw	220
 27865  0056E4  6F37               	movwf	(_UartConfig+15)& (0+255),b
 27866  0056E6  0E02               	movlw	2
 27867  0056E8  6F38               	movwf	(_UartConfig+16)& (0+255),b
 27868                           
 27869                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 27870  0056EA  0E80               	movlw	128
 27871  0056EC  6F39               	movwf	(_UartConfig+17)& (0+255),b
 27872  0056EE  0E25               	movlw	37
 27873  0056F0  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 27874  0056F2  0E00               	movlw	0
 27875  0056F4  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 27876  0056F6  0E00               	movlw	0
 27877  0056F8  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 27878                           
 27879                           ; BSR set to: 3
 27880  0056FA  0012               	return		;funcret
 27881  0056FC                     __end_of_UartSetConfigLow:
 27882                           	opt stack 0
 27883                           tosu	equ	0xFFF
 27884                           tosh	equ	0xFFE
 27885                           tosl	equ	0xFFD
 27886                           pclath	equ	0xFFA
 27887                           tblptru	equ	0xFF8
 27888                           tblptrh	equ	0xFF7
 27889                           tblptrl	equ	0xFF6
 27890                           tablat	equ	0xFF5
 27891                           prodh	equ	0xFF4
 27892                           prodl	equ	0xFF3
 27893                           intcon	equ	0xFF2
 27894                           intcon2	equ	0xFF1
 27895                           intcon3	equ	0xFF0
 27896                           indf0	equ	0xFEF
 27897                           postinc0	equ	0xFEE
 27898                           plusw0	equ	0xFEB
 27899                           fsr0h	equ	0xFEA
 27900                           fsr0l	equ	0xFE9
 27901                           wreg	equ	0xFE8
 27902                           indf1	equ	0xFE7
 27903                           postinc1	equ	0xFE6
 27904                           postdec1	equ	0xFE5
 27905                           plusw1	equ	0xFE3
 27906                           fsr1h	equ	0xFE2
 27907                           fsr1l	equ	0xFE1
 27908                           indf2	equ	0xFDF
 27909                           postinc2	equ	0xFDE
 27910                           postdec2	equ	0xFDD
 27911                           plusw2	equ	0xFDB
 27912                           fsr2h	equ	0xFDA
 27913                           fsr2l	equ	0xFD9
 27914                           status	equ	0xFD8
 27915                           
 27916 ;; *************** function _CheckModem *****************
 27917 ;; Defined at:
 27918 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27919 ;; Parameters:    Size  Location     Type
 27920 ;;		None
 27921 ;; Auto vars:     Size  Location     Type
 27922 ;;		None
 27923 ;; Return value:  Size  Location     Type
 27924 ;;                  1    wreg      void 
 27925 ;; Registers used:
 27926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27927 ;; Tracked objects:
 27928 ;;		On entry : 0/0
 27929 ;;		On exit  : 0/0
 27930 ;;		Unchanged: 0/0
 27931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27936 ;;Total ram usage:        0 bytes
 27937 ;; Hardware stack levels used:    1
 27938 ;; Hardware stack levels required when called:   14
 27939 ;; This function calls:
 27940 ;;		_GenerateEvt
 27941 ;;		_OsTmr_GetTimerStatus
 27942 ;;		_OsTmr_StartTimer
 27943 ;;		_ReceiveEvt
 27944 ;;		_Uart_WriteConstString
 27945 ;; This function is called by:
 27946 ;;		_Mdm_MainTask
 27947 ;; This function uses a non-reentrant model
 27948 ;;
 27949                           
 27950                           	psect	text130
 27951  0026B0                     __ptext130:
 27952                           	opt stack 0
 27953  0026B0                     _CheckModem:
 27954                           	opt stack 13
 27955                           
 27956                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 27957                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 27958                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 27959                           
 27960                           ; BSR set to: 3
 27961                           ;incstack = 0
 27962  0026B0  D096               	goto	l982
 27963  0026B2                     
 27964                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 27965  0026B2  0EF5               	movlw	low CheckModem@Timeout
 27966  0026B4  0100               	movlb	0	; () banked
 27967  0026B6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27968  0026B8  0E03               	movlw	high CheckModem@Timeout
 27969  0026BA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27970  0026BC  0ED0               	movlw	208
 27971  0026BE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27972  0026C0  0E07               	movlw	7
 27973  0026C2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27974  0026C4  0E00               	movlw	0
 27975  0026C6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27976  0026C8  0E00               	movlw	0
 27977  0026CA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27978  0026CC  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 27979                           
 27980                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 27981  0026D0  0E01               	movlw	1
 27982  0026D2  6E29               	movwf	CheckModem@CheckMdmSts,c
 27983                           
 27984                           ;mdm_gsm_gprs.c: 295: break;
 27985  0026D4  0012               	return	
 27986  0026D6                     
 27987                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 27988  0026D6  0EF5               	movlw	low CheckModem@Timeout
 27989  0026D8  0100               	movlb	0	; () banked
 27990  0026DA  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27991  0026DC  0E03               	movlw	high CheckModem@Timeout
 27992  0026DE  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27993  0026E0  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 27994  0026E4  06E8               	decf	wreg,f,c
 27995  0026E6  A4D8               	btfss	status,2,c
 27996  0026E8  0012               	return	
 27997                           
 27998                           ;mdm_gsm_gprs.c: 300: {
 27999                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 28000  0026EA  0E02               	movlw	2
 28001  0026EC  6E29               	movwf	CheckModem@CheckMdmSts,c
 28002                           
 28003                           ;mdm_gsm_gprs.c: 303: }
 28004                           ;mdm_gsm_gprs.c: 304: break;
 28005  0026EE  0012               	return	
 28006  0026F0                     
 28007                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 28008  0026F0  0EE6               	movlw	low STR_1
 28009  0026F2  0100               	movlb	0	; () banked
 28010  0026F4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28011  0026F6  0EFF               	movlw	high STR_1
 28012  0026F8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28013  0026FA  0E01               	movlw	1
 28014  0026FC  EC1C  F02F         	call	_Uart_WriteConstString
 28015                           
 28016                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 28017  002700  0EF5               	movlw	low CheckModem@Timeout
 28018  002702  0100               	movlb	0	; () banked
 28019  002704  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28020  002706  0E03               	movlw	high CheckModem@Timeout
 28021  002708  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28022  00270A  0ED0               	movlw	208
 28023  00270C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28024  00270E  0E07               	movlw	7
 28025  002710  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28026  002712  0E00               	movlw	0
 28027  002714  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28028  002716  0E00               	movlw	0
 28029  002718  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28030  00271A  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 28031                           
 28032                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 28033  00271E  0E03               	movlw	3
 28034  002720  6E29               	movwf	CheckModem@CheckMdmSts,c
 28035                           
 28036                           ;mdm_gsm_gprs.c: 313: break;
 28037  002722  0012               	return	
 28038  002724                     
 28039                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 28040  002724  0E3C               	movlw	low _NewStringReceived
 28041  002726  0100               	movlb	0	; () banked
 28042  002728  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28043  00272A  0E00               	movlw	high _NewStringReceived
 28044  00272C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28045  00272E  EC2C  F031         	call	_ReceiveEvt	;wreg free
 28046  002732  0900               	iorlw	0
 28047  002734  B4D8               	btfsc	status,2,c
 28048  002736  D02F               	goto	l989
 28049                           
 28050                           ;mdm_gsm_gprs.c: 318: {
 28051                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 28052  002738  CC58  FFE8         	movff	_RxBuffer,wreg
 28053  00273C  0A4F               	xorlw	79
 28054  00273E  A4D8               	btfss	status,2,c
 28055  002740  D005               	goto	u14170
 28056  002742  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28057  002746  0A4B               	xorlw	75
 28058  002748  B4D8               	btfsc	status,2,c
 28059  00274A  D00A               	goto	u14190
 28060  00274C                     u14170:
 28061  00274C  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28062  002750  0A4F               	xorlw	79
 28063  002752  A4D8               	btfss	status,2,c
 28064  002754  0012               	return	
 28065  002756  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 28066  00275A  0A4B               	xorlw	75
 28067  00275C  A4D8               	btfss	status,2,c
 28068  00275E  0012               	return	
 28069  002760                     u14190:
 28070                           
 28071                           ;mdm_gsm_gprs.c: 321: {
 28072                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 28073  002760  0E02               	movlw	2
 28074  002762  0100               	movlb	0	; () banked
 28075  002764  6FD1               	movwf	_MdmStatus& (0+255),b
 28076                           
 28077                           ; BSR set to: 0
 28078                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 28079  002766  0EE1               	movlw	low _MdmOnOffPulseRequest
 28080  002768  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28081  00276A  0E00               	movlw	high _MdmOnOffPulseRequest
 28082  00276C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28083  00276E  EC21  F033         	call	_GenerateEvt	;wreg free
 28084                           
 28085                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 28086  002772  0EF5               	movlw	low CheckModem@Timeout
 28087  002774  0100               	movlb	0	; () banked
 28088  002776  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28089  002778  0E03               	movlw	high CheckModem@Timeout
 28090  00277A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28091  00277C  0EE8               	movlw	232
 28092  00277E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28093  002780  0E03               	movlw	3
 28094  002782  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28095  002784  0E00               	movlw	0
 28096  002786  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28097  002788  0E00               	movlw	0
 28098  00278A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28099  00278C  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 28100                           
 28101                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 28102  002790  0E04               	movlw	4
 28103  002792  6E29               	movwf	CheckModem@CheckMdmSts,c
 28104                           
 28105                           ;mdm_gsm_gprs.c: 329: }
 28106                           ;mdm_gsm_gprs.c: 330: }
 28107  002794  0012               	return	
 28108  002796                     l989:
 28109                           
 28110                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28111  002796  0EF5               	movlw	low CheckModem@Timeout
 28112  002798  0100               	movlb	0	; () banked
 28113  00279A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28114  00279C  0E03               	movlw	high CheckModem@Timeout
 28115  00279E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28116  0027A0  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28117  0027A4  06E8               	decf	wreg,f,c
 28118  0027A6  A4D8               	btfss	status,2,c
 28119  0027A8  0012               	return	
 28120                           
 28121                           ;mdm_gsm_gprs.c: 332: {
 28122                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 28123  0027AA  0E00               	movlw	0
 28124  0027AC  0100               	movlb	0	; () banked
 28125  0027AE  6FD1               	movwf	_MdmStatus& (0+255),b
 28126                           
 28127                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 28128  0027B0  0E01               	movlw	1
 28129  0027B2  6E2A               	movwf	_ComChecCompleted,c
 28130                           
 28131                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 28132  0027B4  0E05               	movlw	5
 28133  0027B6  6E29               	movwf	CheckModem@CheckMdmSts,c
 28134                           
 28135                           ; BSR set to: 0
 28136                           ;mdm_gsm_gprs.c: 343: }
 28137                           ;mdm_gsm_gprs.c: 344: break;
 28138                           
 28139                           ; BSR set to: 0
 28140                           
 28141                           ;mdm_gsm_gprs.c: 340: else
 28142                           ;mdm_gsm_gprs.c: 341: {
 28143                           
 28144                           ; BSR set to: 0
 28145                           
 28146                           ;mdm_gsm_gprs.c: 339: }
 28147  0027B8  0012               	return	
 28148  0027BA                     
 28149                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28150                           
 28151                           ; BSR set to: 0
 28152  0027BA  0EF5               	movlw	low CheckModem@Timeout
 28153  0027BC  0100               	movlb	0	; () banked
 28154  0027BE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28155  0027C0  0E03               	movlw	high CheckModem@Timeout
 28156  0027C2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28157  0027C4  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28158  0027C8  06E8               	decf	wreg,f,c
 28159  0027CA  A4D8               	btfss	status,2,c
 28160  0027CC  0012               	return	
 28161                           
 28162                           ;mdm_gsm_gprs.c: 349: {
 28163                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 28164  0027CE  0E00               	movlw	0
 28165  0027D0  0100               	movlb	0	; () banked
 28166  0027D2  6FD1               	movwf	_MdmStatus& (0+255),b
 28167                           
 28168                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 28169  0027D4  0E01               	movlw	1
 28170  0027D6  6E2A               	movwf	_ComChecCompleted,c
 28171                           
 28172                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 28173  0027D8  0E05               	movlw	5
 28174  0027DA  6E29               	movwf	CheckModem@CheckMdmSts,c
 28175                           
 28176                           ; BSR set to: 0
 28177                           ;mdm_gsm_gprs.c: 365: }
 28178                           
 28179                           ; BSR set to: 0
 28180                           ;mdm_gsm_gprs.c: 364: break;
 28181                           
 28182                           ;mdm_gsm_gprs.c: 363: default:
 28183                           
 28184                           ; BSR set to: 0
 28185                           ;mdm_gsm_gprs.c: 361: break;
 28186                           
 28187                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 28188                           
 28189                           ; BSR set to: 0
 28190                           ;mdm_gsm_gprs.c: 356: }
 28191                           ;mdm_gsm_gprs.c: 357: break;
 28192  0027DC  0012               	return	
 28193  0027DE                     l982:
 28194                           
 28195                           ; BSR set to: 0
 28196  0027DE  5029               	movf	CheckModem@CheckMdmSts,w,c
 28197                           
 28198                           ; Switch size 1, requested type "space"
 28199                           ; Number of cases is 6, Range of values is 0 to 5
 28200                           ; switch strategies available:
 28201                           ; Name         Instructions Cycles
 28202                           ; simple_byte           19    10 (average)
 28203                           ;	Chosen strategy is simple_byte
 28204  0027E0  0A00               	xorlw	0	; case 0
 28205  0027E2  B4D8               	btfsc	status,2,c
 28206  0027E4  D766               	goto	l983
 28207  0027E6  0A01               	xorlw	1	; case 1
 28208  0027E8  B4D8               	btfsc	status,2,c
 28209  0027EA  D775               	goto	l985
 28210  0027EC  0A03               	xorlw	3	; case 2
 28211  0027EE  B4D8               	btfsc	status,2,c
 28212  0027F0  D77F               	goto	l987
 28213  0027F2  0A01               	xorlw	1	; case 3
 28214  0027F4  B4D8               	btfsc	status,2,c
 28215  0027F6  D796               	goto	l988
 28216  0027F8  0A07               	xorlw	7	; case 4
 28217  0027FA  B4D8               	btfsc	status,2,c
 28218  0027FC  D7DE               	goto	l998
 28219  0027FE  0A01               	xorlw	1	; case 5
 28220  002800  0012               	return	
 28221  002802                     __end_of_CheckModem:
 28222                           	opt stack 0
 28223                           tosu	equ	0xFFF
 28224                           tosh	equ	0xFFE
 28225                           tosl	equ	0xFFD
 28226                           pclath	equ	0xFFA
 28227                           tblptru	equ	0xFF8
 28228                           tblptrh	equ	0xFF7
 28229                           tblptrl	equ	0xFF6
 28230                           tablat	equ	0xFF5
 28231                           prodh	equ	0xFF4
 28232                           prodl	equ	0xFF3
 28233                           intcon	equ	0xFF2
 28234                           intcon2	equ	0xFF1
 28235                           intcon3	equ	0xFF0
 28236                           indf0	equ	0xFEF
 28237                           postinc0	equ	0xFEE
 28238                           plusw0	equ	0xFEB
 28239                           fsr0h	equ	0xFEA
 28240                           fsr0l	equ	0xFE9
 28241                           wreg	equ	0xFE8
 28242                           indf1	equ	0xFE7
 28243                           postinc1	equ	0xFE6
 28244                           postdec1	equ	0xFE5
 28245                           plusw1	equ	0xFE3
 28246                           fsr1h	equ	0xFE2
 28247                           fsr1l	equ	0xFE1
 28248                           indf2	equ	0xFDF
 28249                           postinc2	equ	0xFDE
 28250                           postdec2	equ	0xFDD
 28251                           plusw2	equ	0xFDB
 28252                           fsr2h	equ	0xFDA
 28253                           fsr2l	equ	0xFD9
 28254                           status	equ	0xFD8
 28255                           
 28256 ;; *************** function _MdmCntSm *****************
 28257 ;; Defined at:
 28258 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 28259 ;; Parameters:    Size  Location     Type
 28260 ;;		None
 28261 ;; Auto vars:     Size  Location     Type
 28262 ;;		None
 28263 ;; Return value:  Size  Location     Type
 28264 ;;                  1    wreg      void 
 28265 ;; Registers used:
 28266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28267 ;; Tracked objects:
 28268 ;;		On entry : 0/0
 28269 ;;		On exit  : 0/0
 28270 ;;		Unchanged: 0/0
 28271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28276 ;;Total ram usage:        0 bytes
 28277 ;; Hardware stack levels used:    1
 28278 ;; Hardware stack levels required when called:   12
 28279 ;; This function calls:
 28280 ;;		_InitModemInterface
 28281 ;;		_ReceiveEvt
 28282 ;; This function is called by:
 28283 ;;		_Mdm_DrvMainFn
 28284 ;; This function uses a non-reentrant model
 28285 ;;
 28286                           
 28287                           	psect	text131
 28288  00452A                     __ptext131:
 28289                           	opt stack 0
 28290  00452A                     _MdmCntSm:
 28291                           	opt stack 15
 28292                           
 28293                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 28294                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 28295                           ;mdm_drv.c: 204: switch (MdmCntState)
 28296                           
 28297                           ;incstack = 0
 28298  00452A  D045               	goto	l315
 28299  00452C                     
 28300                           ;mdm_drv.c: 208: InitModemInterface();
 28301  00452C  ECD9  F033         	call	_InitModemInterface	;wreg free
 28302                           
 28303                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 28304  004530  0E01               	movlw	1
 28305  004532  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28306                           
 28307                           ;mdm_drv.c: 211: break;
 28308  004534  0012               	return	
 28309  004536                     
 28310                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 28311  004536  0EE1               	movlw	low _MdmOnOffPulseRequest
 28312  004538  0100               	movlb	0	; () banked
 28313  00453A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28314  00453C  0E00               	movlw	high _MdmOnOffPulseRequest
 28315  00453E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28316  004540  EC2C  F031         	call	_ReceiveEvt	;wreg free
 28317  004544  0900               	iorlw	0
 28318  004546  B4D8               	btfsc	status,2,c
 28319  004548  D009               	goto	l319
 28320                           
 28321                           ;mdm_drv.c: 216: {
 28322                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 28323  00454A  0E02               	movlw	2
 28324  00454C  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28325                           
 28326                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 28327  00454E  8284               	bsf	3972,1,c	;volatile
 28328                           
 28329                           ;mdm_drv.c: 222: Counter = 0;
 28330  004550  0E00               	movlw	0
 28331  004552  0102               	movlb	2	; () banked
 28332  004554  6FDE               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28333  004556  0E00               	movlw	0
 28334  004558  6FDD               	movwf	MdmCntSm@Counter& (0+255),b
 28335                           
 28336                           ;mdm_drv.c: 223: }
 28337  00455A  0012               	return	
 28338  00455C                     l319:
 28339                           
 28340                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 28341                           
 28342                           ; BSR set to: 2
 28343  00455C  0E3D               	movlw	low _MdmResetRequest
 28344  00455E  0100               	movlb	0	; () banked
 28345  004560  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28346  004562  0E00               	movlw	high _MdmResetRequest
 28347  004564  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28348  004566  EC2C  F031         	call	_ReceiveEvt	;wreg free
 28349  00456A  0900               	iorlw	0
 28350  00456C  B4D8               	btfsc	status,2,c
 28351  00456E  0012               	return	
 28352                           
 28353                           ;mdm_drv.c: 225: {
 28354                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 28355  004570  0E03               	movlw	3
 28356  004572  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28357                           
 28358                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 28359  004574  8084               	bsf	3972,0,c	;volatile
 28360                           
 28361                           ;mdm_drv.c: 231: Counter = 0;
 28362  004576  0E00               	movlw	0
 28363  004578  0102               	movlb	2	; () banked
 28364  00457A  6FDE               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28365  00457C  0E00               	movlw	0
 28366  00457E  6FDD               	movwf	MdmCntSm@Counter& (0+255),b
 28367                           
 28368                           ; BSR set to: 2
 28369                           ;mdm_drv.c: 236: }
 28370                           ;mdm_drv.c: 237: break;
 28371                           
 28372                           ; BSR set to: 2
 28373                           
 28374                           ;mdm_drv.c: 233: else
 28375                           ;mdm_drv.c: 234: {
 28376                           
 28377                           ; BSR set to: 2
 28378                           
 28379                           ;mdm_drv.c: 232: }
 28380  004580  0012               	return	
 28381  004582                     
 28382                           ;mdm_drv.c: 241: Counter++;
 28383                           
 28384                           ; BSR set to: 2
 28385  004582  0102               	movlb	2	; () banked
 28386  004584  4BDD               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28387  004586  2BDE               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28388                           
 28389                           ; BSR set to: 2
 28390                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 28391  004588  51DE               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28392  00458A  E104               	bnz	u14090
 28393  00458C  0E96               	movlw	150
 28394  00458E  5DDD               	subwf	MdmCntSm@Counter& (0+255),w,b
 28395  004590  A0D8               	btfss	status,0,c
 28396  004592  0012               	return	
 28397  004594                     u14090:
 28398                           
 28399                           ; BSR set to: 2
 28400                           ;mdm_drv.c: 244: {
 28401                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 28402  004594  9284               	bcf	3972,1,c	;volatile
 28403                           
 28404                           ; BSR set to: 2
 28405                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 28406  004596  0E01               	movlw	1
 28407  004598  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28408                           
 28409                           ; BSR set to: 2
 28410                           ;mdm_drv.c: 249: }
 28411                           ;mdm_drv.c: 250: break;
 28412  00459A  0012               	return	
 28413  00459C                     
 28414                           ;mdm_drv.c: 254: Counter++;
 28415                           
 28416                           ; BSR set to: 2
 28417  00459C  0102               	movlb	2	; () banked
 28418  00459E  4BDD               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28419  0045A0  2BDE               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28420                           
 28421                           ; BSR set to: 2
 28422                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 28423  0045A2  51DE               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28424  0045A4  E104               	bnz	u14100
 28425  0045A6  0E0A               	movlw	10
 28426  0045A8  5DDD               	subwf	MdmCntSm@Counter& (0+255),w,b
 28427  0045AA  A0D8               	btfss	status,0,c
 28428  0045AC  0012               	return	
 28429  0045AE                     u14100:
 28430                           
 28431                           ; BSR set to: 2
 28432                           ;mdm_drv.c: 257: {
 28433                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 28434  0045AE  9084               	bcf	3972,0,c	;volatile
 28435                           
 28436                           ; BSR set to: 2
 28437                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 28438  0045B0  0E01               	movlw	1
 28439  0045B2  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28440                           
 28441                           ; BSR set to: 2
 28442                           ;mdm_drv.c: 267: }
 28443                           
 28444                           ; BSR set to: 2
 28445                           ;mdm_drv.c: 266: break;
 28446                           
 28447                           ;mdm_drv.c: 265: default:
 28448                           
 28449                           ; BSR set to: 2
 28450                           ;mdm_drv.c: 262: }
 28451                           ;mdm_drv.c: 263: break;
 28452  0045B4  0012               	return	
 28453  0045B6                     l315:
 28454                           
 28455                           ; BSR set to: 2
 28456  0045B6  502D               	movf	MdmCntSm@MdmCntState,w,c
 28457                           
 28458                           ; Switch size 1, requested type "space"
 28459                           ; Number of cases is 4, Range of values is 0 to 3
 28460                           ; switch strategies available:
 28461                           ; Name         Instructions Cycles
 28462                           ; simple_byte           13     7 (average)
 28463                           ;	Chosen strategy is simple_byte
 28464  0045B8  0A00               	xorlw	0	; case 0
 28465  0045BA  B4D8               	btfsc	status,2,c
 28466  0045BC  D7B7               	goto	l316
 28467  0045BE  0A01               	xorlw	1	; case 1
 28468  0045C0  B4D8               	btfsc	status,2,c
 28469  0045C2  D7B9               	goto	l318
 28470  0045C4  0A03               	xorlw	3	; case 2
 28471  0045C6  B4D8               	btfsc	status,2,c
 28472  0045C8  D7DC               	goto	l323
 28473  0045CA  0A01               	xorlw	1	; case 3
 28474  0045CC  A4D8               	btfss	status,2,c
 28475  0045CE  0012               	return	
 28476  0045D0  D7E5               	goto	l325
 28477  0045D2                     __end_of_MdmCntSm:
 28478                           	opt stack 0
 28479                           tosu	equ	0xFFF
 28480                           tosh	equ	0xFFE
 28481                           tosl	equ	0xFFD
 28482                           pclath	equ	0xFFA
 28483                           tblptru	equ	0xFF8
 28484                           tblptrh	equ	0xFF7
 28485                           tblptrl	equ	0xFF6
 28486                           tablat	equ	0xFF5
 28487                           prodh	equ	0xFF4
 28488                           prodl	equ	0xFF3
 28489                           intcon	equ	0xFF2
 28490                           intcon2	equ	0xFF1
 28491                           intcon3	equ	0xFF0
 28492                           indf0	equ	0xFEF
 28493                           postinc0	equ	0xFEE
 28494                           plusw0	equ	0xFEB
 28495                           fsr0h	equ	0xFEA
 28496                           fsr0l	equ	0xFE9
 28497                           wreg	equ	0xFE8
 28498                           indf1	equ	0xFE7
 28499                           postinc1	equ	0xFE6
 28500                           postdec1	equ	0xFE5
 28501                           plusw1	equ	0xFE3
 28502                           fsr1h	equ	0xFE2
 28503                           fsr1l	equ	0xFE1
 28504                           indf2	equ	0xFDF
 28505                           postinc2	equ	0xFDE
 28506                           postdec2	equ	0xFDD
 28507                           plusw2	equ	0xFDB
 28508                           fsr2h	equ	0xFDA
 28509                           fsr2l	equ	0xFD9
 28510                           status	equ	0xFD8
 28511                           
 28512 ;; *************** function _InitModemInterface *****************
 28513 ;; Defined at:
 28514 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 28515 ;; Parameters:    Size  Location     Type
 28516 ;;		None
 28517 ;; Auto vars:     Size  Location     Type
 28518 ;;		None
 28519 ;; Return value:  Size  Location     Type
 28520 ;;                  1    wreg      void 
 28521 ;; Registers used:
 28522 ;;		None
 28523 ;; Tracked objects:
 28524 ;;		On entry : 0/0
 28525 ;;		On exit  : 0/0
 28526 ;;		Unchanged: 0/0
 28527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28532 ;;Total ram usage:        0 bytes
 28533 ;; Hardware stack levels used:    1
 28534 ;; Hardware stack levels required when called:   11
 28535 ;; This function calls:
 28536 ;;		Nothing
 28537 ;; This function is called by:
 28538 ;;		_MdmCntSm
 28539 ;; This function uses a non-reentrant model
 28540 ;;
 28541                           
 28542                           	psect	text132
 28543  0067B2                     __ptext132:
 28544                           	opt stack 0
 28545  0067B2                     _InitModemInterface:
 28546                           	opt stack 15
 28547                           
 28548                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 28549                           
 28550                           ;incstack = 0
 28551  0067B2  9096               	bcf	3990,0,c	;volatile
 28552                           
 28553                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 28554  0067B4  9296               	bcf	3990,1,c	;volatile
 28555                           
 28556                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 28557  0067B6  8496               	bsf	3990,2,c	;volatile
 28558  0067B8  0012               	return		;funcret
 28559  0067BA                     __end_of_InitModemInterface:
 28560                           	opt stack 0
 28561                           tosu	equ	0xFFF
 28562                           tosh	equ	0xFFE
 28563                           tosl	equ	0xFFD
 28564                           pclath	equ	0xFFA
 28565                           tblptru	equ	0xFF8
 28566                           tblptrh	equ	0xFF7
 28567                           tblptrl	equ	0xFF6
 28568                           tablat	equ	0xFF5
 28569                           prodh	equ	0xFF4
 28570                           prodl	equ	0xFF3
 28571                           intcon	equ	0xFF2
 28572                           intcon2	equ	0xFF1
 28573                           intcon3	equ	0xFF0
 28574                           indf0	equ	0xFEF
 28575                           postinc0	equ	0xFEE
 28576                           plusw0	equ	0xFEB
 28577                           fsr0h	equ	0xFEA
 28578                           fsr0l	equ	0xFE9
 28579                           wreg	equ	0xFE8
 28580                           indf1	equ	0xFE7
 28581                           postinc1	equ	0xFE6
 28582                           postdec1	equ	0xFE5
 28583                           plusw1	equ	0xFE3
 28584                           fsr1h	equ	0xFE2
 28585                           fsr1l	equ	0xFE1
 28586                           indf2	equ	0xFDF
 28587                           postinc2	equ	0xFDE
 28588                           postdec2	equ	0xFDD
 28589                           plusw2	equ	0xFDB
 28590                           fsr2h	equ	0xFDA
 28591                           fsr2l	equ	0xFD9
 28592                           status	equ	0xFD8
 28593                           
 28594 ;; *************** function _InitGprsNetwork *****************
 28595 ;; Defined at:
 28596 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 28597 ;; Parameters:    Size  Location     Type
 28598 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 28599 ;;		 -> NULL(0), 
 28600 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 28601 ;; Auto vars:     Size  Location     Type
 28602 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 28603 ;;  Index           1   50[BANK1 ] unsigned char 
 28604 ;; Return value:  Size  Location     Type
 28605 ;;                  1    wreg      enum E8921
 28606 ;; Registers used:
 28607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28608 ;; Tracked objects:
 28609 ;;		On entry : 0/0
 28610 ;;		On exit  : 0/0
 28611 ;;		Unchanged: 0/0
 28612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28613 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28614 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28616 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28617 ;;Total ram usage:       56 bytes
 28618 ;; Hardware stack levels used:    1
 28619 ;; Hardware stack levels required when called:   14
 28620 ;; This function calls:
 28621 ;;		_ClearBuffer
 28622 ;;		_OsTmr_GetTimerStatus
 28623 ;;		_OsTmr_StartTimer
 28624 ;;		_ReceiveEvt
 28625 ;;		_StringCopy
 28626 ;;		_Uart_WriteConstString
 28627 ;;		_Uart_WriteString
 28628 ;; This function is called by:
 28629 ;;		_MdmHttp_MainTask
 28630 ;; This function uses a non-reentrant model
 28631 ;;
 28632                           
 28633                           	psect	text133
 28634  000DC8                     __ptext133:
 28635                           	opt stack 0
 28636  000DC8                     _InitGprsNetwork:
 28637                           	opt stack 13
 28638                           
 28639                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 28640                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 28641                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 28642                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 28643                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 28644                           
 28645                           ;incstack = 0
 28646  000DC8  0E00               	movlw	0
 28647  000DCA  0101               	movlb	1	; () banked
 28648  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 28649                           
 28650                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 28651  000DCE  D154               	goto	l1216
 28652  000DD0                     
 28653                           ; BSR set to: 1
 28654                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 28655                           
 28656                           ; BSR set to: 1
 28657  000DD0  0EDA               	movlw	low _InitNetwork
 28658  000DD2  0100               	movlb	0	; () banked
 28659  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28660  000DD6  0E00               	movlw	high _InitNetwork
 28661  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28662  000DDA  EC2C  F031         	call	_ReceiveEvt	;wreg free
 28663  000DDE  0900               	iorlw	0
 28664  000DE0  B4D8               	btfsc	status,2,c
 28665  000DE2  D166               	goto	l1219
 28666                           
 28667                           ;mdm_gsm_gprs_http.c: 137: {
 28668                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 28669  000DE4  0E01               	movlw	1
 28670  000DE6  D141               	goto	L79
 28671  000DE8                     
 28672                           ; BSR set to: 1
 28673                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 28674                           
 28675                           ; BSR set to: 1
 28676  000DE8  0E89               	movlw	low STR_8
 28677  000DEA  0100               	movlb	0	; () banked
 28678  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28679  000DEE  0EFE               	movlw	high STR_8
 28680  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28681  000DF2  0E01               	movlw	1
 28682  000DF4  EC1C  F02F         	call	_Uart_WriteConstString
 28683                           
 28684                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 28685  000DF8  0E07               	movlw	7
 28686  000DFA  0101               	movlb	1	; () banked
 28687  000DFC  6FEB               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 28688                           
 28689                           ; BSR set to: 1
 28690                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 28691  000DFE  0E02               	movlw	2
 28692  000E00  0100               	movlb	0	; () banked
 28693  000E02  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 28694                           
 28695                           ; BSR set to: 0
 28696                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 28697  000E04  0EF5               	movlw	low _ConnTimeout
 28698  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28699  000E08  0E02               	movlw	high _ConnTimeout
 28700  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28701  000E0C  0E20               	movlw	32
 28702  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28703  000E10  0E4E               	movlw	78
 28704  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28705  000E14  0E00               	movlw	0
 28706  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28707  000E18  0E00               	movlw	0
 28708  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28709  000E1C  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 28710  000E20  D0C7               	goto	l15084
 28711  000E22                     
 28712                           ; BSR set to: 1
 28713                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 28714                           
 28715                           ; BSR set to: 1
 28716  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 28717  000E24  0100               	movlb	0	; () banked
 28718  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28719  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 28720  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28721  000E2C  0E00               	movlw	0
 28722  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28723  000E30  0E32               	movlw	50
 28724  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28725  000E34  EC4E  F030         	call	_ClearBuffer	;wreg free
 28726                           
 28727                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 28728  000E38  0EBD               	movlw	low STR_9
 28729  000E3A  0100               	movlb	0	; () banked
 28730  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 28731  000E3E  0EFE               	movlw	high STR_9
 28732  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28733  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 28734  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 28735  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 28736  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28737  000E4A  0E00               	movlw	0
 28738  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 28739  000E4E  0E14               	movlw	20
 28740  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 28741  000E52  EC3D  F02A         	call	_StringCopy	;wreg free
 28742                           
 28743                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 28744  000E56  0E00               	movlw	0
 28745  000E58  0101               	movlb	1	; () banked
 28746  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 28747  000E5C  D01C               	goto	l1222
 28748  000E5E                     
 28749                           ; BSR set to: 1
 28750                           ;mdm_gsm_gprs_http.c: 161: {
 28751                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 28752                           
 28753                           ; BSR set to: 1
 28754  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 28755  000E60  0D01               	mullw	1
 28756  000E62  50F3               	movf	prodl,w,c
 28757  000E64  0100               	movlb	0	; () banked
 28758  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 28759  000E68  6ED9               	movwf	fsr2l,c
 28760  000E6A  50F4               	movf	prodh,w,c
 28761  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 28762  000E6E  6EDA               	movwf	fsr2h,c
 28763  000E70  0101               	movlb	1	; () banked
 28764  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 28765  000E74  0100               	movlb	0	; () banked
 28766  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 28767  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 28768  000E7A  0E14               	movlw	20
 28769  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 28770  000E7E  0E00               	movlw	0
 28771  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 28772  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 28773  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 28774  000E86  6EE1               	movwf	fsr1l,c
 28775  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 28776  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 28777  000E8C  6EE2               	movwf	fsr1h,c
 28778  000E8E  CFDF FFE7          	movff	indf2,indf1
 28779                           
 28780                           ; BSR set to: 0
 28781  000E92  0101               	movlb	1	; () banked
 28782  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 28783  000E96                     l1222:
 28784                           
 28785                           ; BSR set to: 1
 28786                           
 28787                           ; BSR set to: 1
 28788  000E96  0100               	movlb	0	; () banked
 28789  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 28790  000E9A  0101               	movlb	1	; () banked
 28791  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 28792  000E9E  A0D8               	btfss	status,0,c
 28793  000EA0  D7DE               	goto	l1223
 28794                           
 28795                           ; BSR set to: 1
 28796                           ;mdm_gsm_gprs_http.c: 163: }
 28797                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 28798                           
 28799                           ; BSR set to: 1
 28800  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 28801  000EA4  0100               	movlb	0	; () banked
 28802  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 28803  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 28804  000EAA  0E14               	movlw	20
 28805  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 28806  000EAE  0E00               	movlw	0
 28807  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 28808  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 28809  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 28810  000EB6  6ED9               	movwf	fsr2l,c
 28811  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 28812  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 28813  000EBC  6EDA               	movwf	fsr2h,c
 28814  000EBE  0E22               	movlw	34
 28815  000EC0  6EDF               	movwf	indf2,c
 28816                           
 28817                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 28818  000EC2  0101               	movlb	1	; () banked
 28819  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 28820  000EC6  0100               	movlb	0	; () banked
 28821  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 28822  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 28823  000ECC  0E15               	movlw	21
 28824  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 28825  000ED0  0E00               	movlw	0
 28826  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 28827  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 28828  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 28829  000ED8  6ED9               	movwf	fsr2l,c
 28830  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 28831  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 28832  000EDE  6EDA               	movwf	fsr2h,c
 28833  000EE0  0E0D               	movlw	13
 28834  000EE2  6EDF               	movwf	indf2,c
 28835                           
 28836                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 28837  000EE4  0101               	movlb	1	; () banked
 28838  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 28839  000EE8  0100               	movlb	0	; () banked
 28840  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 28841  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 28842  000EEE  0E16               	movlw	22
 28843  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 28844  000EF2  0E00               	movlw	0
 28845  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 28846  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 28847  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 28848  000EFA  6ED9               	movwf	fsr2l,c
 28849  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 28850  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 28851  000F00  6EDA               	movwf	fsr2h,c
 28852  000F02  0E00               	movlw	0
 28853  000F04  6EDF               	movwf	indf2,c
 28854                           
 28855                           ; BSR set to: 0
 28856                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 28857  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 28858  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 28859  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 28860  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 28861  000F0E  0E01               	movlw	1
 28862  000F10  ECBC  F02F         	call	_Uart_WriteString
 28863                           
 28864                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 28865  000F14  0E07               	movlw	7
 28866  000F16  0101               	movlb	1	; () banked
 28867  000F18  6FEB               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 28868                           
 28869                           ; BSR set to: 1
 28870                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 28871  000F1A  0E03               	movlw	3
 28872  000F1C  0100               	movlb	0	; () banked
 28873  000F1E  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 28874                           
 28875                           ; BSR set to: 0
 28876                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 28877  000F20  0EF5               	movlw	low _ConnTimeout
 28878  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28879  000F24  0E02               	movlw	high _ConnTimeout
 28880  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28881  000F28  0E20               	movlw	32
 28882  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28883  000F2C  0E4E               	movlw	78
 28884  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28885  000F30  0E00               	movlw	0
 28886  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28887  000F34  0E00               	movlw	0
 28888  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28889  000F38  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 28890  000F3C  D039               	goto	l15084
 28891  000F3E                     
 28892                           ; BSR set to: 1
 28893                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 28894                           
 28895                           ; BSR set to: 1
 28896  000F3E  0E4B               	movlw	low STR_10
 28897  000F40  0100               	movlb	0	; () banked
 28898  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28899  000F44  0EFF               	movlw	high STR_10
 28900  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28901  000F48  0E01               	movlw	1
 28902  000F4A  EC1C  F02F         	call	_Uart_WriteConstString
 28903                           
 28904                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 28905  000F4E  0E07               	movlw	7
 28906  000F50  0101               	movlb	1	; () banked
 28907  000F52  6FEB               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 28908                           
 28909                           ; BSR set to: 1
 28910                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 28911  000F54  0E05               	movlw	5
 28912  000F56  0100               	movlb	0	; () banked
 28913  000F58  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 28914                           
 28915                           ; BSR set to: 0
 28916                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 28917  000F5A  0EF5               	movlw	low _ConnTimeout
 28918  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28919  000F5E  0E02               	movlw	high _ConnTimeout
 28920  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28921  000F62  0E20               	movlw	32
 28922  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28923  000F66  0E4E               	movlw	78
 28924  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28925  000F6A  0E00               	movlw	0
 28926  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28927  000F6E  0E00               	movlw	0
 28928  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28929  000F72  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 28930  000F76  D01C               	goto	l15084
 28931  000F78                     
 28932                           ; BSR set to: 1
 28933                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 28934                           
 28935                           ; BSR set to: 1
 28936  000F78  0E59               	movlw	low STR_11
 28937  000F7A  0100               	movlb	0	; () banked
 28938  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28939  000F7E  0EFF               	movlw	high STR_11
 28940  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28941  000F82  0E01               	movlw	1
 28942  000F84  EC1C  F02F         	call	_Uart_WriteConstString
 28943                           
 28944                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 28945  000F88  0E08               	movlw	8
 28946  000F8A  0101               	movlb	1	; () banked
 28947  000F8C  6FEB               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 28948                           
 28949                           ; BSR set to: 1
 28950                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 28951  000F8E  0E05               	movlw	5
 28952  000F90  0100               	movlb	0	; () banked
 28953  000F92  6FD0               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 28954                           
 28955                           ; BSR set to: 0
 28956                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 28957  000F94  0EF5               	movlw	low _ConnTimeout
 28958  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28959  000F98  0E02               	movlw	high _ConnTimeout
 28960  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28961  000F9C  0E20               	movlw	32
 28962  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28963  000FA0  0E4E               	movlw	78
 28964  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28965  000FA4  0E00               	movlw	0
 28966  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28967  000FA8  0E00               	movlw	0
 28968  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28969  000FAC  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 28970  000FB0                     l15084:
 28971                           
 28972                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 28973  000FB0  0E01               	movlw	1
 28974  000FB2  0101               	movlb	1	; () banked
 28975  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 28976                           
 28977                           ;mdm_gsm_gprs_http.c: 201: break;
 28978  000FB6  D07C               	goto	l1219
 28979  000FB8                     
 28980                           ; BSR set to: 1
 28981                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 28982                           
 28983                           ; BSR set to: 1
 28984  000FB8  0E02               	movlw	2
 28985  000FBA  D05A               	goto	L78
 28986  000FBC                     
 28987                           ; BSR set to: 1
 28988                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 28989                           
 28990                           ; BSR set to: 1
 28991  000FBC  0E3C               	movlw	low _NewStringReceived
 28992  000FBE  0100               	movlb	0	; () banked
 28993  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28994  000FC2  0E00               	movlw	high _NewStringReceived
 28995  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28996  000FC6  EC2C  F031         	call	_ReceiveEvt	;wreg free
 28997  000FCA  0900               	iorlw	0
 28998  000FCC  B4D8               	btfsc	status,2,c
 28999  000FCE  D018               	goto	l1229
 29000                           
 29001                           ;mdm_gsm_gprs_http.c: 212: {
 29002                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 29003  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 29004  000FD4  0A4F               	xorlw	79
 29005  000FD6  A4D8               	btfss	status,2,c
 29006  000FD8  D06B               	goto	l1219
 29007  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29008  000FDE  0A4B               	xorlw	75
 29009  000FE0  A4D8               	btfss	status,2,c
 29010  000FE2  D066               	goto	l1219
 29011                           
 29012                           ;mdm_gsm_gprs_http.c: 215: {
 29013                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 29014  000FE4  C0D0  F1EB         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 29015                           
 29016                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 29017  000FE8  0E58               	movlw	low _RxBuffer
 29018  000FEA  0100               	movlb	0	; () banked
 29019  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29020  000FEE  0E0C               	movlw	high _RxBuffer
 29021  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29022  000FF2  0E01               	movlw	1
 29023  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29024  000FF6  0E90               	movlw	144
 29025  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29026  000FFA  EC4E  F030         	call	_ClearBuffer	;wreg free
 29027                           
 29028                           ;mdm_gsm_gprs_http.c: 220: }
 29029                           ;mdm_gsm_gprs_http.c: 221: }
 29030  000FFE  D058               	goto	l1219
 29031  001000                     l1229:
 29032                           
 29033                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29034  001000  0EF5               	movlw	low _ConnTimeout
 29035  001002  0100               	movlb	0	; () banked
 29036  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29037  001006  0E02               	movlw	high _ConnTimeout
 29038  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29039  00100A  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29040  00100E  D029               	goto	L43
 29041  001010                     
 29042                           ; BSR set to: 1
 29043                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 29044                           
 29045                           ; BSR set to: 1
 29046  001010  0E3C               	movlw	low _NewStringReceived
 29047  001012  0100               	movlb	0	; () banked
 29048  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29049  001016  0E00               	movlw	high _NewStringReceived
 29050  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29051  00101A  EC2C  F031         	call	_ReceiveEvt	;wreg free
 29052  00101E  0900               	iorlw	0
 29053  001020  B4D8               	btfsc	status,2,c
 29054  001022  D018               	goto	l1234
 29055                           
 29056                           ;mdm_gsm_gprs_http.c: 232: {
 29057                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 29058  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 29059  001028  0A2B               	xorlw	43
 29060  00102A  A4D8               	btfss	status,2,c
 29061  00102C  D041               	goto	l1219
 29062  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29063  001032  0A53               	xorlw	83
 29064  001034  A4D8               	btfss	status,2,c
 29065  001036  D03C               	goto	l1219
 29066                           
 29067                           ;mdm_gsm_gprs_http.c: 235: {
 29068                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 29069  001038  C0D0  F1EB         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 29070                           
 29071                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 29072  00103C  0E58               	movlw	low _RxBuffer
 29073  00103E  0100               	movlb	0	; () banked
 29074  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29075  001042  0E0C               	movlw	high _RxBuffer
 29076  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29077  001046  0E01               	movlw	1
 29078  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29079  00104A  0E90               	movlw	144
 29080  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29081  00104E  EC4E  F030         	call	_ClearBuffer	;wreg free
 29082                           
 29083                           ;mdm_gsm_gprs_http.c: 240: }
 29084                           ;mdm_gsm_gprs_http.c: 241: }
 29085  001052  D02E               	goto	l1219
 29086  001054                     l1234:
 29087                           
 29088                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29089  001054  0EF5               	movlw	low _ConnTimeout
 29090  001056  0100               	movlb	0	; () banked
 29091  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29092  00105A  0E02               	movlw	high _ConnTimeout
 29093  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29094  00105E  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29095  001062                     L43:
 29096  001062  06E8               	decf	wreg,f,c
 29097  001064  A4D8               	btfss	status,2,c
 29098  001066  D024               	goto	l1219
 29099                           
 29100                           ;mdm_gsm_gprs_http.c: 243: {
 29101                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 29102  001068  0E06               	movlw	6
 29103  00106A                     L79:
 29104  00106A  0101               	movlb	1	; () banked
 29105  00106C  D003               	goto	L42
 29106  00106E                     
 29107                           ; BSR set to: 1
 29108                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 29109                           
 29110                           ; BSR set to: 1
 29111  00106E  0E03               	movlw	3
 29112  001070                     L78:
 29113  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 29114                           
 29115                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 29116  001072  0E00               	movlw	0
 29117  001074                     L42:
 29118  001074  6FEB               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29119                           
 29120                           ; BSR set to: 1
 29121                           ;mdm_gsm_gprs_http.c: 257: }
 29122                           
 29123                           ; BSR set to: 1
 29124                           ;mdm_gsm_gprs_http.c: 256: break;
 29125                           
 29126                           ;mdm_gsm_gprs_http.c: 255: default:
 29127                           
 29128                           ;mdm_gsm_gprs_http.c: 253: break;
 29129  001076  D01C               	goto	l1219
 29130  001078                     l1216:
 29131                           
 29132                           ; BSR set to: 1
 29133                           
 29134                           ; BSR set to: 1
 29135  001078  51EB               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 29136                           
 29137                           ; Switch size 1, requested type "space"
 29138                           ; Number of cases is 9, Range of values is 0 to 8
 29139                           ; switch strategies available:
 29140                           ; Name         Instructions Cycles
 29141                           ; simple_byte           28    15 (average)
 29142                           ;	Chosen strategy is simple_byte
 29143  00107A  0A00               	xorlw	0	; case 0
 29144  00107C  B4D8               	btfsc	status,2,c
 29145  00107E  D6A8               	goto	l1217
 29146  001080  0A01               	xorlw	1	; case 1
 29147  001082  B4D8               	btfsc	status,2,c
 29148  001084  D6B1               	goto	l1220
 29149  001086  0A03               	xorlw	3	; case 2
 29150  001088  B4D8               	btfsc	status,2,c
 29151  00108A  D6CB               	goto	l1221
 29152  00108C  0A01               	xorlw	1	; case 3
 29153  00108E  B4D8               	btfsc	status,2,c
 29154  001090  D756               	goto	l1225
 29155  001092  0A07               	xorlw	7	; case 4
 29156  001094  B4D8               	btfsc	status,2,c
 29157  001096  D770               	goto	l1226
 29158  001098  0A01               	xorlw	1	; case 5
 29159  00109A  B4D8               	btfsc	status,2,c
 29160  00109C  D78D               	goto	l1227
 29161  00109E  0A03               	xorlw	3	; case 6
 29162  0010A0  B4D8               	btfsc	status,2,c
 29163  0010A2  D7E5               	goto	l1238
 29164  0010A4  0A01               	xorlw	1	; case 7
 29165  0010A6  B4D8               	btfsc	status,2,c
 29166  0010A8  D789               	goto	l1228
 29167  0010AA  0A0F               	xorlw	15	; case 8
 29168  0010AC  B4D8               	btfsc	status,2,c
 29169  0010AE  D7B0               	goto	l1233
 29170  0010B0                     l1219:
 29171                           
 29172                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 29173                           
 29174                           ; BSR set to: 1
 29175  0010B0  0101               	movlb	1	; () banked
 29176  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 29177  0010B4  0012               	return	
 29178  0010B6                     __end_of_InitGprsNetwork:
 29179                           	opt stack 0
 29180                           tosu	equ	0xFFF
 29181                           tosh	equ	0xFFE
 29182                           tosl	equ	0xFFD
 29183                           pclath	equ	0xFFA
 29184                           tblptru	equ	0xFF8
 29185                           tblptrh	equ	0xFF7
 29186                           tblptrl	equ	0xFF6
 29187                           tablat	equ	0xFF5
 29188                           prodh	equ	0xFF4
 29189                           prodl	equ	0xFF3
 29190                           intcon	equ	0xFF2
 29191                           intcon2	equ	0xFF1
 29192                           intcon3	equ	0xFF0
 29193                           indf0	equ	0xFEF
 29194                           postinc0	equ	0xFEE
 29195                           plusw0	equ	0xFEB
 29196                           fsr0h	equ	0xFEA
 29197                           fsr0l	equ	0xFE9
 29198                           wreg	equ	0xFE8
 29199                           indf1	equ	0xFE7
 29200                           postinc1	equ	0xFE6
 29201                           postdec1	equ	0xFE5
 29202                           plusw1	equ	0xFE3
 29203                           fsr1h	equ	0xFE2
 29204                           fsr1l	equ	0xFE1
 29205                           indf2	equ	0xFDF
 29206                           postinc2	equ	0xFDE
 29207                           postdec2	equ	0xFDD
 29208                           plusw2	equ	0xFDB
 29209                           fsr2h	equ	0xFDA
 29210                           fsr2l	equ	0xFD9
 29211                           status	equ	0xFD8
 29212                           
 29213 ;; *************** function _HttpGetMethod *****************
 29214 ;; Defined at:
 29215 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 29216 ;; Parameters:    Size  Location     Type
 29217 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 29218 ;;		 -> HttpGetDataLocal(5), 
 29219 ;; Auto vars:     Size  Location     Type
 29220 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 29221 ;;  Index           1  200[BANK1 ] unsigned char 
 29222 ;; Return value:  Size  Location     Type
 29223 ;;                  1    wreg      enum E8921
 29224 ;; Registers used:
 29225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29226 ;; Tracked objects:
 29227 ;;		On entry : 0/0
 29228 ;;		On exit  : 0/0
 29229 ;;		Unchanged: 0/0
 29230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29232 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29233 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29234 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29235 ;;Total ram usage:      207 bytes
 29236 ;; Hardware stack levels used:    1
 29237 ;; Hardware stack levels required when called:   14
 29238 ;; This function calls:
 29239 ;;		_ClearBuffer
 29240 ;;		_OsTmr_GetTimerStatus
 29241 ;;		_OsTmr_StartTimer
 29242 ;;		_ReceiveEvt
 29243 ;;		_StringCopy
 29244 ;;		_Uart_WriteConstString
 29245 ;;		_Uart_WriteString
 29246 ;; This function is called by:
 29247 ;;		_MdmHttp_MainTask
 29248 ;; This function uses a non-reentrant model
 29249 ;;
 29250                           
 29251                           	psect	text134
 29252  0005EC                     __ptext134:
 29253                           	opt stack 0
 29254  0005EC                     _HttpGetMethod:
 29255                           	opt stack 13
 29256                           
 29257                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 29258                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 29259                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 29260                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 29261                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 29262                           
 29263                           ; BSR set to: 1
 29264                           ;incstack = 0
 29265  0005EC  0E00               	movlw	0
 29266  0005EE  0101               	movlb	1	; () banked
 29267  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 29268                           
 29269                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 29270  0005F2  D230               	goto	l1249
 29271  0005F4                     
 29272                           ; BSR set to: 1
 29273                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 29274                           
 29275                           ; BSR set to: 1
 29276  0005F4  0ED9               	movlw	low _GetMethod
 29277  0005F6  0100               	movlb	0	; () banked
 29278  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29279  0005FA  0E00               	movlw	high _GetMethod
 29280  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29281  0005FE  EC2C  F031         	call	_ReceiveEvt	;wreg free
 29282  000602  0900               	iorlw	0
 29283  000604  B4D8               	btfsc	status,2,c
 29284  000606  D257               	goto	l1252
 29285                           
 29286                           ;mdm_gsm_gprs_http.c: 284: {
 29287                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 29288  000608  0E01               	movlw	1
 29289  00060A  D18C               	goto	L45
 29290  00060C                     
 29291                           ; BSR set to: 1
 29292                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 29293                           
 29294                           ; BSR set to: 1
 29295  00060C  0E9D               	movlw	low STR_12
 29296  00060E  0100               	movlb	0	; () banked
 29297  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29298  000612  0EFF               	movlw	high STR_12
 29299  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29300  000616  0E01               	movlw	1
 29301  000618  EC1C  F02F         	call	_Uart_WriteConstString
 29302                           
 29303                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 29304  00061C  0E0A               	movlw	10
 29305  00061E  0101               	movlb	1	; () banked
 29306  000620  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29307                           
 29308                           ; BSR set to: 1
 29309                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 29310  000622  0E02               	movlw	2
 29311  000624  0100               	movlb	0	; () banked
 29312  000626  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29313                           
 29314                           ; BSR set to: 0
 29315                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 29316  000628  0EF5               	movlw	low _ConnTimeout
 29317  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29318  00062C  0E02               	movlw	high _ConnTimeout
 29319  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29320  000630  0E20               	movlw	32
 29321  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29322  000634  0E4E               	movlw	78
 29323  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29324  000638  0E00               	movlw	0
 29325  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29326  00063C  0E00               	movlw	0
 29327  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29328  000640  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 29329  000644  D1AF               	goto	l15250
 29330  000646                     
 29331                           ; BSR set to: 1
 29332                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 29333                           
 29334                           ; BSR set to: 1
 29335  000646  0E67               	movlw	low STR_13
 29336  000648  0100               	movlb	0	; () banked
 29337  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29338  00064C  0EFF               	movlw	high STR_13
 29339  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29340  000650  0E01               	movlw	1
 29341  000652  EC1C  F02F         	call	_Uart_WriteConstString
 29342                           
 29343                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 29344  000656  0E0A               	movlw	10
 29345  000658  0101               	movlb	1	; () banked
 29346  00065A  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29347                           
 29348                           ; BSR set to: 1
 29349                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 29350  00065C  0E03               	movlw	3
 29351  00065E  0100               	movlb	0	; () banked
 29352  000660  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29353                           
 29354                           ; BSR set to: 0
 29355                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 29356  000662  0EF5               	movlw	low _ConnTimeout
 29357  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29358  000666  0E02               	movlw	high _ConnTimeout
 29359  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29360  00066A  0E20               	movlw	32
 29361  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29362  00066E  0E4E               	movlw	78
 29363  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29364  000672  0E00               	movlw	0
 29365  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29366  000676  0E00               	movlw	0
 29367  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29368  00067A  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 29369  00067E  D192               	goto	l15250
 29370  000680                     
 29371                           ; BSR set to: 1
 29372                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 29373                           
 29374                           ; BSR set to: 1
 29375  000680  0EA8               	movlw	low STR_14
 29376  000682  0100               	movlb	0	; () banked
 29377  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29378  000686  0EFE               	movlw	high STR_14
 29379  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29380  00068A  0E01               	movlw	1
 29381  00068C  EC1C  F02F         	call	_Uart_WriteConstString
 29382                           
 29383                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 29384  000690  0E0A               	movlw	10
 29385  000692  0101               	movlb	1	; () banked
 29386  000694  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29387                           
 29388                           ; BSR set to: 1
 29389                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 29390  000696  0E04               	movlw	4
 29391  000698  0100               	movlb	0	; () banked
 29392  00069A  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29393                           
 29394                           ; BSR set to: 0
 29395                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 29396  00069C  0EF5               	movlw	low _ConnTimeout
 29397  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29398  0006A0  0E02               	movlw	high _ConnTimeout
 29399  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29400  0006A4  0E20               	movlw	32
 29401  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29402  0006A8  0E4E               	movlw	78
 29403  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29404  0006AC  0E00               	movlw	0
 29405  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29406  0006B0  0E00               	movlw	0
 29407  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29408  0006B4  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 29409  0006B8  D175               	goto	l15250
 29410  0006BA                     
 29411                           ; BSR set to: 1
 29412                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 29413                           
 29414                           ; BSR set to: 1
 29415  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 29416  0006BC  0100               	movlb	0	; () banked
 29417  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29418  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 29419  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29420  0006C4  0E00               	movlw	0
 29421  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29422  0006C8  0EC8               	movlw	200
 29423  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29424  0006CC  EC4E  F030         	call	_ClearBuffer	;wreg free
 29425                           
 29426                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 29427  0006D0  0EE6               	movlw	low STR_15
 29428  0006D2  0100               	movlb	0	; () banked
 29429  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 29430  0006D6  0EFE               	movlw	high STR_15
 29431  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29432  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 29433  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 29434  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 29435  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 29436  0006E2  0E00               	movlw	0
 29437  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 29438  0006E6  0E13               	movlw	19
 29439  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 29440  0006EA  EC3D  F02A         	call	_StringCopy	;wreg free
 29441                           
 29442                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 29443  0006EE  0E00               	movlw	0
 29444  0006F0  0101               	movlb	1	; () banked
 29445  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 29446  0006F4  D024               	goto	l1257
 29447  0006F6                     
 29448                           ; BSR set to: 1
 29449                           ;mdm_gsm_gprs_http.c: 332: {
 29450                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 29451                           
 29452                           ; BSR set to: 1
 29453  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29454  0006F8  0D01               	mullw	1
 29455  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 29456  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 29457  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 29458  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 29459  00070A  50F3               	movf	prodl,w,c
 29460  00070C  0100               	movlb	0	; () banked
 29461  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29462  000710  6ED9               	movwf	fsr2l,c
 29463  000712  50F4               	movf	prodh,w,c
 29464  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29465  000716  6EDA               	movwf	fsr2h,c
 29466  000718  0101               	movlb	1	; () banked
 29467  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29468  00071C  0100               	movlb	0	; () banked
 29469  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 29470  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 29471  000722  0E13               	movlw	19
 29472  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 29473  000726  0E00               	movlw	0
 29474  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 29475  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 29476  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 29477  00072E  6EE1               	movwf	fsr1l,c
 29478  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 29479  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 29480  000734  6EE2               	movwf	fsr1h,c
 29481  000736  CFDF FFE7          	movff	indf2,indf1
 29482                           
 29483                           ; BSR set to: 0
 29484  00073A  0101               	movlb	1	; () banked
 29485  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 29486  00073E                     l1257:
 29487                           
 29488                           ; BSR set to: 1
 29489                           
 29490                           ; BSR set to: 1
 29491  00073E  0100               	movlb	0	; () banked
 29492  000740  EE20 F002          	lfsr	2,2
 29493  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 29494  000746  26D9               	addwf	fsr2l,f,c
 29495  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 29496  00074A  22DA               	addwfc	fsr2h,f,c
 29497  00074C  50DE               	movf	postinc2,w,c
 29498  00074E  0101               	movlb	1	; () banked
 29499  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 29500  000752  A0D8               	btfss	status,0,c
 29501  000754  D7D0               	goto	l1258
 29502                           
 29503                           ; BSR set to: 1
 29504                           ;mdm_gsm_gprs_http.c: 334: }
 29505                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 29506                           
 29507                           ; BSR set to: 1
 29508  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29509  000758  0100               	movlb	0	; () banked
 29510  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29511  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29512  00075E  0E13               	movlw	19
 29513  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29514  000762  0E00               	movlw	0
 29515  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29516  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 29517  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29518  00076A  6ED9               	movwf	fsr2l,c
 29519  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 29520  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29521  000770  6EDA               	movwf	fsr2h,c
 29522  000772  0E22               	movlw	34
 29523  000774  6EDF               	movwf	indf2,c
 29524                           
 29525                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 29526  000776  0101               	movlb	1	; () banked
 29527  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29528  00077A  0100               	movlb	0	; () banked
 29529  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29530  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29531  000780  0E14               	movlw	20
 29532  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29533  000784  0E00               	movlw	0
 29534  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29535  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 29536  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29537  00078C  6ED9               	movwf	fsr2l,c
 29538  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 29539  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29540  000792  6EDA               	movwf	fsr2h,c
 29541  000794  0E0D               	movlw	13
 29542  000796  6EDF               	movwf	indf2,c
 29543                           
 29544                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 29545  000798  0101               	movlb	1	; () banked
 29546  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29547  00079C  0100               	movlb	0	; () banked
 29548  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29549  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29550  0007A2  0E15               	movlw	21
 29551  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29552  0007A6  0E00               	movlw	0
 29553  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29554  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 29555  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29556  0007AE  6ED9               	movwf	fsr2l,c
 29557  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 29558  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29559  0007B4  6EDA               	movwf	fsr2h,c
 29560  0007B6  0E00               	movlw	0
 29561  0007B8  6EDF               	movwf	indf2,c
 29562                           
 29563                           ; BSR set to: 0
 29564                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 29565  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 29566  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 29567  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 29568  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 29569  0007C2  0E01               	movlw	1
 29570  0007C4  ECBC  F02F         	call	_Uart_WriteString
 29571                           
 29572                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 29573  0007C8  0E0A               	movlw	10
 29574  0007CA  0101               	movlb	1	; () banked
 29575  0007CC  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29576                           
 29577                           ; BSR set to: 1
 29578                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 29579  0007CE  0E05               	movlw	5
 29580  0007D0  0100               	movlb	0	; () banked
 29581  0007D2  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29582                           
 29583                           ; BSR set to: 0
 29584                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 29585  0007D4  0EF5               	movlw	low _ConnTimeout
 29586  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29587  0007D8  0E02               	movlw	high _ConnTimeout
 29588  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29589  0007DC  0E20               	movlw	32
 29590  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29591  0007E0  0E4E               	movlw	78
 29592  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29593  0007E4  0E00               	movlw	0
 29594  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29595  0007E8  0E00               	movlw	0
 29596  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29597  0007EC  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 29598  0007F0  D0D9               	goto	l15250
 29599  0007F2                     
 29600                           ; BSR set to: 1
 29601                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 29602                           
 29603                           ; BSR set to: 1
 29604  0007F2  0E1E               	movlw	low STR_16
 29605  0007F4  0100               	movlb	0	; () banked
 29606  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29607  0007F8  0EFF               	movlw	high STR_16
 29608  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29609  0007FC  0E01               	movlw	1
 29610  0007FE  EC1C  F02F         	call	_Uart_WriteConstString
 29611                           
 29612                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 29613  000802  0E0A               	movlw	10
 29614  000804  0101               	movlb	1	; () banked
 29615  000806  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29616                           
 29617                           ; BSR set to: 1
 29618                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 29619  000808  0E06               	movlw	6
 29620  00080A  0100               	movlb	0	; () banked
 29621  00080C  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29622                           
 29623                           ; BSR set to: 0
 29624                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 29625  00080E  0EF5               	movlw	low _ConnTimeout
 29626  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29627  000812  0E02               	movlw	high _ConnTimeout
 29628  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29629  000816  0E20               	movlw	32
 29630  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29631  00081A  0E4E               	movlw	78
 29632  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29633  00081E  0E00               	movlw	0
 29634  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29635  000822  0E00               	movlw	0
 29636  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29637  000826  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 29638                           
 29639                           ;mdm_gsm_gprs_http.c: 358: break;
 29640  00082A  D145               	goto	l1252
 29641  00082C                     
 29642                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 29643  00082C  0E07               	movlw	7
 29644  00082E  0101               	movlb	1	; () banked
 29645  000830  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29646                           
 29647                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 29648  000832  0E09               	movlw	9
 29649  000834  0100               	movlb	0	; () banked
 29650  000836  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29651                           
 29652                           ; BSR set to: 0
 29653                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 29654  000838  0EF5               	movlw	low _ConnTimeout
 29655  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29656  00083C  0E02               	movlw	high _ConnTimeout
 29657  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29658  000840  0E20               	movlw	32
 29659  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29660  000844  0E4E               	movlw	78
 29661  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29662  000848  0E00               	movlw	0
 29663  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29664  00084C  0E00               	movlw	0
 29665  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29666  000850  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 29667                           
 29668                           ;mdm_gsm_gprs_http.c: 371: break;
 29669  000854  D130               	goto	l1252
 29670  000856                     
 29671                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 29672  000856  0E83               	movlw	low STR_17
 29673  000858  0100               	movlb	0	; () banked
 29674  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29675  00085C  0EFF               	movlw	high STR_17
 29676  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29677  000860  0E01               	movlw	1
 29678  000862  EC1C  F02F         	call	_Uart_WriteConstString
 29679                           
 29680                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 29681  000866  0E0D               	movlw	13
 29682  000868  0101               	movlb	1	; () banked
 29683  00086A  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29684                           
 29685                           ; BSR set to: 1
 29686                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 29687  00086C  0E09               	movlw	9
 29688  00086E  0100               	movlb	0	; () banked
 29689  000870  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29690                           
 29691                           ; BSR set to: 0
 29692                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 29693  000872  0EF5               	movlw	low _ConnTimeout
 29694  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29695  000876  0E02               	movlw	high _ConnTimeout
 29696  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29697  00087A  0E20               	movlw	32
 29698  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29699  00087E  0E4E               	movlw	78
 29700  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29701  000882  0E00               	movlw	0
 29702  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29703  000886  0E00               	movlw	0
 29704  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29705  00088A  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 29706  00088E  D08A               	goto	l15250
 29707  000890                     
 29708                           ; BSR set to: 1
 29709                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 29710                           
 29711                           ; BSR set to: 1
 29712  000890  0E90               	movlw	low STR_18
 29713  000892  0100               	movlb	0	; () banked
 29714  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29715  000896  0EFF               	movlw	high STR_18
 29716  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29717  00089A  0E01               	movlw	1
 29718  00089C  EC1C  F02F         	call	_Uart_WriteConstString
 29719                           
 29720                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 29721  0008A0  0E0A               	movlw	10
 29722  0008A2  0101               	movlb	1	; () banked
 29723  0008A4  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29724                           
 29725                           ; BSR set to: 1
 29726                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 29727  0008A6  0E0E               	movlw	14
 29728  0008A8  0100               	movlb	0	; () banked
 29729  0008AA  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29730                           
 29731                           ; BSR set to: 0
 29732                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 29733  0008AC  0EF5               	movlw	low _ConnTimeout
 29734  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29735  0008B0  0E02               	movlw	high _ConnTimeout
 29736  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29737  0008B4  0E20               	movlw	32
 29738  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29739  0008B8  0E4E               	movlw	78
 29740  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29741  0008BC  0E00               	movlw	0
 29742  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29743  0008C0  0E00               	movlw	0
 29744  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29745  0008C4  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 29746  0008C8  D06D               	goto	l15250
 29747  0008CA                     
 29748                           ; BSR set to: 1
 29749                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 29750                           
 29751                           ; BSR set to: 1
 29752  0008CA  0E3C               	movlw	low _NewStringReceived
 29753  0008CC  0100               	movlb	0	; () banked
 29754  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29755  0008D0  0E00               	movlw	high _NewStringReceived
 29756  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29757  0008D4  EC2C  F031         	call	_ReceiveEvt	;wreg free
 29758  0008D8  0900               	iorlw	0
 29759  0008DA  B4D8               	btfsc	status,2,c
 29760  0008DC  D018               	goto	l1265
 29761                           
 29762                           ;mdm_gsm_gprs_http.c: 400: {
 29763                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 29764  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 29765  0008E2  0A4F               	xorlw	79
 29766  0008E4  A4D8               	btfss	status,2,c
 29767  0008E6  D0E7               	goto	l1252
 29768  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29769  0008EC  0A4B               	xorlw	75
 29770  0008EE  A4D8               	btfss	status,2,c
 29771  0008F0  D0E2               	goto	l1252
 29772                           
 29773                           ;mdm_gsm_gprs_http.c: 403: {
 29774                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 29775  0008F2  C0CF  F1EA         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 29776                           
 29777                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 29778  0008F6  0E58               	movlw	low _RxBuffer
 29779  0008F8  0100               	movlb	0	; () banked
 29780  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29781  0008FC  0E0C               	movlw	high _RxBuffer
 29782  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29783  000900  0E01               	movlw	1
 29784  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29785  000904  0E90               	movlw	144
 29786  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29787  000908  EC4E  F030         	call	_ClearBuffer	;wreg free
 29788                           
 29789                           ;mdm_gsm_gprs_http.c: 408: }
 29790                           ;mdm_gsm_gprs_http.c: 409: }
 29791  00090C  D0D4               	goto	l1252
 29792  00090E                     l1265:
 29793                           
 29794                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29795  00090E  0EF5               	movlw	low _ConnTimeout
 29796  000910  0100               	movlb	0	; () banked
 29797  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29798  000914  0E02               	movlw	high _ConnTimeout
 29799  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29800  000918  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29801  00091C                     L46:
 29802  00091C  06E8               	decf	wreg,f,c
 29803  00091E  A4D8               	btfss	status,2,c
 29804  000920  D0CA               	goto	l1252
 29805                           
 29806                           ;mdm_gsm_gprs_http.c: 411: {
 29807                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 29808  000922  0E0F               	movlw	15
 29809  000924                     L45:
 29810  000924  0101               	movlb	1	; () banked
 29811  000926  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29812                           
 29813                           ; BSR set to: 1
 29814                           ;mdm_gsm_gprs_http.c: 414: }
 29815                           ;mdm_gsm_gprs_http.c: 415: break;
 29816                           
 29817                           ; BSR set to: 1
 29818  000928  D0C6               	goto	l1252
 29819  00092A                     
 29820                           ; BSR set to: 1
 29821                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 29822                           
 29823                           ; BSR set to: 1
 29824  00092A  0E3C               	movlw	low _NewStringReceived
 29825  00092C  0100               	movlb	0	; () banked
 29826  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29827  000930  0E00               	movlw	high _NewStringReceived
 29828  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29829  000934  EC2C  F031         	call	_ReceiveEvt	;wreg free
 29830  000938  0900               	iorlw	0
 29831  00093A  B4D8               	btfsc	status,2,c
 29832  00093C  D018               	goto	l1270
 29833                           
 29834                           ;mdm_gsm_gprs_http.c: 420: {
 29835                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 29836  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 29837  000942  0A2B               	xorlw	43
 29838  000944  A4D8               	btfss	status,2,c
 29839  000946  D0B7               	goto	l1252
 29840  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29841  00094C  0A48               	xorlw	72
 29842  00094E  A4D8               	btfss	status,2,c
 29843  000950  D0B2               	goto	l1252
 29844                           
 29845                           ;mdm_gsm_gprs_http.c: 423: {
 29846                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 29847  000952  C0CF  F1EA         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 29848                           
 29849                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 29850  000956  0E58               	movlw	low _RxBuffer
 29851  000958  0100               	movlb	0	; () banked
 29852  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29853  00095C  0E0C               	movlw	high _RxBuffer
 29854  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29855  000960  0E01               	movlw	1
 29856  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29857  000964  0E90               	movlw	144
 29858  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29859  000968  EC4E  F030         	call	_ClearBuffer	;wreg free
 29860                           
 29861                           ;mdm_gsm_gprs_http.c: 428: }
 29862                           ;mdm_gsm_gprs_http.c: 429: }
 29863  00096C  D0A4               	goto	l1252
 29864  00096E                     l1270:
 29865                           
 29866                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29867  00096E  0EF5               	movlw	low _ConnTimeout
 29868  000970  0100               	movlb	0	; () banked
 29869  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29870  000974  0E02               	movlw	high _ConnTimeout
 29871  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29872  000978  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29873  00097C  D7CF               	goto	L46
 29874  00097E                     
 29875                           ; BSR set to: 1
 29876                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 29877                           
 29878                           ; BSR set to: 1
 29879  00097E  0E0C               	movlw	12
 29880  000980  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29881                           
 29882                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 29883  000982  0E05               	movlw	5
 29884  000984  0100               	movlb	0	; () banked
 29885  000986  6FCF               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29886                           
 29887                           ; BSR set to: 0
 29888                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 29889  000988  0EDF               	movlw	low _ConnWait
 29890  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29891  00098C  0E03               	movlw	high _ConnWait
 29892  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29893  000990  0EE8               	movlw	232
 29894  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29895  000994  0E03               	movlw	3
 29896  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29897  000998  0E00               	movlw	0
 29898  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29899  00099C  0E00               	movlw	0
 29900  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29901  0009A0  EC9D  F02A         	call	_OsTmr_StartTimer	;wreg free
 29902  0009A4                     l15250:
 29903                           
 29904                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 29905  0009A4  0E01               	movlw	1
 29906  0009A6  0101               	movlb	1	; () banked
 29907  0009A8  D053               	goto	L48
 29908  0009AA                     
 29909                           ; BSR set to: 1
 29910                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 29911                           
 29912                           ; BSR set to: 1
 29913  0009AA  0EDF               	movlw	low _ConnWait
 29914  0009AC  0100               	movlb	0	; () banked
 29915  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29916  0009B0  0E03               	movlw	high _ConnWait
 29917  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29918  0009B4  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29919  0009B8  06E8               	decf	wreg,f,c
 29920  0009BA  A4D8               	btfss	status,2,c
 29921  0009BC  D07C               	goto	l1252
 29922                           
 29923                           ;mdm_gsm_gprs_http.c: 450: {
 29924                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 29925  0009BE  C0CF  F1EA         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 29926                           
 29927                           ;mdm_gsm_gprs_http.c: 453: }
 29928                           ;mdm_gsm_gprs_http.c: 454: break;
 29929  0009C2  D079               	goto	l1252
 29930  0009C4                     
 29931                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 29932  0009C4  0E3C               	movlw	low _NewStringReceived
 29933  0009C6  0100               	movlb	0	; () banked
 29934  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29935  0009CA  0E00               	movlw	high _NewStringReceived
 29936  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29937  0009CE  EC2C  F031         	call	_ReceiveEvt	;wreg free
 29938  0009D2  0900               	iorlw	0
 29939  0009D4  B4D8               	btfsc	status,2,c
 29940  0009D6  D02D               	goto	l1278
 29941                           
 29942                           ;mdm_gsm_gprs_http.c: 459: {
 29943                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 29944  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 29945  0009DC  0A2B               	xorlw	43
 29946  0009DE  A4D8               	btfss	status,2,c
 29947  0009E0  D06A               	goto	l1252
 29948  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29949  0009E6  0A48               	xorlw	72
 29950  0009E8  A4D8               	btfss	status,2,c
 29951  0009EA  D065               	goto	l1252
 29952                           
 29953                           ;mdm_gsm_gprs_http.c: 462: {
 29954                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 29955  0009EC  C0CF  F1EA         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 29956                           
 29957                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 29958  0009F0  0E58               	movlw	low _RxBuffer
 29959  0009F2  0100               	movlb	0	; () banked
 29960  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 29961  0009F6  0E0C               	movlw	high _RxBuffer
 29962  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29963  0009FA  EE20 F003          	lfsr	2,3
 29964  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 29965  000A00  26D9               	addwf	fsr2l,f,c
 29966  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 29967  000A04  22DA               	addwfc	fsr2h,f,c
 29968  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 29969  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 29970  000A0E  0E01               	movlw	1
 29971  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 29972  000A12  0E90               	movlw	144
 29973  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 29974  000A16  EC3D  F02A         	call	_StringCopy	;wreg free
 29975                           
 29976                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 29977  000A1A  0E58               	movlw	low _RxBuffer
 29978  000A1C  0100               	movlb	0	; () banked
 29979  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29980  000A20  0E0C               	movlw	high _RxBuffer
 29981  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29982  000A24  0E01               	movlw	1
 29983  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29984  000A28  0E90               	movlw	144
 29985  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29986  000A2C  EC4E  F030         	call	_ClearBuffer	;wreg free
 29987                           
 29988                           ;mdm_gsm_gprs_http.c: 469: }
 29989                           ;mdm_gsm_gprs_http.c: 470: }
 29990  000A30  D042               	goto	l1252
 29991  000A32                     l1278:
 29992                           
 29993                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29994  000A32  0EF5               	movlw	low _ConnTimeout
 29995  000A34  0100               	movlb	0	; () banked
 29996  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29997  000A38  0E02               	movlw	high _ConnTimeout
 29998  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29999  000A3C  EC33  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30000  000A40  D76D               	goto	L46
 30001  000A42                     
 30002                           ; BSR set to: 1
 30003                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 30004                           
 30005                           ; BSR set to: 1
 30006  000A42  0E00               	movlw	0
 30007  000A44  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30008                           
 30009                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 30010  000A46  0E02               	movlw	2
 30011  000A48  D003               	goto	L48
 30012  000A4A                     
 30013                           ; BSR set to: 1
 30014                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 30015                           
 30016                           ; BSR set to: 1
 30017  000A4A  0E00               	movlw	0
 30018  000A4C  6FEA               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30019                           
 30020                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 30021  000A4E  0E03               	movlw	3
 30022  000A50                     L48:
 30023  000A50  6FE9               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 30024                           
 30025                           ; BSR set to: 1
 30026                           ;mdm_gsm_gprs_http.c: 494: }
 30027                           
 30028                           ; BSR set to: 1
 30029                           ;mdm_gsm_gprs_http.c: 493: break;
 30030                           
 30031                           ;mdm_gsm_gprs_http.c: 492: default:
 30032                           
 30033                           ;mdm_gsm_gprs_http.c: 490: break;
 30034  000A52  D031               	goto	l1252
 30035  000A54                     l1249:
 30036                           
 30037                           ; BSR set to: 1
 30038                           
 30039                           ; BSR set to: 1
 30040  000A54  51EA               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 30041                           
 30042                           ; Switch size 1, requested type "space"
 30043                           ; Number of cases is 16, Range of values is 0 to 15
 30044                           ; switch strategies available:
 30045                           ; Name         Instructions Cycles
 30046                           ; simple_byte           49    25 (average)
 30047                           ;	Chosen strategy is simple_byte
 30048  000A56  0A00               	xorlw	0	; case 0
 30049  000A58  B4D8               	btfsc	status,2,c
 30050  000A5A  D5CC               	goto	l1250
 30051  000A5C  0A01               	xorlw	1	; case 1
 30052  000A5E  B4D8               	btfsc	status,2,c
 30053  000A60  D5D5               	goto	l1253
 30054  000A62  0A03               	xorlw	3	; case 2
 30055  000A64  B4D8               	btfsc	status,2,c
 30056  000A66  D5EF               	goto	l1254
 30057  000A68  0A01               	xorlw	1	; case 3
 30058  000A6A  B4D8               	btfsc	status,2,c
 30059  000A6C  D609               	goto	l1255
 30060  000A6E  0A07               	xorlw	7	; case 4
 30061  000A70  B4D8               	btfsc	status,2,c
 30062  000A72  D623               	goto	l1256
 30063  000A74  0A01               	xorlw	1	; case 5
 30064  000A76  B4D8               	btfsc	status,2,c
 30065  000A78  D6BC               	goto	l1260
 30066  000A7A  0A03               	xorlw	3	; case 6
 30067  000A7C  B4D8               	btfsc	status,2,c
 30068  000A7E  D6D6               	goto	l1261
 30069  000A80  0A01               	xorlw	1	; case 7
 30070  000A82  B4D8               	btfsc	status,2,c
 30071  000A84  D752               	goto	l1269
 30072  000A86  0A0F               	xorlw	15	; case 8
 30073  000A88  B4D8               	btfsc	status,2,c
 30074  000A8A  D6E5               	goto	l1262
 30075  000A8C  0A01               	xorlw	1	; case 9
 30076  000A8E  B4D8               	btfsc	status,2,c
 30077  000A90  D6FF               	goto	l1263
 30078  000A92  0A03               	xorlw	3	; case 10
 30079  000A94  B4D8               	btfsc	status,2,c
 30080  000A96  D719               	goto	l1264
 30081  000A98  0A01               	xorlw	1	; case 11
 30082  000A9A  B4D8               	btfsc	status,2,c
 30083  000A9C  D770               	goto	l1274
 30084  000A9E  0A07               	xorlw	7	; case 12
 30085  000AA0  B4D8               	btfsc	status,2,c
 30086  000AA2  D783               	goto	l1275
 30087  000AA4  0A01               	xorlw	1	; case 13
 30088  000AA6  B4D8               	btfsc	status,2,c
 30089  000AA8  D78D               	goto	l1277
 30090  000AAA  0A03               	xorlw	3	; case 14
 30091  000AAC  B4D8               	btfsc	status,2,c
 30092  000AAE  D7C9               	goto	l1282
 30093  000AB0  0A01               	xorlw	1	; case 15
 30094  000AB2  B4D8               	btfsc	status,2,c
 30095  000AB4  D7CA               	goto	l1283
 30096  000AB6                     l1252:
 30097                           
 30098                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 30099                           
 30100                           ; BSR set to: 1
 30101  000AB6  0101               	movlb	1	; () banked
 30102  000AB8  51E9               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 30103  000ABA  0012               	return	
 30104  000ABC                     __end_of_HttpGetMethod:
 30105                           	opt stack 0
 30106                           tosu	equ	0xFFF
 30107                           tosh	equ	0xFFE
 30108                           tosl	equ	0xFFD
 30109                           pclath	equ	0xFFA
 30110                           tblptru	equ	0xFF8
 30111                           tblptrh	equ	0xFF7
 30112                           tblptrl	equ	0xFF6
 30113                           tablat	equ	0xFF5
 30114                           prodh	equ	0xFF4
 30115                           prodl	equ	0xFF3
 30116                           intcon	equ	0xFF2
 30117                           intcon2	equ	0xFF1
 30118                           intcon3	equ	0xFF0
 30119                           indf0	equ	0xFEF
 30120                           postinc0	equ	0xFEE
 30121                           plusw0	equ	0xFEB
 30122                           fsr0h	equ	0xFEA
 30123                           fsr0l	equ	0xFE9
 30124                           wreg	equ	0xFE8
 30125                           indf1	equ	0xFE7
 30126                           postinc1	equ	0xFE6
 30127                           postdec1	equ	0xFE5
 30128                           plusw1	equ	0xFE3
 30129                           fsr1h	equ	0xFE2
 30130                           fsr1l	equ	0xFE1
 30131                           indf2	equ	0xFDF
 30132                           postinc2	equ	0xFDE
 30133                           postdec2	equ	0xFDD
 30134                           plusw2	equ	0xFDB
 30135                           fsr2h	equ	0xFDA
 30136                           fsr2l	equ	0xFD9
 30137                           status	equ	0xFD8
 30138                           
 30139 ;; *************** function _Uart_WriteString *****************
 30140 ;; Defined at:
 30141 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30142 ;; Parameters:    Size  Location     Type
 30143 ;;  Module          1    wreg     unsigned char 
 30144 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 30145 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 30146 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 30147 ;; Auto vars:     Size  Location     Type
 30148 ;;  Module          1   34[BANK0 ] unsigned char 
 30149 ;; Return value:  Size  Location     Type
 30150 ;;                  1    wreg      void 
 30151 ;; Registers used:
 30152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30153 ;; Tracked objects:
 30154 ;;		On entry : 0/0
 30155 ;;		On exit  : 0/0
 30156 ;;		Unchanged: 0/0
 30157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30158 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30161 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30162 ;;Total ram usage:        3 bytes
 30163 ;; Hardware stack levels used:    1
 30164 ;; Hardware stack levels required when called:   12
 30165 ;; This function calls:
 30166 ;;		_UartTxBufferStatus
 30167 ;;		_UartWriteByte
 30168 ;; This function is called by:
 30169 ;;		_Mdm_SetSmsFormat
 30170 ;;		_InitGprsNetwork
 30171 ;;		_HttpGetMethod
 30172 ;;		_Mdm_PinUnlock
 30173 ;;		_Mdm_MakePhoneCall
 30174 ;; This function uses a non-reentrant model
 30175 ;;
 30176                           
 30177                           	psect	text135
 30178  005F78                     __ptext135:
 30179                           	opt stack 0
 30180  005F78                     _Uart_WriteString:
 30181                           	opt stack 12
 30182                           
 30183                           ; BSR set to: 1
 30184                           ;incstack = 0
 30185                           ;Uart_WriteString@Module stored from wreg
 30186  005F78  0100               	movlb	0	; () banked
 30187  005F7A  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 30188                           
 30189                           ;uart_drv.c: 521: while (*StringToWrite)
 30190  005F7C  D014               	goto	u11790
 30191  005F7E                     
 30192                           ;uart_drv.c: 522: {
 30193                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 30194  005F7E  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30195  005F82  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30196  005F86  50DF               	movf	indf2,w,c
 30197  005F88  0100               	movlb	0	; () banked
 30198  005F8A  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 30199  005F8C  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30200  005F8E  EC8B  F032         	call	_UartWriteByte
 30201                           
 30202                           ;uart_drv.c: 526: StringToWrite++;
 30203  005F92  0100               	movlb	0	; () banked
 30204  005F94  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 30205  005F96  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 30206  005F98                     
 30207                           ; BSR set to: 0
 30208                           
 30209                           ; BSR set to: 0
 30210  005F98  0100               	movlb	0	; () banked
 30211  005F9A  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30212  005F9C  EC6D  F02D         	call	_UartTxBufferStatus
 30213  005FA0  06E8               	decf	wreg,f,c
 30214  005FA2  B4D8               	btfsc	status,2,c
 30215  005FA4  D7F9               	goto	l709
 30216  005FA6                     u11790:
 30217  005FA6  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30218  005FAA  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30219  005FAE  50DF               	movf	indf2,w,c
 30220  005FB0  B4D8               	btfsc	status,2,c
 30221  005FB2  0012               	return	
 30222  005FB4  D7E4               	goto	l707
 30223  005FB6                     __end_of_Uart_WriteString:
 30224                           	opt stack 0
 30225                           tosu	equ	0xFFF
 30226                           tosh	equ	0xFFE
 30227                           tosl	equ	0xFFD
 30228                           pclath	equ	0xFFA
 30229                           tblptru	equ	0xFF8
 30230                           tblptrh	equ	0xFF7
 30231                           tblptrl	equ	0xFF6
 30232                           tablat	equ	0xFF5
 30233                           prodh	equ	0xFF4
 30234                           prodl	equ	0xFF3
 30235                           intcon	equ	0xFF2
 30236                           intcon2	equ	0xFF1
 30237                           intcon3	equ	0xFF0
 30238                           indf0	equ	0xFEF
 30239                           postinc0	equ	0xFEE
 30240                           plusw0	equ	0xFEB
 30241                           fsr0h	equ	0xFEA
 30242                           fsr0l	equ	0xFE9
 30243                           wreg	equ	0xFE8
 30244                           indf1	equ	0xFE7
 30245                           postinc1	equ	0xFE6
 30246                           postdec1	equ	0xFE5
 30247                           plusw1	equ	0xFE3
 30248                           fsr1h	equ	0xFE2
 30249                           fsr1l	equ	0xFE1
 30250                           indf2	equ	0xFDF
 30251                           postinc2	equ	0xFDE
 30252                           postdec2	equ	0xFDD
 30253                           plusw2	equ	0xFDB
 30254                           fsr2h	equ	0xFDA
 30255                           fsr2l	equ	0xFD9
 30256                           status	equ	0xFD8
 30257                           
 30258 ;; *************** function _Uart_WriteConstString *****************
 30259 ;; Defined at:
 30260 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30261 ;; Parameters:    Size  Location     Type
 30262 ;;  Module          1    wreg     unsigned char 
 30263 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 30264 ;;		 -> STR_32(12), STR_31(19), STR_30(14), STR_29(14), 
 30265 ;;		 -> STR_20(14), STR_19(14), STR_18(13), STR_17(13), 
 30266 ;;		 -> STR_16(17), STR_14(21), STR_13(14), STR_12(13), 
 30267 ;;		 -> STR_11(14), STR_10(14), STR_8(31), STR_7(5), 
 30268 ;;		 -> STR_6(5), STR_4(12), STR_3(7), STR_2(14), 
 30269 ;;		 -> STR_1(5), 
 30270 ;; Auto vars:     Size  Location     Type
 30271 ;;  Module          1   34[BANK0 ] unsigned char 
 30272 ;; Return value:  Size  Location     Type
 30273 ;;                  1    wreg      void 
 30274 ;; Registers used:
 30275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30276 ;; Tracked objects:
 30277 ;;		On entry : 0/0
 30278 ;;		On exit  : 0/0
 30279 ;;		Unchanged: 0/0
 30280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30284 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30285 ;;Total ram usage:        3 bytes
 30286 ;; Hardware stack levels used:    1
 30287 ;; Hardware stack levels required when called:   12
 30288 ;; This function calls:
 30289 ;;		_UartTxBufferStatus
 30290 ;;		_UartWriteByte
 30291 ;; This function is called by:
 30292 ;;		_CheckModem
 30293 ;;		_ConfigureModem
 30294 ;;		_GetSmsSm
 30295 ;;		_Mdm_HangPhoneCall
 30296 ;;		_InitGprsNetwork
 30297 ;;		_HttpGetMethod
 30298 ;;		_MyApp_Task
 30299 ;;		_initGprsModem
 30300 ;;		_Mdm_GetPhoneCall
 30301 ;;		_MdmHttp_SetSsl
 30302 ;; This function uses a non-reentrant model
 30303 ;;
 30304                           
 30305                           	psect	text136
 30306  005E38                     __ptext136:
 30307                           	opt stack 0
 30308  005E38                     _Uart_WriteConstString:
 30309                           	opt stack 12
 30310                           
 30311                           ;incstack = 0
 30312                           ;Uart_WriteConstString@Module stored from wreg
 30313  005E38  0100               	movlb	0	; () banked
 30314  005E3A  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 30315                           
 30316                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 30317  005E3C  D015               	goto	u11770
 30318  005E3E                     
 30319                           ;uart_drv.c: 500: {
 30320                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 30321  005E3E  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30322  005E42  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30323  005E46                     	if	0	;tblptru may be non-zero
 30324  005E46                     	endif
 30325  005E46                     	if	0	;tblptru may be non-zero
 30326  005E46                     	endif
 30327  005E46  0008               	tblrd		*
 30328  005E48  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 30329  005E4C  0100               	movlb	0	; () banked
 30330  005E4E  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30331  005E50  EC8B  F032         	call	_UartWriteByte
 30332                           
 30333                           ;uart_drv.c: 504: ConstStringToWrite++;
 30334  005E54  0100               	movlb	0	; () banked
 30335  005E56  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 30336  005E58  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 30337  005E5A                     
 30338                           ; BSR set to: 0
 30339                           
 30340                           ; BSR set to: 0
 30341  005E5A  0100               	movlb	0	; () banked
 30342  005E5C  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30343  005E5E  EC6D  F02D         	call	_UartTxBufferStatus
 30344  005E62  06E8               	decf	wreg,f,c
 30345  005E64  B4D8               	btfsc	status,2,c
 30346  005E66  D7F9               	goto	l700
 30347  005E68                     u11770:
 30348  005E68  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30349  005E6C  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30350  005E70                     	if	0	;tblptru may be non-zero
 30351  005E70                     	endif
 30352  005E70                     	if	0	;tblptru may be non-zero
 30353  005E70                     	endif
 30354  005E70  0008               	tblrd		*
 30355  005E72  50F5               	movf	tablat,w,c
 30356  005E74  0900               	iorlw	0
 30357  005E76  B4D8               	btfsc	status,2,c
 30358  005E78  0012               	return	
 30359  005E7A  D7E1               	goto	l698
 30360  005E7C                     __end_of_Uart_WriteConstString:
 30361                           	opt stack 0
 30362                           tosu	equ	0xFFF
 30363                           tosh	equ	0xFFE
 30364                           tosl	equ	0xFFD
 30365                           pclath	equ	0xFFA
 30366                           tblptru	equ	0xFF8
 30367                           tblptrh	equ	0xFF7
 30368                           tblptrl	equ	0xFF6
 30369                           tablat	equ	0xFF5
 30370                           prodh	equ	0xFF4
 30371                           prodl	equ	0xFF3
 30372                           intcon	equ	0xFF2
 30373                           intcon2	equ	0xFF1
 30374                           intcon3	equ	0xFF0
 30375                           indf0	equ	0xFEF
 30376                           postinc0	equ	0xFEE
 30377                           plusw0	equ	0xFEB
 30378                           fsr0h	equ	0xFEA
 30379                           fsr0l	equ	0xFE9
 30380                           wreg	equ	0xFE8
 30381                           indf1	equ	0xFE7
 30382                           postinc1	equ	0xFE6
 30383                           postdec1	equ	0xFE5
 30384                           plusw1	equ	0xFE3
 30385                           fsr1h	equ	0xFE2
 30386                           fsr1l	equ	0xFE1
 30387                           indf2	equ	0xFDF
 30388                           postinc2	equ	0xFDE
 30389                           postdec2	equ	0xFDD
 30390                           plusw2	equ	0xFDB
 30391                           fsr2h	equ	0xFDA
 30392                           fsr2l	equ	0xFD9
 30393                           status	equ	0xFD8
 30394                           
 30395 ;; *************** function _UartWriteByte *****************
 30396 ;; Defined at:
 30397 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30398 ;; Parameters:    Size  Location     Type
 30399 ;;  Module          1    wreg     unsigned char 
 30400 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 30401 ;; Auto vars:     Size  Location     Type
 30402 ;;  Module          1   30[BANK0 ] unsigned char 
 30403 ;; Return value:  Size  Location     Type
 30404 ;;                  1    wreg      void 
 30405 ;; Registers used:
 30406 ;;		wreg, status,2, status,0
 30407 ;; Tracked objects:
 30408 ;;		On entry : 0/0
 30409 ;;		On exit  : 0/0
 30410 ;;		Unchanged: 0/0
 30411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30412 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30415 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30416 ;;Total ram usage:        2 bytes
 30417 ;; Hardware stack levels used:    1
 30418 ;; Hardware stack levels required when called:   11
 30419 ;; This function calls:
 30420 ;;		Nothing
 30421 ;; This function is called by:
 30422 ;;		_Uart_WriteConstString
 30423 ;;		_Uart_WriteString
 30424 ;;		_Uart_WriteStringLen
 30425 ;; This function uses a non-reentrant model
 30426 ;;
 30427                           
 30428                           	psect	text137
 30429  006516                     __ptext137:
 30430                           	opt stack 0
 30431  006516                     _UartWriteByte:
 30432                           	opt stack 12
 30433                           
 30434                           ;incstack = 0
 30435                           ;UartWriteByte@Module stored from wreg
 30436  006516  0100               	movlb	0	; () banked
 30437  006518  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 30438                           
 30439                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 30440  00651A  0100               	movlb	0	; () banked
 30441  00651C  057E               	decf	UartWriteByte@Module& (0+255),w,b
 30442  00651E  A4D8               	btfss	status,2,c
 30443  006520  D003               	goto	l639
 30444                           
 30445                           ; BSR set to: 0
 30446                           ;uart_drv.c: 176: {
 30447                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 30448  006522  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 30449                           
 30450                           ;uart_drv.c: 179: }
 30451  006526  0012               	return	
 30452  006528                     l639:
 30453                           
 30454                           ; BSR set to: 0
 30455                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 30456                           
 30457                           ; BSR set to: 0
 30458  006528  0E02               	movlw	2
 30459  00652A  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 30460  00652C  A4D8               	btfss	status,2,c
 30461  00652E  0012               	return	
 30462                           
 30463                           ; BSR set to: 0
 30464                           ;uart_drv.c: 181: {
 30465                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 30466  006530  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 30467                           
 30468                           ; BSR set to: 0
 30469  006534  0012               	return	
 30470  006536                     __end_of_UartWriteByte:
 30471                           	opt stack 0
 30472                           tosu	equ	0xFFF
 30473                           tosh	equ	0xFFE
 30474                           tosl	equ	0xFFD
 30475                           pclath	equ	0xFFA
 30476                           tblptru	equ	0xFF8
 30477                           tblptrh	equ	0xFF7
 30478                           tblptrl	equ	0xFF6
 30479                           tablat	equ	0xFF5
 30480                           prodh	equ	0xFF4
 30481                           prodl	equ	0xFF3
 30482                           intcon	equ	0xFF2
 30483                           intcon2	equ	0xFF1
 30484                           intcon3	equ	0xFF0
 30485                           indf0	equ	0xFEF
 30486                           postinc0	equ	0xFEE
 30487                           plusw0	equ	0xFEB
 30488                           fsr0h	equ	0xFEA
 30489                           fsr0l	equ	0xFE9
 30490                           wreg	equ	0xFE8
 30491                           indf1	equ	0xFE7
 30492                           postinc1	equ	0xFE6
 30493                           postdec1	equ	0xFE5
 30494                           plusw1	equ	0xFE3
 30495                           fsr1h	equ	0xFE2
 30496                           fsr1l	equ	0xFE1
 30497                           indf2	equ	0xFDF
 30498                           postinc2	equ	0xFDE
 30499                           postdec2	equ	0xFDD
 30500                           plusw2	equ	0xFDB
 30501                           fsr2h	equ	0xFDA
 30502                           fsr2l	equ	0xFD9
 30503                           status	equ	0xFD8
 30504                           
 30505 ;; *************** function _UartTxBufferStatus *****************
 30506 ;; Defined at:
 30507 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30508 ;; Parameters:    Size  Location     Type
 30509 ;;  Module          1    wreg     unsigned char 
 30510 ;; Auto vars:     Size  Location     Type
 30511 ;;  Module          1   30[BANK0 ] unsigned char 
 30512 ;;  TxBufferStat    1   31[BANK0 ] enum E9033
 30513 ;; Return value:  Size  Location     Type
 30514 ;;                  1    wreg      enum E9033
 30515 ;; Registers used:
 30516 ;;		wreg, status,2, status,0
 30517 ;; Tracked objects:
 30518 ;;		On entry : 0/0
 30519 ;;		On exit  : 0/0
 30520 ;;		Unchanged: 0/0
 30521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30523 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30524 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30525 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30526 ;;Total ram usage:        3 bytes
 30527 ;; Hardware stack levels used:    1
 30528 ;; Hardware stack levels required when called:   11
 30529 ;; This function calls:
 30530 ;;		Nothing
 30531 ;; This function is called by:
 30532 ;;		_Uart_WriteConstString
 30533 ;;		_Uart_WriteString
 30534 ;;		_Uart_WriteStringLen
 30535 ;; This function uses a non-reentrant model
 30536 ;;
 30537                           
 30538                           	psect	text138
 30539  005ADA                     __ptext138:
 30540                           	opt stack 0
 30541  005ADA                     _UartTxBufferStatus:
 30542                           	opt stack 12
 30543                           
 30544                           ; BSR set to: 0
 30545                           ;incstack = 0
 30546                           ;UartTxBufferStatus@Module stored from wreg
 30547  005ADA  0100               	movlb	0	; () banked
 30548  005ADC  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 30549                           
 30550                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 30551  005ADE  0E00               	movlw	0
 30552  005AE0  0100               	movlb	0	; () banked
 30553  005AE2  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 30554                           
 30555                           ; BSR set to: 0
 30556                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 30557  005AE4  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 30558  005AE6  A4D8               	btfss	status,2,c
 30559  005AE8  D00B               	goto	l651
 30560                           
 30561                           ; BSR set to: 0
 30562                           ;uart_drv.c: 228: {
 30563                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 30564  005AEA  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 30565  005AEE  90D8               	bcf	status,0,c
 30566  005AF0  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 30567  005AF2  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 30568  005AF4  D002               	goto	l652
 30569  005AF6                     u11200:
 30570                           
 30571                           ; BSR set to: 0
 30572                           ;uart_drv.c: 231: {
 30573                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 30574  005AF6  0E01               	movlw	1
 30575  005AF8  D014               	goto	L51
 30576  005AFA                     l652:
 30577                           
 30578                           ; BSR set to: 0
 30579                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 30580                           
 30581                           ; BSR set to: 0
 30582  005AFA  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 30583  005AFE  D00C               	goto	L80
 30584  005B00                     l651:
 30585                           
 30586                           ; BSR set to: 0
 30587                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 30588                           
 30589                           ; BSR set to: 0
 30590  005B00  0E02               	movlw	2
 30591  005B02  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 30592  005B04  A4D8               	btfss	status,2,c
 30593  005B06  D00E               	goto	l660
 30594                           
 30595                           ; BSR set to: 0
 30596                           ;uart_drv.c: 244: {
 30597                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 30598  005B08  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 30599  005B0C  90D8               	bcf	status,0,c
 30600  005B0E  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 30601  005B10  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 30602  005B12  D7F1               	goto	u11200
 30603                           
 30604                           ; BSR set to: 0
 30605                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 30606                           
 30607                           ; BSR set to: 0
 30608                           
 30609                           ;uart_drv.c: 249: }
 30610                           
 30611                           ; BSR set to: 0
 30612                           ;uart_drv.c: 247: {
 30613                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 30614  005B14  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 30615  005B18                     L80:
 30616  005B18  90D8               	bcf	status,0,c
 30617  005B1A  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 30618  005B1C  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 30619  005B1E  D002               	goto	l660
 30620                           
 30621                           ; BSR set to: 0
 30622                           ;uart_drv.c: 251: {
 30623                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 30624  005B20  0E02               	movlw	2
 30625  005B22                     L51:
 30626  005B22  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 30627  005B24                     l660:
 30628                           
 30629                           ; BSR set to: 0
 30630                           ;uart_drv.c: 257: }
 30631                           ;uart_drv.c: 258: }
 30632                           ;uart_drv.c: 260: return TxBufferStatus;
 30633                           
 30634                           ; BSR set to: 0
 30635                           
 30636                           ; BSR set to: 0
 30637                           
 30638                           ; BSR set to: 0
 30639                           
 30640                           ; BSR set to: 0
 30641                           
 30642                           ;uart_drv.c: 254: else
 30643                           ;uart_drv.c: 255: {
 30644                           
 30645                           ; BSR set to: 0
 30646  005B24  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 30647  005B26  0012               	return	
 30648  005B28                     __end_of_UartTxBufferStatus:
 30649                           	opt stack 0
 30650                           tosu	equ	0xFFF
 30651                           tosh	equ	0xFFE
 30652                           tosl	equ	0xFFD
 30653                           pclath	equ	0xFFA
 30654                           tblptru	equ	0xFF8
 30655                           tblptrh	equ	0xFF7
 30656                           tblptrl	equ	0xFF6
 30657                           tablat	equ	0xFF5
 30658                           prodh	equ	0xFF4
 30659                           prodl	equ	0xFF3
 30660                           intcon	equ	0xFF2
 30661                           intcon2	equ	0xFF1
 30662                           intcon3	equ	0xFF0
 30663                           indf0	equ	0xFEF
 30664                           postinc0	equ	0xFEE
 30665                           plusw0	equ	0xFEB
 30666                           fsr0h	equ	0xFEA
 30667                           fsr0l	equ	0xFE9
 30668                           wreg	equ	0xFE8
 30669                           indf1	equ	0xFE7
 30670                           postinc1	equ	0xFE6
 30671                           postdec1	equ	0xFE5
 30672                           plusw1	equ	0xFE3
 30673                           fsr1h	equ	0xFE2
 30674                           fsr1l	equ	0xFE1
 30675                           indf2	equ	0xFDF
 30676                           postinc2	equ	0xFDE
 30677                           postdec2	equ	0xFDD
 30678                           plusw2	equ	0xFDB
 30679                           fsr2h	equ	0xFDA
 30680                           fsr2l	equ	0xFD9
 30681                           status	equ	0xFD8
 30682                           
 30683 ;; *************** function _StringCopy *****************
 30684 ;; Defined at:
 30685 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 30686 ;; Parameters:    Size  Location     Type
 30687 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 30688 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), MyApp_Task@emptyNumber(13), STR_15(20), 
 30689 ;;		 -> STR_9(21), MessageText(50), PhoneNumber(20), STR_5(10), 
 30690 ;;		 -> Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 30691 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 30692 ;;		 -> smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), 
 30693 ;;		 -> MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(102), 
 30694 ;;		 -> callerNumber(13), 
 30695 ;;  Len             2   33[BANK0 ] unsigned short 
 30696 ;; Auto vars:     Size  Location     Type
 30697 ;;  Index           2   37[BANK0 ] unsigned short 
 30698 ;; Return value:  Size  Location     Type
 30699 ;;                  1    wreg      void 
 30700 ;; Registers used:
 30701 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30702 ;; Tracked objects:
 30703 ;;		On entry : 0/0
 30704 ;;		On exit  : 0/0
 30705 ;;		Unchanged: 0/0
 30706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30707 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30708 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30709 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30710 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30711 ;;Total ram usage:       10 bytes
 30712 ;; Hardware stack levels used:    1
 30713 ;; Hardware stack levels required when called:   11
 30714 ;; This function calls:
 30715 ;;		Nothing
 30716 ;; This function is called by:
 30717 ;;		_ModemEvtParser
 30718 ;;		_GetSmsSm
 30719 ;;		_SendSmsSm
 30720 ;;		_Mdm_GetSmsData
 30721 ;;		_InitGprsNetwork
 30722 ;;		_HttpGetMethod
 30723 ;;		_Eeprom_Write
 30724 ;;		_Mdm_SendSmsData
 30725 ;; This function uses a non-reentrant model
 30726 ;;
 30727                           
 30728                           	psect	text139
 30729  00547A                     __ptext139:
 30730                           	opt stack 0
 30731  00547A                     _StringCopy:
 30732                           	opt stack 14
 30733                           
 30734                           ;sf.c: 106: UINT16 Index = 0;
 30735                           
 30736                           ; BSR set to: 0
 30737                           ;incstack = 0
 30738  00547A  0E00               	movlw	0
 30739  00547C  0100               	movlb	0	; () banked
 30740  00547E  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 30741  005480  0E00               	movlw	0
 30742  005482  6F85               	movwf	StringCopy@Index& (0+255),b
 30743                           
 30744                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 30745  005484  0E00               	movlw	0
 30746  005486  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 30747  005488  0E00               	movlw	0
 30748  00548A  6F85               	movwf	StringCopy@Index& (0+255),b
 30749  00548C  D020               	goto	l2244
 30750  00548E                     
 30751                           ; BSR set to: 0
 30752                           ;sf.c: 110: {
 30753                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 30754                           
 30755                           ; BSR set to: 0
 30756  00548E  5185               	movf	StringCopy@Index& (0+255),w,b
 30757  005490  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 30758  005492  6F83               	movwf	??_StringCopy& (0+255),b
 30759  005494  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 30760  005496  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 30761  005498  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 30762  00549A  C083  FFF6         	movff	??_StringCopy,tblptrl
 30763  00549E  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 30764  0054A2  6AF8               	clrf	tblptru,c
 30765  0054A4  5185               	movf	StringCopy@Index& (0+255),w,b
 30766  0054A6  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 30767  0054A8  6ED9               	movwf	fsr2l,c
 30768  0054AA  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 30769  0054AC  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 30770  0054AE  6EDA               	movwf	fsr2h,c
 30771  0054B0  0E0E               	movlw	(high __ramtop+-1)
 30772  0054B2  64F7               	cpfsgt	tblptrh,c
 30773  0054B4  D003               	bra	u12317
 30774  0054B6  0008               	tblrd		*
 30775  0054B8  50F5               	movf	tablat,w,c
 30776  0054BA  D005               	bra	u12310
 30777  0054BC                     u12317:
 30778  0054BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 30779  0054C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 30780  0054C4  50EF               	movf	indf0,w,c
 30781  0054C6                     u12310:
 30782  0054C6  6EDF               	movwf	indf2,c
 30783  0054C8  0100               	movlb	0	; () banked
 30784  0054CA  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 30785  0054CC  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 30786  0054CE                     l2244:
 30787                           
 30788                           ; BSR set to: 0
 30789                           
 30790                           ; BSR set to: 0
 30791  0054CE  5181               	movf	StringCopy@Len& (0+255),w,b
 30792  0054D0  5D85               	subwf	StringCopy@Index& (0+255),w,b
 30793  0054D2  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 30794  0054D4  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 30795  0054D6  B0D8               	btfsc	status,0,c
 30796  0054D8  0012               	return	
 30797  0054DA  D7D9               	goto	l2245
 30798  0054DC                     __end_of_StringCopy:
 30799                           	opt stack 0
 30800                           tosu	equ	0xFFF
 30801                           tosh	equ	0xFFE
 30802                           tosl	equ	0xFFD
 30803                           pclath	equ	0xFFA
 30804                           tblptru	equ	0xFF8
 30805                           tblptrh	equ	0xFF7
 30806                           tblptrl	equ	0xFF6
 30807                           tablat	equ	0xFF5
 30808                           prodh	equ	0xFF4
 30809                           prodl	equ	0xFF3
 30810                           intcon	equ	0xFF2
 30811                           intcon2	equ	0xFF1
 30812                           intcon3	equ	0xFF0
 30813                           indf0	equ	0xFEF
 30814                           postinc0	equ	0xFEE
 30815                           plusw0	equ	0xFEB
 30816                           fsr0h	equ	0xFEA
 30817                           fsr0l	equ	0xFE9
 30818                           wreg	equ	0xFE8
 30819                           indf1	equ	0xFE7
 30820                           postinc1	equ	0xFE6
 30821                           postdec1	equ	0xFE5
 30822                           plusw1	equ	0xFE3
 30823                           fsr1h	equ	0xFE2
 30824                           fsr1l	equ	0xFE1
 30825                           indf2	equ	0xFDF
 30826                           postinc2	equ	0xFDE
 30827                           postdec2	equ	0xFDD
 30828                           plusw2	equ	0xFDB
 30829                           fsr2h	equ	0xFDA
 30830                           fsr2l	equ	0xFD9
 30831                           status	equ	0xFD8
 30832                           
 30833 ;; *************** function _OsTmr_StartTimer *****************
 30834 ;; Defined at:
 30835 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 30836 ;; Parameters:    Size  Location     Type
 30837 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 30838 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 30839 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 30840 ;;  Timeout         4   35[BANK0 ] unsigned long 
 30841 ;; Auto vars:     Size  Location     Type
 30842 ;;		None
 30843 ;; Return value:  Size  Location     Type
 30844 ;;                  1    wreg      void 
 30845 ;; Registers used:
 30846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30847 ;; Tracked objects:
 30848 ;;		On entry : 0/0
 30849 ;;		On exit  : 0/0
 30850 ;;		Unchanged: 0/0
 30851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30852 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30855 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30856 ;;Total ram usage:        6 bytes
 30857 ;; Hardware stack levels used:    1
 30858 ;; Hardware stack levels required when called:   12
 30859 ;; This function calls:
 30860 ;;		_GetOsTickCounter
 30861 ;; This function is called by:
 30862 ;;		_OsTmr_Wait
 30863 ;;		_CheckModem
 30864 ;;		_SendSmsSm
 30865 ;;		_InitGprsNetwork
 30866 ;;		_HttpGetMethod
 30867 ;;		_I2cSlv_QueryI2cData
 30868 ;;		_Term_MainSm
 30869 ;; This function uses a non-reentrant model
 30870 ;;
 30871                           
 30872                           	psect	text140
 30873  00553A                     __ptext140:
 30874                           	opt stack 0
 30875  00553A                     _OsTmr_StartTimer:
 30876                           	opt stack 12
 30877                           
 30878                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 30879                           
 30880                           ; BSR set to: 0
 30881                           ;incstack = 0
 30882  00553A  0100               	movlb	0	; () banked
 30883  00553C  EE20 F001          	lfsr	2,1
 30884  005540  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 30885  005542  26D9               	addwf	fsr2l,f,c
 30886  005544  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 30887  005546  22DA               	addwfc	fsr2h,f,c
 30888  005548  0E00               	movlw	0
 30889  00554A  6EDF               	movwf	indf2,c
 30890                           
 30891                           ; BSR set to: 0
 30892                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 30893  00554C  EC75  F033         	call	_GetOsTickCounter	;wreg free
 30894  005550  0100               	movlb	0	; () banked
 30895  005552  EE20 F002          	lfsr	2,2
 30896  005556  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 30897  005558  26D9               	addwf	fsr2l,f,c
 30898  00555A  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 30899  00555C  22DA               	addwfc	fsr2h,f,c
 30900  00555E  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 30901  005562  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 30902  005566  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 30903  00556A  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 30904                           
 30905                           ; BSR set to: 0
 30906                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 30907  00556E  EE20 F006          	lfsr	2,6
 30908  005572  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 30909  005574  26D9               	addwf	fsr2l,f,c
 30910  005576  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 30911  005578  22DA               	addwfc	fsr2h,f,c
 30912  00557A  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 30913  00557E  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 30914  005582  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 30915  005586  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 30916                           
 30917                           ; BSR set to: 0
 30918                           ;os_timers.c: 127: Timer->Enabled = 1u;
 30919  00558A  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 30920  00558E  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 30921  005592  0E01               	movlw	1
 30922  005594  6EDF               	movwf	indf2,c
 30923                           
 30924                           ; BSR set to: 0
 30925  005596  0012               	return		;funcret
 30926  005598                     __end_of_OsTmr_StartTimer:
 30927                           	opt stack 0
 30928                           tosu	equ	0xFFF
 30929                           tosh	equ	0xFFE
 30930                           tosl	equ	0xFFD
 30931                           pclath	equ	0xFFA
 30932                           tblptru	equ	0xFF8
 30933                           tblptrh	equ	0xFF7
 30934                           tblptrl	equ	0xFF6
 30935                           tablat	equ	0xFF5
 30936                           prodh	equ	0xFF4
 30937                           prodl	equ	0xFF3
 30938                           intcon	equ	0xFF2
 30939                           intcon2	equ	0xFF1
 30940                           intcon3	equ	0xFF0
 30941                           indf0	equ	0xFEF
 30942                           postinc0	equ	0xFEE
 30943                           plusw0	equ	0xFEB
 30944                           fsr0h	equ	0xFEA
 30945                           fsr0l	equ	0xFE9
 30946                           wreg	equ	0xFE8
 30947                           indf1	equ	0xFE7
 30948                           postinc1	equ	0xFE6
 30949                           postdec1	equ	0xFE5
 30950                           plusw1	equ	0xFE3
 30951                           fsr1h	equ	0xFE2
 30952                           fsr1l	equ	0xFE1
 30953                           indf2	equ	0xFDF
 30954                           postinc2	equ	0xFDE
 30955                           postdec2	equ	0xFDD
 30956                           plusw2	equ	0xFDB
 30957                           fsr2h	equ	0xFDA
 30958                           fsr2l	equ	0xFD9
 30959                           status	equ	0xFD8
 30960                           
 30961 ;; *************** function _OsTmr_GetTimerStatus *****************
 30962 ;; Defined at:
 30963 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 30964 ;; Parameters:    Size  Location     Type
 30965 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 30966 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 30967 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 30968 ;; Auto vars:     Size  Location     Type
 30969 ;;		None
 30970 ;; Return value:  Size  Location     Type
 30971 ;;                  1    wreg      enum E7740
 30972 ;; Registers used:
 30973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30974 ;; Tracked objects:
 30975 ;;		On entry : 0/0
 30976 ;;		On exit  : 0/0
 30977 ;;		Unchanged: 0/0
 30978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30981 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30982 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30983 ;;Total ram usage:        6 bytes
 30984 ;; Hardware stack levels used:    1
 30985 ;; Hardware stack levels required when called:   13
 30986 ;; This function calls:
 30987 ;;		_GetElapsedTime
 30988 ;; This function is called by:
 30989 ;;		_OsTmr_Wait
 30990 ;;		_CheckModem
 30991 ;;		_SendSmsSm
 30992 ;;		_InitGprsNetwork
 30993 ;;		_HttpGetMethod
 30994 ;;		_I2cSlv_QueryI2cData
 30995 ;;		_Term_MainSm
 30996 ;; This function uses a non-reentrant model
 30997 ;;
 30998                           
 30999                           	psect	text141
 31000  004C66                     __ptext141:
 31001                           	opt stack 0
 31002  004C66                     _OsTmr_GetTimerStatus:
 31003                           	opt stack 11
 31004                           
 31005                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 31006                           
 31007                           ; BSR set to: 0
 31008                           ;incstack = 0
 31009  004C66  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 31010  004C6A  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 31011  004C6E  04DE               	decf	postinc2,w,c
 31012  004C70  A4D8               	btfss	status,2,c
 31013  004C72  D030               	goto	l864
 31014                           
 31015                           ;os_timers.c: 197: {
 31016                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 31017  004C74  0100               	movlb	0	; () banked
 31018  004C76  EE20 F006          	lfsr	2,6
 31019  004C7A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31020  004C7C  26D9               	addwf	fsr2l,f,c
 31021  004C7E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31022  004C80  22DA               	addwfc	fsr2h,f,c
 31023  004C82  EE10 F002          	lfsr	1,2
 31024  004C86  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31025  004C88  26E1               	addwf	fsr1l,f,c
 31026  004C8A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31027  004C8C  22E2               	addwfc	fsr1h,f,c
 31028  004C8E  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 31029  004C92  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 31030  004C96  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 31031  004C9A  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 31032  004C9E  EC4F  F01F         	call	_GetElapsedTime	;wreg free
 31033  004CA2  50DE               	movf	postinc2,w,c
 31034  004CA4  0100               	movlb	0	; () banked
 31035  004CA6  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 31036  004CA8  50DE               	movf	postinc2,w,c
 31037  004CAA  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 31038  004CAC  50DE               	movf	postinc2,w,c
 31039  004CAE  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 31040  004CB0  50DE               	movf	postinc2,w,c
 31041  004CB2  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 31042  004CB4  A0D8               	btfss	status,0,c
 31043  004CB6  D017               	goto	l867
 31044                           
 31045                           ; BSR set to: 0
 31046                           ;os_timers.c: 200: {
 31047                           ;os_timers.c: 202: Timer->Enabled = 0u;
 31048  004CB8  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 31049  004CBC  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 31050  004CC0  0E00               	movlw	0
 31051  004CC2  6EDF               	movwf	indf2,c
 31052                           
 31053                           ; BSR set to: 0
 31054                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 31055  004CC4  EE20 F001          	lfsr	2,1
 31056  004CC8  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31057  004CCA  26D9               	addwf	fsr2l,f,c
 31058  004CCC  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31059  004CCE  22DA               	addwfc	fsr2h,f,c
 31060  004CD0  0E01               	movlw	1
 31061  004CD2  D008               	goto	L81
 31062  004CD4                     l864:
 31063                           
 31064                           ;os_timers.c: 211: else
 31065                           ;os_timers.c: 212: {
 31066                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 31067                           
 31068                           ; BSR set to: 0
 31069  004CD4  0100               	movlb	0	; () banked
 31070  004CD6  EE20 F001          	lfsr	2,1
 31071  004CDA  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31072  004CDC  26D9               	addwf	fsr2l,f,c
 31073  004CDE  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31074  004CE0  22DA               	addwfc	fsr2h,f,c
 31075  004CE2  0E02               	movlw	2
 31076  004CE4                     L81:
 31077  004CE4  6EDF               	movwf	indf2,c
 31078  004CE6                     l867:
 31079                           
 31080                           ; BSR set to: 0
 31081                           ;os_timers.c: 215: }
 31082                           ;os_timers.c: 218: return Timer->Status;
 31083  004CE6  EE20 F001          	lfsr	2,1
 31084  004CEA  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31085  004CEC  26D9               	addwf	fsr2l,f,c
 31086  004CEE  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31087  004CF0  22DA               	addwfc	fsr2h,f,c
 31088  004CF2  50DF               	movf	indf2,w,c
 31089  004CF4  0012               	return	
 31090  004CF6                     __end_of_OsTmr_GetTimerStatus:
 31091                           	opt stack 0
 31092                           tosu	equ	0xFFF
 31093                           tosh	equ	0xFFE
 31094                           tosl	equ	0xFFD
 31095                           pclath	equ	0xFFA
 31096                           tblptru	equ	0xFF8
 31097                           tblptrh	equ	0xFF7
 31098                           tblptrl	equ	0xFF6
 31099                           tablat	equ	0xFF5
 31100                           prodh	equ	0xFF4
 31101                           prodl	equ	0xFF3
 31102                           intcon	equ	0xFF2
 31103                           intcon2	equ	0xFF1
 31104                           intcon3	equ	0xFF0
 31105                           indf0	equ	0xFEF
 31106                           postinc0	equ	0xFEE
 31107                           plusw0	equ	0xFEB
 31108                           fsr0h	equ	0xFEA
 31109                           fsr0l	equ	0xFE9
 31110                           wreg	equ	0xFE8
 31111                           indf1	equ	0xFE7
 31112                           postinc1	equ	0xFE6
 31113                           postdec1	equ	0xFE5
 31114                           plusw1	equ	0xFE3
 31115                           fsr1h	equ	0xFE2
 31116                           fsr1l	equ	0xFE1
 31117                           indf2	equ	0xFDF
 31118                           postinc2	equ	0xFDE
 31119                           postdec2	equ	0xFDD
 31120                           plusw2	equ	0xFDB
 31121                           fsr2h	equ	0xFDA
 31122                           fsr2l	equ	0xFD9
 31123                           status	equ	0xFD8
 31124                           
 31125 ;; *************** function _GetElapsedTime *****************
 31126 ;; Defined at:
 31127 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31128 ;; Parameters:    Size  Location     Type
 31129 ;;  StartTime       4   33[BANK0 ] unsigned long 
 31130 ;; Auto vars:     Size  Location     Type
 31131 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 31132 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 31133 ;; Return value:  Size  Location     Type
 31134 ;;                  4   33[BANK0 ] unsigned long 
 31135 ;; Registers used:
 31136 ;;		wreg, status,2, status,0, cstack
 31137 ;; Tracked objects:
 31138 ;;		On entry : 0/0
 31139 ;;		On exit  : 0/0
 31140 ;;		Unchanged: 0/0
 31141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31142 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31143 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31144 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31145 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31146 ;;Total ram usage:       20 bytes
 31147 ;; Hardware stack levels used:    1
 31148 ;; Hardware stack levels required when called:   12
 31149 ;; This function calls:
 31150 ;;		_GetOsTickCounter
 31151 ;; This function is called by:
 31152 ;;		_OsTmr_GetTimerStatus
 31153 ;;		_OsTmr_GetRemainingTime
 31154 ;; This function uses a non-reentrant model
 31155 ;;
 31156                           
 31157                           	psect	text142
 31158  003E9E                     __ptext142:
 31159                           	opt stack 0
 31160  003E9E                     _GetElapsedTime:
 31161                           	opt stack 11
 31162                           
 31163                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 31164                           ;os_timers.c: 87: UINT32 TimeValue;
 31165                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 31166                           
 31167                           ; BSR set to: 0
 31168                           ;incstack = 0
 31169  003E9E  EC75  F033         	call	_GetOsTickCounter	;wreg free
 31170  003EA2  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 31171  003EA6  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 31172  003EAA  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 31173  003EAE  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 31174                           
 31175                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 31176  003EB2  0100               	movlb	0	; () banked
 31177  003EB4  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 31178  003EB6  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31179  003EB8  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 31180  003EBA  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31181  003EBC  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 31182  003EBE  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31183  003EC0  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 31184  003EC2  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31185  003EC4  A0D8               	btfss	status,0,c
 31186  003EC6  D01D               	goto	l844
 31187                           
 31188                           ; BSR set to: 0
 31189                           ;os_timers.c: 94: {
 31190                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 31191  003EC8  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31192  003ECC  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31193  003ED0  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31194  003ED4  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31195  003ED8  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31196  003EDA  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31197  003EDC  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31198  003EDE  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31199  003EE0  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31200  003EE2  0E00               	movlw	0
 31201  003EE4  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31202  003EE6  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31203  003EE8  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31204  003EEA  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31205  003EEC  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31206  003EEE  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31207  003EF0  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31208  003EF2  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31209  003EF4  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31210  003EF6  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31211  003EF8  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31212  003EFA  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31213  003EFC  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31214  003EFE  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31215  003F00  D028               	goto	L52
 31216  003F02                     l844:
 31217                           
 31218                           ; BSR set to: 0
 31219                           ;os_timers.c: 97: else
 31220                           ;os_timers.c: 98: {
 31221                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 31222                           
 31223                           ; BSR set to: 0
 31224  003F02  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31225  003F06  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31226  003F0A  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31227  003F0E  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31228  003F12  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31229  003F14  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31230  003F16  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31231  003F18  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31232  003F1A  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31233  003F1C  0E00               	movlw	0
 31234  003F1E  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31235  003F20  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31236  003F22  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31237  003F24  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31238  003F26  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31239  003F28  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 31240  003F2A  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31241  003F2C  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31242  003F2E  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 31243  003F30  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31244  003F32  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31245  003F34  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 31246  003F36  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31247  003F38  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31248  003F3A  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 31249  003F3C  0EFF               	movlw	255
 31250  003F3E  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 31251  003F40  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31252  003F42  0EFF               	movlw	255
 31253  003F44  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 31254  003F46  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31255  003F48  0EFF               	movlw	255
 31256  003F4A  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 31257  003F4C  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31258  003F4E  0EFF               	movlw	255
 31259  003F50  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 31260  003F52                     L52:
 31261  003F52  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 31262                           
 31263                           ; BSR set to: 0
 31264                           ;os_timers.c: 100: }
 31265                           ;os_timers.c: 102: return TimeValue;
 31266                           
 31267                           ; BSR set to: 0
 31268  003F54  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 31269  003F58  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 31270  003F5C  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 31271  003F60  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 31272  003F64  0012               	return	
 31273  003F66                     __end_of_GetElapsedTime:
 31274                           	opt stack 0
 31275                           tosu	equ	0xFFF
 31276                           tosh	equ	0xFFE
 31277                           tosl	equ	0xFFD
 31278                           pclath	equ	0xFFA
 31279                           tblptru	equ	0xFF8
 31280                           tblptrh	equ	0xFF7
 31281                           tblptrl	equ	0xFF6
 31282                           tablat	equ	0xFF5
 31283                           prodh	equ	0xFF4
 31284                           prodl	equ	0xFF3
 31285                           intcon	equ	0xFF2
 31286                           intcon2	equ	0xFF1
 31287                           intcon3	equ	0xFF0
 31288                           indf0	equ	0xFEF
 31289                           postinc0	equ	0xFEE
 31290                           plusw0	equ	0xFEB
 31291                           fsr0h	equ	0xFEA
 31292                           fsr0l	equ	0xFE9
 31293                           wreg	equ	0xFE8
 31294                           indf1	equ	0xFE7
 31295                           postinc1	equ	0xFE6
 31296                           postdec1	equ	0xFE5
 31297                           plusw1	equ	0xFE3
 31298                           fsr1h	equ	0xFE2
 31299                           fsr1l	equ	0xFE1
 31300                           indf2	equ	0xFDF
 31301                           postinc2	equ	0xFDE
 31302                           postdec2	equ	0xFDD
 31303                           plusw2	equ	0xFDB
 31304                           fsr2h	equ	0xFDA
 31305                           fsr2l	equ	0xFD9
 31306                           status	equ	0xFD8
 31307                           
 31308 ;; *************** function _GetOsTickCounter *****************
 31309 ;; Defined at:
 31310 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31311 ;; Parameters:    Size  Location     Type
 31312 ;;		None
 31313 ;; Auto vars:     Size  Location     Type
 31314 ;;		None
 31315 ;; Return value:  Size  Location     Type
 31316 ;;                  4   29[BANK0 ] unsigned long 
 31317 ;; Registers used:
 31318 ;;		None
 31319 ;; Tracked objects:
 31320 ;;		On entry : 0/0
 31321 ;;		On exit  : 0/0
 31322 ;;		Unchanged: 0/0
 31323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31327 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31328 ;;Total ram usage:        4 bytes
 31329 ;; Hardware stack levels used:    1
 31330 ;; Hardware stack levels required when called:   11
 31331 ;; This function calls:
 31332 ;;		Nothing
 31333 ;; This function is called by:
 31334 ;;		_GetElapsedTime
 31335 ;;		_OsTmr_StartTimer
 31336 ;;		_OsTmr_GetElapsedTime
 31337 ;; This function uses a non-reentrant model
 31338 ;;
 31339                           
 31340                           	psect	text143
 31341  0066EA                     __ptext143:
 31342                           	opt stack 0
 31343  0066EA                     _GetOsTickCounter:
 31344                           	opt stack 12
 31345                           
 31346                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 31347                           
 31348                           ; BSR set to: 0
 31349                           ;incstack = 0
 31350  0066EA  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 31351  0066EE  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 31352  0066F2  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 31353  0066F6  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 31354  0066FA  0012               	return		;funcret
 31355  0066FC                     __end_of_GetOsTickCounter:
 31356                           	opt stack 0
 31357                           tosu	equ	0xFFF
 31358                           tosh	equ	0xFFE
 31359                           tosl	equ	0xFFD
 31360                           pclath	equ	0xFFA
 31361                           tblptru	equ	0xFF8
 31362                           tblptrh	equ	0xFF7
 31363                           tblptrl	equ	0xFF6
 31364                           tablat	equ	0xFF5
 31365                           prodh	equ	0xFF4
 31366                           prodl	equ	0xFF3
 31367                           intcon	equ	0xFF2
 31368                           intcon2	equ	0xFF1
 31369                           intcon3	equ	0xFF0
 31370                           indf0	equ	0xFEF
 31371                           postinc0	equ	0xFEE
 31372                           plusw0	equ	0xFEB
 31373                           fsr0h	equ	0xFEA
 31374                           fsr0l	equ	0xFE9
 31375                           wreg	equ	0xFE8
 31376                           indf1	equ	0xFE7
 31377                           postinc1	equ	0xFE6
 31378                           postdec1	equ	0xFE5
 31379                           plusw1	equ	0xFE3
 31380                           fsr1h	equ	0xFE2
 31381                           fsr1l	equ	0xFE1
 31382                           indf2	equ	0xFDF
 31383                           postinc2	equ	0xFDE
 31384                           postdec2	equ	0xFDD
 31385                           plusw2	equ	0xFDB
 31386                           fsr2h	equ	0xFDA
 31387                           fsr2l	equ	0xFD9
 31388                           status	equ	0xFD8
 31389                           
 31390 ;; *************** function _ClearBuffer *****************
 31391 ;; Defined at:
 31392 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 31393 ;; Parameters:    Size  Location     Type
 31394 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 31395 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_SmsRx(102)
      +, 
 31396 ;;		 -> callerNumber(13), RxBuffer(400), 
 31397 ;;  Len             2   31[BANK0 ] unsigned short 
 31398 ;; Auto vars:     Size  Location     Type
 31399 ;;  Index           2   33[BANK0 ] unsigned short 
 31400 ;; Return value:  Size  Location     Type
 31401 ;;                  1    wreg      void 
 31402 ;; Registers used:
 31403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31404 ;; Tracked objects:
 31405 ;;		On entry : 0/0
 31406 ;;		On exit  : 0/0
 31407 ;;		Unchanged: 0/0
 31408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31409 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31410 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31412 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31413 ;;Total ram usage:        6 bytes
 31414 ;; Hardware stack levels used:    1
 31415 ;; Hardware stack levels required when called:   11
 31416 ;; This function calls:
 31417 ;;		Nothing
 31418 ;; This function is called by:
 31419 ;;		_GetSmsSm
 31420 ;;		_GetCallerNumber
 31421 ;;		_InitGprsNetwork
 31422 ;;		_HttpGetMethod
 31423 ;;		_GsmGprsTerminal
 31424 ;; This function uses a non-reentrant model
 31425 ;;
 31426                           
 31427                           	psect	text144
 31428  00609C                     __ptext144:
 31429                           	opt stack 0
 31430  00609C                     _ClearBuffer:
 31431                           	opt stack 15
 31432                           
 31433                           ;sf.c: 126: UINT16 Index = 0;
 31434                           
 31435                           ;incstack = 0
 31436  00609C  0E00               	movlw	0
 31437  00609E  0100               	movlb	0	; () banked
 31438  0060A0  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 31439  0060A2  0E00               	movlw	0
 31440  0060A4  6F81               	movwf	ClearBuffer@Index& (0+255),b
 31441                           
 31442                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 31443  0060A6  0E00               	movlw	0
 31444  0060A8  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 31445  0060AA  0E00               	movlw	0
 31446  0060AC  6F81               	movwf	ClearBuffer@Index& (0+255),b
 31447  0060AE  D00A               	goto	l2250
 31448  0060B0                     
 31449                           ; BSR set to: 0
 31450                           ;sf.c: 130: {
 31451                           ;sf.c: 131: *(Buffer + Index) = 0;
 31452                           
 31453                           ; BSR set to: 0
 31454  0060B0  5181               	movf	ClearBuffer@Index& (0+255),w,b
 31455  0060B2  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 31456  0060B4  6ED9               	movwf	fsr2l,c
 31457  0060B6  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 31458  0060B8  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 31459  0060BA  6EDA               	movwf	fsr2h,c
 31460  0060BC  0E00               	movlw	0
 31461  0060BE  6EDF               	movwf	indf2,c
 31462                           
 31463                           ; BSR set to: 0
 31464  0060C0  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 31465  0060C2  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 31466  0060C4                     l2250:
 31467                           
 31468                           ; BSR set to: 0
 31469                           
 31470                           ; BSR set to: 0
 31471  0060C4  5181               	movf	ClearBuffer@Index& (0+255),w,b
 31472  0060C6  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 31473  0060C8  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 31474  0060CA  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 31475  0060CC  A0D8               	btfss	status,0,c
 31476  0060CE  0012               	return	
 31477  0060D0  D7EF               	goto	l2251
 31478  0060D2                     __end_of_ClearBuffer:
 31479                           	opt stack 0
 31480                           tosu	equ	0xFFF
 31481                           tosh	equ	0xFFE
 31482                           tosl	equ	0xFFD
 31483                           pclath	equ	0xFFA
 31484                           tblptru	equ	0xFF8
 31485                           tblptrh	equ	0xFF7
 31486                           tblptrl	equ	0xFF6
 31487                           tablat	equ	0xFF5
 31488                           prodh	equ	0xFF4
 31489                           prodl	equ	0xFF3
 31490                           intcon	equ	0xFF2
 31491                           intcon2	equ	0xFF1
 31492                           intcon3	equ	0xFF0
 31493                           indf0	equ	0xFEF
 31494                           postinc0	equ	0xFEE
 31495                           plusw0	equ	0xFEB
 31496                           fsr0h	equ	0xFEA
 31497                           fsr0l	equ	0xFE9
 31498                           wreg	equ	0xFE8
 31499                           indf1	equ	0xFE7
 31500                           postinc1	equ	0xFE6
 31501                           postdec1	equ	0xFE5
 31502                           plusw1	equ	0xFE3
 31503                           fsr1h	equ	0xFE2
 31504                           fsr1l	equ	0xFE1
 31505                           indf2	equ	0xFDF
 31506                           postinc2	equ	0xFDE
 31507                           postdec2	equ	0xFDD
 31508                           plusw2	equ	0xFDB
 31509                           fsr2h	equ	0xFDA
 31510                           fsr2l	equ	0xFD9
 31511                           status	equ	0xFD8
 31512                           
 31513 ;; *************** function _LedStateMachine *****************
 31514 ;; Defined at:
 31515 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 31516 ;; Parameters:    Size  Location     Type
 31517 ;;  Led             1    wreg     unsigned char 
 31518 ;;  LedSts          2   47[BANK0 ] PTR enum E8950
 31519 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 31520 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 31521 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 31522 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 31523 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 31524 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 31525 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 31526 ;; Auto vars:     Size  Location     Type
 31527 ;;  Led             1   57[BANK0 ] unsigned char 
 31528 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 31529 ;; Return value:  Size  Location     Type
 31530 ;;                  1    wreg      unsigned char 
 31531 ;; Registers used:
 31532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31533 ;; Tracked objects:
 31534 ;;		On entry : 0/0
 31535 ;;		On exit  : 0/0
 31536 ;;		Unchanged: 0/0
 31537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31538 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31539 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31540 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31541 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31542 ;;Total ram usage:       11 bytes
 31543 ;; Hardware stack levels used:    1
 31544 ;; Hardware stack levels required when called:   13
 31545 ;; This function calls:
 31546 ;;		_LedBlinkStateMachine
 31547 ;;		_LedPulseStateMachine
 31548 ;;		_Led_SetLedStatus
 31549 ;; This function is called by:
 31550 ;;		_Led_MainTask
 31551 ;; This function uses a non-reentrant model
 31552 ;;
 31553                           
 31554                           	psect	text145
 31555  0045D2                     __ptext145:
 31556                           	opt stack 0
 31557  0045D2                     _LedStateMachine:
 31558                           	opt stack 14
 31559                           
 31560                           ; BSR set to: 0
 31561                           ;incstack = 0
 31562                           ;LedStateMachine@Led stored from wreg
 31563  0045D2  0100               	movlb	0	; () banked
 31564  0045D4  6F99               	movwf	LedStateMachine@Led& (0+255),b
 31565                           
 31566                           ;led.c: 238: UINT8 LedOutSts = 0u;
 31567  0045D6  0E00               	movlw	0
 31568  0045D8  0100               	movlb	0	; () banked
 31569  0045DA  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31570                           
 31571                           ;led.c: 241: switch (*LedSts)
 31572  0045DC  D037               	goto	l2109
 31573  0045DE                     
 31574                           ; BSR set to: 0
 31575                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 31576                           
 31577                           ; BSR set to: 0
 31578  0045DE  0E00               	movlw	0
 31579  0045E0  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31580                           
 31581                           ; BSR set to: 0
 31582                           ;led.c: 246: *LedOut = ((UINT8)(0));
 31583  0045E2  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 31584  0045E6  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 31585  0045EA  0E00               	movlw	0
 31586  0045EC  D007               	goto	L53
 31587  0045EE                     
 31588                           ; BSR set to: 0
 31589                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 31590                           
 31591                           ; BSR set to: 0
 31592  0045EE  0E01               	movlw	1
 31593  0045F0  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31594                           
 31595                           ; BSR set to: 0
 31596                           ;led.c: 252: *LedOut = ((UINT8)(1));
 31597  0045F2  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 31598  0045F6  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 31599  0045FA  0E01               	movlw	1
 31600  0045FC                     L53:
 31601  0045FC  6EDF               	movwf	indf2,c
 31602                           
 31603                           ;led.c: 253: break;
 31604  0045FE  D03A               	goto	l2111
 31605  004600                     
 31606                           ; BSR set to: 0
 31607                           ;led.c: 257: if (*LedOut == 1)
 31608                           
 31609                           ; BSR set to: 0
 31610  004600  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 31611  004604  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 31612  004608  04DE               	decf	postinc2,w,c
 31613  00460A  A4D8               	btfss	status,2,c
 31614  00460C  D006               	goto	l2114
 31615                           
 31616                           ; BSR set to: 0
 31617                           ;led.c: 258: {
 31618                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 31619  00460E  0E00               	movlw	0
 31620  004610  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 31621  004612  5199               	movf	LedStateMachine@Led& (0+255),w,b
 31622  004614  ECFD  F030         	call	_Led_SetLedStatus
 31623                           
 31624                           ;led.c: 261: }
 31625  004618  D02D               	goto	l2111
 31626  00461A                     l2114:
 31627                           
 31628                           ;led.c: 262: else
 31629                           ;led.c: 263: {
 31630                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 31631  00461A  0E01               	movlw	1
 31632  00461C  0100               	movlb	0	; () banked
 31633  00461E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 31634  004620  5199               	movf	LedStateMachine@Led& (0+255),w,b
 31635  004622  ECFD  F030         	call	_Led_SetLedStatus
 31636                           
 31637                           ;led.c: 266: }
 31638                           ;led.c: 267: break;
 31639  004626  D026               	goto	l2111
 31640  004628                     
 31641                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 31642  004628  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 31643  00462C  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 31644  004630  ECA9  F014         	call	_LedBlinkStateMachine	;wreg free
 31645  004634  D008               	goto	L54
 31646  004636                     
 31647                           ; BSR set to: 0
 31648                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 31649                           
 31650                           ; BSR set to: 0
 31651  004636  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 31652  00463A  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 31653  00463E  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 31654  004642  ECD8  F019         	call	_LedPulseStateMachine	;wreg free
 31655  004646                     L54:
 31656  004646  0100               	movlb	0	; () banked
 31657  004648  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31658                           
 31659                           ; BSR set to: 0
 31660                           ;led.c: 281: }
 31661                           
 31662                           ; BSR set to: 0
 31663                           ;led.c: 280: break;
 31664                           
 31665                           ;led.c: 279: default:
 31666                           
 31667                           ;led.c: 277: break;
 31668  00464A  D014               	goto	l2111
 31669  00464C                     l2109:
 31670                           
 31671                           ; BSR set to: 0
 31672                           
 31673                           ; BSR set to: 0
 31674  00464C  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 31675  004650  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 31676  004654  50DF               	movf	indf2,w,c
 31677                           
 31678                           ; Switch size 1, requested type "space"
 31679                           ; Number of cases is 5, Range of values is 0 to 4
 31680                           ; switch strategies available:
 31681                           ; Name         Instructions Cycles
 31682                           ; simple_byte           16     9 (average)
 31683                           ;	Chosen strategy is simple_byte
 31684  004656  0A00               	xorlw	0	; case 0
 31685  004658  B4D8               	btfsc	status,2,c
 31686  00465A  D7C1               	goto	l2110
 31687  00465C  0A01               	xorlw	1	; case 1
 31688  00465E  B4D8               	btfsc	status,2,c
 31689  004660  D7C6               	goto	l2112
 31690  004662  0A03               	xorlw	3	; case 2
 31691  004664  B4D8               	btfsc	status,2,c
 31692  004666  D7CC               	goto	l2113
 31693  004668  0A01               	xorlw	1	; case 3
 31694  00466A  B4D8               	btfsc	status,2,c
 31695  00466C  D7DD               	goto	l2116
 31696  00466E  0A07               	xorlw	7	; case 4
 31697  004670  B4D8               	btfsc	status,2,c
 31698  004672  D7E1               	goto	l2117
 31699  004674                     l2111:
 31700                           
 31701                           ;led.c: 283: return LedOutSts;
 31702                           
 31703                           ; BSR set to: 0
 31704  004674  0100               	movlb	0	; () banked
 31705  004676  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 31706  004678  0012               	return	
 31707  00467A                     __end_of_LedStateMachine:
 31708                           	opt stack 0
 31709                           tosu	equ	0xFFF
 31710                           tosh	equ	0xFFE
 31711                           tosl	equ	0xFFD
 31712                           pclath	equ	0xFFA
 31713                           tblptru	equ	0xFF8
 31714                           tblptrh	equ	0xFF7
 31715                           tblptrl	equ	0xFF6
 31716                           tablat	equ	0xFF5
 31717                           prodh	equ	0xFF4
 31718                           prodl	equ	0xFF3
 31719                           intcon	equ	0xFF2
 31720                           intcon2	equ	0xFF1
 31721                           intcon3	equ	0xFF0
 31722                           indf0	equ	0xFEF
 31723                           postinc0	equ	0xFEE
 31724                           plusw0	equ	0xFEB
 31725                           fsr0h	equ	0xFEA
 31726                           fsr0l	equ	0xFE9
 31727                           wreg	equ	0xFE8
 31728                           indf1	equ	0xFE7
 31729                           postinc1	equ	0xFE6
 31730                           postdec1	equ	0xFE5
 31731                           plusw1	equ	0xFE3
 31732                           fsr1h	equ	0xFE2
 31733                           fsr1l	equ	0xFE1
 31734                           indf2	equ	0xFDF
 31735                           postinc2	equ	0xFDE
 31736                           postdec2	equ	0xFDD
 31737                           plusw2	equ	0xFDB
 31738                           fsr2h	equ	0xFDA
 31739                           fsr2l	equ	0xFD9
 31740                           status	equ	0xFD8
 31741                           
 31742 ;; *************** function _LedPulseStateMachine *****************
 31743 ;; Defined at:
 31744 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 31745 ;; Parameters:    Size  Location     Type
 31746 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 31747 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 31748 ;;  Led             1   44[BANK0 ] unsigned char 
 31749 ;; Auto vars:     Size  Location     Type
 31750 ;;		None
 31751 ;; Return value:  Size  Location     Type
 31752 ;;                  1    wreg      unsigned char 
 31753 ;; Registers used:
 31754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31755 ;; Tracked objects:
 31756 ;;		On entry : 0/0
 31757 ;;		On exit  : 0/0
 31758 ;;		Unchanged: 0/0
 31759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31760 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31762 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31763 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31764 ;;Total ram usage:        5 bytes
 31765 ;; Hardware stack levels used:    1
 31766 ;; Hardware stack levels required when called:   12
 31767 ;; This function calls:
 31768 ;;		_Led_SetLedStatus
 31769 ;;		___lwdiv
 31770 ;; This function is called by:
 31771 ;;		_LedStateMachine
 31772 ;; This function uses a non-reentrant model
 31773 ;;
 31774                           
 31775                           	psect	text146
 31776  0033B0                     __ptext146:
 31777                           	opt stack 0
 31778  0033B0                     _LedPulseStateMachine:
 31779                           	opt stack 14
 31780                           
 31781                           ;led.c: 185: switch (LedPulse->LedPulseState)
 31782                           
 31783                           ; BSR set to: 0
 31784                           ;incstack = 0
 31785  0033B0  D05C               	goto	l2099
 31786  0033B2                     
 31787                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 31788  0033B2  0100               	movlb	0	; () banked
 31789  0033B4  EE20 F001          	lfsr	2,1
 31790  0033B8  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31791  0033BA  26D9               	addwf	fsr2l,f,c
 31792  0033BC  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31793  0033BE  22DA               	addwfc	fsr2h,f,c
 31794  0033C0  0E01               	movlw	1
 31795  0033C2  6EDF               	movwf	indf2,c
 31796                           
 31797                           ; BSR set to: 0
 31798                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 31799  0033C4  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 31800  0033C8  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 31801  0033CC  0E01               	movlw	1
 31802  0033CE  D036               	goto	L55
 31803  0033D0                     
 31804                           ;led.c: 196: LedPulse->LedPulseCounter++;
 31805                           
 31806                           ; BSR set to: 0
 31807  0033D0  0100               	movlb	0	; () banked
 31808  0033D2  EE20 F002          	lfsr	2,2
 31809  0033D6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31810  0033D8  26D9               	addwf	fsr2l,f,c
 31811  0033DA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31812  0033DC  22DA               	addwfc	fsr2h,f,c
 31813  0033DE  2ADE               	incf	postinc2,f,c
 31814  0033E0  0E00               	movlw	0
 31815  0033E2  22DD               	addwfc	postdec2,f,c
 31816                           
 31817                           ; BSR set to: 0
 31818                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 31819  0033E4  EE20 F004          	lfsr	2,4
 31820  0033E8  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31821  0033EA  26D9               	addwf	fsr2l,f,c
 31822  0033EC  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31823  0033EE  22DA               	addwfc	fsr2h,f,c
 31824  0033F0  CFDE F083          	movff	postinc2,___lwdiv@dividend
 31825  0033F4  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 31826  0033F8  0E00               	movlw	0
 31827  0033FA  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 31828  0033FC  0E32               	movlw	50
 31829  0033FE  6F85               	movwf	___lwdiv@divisor& (0+255),b
 31830  003400  EC52  F02C         	call	___lwdiv	;wreg free
 31831  003404  0100               	movlb	0	; () banked
 31832  003406  EE20 F002          	lfsr	2,2
 31833  00340A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31834  00340C  26D9               	addwf	fsr2l,f,c
 31835  00340E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31836  003410  22DA               	addwfc	fsr2h,f,c
 31837  003412  5183               	movf	?___lwdiv& (0+255),w,b
 31838  003414  5CDE               	subwf	postinc2,w,c
 31839  003416  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 31840  003418  58DE               	subwfb	postinc2,w,c
 31841  00341A  A0D8               	btfss	status,0,c
 31842  00341C  D034               	goto	l2101
 31843                           
 31844                           ; BSR set to: 0
 31845                           ;led.c: 199: {
 31846                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 31847  00341E  EE20 F002          	lfsr	2,2
 31848  003422  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31849  003424  26D9               	addwf	fsr2l,f,c
 31850  003426  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31851  003428  22DA               	addwfc	fsr2h,f,c
 31852  00342A  0E00               	movlw	0
 31853  00342C  6EDE               	movwf	postinc2,c
 31854  00342E  0E00               	movlw	0
 31855  003430  6EDD               	movwf	postdec2,c
 31856                           
 31857                           ; BSR set to: 0
 31858                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 31859  003432  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 31860  003436  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 31861  00343A  0E02               	movlw	2
 31862  00343C                     L55:
 31863  00343C  6EDF               	movwf	indf2,c
 31864                           
 31865                           ; BSR set to: 0
 31866                           ;led.c: 204: }
 31867                           ;led.c: 205: break;
 31868  00343E  D023               	goto	l2101
 31869  003440                     
 31870                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 31871                           
 31872                           ; BSR set to: 0
 31873  003440  0100               	movlb	0	; () banked
 31874  003442  EE20 F001          	lfsr	2,1
 31875  003446  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31876  003448  26D9               	addwf	fsr2l,f,c
 31877  00344A  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31878  00344C  22DA               	addwfc	fsr2h,f,c
 31879  00344E  0E00               	movlw	0
 31880  003450  6EDF               	movwf	indf2,c
 31881                           
 31882                           ; BSR set to: 0
 31883                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 31884  003452  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 31885  003456  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 31886  00345A  0E00               	movlw	0
 31887  00345C  6EDF               	movwf	indf2,c
 31888                           
 31889                           ; BSR set to: 0
 31890                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 31891  00345E  0E00               	movlw	0
 31892  003460  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 31893  003462  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 31894  003464  ECFD  F030         	call	_Led_SetLedStatus
 31895                           
 31896                           ;led.c: 218: }
 31897                           
 31898                           ;led.c: 217: break;
 31899                           
 31900                           ;led.c: 216: default:
 31901                           
 31902                           ;led.c: 214: break;
 31903  003468  D00E               	goto	l2101
 31904  00346A                     l2099:
 31905  00346A  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 31906  00346E  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 31907  003472  50DF               	movf	indf2,w,c
 31908                           
 31909                           ; Switch size 1, requested type "space"
 31910                           ; Number of cases is 3, Range of values is 0 to 2
 31911                           ; switch strategies available:
 31912                           ; Name         Instructions Cycles
 31913                           ; simple_byte           10     6 (average)
 31914                           ;	Chosen strategy is simple_byte
 31915  003474  0A00               	xorlw	0	; case 0
 31916  003476  B4D8               	btfsc	status,2,c
 31917  003478  D79C               	goto	l2100
 31918  00347A  0A01               	xorlw	1	; case 1
 31919  00347C  B4D8               	btfsc	status,2,c
 31920  00347E  D7A8               	goto	l2102
 31921  003480  0A03               	xorlw	3	; case 2
 31922  003482  B4D8               	btfsc	status,2,c
 31923  003484  D7DD               	goto	l2104
 31924  003486                     l2101:
 31925                           
 31926                           ;led.c: 221: return (LedPulse->LedOutState);
 31927  003486  0100               	movlb	0	; () banked
 31928  003488  EE20 F001          	lfsr	2,1
 31929  00348C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 31930  00348E  26D9               	addwf	fsr2l,f,c
 31931  003490  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 31932  003492  22DA               	addwfc	fsr2h,f,c
 31933  003494  50DF               	movf	indf2,w,c
 31934  003496  0012               	return	
 31935  003498                     __end_of_LedPulseStateMachine:
 31936                           	opt stack 0
 31937                           tosu	equ	0xFFF
 31938                           tosh	equ	0xFFE
 31939                           tosl	equ	0xFFD
 31940                           pclath	equ	0xFFA
 31941                           tblptru	equ	0xFF8
 31942                           tblptrh	equ	0xFF7
 31943                           tblptrl	equ	0xFF6
 31944                           tablat	equ	0xFF5
 31945                           prodh	equ	0xFF4
 31946                           prodl	equ	0xFF3
 31947                           intcon	equ	0xFF2
 31948                           intcon2	equ	0xFF1
 31949                           intcon3	equ	0xFF0
 31950                           indf0	equ	0xFEF
 31951                           postinc0	equ	0xFEE
 31952                           plusw0	equ	0xFEB
 31953                           fsr0h	equ	0xFEA
 31954                           fsr0l	equ	0xFE9
 31955                           wreg	equ	0xFE8
 31956                           indf1	equ	0xFE7
 31957                           postinc1	equ	0xFE6
 31958                           postdec1	equ	0xFE5
 31959                           plusw1	equ	0xFE3
 31960                           fsr1h	equ	0xFE2
 31961                           fsr1l	equ	0xFE1
 31962                           indf2	equ	0xFDF
 31963                           postinc2	equ	0xFDE
 31964                           postdec2	equ	0xFDD
 31965                           plusw2	equ	0xFDB
 31966                           fsr2h	equ	0xFDA
 31967                           fsr2l	equ	0xFD9
 31968                           status	equ	0xFD8
 31969                           
 31970 ;; *************** function _Led_SetLedStatus *****************
 31971 ;; Defined at:
 31972 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 31973 ;; Parameters:    Size  Location     Type
 31974 ;;  Led             1    wreg     unsigned char 
 31975 ;;  LedSts          1   29[BANK0 ] enum E8950
 31976 ;; Auto vars:     Size  Location     Type
 31977 ;;  Led             1   30[BANK0 ] unsigned char 
 31978 ;; Return value:  Size  Location     Type
 31979 ;;                  1    wreg      void 
 31980 ;; Registers used:
 31981 ;;		wreg, status,2, status,0
 31982 ;; Tracked objects:
 31983 ;;		On entry : 0/0
 31984 ;;		On exit  : 0/0
 31985 ;;		Unchanged: 0/0
 31986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31987 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31990 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31991 ;;Total ram usage:        2 bytes
 31992 ;; Hardware stack levels used:    1
 31993 ;; Hardware stack levels required when called:   11
 31994 ;; This function calls:
 31995 ;;		Nothing
 31996 ;; This function is called by:
 31997 ;;		_LedPulseStateMachine
 31998 ;;		_LedStateMachine
 31999 ;;		_MyApp_Task
 32000 ;;		_waitSetupCall
 32001 ;;		_blinkForSeconds
 32002 ;; This function uses a non-reentrant model
 32003 ;;
 32004                           
 32005                           	psect	text147
 32006  0061FA                     __ptext147:
 32007                           	opt stack 0
 32008  0061FA                     _Led_SetLedStatus:
 32009                           	opt stack 15
 32010                           
 32011                           ; BSR set to: 0
 32012                           ;incstack = 0
 32013                           ;Led_SetLedStatus@Led stored from wreg
 32014  0061FA  0100               	movlb	0	; () banked
 32015  0061FC  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 32016                           
 32017                           ;led.c: 341: switch (Led)
 32018  0061FE  D009               	goto	l2130
 32019  006200                     l2131:
 32020                           
 32021                           ; BSR set to: 0
 32022                           ;led.c: 344: Led1Sts = LedSts;
 32023  006200  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 32024                           
 32025                           ;led.c: 345: break;
 32026  006204  0012               	return	
 32027  006206                     l2133:
 32028                           
 32029                           ; BSR set to: 0
 32030                           ;led.c: 348: Led2Sts = LedSts;
 32031  006206  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 32032                           
 32033                           ;led.c: 349: break;
 32034  00620A  0012               	return	
 32035  00620C                     l2134:
 32036                           
 32037                           ; BSR set to: 0
 32038                           ;led.c: 352: Led3Sts = LedSts;
 32039  00620C  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 32040                           
 32041                           ; BSR set to: 0
 32042                           ;led.c: 357: }
 32043                           
 32044                           ; BSR set to: 0
 32045                           ;led.c: 356: break;
 32046                           
 32047                           ;led.c: 355: default:
 32048                           
 32049                           ;led.c: 353: break;
 32050  006210  0012               	return	
 32051  006212                     l2130:
 32052                           
 32053                           ; BSR set to: 0
 32054  006212  0100               	movlb	0	; () banked
 32055  006214  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 32056                           
 32057                           ; Switch size 1, requested type "space"
 32058                           ; Number of cases is 3, Range of values is 1 to 3
 32059                           ; switch strategies available:
 32060                           ; Name         Instructions Cycles
 32061                           ; simple_byte           10     6 (average)
 32062                           ;	Chosen strategy is simple_byte
 32063  006216  0A01               	xorlw	1	; case 1
 32064  006218  B4D8               	btfsc	status,2,c
 32065  00621A  D7F2               	goto	l2131
 32066  00621C  0A03               	xorlw	3	; case 2
 32067  00621E  B4D8               	btfsc	status,2,c
 32068  006220  D7F2               	goto	l2133
 32069  006222  0A01               	xorlw	1	; case 3
 32070  006224  A4D8               	btfss	status,2,c
 32071  006226  0012               	return	
 32072  006228  D7F1               	goto	l2134
 32073  00622A                     __end_of_Led_SetLedStatus:
 32074                           	opt stack 0
 32075                           tosu	equ	0xFFF
 32076                           tosh	equ	0xFFE
 32077                           tosl	equ	0xFFD
 32078                           pclath	equ	0xFFA
 32079                           tblptru	equ	0xFF8
 32080                           tblptrh	equ	0xFF7
 32081                           tblptrl	equ	0xFF6
 32082                           tablat	equ	0xFF5
 32083                           prodh	equ	0xFF4
 32084                           prodl	equ	0xFF3
 32085                           intcon	equ	0xFF2
 32086                           intcon2	equ	0xFF1
 32087                           intcon3	equ	0xFF0
 32088                           indf0	equ	0xFEF
 32089                           postinc0	equ	0xFEE
 32090                           plusw0	equ	0xFEB
 32091                           fsr0h	equ	0xFEA
 32092                           fsr0l	equ	0xFE9
 32093                           wreg	equ	0xFE8
 32094                           indf1	equ	0xFE7
 32095                           postinc1	equ	0xFE6
 32096                           postdec1	equ	0xFE5
 32097                           plusw1	equ	0xFE3
 32098                           fsr1h	equ	0xFE2
 32099                           fsr1l	equ	0xFE1
 32100                           indf2	equ	0xFDF
 32101                           postinc2	equ	0xFDE
 32102                           postdec2	equ	0xFDD
 32103                           plusw2	equ	0xFDB
 32104                           fsr2h	equ	0xFDA
 32105                           fsr2l	equ	0xFD9
 32106                           status	equ	0xFD8
 32107                           
 32108 ;; *************** function _LedBlinkStateMachine *****************
 32109 ;; Defined at:
 32110 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32111 ;; Parameters:    Size  Location     Type
 32112 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 32113 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 32114 ;; Auto vars:     Size  Location     Type
 32115 ;;		None
 32116 ;; Return value:  Size  Location     Type
 32117 ;;                  1    wreg      unsigned char 
 32118 ;; Registers used:
 32119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32120 ;; Tracked objects:
 32121 ;;		On entry : 0/0
 32122 ;;		On exit  : 0/0
 32123 ;;		Unchanged: 0/0
 32124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32125 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32127 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32128 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32129 ;;Total ram usage:        4 bytes
 32130 ;; Hardware stack levels used:    1
 32131 ;; Hardware stack levels required when called:   12
 32132 ;; This function calls:
 32133 ;;		___lwdiv
 32134 ;; This function is called by:
 32135 ;;		_LedStateMachine
 32136 ;; This function uses a non-reentrant model
 32137 ;;
 32138                           
 32139                           	psect	text148
 32140  002952                     __ptext148:
 32141                           	opt stack 0
 32142  002952                     _LedBlinkStateMachine:
 32143                           	opt stack 14
 32144                           
 32145                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 32146                           
 32147                           ; BSR set to: 0
 32148                           ;incstack = 0
 32149  002952  D08F               	goto	l2086
 32150  002954                     
 32151                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 32152  002954  0100               	movlb	0	; () banked
 32153  002956  EE20 F008          	lfsr	2,8
 32154  00295A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32155  00295C  26D9               	addwf	fsr2l,f,c
 32156  00295E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32157  002960  22DA               	addwfc	fsr2h,f,c
 32158  002962  EE10 F001          	lfsr	1,1
 32159  002966  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32160  002968  26E1               	addwf	fsr1l,f,c
 32161  00296A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32162  00296C  22E2               	addwfc	fsr1h,f,c
 32163  00296E  CFDF FFE7          	movff	indf2,indf1
 32164                           
 32165                           ; BSR set to: 0
 32166                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 32167  002972  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32168  002976  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32169  00297A  D040               	goto	L56
 32170  00297C                     
 32171                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 32172                           
 32173                           ; BSR set to: 0
 32174  00297C  0100               	movlb	0	; () banked
 32175  00297E  EE20 F002          	lfsr	2,2
 32176  002982  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32177  002984  26D9               	addwf	fsr2l,f,c
 32178  002986  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32179  002988  22DA               	addwfc	fsr2h,f,c
 32180  00298A  2ADE               	incf	postinc2,f,c
 32181  00298C  0E00               	movlw	0
 32182  00298E  22DD               	addwfc	postdec2,f,c
 32183                           
 32184                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 32185  002990  EE20 F001          	lfsr	2,1
 32186  002994  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32187  002996  26D9               	addwf	fsr2l,f,c
 32188  002998  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32189  00299A  22DA               	addwfc	fsr2h,f,c
 32190  00299C  50DF               	movf	indf2,w,c
 32191  00299E  A4D8               	btfss	status,2,c
 32192  0029A0  D02F               	goto	l2090
 32193                           
 32194                           ; BSR set to: 0
 32195                           ;led.c: 142: {
 32196                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 32197  0029A2  EE20 F006          	lfsr	2,6
 32198  0029A6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32199  0029A8  26D9               	addwf	fsr2l,f,c
 32200  0029AA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32201  0029AC  22DA               	addwfc	fsr2h,f,c
 32202  0029AE  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32203  0029B2  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32204  0029B6  0E00               	movlw	0
 32205  0029B8  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32206  0029BA  0E32               	movlw	50
 32207  0029BC  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32208  0029BE  EC52  F02C         	call	___lwdiv	;wreg free
 32209  0029C2  0100               	movlb	0	; () banked
 32210  0029C4  EE20 F002          	lfsr	2,2
 32211  0029C8  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32212  0029CA  26D9               	addwf	fsr2l,f,c
 32213  0029CC  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32214  0029CE  22DA               	addwfc	fsr2h,f,c
 32215  0029D0  5183               	movf	?___lwdiv& (0+255),w,b
 32216  0029D2  5CDE               	subwf	postinc2,w,c
 32217  0029D4  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32218  0029D6  58DE               	subwfb	postinc2,w,c
 32219  0029D8  A0D8               	btfss	status,0,c
 32220  0029DA  D056               	goto	l2088
 32221                           
 32222                           ; BSR set to: 0
 32223                           ;led.c: 145: {
 32224                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 32225  0029DC  EE20 F002          	lfsr	2,2
 32226  0029E0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32227  0029E2  26D9               	addwf	fsr2l,f,c
 32228  0029E4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32229  0029E6  22DA               	addwfc	fsr2h,f,c
 32230  0029E8  0E00               	movlw	0
 32231  0029EA  6EDE               	movwf	postinc2,c
 32232  0029EC  0E00               	movlw	0
 32233  0029EE  6EDD               	movwf	postdec2,c
 32234                           
 32235                           ;led.c: 149: LedBlink->LedOutState = OnState;
 32236  0029F0  EE20 F001          	lfsr	2,1
 32237  0029F4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32238  0029F6  26D9               	addwf	fsr2l,f,c
 32239  0029F8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32240  0029FA  22DA               	addwfc	fsr2h,f,c
 32241  0029FC                     L56:
 32242  0029FC  0E01               	movlw	1
 32243  0029FE  D037               	goto	L57
 32244  002A00                     l2090:
 32245                           
 32246                           ; BSR set to: 0
 32247                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 32248                           
 32249                           ; BSR set to: 0
 32250  002A00  EE20 F001          	lfsr	2,1
 32251  002A04  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32252  002A06  26D9               	addwf	fsr2l,f,c
 32253  002A08  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32254  002A0A  22DA               	addwfc	fsr2h,f,c
 32255  002A0C  04DE               	decf	postinc2,w,c
 32256  002A0E  A4D8               	btfss	status,2,c
 32257  002A10  D03B               	goto	l2088
 32258                           
 32259                           ; BSR set to: 0
 32260                           ;led.c: 153: {
 32261                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 32262  002A12  EE20 F004          	lfsr	2,4
 32263  002A16  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32264  002A18  26D9               	addwf	fsr2l,f,c
 32265  002A1A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32266  002A1C  22DA               	addwfc	fsr2h,f,c
 32267  002A1E  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32268  002A22  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32269  002A26  0E00               	movlw	0
 32270  002A28  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32271  002A2A  0E32               	movlw	50
 32272  002A2C  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32273  002A2E  EC52  F02C         	call	___lwdiv	;wreg free
 32274  002A32  0100               	movlb	0	; () banked
 32275  002A34  EE20 F002          	lfsr	2,2
 32276  002A38  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32277  002A3A  26D9               	addwf	fsr2l,f,c
 32278  002A3C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32279  002A3E  22DA               	addwfc	fsr2h,f,c
 32280  002A40  5183               	movf	?___lwdiv& (0+255),w,b
 32281  002A42  5CDE               	subwf	postinc2,w,c
 32282  002A44  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32283  002A46  58DE               	subwfb	postinc2,w,c
 32284  002A48  A0D8               	btfss	status,0,c
 32285  002A4A  D01E               	goto	l2088
 32286                           
 32287                           ; BSR set to: 0
 32288                           ;led.c: 156: {
 32289                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 32290  002A4C  EE20 F002          	lfsr	2,2
 32291  002A50  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32292  002A52  26D9               	addwf	fsr2l,f,c
 32293  002A54  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32294  002A56  22DA               	addwfc	fsr2h,f,c
 32295  002A58  0E00               	movlw	0
 32296  002A5A  6EDE               	movwf	postinc2,c
 32297  002A5C  0E00               	movlw	0
 32298  002A5E  6EDD               	movwf	postdec2,c
 32299                           
 32300                           ;led.c: 160: LedBlink->LedOutState = OffState;
 32301  002A60  EE20 F001          	lfsr	2,1
 32302  002A64  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32303  002A66  26D9               	addwf	fsr2l,f,c
 32304  002A68  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32305  002A6A  22DA               	addwfc	fsr2h,f,c
 32306  002A6C  0E00               	movlw	0
 32307  002A6E                     L57:
 32308  002A6E  6EDF               	movwf	indf2,c
 32309                           
 32310                           ; BSR set to: 0
 32311                           ;led.c: 167: }
 32312                           
 32313                           ; BSR set to: 0
 32314                           ;led.c: 166: break;
 32315                           
 32316                           ;led.c: 165: default:
 32317                           
 32318                           ; BSR set to: 0
 32319                           ;led.c: 161: }
 32320                           ;led.c: 162: }
 32321                           ;led.c: 163: break;
 32322                           
 32323                           ; BSR set to: 0
 32324                           
 32325                           ; BSR set to: 0
 32326  002A70  D00B               	goto	l2088
 32327  002A72                     l2086:
 32328                           
 32329                           ; BSR set to: 0
 32330  002A72  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32331  002A76  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32332  002A7A  50DF               	movf	indf2,w,c
 32333                           
 32334                           ; Switch size 1, requested type "space"
 32335                           ; Number of cases is 2, Range of values is 0 to 1
 32336                           ; switch strategies available:
 32337                           ; Name         Instructions Cycles
 32338                           ; simple_byte            7     4 (average)
 32339                           ;	Chosen strategy is simple_byte
 32340  002A7C  0A00               	xorlw	0	; case 0
 32341  002A7E  B4D8               	btfsc	status,2,c
 32342  002A80  D769               	goto	l2087
 32343  002A82  0A01               	xorlw	1	; case 1
 32344  002A84  B4D8               	btfsc	status,2,c
 32345  002A86  D77A               	goto	l2089
 32346  002A88                     l2088:
 32347                           
 32348                           ;led.c: 170: return (LedBlink->LedOutState);
 32349  002A88  0100               	movlb	0	; () banked
 32350  002A8A  EE20 F001          	lfsr	2,1
 32351  002A8E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32352  002A90  26D9               	addwf	fsr2l,f,c
 32353  002A92  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32354  002A94  22DA               	addwfc	fsr2h,f,c
 32355  002A96  50DF               	movf	indf2,w,c
 32356  002A98  0012               	return	
 32357  002A9A                     __end_of_LedBlinkStateMachine:
 32358                           	opt stack 0
 32359                           tosu	equ	0xFFF
 32360                           tosh	equ	0xFFE
 32361                           tosl	equ	0xFFD
 32362                           pclath	equ	0xFFA
 32363                           tblptru	equ	0xFF8
 32364                           tblptrh	equ	0xFF7
 32365                           tblptrl	equ	0xFF6
 32366                           tablat	equ	0xFF5
 32367                           prodh	equ	0xFF4
 32368                           prodl	equ	0xFF3
 32369                           intcon	equ	0xFF2
 32370                           intcon2	equ	0xFF1
 32371                           intcon3	equ	0xFF0
 32372                           indf0	equ	0xFEF
 32373                           postinc0	equ	0xFEE
 32374                           plusw0	equ	0xFEB
 32375                           fsr0h	equ	0xFEA
 32376                           fsr0l	equ	0xFE9
 32377                           wreg	equ	0xFE8
 32378                           indf1	equ	0xFE7
 32379                           postinc1	equ	0xFE6
 32380                           postdec1	equ	0xFE5
 32381                           plusw1	equ	0xFE3
 32382                           fsr1h	equ	0xFE2
 32383                           fsr1l	equ	0xFE1
 32384                           indf2	equ	0xFDF
 32385                           postinc2	equ	0xFDE
 32386                           postdec2	equ	0xFDD
 32387                           plusw2	equ	0xFDB
 32388                           fsr2h	equ	0xFDA
 32389                           fsr2l	equ	0xFD9
 32390                           status	equ	0xFD8
 32391                           
 32392 ;; *************** function ___lwdiv *****************
 32393 ;; Defined at:
 32394 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 32395 ;; Parameters:    Size  Location     Type
 32396 ;;  dividend        2   35[BANK0 ] unsigned int 
 32397 ;;  divisor         2   37[BANK0 ] unsigned int 
 32398 ;; Auto vars:     Size  Location     Type
 32399 ;;  quotient        2   40[BANK0 ] unsigned int 
 32400 ;;  counter         1   39[BANK0 ] unsigned char 
 32401 ;; Return value:  Size  Location     Type
 32402 ;;                  2   35[BANK0 ] unsigned int 
 32403 ;; Registers used:
 32404 ;;		wreg, status,2, status,0
 32405 ;; Tracked objects:
 32406 ;;		On entry : 0/0
 32407 ;;		On exit  : 0/0
 32408 ;;		Unchanged: 0/0
 32409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32410 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32411 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32413 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32414 ;;Total ram usage:        7 bytes
 32415 ;; Hardware stack levels used:    1
 32416 ;; Hardware stack levels required when called:   11
 32417 ;; This function calls:
 32418 ;;		Nothing
 32419 ;; This function is called by:
 32420 ;;		_LedBlinkStateMachine
 32421 ;;		_LedPulseStateMachine
 32422 ;;		_secondsAppTimer
 32423 ;;		_utoa
 32424 ;; This function uses a non-reentrant model
 32425 ;;
 32426                           
 32427                           	psect	text149
 32428  0058A4                     __ptext149:
 32429                           	opt stack 0
 32430  0058A4                     ___lwdiv:
 32431                           	opt stack 14
 32432                           
 32433                           ; BSR set to: 0
 32434                           ;incstack = 0
 32435  0058A4  0E00               	movlw	0
 32436  0058A6  0100               	movlb	0	; () banked
 32437  0058A8  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 32438  0058AA  0E00               	movlw	0
 32439  0058AC  6F88               	movwf	___lwdiv@quotient& (0+255),b
 32440                           
 32441                           ; BSR set to: 0
 32442  0058AE  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32443  0058B0  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 32444  0058B2  B4D8               	btfsc	status,2,c
 32445  0058B4  D01C               	goto	l3258
 32446                           
 32447                           ; BSR set to: 0
 32448  0058B6  0E01               	movlw	1
 32449  0058B8  6F87               	movwf	___lwdiv@counter& (0+255),b
 32450  0058BA  D004               	goto	l3253
 32451  0058BC                     
 32452                           ; BSR set to: 0
 32453                           
 32454                           ; BSR set to: 0
 32455  0058BC  90D8               	bcf	status,0,c
 32456  0058BE  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 32457  0058C0  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 32458  0058C2  2B87               	incf	___lwdiv@counter& (0+255),f,b
 32459  0058C4                     l3253:
 32460                           
 32461                           ; BSR set to: 0
 32462                           
 32463                           ; BSR set to: 0
 32464  0058C4  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 32465  0058C6  D7FA               	goto	l3254
 32466  0058C8                     u11700:
 32467                           
 32468                           ; BSR set to: 0
 32469                           
 32470                           ; BSR set to: 0
 32471                           
 32472                           ; BSR set to: 0
 32473  0058C8  90D8               	bcf	status,0,c
 32474  0058CA  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 32475  0058CC  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 32476                           
 32477                           ; BSR set to: 0
 32478  0058CE  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32479  0058D0  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 32480  0058D2  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 32481  0058D4  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 32482  0058D6  A0D8               	btfss	status,0,c
 32483  0058D8  D005               	goto	l3257
 32484                           
 32485                           ; BSR set to: 0
 32486  0058DA  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32487  0058DC  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 32488  0058DE  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 32489  0058E0  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 32490                           
 32491                           ; BSR set to: 0
 32492  0058E2  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 32493  0058E4                     l3257:
 32494                           
 32495                           ; BSR set to: 0
 32496                           
 32497                           ; BSR set to: 0
 32498  0058E4  90D8               	bcf	status,0,c
 32499  0058E6  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 32500  0058E8  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 32501                           
 32502                           ; BSR set to: 0
 32503  0058EA  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 32504  0058EC  D7ED               	goto	u11700
 32505  0058EE                     l3258:
 32506                           
 32507                           ; BSR set to: 0
 32508                           
 32509                           ; BSR set to: 0
 32510  0058EE  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 32511  0058F2  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32512                           
 32513                           ; BSR set to: 0
 32514  0058F6  0012               	return		;funcret
 32515  0058F8                     __end_of___lwdiv:
 32516                           	opt stack 0
 32517                           tosu	equ	0xFFF
 32518                           tosh	equ	0xFFE
 32519                           tosl	equ	0xFFD
 32520                           pclath	equ	0xFFA
 32521                           tblptru	equ	0xFF8
 32522                           tblptrh	equ	0xFF7
 32523                           tblptrl	equ	0xFF6
 32524                           tablat	equ	0xFF5
 32525                           prodh	equ	0xFF4
 32526                           prodl	equ	0xFF3
 32527                           intcon	equ	0xFF2
 32528                           intcon2	equ	0xFF1
 32529                           intcon3	equ	0xFF0
 32530                           indf0	equ	0xFEF
 32531                           postinc0	equ	0xFEE
 32532                           plusw0	equ	0xFEB
 32533                           fsr0h	equ	0xFEA
 32534                           fsr0l	equ	0xFE9
 32535                           wreg	equ	0xFE8
 32536                           indf1	equ	0xFE7
 32537                           postinc1	equ	0xFE6
 32538                           postdec1	equ	0xFE5
 32539                           plusw1	equ	0xFE3
 32540                           fsr1h	equ	0xFE2
 32541                           fsr1l	equ	0xFE1
 32542                           indf2	equ	0xFDF
 32543                           postinc2	equ	0xFDE
 32544                           postdec2	equ	0xFDD
 32545                           plusw2	equ	0xFDB
 32546                           fsr2h	equ	0xFDA
 32547                           fsr2l	equ	0xFD9
 32548                           status	equ	0xFD8
 32549                           
 32550 ;; *************** function _OsAlrm_SetOsAlarm *****************
 32551 ;; Defined at:
 32552 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32553 ;; Parameters:    Size  Location     Type
 32554 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 32555 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 32556 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 32557 ;;		 -> I2cDummyTx(1), 
 32558 ;; Auto vars:     Size  Location     Type
 32559 ;;		None
 32560 ;; Return value:  Size  Location     Type
 32561 ;;                  1    wreg      void 
 32562 ;; Registers used:
 32563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32564 ;; Tracked objects:
 32565 ;;		On entry : 0/0
 32566 ;;		On exit  : 0/0
 32567 ;;		Unchanged: 0/0
 32568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32569 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32572 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32573 ;;Total ram usage:        8 bytes
 32574 ;; Hardware stack levels used:    1
 32575 ;; Hardware stack levels required when called:   12
 32576 ;; This function calls:
 32577 ;;		___wmul
 32578 ;; This function is called by:
 32579 ;;		_I2cSlv_MainTask
 32580 ;; This function uses a non-reentrant model
 32581 ;;
 32582                           
 32583                           	psect	text150
 32584  003F66                     __ptext150:
 32585                           	opt stack 0
 32586  003F66                     _OsAlrm_SetOsAlarm:
 32587                           	opt stack 15
 32588                           
 32589                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 32590                           
 32591                           ; BSR set to: 0
 32592                           ;incstack = 0
 32593  003F66  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32594  003F6A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32595  003F6E  0E00               	movlw	0
 32596  003F70  0100               	movlb	0	; () banked
 32597  003F72  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32598  003F74  0E0B               	movlw	11
 32599  003F76  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32600  003F78  EC83  F031         	call	___wmul	;wreg free
 32601  003F7C  0E00               	movlw	low _OsAlarms
 32602  003F7E  0100               	movlb	0	; () banked
 32603  003F80  257D               	addwf	?___wmul& (0+255),w,b
 32604  003F82  6ED9               	movwf	fsr2l,c
 32605  003F84  0E06               	movlw	high _OsAlarms
 32606  003F86  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32607  003F88  6EDA               	movwf	fsr2h,c
 32608  003F8A  0E01               	movlw	1
 32609  003F8C  6EDF               	movwf	indf2,c
 32610                           
 32611                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 32612  003F8E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32613  003F92  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32614  003F96  0E00               	movlw	0
 32615  003F98  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32616  003F9A  0E0B               	movlw	11
 32617  003F9C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32618  003F9E  EC83  F031         	call	___wmul	;wreg free
 32619  003FA2  0E01               	movlw	1
 32620  003FA4  0100               	movlb	0	; () banked
 32621  003FA6  277D               	addwf	?___wmul& (0+255),f,b
 32622  003FA8  0E00               	movlw	0
 32623  003FAA  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 32624  003FAC  0E00               	movlw	low _OsAlarms
 32625  003FAE  257D               	addwf	?___wmul& (0+255),w,b
 32626  003FB0  6ED9               	movwf	fsr2l,c
 32627  003FB2  0E06               	movlw	high _OsAlarms
 32628  003FB4  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32629  003FB6  6EDA               	movwf	fsr2h,c
 32630  003FB8  6ADE               	clrf	postinc2,c
 32631  003FBA  6ADE               	clrf	postinc2,c
 32632  003FBC  6ADE               	clrf	postinc2,c
 32633  003FBE  6ADD               	clrf	postdec2,c
 32634                           
 32635                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 32636  003FC0  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32637  003FC4  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32638  003FC8  0E00               	movlw	0
 32639  003FCA  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32640  003FCC  0E0B               	movlw	11
 32641  003FCE  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32642  003FD0  EC83  F031         	call	___wmul	;wreg free
 32643  003FD4  0E05               	movlw	5
 32644  003FD6  0100               	movlb	0	; () banked
 32645  003FD8  277D               	addwf	?___wmul& (0+255),f,b
 32646  003FDA  0E00               	movlw	0
 32647  003FDC  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 32648  003FDE  0E00               	movlw	low _OsAlarms
 32649  003FE0  257D               	addwf	?___wmul& (0+255),w,b
 32650  003FE2  6ED9               	movwf	fsr2l,c
 32651  003FE4  0E06               	movlw	high _OsAlarms
 32652  003FE6  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32653  003FE8  6EDA               	movwf	fsr2h,c
 32654  003FEA  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 32655  003FEE  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 32656  003FF2  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 32657  003FF6  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 32658                           
 32659                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 32660  003FFA  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 32661  003FFE  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 32662  004002  0E00               	movlw	0
 32663  004004  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32664  004006  0E0B               	movlw	11
 32665  004008  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 32666  00400A  EC83  F031         	call	___wmul	;wreg free
 32667  00400E  0E09               	movlw	9
 32668  004010  0100               	movlb	0	; () banked
 32669  004012  277D               	addwf	?___wmul& (0+255),f,b
 32670  004014  0E00               	movlw	0
 32671  004016  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 32672  004018  0E00               	movlw	low _OsAlarms
 32673  00401A  257D               	addwf	?___wmul& (0+255),w,b
 32674  00401C  6ED9               	movwf	fsr2l,c
 32675  00401E  0E06               	movlw	high _OsAlarms
 32676  004020  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 32677  004022  6EDA               	movwf	fsr2h,c
 32678  004024  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 32679  004028  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 32680                           
 32681                           ; BSR set to: 0
 32682  00402C  0012               	return		;funcret
 32683  00402E                     __end_of_OsAlrm_SetOsAlarm:
 32684                           	opt stack 0
 32685                           tosu	equ	0xFFF
 32686                           tosh	equ	0xFFE
 32687                           tosl	equ	0xFFD
 32688                           pclath	equ	0xFFA
 32689                           tblptru	equ	0xFF8
 32690                           tblptrh	equ	0xFF7
 32691                           tblptrl	equ	0xFF6
 32692                           tablat	equ	0xFF5
 32693                           prodh	equ	0xFF4
 32694                           prodl	equ	0xFF3
 32695                           intcon	equ	0xFF2
 32696                           intcon2	equ	0xFF1
 32697                           intcon3	equ	0xFF0
 32698                           indf0	equ	0xFEF
 32699                           postinc0	equ	0xFEE
 32700                           plusw0	equ	0xFEB
 32701                           fsr0h	equ	0xFEA
 32702                           fsr0l	equ	0xFE9
 32703                           wreg	equ	0xFE8
 32704                           indf1	equ	0xFE7
 32705                           postinc1	equ	0xFE6
 32706                           postdec1	equ	0xFE5
 32707                           plusw1	equ	0xFE3
 32708                           fsr1h	equ	0xFE2
 32709                           fsr1l	equ	0xFE1
 32710                           indf2	equ	0xFDF
 32711                           postinc2	equ	0xFDE
 32712                           postdec2	equ	0xFDD
 32713                           plusw2	equ	0xFDB
 32714                           fsr2h	equ	0xFDA
 32715                           fsr2l	equ	0xFD9
 32716                           status	equ	0xFD8
 32717                           
 32718 ;; *************** function ___wmul *****************
 32719 ;; Defined at:
 32720 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 32721 ;; Parameters:    Size  Location     Type
 32722 ;;  multiplier      2   29[BANK0 ] unsigned int 
 32723 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 32724 ;; Auto vars:     Size  Location     Type
 32725 ;;  product         2   33[BANK0 ] unsigned int 
 32726 ;; Return value:  Size  Location     Type
 32727 ;;                  2   29[BANK0 ] unsigned int 
 32728 ;; Registers used:
 32729 ;;		wreg, status,2, status,0, prodl, prodh
 32730 ;; Tracked objects:
 32731 ;;		On entry : 0/0
 32732 ;;		On exit  : 0/0
 32733 ;;		Unchanged: 0/0
 32734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32735 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32736 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32738 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32739 ;;Total ram usage:        6 bytes
 32740 ;; Hardware stack levels used:    1
 32741 ;; Hardware stack levels required when called:   11
 32742 ;; This function calls:
 32743 ;;		Nothing
 32744 ;; This function is called by:
 32745 ;;		_OsAlrm_SetOsAlarm
 32746 ;;		_secondsAppTimer
 32747 ;;		_atoi
 32748 ;; This function uses a non-reentrant model
 32749 ;;
 32750                           
 32751                           	psect	text151
 32752  006306                     __ptext151:
 32753                           	opt stack 0
 32754  006306                     ___wmul:
 32755                           	opt stack 13
 32756                           
 32757                           ; BSR set to: 0
 32758                           ;incstack = 0
 32759  006306  0100               	movlb	0	; () banked
 32760  006308  517D               	movf	___wmul@multiplier& (0+255),w,b
 32761  00630A  037F               	mulwf	___wmul@multiplicand& (0+255),b
 32762  00630C  CFF3 F081          	movff	prodl,___wmul@product
 32763  006310  CFF4 F082          	movff	prodh,___wmul@product+1
 32764  006314  517D               	movf	___wmul@multiplier& (0+255),w,b
 32765  006316  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 32766  006318  50F3               	movf	prodl,w,c
 32767  00631A  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 32768  00631C  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 32769  00631E  037F               	mulwf	___wmul@multiplicand& (0+255),b
 32770  006320  50F3               	movf	prodl,w,c
 32771  006322  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 32772                           
 32773                           ; BSR set to: 0
 32774  006324  C081  F07D         	movff	___wmul@product,?___wmul
 32775  006328  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 32776  00632C  0012               	return	
 32777  00632E                     __end_of___wmul:
 32778                           	opt stack 0
 32779                           tosu	equ	0xFFF
 32780                           tosh	equ	0xFFE
 32781                           tosl	equ	0xFFD
 32782                           pclath	equ	0xFFA
 32783                           tblptru	equ	0xFF8
 32784                           tblptrh	equ	0xFF7
 32785                           tblptrl	equ	0xFF6
 32786                           tablat	equ	0xFF5
 32787                           prodh	equ	0xFF4
 32788                           prodl	equ	0xFF3
 32789                           intcon	equ	0xFF2
 32790                           intcon2	equ	0xFF1
 32791                           intcon3	equ	0xFF0
 32792                           indf0	equ	0xFEF
 32793                           postinc0	equ	0xFEE
 32794                           plusw0	equ	0xFEB
 32795                           fsr0h	equ	0xFEA
 32796                           fsr0l	equ	0xFE9
 32797                           wreg	equ	0xFE8
 32798                           indf1	equ	0xFE7
 32799                           postinc1	equ	0xFE6
 32800                           postdec1	equ	0xFE5
 32801                           plusw1	equ	0xFE3
 32802                           fsr1h	equ	0xFE2
 32803                           fsr1l	equ	0xFE1
 32804                           indf2	equ	0xFDF
 32805                           postinc2	equ	0xFDE
 32806                           postdec2	equ	0xFDD
 32807                           plusw2	equ	0xFDB
 32808                           fsr2h	equ	0xFDA
 32809                           fsr2l	equ	0xFD9
 32810                           status	equ	0xFD8
 32811                           
 32812 ;; *************** function _I2c_InitI2cModule *****************
 32813 ;; Defined at:
 32814 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32815 ;; Parameters:    Size  Location     Type
 32816 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 32817 ;;		 -> I2cConfig(10), 
 32818 ;; Auto vars:     Size  Location     Type
 32819 ;;		None
 32820 ;; Return value:  Size  Location     Type
 32821 ;;                  1    wreg      void 
 32822 ;; Registers used:
 32823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32824 ;; Tracked objects:
 32825 ;;		On entry : 0/0
 32826 ;;		On exit  : 0/0
 32827 ;;		Unchanged: 0/0
 32828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32829 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32831 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32832 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32833 ;;Total ram usage:        4 bytes
 32834 ;; Hardware stack levels used:    1
 32835 ;; Hardware stack levels required when called:   13
 32836 ;; This function calls:
 32837 ;;		_SetBaudRate
 32838 ;; This function is called by:
 32839 ;;		_I2cSlv_MainTask
 32840 ;; This function uses a non-reentrant model
 32841 ;;
 32842                           
 32843                           	psect	text152
 32844  005196                     __ptext152:
 32845                           	opt stack 0
 32846  005196                     _I2c_InitI2cModule:
 32847                           	opt stack 14
 32848                           
 32849                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 32850                           
 32851                           ; BSR set to: 0
 32852                           ;incstack = 0
 32853  005196  8295               	bsf	3989,1,c	;volatile
 32854                           
 32855                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 32856  005198  8095               	bsf	3989,0,c	;volatile
 32857                           
 32858                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 32859  00519A  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 32860  00519E  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 32861  0051A2  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 32862  0051A6  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 32863  0051AA  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 32864  0051AE  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 32865  0051B2  0100               	movlb	0	; () banked
 32866  0051B4  EE20 F004          	lfsr	2,4
 32867  0051B8  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 32868  0051BA  26D9               	addwf	fsr2l,f,c
 32869  0051BC  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 32870  0051BE  22DA               	addwfc	fsr2h,f,c
 32871  0051C0  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 32872  0051C4  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 32873  0051C8  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 32874  0051CC  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 32875  0051D0  EC94  F02D         	call	_SetBaudRate	;wreg free
 32876                           
 32877                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 32878  0051D4  0100               	movlb	0	; () banked
 32879  0051D6  EE20 F008          	lfsr	2,8
 32880  0051DA  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 32881  0051DC  26D9               	addwf	fsr2l,f,c
 32882  0051DE  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 32883  0051E0  22DA               	addwfc	fsr2h,f,c
 32884  0051E2  50DF               	movf	indf2,w,c
 32885  0051E4  1272               	iorwf	3954,f,c	;volatile
 32886                           
 32887                           ; BSR set to: 0
 32888                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 32889  0051E6  EE20 F009          	lfsr	2,9
 32890  0051EA  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 32891  0051EC  26D9               	addwf	fsr2l,f,c
 32892  0051EE  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 32893  0051F0  22DA               	addwfc	fsr2h,f,c
 32894  0051F2  50DF               	movf	indf2,w,c
 32895  0051F4  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 32896  0051F6  0E05               	movlw	5
 32897  0051F8  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 32898  0051FA                     u14055:
 32899  0051FA  90D8               	bcf	status,0,c
 32900  0051FC  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 32901  0051FE  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 32902  005200  D7FC               	goto	u14055
 32903  005202  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 32904  005204  1272               	iorwf	3954,f,c	;volatile
 32905                           
 32906                           ; BSR set to: 0
 32907  005206  0012               	return		;funcret
 32908  005208                     __end_of_I2c_InitI2cModule:
 32909                           	opt stack 0
 32910                           tosu	equ	0xFFF
 32911                           tosh	equ	0xFFE
 32912                           tosl	equ	0xFFD
 32913                           pclath	equ	0xFFA
 32914                           tblptru	equ	0xFF8
 32915                           tblptrh	equ	0xFF7
 32916                           tblptrl	equ	0xFF6
 32917                           tablat	equ	0xFF5
 32918                           prodh	equ	0xFF4
 32919                           prodl	equ	0xFF3
 32920                           intcon	equ	0xFF2
 32921                           intcon2	equ	0xFF1
 32922                           intcon3	equ	0xFF0
 32923                           indf0	equ	0xFEF
 32924                           postinc0	equ	0xFEE
 32925                           plusw0	equ	0xFEB
 32926                           fsr0h	equ	0xFEA
 32927                           fsr0l	equ	0xFE9
 32928                           wreg	equ	0xFE8
 32929                           indf1	equ	0xFE7
 32930                           postinc1	equ	0xFE6
 32931                           postdec1	equ	0xFE5
 32932                           plusw1	equ	0xFE3
 32933                           fsr1h	equ	0xFE2
 32934                           fsr1l	equ	0xFE1
 32935                           indf2	equ	0xFDF
 32936                           postinc2	equ	0xFDE
 32937                           postdec2	equ	0xFDD
 32938                           plusw2	equ	0xFDB
 32939                           fsr2h	equ	0xFDA
 32940                           fsr2l	equ	0xFD9
 32941                           status	equ	0xFD8
 32942                           
 32943 ;; *************** function _SetBaudRate *****************
 32944 ;; Defined at:
 32945 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32946 ;; Parameters:    Size  Location     Type
 32947 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 32948 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 32949 ;; Auto vars:     Size  Location     Type
 32950 ;;		None
 32951 ;; Return value:  Size  Location     Type
 32952 ;;                  1    wreg      void 
 32953 ;; Registers used:
 32954 ;;		wreg, status,2, status,0, cstack
 32955 ;; Tracked objects:
 32956 ;;		On entry : 0/0
 32957 ;;		On exit  : 0/0
 32958 ;;		Unchanged: 0/0
 32959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32960 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32962 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32963 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32964 ;;Total ram usage:       12 bytes
 32965 ;; Hardware stack levels used:    1
 32966 ;; Hardware stack levels required when called:   12
 32967 ;; This function calls:
 32968 ;;		___lldiv
 32969 ;; This function is called by:
 32970 ;;		_I2c_InitI2cModule
 32971 ;; This function uses a non-reentrant model
 32972 ;;
 32973                           
 32974                           	psect	text153
 32975  005B28                     __ptext153:
 32976                           	opt stack 0
 32977  005B28                     _SetBaudRate:
 32978                           	opt stack 14
 32979                           
 32980                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 32981                           
 32982                           ; BSR set to: 0
 32983                           ;incstack = 0
 32984  005B28  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 32985  005B2C  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 32986  005B30  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 32987  005B34  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 32988  005B38  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 32989  005B3C  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 32990  005B40  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 32991  005B44  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 32992  005B48  0E02               	movlw	2
 32993  005B4A                     u12965:
 32994  005B4A  90D8               	bcf	status,0,c
 32995  005B4C  0100               	movlb	0	; () banked
 32996  005B4E  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 32997  005B50  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 32998  005B52  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 32999  005B54  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 33000  005B56  2EE8               	decfsz	wreg,f,c
 33001  005B58  D7F8               	goto	u12965
 33002  005B5A  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 33003  005B5E  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 33004  005B62  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 33005  005B66  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 33006  005B6A  ECD5  F027         	call	___lldiv	;wreg free
 33007  005B6E  0100               	movlb	0	; () banked
 33008  005B70  0589               	decf	?___lldiv& (0+255),w,b
 33009  005B72  6E74               	movwf	3956,c	;volatile
 33010                           
 33011                           ; BSR set to: 0
 33012  005B74  0012               	return		;funcret
 33013  005B76                     __end_of_SetBaudRate:
 33014                           	opt stack 0
 33015                           tosu	equ	0xFFF
 33016                           tosh	equ	0xFFE
 33017                           tosl	equ	0xFFD
 33018                           pclath	equ	0xFFA
 33019                           tblptru	equ	0xFF8
 33020                           tblptrh	equ	0xFF7
 33021                           tblptrl	equ	0xFF6
 33022                           tablat	equ	0xFF5
 33023                           prodh	equ	0xFF4
 33024                           prodl	equ	0xFF3
 33025                           intcon	equ	0xFF2
 33026                           intcon2	equ	0xFF1
 33027                           intcon3	equ	0xFF0
 33028                           indf0	equ	0xFEF
 33029                           postinc0	equ	0xFEE
 33030                           plusw0	equ	0xFEB
 33031                           fsr0h	equ	0xFEA
 33032                           fsr0l	equ	0xFE9
 33033                           wreg	equ	0xFE8
 33034                           indf1	equ	0xFE7
 33035                           postinc1	equ	0xFE6
 33036                           postdec1	equ	0xFE5
 33037                           plusw1	equ	0xFE3
 33038                           fsr1h	equ	0xFE2
 33039                           fsr1l	equ	0xFE1
 33040                           indf2	equ	0xFDF
 33041                           postinc2	equ	0xFDE
 33042                           postdec2	equ	0xFDD
 33043                           plusw2	equ	0xFDB
 33044                           fsr2h	equ	0xFDA
 33045                           fsr2l	equ	0xFD9
 33046                           status	equ	0xFD8
 33047                           
 33048 ;; *************** function ___lldiv *****************
 33049 ;; Defined at:
 33050 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 33051 ;; Parameters:    Size  Location     Type
 33052 ;;  dividend        4   41[BANK0 ] unsigned long 
 33053 ;;  divisor         4   45[BANK0 ] unsigned long 
 33054 ;; Auto vars:     Size  Location     Type
 33055 ;;  quotient        4   49[BANK0 ] unsigned long 
 33056 ;;  counter         1   53[BANK0 ] unsigned char 
 33057 ;; Return value:  Size  Location     Type
 33058 ;;                  4   41[BANK0 ] unsigned long 
 33059 ;; Registers used:
 33060 ;;		wreg, status,2, status,0
 33061 ;; Tracked objects:
 33062 ;;		On entry : 0/0
 33063 ;;		On exit  : 0/0
 33064 ;;		Unchanged: 0/0
 33065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33066 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33067 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33069 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33070 ;;Total ram usage:       13 bytes
 33071 ;; Hardware stack levels used:    1
 33072 ;; Hardware stack levels required when called:   11
 33073 ;; This function calls:
 33074 ;;		Nothing
 33075 ;; This function is called by:
 33076 ;;		_SetBaudRate
 33077 ;;		_Tmr_TmrBPrSet
 33078 ;;		_SetUartBaudRate
 33079 ;; This function uses a non-reentrant model
 33080 ;;
 33081                           
 33082                           	psect	text154
 33083  004FAA                     __ptext154:
 33084                           	opt stack 0
 33085  004FAA                     ___lldiv:
 33086                           	opt stack 15
 33087                           
 33088                           ; BSR set to: 0
 33089                           ;incstack = 0
 33090  004FAA  0E00               	movlw	0
 33091  004FAC  0100               	movlb	0	; () banked
 33092  004FAE  6F91               	movwf	___lldiv@quotient& (0+255),b
 33093  004FB0  0E00               	movlw	0
 33094  004FB2  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 33095  004FB4  0E00               	movlw	0
 33096  004FB6  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 33097  004FB8  0E00               	movlw	0
 33098  004FBA  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 33099                           
 33100                           ; BSR set to: 0
 33101  004FBC  518D               	movf	___lldiv@divisor& (0+255),w,b
 33102  004FBE  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 33103  004FC0  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 33104  004FC2  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 33105  004FC4  B4D8               	btfsc	status,2,c
 33106  004FC6  D02A               	goto	l3205
 33107                           
 33108                           ; BSR set to: 0
 33109  004FC8  0E01               	movlw	1
 33110  004FCA  6F95               	movwf	___lldiv@counter& (0+255),b
 33111  004FCC  D006               	goto	l3200
 33112  004FCE                     
 33113                           ; BSR set to: 0
 33114                           
 33115                           ; BSR set to: 0
 33116  004FCE  90D8               	bcf	status,0,c
 33117  004FD0  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 33118  004FD2  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 33119  004FD4  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 33120  004FD6  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 33121  004FD8  2B95               	incf	___lldiv@counter& (0+255),f,b
 33122  004FDA                     l3200:
 33123                           
 33124                           ; BSR set to: 0
 33125                           
 33126                           ; BSR set to: 0
 33127  004FDA  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 33128  004FDC  D7F8               	goto	l3201
 33129  004FDE                     u12030:
 33130                           
 33131                           ; BSR set to: 0
 33132                           
 33133                           ; BSR set to: 0
 33134                           
 33135                           ; BSR set to: 0
 33136  004FDE  90D8               	bcf	status,0,c
 33137  004FE0  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 33138  004FE2  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 33139  004FE4  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 33140  004FE6  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 33141                           
 33142                           ; BSR set to: 0
 33143  004FE8  518D               	movf	___lldiv@divisor& (0+255),w,b
 33144  004FEA  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 33145  004FEC  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33146  004FEE  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 33147  004FF0  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33148  004FF2  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 33149  004FF4  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33150  004FF6  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 33151  004FF8  A0D8               	btfss	status,0,c
 33152  004FFA  D009               	goto	l3204
 33153                           
 33154                           ; BSR set to: 0
 33155  004FFC  518D               	movf	___lldiv@divisor& (0+255),w,b
 33156  004FFE  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 33157  005000  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33158  005002  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 33159  005004  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33160  005006  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 33161  005008  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33162  00500A  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 33163                           
 33164                           ; BSR set to: 0
 33165  00500C  8191               	bsf	___lldiv@quotient& (0+255),0,b
 33166  00500E                     l3204:
 33167                           
 33168                           ; BSR set to: 0
 33169                           
 33170                           ; BSR set to: 0
 33171  00500E  90D8               	bcf	status,0,c
 33172  005010  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 33173  005012  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 33174  005014  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 33175  005016  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 33176                           
 33177                           ; BSR set to: 0
 33178  005018  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 33179  00501A  D7E1               	goto	u12030
 33180  00501C                     l3205:
 33181                           
 33182                           ; BSR set to: 0
 33183                           
 33184                           ; BSR set to: 0
 33185  00501C  C091  F089         	movff	___lldiv@quotient,?___lldiv
 33186  005020  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 33187  005024  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 33188  005028  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 33189                           
 33190                           ; BSR set to: 0
 33191  00502C  0012               	return		;funcret
 33192  00502E                     __end_of___lldiv:
 33193                           	opt stack 0
 33194                           tosu	equ	0xFFF
 33195                           tosh	equ	0xFFE
 33196                           tosl	equ	0xFFD
 33197                           pclath	equ	0xFFA
 33198                           tblptru	equ	0xFF8
 33199                           tblptrh	equ	0xFF7
 33200                           tblptrl	equ	0xFF6
 33201                           tablat	equ	0xFF5
 33202                           prodh	equ	0xFF4
 33203                           prodl	equ	0xFF3
 33204                           intcon	equ	0xFF2
 33205                           intcon2	equ	0xFF1
 33206                           intcon3	equ	0xFF0
 33207                           indf0	equ	0xFEF
 33208                           postinc0	equ	0xFEE
 33209                           plusw0	equ	0xFEB
 33210                           fsr0h	equ	0xFEA
 33211                           fsr0l	equ	0xFE9
 33212                           wreg	equ	0xFE8
 33213                           indf1	equ	0xFE7
 33214                           postinc1	equ	0xFE6
 33215                           postdec1	equ	0xFE5
 33216                           plusw1	equ	0xFE3
 33217                           fsr1h	equ	0xFE2
 33218                           fsr1l	equ	0xFE1
 33219                           indf2	equ	0xFDF
 33220                           postinc2	equ	0xFDE
 33221                           postdec2	equ	0xFDD
 33222                           plusw2	equ	0xFDB
 33223                           fsr2h	equ	0xFDA
 33224                           fsr2l	equ	0xFD9
 33225                           status	equ	0xFD8
 33226                           
 33227 ;; *************** function _I2cSetConfig *****************
 33228 ;; Defined at:
 33229 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33230 ;; Parameters:    Size  Location     Type
 33231 ;;		None
 33232 ;; Auto vars:     Size  Location     Type
 33233 ;;		None
 33234 ;; Return value:  Size  Location     Type
 33235 ;;                  1    wreg      void 
 33236 ;; Registers used:
 33237 ;;		wreg, status,2
 33238 ;; Tracked objects:
 33239 ;;		On entry : 0/0
 33240 ;;		On exit  : 0/0
 33241 ;;		Unchanged: 0/0
 33242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33247 ;;Total ram usage:        0 bytes
 33248 ;; Hardware stack levels used:    1
 33249 ;; Hardware stack levels required when called:   11
 33250 ;; This function calls:
 33251 ;;		Nothing
 33252 ;; This function is called by:
 33253 ;;		_I2cSlv_MainTask
 33254 ;; This function uses a non-reentrant model
 33255 ;;
 33256                           
 33257                           	psect	text155
 33258  006286                     __ptext155:
 33259                           	opt stack 0
 33260  006286                     _I2cSetConfig:
 33261                           	opt stack 16
 33262                           
 33263                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 33264                           
 33265                           ; BSR set to: 0
 33266                           ;incstack = 0
 33267  006286  0E80               	movlw	128
 33268  006288  0103               	movlb	3	; () banked
 33269  00628A  6F48               	movwf	_I2cConfig& (0+255),b
 33270  00628C  0E1A               	movlw	26
 33271  00628E  6F49               	movwf	(_I2cConfig+1)& (0+255),b
 33272  006290  0E06               	movlw	6
 33273  006292  6F4A               	movwf	(_I2cConfig+2)& (0+255),b
 33274  006294  0E00               	movlw	0
 33275  006296  6F4B               	movwf	(_I2cConfig+3)& (0+255),b
 33276                           
 33277                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 33278  006298  0E00               	movlw	0
 33279  00629A  6F4C               	movwf	(_I2cConfig+4)& (0+255),b
 33280  00629C  0E6C               	movlw	108
 33281  00629E  6F4D               	movwf	(_I2cConfig+5)& (0+255),b
 33282  0062A0  0EDC               	movlw	220
 33283  0062A2  6F4E               	movwf	(_I2cConfig+6)& (0+255),b
 33284  0062A4  0E02               	movlw	2
 33285  0062A6  6F4F               	movwf	(_I2cConfig+7)& (0+255),b
 33286                           
 33287                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 33288  0062A8  0E08               	movlw	8
 33289  0062AA  6F50               	movwf	(_I2cConfig+8)& (0+255),b
 33290                           
 33291                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 33292  0062AC  0E01               	movlw	1
 33293  0062AE  6F51               	movwf	(_I2cConfig+9)& (0+255),b
 33294                           
 33295                           ; BSR set to: 3
 33296  0062B0  0012               	return		;funcret
 33297  0062B2                     __end_of_I2cSetConfig:
 33298                           	opt stack 0
 33299                           tosu	equ	0xFFF
 33300                           tosh	equ	0xFFE
 33301                           tosl	equ	0xFFD
 33302                           pclath	equ	0xFFA
 33303                           tblptru	equ	0xFF8
 33304                           tblptrh	equ	0xFF7
 33305                           tblptrl	equ	0xFF6
 33306                           tablat	equ	0xFF5
 33307                           prodh	equ	0xFF4
 33308                           prodl	equ	0xFF3
 33309                           intcon	equ	0xFF2
 33310                           intcon2	equ	0xFF1
 33311                           intcon3	equ	0xFF0
 33312                           indf0	equ	0xFEF
 33313                           postinc0	equ	0xFEE
 33314                           plusw0	equ	0xFEB
 33315                           fsr0h	equ	0xFEA
 33316                           fsr0l	equ	0xFE9
 33317                           wreg	equ	0xFE8
 33318                           indf1	equ	0xFE7
 33319                           postinc1	equ	0xFE6
 33320                           postdec1	equ	0xFE5
 33321                           plusw1	equ	0xFE3
 33322                           fsr1h	equ	0xFE2
 33323                           fsr1l	equ	0xFE1
 33324                           indf2	equ	0xFDF
 33325                           postinc2	equ	0xFDE
 33326                           postdec2	equ	0xFDD
 33327                           plusw2	equ	0xFDB
 33328                           fsr2h	equ	0xFDA
 33329                           fsr2l	equ	0xFD9
 33330                           status	equ	0xFD8
 33331                           
 33332 ;; *************** function _I2cSendMsgSm *****************
 33333 ;; Defined at:
 33334 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33335 ;; Parameters:    Size  Location     Type
 33336 ;;		None
 33337 ;; Auto vars:     Size  Location     Type
 33338 ;;		None
 33339 ;; Return value:  Size  Location     Type
 33340 ;;                  1    wreg      void 
 33341 ;; Registers used:
 33342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33343 ;; Tracked objects:
 33344 ;;		On entry : 0/0
 33345 ;;		On exit  : 0/0
 33346 ;;		Unchanged: 0/0
 33347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33352 ;;Total ram usage:        0 bytes
 33353 ;; Hardware stack levels used:    1
 33354 ;; Hardware stack levels required when called:   13
 33355 ;; This function calls:
 33356 ;;		_I2c_ReadData
 33357 ;;		_I2c_WriteData
 33358 ;;		_ReceiveEvt
 33359 ;; This function is called by:
 33360 ;;		_I2cSlv_MainTask
 33361 ;; This function uses a non-reentrant model
 33362 ;;
 33363                           
 33364                           	psect	text156
 33365  00402E                     __ptext156:
 33366                           	opt stack 0
 33367  00402E                     _I2cSendMsgSm:
 33368                           	opt stack 14
 33369                           
 33370                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 33371                           ;i2c_slv.c: 122: switch(I2cComState)
 33372                           
 33373                           ; BSR set to: 3
 33374                           ;incstack = 0
 33375  00402E  D04F               	goto	l1379
 33376  004030                     
 33377                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 33378  004030  0ED8               	movlw	low _I2cWriteDataEvt
 33379  004032  0100               	movlb	0	; () banked
 33380  004034  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33381  004036  0E00               	movlw	high _I2cWriteDataEvt
 33382  004038  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33383  00403A  EC2C  F031         	call	_ReceiveEvt	;wreg free
 33384  00403E  0900               	iorlw	0
 33385  004040  B4D8               	btfsc	status,2,c
 33386  004042  D007               	goto	l1381
 33387                           
 33388                           ;i2c_slv.c: 127: {
 33389                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 33390  004044  0E01               	movlw	1
 33391  004046  0101               	movlb	1	; () banked
 33392  004048  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33393                           
 33394                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 33395  00404A  0E01               	movlw	1
 33396  00404C  0100               	movlb	0	; () banked
 33397  00404E  6FCE               	movwf	_I2cComSts& (0+255),b
 33398                           
 33399                           ;i2c_slv.c: 132: }
 33400  004050  0012               	return	
 33401  004052                     l1381:
 33402                           
 33403                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 33404                           
 33405                           ; BSR set to: 0
 33406  004052  0ED7               	movlw	low _I2cReadDataEvt
 33407  004054  0100               	movlb	0	; () banked
 33408  004056  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33409  004058  0E00               	movlw	high _I2cReadDataEvt
 33410  00405A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33411  00405C  EC2C  F031         	call	_ReceiveEvt	;wreg free
 33412  004060  0900               	iorlw	0
 33413  004062  B4D8               	btfsc	status,2,c
 33414  004064  D007               	goto	l1383
 33415                           
 33416                           ;i2c_slv.c: 134: {
 33417                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 33418  004066  0E02               	movlw	2
 33419  004068  0101               	movlb	1	; () banked
 33420  00406A  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33421                           
 33422                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 33423  00406C  0E02               	movlw	2
 33424  00406E  0100               	movlb	0	; () banked
 33425  004070  6FCE               	movwf	_I2cComSts& (0+255),b
 33426                           
 33427                           ;i2c_slv.c: 139: }
 33428  004072  0012               	return	
 33429  004074                     l1383:
 33430                           
 33431                           ;i2c_slv.c: 140: else
 33432                           ;i2c_slv.c: 141: {
 33433                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 33434                           
 33435                           ; BSR set to: 0
 33436  004074  0E00               	movlw	0
 33437  004076  0100               	movlb	0	; () banked
 33438  004078  6FCE               	movwf	_I2cComSts& (0+255),b
 33439                           
 33440                           ; BSR set to: 0
 33441                           ;i2c_slv.c: 144: }
 33442                           ;i2c_slv.c: 145: break;
 33443                           
 33444                           ; BSR set to: 0
 33445  00407A  0012               	return	
 33446  00407C                     
 33447                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 33448                           
 33449                           ; BSR set to: 0
 33450  00407C  0E99               	movlw	low _I2cTxPacket
 33451  00407E  0100               	movlb	0	; () banked
 33452  004080  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 33453  004082  0E03               	movlw	high _I2cTxPacket
 33454  004084  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 33455  004086  EC9C  F010         	call	_I2c_WriteData	;wreg free
 33456  00408A  0900               	iorlw	0
 33457  00408C  B4D8               	btfsc	status,2,c
 33458  00408E  0012               	return	
 33459                           
 33460                           ;i2c_slv.c: 150: {
 33461                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 33462  004090  0E03               	movlw	3
 33463  004092  0101               	movlb	1	; () banked
 33464  004094  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33465                           
 33466                           ; BSR set to: 1
 33467                           ;i2c_slv.c: 153: }
 33468                           ;i2c_slv.c: 154: break;
 33469  004096  0012               	return	
 33470  004098                     
 33471                           ; BSR set to: 1
 33472                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 33473                           
 33474                           ; BSR set to: 1
 33475  004098  0E8E               	movlw	low _I2cRxPacket
 33476  00409A  0100               	movlb	0	; () banked
 33477  00409C  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 33478  00409E  0E03               	movlw	high _I2cRxPacket
 33479  0040A0  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 33480  0040A2  EC53  F011         	call	_I2c_ReadData	;wreg free
 33481  0040A6  0900               	iorlw	0
 33482  0040A8  B4D8               	btfsc	status,2,c
 33483  0040AA  0012               	return	
 33484                           
 33485                           ;i2c_slv.c: 159: {
 33486                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 33487  0040AC  0E04               	movlw	4
 33488  0040AE  0101               	movlb	1	; () banked
 33489  0040B0  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33490                           
 33491                           ; BSR set to: 1
 33492                           ;i2c_slv.c: 162: }
 33493                           ;i2c_slv.c: 164: break;
 33494  0040B2  0012               	return	
 33495  0040B4                     
 33496                           ; BSR set to: 1
 33497                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 33498                           
 33499                           ; BSR set to: 1
 33500  0040B4  0E00               	movlw	0
 33501  0040B6  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33502                           
 33503                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 33504  0040B8  0E00               	movlw	0
 33505  0040BA  0100               	movlb	0	; () banked
 33506  0040BC  6FCE               	movwf	_I2cComSts& (0+255),b
 33507                           
 33508                           ;i2c_slv.c: 171: break;
 33509  0040BE  0012               	return	
 33510  0040C0                     
 33511                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 33512                           
 33513                           ; BSR set to: 0
 33514  0040C0  0E00               	movlw	0
 33515  0040C2  0101               	movlb	1	; () banked
 33516  0040C4  6FE7               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33517                           
 33518                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 33519  0040C6  0E00               	movlw	0
 33520  0040C8  0100               	movlb	0	; () banked
 33521  0040CA  6FCE               	movwf	_I2cComSts& (0+255),b
 33522                           
 33523                           ; BSR set to: 0
 33524                           ;i2c_slv.c: 182: }
 33525                           
 33526                           ; BSR set to: 0
 33527                           ;i2c_slv.c: 181: break;
 33528                           
 33529                           ;i2c_slv.c: 180: default:
 33530                           
 33531                           ;i2c_slv.c: 178: break;
 33532  0040CC  0012               	return	
 33533  0040CE                     l1379:
 33534                           
 33535                           ; BSR set to: 0
 33536  0040CE  0101               	movlb	1	; () banked
 33537  0040D0  51E7               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 33538                           
 33539                           ; Switch size 1, requested type "space"
 33540                           ; Number of cases is 5, Range of values is 0 to 4
 33541                           ; switch strategies available:
 33542                           ; Name         Instructions Cycles
 33543                           ; simple_byte           16     9 (average)
 33544                           ;	Chosen strategy is simple_byte
 33545  0040D2  0A00               	xorlw	0	; case 0
 33546  0040D4  B4D8               	btfsc	status,2,c
 33547  0040D6  D7AC               	goto	l1380
 33548  0040D8  0A01               	xorlw	1	; case 1
 33549  0040DA  B4D8               	btfsc	status,2,c
 33550  0040DC  D7CF               	goto	l1386
 33551  0040DE  0A03               	xorlw	3	; case 2
 33552  0040E0  B4D8               	btfsc	status,2,c
 33553  0040E2  D7DA               	goto	l1388
 33554  0040E4  0A01               	xorlw	1	; case 3
 33555  0040E6  B4D8               	btfsc	status,2,c
 33556  0040E8  D7E5               	goto	l1390
 33557  0040EA  0A07               	xorlw	7	; case 4
 33558  0040EC  A4D8               	btfss	status,2,c
 33559  0040EE  0012               	return	
 33560  0040F0  D7E7               	goto	l1391
 33561  0040F2                     __end_of_I2cSendMsgSm:
 33562                           	opt stack 0
 33563                           tosu	equ	0xFFF
 33564                           tosh	equ	0xFFE
 33565                           tosl	equ	0xFFD
 33566                           pclath	equ	0xFFA
 33567                           tblptru	equ	0xFF8
 33568                           tblptrh	equ	0xFF7
 33569                           tblptrl	equ	0xFF6
 33570                           tablat	equ	0xFF5
 33571                           prodh	equ	0xFF4
 33572                           prodl	equ	0xFF3
 33573                           intcon	equ	0xFF2
 33574                           intcon2	equ	0xFF1
 33575                           intcon3	equ	0xFF0
 33576                           indf0	equ	0xFEF
 33577                           postinc0	equ	0xFEE
 33578                           plusw0	equ	0xFEB
 33579                           fsr0h	equ	0xFEA
 33580                           fsr0l	equ	0xFE9
 33581                           wreg	equ	0xFE8
 33582                           indf1	equ	0xFE7
 33583                           postinc1	equ	0xFE6
 33584                           postdec1	equ	0xFE5
 33585                           plusw1	equ	0xFE3
 33586                           fsr1h	equ	0xFE2
 33587                           fsr1l	equ	0xFE1
 33588                           indf2	equ	0xFDF
 33589                           postinc2	equ	0xFDE
 33590                           postdec2	equ	0xFDD
 33591                           plusw2	equ	0xFDB
 33592                           fsr2h	equ	0xFDA
 33593                           fsr2l	equ	0xFD9
 33594                           status	equ	0xFD8
 33595                           
 33596 ;; *************** function _ReceiveEvt *****************
 33597 ;; Defined at:
 33598 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33599 ;; Parameters:    Size  Location     Type
 33600 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 33601 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 33602 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 33603 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 33604 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 33605 ;;		 -> ActivateRiDetection(1), 
 33606 ;; Auto vars:     Size  Location     Type
 33607 ;;  EventStatus     1   32[BANK0 ] enum E7727
 33608 ;; Return value:  Size  Location     Type
 33609 ;;                  1    wreg      enum E7699
 33610 ;; Registers used:
 33611 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33612 ;; Tracked objects:
 33613 ;;		On entry : 0/0
 33614 ;;		On exit  : 0/0
 33615 ;;		Unchanged: 0/0
 33616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33617 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33618 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33619 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33620 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33621 ;;Total ram usage:        4 bytes
 33622 ;; Hardware stack levels used:    1
 33623 ;; Hardware stack levels required when called:   11
 33624 ;; This function calls:
 33625 ;;		Nothing
 33626 ;; This function is called by:
 33627 ;;		_MdmCntSm
 33628 ;;		_CheckModem
 33629 ;;		_ModemEvtParser
 33630 ;;		_GetSmsSm
 33631 ;;		_SendSmsSm
 33632 ;;		_Mdm_GetSmsData
 33633 ;;		_Mdm_IsSmsReceived
 33634 ;;		_Mdm_IsRinging
 33635 ;;		_GetCallerNumber
 33636 ;;		_InitGprsNetwork
 33637 ;;		_HttpGetMethod
 33638 ;;		_I2cSendMsgSm
 33639 ;;		_I2cSlv_I2cReadMsgSts
 33640 ;;		_RiSm
 33641 ;;		_GsmGprsTerminal
 33642 ;; This function uses a non-reentrant model
 33643 ;;
 33644                           
 33645                           	psect	text157
 33646  006258                     __ptext157:
 33647                           	opt stack 0
 33648  006258                     _ReceiveEvt:
 33649                           	opt stack 13
 33650                           
 33651                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 33652                           
 33653                           ;incstack = 0
 33654  006258  0E00               	movlw	0
 33655  00625A  0100               	movlb	0	; () banked
 33656  00625C  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 33657                           
 33658                           ; BSR set to: 0
 33659                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 33660  00625E  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 33661  006262  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 33662  006266  0E02               	movlw	2
 33663  006268  18DE               	xorwf	postinc2,w,c
 33664  00626A  A4D8               	btfss	status,2,c
 33665  00626C  D008               	goto	l832
 33666                           
 33667                           ; BSR set to: 0
 33668                           ;os_ser.c: 106: {
 33669                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 33670  00626E  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 33671  006272  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 33672  006276  0E01               	movlw	1
 33673  006278  6EDF               	movwf	indf2,c
 33674                           
 33675                           ; BSR set to: 0
 33676                           ;os_ser.c: 110: EventStatus = EventReceived;
 33677  00627A  0E01               	movlw	1
 33678  00627C  D001               	goto	L58
 33679  00627E                     l832:
 33680                           
 33681                           ; BSR set to: 0
 33682                           ;os_ser.c: 112: else
 33683                           ;os_ser.c: 113: {
 33684                           ;os_ser.c: 115: EventStatus = EventIdle;
 33685                           
 33686                           ; BSR set to: 0
 33687  00627E  0E00               	movlw	0
 33688  006280                     L58:
 33689  006280  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 33690                           
 33691                           ; BSR set to: 0
 33692                           ;os_ser.c: 116: }
 33693                           ;os_ser.c: 119: return(EventStatus);
 33694  006282  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 33695  006284  0012               	return	
 33696  006286                     __end_of_ReceiveEvt:
 33697                           	opt stack 0
 33698                           tosu	equ	0xFFF
 33699                           tosh	equ	0xFFE
 33700                           tosl	equ	0xFFD
 33701                           pclath	equ	0xFFA
 33702                           tblptru	equ	0xFF8
 33703                           tblptrh	equ	0xFF7
 33704                           tblptrl	equ	0xFF6
 33705                           tablat	equ	0xFF5
 33706                           prodh	equ	0xFF4
 33707                           prodl	equ	0xFF3
 33708                           intcon	equ	0xFF2
 33709                           intcon2	equ	0xFF1
 33710                           intcon3	equ	0xFF0
 33711                           indf0	equ	0xFEF
 33712                           postinc0	equ	0xFEE
 33713                           plusw0	equ	0xFEB
 33714                           fsr0h	equ	0xFEA
 33715                           fsr0l	equ	0xFE9
 33716                           wreg	equ	0xFE8
 33717                           indf1	equ	0xFE7
 33718                           postinc1	equ	0xFE6
 33719                           postdec1	equ	0xFE5
 33720                           plusw1	equ	0xFE3
 33721                           fsr1h	equ	0xFE2
 33722                           fsr1l	equ	0xFE1
 33723                           indf2	equ	0xFDF
 33724                           postinc2	equ	0xFDE
 33725                           postdec2	equ	0xFDD
 33726                           plusw2	equ	0xFDB
 33727                           fsr2h	equ	0xFDA
 33728                           fsr2l	equ	0xFD9
 33729                           status	equ	0xFD8
 33730                           
 33731 ;; *************** function _I2c_WriteData *****************
 33732 ;; Defined at:
 33733 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33734 ;; Parameters:    Size  Location     Type
 33735 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 33736 ;;		 -> I2cTxPacket(5), 
 33737 ;; Auto vars:     Size  Location     Type
 33738 ;;		None
 33739 ;; Return value:  Size  Location     Type
 33740 ;;                  1    wreg      enum E7740
 33741 ;; Registers used:
 33742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33743 ;; Tracked objects:
 33744 ;;		On entry : 0/0
 33745 ;;		On exit  : 0/0
 33746 ;;		Unchanged: 0/0
 33747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33750 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33751 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33752 ;;Total ram usage:        4 bytes
 33753 ;; Hardware stack levels used:    1
 33754 ;; Hardware stack levels required when called:   12
 33755 ;; This function calls:
 33756 ;;		_CheckAckStatus
 33757 ;;		_CheckTxStatus
 33758 ;;		_StartCondition
 33759 ;;		_StopCondition
 33760 ;;		_WriteByte
 33761 ;; This function is called by:
 33762 ;;		_I2cSendMsgSm
 33763 ;; This function uses a non-reentrant model
 33764 ;;
 33765                           
 33766                           	psect	text158
 33767  002138                     __ptext158:
 33768                           	opt stack 0
 33769  002138                     _I2c_WriteData:
 33770                           	opt stack 14
 33771                           
 33772                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 33773                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 33774                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 33775                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 33776                           ;i2c_drv.c: 260: switch (I2cWriteState)
 33777                           
 33778                           ; BSR set to: 0
 33779                           ;incstack = 0
 33780  002138  D095               	goto	l160
 33781  00213A                     
 33782                           ;i2c_drv.c: 264: StartCondition();
 33783  00213A  ECE7  F033         	call	_StartCondition	;wreg free
 33784                           
 33785                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 33786  00213E  0E00               	movlw	0
 33787  002140  6E34               	movwf	I2c_WriteData@WriteStatus,c
 33788                           
 33789                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 33790  002142  0E01               	movlw	1
 33791  002144  D084               	goto	L65
 33792  002146                     
 33793                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 33794  002146  0100               	movlb	0	; () banked
 33795  002148  EE20 F001          	lfsr	2,1
 33796  00214C  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33797  00214E  26D9               	addwf	fsr2l,f,c
 33798  002150  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33799  002152  22DA               	addwfc	fsr2h,f,c
 33800  002154  50DF               	movf	indf2,w,c
 33801  002156  6F80               	movwf	??_I2c_WriteData& (0+255),b
 33802  002158  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 33803  00215C  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 33804  002160  50DF               	movf	indf2,w,c
 33805  002162  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 33806  002164  90D8               	bcf	status,0,c
 33807  002166  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 33808  002168  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 33809  00216A  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 33810  00216E  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 33811  002172  6EDF               	movwf	indf2,c
 33812                           
 33813                           ; BSR set to: 0
 33814                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 33815  002174  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 33816  002178  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 33817  00217C  50DF               	movf	indf2,w,c
 33818  00217E  ECC5  F033         	call	_WriteByte
 33819                           
 33820                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 33821  002182  0E02               	movlw	2
 33822  002184  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 33823  002186                     
 33824                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 33825  002186  ECCF  F033         	call	_CheckTxStatus	;wreg free
 33826  00218A  0900               	iorlw	0
 33827  00218C  A4D8               	btfss	status,2,c
 33828  00218E  D089               	goto	l162
 33829                           
 33830                           ;i2c_drv.c: 282: {
 33831                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 33832  002190  0E03               	movlw	3
 33833  002192  D01A               	goto	L67
 33834  002194                     
 33835                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 33836  002194  0100               	movlb	0	; () banked
 33837  002196  EE20 F002          	lfsr	2,2
 33838  00219A  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33839  00219C  26D9               	addwf	fsr2l,f,c
 33840  00219E  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33841  0021A0  22DA               	addwfc	fsr2h,f,c
 33842  0021A2  CFDE F080          	movff	postinc2,??_I2c_WriteData
 33843  0021A6  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 33844  0021AA  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 33845  0021AE  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 33846  0021B2  50DF               	movf	indf2,w,c
 33847  0021B4  ECC5  F033         	call	_WriteByte
 33848                           
 33849                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 33850  0021B8  0E04               	movlw	4
 33851  0021BA  D049               	goto	L65
 33852  0021BC                     
 33853                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 33854  0021BC  ECCF  F033         	call	_CheckTxStatus	;wreg free
 33855  0021C0  0900               	iorlw	0
 33856  0021C2  A4D8               	btfss	status,2,c
 33857  0021C4  D06E               	goto	l162
 33858                           
 33859                           ;i2c_drv.c: 300: {
 33860                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 33861  0021C6  0E05               	movlw	5
 33862  0021C8                     L67:
 33863  0021C8  6E36               	movwf	I2c_WriteData@I2cNextState,c
 33864                           
 33865                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 33866  0021CA  0E08               	movlw	8
 33867  0021CC  D040               	goto	L65
 33868  0021CE                     
 33869                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 33870  0021CE  0100               	movlb	0	; () banked
 33871  0021D0  EE20 F004          	lfsr	2,4
 33872  0021D4  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33873  0021D6  26D9               	addwf	fsr2l,f,c
 33874  0021D8  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33875  0021DA  22DA               	addwfc	fsr2h,f,c
 33876  0021DC  50DF               	movf	indf2,w,c
 33877  0021DE  B4D8               	btfsc	status,2,c
 33878  0021E0  D010               	goto	l170
 33879                           
 33880                           ; BSR set to: 0
 33881                           ;i2c_drv.c: 310: {
 33882                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 33883  0021E2  EE20 F004          	lfsr	2,4
 33884  0021E6  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33885  0021E8  26D9               	addwf	fsr2l,f,c
 33886  0021EA  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33887  0021EC  22DA               	addwfc	fsr2h,f,c
 33888  0021EE  06DF               	decf	indf2,f,c
 33889                           
 33890                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 33891  0021F0  EE20 F002          	lfsr	2,2
 33892  0021F4  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33893  0021F6  26D9               	addwf	fsr2l,f,c
 33894  0021F8  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33895  0021FA  22DA               	addwfc	fsr2h,f,c
 33896  0021FC  2ADE               	incf	postinc2,f,c
 33897  0021FE  0E00               	movlw	0
 33898  002200  22DD               	addwfc	postdec2,f,c
 33899  002202                     l170:
 33900                           
 33901                           ; BSR set to: 0
 33902                           ;i2c_drv.c: 315: }
 33903                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 33904  002202  EE20 F004          	lfsr	2,4
 33905  002206  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 33906  002208  26D9               	addwf	fsr2l,f,c
 33907  00220A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 33908  00220C  22DA               	addwfc	fsr2h,f,c
 33909  00220E  50DF               	movf	indf2,w,c
 33910  002210  A4D8               	btfss	status,2,c
 33911  002212  D002               	goto	l171
 33912                           
 33913                           ; BSR set to: 0
 33914                           ;i2c_drv.c: 319: {
 33915                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 33916  002214  0E06               	movlw	6
 33917  002216  D01B               	goto	L65
 33918  002218                     l171:
 33919                           
 33920                           ; BSR set to: 0
 33921                           ;i2c_drv.c: 323: else
 33922                           ;i2c_drv.c: 324: {
 33923                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 33924                           
 33925                           ; BSR set to: 0
 33926  002218  0E03               	movlw	3
 33927  00221A  D019               	goto	L65
 33928  00221C                     
 33929                           ;i2c_drv.c: 332: StopCondition();
 33930                           
 33931                           ; BSR set to: 0
 33932  00221C  ECE5  F033         	call	_StopCondition	;wreg free
 33933                           
 33934                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 33935  002220  0E07               	movlw	7
 33936  002222  D015               	goto	L65
 33937  002224                     
 33938                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 33939  002224  0E00               	movlw	0
 33940  002226  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 33941                           
 33942                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 33943  002228  0E00               	movlw	0
 33944  00222A  6E36               	movwf	I2c_WriteData@I2cNextState,c
 33945                           
 33946                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 33947  00222C  0E02               	movlw	2
 33948  00222E  D018               	goto	L66
 33949  002230                     
 33950                           ;i2c_drv.c: 347: TentativeCounter++;
 33951  002230  2A35               	incf	I2c_WriteData@TentativeCounter,f,c
 33952                           
 33953                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 33954  002232  ECD4  F033         	call	_CheckAckStatus	;wreg free
 33955  002236  0900               	iorlw	0
 33956  002238  A4D8               	btfss	status,2,c
 33957  00223A  D005               	goto	l176
 33958                           
 33959                           ;i2c_drv.c: 350: {
 33960                           ;i2c_drv.c: 352: TentativeCounter = 0;
 33961  00223C  0E00               	movlw	0
 33962  00223E  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 33963                           
 33964                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 33965  002240  C036  F037         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 33966                           
 33967                           ;i2c_drv.c: 355: }
 33968  002244  D02E               	goto	l162
 33969  002246                     l176:
 33970                           
 33971                           ;i2c_drv.c: 356: else
 33972                           ;i2c_drv.c: 357: {
 33973                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 33974  002246  0E02               	movlw	2
 33975  002248  6435               	cpfsgt	I2c_WriteData@TentativeCounter,c
 33976  00224A  D02B               	goto	l162
 33977                           
 33978                           ;i2c_drv.c: 360: {
 33979                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 33980  00224C  0E09               	movlw	9
 33981  00224E                     L65:
 33982  00224E  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 33983                           
 33984                           ;i2c_drv.c: 363: }
 33985                           ;i2c_drv.c: 364: }
 33986                           ;i2c_drv.c: 365: break;
 33987  002250  D028               	goto	l162
 33988  002252                     
 33989                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 33990  002252  0E00               	movlw	0
 33991  002254  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 33992                           
 33993                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 33994  002256  0E00               	movlw	0
 33995  002258  6E36               	movwf	I2c_WriteData@I2cNextState,c
 33996                           
 33997                           ;i2c_drv.c: 372: TentativeCounter = 0;
 33998  00225A  0E00               	movlw	0
 33999  00225C  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 34000                           
 34001                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 34002  00225E  0E01               	movlw	1
 34003  002260                     L66:
 34004  002260  6E34               	movwf	I2c_WriteData@WriteStatus,c
 34005                           
 34006                           ;i2c_drv.c: 379: }
 34007                           
 34008                           ;i2c_drv.c: 378: break;
 34009                           
 34010                           ;i2c_drv.c: 377: default:
 34011                           
 34012                           ;i2c_drv.c: 375: break;
 34013  002262  D01F               	goto	l162
 34014  002264                     l160:
 34015  002264  5037               	movf	I2c_WriteData@I2cWriteState,w,c
 34016                           
 34017                           ; Switch size 1, requested type "space"
 34018                           ; Number of cases is 10, Range of values is 0 to 9
 34019                           ; switch strategies available:
 34020                           ; Name         Instructions Cycles
 34021                           ; simple_byte           31    16 (average)
 34022                           ;	Chosen strategy is simple_byte
 34023  002266  0A00               	xorlw	0	; case 0
 34024  002268  B4D8               	btfsc	status,2,c
 34025  00226A  D767               	goto	l161
 34026  00226C  0A01               	xorlw	1	; case 1
 34027  00226E  B4D8               	btfsc	status,2,c
 34028  002270  D76A               	goto	l163
 34029  002272  0A03               	xorlw	3	; case 2
 34030  002274  B4D8               	btfsc	status,2,c
 34031  002276  D787               	goto	l164
 34032  002278  0A01               	xorlw	1	; case 3
 34033  00227A  B4D8               	btfsc	status,2,c
 34034  00227C  D78B               	goto	l166
 34035  00227E  0A07               	xorlw	7	; case 4
 34036  002280  B4D8               	btfsc	status,2,c
 34037  002282  D79C               	goto	l167
 34038  002284  0A01               	xorlw	1	; case 5
 34039  002286  B4D8               	btfsc	status,2,c
 34040  002288  D7A2               	goto	l169
 34041  00228A  0A03               	xorlw	3	; case 6
 34042  00228C  B4D8               	btfsc	status,2,c
 34043  00228E  D7C6               	goto	l173
 34044  002290  0A01               	xorlw	1	; case 7
 34045  002292  B4D8               	btfsc	status,2,c
 34046  002294  D7C7               	goto	l174
 34047  002296  0A0F               	xorlw	15	; case 8
 34048  002298  B4D8               	btfsc	status,2,c
 34049  00229A  D7CA               	goto	l175
 34050  00229C  0A01               	xorlw	1	; case 9
 34051  00229E  B4D8               	btfsc	status,2,c
 34052  0022A0  D7D8               	goto	l179
 34053  0022A2                     l162:
 34054                           
 34055                           ;i2c_drv.c: 382: return WriteStatus;
 34056  0022A2  5034               	movf	I2c_WriteData@WriteStatus,w,c
 34057  0022A4  0012               	return	
 34058  0022A6                     __end_of_I2c_WriteData:
 34059                           	opt stack 0
 34060                           tosu	equ	0xFFF
 34061                           tosh	equ	0xFFE
 34062                           tosl	equ	0xFFD
 34063                           pclath	equ	0xFFA
 34064                           tblptru	equ	0xFF8
 34065                           tblptrh	equ	0xFF7
 34066                           tblptrl	equ	0xFF6
 34067                           tablat	equ	0xFF5
 34068                           prodh	equ	0xFF4
 34069                           prodl	equ	0xFF3
 34070                           intcon	equ	0xFF2
 34071                           intcon2	equ	0xFF1
 34072                           intcon3	equ	0xFF0
 34073                           indf0	equ	0xFEF
 34074                           postinc0	equ	0xFEE
 34075                           plusw0	equ	0xFEB
 34076                           fsr0h	equ	0xFEA
 34077                           fsr0l	equ	0xFE9
 34078                           wreg	equ	0xFE8
 34079                           indf1	equ	0xFE7
 34080                           postinc1	equ	0xFE6
 34081                           postdec1	equ	0xFE5
 34082                           plusw1	equ	0xFE3
 34083                           fsr1h	equ	0xFE2
 34084                           fsr1l	equ	0xFE1
 34085                           indf2	equ	0xFDF
 34086                           postinc2	equ	0xFDE
 34087                           postdec2	equ	0xFDD
 34088                           plusw2	equ	0xFDB
 34089                           fsr2h	equ	0xFDA
 34090                           fsr2l	equ	0xFD9
 34091                           status	equ	0xFD8
 34092                           
 34093 ;; *************** function _I2c_ReadData *****************
 34094 ;; Defined at:
 34095 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34096 ;; Parameters:    Size  Location     Type
 34097 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 34098 ;;		 -> I2cRxPacket(6), 
 34099 ;; Auto vars:     Size  Location     Type
 34100 ;;		None
 34101 ;; Return value:  Size  Location     Type
 34102 ;;                  1    wreg      enum E7787
 34103 ;; Registers used:
 34104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34105 ;; Tracked objects:
 34106 ;;		On entry : 0/0
 34107 ;;		On exit  : 0/0
 34108 ;;		Unchanged: 0/0
 34109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34110 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34113 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34114 ;;Total ram usage:        4 bytes
 34115 ;; Hardware stack levels used:    1
 34116 ;; Hardware stack levels required when called:   12
 34117 ;; This function calls:
 34118 ;;		_CheckAckStatus
 34119 ;;		_CheckTxStatus
 34120 ;;		_EnableReceiver
 34121 ;;		_GenerateEvt
 34122 ;;		_ReadByte
 34123 ;;		_SetAckStatus
 34124 ;;		_StartCondition
 34125 ;;		_StopCondition
 34126 ;;		_WriteByte
 34127 ;; This function is called by:
 34128 ;;		_I2cSendMsgSm
 34129 ;; This function uses a non-reentrant model
 34130 ;;
 34131                           
 34132                           	psect	text159
 34133  0022A6                     __ptext159:
 34134                           	opt stack 0
 34135  0022A6                     _I2c_ReadData:
 34136                           	opt stack 14
 34137                           
 34138                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 34139                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 34140                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 34141                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 34142                           ;i2c_drv.c: 402: switch (I2cReadState)
 34143                           
 34144                           ;incstack = 0
 34145  0022A6  D090               	goto	l192
 34146  0022A8                     
 34147                           ;i2c_drv.c: 406: StartCondition();
 34148  0022A8  ECE7  F033         	call	_StartCondition	;wreg free
 34149                           
 34150                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 34151  0022AC  0E00               	movlw	0
 34152  0022AE  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34153                           
 34154                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 34155  0022B0  0E01               	movlw	1
 34156  0022B2  D083               	goto	L75
 34157  0022B4                     
 34158                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 34159  0022B4  0100               	movlb	0	; () banked
 34160  0022B6  EE20 F001          	lfsr	2,1
 34161  0022BA  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34162  0022BC  26D9               	addwf	fsr2l,f,c
 34163  0022BE  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34164  0022C0  22DA               	addwfc	fsr2h,f,c
 34165  0022C2  50DF               	movf	indf2,w,c
 34166  0022C4  6F82               	movwf	??_I2c_ReadData& (0+255),b
 34167  0022C6  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34168  0022CA  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34169  0022CE  50DF               	movf	indf2,w,c
 34170  0022D0  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 34171  0022D2  90D8               	bcf	status,0,c
 34172  0022D4  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 34173  0022D6  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 34174  0022D8  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34175  0022DC  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34176  0022E0  6EDF               	movwf	indf2,c
 34177                           
 34178                           ; BSR set to: 0
 34179                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 34180  0022E2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34181  0022E6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34182  0022EA  50DF               	movf	indf2,w,c
 34183  0022EC  ECC5  F033         	call	_WriteByte
 34184                           
 34185                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 34186  0022F0  0E02               	movlw	2
 34187  0022F2  D063               	goto	L75
 34188  0022F4                     
 34189                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 34190  0022F4  ECCF  F033         	call	_CheckTxStatus	;wreg free
 34191  0022F8  0900               	iorlw	0
 34192  0022FA  A4D8               	btfss	status,2,c
 34193  0022FC  D081               	goto	l194
 34194                           
 34195                           ;i2c_drv.c: 425: {
 34196                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 34197  0022FE  0E03               	movlw	3
 34198  002300  D05C               	goto	L75
 34199  002302                     
 34200                           ;i2c_drv.c: 433: TentativeCounter++;
 34201  002302  2A31               	incf	I2c_ReadData@TentativeCounter,f,c
 34202                           
 34203                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 34204  002304  ECD4  F033         	call	_CheckAckStatus	;wreg free
 34205  002308  0900               	iorlw	0
 34206  00230A  A4D8               	btfss	status,2,c
 34207  00230C  D004               	goto	l199
 34208                           
 34209                           ;i2c_drv.c: 436: {
 34210                           ;i2c_drv.c: 438: TentativeCounter = 0;
 34211  00230E  0E00               	movlw	0
 34212  002310  6E31               	movwf	I2c_ReadData@TentativeCounter,c
 34213  002312                     
 34214                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 34215  002312  0E04               	movlw	4
 34216  002314  D052               	goto	L75
 34217  002316                     l199:
 34218                           
 34219                           ;i2c_drv.c: 442: else
 34220                           ;i2c_drv.c: 443: {
 34221                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 34222  002316  0E02               	movlw	2
 34223  002318  6431               	cpfsgt	I2c_ReadData@TentativeCounter,c
 34224  00231A  D072               	goto	l194
 34225                           
 34226                           ;i2c_drv.c: 446: {
 34227                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 34228  00231C  0E08               	movlw	8
 34229  00231E  D04D               	goto	L75
 34230  002320                     
 34231                           ;i2c_drv.c: 455: EnableReceiver();
 34232  002320  ECE9  F033         	call	_EnableReceiver	;wreg free
 34233                           
 34234                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 34235  002324  0E05               	movlw	5
 34236  002326  D049               	goto	L75
 34237  002328                     
 34238                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 34239  002328  ECCF  F033         	call	_CheckTxStatus	;wreg free
 34240  00232C  0900               	iorlw	0
 34241  00232E  A4D8               	btfss	status,2,c
 34242  002330  D067               	goto	l194
 34243                           
 34244                           ;i2c_drv.c: 463: {
 34245                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 34246  002332  0100               	movlb	0	; () banked
 34247  002334  EE20 F002          	lfsr	2,2
 34248  002338  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34249  00233A  26D9               	addwf	fsr2l,f,c
 34250  00233C  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34251  00233E  22DA               	addwfc	fsr2h,f,c
 34252  002340  CFDE F082          	movff	postinc2,??_I2c_ReadData
 34253  002344  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 34254  002348  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 34255  00234C  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 34256  002350  ECCA  F033         	call	_ReadByte	;wreg free
 34257  002354  6EDF               	movwf	indf2,c
 34258                           
 34259                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 34260  002356  0100               	movlb	0	; () banked
 34261  002358  EE20 F002          	lfsr	2,2
 34262  00235C  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34263  00235E  26D9               	addwf	fsr2l,f,c
 34264  002360  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34265  002362  22DA               	addwfc	fsr2h,f,c
 34266  002364  2ADE               	incf	postinc2,f,c
 34267  002366  0E00               	movlw	0
 34268  002368  22DD               	addwfc	postdec2,f,c
 34269                           
 34270                           ; BSR set to: 0
 34271                           ;i2c_drv.c: 469: DataCounter++;
 34272  00236A  2A32               	incf	I2c_ReadData@DataCounter,f,c
 34273                           
 34274                           ; BSR set to: 0
 34275                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 34276  00236C  0E06               	movlw	6
 34277  00236E  D025               	goto	L75
 34278  002370                     
 34279                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 34280                           
 34281                           ; BSR set to: 0
 34282  002370  0100               	movlb	0	; () banked
 34283  002372  EE20 F004          	lfsr	2,4
 34284  002376  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34285  002378  26D9               	addwf	fsr2l,f,c
 34286  00237A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34287  00237C  22DA               	addwfc	fsr2h,f,c
 34288  00237E  50DE               	movf	postinc2,w,c
 34289  002380  5C32               	subwf	I2c_ReadData@DataCounter,w,c
 34290  002382  A0D8               	btfss	status,0,c
 34291  002384  D008               	goto	l206
 34292                           
 34293                           ; BSR set to: 0
 34294                           ;i2c_drv.c: 478: {
 34295                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 34296  002386  0E01               	movlw	1
 34297  002388  EC59  F033         	call	_SetAckStatus
 34298                           
 34299                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 34300  00238C  0E07               	movlw	7
 34301  00238E  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34302                           
 34303                           ;i2c_drv.c: 484: DataCounter = 0;
 34304  002390  0E00               	movlw	0
 34305  002392  6E32               	movwf	I2c_ReadData@DataCounter,c
 34306                           
 34307                           ;i2c_drv.c: 485: }
 34308  002394  D035               	goto	l194
 34309  002396                     l206:
 34310                           
 34311                           ;i2c_drv.c: 486: else
 34312                           ;i2c_drv.c: 487: {
 34313                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 34314  002396  0E00               	movlw	0
 34315  002398  EC59  F033         	call	_SetAckStatus
 34316  00239C  D7BA               	goto	L76
 34317  00239E                     
 34318                           ;i2c_drv.c: 497: StopCondition();
 34319  00239E  ECE5  F033         	call	_StopCondition	;wreg free
 34320                           
 34321                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 34322  0023A2  0E02               	movlw	2
 34323  0023A4  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34324                           
 34325                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 34326  0023A6  0E05               	movlw	5
 34327  0023A8  0100               	movlb	0	; () banked
 34328  0023AA  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 34329  0023AC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 34330  0023AE  0E00               	movlw	0
 34331  0023B0  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34332  0023B2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 34333  0023B4  EC21  F033         	call	_GenerateEvt	;wreg free
 34334                           
 34335                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 34336  0023B8  0E00               	movlw	0
 34337  0023BA                     L75:
 34338  0023BA  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34339                           
 34340                           ;i2c_drv.c: 504: break;
 34341  0023BC  D021               	goto	l194
 34342  0023BE                     
 34343                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 34344  0023BE  0E00               	movlw	0
 34345  0023C0  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34346                           
 34347                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 34348  0023C2  0E01               	movlw	1
 34349  0023C4  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34350                           
 34351                           ;i2c_drv.c: 515: }
 34352                           
 34353                           ;i2c_drv.c: 514: break;
 34354                           
 34355                           ;i2c_drv.c: 513: default:
 34356                           
 34357                           ;i2c_drv.c: 511: break;
 34358  0023C6  D01C               	goto	l194
 34359  0023C8                     l192:
 34360  0023C8  5033               	movf	I2c_ReadData@I2cReadState,w,c
 34361                           
 34362                           ; Switch size 1, requested type "space"
 34363                           ; Number of cases is 9, Range of values is 0 to 8
 34364                           ; switch strategies available:
 34365                           ; Name         Instructions Cycles
 34366                           ; simple_byte           28    15 (average)
 34367                           ;	Chosen strategy is simple_byte
 34368  0023CA  0A00               	xorlw	0	; case 0
 34369  0023CC  B4D8               	btfsc	status,2,c
 34370  0023CE  D76C               	goto	l193
 34371  0023D0  0A01               	xorlw	1	; case 1
 34372  0023D2  B4D8               	btfsc	status,2,c
 34373  0023D4  D76F               	goto	l195
 34374  0023D6  0A03               	xorlw	3	; case 2
 34375  0023D8  B4D8               	btfsc	status,2,c
 34376  0023DA  D78C               	goto	l196
 34377  0023DC  0A01               	xorlw	1	; case 3
 34378  0023DE  B4D8               	btfsc	status,2,c
 34379  0023E0  D790               	goto	l198
 34380  0023E2  0A07               	xorlw	7	; case 4
 34381  0023E4  B4D8               	btfsc	status,2,c
 34382  0023E6  D79C               	goto	l202
 34383  0023E8  0A01               	xorlw	1	; case 5
 34384  0023EA  B4D8               	btfsc	status,2,c
 34385  0023EC  D79D               	goto	l203
 34386  0023EE  0A03               	xorlw	3	; case 6
 34387  0023F0  B4D8               	btfsc	status,2,c
 34388  0023F2  D7BE               	goto	l205
 34389  0023F4  0A01               	xorlw	1	; case 7
 34390  0023F6  B4D8               	btfsc	status,2,c
 34391  0023F8  D7D2               	goto	l208
 34392  0023FA  0A0F               	xorlw	15	; case 8
 34393  0023FC  B4D8               	btfsc	status,2,c
 34394  0023FE  D7DF               	goto	l209
 34395  002400                     l194:
 34396                           
 34397                           ;i2c_drv.c: 518: return ReadStatus;
 34398  002400  5030               	movf	I2c_ReadData@ReadStatus,w,c
 34399  002402  0012               	return	
 34400  002404                     __end_of_I2c_ReadData:
 34401                           	opt stack 0
 34402                           tosu	equ	0xFFF
 34403                           tosh	equ	0xFFE
 34404                           tosl	equ	0xFFD
 34405                           pclath	equ	0xFFA
 34406                           tblptru	equ	0xFF8
 34407                           tblptrh	equ	0xFF7
 34408                           tblptrl	equ	0xFF6
 34409                           tablat	equ	0xFF5
 34410                           prodh	equ	0xFF4
 34411                           prodl	equ	0xFF3
 34412                           intcon	equ	0xFF2
 34413                           intcon2	equ	0xFF1
 34414                           intcon3	equ	0xFF0
 34415                           indf0	equ	0xFEF
 34416                           postinc0	equ	0xFEE
 34417                           plusw0	equ	0xFEB
 34418                           fsr0h	equ	0xFEA
 34419                           fsr0l	equ	0xFE9
 34420                           wreg	equ	0xFE8
 34421                           indf1	equ	0xFE7
 34422                           postinc1	equ	0xFE6
 34423                           postdec1	equ	0xFE5
 34424                           plusw1	equ	0xFE3
 34425                           fsr1h	equ	0xFE2
 34426                           fsr1l	equ	0xFE1
 34427                           indf2	equ	0xFDF
 34428                           postinc2	equ	0xFDE
 34429                           postdec2	equ	0xFDD
 34430                           plusw2	equ	0xFDB
 34431                           fsr2h	equ	0xFDA
 34432                           fsr2l	equ	0xFD9
 34433                           status	equ	0xFD8
 34434                           
 34435 ;; *************** function _WriteByte *****************
 34436 ;; Defined at:
 34437 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34438 ;; Parameters:    Size  Location     Type
 34439 ;;  Byte            1    wreg     unsigned char 
 34440 ;; Auto vars:     Size  Location     Type
 34441 ;;  Byte            1   29[BANK0 ] unsigned char 
 34442 ;; Return value:  Size  Location     Type
 34443 ;;                  1    wreg      void 
 34444 ;; Registers used:
 34445 ;;		wreg
 34446 ;; Tracked objects:
 34447 ;;		On entry : 0/0
 34448 ;;		On exit  : 0/0
 34449 ;;		Unchanged: 0/0
 34450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34452 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34454 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34455 ;;Total ram usage:        1 bytes
 34456 ;; Hardware stack levels used:    1
 34457 ;; Hardware stack levels required when called:   11
 34458 ;; This function calls:
 34459 ;;		Nothing
 34460 ;; This function is called by:
 34461 ;;		_I2c_WriteData
 34462 ;;		_I2c_ReadData
 34463 ;; This function uses a non-reentrant model
 34464 ;;
 34465                           
 34466                           	psect	text160
 34467  00678A                     __ptext160:
 34468                           	opt stack 0
 34469  00678A                     _WriteByte:
 34470                           	opt stack 14
 34471                           
 34472                           ;incstack = 0
 34473                           ;WriteByte@Byte stored from wreg
 34474  00678A  0100               	movlb	0	; () banked
 34475  00678C  6F7D               	movwf	WriteByte@Byte& (0+255),b
 34476                           
 34477                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 34478  00678E  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 34479  006792  0012               	return		;funcret
 34480  006794                     __end_of_WriteByte:
 34481                           	opt stack 0
 34482                           tosu	equ	0xFFF
 34483                           tosh	equ	0xFFE
 34484                           tosl	equ	0xFFD
 34485                           pclath	equ	0xFFA
 34486                           tblptru	equ	0xFF8
 34487                           tblptrh	equ	0xFF7
 34488                           tblptrl	equ	0xFF6
 34489                           tablat	equ	0xFF5
 34490                           prodh	equ	0xFF4
 34491                           prodl	equ	0xFF3
 34492                           intcon	equ	0xFF2
 34493                           intcon2	equ	0xFF1
 34494                           intcon3	equ	0xFF0
 34495                           indf0	equ	0xFEF
 34496                           postinc0	equ	0xFEE
 34497                           plusw0	equ	0xFEB
 34498                           fsr0h	equ	0xFEA
 34499                           fsr0l	equ	0xFE9
 34500                           wreg	equ	0xFE8
 34501                           indf1	equ	0xFE7
 34502                           postinc1	equ	0xFE6
 34503                           postdec1	equ	0xFE5
 34504                           plusw1	equ	0xFE3
 34505                           fsr1h	equ	0xFE2
 34506                           fsr1l	equ	0xFE1
 34507                           indf2	equ	0xFDF
 34508                           postinc2	equ	0xFDE
 34509                           postdec2	equ	0xFDD
 34510                           plusw2	equ	0xFDB
 34511                           fsr2h	equ	0xFDA
 34512                           fsr2l	equ	0xFD9
 34513                           status	equ	0xFD8
 34514                           
 34515 ;; *************** function _StopCondition *****************
 34516 ;; Defined at:
 34517 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34518 ;; Parameters:    Size  Location     Type
 34519 ;;		None
 34520 ;; Auto vars:     Size  Location     Type
 34521 ;;		None
 34522 ;; Return value:  Size  Location     Type
 34523 ;;                  1    wreg      void 
 34524 ;; Registers used:
 34525 ;;		status,2, status,0
 34526 ;; Tracked objects:
 34527 ;;		On entry : 0/0
 34528 ;;		On exit  : 0/0
 34529 ;;		Unchanged: 0/0
 34530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34535 ;;Total ram usage:        0 bytes
 34536 ;; Hardware stack levels used:    1
 34537 ;; Hardware stack levels required when called:   11
 34538 ;; This function calls:
 34539 ;;		Nothing
 34540 ;; This function is called by:
 34541 ;;		_I2c_WriteData
 34542 ;;		_I2c_ReadData
 34543 ;; This function uses a non-reentrant model
 34544 ;;
 34545                           
 34546                           	psect	text161
 34547  0067CA                     __ptext161:
 34548                           	opt stack 0
 34549  0067CA                     _StopCondition:
 34550                           	opt stack 14
 34551                           
 34552                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 34553                           
 34554                           ;incstack = 0
 34555  0067CA  8471               	bsf	3953,2,c	;volatile
 34556  0067CC  0012               	return		;funcret
 34557  0067CE                     __end_of_StopCondition:
 34558                           	opt stack 0
 34559                           tosu	equ	0xFFF
 34560                           tosh	equ	0xFFE
 34561                           tosl	equ	0xFFD
 34562                           pclath	equ	0xFFA
 34563                           tblptru	equ	0xFF8
 34564                           tblptrh	equ	0xFF7
 34565                           tblptrl	equ	0xFF6
 34566                           tablat	equ	0xFF5
 34567                           prodh	equ	0xFF4
 34568                           prodl	equ	0xFF3
 34569                           intcon	equ	0xFF2
 34570                           intcon2	equ	0xFF1
 34571                           intcon3	equ	0xFF0
 34572                           indf0	equ	0xFEF
 34573                           postinc0	equ	0xFEE
 34574                           plusw0	equ	0xFEB
 34575                           fsr0h	equ	0xFEA
 34576                           fsr0l	equ	0xFE9
 34577                           wreg	equ	0xFE8
 34578                           indf1	equ	0xFE7
 34579                           postinc1	equ	0xFE6
 34580                           postdec1	equ	0xFE5
 34581                           plusw1	equ	0xFE3
 34582                           fsr1h	equ	0xFE2
 34583                           fsr1l	equ	0xFE1
 34584                           indf2	equ	0xFDF
 34585                           postinc2	equ	0xFDE
 34586                           postdec2	equ	0xFDD
 34587                           plusw2	equ	0xFDB
 34588                           fsr2h	equ	0xFDA
 34589                           fsr2l	equ	0xFD9
 34590                           status	equ	0xFD8
 34591                           
 34592 ;; *************** function _StartCondition *****************
 34593 ;; Defined at:
 34594 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34595 ;; Parameters:    Size  Location     Type
 34596 ;;		None
 34597 ;; Auto vars:     Size  Location     Type
 34598 ;;		None
 34599 ;; Return value:  Size  Location     Type
 34600 ;;                  1    wreg      void 
 34601 ;; Registers used:
 34602 ;;		status,2, status,0
 34603 ;; Tracked objects:
 34604 ;;		On entry : 0/0
 34605 ;;		On exit  : 0/0
 34606 ;;		Unchanged: 0/0
 34607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34612 ;;Total ram usage:        0 bytes
 34613 ;; Hardware stack levels used:    1
 34614 ;; Hardware stack levels required when called:   11
 34615 ;; This function calls:
 34616 ;;		Nothing
 34617 ;; This function is called by:
 34618 ;;		_I2c_WriteData
 34619 ;;		_I2c_ReadData
 34620 ;; This function uses a non-reentrant model
 34621 ;;
 34622                           
 34623                           	psect	text162
 34624  0067CE                     __ptext162:
 34625                           	opt stack 0
 34626  0067CE                     _StartCondition:
 34627                           	opt stack 14
 34628                           
 34629                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 34630                           
 34631                           ;incstack = 0
 34632  0067CE  8071               	bsf	3953,0,c	;volatile
 34633  0067D0  0012               	return		;funcret
 34634  0067D2                     __end_of_StartCondition:
 34635                           	opt stack 0
 34636                           tosu	equ	0xFFF
 34637                           tosh	equ	0xFFE
 34638                           tosl	equ	0xFFD
 34639                           pclath	equ	0xFFA
 34640                           tblptru	equ	0xFF8
 34641                           tblptrh	equ	0xFF7
 34642                           tblptrl	equ	0xFF6
 34643                           tablat	equ	0xFF5
 34644                           prodh	equ	0xFF4
 34645                           prodl	equ	0xFF3
 34646                           intcon	equ	0xFF2
 34647                           intcon2	equ	0xFF1
 34648                           intcon3	equ	0xFF0
 34649                           indf0	equ	0xFEF
 34650                           postinc0	equ	0xFEE
 34651                           plusw0	equ	0xFEB
 34652                           fsr0h	equ	0xFEA
 34653                           fsr0l	equ	0xFE9
 34654                           wreg	equ	0xFE8
 34655                           indf1	equ	0xFE7
 34656                           postinc1	equ	0xFE6
 34657                           postdec1	equ	0xFE5
 34658                           plusw1	equ	0xFE3
 34659                           fsr1h	equ	0xFE2
 34660                           fsr1l	equ	0xFE1
 34661                           indf2	equ	0xFDF
 34662                           postinc2	equ	0xFDE
 34663                           postdec2	equ	0xFDD
 34664                           plusw2	equ	0xFDB
 34665                           fsr2h	equ	0xFDA
 34666                           fsr2l	equ	0xFD9
 34667                           status	equ	0xFD8
 34668                           
 34669 ;; *************** function _SetAckStatus *****************
 34670 ;; Defined at:
 34671 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34672 ;; Parameters:    Size  Location     Type
 34673 ;;  AckSts          1    wreg     unsigned char 
 34674 ;; Auto vars:     Size  Location     Type
 34675 ;;  AckSts          1   29[BANK0 ] unsigned char 
 34676 ;; Return value:  Size  Location     Type
 34677 ;;                  1    wreg      void 
 34678 ;; Registers used:
 34679 ;;		wreg
 34680 ;; Tracked objects:
 34681 ;;		On entry : 0/0
 34682 ;;		On exit  : 0/0
 34683 ;;		Unchanged: 0/0
 34684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34688 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34689 ;;Total ram usage:        1 bytes
 34690 ;; Hardware stack levels used:    1
 34691 ;; Hardware stack levels required when called:   11
 34692 ;; This function calls:
 34693 ;;		Nothing
 34694 ;; This function is called by:
 34695 ;;		_I2c_ReadData
 34696 ;; This function uses a non-reentrant model
 34697 ;;
 34698                           
 34699                           	psect	text163
 34700  0066B2                     __ptext163:
 34701                           	opt stack 0
 34702  0066B2                     _SetAckStatus:
 34703                           	opt stack 14
 34704                           
 34705                           ;incstack = 0
 34706                           ;SetAckStatus@AckSts stored from wreg
 34707  0066B2  0100               	movlb	0	; () banked
 34708  0066B4  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 34709                           
 34710                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 34711  0066B6  0100               	movlb	0	; () banked
 34712  0066B8  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 34713  0066BA  D002               	bra	u12205
 34714  0066BC  9A71               	bcf	3953,5,c	;volatile
 34715  0066BE  D001               	bra	u12206
 34716  0066C0                     u12205:
 34717  0066C0  8A71               	bsf	3953,5,c	;volatile
 34718  0066C2                     u12206:
 34719                           
 34720                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 34721  0066C2  8871               	bsf	3953,4,c	;volatile
 34722  0066C4  0012               	return		;funcret
 34723  0066C6                     __end_of_SetAckStatus:
 34724                           	opt stack 0
 34725                           tosu	equ	0xFFF
 34726                           tosh	equ	0xFFE
 34727                           tosl	equ	0xFFD
 34728                           pclath	equ	0xFFA
 34729                           tblptru	equ	0xFF8
 34730                           tblptrh	equ	0xFF7
 34731                           tblptrl	equ	0xFF6
 34732                           tablat	equ	0xFF5
 34733                           prodh	equ	0xFF4
 34734                           prodl	equ	0xFF3
 34735                           intcon	equ	0xFF2
 34736                           intcon2	equ	0xFF1
 34737                           intcon3	equ	0xFF0
 34738                           indf0	equ	0xFEF
 34739                           postinc0	equ	0xFEE
 34740                           plusw0	equ	0xFEB
 34741                           fsr0h	equ	0xFEA
 34742                           fsr0l	equ	0xFE9
 34743                           wreg	equ	0xFE8
 34744                           indf1	equ	0xFE7
 34745                           postinc1	equ	0xFE6
 34746                           postdec1	equ	0xFE5
 34747                           plusw1	equ	0xFE3
 34748                           fsr1h	equ	0xFE2
 34749                           fsr1l	equ	0xFE1
 34750                           indf2	equ	0xFDF
 34751                           postinc2	equ	0xFDE
 34752                           postdec2	equ	0xFDD
 34753                           plusw2	equ	0xFDB
 34754                           fsr2h	equ	0xFDA
 34755                           fsr2l	equ	0xFD9
 34756                           status	equ	0xFD8
 34757                           
 34758 ;; *************** function _ReadByte *****************
 34759 ;; Defined at:
 34760 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34761 ;; Parameters:    Size  Location     Type
 34762 ;;		None
 34763 ;; Auto vars:     Size  Location     Type
 34764 ;;  Byte            1   29[BANK0 ] unsigned char 
 34765 ;; Return value:  Size  Location     Type
 34766 ;;                  1    wreg      unsigned char 
 34767 ;; Registers used:
 34768 ;;		wreg, status,2
 34769 ;; Tracked objects:
 34770 ;;		On entry : 0/0
 34771 ;;		On exit  : 0/0
 34772 ;;		Unchanged: 0/0
 34773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34775 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34777 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34778 ;;Total ram usage:        1 bytes
 34779 ;; Hardware stack levels used:    1
 34780 ;; Hardware stack levels required when called:   11
 34781 ;; This function calls:
 34782 ;;		Nothing
 34783 ;; This function is called by:
 34784 ;;		_I2c_ReadData
 34785 ;; This function uses a non-reentrant model
 34786 ;;
 34787                           
 34788                           	psect	text164
 34789  006794                     __ptext164:
 34790                           	opt stack 0
 34791  006794                     _ReadByte:
 34792                           	opt stack 14
 34793                           
 34794                           ;i2c_drv.c: 207: UINT8 Byte;
 34795                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 34796                           
 34797                           ;incstack = 0
 34798  006794  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 34799                           
 34800                           ;i2c_drv.c: 213: return Byte;
 34801  006798  0100               	movlb	0	; () banked
 34802  00679A  517D               	movf	ReadByte@Byte& (0+255),w,b
 34803  00679C  0012               	return	
 34804  00679E                     __end_of_ReadByte:
 34805                           	opt stack 0
 34806                           tosu	equ	0xFFF
 34807                           tosh	equ	0xFFE
 34808                           tosl	equ	0xFFD
 34809                           pclath	equ	0xFFA
 34810                           tblptru	equ	0xFF8
 34811                           tblptrh	equ	0xFF7
 34812                           tblptrl	equ	0xFF6
 34813                           tablat	equ	0xFF5
 34814                           prodh	equ	0xFF4
 34815                           prodl	equ	0xFF3
 34816                           intcon	equ	0xFF2
 34817                           intcon2	equ	0xFF1
 34818                           intcon3	equ	0xFF0
 34819                           indf0	equ	0xFEF
 34820                           postinc0	equ	0xFEE
 34821                           plusw0	equ	0xFEB
 34822                           fsr0h	equ	0xFEA
 34823                           fsr0l	equ	0xFE9
 34824                           wreg	equ	0xFE8
 34825                           indf1	equ	0xFE7
 34826                           postinc1	equ	0xFE6
 34827                           postdec1	equ	0xFE5
 34828                           plusw1	equ	0xFE3
 34829                           fsr1h	equ	0xFE2
 34830                           fsr1l	equ	0xFE1
 34831                           indf2	equ	0xFDF
 34832                           postinc2	equ	0xFDE
 34833                           postdec2	equ	0xFDD
 34834                           plusw2	equ	0xFDB
 34835                           fsr2h	equ	0xFDA
 34836                           fsr2l	equ	0xFD9
 34837                           status	equ	0xFD8
 34838                           
 34839 ;; *************** function _GenerateEvt *****************
 34840 ;; Defined at:
 34841 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34842 ;; Parameters:    Size  Location     Type
 34843 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 34844 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34845 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34846 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34847 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34848 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34849 ;; Auto vars:     Size  Location     Type
 34850 ;;  EventStatus     1   31[BANK0 ] enum E7727
 34851 ;; Return value:  Size  Location     Type
 34852 ;;                  1    wreg      enum E7699
 34853 ;; Registers used:
 34854 ;;		wreg, fsr2l, fsr2h, status,2
 34855 ;; Tracked objects:
 34856 ;;		On entry : 0/0
 34857 ;;		On exit  : 0/0
 34858 ;;		Unchanged: 0/0
 34859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34861 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34863 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34864 ;;Total ram usage:        3 bytes
 34865 ;; Hardware stack levels used:    1
 34866 ;; Hardware stack levels required when called:   11
 34867 ;; This function calls:
 34868 ;;		Nothing
 34869 ;; This function is called by:
 34870 ;;		_I2c_ReadData
 34871 ;;		_CheckModem
 34872 ;;		_TurnOnModem
 34873 ;;		_ConfigureModem
 34874 ;;		_ModemEvtParser
 34875 ;;		_GetSmsSm
 34876 ;;		_Mdm_RequestSmsData
 34877 ;;		_I2cSlv_SendI2cMsg
 34878 ;;		_I2cSlv_ReceiveI2cMsg
 34879 ;;		_RiSm
 34880 ;;		_Mdm_SendSmsData
 34881 ;;		_MdmHttp_InitGprsNetwork
 34882 ;;		_MdmHttp_GetMethod
 34883 ;;		_Alarm
 34884 ;; This function uses a non-reentrant model
 34885 ;;
 34886                           
 34887                           	psect	text165
 34888  006642                     __ptext165:
 34889                           	opt stack 0
 34890  006642                     _GenerateEvt:
 34891                           	opt stack 13
 34892                           
 34893                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34894                           
 34895                           ; BSR set to: 0
 34896                           ;incstack = 0
 34897  006642  0E00               	movlw	0
 34898  006644  0100               	movlb	0	; () banked
 34899  006646  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 34900                           
 34901                           ; BSR set to: 0
 34902                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34903  006648  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 34904  00664C  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 34905  006650  0E02               	movlw	2
 34906  006652  6EDF               	movwf	indf2,c
 34907                           
 34908                           ; BSR set to: 0
 34909                           ;os_ser.c: 83: EventStatus = EventSent;
 34910  006654  0E02               	movlw	2
 34911  006656  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 34912  006658  0012               	return	
 34913  00665A                     __end_of_GenerateEvt:
 34914                           	opt stack 0
 34915                           tosu	equ	0xFFF
 34916                           tosh	equ	0xFFE
 34917                           tosl	equ	0xFFD
 34918                           pclath	equ	0xFFA
 34919                           tblptru	equ	0xFF8
 34920                           tblptrh	equ	0xFF7
 34921                           tblptrl	equ	0xFF6
 34922                           tablat	equ	0xFF5
 34923                           prodh	equ	0xFF4
 34924                           prodl	equ	0xFF3
 34925                           intcon	equ	0xFF2
 34926                           intcon2	equ	0xFF1
 34927                           intcon3	equ	0xFF0
 34928                           indf0	equ	0xFEF
 34929                           postinc0	equ	0xFEE
 34930                           plusw0	equ	0xFEB
 34931                           fsr0h	equ	0xFEA
 34932                           fsr0l	equ	0xFE9
 34933                           wreg	equ	0xFE8
 34934                           indf1	equ	0xFE7
 34935                           postinc1	equ	0xFE6
 34936                           postdec1	equ	0xFE5
 34937                           plusw1	equ	0xFE3
 34938                           fsr1h	equ	0xFE2
 34939                           fsr1l	equ	0xFE1
 34940                           indf2	equ	0xFDF
 34941                           postinc2	equ	0xFDE
 34942                           postdec2	equ	0xFDD
 34943                           plusw2	equ	0xFDB
 34944                           fsr2h	equ	0xFDA
 34945                           fsr2l	equ	0xFD9
 34946                           status	equ	0xFD8
 34947                           
 34948 ;; *************** function _EnableReceiver *****************
 34949 ;; Defined at:
 34950 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34951 ;; Parameters:    Size  Location     Type
 34952 ;;		None
 34953 ;; Auto vars:     Size  Location     Type
 34954 ;;		None
 34955 ;; Return value:  Size  Location     Type
 34956 ;;                  1    wreg      void 
 34957 ;; Registers used:
 34958 ;;		status,2, status,0
 34959 ;; Tracked objects:
 34960 ;;		On entry : 0/0
 34961 ;;		On exit  : 0/0
 34962 ;;		Unchanged: 0/0
 34963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34968 ;;Total ram usage:        0 bytes
 34969 ;; Hardware stack levels used:    1
 34970 ;; Hardware stack levels required when called:   11
 34971 ;; This function calls:
 34972 ;;		Nothing
 34973 ;; This function is called by:
 34974 ;;		_I2c_ReadData
 34975 ;; This function uses a non-reentrant model
 34976 ;;
 34977                           
 34978                           	psect	text166
 34979  0067D2                     __ptext166:
 34980                           	opt stack 0
 34981  0067D2                     _EnableReceiver:
 34982                           	opt stack 14
 34983                           
 34984                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 34985                           
 34986                           ; BSR set to: 0
 34987                           ;incstack = 0
 34988  0067D2  8671               	bsf	3953,3,c	;volatile
 34989  0067D4  0012               	return		;funcret
 34990  0067D6                     __end_of_EnableReceiver:
 34991                           	opt stack 0
 34992                           tosu	equ	0xFFF
 34993                           tosh	equ	0xFFE
 34994                           tosl	equ	0xFFD
 34995                           pclath	equ	0xFFA
 34996                           tblptru	equ	0xFF8
 34997                           tblptrh	equ	0xFF7
 34998                           tblptrl	equ	0xFF6
 34999                           tablat	equ	0xFF5
 35000                           prodh	equ	0xFF4
 35001                           prodl	equ	0xFF3
 35002                           intcon	equ	0xFF2
 35003                           intcon2	equ	0xFF1
 35004                           intcon3	equ	0xFF0
 35005                           indf0	equ	0xFEF
 35006                           postinc0	equ	0xFEE
 35007                           plusw0	equ	0xFEB
 35008                           fsr0h	equ	0xFEA
 35009                           fsr0l	equ	0xFE9
 35010                           wreg	equ	0xFE8
 35011                           indf1	equ	0xFE7
 35012                           postinc1	equ	0xFE6
 35013                           postdec1	equ	0xFE5
 35014                           plusw1	equ	0xFE3
 35015                           fsr1h	equ	0xFE2
 35016                           fsr1l	equ	0xFE1
 35017                           indf2	equ	0xFDF
 35018                           postinc2	equ	0xFDE
 35019                           postdec2	equ	0xFDD
 35020                           plusw2	equ	0xFDB
 35021                           fsr2h	equ	0xFDA
 35022                           fsr2l	equ	0xFD9
 35023                           status	equ	0xFD8
 35024                           
 35025 ;; *************** function _CheckTxStatus *****************
 35026 ;; Defined at:
 35027 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35028 ;; Parameters:    Size  Location     Type
 35029 ;;		None
 35030 ;; Auto vars:     Size  Location     Type
 35031 ;;		None
 35032 ;; Return value:  Size  Location     Type
 35033 ;;                  1    wreg      unsigned char 
 35034 ;; Registers used:
 35035 ;;		wreg, status,2, status,0
 35036 ;; Tracked objects:
 35037 ;;		On entry : 0/0
 35038 ;;		On exit  : 0/0
 35039 ;;		Unchanged: 0/0
 35040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35045 ;;Total ram usage:        0 bytes
 35046 ;; Hardware stack levels used:    1
 35047 ;; Hardware stack levels required when called:   11
 35048 ;; This function calls:
 35049 ;;		Nothing
 35050 ;; This function is called by:
 35051 ;;		_I2c_WriteData
 35052 ;;		_I2c_ReadData
 35053 ;; This function uses a non-reentrant model
 35054 ;;
 35055                           
 35056                           	psect	text167
 35057  00679E                     __ptext167:
 35058                           	opt stack 0
 35059  00679E                     _CheckTxStatus:
 35060                           	opt stack 14
 35061                           
 35062                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 35063                           
 35064                           ;incstack = 0
 35065  00679E  4073               	rrncf	3955,w,c	;volatile
 35066  0067A0  42E8               	rrncf	wreg,f,c
 35067  0067A2  0B3F               	andlw	63
 35068  0067A4  0B01               	andlw	1
 35069  0067A6  0012               	return	
 35070  0067A8                     __end_of_CheckTxStatus:
 35071                           	opt stack 0
 35072                           tosu	equ	0xFFF
 35073                           tosh	equ	0xFFE
 35074                           tosl	equ	0xFFD
 35075                           pclath	equ	0xFFA
 35076                           tblptru	equ	0xFF8
 35077                           tblptrh	equ	0xFF7
 35078                           tblptrl	equ	0xFF6
 35079                           tablat	equ	0xFF5
 35080                           prodh	equ	0xFF4
 35081                           prodl	equ	0xFF3
 35082                           intcon	equ	0xFF2
 35083                           intcon2	equ	0xFF1
 35084                           intcon3	equ	0xFF0
 35085                           indf0	equ	0xFEF
 35086                           postinc0	equ	0xFEE
 35087                           plusw0	equ	0xFEB
 35088                           fsr0h	equ	0xFEA
 35089                           fsr0l	equ	0xFE9
 35090                           wreg	equ	0xFE8
 35091                           indf1	equ	0xFE7
 35092                           postinc1	equ	0xFE6
 35093                           postdec1	equ	0xFE5
 35094                           plusw1	equ	0xFE3
 35095                           fsr1h	equ	0xFE2
 35096                           fsr1l	equ	0xFE1
 35097                           indf2	equ	0xFDF
 35098                           postinc2	equ	0xFDE
 35099                           postdec2	equ	0xFDD
 35100                           plusw2	equ	0xFDB
 35101                           fsr2h	equ	0xFDA
 35102                           fsr2l	equ	0xFD9
 35103                           status	equ	0xFD8
 35104                           
 35105 ;; *************** function _CheckAckStatus *****************
 35106 ;; Defined at:
 35107 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35108 ;; Parameters:    Size  Location     Type
 35109 ;;		None
 35110 ;; Auto vars:     Size  Location     Type
 35111 ;;		None
 35112 ;; Return value:  Size  Location     Type
 35113 ;;                  1    wreg      unsigned char 
 35114 ;; Registers used:
 35115 ;;		wreg, status,2, status,0
 35116 ;; Tracked objects:
 35117 ;;		On entry : 0/0
 35118 ;;		On exit  : 0/0
 35119 ;;		Unchanged: 0/0
 35120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35125 ;;Total ram usage:        0 bytes
 35126 ;; Hardware stack levels used:    1
 35127 ;; Hardware stack levels required when called:   11
 35128 ;; This function calls:
 35129 ;;		Nothing
 35130 ;; This function is called by:
 35131 ;;		_I2c_WriteData
 35132 ;;		_I2c_ReadData
 35133 ;; This function uses a non-reentrant model
 35134 ;;
 35135                           
 35136                           	psect	text168
 35137  0067A8                     __ptext168:
 35138                           	opt stack 0
 35139  0067A8                     _CheckAckStatus:
 35140                           	opt stack 14
 35141                           
 35142                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 35143                           
 35144                           ;incstack = 0
 35145  0067A8  4471               	rlncf	3953,w,c	;volatile
 35146  0067AA  46E8               	rlncf	wreg,f,c
 35147  0067AC  0B03               	andlw	3
 35148  0067AE  0B01               	andlw	1
 35149  0067B0  0012               	return	
 35150  0067B2                     __end_of_CheckAckStatus:
 35151                           	opt stack 0
 35152                           tosu	equ	0xFFF
 35153                           tosh	equ	0xFFE
 35154                           tosl	equ	0xFFD
 35155                           pclath	equ	0xFFA
 35156                           tblptru	equ	0xFF8
 35157                           tblptrh	equ	0xFF7
 35158                           tblptrl	equ	0xFF6
 35159                           tablat	equ	0xFF5
 35160                           prodh	equ	0xFF4
 35161                           prodl	equ	0xFF3
 35162                           intcon	equ	0xFF2
 35163                           intcon2	equ	0xFF1
 35164                           intcon3	equ	0xFF0
 35165                           indf0	equ	0xFEF
 35166                           postinc0	equ	0xFEE
 35167                           plusw0	equ	0xFEB
 35168                           fsr0h	equ	0xFEA
 35169                           fsr0l	equ	0xFE9
 35170                           wreg	equ	0xFE8
 35171                           indf1	equ	0xFE7
 35172                           postinc1	equ	0xFE6
 35173                           postdec1	equ	0xFE5
 35174                           plusw1	equ	0xFE3
 35175                           fsr1h	equ	0xFE2
 35176                           fsr1l	equ	0xFE1
 35177                           indf2	equ	0xFDF
 35178                           postinc2	equ	0xFDE
 35179                           postdec2	equ	0xFDD
 35180                           plusw2	equ	0xFDB
 35181                           fsr2h	equ	0xFDA
 35182                           fsr2l	equ	0xFD9
 35183                           status	equ	0xFD8
 35184                           
 35185 ;; *************** function _LowPriorityIsr *****************
 35186 ;; Defined at:
 35187 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 35188 ;; Parameters:    Size  Location     Type
 35189 ;;		None
 35190 ;; Auto vars:     Size  Location     Type
 35191 ;;		None
 35192 ;; Return value:  Size  Location     Type
 35193 ;;                  1    wreg      void 
 35194 ;; Registers used:
 35195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35196 ;; Tracked objects:
 35197 ;;		On entry : 0/0
 35198 ;;		On exit  : 0/0
 35199 ;;		Unchanged: 0/0
 35200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35203 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35204 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35205 ;;Total ram usage:       21 bytes
 35206 ;; Hardware stack levels used:    1
 35207 ;; Hardware stack levels required when called:   10
 35208 ;; This function calls:
 35209 ;;		_Tmr_Tmr2Isr
 35210 ;; This function is called by:
 35211 ;;		Interrupt level 1
 35212 ;; This function uses a non-reentrant model
 35213 ;;
 35214                           
 35215                           	psect	intcodelo
 35216  000018                     __pintcodelo:
 35217                           	opt stack 0
 35218  000018                     _LowPriorityIsr:
 35219                           	opt stack 8
 35220                           
 35221                           ;incstack = 0
 35222  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 35223  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 35224  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 35225  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 35226  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 35227  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 35228  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 35229  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 35230  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 35231  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 35232  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 35233  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 35234  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 35235  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 35236  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 35237  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 35238  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 35239  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 35240  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 35241  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 35242  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 35243  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 35244                           
 35245                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 35246  00006E  B29E               	btfsc	3998,1,c	;volatile
 35247                           
 35248                           ;irq.c: 259: {
 35249                           ;irq.c: 261: Tmr_Tmr2Isr();
 35250  000070  ECF3  F031         	call	_Tmr_Tmr2Isr	;wreg free
 35251  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 35252  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 35253  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 35254  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 35255  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 35256  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 35257  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 35258  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 35259  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 35260  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 35261  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 35262  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 35263  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 35264  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 35265  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 35266  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 35267  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 35268  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 35269  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 35270  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 35271  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 35272  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 35273  0000CA  0010               	retfie	
 35274  0000CC                     __end_of_LowPriorityIsr:
 35275                           	opt stack 0
 35276                           tosu	equ	0xFFF
 35277                           tosh	equ	0xFFE
 35278                           tosl	equ	0xFFD
 35279                           pclatu	equ	0xFFB
 35280                           pclath	equ	0xFFA
 35281                           tblptru	equ	0xFF8
 35282                           tblptrh	equ	0xFF7
 35283                           tblptrl	equ	0xFF6
 35284                           tablat	equ	0xFF5
 35285                           prodh	equ	0xFF4
 35286                           prodl	equ	0xFF3
 35287                           intcon	equ	0xFF2
 35288                           intcon2	equ	0xFF1
 35289                           intcon3	equ	0xFF0
 35290                           indf0	equ	0xFEF
 35291                           postinc0	equ	0xFEE
 35292                           plusw0	equ	0xFEB
 35293                           fsr0h	equ	0xFEA
 35294                           fsr0l	equ	0xFE9
 35295                           wreg	equ	0xFE8
 35296                           indf1	equ	0xFE7
 35297                           postinc1	equ	0xFE6
 35298                           postdec1	equ	0xFE5
 35299                           plusw1	equ	0xFE3
 35300                           fsr1h	equ	0xFE2
 35301                           fsr1l	equ	0xFE1
 35302                           bsr	equ	0xFE0
 35303                           indf2	equ	0xFDF
 35304                           postinc2	equ	0xFDE
 35305                           postdec2	equ	0xFDD
 35306                           plusw2	equ	0xFDB
 35307                           fsr2h	equ	0xFDA
 35308                           fsr2l	equ	0xFD9
 35309                           status	equ	0xFD8
 35310                           
 35311 ;; *************** function _Tmr_Tmr2Isr *****************
 35312 ;; Defined at:
 35313 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 35314 ;; Parameters:    Size  Location     Type
 35315 ;;		None
 35316 ;; Auto vars:     Size  Location     Type
 35317 ;;		None
 35318 ;; Return value:  Size  Location     Type
 35319 ;;                  1    wreg      void 
 35320 ;; Registers used:
 35321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35322 ;; Tracked objects:
 35323 ;;		On entry : 0/0
 35324 ;;		On exit  : 0/0
 35325 ;;		Unchanged: 0/0
 35326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35331 ;;Total ram usage:        0 bytes
 35332 ;; Hardware stack levels used:    1
 35333 ;; Hardware stack levels required when called:    9
 35334 ;; This function calls:
 35335 ;;		Absolute function
 35336 ;;		_Sch_SchmIntService
 35337 ;; This function is called by:
 35338 ;;		_LowPriorityIsr
 35339 ;; This function uses a non-reentrant model
 35340 ;;
 35341                           
 35342                           	psect	text170
 35343  0063E6                     __ptext170:
 35344                           	opt stack 0
 35345  0063E6                     _Tmr_Tmr2Isr:
 35346                           	opt stack 8
 35347                           
 35348                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 35349                           
 35350                           ;incstack = 0
 35351  0063E6  929E               	bcf	3998,1,c	;volatile
 35352                           
 35353                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 35354  0063E8  0102               	movlb	2	; () banked
 35355  0063EA  51E9               	movf	_Tmr2IsrCallback& (0+255),w,b
 35356  0063EC  11EA               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35357  0063EE  B4D8               	btfsc	status,2,c
 35358  0063F0  0012               	return	
 35359                           
 35360                           ; BSR set to: 2
 35361                           ;tmr_drv.c: 315: {
 35362                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 35363  0063F2  D801               	call	i1u1581_28
 35364  0063F4  0012               	return	
 35365  0063F6                     i1u1581_28:
 35366  0063F6  0005               	push	
 35367  0063F8  6EFA               	movwf	pclath,c
 35368  0063FA  51E9               	movf	_Tmr2IsrCallback& (0+255),w,b
 35369  0063FC  6EFD               	movwf	tosl,c
 35370  0063FE  51EA               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35371  006400  6EFE               	movwf	tosh,c
 35372  006402  50F8               	movf	tblptru,w,c
 35373  006404  6EFF               	movwf	tosu,c
 35374  006406  50FA               	movf	pclath,w,c
 35375  006408  0012               	return		;indir
 35376  00640A                     __end_of_Tmr_Tmr2Isr:
 35377                           	opt stack 0
 35378                           tosu	equ	0xFFF
 35379                           tosh	equ	0xFFE
 35380                           tosl	equ	0xFFD
 35381                           pclatu	equ	0xFFB
 35382                           pclath	equ	0xFFA
 35383                           tblptru	equ	0xFF8
 35384                           tblptrh	equ	0xFF7
 35385                           tblptrl	equ	0xFF6
 35386                           tablat	equ	0xFF5
 35387                           prodh	equ	0xFF4
 35388                           prodl	equ	0xFF3
 35389                           intcon	equ	0xFF2
 35390                           intcon2	equ	0xFF1
 35391                           intcon3	equ	0xFF0
 35392                           indf0	equ	0xFEF
 35393                           postinc0	equ	0xFEE
 35394                           plusw0	equ	0xFEB
 35395                           fsr0h	equ	0xFEA
 35396                           fsr0l	equ	0xFE9
 35397                           wreg	equ	0xFE8
 35398                           indf1	equ	0xFE7
 35399                           postinc1	equ	0xFE6
 35400                           postdec1	equ	0xFE5
 35401                           plusw1	equ	0xFE3
 35402                           fsr1h	equ	0xFE2
 35403                           fsr1l	equ	0xFE1
 35404                           bsr	equ	0xFE0
 35405                           indf2	equ	0xFDF
 35406                           postinc2	equ	0xFDE
 35407                           postdec2	equ	0xFDD
 35408                           plusw2	equ	0xFDB
 35409                           fsr2h	equ	0xFDA
 35410                           fsr2l	equ	0xFD9
 35411                           status	equ	0xFD8
 35412                           
 35413 ;; *************** function _Sch_SchmIntService *****************
 35414 ;; Defined at:
 35415 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35416 ;; Parameters:    Size  Location     Type
 35417 ;;		None
 35418 ;; Auto vars:     Size  Location     Type
 35419 ;;		None
 35420 ;; Return value:  Size  Location     Type
 35421 ;;                  1    wreg      void 
 35422 ;; Registers used:
 35423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35424 ;; Tracked objects:
 35425 ;;		On entry : 0/0
 35426 ;;		On exit  : 0/0
 35427 ;;		Unchanged: 0/0
 35428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35433 ;;Total ram usage:        0 bytes
 35434 ;; Hardware stack levels used:    1
 35435 ;; Hardware stack levels required when called:    8
 35436 ;; This function calls:
 35437 ;;		_OsAlrm_ProcessOsAlarms
 35438 ;;		_UpdateOsCounters
 35439 ;;		_UpdateSchFlag
 35440 ;; This function is called by:
 35441 ;;		_SystemInit
 35442 ;;		_Tmr_Tmr2Isr
 35443 ;; This function uses a non-reentrant model
 35444 ;;
 35445                           
 35446                           	psect	text171
 35447  00674C                     __ptext171:
 35448                           	opt stack 0
 35449  00674C                     _Sch_SchmIntService:
 35450                           	opt stack 8
 35451                           
 35452                           ;os_sched.c: 217: UpdateSchFlag();
 35453                           
 35454                           ;incstack = 0
 35455  00674C  ECB9  F032         	call	_UpdateSchFlag	;wreg free
 35456                           
 35457                           ;os_sched.c: 219: UpdateOsCounters();
 35458  006750  EC96  F033         	call	_UpdateOsCounters	;wreg free
 35459                           
 35460                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 35461  006754  ECAD  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 35462  006758  0012               	return		;funcret
 35463  00675A                     __end_of_Sch_SchmIntService:
 35464                           	opt stack 0
 35465                           tosu	equ	0xFFF
 35466                           tosh	equ	0xFFE
 35467                           tosl	equ	0xFFD
 35468                           pclatu	equ	0xFFB
 35469                           pclath	equ	0xFFA
 35470                           tblptru	equ	0xFF8
 35471                           tblptrh	equ	0xFF7
 35472                           tblptrl	equ	0xFF6
 35473                           tablat	equ	0xFF5
 35474                           prodh	equ	0xFF4
 35475                           prodl	equ	0xFF3
 35476                           intcon	equ	0xFF2
 35477                           intcon2	equ	0xFF1
 35478                           intcon3	equ	0xFF0
 35479                           indf0	equ	0xFEF
 35480                           postinc0	equ	0xFEE
 35481                           plusw0	equ	0xFEB
 35482                           fsr0h	equ	0xFEA
 35483                           fsr0l	equ	0xFE9
 35484                           wreg	equ	0xFE8
 35485                           indf1	equ	0xFE7
 35486                           postinc1	equ	0xFE6
 35487                           postdec1	equ	0xFE5
 35488                           plusw1	equ	0xFE3
 35489                           fsr1h	equ	0xFE2
 35490                           fsr1l	equ	0xFE1
 35491                           bsr	equ	0xFE0
 35492                           indf2	equ	0xFDF
 35493                           postinc2	equ	0xFDE
 35494                           postdec2	equ	0xFDD
 35495                           plusw2	equ	0xFDB
 35496                           fsr2h	equ	0xFDA
 35497                           fsr2l	equ	0xFD9
 35498                           status	equ	0xFD8
 35499                           
 35500 ;; *************** function _UpdateSchFlag *****************
 35501 ;; Defined at:
 35502 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35503 ;; Parameters:    Size  Location     Type
 35504 ;;		None
 35505 ;; Auto vars:     Size  Location     Type
 35506 ;;		None
 35507 ;; Return value:  Size  Location     Type
 35508 ;;                  1    wreg      void 
 35509 ;; Registers used:
 35510 ;;		wreg, status,2, status,0
 35511 ;; Tracked objects:
 35512 ;;		On entry : 0/0
 35513 ;;		On exit  : 0/0
 35514 ;;		Unchanged: 0/0
 35515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35520 ;;Total ram usage:        0 bytes
 35521 ;; Hardware stack levels used:    1
 35522 ;; Hardware stack levels required when called:    4
 35523 ;; This function calls:
 35524 ;;		Nothing
 35525 ;; This function is called by:
 35526 ;;		_Sch_SchmIntService
 35527 ;; This function uses a non-reentrant model
 35528 ;;
 35529                           
 35530                           	psect	text172
 35531  006572                     __ptext172:
 35532                           	opt stack 0
 35533  006572                     _UpdateSchFlag:
 35534                           	opt stack 11
 35535                           
 35536                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 35537                           ;os_sched.c: 138: InterruptCounter++;
 35538                           
 35539                           ;incstack = 0
 35540  006572  0102               	movlb	2	; () banked
 35541  006574  4BDB               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 35542  006576  2BDC               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 35543                           
 35544                           ; BSR set to: 2
 35545                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 35546  006578  51DB               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 35547  00657A  11DC               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 35548  00657C  B4D8               	btfsc	status,2,c
 35549  00657E  0012               	return	
 35550                           
 35551                           ; BSR set to: 2
 35552                           ;os_sched.c: 141: {
 35553                           ;os_sched.c: 143: InterruptCounter = 0;
 35554  006580  0E00               	movlw	0
 35555  006582  6FDC               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 35556  006584  0E00               	movlw	0
 35557  006586  6FDB               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 35558                           
 35559                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 35560  006588  0E00               	movlw	0
 35561  00658A  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 35562  00658C  0012               	return	
 35563  00658E                     __end_of_UpdateSchFlag:
 35564                           	opt stack 0
 35565                           tosu	equ	0xFFF
 35566                           tosh	equ	0xFFE
 35567                           tosl	equ	0xFFD
 35568                           pclatu	equ	0xFFB
 35569                           pclath	equ	0xFFA
 35570                           tblptru	equ	0xFF8
 35571                           tblptrh	equ	0xFF7
 35572                           tblptrl	equ	0xFF6
 35573                           tablat	equ	0xFF5
 35574                           prodh	equ	0xFF4
 35575                           prodl	equ	0xFF3
 35576                           intcon	equ	0xFF2
 35577                           intcon2	equ	0xFF1
 35578                           intcon3	equ	0xFF0
 35579                           indf0	equ	0xFEF
 35580                           postinc0	equ	0xFEE
 35581                           plusw0	equ	0xFEB
 35582                           fsr0h	equ	0xFEA
 35583                           fsr0l	equ	0xFE9
 35584                           wreg	equ	0xFE8
 35585                           indf1	equ	0xFE7
 35586                           postinc1	equ	0xFE6
 35587                           postdec1	equ	0xFE5
 35588                           plusw1	equ	0xFE3
 35589                           fsr1h	equ	0xFE2
 35590                           fsr1l	equ	0xFE1
 35591                           bsr	equ	0xFE0
 35592                           indf2	equ	0xFDF
 35593                           postinc2	equ	0xFDE
 35594                           postdec2	equ	0xFDD
 35595                           plusw2	equ	0xFDB
 35596                           fsr2h	equ	0xFDA
 35597                           fsr2l	equ	0xFD9
 35598                           status	equ	0xFD8
 35599                           
 35600 ;; *************** function _UpdateOsCounters *****************
 35601 ;; Defined at:
 35602 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35603 ;; Parameters:    Size  Location     Type
 35604 ;;		None
 35605 ;; Auto vars:     Size  Location     Type
 35606 ;;		None
 35607 ;; Return value:  Size  Location     Type
 35608 ;;                  1    wreg      void 
 35609 ;; Registers used:
 35610 ;;		wreg, status,2, status,0
 35611 ;; Tracked objects:
 35612 ;;		On entry : 0/0
 35613 ;;		On exit  : 0/0
 35614 ;;		Unchanged: 0/0
 35615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35620 ;;Total ram usage:        0 bytes
 35621 ;; Hardware stack levels used:    1
 35622 ;; Hardware stack levels required when called:    4
 35623 ;; This function calls:
 35624 ;;		Nothing
 35625 ;; This function is called by:
 35626 ;;		_Sch_SchmIntService
 35627 ;; This function uses a non-reentrant model
 35628 ;;
 35629                           
 35630                           	psect	text173
 35631  00672C                     __ptext173:
 35632                           	opt stack 0
 35633  00672C                     _UpdateOsCounters:
 35634                           	opt stack 11
 35635                           
 35636                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 35637                           
 35638                           ; BSR set to: 2
 35639                           ;incstack = 0
 35640  00672C  0E01               	movlw	1
 35641  00672E  0103               	movlb	3	; () banked
 35642  006730  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 35643  006732  0E00               	movlw	0
 35644  006734  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 35645  006736  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 35646  006738  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 35647                           
 35648                           ; BSR set to: 3
 35649  00673A  0012               	return		;funcret
 35650  00673C                     __end_of_UpdateOsCounters:
 35651                           	opt stack 0
 35652                           tosu	equ	0xFFF
 35653                           tosh	equ	0xFFE
 35654                           tosl	equ	0xFFD
 35655                           pclatu	equ	0xFFB
 35656                           pclath	equ	0xFFA
 35657                           tblptru	equ	0xFF8
 35658                           tblptrh	equ	0xFF7
 35659                           tblptrl	equ	0xFF6
 35660                           tablat	equ	0xFF5
 35661                           prodh	equ	0xFF4
 35662                           prodl	equ	0xFF3
 35663                           intcon	equ	0xFF2
 35664                           intcon2	equ	0xFF1
 35665                           intcon3	equ	0xFF0
 35666                           indf0	equ	0xFEF
 35667                           postinc0	equ	0xFEE
 35668                           plusw0	equ	0xFEB
 35669                           fsr0h	equ	0xFEA
 35670                           fsr0l	equ	0xFE9
 35671                           wreg	equ	0xFE8
 35672                           indf1	equ	0xFE7
 35673                           postinc1	equ	0xFE6
 35674                           postdec1	equ	0xFE5
 35675                           plusw1	equ	0xFE3
 35676                           fsr1h	equ	0xFE2
 35677                           fsr1l	equ	0xFE1
 35678                           bsr	equ	0xFE0
 35679                           indf2	equ	0xFDF
 35680                           postinc2	equ	0xFDE
 35681                           postdec2	equ	0xFDD
 35682                           plusw2	equ	0xFDB
 35683                           fsr2h	equ	0xFDA
 35684                           fsr2l	equ	0xFD9
 35685                           status	equ	0xFD8
 35686                           
 35687 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 35688 ;; Defined at:
 35689 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 35690 ;; Parameters:    Size  Location     Type
 35691 ;;		None
 35692 ;; Auto vars:     Size  Location     Type
 35693 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 35694 ;; Return value:  Size  Location     Type
 35695 ;;                  1    wreg      void 
 35696 ;; Registers used:
 35697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35698 ;; Tracked objects:
 35699 ;;		On entry : 0/0
 35700 ;;		On exit  : 0/0
 35701 ;;		Unchanged: 0/0
 35702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35705 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35706 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35707 ;;Total ram usage:       10 bytes
 35708 ;; Hardware stack levels used:    1
 35709 ;; Hardware stack levels required when called:    7
 35710 ;; This function calls:
 35711 ;;		_I2cDummyTx
 35712 ;;		_OsAlrm_ClearOsAlarm
 35713 ;;		i1___wmul
 35714 ;; This function is called by:
 35715 ;;		_Sch_SchmIntService
 35716 ;; This function uses a non-reentrant model
 35717 ;;
 35718                           
 35719                           	psect	text174
 35720  00255A                     __ptext174:
 35721                           	opt stack 0
 35722  00255A                     _OsAlrm_ProcessOsAlarms:
 35723                           	opt stack 8
 35724                           
 35725                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 35726                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 35727                           
 35728                           ; BSR set to: 3
 35729                           ;incstack = 0
 35730  00255A  0E00               	movlw	0
 35731  00255C  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 35732  00255E  0E00               	movlw	0
 35733  002560  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 35734  002562  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 35735  002564  E105               	bnz	i1u1542_20
 35736  002566  0E14               	movlw	20
 35737  002568  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 35738  00256A  B0D8               	btfsc	status,0,c
 35739  00256C  0012               	return	
 35740  00256E  D001               	goto	i1l742
 35741  002570                     i1u1542_20:
 35742  002570  0012               	return	
 35743  002572                     i1l742:
 35744                           
 35745                           ;os_alarms.c: 121: {
 35746                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 35747  002572  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35748  002576  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35749  00257A  0E00               	movlw	0
 35750  00257C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35751  00257E  0E0B               	movlw	11
 35752  002580  6E1B               	movwf	i1___wmul@multiplicand,c
 35753  002582  ECAA  F031         	call	i1___wmul	;wreg free
 35754  002586  0E00               	movlw	low _OsAlarms
 35755  002588  2419               	addwf	?i1___wmul,w,c
 35756  00258A  6ED9               	movwf	fsr2l,c
 35757  00258C  0E06               	movlw	high _OsAlarms
 35758  00258E  201A               	addwfc	?i1___wmul+1,w,c
 35759  002590  6EDA               	movwf	fsr2h,c
 35760  002592  04DE               	decf	postinc2,w,c
 35761  002594  A4D8               	btfss	status,2,c
 35762  002596  D086               	goto	i1u1546_29
 35763                           
 35764                           ;os_alarms.c: 124: {
 35765                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 35766  002598  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35767  00259C  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35768  0025A0  0E00               	movlw	0
 35769  0025A2  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35770  0025A4  0E0B               	movlw	11
 35771  0025A6  6E1B               	movwf	i1___wmul@multiplicand,c
 35772  0025A8  ECAA  F031         	call	i1___wmul	;wreg free
 35773  0025AC  0E01               	movlw	1
 35774  0025AE  2619               	addwf	?i1___wmul,f,c
 35775  0025B0  0E00               	movlw	0
 35776  0025B2  221A               	addwfc	?i1___wmul+1,f,c
 35777  0025B4  0E00               	movlw	low _OsAlarms
 35778  0025B6  2419               	addwf	?i1___wmul,w,c
 35779  0025B8  6ED9               	movwf	fsr2l,c
 35780  0025BA  0E06               	movlw	high _OsAlarms
 35781  0025BC  201A               	addwfc	?i1___wmul+1,w,c
 35782  0025BE  6EDA               	movwf	fsr2h,c
 35783  0025C0  2ADE               	incf	postinc2,f,c
 35784  0025C2  0E00               	movlw	0
 35785  0025C4  22DE               	addwfc	postinc2,f,c
 35786  0025C6  22DE               	addwfc	postinc2,f,c
 35787  0025C8  22DE               	addwfc	postinc2,f,c
 35788                           
 35789                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 35790  0025CA  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35791  0025CE  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35792  0025D2  0E00               	movlw	0
 35793  0025D4  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35794  0025D6  0E0B               	movlw	11
 35795  0025D8  6E1B               	movwf	i1___wmul@multiplicand,c
 35796  0025DA  ECAA  F031         	call	i1___wmul	;wreg free
 35797  0025DE  0E05               	movlw	5
 35798  0025E0  2619               	addwf	?i1___wmul,f,c
 35799  0025E2  0E00               	movlw	0
 35800  0025E4  221A               	addwfc	?i1___wmul+1,f,c
 35801  0025E6  0E00               	movlw	low _OsAlarms
 35802  0025E8  2419               	addwf	?i1___wmul,w,c
 35803  0025EA  6ED9               	movwf	fsr2l,c
 35804  0025EC  0E06               	movlw	high _OsAlarms
 35805  0025EE  201A               	addwfc	?i1___wmul+1,w,c
 35806  0025F0  6EDA               	movwf	fsr2h,c
 35807  0025F2  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35808  0025F6  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35809  0025FA  0E00               	movlw	0
 35810  0025FC  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35811  0025FE  0E0B               	movlw	11
 35812  002600  6E1B               	movwf	i1___wmul@multiplicand,c
 35813  002602  ECAA  F031         	call	i1___wmul	;wreg free
 35814  002606  0E01               	movlw	1
 35815  002608  2619               	addwf	?i1___wmul,f,c
 35816  00260A  0E00               	movlw	0
 35817  00260C  221A               	addwfc	?i1___wmul+1,f,c
 35818  00260E  0E00               	movlw	low _OsAlarms
 35819  002610  2419               	addwf	?i1___wmul,w,c
 35820  002612  6EE1               	movwf	fsr1l,c
 35821  002614  0E06               	movlw	high _OsAlarms
 35822  002616  201A               	addwfc	?i1___wmul+1,w,c
 35823  002618  6EE2               	movwf	fsr1h,c
 35824  00261A  50DE               	movf	postinc2,w,c
 35825  00261C  5CE6               	subwf	postinc1,w,c
 35826  00261E  50DE               	movf	postinc2,w,c
 35827  002620  58E6               	subwfb	postinc1,w,c
 35828  002622  50DE               	movf	postinc2,w,c
 35829  002624  58E6               	subwfb	postinc1,w,c
 35830  002626  50DE               	movf	postinc2,w,c
 35831  002628  58E6               	subwfb	postinc1,w,c
 35832  00262A  A0D8               	btfss	status,0,c
 35833  00262C  D03B               	goto	i1u1546_29
 35834                           
 35835                           ;os_alarms.c: 129: {
 35836                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 35837  00262E  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 35838  002630  EC7E  F02B         	call	_OsAlrm_ClearOsAlarm
 35839                           
 35840                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 35841  002634  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35842  002638  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35843  00263C  0E00               	movlw	0
 35844  00263E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35845  002640  0E0B               	movlw	11
 35846  002642  6E1B               	movwf	i1___wmul@multiplicand,c
 35847  002644  ECAA  F031         	call	i1___wmul	;wreg free
 35848  002648  0E09               	movlw	9
 35849  00264A  2619               	addwf	?i1___wmul,f,c
 35850  00264C  0E00               	movlw	0
 35851  00264E  221A               	addwfc	?i1___wmul+1,f,c
 35852  002650  0E00               	movlw	low _OsAlarms
 35853  002652  2419               	addwf	?i1___wmul,w,c
 35854  002654  6ED9               	movwf	fsr2l,c
 35855  002656  0E06               	movlw	high _OsAlarms
 35856  002658  201A               	addwfc	?i1___wmul+1,w,c
 35857  00265A  6EDA               	movwf	fsr2h,c
 35858  00265C  50DE               	movf	postinc2,w,c
 35859  00265E  10DE               	iorwf	postinc2,w,c
 35860  002660  B4D8               	btfsc	status,2,c
 35861  002662  D020               	goto	i1u1546_29
 35862                           
 35863                           ;os_alarms.c: 134: {
 35864                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 35865  002664  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 35866  002668  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 35867  00266C  0E00               	movlw	0
 35868  00266E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 35869  002670  0E0B               	movlw	11
 35870  002672  6E1B               	movwf	i1___wmul@multiplicand,c
 35871  002674  ECAA  F031         	call	i1___wmul	;wreg free
 35872  002678  0E09               	movlw	9
 35873  00267A  2619               	addwf	?i1___wmul,f,c
 35874  00267C  0E00               	movlw	0
 35875  00267E  221A               	addwfc	?i1___wmul+1,f,c
 35876  002680  0E00               	movlw	low _OsAlarms
 35877  002682  2419               	addwf	?i1___wmul,w,c
 35878  002684  6ED9               	movwf	fsr2l,c
 35879  002686  0E06               	movlw	high _OsAlarms
 35880  002688  201A               	addwfc	?i1___wmul+1,w,c
 35881  00268A  6EDA               	movwf	fsr2h,c
 35882  00268C  D801               	call	i1u1546_28
 35883  00268E  D00A               	goto	i1u1546_29
 35884  002690                     i1u1546_28:
 35885  002690  0005               	push	
 35886  002692  6EFA               	movwf	pclath,c
 35887  002694  50DE               	movf	postinc2,w,c
 35888  002696  6EFD               	movwf	tosl,c
 35889  002698  50DE               	movf	postinc2,w,c
 35890  00269A  6EFE               	movwf	tosh,c
 35891  00269C  50F8               	movf	tblptru,w,c
 35892  00269E  6EFF               	movwf	tosu,c
 35893  0026A0  50FA               	movf	pclath,w,c
 35894  0026A2  0012               	return		;indir
 35895  0026A4                     i1u1546_29:
 35896  0026A4  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 35897  0026A6  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 35898  0026A8  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 35899  0026AA  E101               	bnz	i1l747
 35900  0026AC  D75C               	goto	L77
 35901  0026AE                     i1l747:
 35902  0026AE  0012               	return		;funcret
 35903  0026B0                     __end_of_OsAlrm_ProcessOsAlarms:
 35904                           	opt stack 0
 35905                           tosu	equ	0xFFF
 35906                           tosh	equ	0xFFE
 35907                           tosl	equ	0xFFD
 35908                           pclatu	equ	0xFFB
 35909                           pclath	equ	0xFFA
 35910                           tblptru	equ	0xFF8
 35911                           tblptrh	equ	0xFF7
 35912                           tblptrl	equ	0xFF6
 35913                           tablat	equ	0xFF5
 35914                           prodh	equ	0xFF4
 35915                           prodl	equ	0xFF3
 35916                           intcon	equ	0xFF2
 35917                           intcon2	equ	0xFF1
 35918                           intcon3	equ	0xFF0
 35919                           indf0	equ	0xFEF
 35920                           postinc0	equ	0xFEE
 35921                           plusw0	equ	0xFEB
 35922                           fsr0h	equ	0xFEA
 35923                           fsr0l	equ	0xFE9
 35924                           wreg	equ	0xFE8
 35925                           indf1	equ	0xFE7
 35926                           postinc1	equ	0xFE6
 35927                           postdec1	equ	0xFE5
 35928                           plusw1	equ	0xFE3
 35929                           fsr1h	equ	0xFE2
 35930                           fsr1l	equ	0xFE1
 35931                           bsr	equ	0xFE0
 35932                           indf2	equ	0xFDF
 35933                           postinc2	equ	0xFDE
 35934                           postdec2	equ	0xFDD
 35935                           plusw2	equ	0xFDB
 35936                           fsr2h	equ	0xFDA
 35937                           fsr2l	equ	0xFD9
 35938                           status	equ	0xFD8
 35939                           
 35940 ;; *************** function i1___wmul *****************
 35941 ;; Defined at:
 35942 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 35943 ;; Parameters:    Size  Location     Type
 35944 ;;  multiplier      2   24[COMRAM] unsigned int 
 35945 ;;  multiplicand    2   26[COMRAM] unsigned int 
 35946 ;; Auto vars:     Size  Location     Type
 35947 ;;  __wmul          2   28[COMRAM] unsigned int 
 35948 ;; Return value:  Size  Location     Type
 35949 ;;                  2   24[COMRAM] unsigned int 
 35950 ;; Registers used:
 35951 ;;		wreg, status,2, status,0, prodl, prodh
 35952 ;; Tracked objects:
 35953 ;;		On entry : 0/0
 35954 ;;		On exit  : 0/0
 35955 ;;		Unchanged: 0/0
 35956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35958 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35960 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35961 ;;Total ram usage:        6 bytes
 35962 ;; Hardware stack levels used:    1
 35963 ;; Hardware stack levels required when called:    4
 35964 ;; This function calls:
 35965 ;;		Nothing
 35966 ;; This function is called by:
 35967 ;;		_OsAlrm_ProcessOsAlarms
 35968 ;; This function uses a non-reentrant model
 35969 ;;
 35970                           
 35971                           	psect	text175
 35972  006354                     __ptext175:
 35973                           	opt stack 0
 35974  006354                     i1___wmul:
 35975                           	opt stack 10
 35976                           
 35977                           ;incstack = 0
 35978  006354  5019               	movf	i1___wmul@multiplier,w,c
 35979  006356  021B               	mulwf	i1___wmul@multiplicand,c
 35980  006358  CFF3 F01D          	movff	prodl,i1___wmul@product
 35981  00635C  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 35982  006360  5019               	movf	i1___wmul@multiplier,w,c
 35983  006362  021C               	mulwf	i1___wmul@multiplicand+1,c
 35984  006364  50F3               	movf	prodl,w,c
 35985  006366  261E               	addwf	i1___wmul@product+1,f,c
 35986  006368  501A               	movf	i1___wmul@multiplier+1,w,c
 35987  00636A  021B               	mulwf	i1___wmul@multiplicand,c
 35988  00636C  50F3               	movf	prodl,w,c
 35989  00636E  261E               	addwf	i1___wmul@product+1,f,c
 35990  006370  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 35991  006374  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 35992  006378  0012               	return	
 35993  00637A                     __end_ofi1___wmul:
 35994                           	opt stack 0
 35995                           tosu	equ	0xFFF
 35996                           tosh	equ	0xFFE
 35997                           tosl	equ	0xFFD
 35998                           pclatu	equ	0xFFB
 35999                           pclath	equ	0xFFA
 36000                           tblptru	equ	0xFF8
 36001                           tblptrh	equ	0xFF7
 36002                           tblptrl	equ	0xFF6
 36003                           tablat	equ	0xFF5
 36004                           prodh	equ	0xFF4
 36005                           prodl	equ	0xFF3
 36006                           intcon	equ	0xFF2
 36007                           intcon2	equ	0xFF1
 36008                           intcon3	equ	0xFF0
 36009                           indf0	equ	0xFEF
 36010                           postinc0	equ	0xFEE
 36011                           plusw0	equ	0xFEB
 36012                           fsr0h	equ	0xFEA
 36013                           fsr0l	equ	0xFE9
 36014                           wreg	equ	0xFE8
 36015                           indf1	equ	0xFE7
 36016                           postinc1	equ	0xFE6
 36017                           postdec1	equ	0xFE5
 36018                           plusw1	equ	0xFE3
 36019                           fsr1h	equ	0xFE2
 36020                           fsr1l	equ	0xFE1
 36021                           bsr	equ	0xFE0
 36022                           indf2	equ	0xFDF
 36023                           postinc2	equ	0xFDE
 36024                           postdec2	equ	0xFDD
 36025                           plusw2	equ	0xFDB
 36026                           fsr2h	equ	0xFDA
 36027                           fsr2l	equ	0xFD9
 36028                           status	equ	0xFD8
 36029                           
 36030 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 36031 ;; Defined at:
 36032 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 36033 ;; Parameters:    Size  Location     Type
 36034 ;;  OsAlarmId       1    wreg     unsigned char 
 36035 ;; Auto vars:     Size  Location     Type
 36036 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 36037 ;; Return value:  Size  Location     Type
 36038 ;;                  1    wreg      void 
 36039 ;; Registers used:
 36040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36041 ;; Tracked objects:
 36042 ;;		On entry : 0/0
 36043 ;;		On exit  : 0/0
 36044 ;;		Unchanged: 0/0
 36045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36050 ;;Total ram usage:        1 bytes
 36051 ;; Hardware stack levels used:    1
 36052 ;; Hardware stack levels required when called:    4
 36053 ;; This function calls:
 36054 ;;		Nothing
 36055 ;; This function is called by:
 36056 ;;		_OsAlrm_ProcessOsAlarms
 36057 ;; This function uses a non-reentrant model
 36058 ;;
 36059                           
 36060                           	psect	text176
 36061  0056FC                     __ptext176:
 36062                           	opt stack 0
 36063  0056FC                     _OsAlrm_ClearOsAlarm:
 36064                           	opt stack 10
 36065                           
 36066                           ;incstack = 0
 36067                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 36068  0056FC  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 36069                           
 36070                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 36071  0056FE  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36072  005700  0D0B               	mullw	11
 36073  005702  0E00               	movlw	low _OsAlarms
 36074  005704  24F3               	addwf	prodl,w,c
 36075  005706  6ED9               	movwf	fsr2l,c
 36076  005708  0E06               	movlw	high _OsAlarms
 36077  00570A  20F4               	addwfc	prodh,w,c
 36078  00570C  6EDA               	movwf	fsr2h,c
 36079  00570E  0E00               	movlw	0
 36080  005710  6EDF               	movwf	indf2,c
 36081                           
 36082                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 36083  005712  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36084  005714  0D0B               	mullw	11
 36085  005716  0E01               	movlw	1
 36086  005718  26F3               	addwf	prodl,f,c
 36087  00571A  0E00               	movlw	0
 36088  00571C  22F4               	addwfc	prodh,f,c
 36089  00571E  0E00               	movlw	low _OsAlarms
 36090  005720  24F3               	addwf	prodl,w,c
 36091  005722  6ED9               	movwf	fsr2l,c
 36092  005724  0E06               	movlw	high _OsAlarms
 36093  005726  20F4               	addwfc	prodh,w,c
 36094  005728  6EDA               	movwf	fsr2h,c
 36095  00572A  6ADE               	clrf	postinc2,c
 36096  00572C  6ADE               	clrf	postinc2,c
 36097  00572E  6ADE               	clrf	postinc2,c
 36098  005730  6ADD               	clrf	postdec2,c
 36099                           
 36100                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 36101  005732  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36102  005734  0D0B               	mullw	11
 36103  005736  0E05               	movlw	5
 36104  005738  26F3               	addwf	prodl,f,c
 36105  00573A  0E00               	movlw	0
 36106  00573C  22F4               	addwfc	prodh,f,c
 36107  00573E  0E00               	movlw	low _OsAlarms
 36108  005740  24F3               	addwf	prodl,w,c
 36109  005742  6ED9               	movwf	fsr2l,c
 36110  005744  0E06               	movlw	high _OsAlarms
 36111  005746  20F4               	addwfc	prodh,w,c
 36112  005748  6EDA               	movwf	fsr2h,c
 36113  00574A  6ADE               	clrf	postinc2,c
 36114  00574C  6ADE               	clrf	postinc2,c
 36115  00574E  6ADE               	clrf	postinc2,c
 36116  005750  6ADD               	clrf	postdec2,c
 36117  005752  0012               	return		;funcret
 36118  005754                     __end_of_OsAlrm_ClearOsAlarm:
 36119                           	opt stack 0
 36120                           tosu	equ	0xFFF
 36121                           tosh	equ	0xFFE
 36122                           tosl	equ	0xFFD
 36123                           pclatu	equ	0xFFB
 36124                           pclath	equ	0xFFA
 36125                           tblptru	equ	0xFF8
 36126                           tblptrh	equ	0xFF7
 36127                           tblptrl	equ	0xFF6
 36128                           tablat	equ	0xFF5
 36129                           prodh	equ	0xFF4
 36130                           prodl	equ	0xFF3
 36131                           intcon	equ	0xFF2
 36132                           intcon2	equ	0xFF1
 36133                           intcon3	equ	0xFF0
 36134                           indf0	equ	0xFEF
 36135                           postinc0	equ	0xFEE
 36136                           plusw0	equ	0xFEB
 36137                           fsr0h	equ	0xFEA
 36138                           fsr0l	equ	0xFE9
 36139                           wreg	equ	0xFE8
 36140                           indf1	equ	0xFE7
 36141                           postinc1	equ	0xFE6
 36142                           postdec1	equ	0xFE5
 36143                           plusw1	equ	0xFE3
 36144                           fsr1h	equ	0xFE2
 36145                           fsr1l	equ	0xFE1
 36146                           bsr	equ	0xFE0
 36147                           indf2	equ	0xFDF
 36148                           postinc2	equ	0xFDE
 36149                           postdec2	equ	0xFDD
 36150                           plusw2	equ	0xFDB
 36151                           fsr2h	equ	0xFDA
 36152                           fsr2l	equ	0xFD9
 36153                           status	equ	0xFD8
 36154                           
 36155 ;; *************** function _I2cDummyTx *****************
 36156 ;; Defined at:
 36157 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36158 ;; Parameters:    Size  Location     Type
 36159 ;;		None
 36160 ;; Auto vars:     Size  Location     Type
 36161 ;;		None
 36162 ;; Return value:  Size  Location     Type
 36163 ;;                  1    wreg      void 
 36164 ;; Registers used:
 36165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36166 ;; Tracked objects:
 36167 ;;		On entry : 0/0
 36168 ;;		On exit  : 0/0
 36169 ;;		Unchanged: 0/0
 36170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36175 ;;Total ram usage:        0 bytes
 36176 ;; Hardware stack levels used:    1
 36177 ;; Hardware stack levels required when called:    6
 36178 ;; This function calls:
 36179 ;;		i1_I2cSlv_SendI2cMsg
 36180 ;; This function is called by:
 36181 ;;		_I2cSlv_MainTask
 36182 ;;		_OsAlrm_ProcessOsAlarms
 36183 ;; This function uses a non-reentrant model
 36184 ;;
 36185                           
 36186                           	psect	text177
 36187  00658E                     __ptext177:
 36188                           	opt stack 0
 36189  00658E                     _I2cDummyTx:
 36190                           	opt stack 8
 36191                           
 36192                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 36193                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 36194                           
 36195                           ;incstack = 0
 36196  00658E  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 36197  006590  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 36198  006592  0E01               	movlw	high I2cDummyTx@DummyBuffer
 36199  006594  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 36200  006596  0E00               	movlw	0
 36201  006598  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 36202  00659A  0E01               	movlw	1
 36203  00659C  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 36204  00659E  EC16  F030         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 36205                           
 36206                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 36207  0065A2  0E01               	movlw	1
 36208  0065A4  0101               	movlb	1	; () banked
 36209  0065A6  6FE8               	movwf	_I2cBusStatus& (0+255),b
 36210                           
 36211                           ; BSR set to: 1
 36212  0065A8  0012               	return		;funcret
 36213  0065AA                     __end_of_I2cDummyTx:
 36214                           	opt stack 0
 36215                           tosu	equ	0xFFF
 36216                           tosh	equ	0xFFE
 36217                           tosl	equ	0xFFD
 36218                           pclatu	equ	0xFFB
 36219                           pclath	equ	0xFFA
 36220                           tblptru	equ	0xFF8
 36221                           tblptrh	equ	0xFF7
 36222                           tblptrl	equ	0xFF6
 36223                           tablat	equ	0xFF5
 36224                           prodh	equ	0xFF4
 36225                           prodl	equ	0xFF3
 36226                           intcon	equ	0xFF2
 36227                           intcon2	equ	0xFF1
 36228                           intcon3	equ	0xFF0
 36229                           indf0	equ	0xFEF
 36230                           postinc0	equ	0xFEE
 36231                           plusw0	equ	0xFEB
 36232                           fsr0h	equ	0xFEA
 36233                           fsr0l	equ	0xFE9
 36234                           wreg	equ	0xFE8
 36235                           indf1	equ	0xFE7
 36236                           postinc1	equ	0xFE6
 36237                           postdec1	equ	0xFE5
 36238                           plusw1	equ	0xFE3
 36239                           fsr1h	equ	0xFE2
 36240                           fsr1l	equ	0xFE1
 36241                           bsr	equ	0xFE0
 36242                           indf2	equ	0xFDF
 36243                           postinc2	equ	0xFDE
 36244                           postdec2	equ	0xFDD
 36245                           plusw2	equ	0xFDB
 36246                           fsr2h	equ	0xFDA
 36247                           fsr2l	equ	0xFD9
 36248                           status	equ	0xFD8
 36249                           
 36250 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 36251 ;; Defined at:
 36252 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36253 ;; Parameters:    Size  Location     Type
 36254 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 36255 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 36256 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 36257 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 36258 ;;  DataLenght      1   30[COMRAM] unsigned char 
 36259 ;; Auto vars:     Size  Location     Type
 36260 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 36261 ;; Return value:  Size  Location     Type
 36262 ;;                  1    wreg      unsigned char 
 36263 ;; Registers used:
 36264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36265 ;; Tracked objects:
 36266 ;;		On entry : 0/0
 36267 ;;		On exit  : 0/0
 36268 ;;		Unchanged: 0/0
 36269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36273 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36274 ;;Total ram usage:        5 bytes
 36275 ;; Hardware stack levels used:    1
 36276 ;; Hardware stack levels required when called:    5
 36277 ;; This function calls:
 36278 ;;		i1_GenerateEvt
 36279 ;; This function is called by:
 36280 ;;		_I2cDummyTx
 36281 ;; This function uses a non-reentrant model
 36282 ;;
 36283                           
 36284                           	psect	text178
 36285  00602C                     __ptext178:
 36286                           	opt stack 0
 36287  00602C                     i1_I2cSlv_SendI2cMsg:
 36288                           	opt stack 8
 36289                           
 36290                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 36291                           
 36292                           ; BSR set to: 1
 36293                           ;incstack = 0
 36294  00602C  0E00               	movlw	0
 36295  00602E  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36296                           
 36297                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 36298  006030  0100               	movlb	0	; () banked
 36299  006032  05CE               	decf	_I2cComSts& (0+255),w,b
 36300  006034  B4D8               	btfsc	status,2,c
 36301  006036  D014               	goto	i1l1409
 36302                           
 36303                           ; BSR set to: 0
 36304                           ;i2c_slv.c: 257: {
 36305                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 36306  006038  C01E  F399         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 36307                           
 36308                           ; BSR set to: 0
 36309                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 36310  00603C  0E00               	movlw	0
 36311  00603E  0103               	movlb	3	; () banked
 36312  006040  6F9A               	movwf	(_I2cTxPacket+1)& (0+255),b
 36313                           
 36314                           ; BSR set to: 3
 36315                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 36316  006042  C01F  F39D         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 36317                           
 36318                           ; BSR set to: 3
 36319                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 36320  006046  C01C  F39B         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 36321  00604A  C01D  F39C         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 36322                           
 36323                           ; BSR set to: 3
 36324                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 36325  00604E  0ED8               	movlw	low _I2cWriteDataEvt
 36326  006050  6E19               	movwf	i1GenerateEvt@Event,c
 36327  006052  0E00               	movlw	high _I2cWriteDataEvt
 36328  006054  6E1A               	movwf	i1GenerateEvt@Event+1,c
 36329  006056  EC43  F033         	call	i1_GenerateEvt	;wreg free
 36330                           
 36331                           ;i2c_slv.c: 267: TxSts = 1u;
 36332  00605A  0E01               	movlw	1
 36333  00605C  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36334                           
 36335                           ;i2c_slv.c: 268: }
 36336  00605E  0012               	return	
 36337  006060                     i1l1409:
 36338                           
 36339                           ;i2c_slv.c: 269: else
 36340                           ;i2c_slv.c: 270: {
 36341                           ;i2c_slv.c: 272: TxSts = 0u;
 36342  006060  0E00               	movlw	0
 36343  006062  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36344  006064  0012               	return	
 36345  006066                     __end_ofi1_I2cSlv_SendI2cMsg:
 36346                           	opt stack 0
 36347                           tosu	equ	0xFFF
 36348                           tosh	equ	0xFFE
 36349                           tosl	equ	0xFFD
 36350                           pclatu	equ	0xFFB
 36351                           pclath	equ	0xFFA
 36352                           tblptru	equ	0xFF8
 36353                           tblptrh	equ	0xFF7
 36354                           tblptrl	equ	0xFF6
 36355                           tablat	equ	0xFF5
 36356                           prodh	equ	0xFF4
 36357                           prodl	equ	0xFF3
 36358                           intcon	equ	0xFF2
 36359                           intcon2	equ	0xFF1
 36360                           intcon3	equ	0xFF0
 36361                           indf0	equ	0xFEF
 36362                           postinc0	equ	0xFEE
 36363                           plusw0	equ	0xFEB
 36364                           fsr0h	equ	0xFEA
 36365                           fsr0l	equ	0xFE9
 36366                           wreg	equ	0xFE8
 36367                           indf1	equ	0xFE7
 36368                           postinc1	equ	0xFE6
 36369                           postdec1	equ	0xFE5
 36370                           plusw1	equ	0xFE3
 36371                           fsr1h	equ	0xFE2
 36372                           fsr1l	equ	0xFE1
 36373                           bsr	equ	0xFE0
 36374                           indf2	equ	0xFDF
 36375                           postinc2	equ	0xFDE
 36376                           postdec2	equ	0xFDD
 36377                           plusw2	equ	0xFDB
 36378                           fsr2h	equ	0xFDA
 36379                           fsr2l	equ	0xFD9
 36380                           status	equ	0xFD8
 36381                           
 36382 ;; *************** function i1_GenerateEvt *****************
 36383 ;; Defined at:
 36384 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36385 ;; Parameters:    Size  Location     Type
 36386 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 36387 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36388 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36389 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36390 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36391 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36392 ;; Auto vars:     Size  Location     Type
 36393 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 36394 ;; Return value:  Size  Location     Type
 36395 ;;                  1    wreg      enum E7699
 36396 ;; Registers used:
 36397 ;;		wreg, fsr2l, fsr2h, status,2
 36398 ;; Tracked objects:
 36399 ;;		On entry : 0/0
 36400 ;;		On exit  : 0/0
 36401 ;;		Unchanged: 0/0
 36402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36406 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36407 ;;Total ram usage:        3 bytes
 36408 ;; Hardware stack levels used:    1
 36409 ;; Hardware stack levels required when called:    4
 36410 ;; This function calls:
 36411 ;;		Nothing
 36412 ;; This function is called by:
 36413 ;;		i1_I2cSlv_SendI2cMsg
 36414 ;; This function uses a non-reentrant model
 36415 ;;
 36416                           
 36417                           	psect	text179
 36418  006686                     __ptext179:
 36419                           	opt stack 0
 36420  006686                     i1_GenerateEvt:
 36421                           	opt stack 8
 36422                           
 36423                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36424                           
 36425                           ;incstack = 0
 36426  006686  0E00               	movlw	0
 36427  006688  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 36428                           
 36429                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36430  00668A  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 36431  00668E  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 36432  006692  0E02               	movlw	2
 36433  006694  6EDF               	movwf	indf2,c
 36434                           
 36435                           ;os_ser.c: 83: EventStatus = EventSent;
 36436  006696  0E02               	movlw	2
 36437  006698  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 36438  00669A  0012               	return	
 36439  00669C                     __end_ofi1_GenerateEvt:
 36440                           	opt stack 0
 36441                           tosu	equ	0xFFF
 36442                           tosh	equ	0xFFE
 36443                           tosl	equ	0xFFD
 36444                           pclatu	equ	0xFFB
 36445                           pclath	equ	0xFFA
 36446                           tblptru	equ	0xFF8
 36447                           tblptrh	equ	0xFF7
 36448                           tblptrl	equ	0xFF6
 36449                           tablat	equ	0xFF5
 36450                           prodh	equ	0xFF4
 36451                           prodl	equ	0xFF3
 36452                           intcon	equ	0xFF2
 36453                           intcon2	equ	0xFF1
 36454                           intcon3	equ	0xFF0
 36455                           indf0	equ	0xFEF
 36456                           postinc0	equ	0xFEE
 36457                           plusw0	equ	0xFEB
 36458                           fsr0h	equ	0xFEA
 36459                           fsr0l	equ	0xFE9
 36460                           wreg	equ	0xFE8
 36461                           indf1	equ	0xFE7
 36462                           postinc1	equ	0xFE6
 36463                           postdec1	equ	0xFE5
 36464                           plusw1	equ	0xFE3
 36465                           fsr1h	equ	0xFE2
 36466                           fsr1l	equ	0xFE1
 36467                           bsr	equ	0xFE0
 36468                           indf2	equ	0xFDF
 36469                           postinc2	equ	0xFDE
 36470                           postdec2	equ	0xFDD
 36471                           plusw2	equ	0xFDB
 36472                           fsr2h	equ	0xFDA
 36473                           fsr2l	equ	0xFD9
 36474                           status	equ	0xFD8
 36475                           
 36476 ;; *************** function _HighPriorityIsr *****************
 36477 ;; Defined at:
 36478 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 36479 ;; Parameters:    Size  Location     Type
 36480 ;;		None
 36481 ;; Auto vars:     Size  Location     Type
 36482 ;;		None
 36483 ;; Return value:  Size  Location     Type
 36484 ;;                  1    wreg      void 
 36485 ;; Registers used:
 36486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36487 ;; Tracked objects:
 36488 ;;		On entry : 0/0
 36489 ;;		On exit  : 0/0
 36490 ;;		Unchanged: 0/0
 36491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36494 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36495 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36496 ;;Total ram usage:       18 bytes
 36497 ;; Hardware stack levels used:    1
 36498 ;; Hardware stack levels required when called:    3
 36499 ;; This function calls:
 36500 ;;		_Mcu_Int0Isr
 36501 ;;		_Mcu_Int1Isr
 36502 ;;		_Rtcc_RtcIsr
 36503 ;;		_Uart_Uart1RxIsr
 36504 ;; This function is called by:
 36505 ;;		Interrupt level 2
 36506 ;; This function uses a non-reentrant model
 36507 ;;
 36508                           
 36509                           	psect	intcode
 36510  000008                     __pintcode:
 36511                           	opt stack 0
 36512  000008                     _HighPriorityIsr:
 36513                           	opt stack 8
 36514                           
 36515                           ;incstack = 0
 36516  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 36517  00000A  EFEA  F021         	goto	int_func
 36518                           tosu	equ	0xFFF
 36519                           tosh	equ	0xFFE
 36520                           tosl	equ	0xFFD
 36521                           pclatu	equ	0xFFB
 36522                           pclath	equ	0xFFA
 36523                           tblptru	equ	0xFF8
 36524                           tblptrh	equ	0xFF7
 36525                           tblptrl	equ	0xFF6
 36526                           tablat	equ	0xFF5
 36527                           prodh	equ	0xFF4
 36528                           prodl	equ	0xFF3
 36529                           intcon	equ	0xFF2
 36530                           intcon2	equ	0xFF1
 36531                           intcon3	equ	0xFF0
 36532                           indf0	equ	0xFEF
 36533                           postinc0	equ	0xFEE
 36534                           plusw0	equ	0xFEB
 36535                           fsr0h	equ	0xFEA
 36536                           fsr0l	equ	0xFE9
 36537                           wreg	equ	0xFE8
 36538                           indf1	equ	0xFE7
 36539                           postinc1	equ	0xFE6
 36540                           postdec1	equ	0xFE5
 36541                           plusw1	equ	0xFE3
 36542                           fsr1h	equ	0xFE2
 36543                           fsr1l	equ	0xFE1
 36544                           bsr	equ	0xFE0
 36545                           indf2	equ	0xFDF
 36546                           postinc2	equ	0xFDE
 36547                           postdec2	equ	0xFDD
 36548                           plusw2	equ	0xFDB
 36549                           fsr2h	equ	0xFDA
 36550                           fsr2l	equ	0xFD9
 36551                           status	equ	0xFD8
 36552                           
 36553                           	psect	intcode_body
 36554  0043D4                     __pintcode_body:
 36555                           	opt stack 8
 36556  0043D4                     int_func:
 36557                           	opt stack 8
 36558  0043D4  CFFA F007          	movff	pclath,??_HighPriorityIsr
 36559  0043D8  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 36560  0043DC  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 36561  0043E0  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 36562  0043E4  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 36563  0043E8  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 36564  0043EC  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 36565  0043F0  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 36566  0043F4  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 36567  0043F8  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 36568  0043FC  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 36569  004400  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 36570  004404  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 36571  004408  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 36572  00440C  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 36573  004410  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 36574  004414  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 36575  004418  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 36576                           
 36577                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 36578  00441C  B2F2               	btfsc	intcon,1,c	;volatile
 36579                           
 36580                           ;irq.c: 158: {
 36581                           ;irq.c: 160: Mcu_Int0Isr();
 36582  00441E  ECEF  F033         	call	_Mcu_Int0Isr	;wreg free
 36583                           
 36584                           ;irq.c: 161: }
 36585                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 36586  004422  B0F0               	btfsc	intcon3,0,c	;volatile
 36587                           
 36588                           ;irq.c: 167: {
 36589                           ;irq.c: 169: Mcu_Int1Isr();
 36590  004424  ECED  F033         	call	_Mcu_Int1Isr	;wreg free
 36591                           
 36592                           ;irq.c: 170: }
 36593                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 36594  004428  B0A4               	btfsc	4004,0,c	;volatile
 36595                           
 36596                           ;irq.c: 203: {
 36597                           ;irq.c: 205: Rtcc_RtcIsr();
 36598  00442A  ECEB  F033         	call	_Rtcc_RtcIsr	;wreg free
 36599                           
 36600                           ;irq.c: 206: }
 36601                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 36602  00442E  BA9E               	btfsc	3998,5,c	;volatile
 36603                           
 36604                           ;irq.c: 212: {
 36605                           ;irq.c: 214: Uart_Uart1RxIsr();
 36606  004430  EC9E  F033         	call	_Uart_Uart1RxIsr	;wreg free
 36607  004434  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 36608  004438  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 36609  00443C  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 36610  004440  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 36611  004444  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 36612  004448  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 36613  00444C  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 36614  004450  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 36615  004454  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 36616  004458  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 36617  00445C  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 36618  004460  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 36619  004464  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 36620  004468  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 36621  00446C  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 36622  004470  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 36623  004474  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 36624  004478  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 36625  00447C  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 36626  00447E  0011               	retfie		f
 36627  004480                     __end_of_HighPriorityIsr:
 36628                           	opt stack 0
 36629                           tosu	equ	0xFFF
 36630                           tosh	equ	0xFFE
 36631                           tosl	equ	0xFFD
 36632                           pclatu	equ	0xFFB
 36633                           pclath	equ	0xFFA
 36634                           tblptru	equ	0xFF8
 36635                           tblptrh	equ	0xFF7
 36636                           tblptrl	equ	0xFF6
 36637                           tablat	equ	0xFF5
 36638                           prodh	equ	0xFF4
 36639                           prodl	equ	0xFF3
 36640                           intcon	equ	0xFF2
 36641                           intcon2	equ	0xFF1
 36642                           intcon3	equ	0xFF0
 36643                           indf0	equ	0xFEF
 36644                           postinc0	equ	0xFEE
 36645                           plusw0	equ	0xFEB
 36646                           fsr0h	equ	0xFEA
 36647                           fsr0l	equ	0xFE9
 36648                           wreg	equ	0xFE8
 36649                           indf1	equ	0xFE7
 36650                           postinc1	equ	0xFE6
 36651                           postdec1	equ	0xFE5
 36652                           plusw1	equ	0xFE3
 36653                           fsr1h	equ	0xFE2
 36654                           fsr1l	equ	0xFE1
 36655                           bsr	equ	0xFE0
 36656                           indf2	equ	0xFDF
 36657                           postinc2	equ	0xFDE
 36658                           postdec2	equ	0xFDD
 36659                           plusw2	equ	0xFDB
 36660                           fsr2h	equ	0xFDA
 36661                           fsr2l	equ	0xFD9
 36662                           status	equ	0xFD8
 36663                           
 36664 ;; *************** function _Uart_Uart1RxIsr *****************
 36665 ;; Defined at:
 36666 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 36667 ;; Parameters:    Size  Location     Type
 36668 ;;		None
 36669 ;; Auto vars:     Size  Location     Type
 36670 ;;		None
 36671 ;; Return value:  Size  Location     Type
 36672 ;;                  1    wreg      void 
 36673 ;; Registers used:
 36674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36675 ;; Tracked objects:
 36676 ;;		On entry : 0/0
 36677 ;;		On exit  : 0/0
 36678 ;;		Unchanged: 0/0
 36679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36684 ;;Total ram usage:        0 bytes
 36685 ;; Hardware stack levels used:    1
 36686 ;; Hardware stack levels required when called:    2
 36687 ;; This function calls:
 36688 ;;		_Uart_MdmGsmGprsReadService
 36689 ;; This function is called by:
 36690 ;;		_HighPriorityIsr
 36691 ;; This function uses a non-reentrant model
 36692 ;;
 36693                           
 36694                           	psect	text181
 36695  00673C                     __ptext181:
 36696                           	opt stack 0
 36697  00673C                     _Uart_Uart1RxIsr:
 36698                           	opt stack 8
 36699                           
 36700                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 36701                           ;uart_drv.c: 590: UartRxData = RCREG1;
 36702                           
 36703                           ;incstack = 0
 36704  00673C  CFAF F02B          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 36705                           
 36706                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 36707  006740  C02B  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 36708  006744  0E01               	movlw	1
 36709  006746  EC86  F01E         	call	_Uart_MdmGsmGprsReadService
 36710  00674A  0012               	return		;funcret
 36711  00674C                     __end_of_Uart_Uart1RxIsr:
 36712                           	opt stack 0
 36713                           tosu	equ	0xFFF
 36714                           tosh	equ	0xFFE
 36715                           tosl	equ	0xFFD
 36716                           pclatu	equ	0xFFB
 36717                           pclath	equ	0xFFA
 36718                           tblptru	equ	0xFF8
 36719                           tblptrh	equ	0xFF7
 36720                           tblptrl	equ	0xFF6
 36721                           tablat	equ	0xFF5
 36722                           prodh	equ	0xFF4
 36723                           prodl	equ	0xFF3
 36724                           intcon	equ	0xFF2
 36725                           intcon2	equ	0xFF1
 36726                           intcon3	equ	0xFF0
 36727                           indf0	equ	0xFEF
 36728                           postinc0	equ	0xFEE
 36729                           plusw0	equ	0xFEB
 36730                           fsr0h	equ	0xFEA
 36731                           fsr0l	equ	0xFE9
 36732                           wreg	equ	0xFE8
 36733                           indf1	equ	0xFE7
 36734                           postinc1	equ	0xFE6
 36735                           postdec1	equ	0xFE5
 36736                           plusw1	equ	0xFE3
 36737                           fsr1h	equ	0xFE2
 36738                           fsr1l	equ	0xFE1
 36739                           bsr	equ	0xFE0
 36740                           indf2	equ	0xFDF
 36741                           postinc2	equ	0xFDE
 36742                           postdec2	equ	0xFDD
 36743                           plusw2	equ	0xFDB
 36744                           fsr2h	equ	0xFDA
 36745                           fsr2l	equ	0xFD9
 36746                           status	equ	0xFD8
 36747                           
 36748 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 36749 ;; Defined at:
 36750 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 36751 ;; Parameters:    Size  Location     Type
 36752 ;;  Module          1    wreg     unsigned char 
 36753 ;;  UartData        1    3[COMRAM] unsigned char 
 36754 ;; Auto vars:     Size  Location     Type
 36755 ;;  Module          1    0[COMRAM] unsigned char 
 36756 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 36757 ;; Return value:  Size  Location     Type
 36758 ;;                  1    wreg      void 
 36759 ;; Registers used:
 36760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36761 ;; Tracked objects:
 36762 ;;		On entry : 0/0
 36763 ;;		On exit  : 0/0
 36764 ;;		Unchanged: 0/0
 36765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36766 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36770 ;;Total ram usage:        3 bytes
 36771 ;; Hardware stack levels used:    1
 36772 ;; Hardware stack levels required when called:    1
 36773 ;; This function calls:
 36774 ;;		i2_GenerateEvt
 36775 ;; This function is called by:
 36776 ;;		_Uart_Uart1RxIsr
 36777 ;; This function uses a non-reentrant model
 36778 ;;
 36779                           
 36780                           	psect	text182
 36781  003D0C                     __ptext182:
 36782                           	opt stack 0
 36783  003D0C                     _Uart_MdmGsmGprsReadService:
 36784                           	opt stack 8
 36785                           
 36786                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 36787                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 36788                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 36789                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 36790                           
 36791                           ;incstack = 0
 36792  003D0C  0E00               	movlw	0
 36793  003D0E  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 36794  003D10  0E00               	movlw	0
 36795  003D12  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 36796                           
 36797                           ;uart_drv.c: 383: switch (RxState)
 36798  003D14  D058               	goto	i2l680
 36799  003D16                     
 36800                           ;uart_drv.c: 387: if (UartData == '\r')
 36801  003D16  0E0D               	movlw	13
 36802  003D18  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 36803  003D1A  A4D8               	btfss	status,2,c
 36804  003D1C  D003               	goto	i2l682
 36805                           
 36806                           ;uart_drv.c: 388: {
 36807                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 36808  003D1E  0E01               	movlw	1
 36809  003D20  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 36810                           
 36811                           ;uart_drv.c: 391: }
 36812  003D22  0012               	return	
 36813  003D24                     i2l682:
 36814                           
 36815                           ;uart_drv.c: 392: else
 36816                           ;uart_drv.c: 393: {
 36817                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 36818  003D24  0E90               	movlw	144
 36819  003D26  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 36820  003D28  0E01               	movlw	1
 36821  003D2A  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 36822  003D2C  B0D8               	btfsc	status,0,c
 36823  003D2E  0012               	return	
 36824                           
 36825                           ;uart_drv.c: 395: {
 36826                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 36827  003D30  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 36828  003D32  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 36829  003D34  6ED9               	movwf	fsr2l,c
 36830  003D36  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 36831  003D38  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 36832  003D3A  6EDA               	movwf	fsr2h,c
 36833  003D3C  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 36834                           
 36835                           ;uart_drv.c: 399: RxCounter++;
 36836  003D40  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 36837  003D42  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 36838                           
 36839                           ;uart_drv.c: 400: }
 36840                           ;uart_drv.c: 401: }
 36841                           ;uart_drv.c: 402: break;
 36842  003D44  0012               	return	
 36843  003D46                     
 36844                           ;uart_drv.c: 406: if (UartData == '\n')
 36845  003D46  0E0A               	movlw	10
 36846  003D48  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 36847  003D4A  A4D8               	btfss	status,2,c
 36848  003D4C  D035               	goto	i2l688
 36849                           
 36850                           ;uart_drv.c: 407: {
 36851                           ;uart_drv.c: 409: if (RxCounter > 0)
 36852  003D4E  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 36853  003D50  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 36854  003D52  B4D8               	btfsc	status,2,c
 36855  003D54  D031               	goto	i2l688
 36856                           
 36857                           ;uart_drv.c: 410: {
 36858                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 36859  003D56  0E00               	movlw	0
 36860  003D58  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 36861  003D5A  0E00               	movlw	0
 36862  003D5C  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 36863  003D5E  D010               	goto	i2l689
 36864  003D60                     
 36865                           ;uart_drv.c: 413: {
 36866                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 36867  003D60  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 36868  003D62  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 36869  003D64  6ED9               	movwf	fsr2l,c
 36870  003D66  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 36871  003D68  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 36872  003D6A  6EDA               	movwf	fsr2h,c
 36873  003D6C  0E58               	movlw	low _RxBuffer
 36874  003D6E  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 36875  003D70  6EE1               	movwf	fsr1l,c
 36876  003D72  0E0C               	movlw	high _RxBuffer
 36877  003D74  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 36878  003D76  6EE2               	movwf	fsr1h,c
 36879  003D78  CFDF FFE7          	movff	indf2,indf1
 36880  003D7C  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 36881  003D7E  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 36882  003D80                     i2l689:
 36883  003D80  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 36884  003D82  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 36885  003D84  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 36886  003D86  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 36887  003D88  A0D8               	btfss	status,0,c
 36888  003D8A  D7EA               	goto	i2l690
 36889                           
 36890                           ;uart_drv.c: 415: }
 36891                           ;uart_drv.c: 417: RxLen = RxCounter;
 36892  003D8C  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 36893  003D90  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 36894                           
 36895                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 36896  003D94  0E3C               	movlw	low _NewStringReceived
 36897  003D96  6E01               	movwf	i2GenerateEvt@Event,c
 36898  003D98  0E00               	movlw	high _NewStringReceived
 36899  003D9A  6E02               	movwf	i2GenerateEvt@Event+1,c
 36900  003D9C  EC4E  F033         	call	i2_GenerateEvt	;wreg free
 36901                           
 36902                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 36903  003DA0  0E3B               	movlw	low _NewMdmEvtParserRequest
 36904  003DA2  6E01               	movwf	i2GenerateEvt@Event,c
 36905  003DA4  0E00               	movlw	high _NewMdmEvtParserRequest
 36906  003DA6  6E02               	movwf	i2GenerateEvt@Event+1,c
 36907  003DA8  EC4E  F033         	call	i2_GenerateEvt	;wreg free
 36908                           
 36909                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 36910  003DAC  0E3A               	movlw	low _NewStringMdmTerminal
 36911  003DAE  6E01               	movwf	i2GenerateEvt@Event,c
 36912  003DB0  0E00               	movlw	high _NewStringMdmTerminal
 36913  003DB2  6E02               	movwf	i2GenerateEvt@Event+1,c
 36914  003DB4  EC4E  F033         	call	i2_GenerateEvt	;wreg free
 36915  003DB8                     i2l688:
 36916                           
 36917                           ;uart_drv.c: 427: }
 36918                           ;uart_drv.c: 429: RxState = ReadData;
 36919                           
 36920                           ;uart_drv.c: 424: else
 36921                           ;uart_drv.c: 425: {
 36922                           
 36923                           ;uart_drv.c: 422: }
 36924                           ;uart_drv.c: 423: }
 36925  003DB8  0E00               	movlw	0
 36926  003DBA  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 36927                           
 36928                           ;uart_drv.c: 431: RxCounter = 0;
 36929  003DBC  0E00               	movlw	0
 36930  003DBE  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 36931  003DC0  0E00               	movlw	0
 36932  003DC2  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 36933                           
 36934                           ;uart_drv.c: 436: }
 36935                           
 36936                           ;uart_drv.c: 435: break;
 36937                           
 36938                           ;uart_drv.c: 434: default:
 36939                           
 36940                           ;uart_drv.c: 432: break;
 36941  003DC4  0012               	return	
 36942  003DC6                     i2l680:
 36943  003DC6  502C               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 36944                           
 36945                           ; Switch size 1, requested type "space"
 36946                           ; Number of cases is 2, Range of values is 0 to 1
 36947                           ; switch strategies available:
 36948                           ; Name         Instructions Cycles
 36949                           ; simple_byte            7     4 (average)
 36950                           ;	Chosen strategy is simple_byte
 36951  003DC8  0A00               	xorlw	0	; case 0
 36952  003DCA  B4D8               	btfsc	status,2,c
 36953  003DCC  D7A4               	goto	i2l681
 36954  003DCE  0A01               	xorlw	1	; case 1
 36955  003DD0  A4D8               	btfss	status,2,c
 36956  003DD2  0012               	return	
 36957  003DD4  D7B8               	goto	i2l686
 36958  003DD6                     __end_of_Uart_MdmGsmGprsReadService:
 36959                           	opt stack 0
 36960                           tosu	equ	0xFFF
 36961                           tosh	equ	0xFFE
 36962                           tosl	equ	0xFFD
 36963                           pclatu	equ	0xFFB
 36964                           pclath	equ	0xFFA
 36965                           tblptru	equ	0xFF8
 36966                           tblptrh	equ	0xFF7
 36967                           tblptrl	equ	0xFF6
 36968                           tablat	equ	0xFF5
 36969                           prodh	equ	0xFF4
 36970                           prodl	equ	0xFF3
 36971                           intcon	equ	0xFF2
 36972                           intcon2	equ	0xFF1
 36973                           intcon3	equ	0xFF0
 36974                           indf0	equ	0xFEF
 36975                           postinc0	equ	0xFEE
 36976                           plusw0	equ	0xFEB
 36977                           fsr0h	equ	0xFEA
 36978                           fsr0l	equ	0xFE9
 36979                           wreg	equ	0xFE8
 36980                           indf1	equ	0xFE7
 36981                           postinc1	equ	0xFE6
 36982                           postdec1	equ	0xFE5
 36983                           plusw1	equ	0xFE3
 36984                           fsr1h	equ	0xFE2
 36985                           fsr1l	equ	0xFE1
 36986                           bsr	equ	0xFE0
 36987                           indf2	equ	0xFDF
 36988                           postinc2	equ	0xFDE
 36989                           postdec2	equ	0xFDD
 36990                           plusw2	equ	0xFDB
 36991                           fsr2h	equ	0xFDA
 36992                           fsr2l	equ	0xFD9
 36993                           status	equ	0xFD8
 36994                           
 36995 ;; *************** function i2_GenerateEvt *****************
 36996 ;; Defined at:
 36997 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36998 ;; Parameters:    Size  Location     Type
 36999 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 37000 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37001 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37002 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37003 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37004 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37005 ;; Auto vars:     Size  Location     Type
 37006 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 37007 ;; Return value:  Size  Location     Type
 37008 ;;                  1    wreg      enum E7699
 37009 ;; Registers used:
 37010 ;;		wreg, fsr2l, fsr2h, status,2
 37011 ;; Tracked objects:
 37012 ;;		On entry : 0/0
 37013 ;;		On exit  : 0/0
 37014 ;;		Unchanged: 0/0
 37015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37019 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37020 ;;Total ram usage:        3 bytes
 37021 ;; Hardware stack levels used:    1
 37022 ;; This function calls:
 37023 ;;		Nothing
 37024 ;; This function is called by:
 37025 ;;		_Uart_MdmGsmGprsReadService
 37026 ;; This function uses a non-reentrant model
 37027 ;;
 37028                           
 37029                           	psect	text183
 37030  00669C                     __ptext183:
 37031                           	opt stack 0
 37032  00669C                     i2_GenerateEvt:
 37033                           	opt stack 8
 37034                           
 37035                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 37036                           
 37037                           ;incstack = 0
 37038  00669C  0E00               	movlw	0
 37039  00669E  6E03               	movwf	i2GenerateEvt@EventStatus,c
 37040                           
 37041                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 37042  0066A0  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 37043  0066A4  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 37044  0066A8  0E02               	movlw	2
 37045  0066AA  6EDF               	movwf	indf2,c
 37046                           
 37047                           ;os_ser.c: 83: EventStatus = EventSent;
 37048  0066AC  0E02               	movlw	2
 37049  0066AE  6E03               	movwf	i2GenerateEvt@EventStatus,c
 37050  0066B0  0012               	return	
 37051  0066B2                     __end_ofi2_GenerateEvt:
 37052                           	opt stack 0
 37053                           tosu	equ	0xFFF
 37054                           tosh	equ	0xFFE
 37055                           tosl	equ	0xFFD
 37056                           pclatu	equ	0xFFB
 37057                           pclath	equ	0xFFA
 37058                           tblptru	equ	0xFF8
 37059                           tblptrh	equ	0xFF7
 37060                           tblptrl	equ	0xFF6
 37061                           tablat	equ	0xFF5
 37062                           prodh	equ	0xFF4
 37063                           prodl	equ	0xFF3
 37064                           intcon	equ	0xFF2
 37065                           intcon2	equ	0xFF1
 37066                           intcon3	equ	0xFF0
 37067                           indf0	equ	0xFEF
 37068                           postinc0	equ	0xFEE
 37069                           plusw0	equ	0xFEB
 37070                           fsr0h	equ	0xFEA
 37071                           fsr0l	equ	0xFE9
 37072                           wreg	equ	0xFE8
 37073                           indf1	equ	0xFE7
 37074                           postinc1	equ	0xFE6
 37075                           postdec1	equ	0xFE5
 37076                           plusw1	equ	0xFE3
 37077                           fsr1h	equ	0xFE2
 37078                           fsr1l	equ	0xFE1
 37079                           bsr	equ	0xFE0
 37080                           indf2	equ	0xFDF
 37081                           postinc2	equ	0xFDE
 37082                           postdec2	equ	0xFDD
 37083                           plusw2	equ	0xFDB
 37084                           fsr2h	equ	0xFDA
 37085                           fsr2l	equ	0xFD9
 37086                           status	equ	0xFD8
 37087                           
 37088 ;; *************** function _Rtcc_RtcIsr *****************
 37089 ;; Defined at:
 37090 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 37091 ;; Parameters:    Size  Location     Type
 37092 ;;		None
 37093 ;; Auto vars:     Size  Location     Type
 37094 ;;		None
 37095 ;; Return value:  Size  Location     Type
 37096 ;;                  1    wreg      void 
 37097 ;; Registers used:
 37098 ;;		wreg, status,2, status,0
 37099 ;; Tracked objects:
 37100 ;;		On entry : 0/0
 37101 ;;		On exit  : 0/0
 37102 ;;		Unchanged: 0/0
 37103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37108 ;;Total ram usage:        0 bytes
 37109 ;; Hardware stack levels used:    1
 37110 ;; This function calls:
 37111 ;;		Nothing
 37112 ;; This function is called by:
 37113 ;;		_HighPriorityIsr
 37114 ;; This function uses a non-reentrant model
 37115 ;;
 37116                           
 37117                           	psect	text184
 37118  0067D6                     __ptext184:
 37119                           	opt stack 0
 37120  0067D6                     _Rtcc_RtcIsr:
 37121                           	opt stack 10
 37122                           
 37123                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 37124                           
 37125                           ;incstack = 0
 37126  0067D6  90A4               	bcf	4004,0,c	;volatile
 37127  0067D8  0012               	return	
 37128  0067DA                     __end_of_Rtcc_RtcIsr:
 37129                           	opt stack 0
 37130                           tosu	equ	0xFFF
 37131                           tosh	equ	0xFFE
 37132                           tosl	equ	0xFFD
 37133                           pclatu	equ	0xFFB
 37134                           pclath	equ	0xFFA
 37135                           tblptru	equ	0xFF8
 37136                           tblptrh	equ	0xFF7
 37137                           tblptrl	equ	0xFF6
 37138                           tablat	equ	0xFF5
 37139                           prodh	equ	0xFF4
 37140                           prodl	equ	0xFF3
 37141                           intcon	equ	0xFF2
 37142                           intcon2	equ	0xFF1
 37143                           intcon3	equ	0xFF0
 37144                           indf0	equ	0xFEF
 37145                           postinc0	equ	0xFEE
 37146                           plusw0	equ	0xFEB
 37147                           fsr0h	equ	0xFEA
 37148                           fsr0l	equ	0xFE9
 37149                           wreg	equ	0xFE8
 37150                           indf1	equ	0xFE7
 37151                           postinc1	equ	0xFE6
 37152                           postdec1	equ	0xFE5
 37153                           plusw1	equ	0xFE3
 37154                           fsr1h	equ	0xFE2
 37155                           fsr1l	equ	0xFE1
 37156                           bsr	equ	0xFE0
 37157                           indf2	equ	0xFDF
 37158                           postinc2	equ	0xFDE
 37159                           postdec2	equ	0xFDD
 37160                           plusw2	equ	0xFDB
 37161                           fsr2h	equ	0xFDA
 37162                           fsr2l	equ	0xFD9
 37163                           status	equ	0xFD8
 37164                           
 37165 ;; *************** function _Mcu_Int1Isr *****************
 37166 ;; Defined at:
 37167 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37168 ;; Parameters:    Size  Location     Type
 37169 ;;		None
 37170 ;; Auto vars:     Size  Location     Type
 37171 ;;		None
 37172 ;; Return value:  Size  Location     Type
 37173 ;;                  1    wreg      void 
 37174 ;; Registers used:
 37175 ;;		wreg, status,2, status,0
 37176 ;; Tracked objects:
 37177 ;;		On entry : 0/0
 37178 ;;		On exit  : 0/0
 37179 ;;		Unchanged: 0/0
 37180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37185 ;;Total ram usage:        0 bytes
 37186 ;; Hardware stack levels used:    1
 37187 ;; This function calls:
 37188 ;;		Nothing
 37189 ;; This function is called by:
 37190 ;;		_HighPriorityIsr
 37191 ;; This function uses a non-reentrant model
 37192 ;;
 37193                           
 37194                           	psect	text185
 37195  0067DA                     __ptext185:
 37196                           	opt stack 0
 37197  0067DA                     _Mcu_Int1Isr:
 37198                           	opt stack 10
 37199                           
 37200                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 37201                           
 37202                           ;incstack = 0
 37203  0067DA  90F0               	bcf	intcon3,0,c	;volatile
 37204  0067DC  0012               	return	
 37205  0067DE                     __end_of_Mcu_Int1Isr:
 37206                           	opt stack 0
 37207                           tosu	equ	0xFFF
 37208                           tosh	equ	0xFFE
 37209                           tosl	equ	0xFFD
 37210                           pclatu	equ	0xFFB
 37211                           pclath	equ	0xFFA
 37212                           tblptru	equ	0xFF8
 37213                           tblptrh	equ	0xFF7
 37214                           tblptrl	equ	0xFF6
 37215                           tablat	equ	0xFF5
 37216                           prodh	equ	0xFF4
 37217                           prodl	equ	0xFF3
 37218                           intcon	equ	0xFF2
 37219                           intcon2	equ	0xFF1
 37220                           intcon3	equ	0xFF0
 37221                           indf0	equ	0xFEF
 37222                           postinc0	equ	0xFEE
 37223                           plusw0	equ	0xFEB
 37224                           fsr0h	equ	0xFEA
 37225                           fsr0l	equ	0xFE9
 37226                           wreg	equ	0xFE8
 37227                           indf1	equ	0xFE7
 37228                           postinc1	equ	0xFE6
 37229                           postdec1	equ	0xFE5
 37230                           plusw1	equ	0xFE3
 37231                           fsr1h	equ	0xFE2
 37232                           fsr1l	equ	0xFE1
 37233                           bsr	equ	0xFE0
 37234                           indf2	equ	0xFDF
 37235                           postinc2	equ	0xFDE
 37236                           postdec2	equ	0xFDD
 37237                           plusw2	equ	0xFDB
 37238                           fsr2h	equ	0xFDA
 37239                           fsr2l	equ	0xFD9
 37240                           status	equ	0xFD8
 37241                           
 37242 ;; *************** function _Mcu_Int0Isr *****************
 37243 ;; Defined at:
 37244 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37245 ;; Parameters:    Size  Location     Type
 37246 ;;		None
 37247 ;; Auto vars:     Size  Location     Type
 37248 ;;		None
 37249 ;; Return value:  Size  Location     Type
 37250 ;;                  1    wreg      void 
 37251 ;; Registers used:
 37252 ;;		wreg, status,2, status,0
 37253 ;; Tracked objects:
 37254 ;;		On entry : 0/0
 37255 ;;		On exit  : 0/0
 37256 ;;		Unchanged: 0/0
 37257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37262 ;;Total ram usage:        0 bytes
 37263 ;; Hardware stack levels used:    1
 37264 ;; This function calls:
 37265 ;;		Nothing
 37266 ;; This function is called by:
 37267 ;;		_HighPriorityIsr
 37268 ;; This function uses a non-reentrant model
 37269 ;;
 37270                           
 37271                           	psect	text186
 37272  0067DE                     __ptext186:
 37273                           	opt stack 0
 37274  0067DE                     _Mcu_Int0Isr:
 37275                           	opt stack 10
 37276                           
 37277                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 37278                           
 37279                           ;incstack = 0
 37280  0067DE  92F2               	bcf	intcon,1,c	;volatile
 37281  0067E0  0012               	return	
 37282  0067E2                     __end_of_Mcu_Int0Isr:
 37283                           	opt stack 0
 37284                           tosu	equ	0xFFF
 37285                           tosh	equ	0xFFE
 37286                           tosl	equ	0xFFD
 37287                           pclatu	equ	0xFFB
 37288                           pclath	equ	0xFFA
 37289                           tblptru	equ	0xFF8
 37290                           tblptrh	equ	0xFF7
 37291                           tblptrl	equ	0xFF6
 37292                           tablat	equ	0xFF5
 37293                           prodh	equ	0xFF4
 37294                           prodl	equ	0xFF3
 37295                           intcon	equ	0xFF2
 37296                           intcon2	equ	0xFF1
 37297                           intcon3	equ	0xFF0
 37298                           indf0	equ	0xFEF
 37299                           postinc0	equ	0xFEE
 37300                           plusw0	equ	0xFEB
 37301                           fsr0h	equ	0xFEA
 37302                           fsr0l	equ	0xFE9
 37303                           wreg	equ	0xFE8
 37304                           indf1	equ	0xFE7
 37305                           postinc1	equ	0xFE6
 37306                           postdec1	equ	0xFE5
 37307                           plusw1	equ	0xFE3
 37308                           fsr1h	equ	0xFE2
 37309                           fsr1l	equ	0xFE1
 37310                           bsr	equ	0xFE0
 37311                           indf2	equ	0xFDF
 37312                           postinc2	equ	0xFDE
 37313                           postdec2	equ	0xFDD
 37314                           plusw2	equ	0xFDB
 37315                           fsr2h	equ	0xFDA
 37316                           fsr2l	equ	0xFD9
 37317                           status	equ	0xFD8
 37318                           tosu	equ	0xFFF
 37319                           tosh	equ	0xFFE
 37320                           tosl	equ	0xFFD
 37321                           pclatu	equ	0xFFB
 37322                           pclath	equ	0xFFA
 37323                           tblptru	equ	0xFF8
 37324                           tblptrh	equ	0xFF7
 37325                           tblptrl	equ	0xFF6
 37326                           tablat	equ	0xFF5
 37327                           prodh	equ	0xFF4
 37328                           prodl	equ	0xFF3
 37329                           intcon	equ	0xFF2
 37330                           intcon2	equ	0xFF1
 37331                           intcon3	equ	0xFF0
 37332                           indf0	equ	0xFEF
 37333                           postinc0	equ	0xFEE
 37334                           plusw0	equ	0xFEB
 37335                           fsr0h	equ	0xFEA
 37336                           fsr0l	equ	0xFE9
 37337                           wreg	equ	0xFE8
 37338                           indf1	equ	0xFE7
 37339                           postinc1	equ	0xFE6
 37340                           postdec1	equ	0xFE5
 37341                           plusw1	equ	0xFE3
 37342                           fsr1h	equ	0xFE2
 37343                           fsr1l	equ	0xFE1
 37344                           bsr	equ	0xFE0
 37345                           indf2	equ	0xFDF
 37346                           postinc2	equ	0xFDE
 37347                           postdec2	equ	0xFDD
 37348                           plusw2	equ	0xFDB
 37349                           fsr2h	equ	0xFDA
 37350                           fsr2l	equ	0xFD9
 37351                           status	equ	0xFD8
 37352                           
 37353                           	psect	text187
 37354  000000                     __ptext187:
 37355                           	opt stack 0
 37356                           tosu	equ	0xFFF
 37357                           tosh	equ	0xFFE
 37358                           tosl	equ	0xFFD
 37359                           pclatu	equ	0xFFB
 37360                           pclath	equ	0xFFA
 37361                           tblptru	equ	0xFF8
 37362                           tblptrh	equ	0xFF7
 37363                           tblptrl	equ	0xFF6
 37364                           tablat	equ	0xFF5
 37365                           prodh	equ	0xFF4
 37366                           prodl	equ	0xFF3
 37367                           intcon	equ	0xFF2
 37368                           intcon2	equ	0xFF1
 37369                           intcon3	equ	0xFF0
 37370                           indf0	equ	0xFEF
 37371                           postinc0	equ	0xFEE
 37372                           plusw0	equ	0xFEB
 37373                           fsr0h	equ	0xFEA
 37374                           fsr0l	equ	0xFE9
 37375                           wreg	equ	0xFE8
 37376                           indf1	equ	0xFE7
 37377                           postinc1	equ	0xFE6
 37378                           postdec1	equ	0xFE5
 37379                           plusw1	equ	0xFE3
 37380                           fsr1h	equ	0xFE2
 37381                           fsr1l	equ	0xFE1
 37382                           bsr	equ	0xFE0
 37383                           indf2	equ	0xFDF
 37384                           postinc2	equ	0xFDE
 37385                           postdec2	equ	0xFDD
 37386                           plusw2	equ	0xFDB
 37387                           fsr2h	equ	0xFDA
 37388                           fsr2l	equ	0xFD9
 37389                           status	equ	0xFD8
 37390                           
 37391                           	psect	rparam
 37392  0000                     tosu	equ	0xFFF
 37393                           tosh	equ	0xFFE
 37394                           tosl	equ	0xFFD
 37395                           pclatu	equ	0xFFB
 37396                           pclath	equ	0xFFA
 37397                           tblptru	equ	0xFF8
 37398                           tblptrh	equ	0xFF7
 37399                           tblptrl	equ	0xFF6
 37400                           tablat	equ	0xFF5
 37401                           prodh	equ	0xFF4
 37402                           prodl	equ	0xFF3
 37403                           intcon	equ	0xFF2
 37404                           intcon2	equ	0xFF1
 37405                           intcon3	equ	0xFF0
 37406                           indf0	equ	0xFEF
 37407                           postinc0	equ	0xFEE
 37408                           plusw0	equ	0xFEB
 37409                           fsr0h	equ	0xFEA
 37410                           fsr0l	equ	0xFE9
 37411                           wreg	equ	0xFE8
 37412                           indf1	equ	0xFE7
 37413                           postinc1	equ	0xFE6
 37414                           postdec1	equ	0xFE5
 37415                           plusw1	equ	0xFE3
 37416                           fsr1h	equ	0xFE2
 37417                           fsr1l	equ	0xFE1
 37418                           bsr	equ	0xFE0
 37419                           indf2	equ	0xFDF
 37420                           postinc2	equ	0xFDE
 37421                           postdec2	equ	0xFDD
 37422                           plusw2	equ	0xFDB
 37423                           fsr2h	equ	0xFDA
 37424                           fsr2l	equ	0xFD9
 37425                           status	equ	0xFD8
 37426                           
 37427                           	psect	temp
 37428  000042                     btemp:
 37429                           	opt stack 0
 37430  000042                     	ds	1
 37431  0000                     int$flags	set	btemp
 37432  0000                     wtemp6	set	btemp+1
 37433                           tosu	equ	0xFFF
 37434                           tosh	equ	0xFFE
 37435                           tosl	equ	0xFFD
 37436                           pclatu	equ	0xFFB
 37437                           pclath	equ	0xFFA
 37438                           tblptru	equ	0xFF8
 37439                           tblptrh	equ	0xFF7
 37440                           tblptrl	equ	0xFF6
 37441                           tablat	equ	0xFF5
 37442                           prodh	equ	0xFF4
 37443                           prodl	equ	0xFF3
 37444                           intcon	equ	0xFF2
 37445                           intcon2	equ	0xFF1
 37446                           intcon3	equ	0xFF0
 37447                           indf0	equ	0xFEF
 37448                           postinc0	equ	0xFEE
 37449                           plusw0	equ	0xFEB
 37450                           fsr0h	equ	0xFEA
 37451                           fsr0l	equ	0xFE9
 37452                           wreg	equ	0xFE8
 37453                           indf1	equ	0xFE7
 37454                           postinc1	equ	0xFE6
 37455                           postdec1	equ	0xFE5
 37456                           plusw1	equ	0xFE3
 37457                           fsr1h	equ	0xFE2
 37458                           fsr1l	equ	0xFE1
 37459                           bsr	equ	0xFE0
 37460                           indf2	equ	0xFDF
 37461                           postinc2	equ	0xFDE
 37462                           postdec2	equ	0xFDD
 37463                           plusw2	equ	0xFDB
 37464                           fsr2h	equ	0xFDA
 37465                           fsr2l	equ	0xFD9
 37466                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    590
    Data        182
    BSS         2364
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    201     256
    BANK3           256      0     256
    BANK4           192      4     192
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_33(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> isNumberInMemory@readBuffer(BANK1[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> MyApp_Task@emptyNumber(BANK1[13]), callerNumber(BANK4[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 5
		 -> memoryPreamble(BANK3[5]), 

    parseCommand@text	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), MyApp_Task@emptyNumber(BANK1[13]), STR_15(CODE[20]), 
		 -> STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), STR_5(CODE[10]), 
		 -> Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK4[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> isNumberInMemory@readBuffer(BANK1[13]), MyApp_Task@cmdAddNumber(BANK1[4]), parseCommand@deleteNumberCmd(BANK0[3]), parseCommand@addNumberCmd(BANK0[3]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), callerNumber(BANK4[13]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8950 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), MyApp_Task@emptyNumber(BANK1[13]), callerNumber(BANK4[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4612$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4612$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4612$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4612$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3065$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3055$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3055$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3031$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3031$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3031$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3031$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2532_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2532_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_32(CODE[12]), STR_31(CODE[19]), STR_30(CODE[14]), STR_29(CODE[14]), 
		 -> STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), 
		 -> STR_16(CODE[17]), STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), 
		 -> STR_11(CODE[14]), STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), 
		 -> STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _waitSetupCall->_secondsAppTimer
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _saveNumberInMemory->_Eeprom_Write
    _parseCommand->_StringCompare
    _isNumberInMemory->_Eeprom_Read
    _initMemorizedNumbersCount->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _Mdm_MainTask->_ModemEvtParser
    _Mdm_MainTask->_Uart_InitUartModule
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_isNumberInMemory
    _initFsm->_initEeprom
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Sch_MainScheduler->_InitializeTasks
    _Sch_MainScheduler->_ScheduleTasks
    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  806981
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  802350
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  401268
                                            200 BANK2      1     1      0
                                              0 BANK4      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  401082
                                            200 BANK2      1     1      0
                                              0 BANK4      2     2      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59042
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59042
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41832
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          23    23      0  138938
                                             19 BANK1     22    22      0
                    _GetCallerNumber
                _Led_SetLedBlinkTime
                   _Led_SetLedStatus
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
              _Uart_WriteConstString
                            _initFsm
          _initMemorizedNumbersCount
                   _isNumberInMemory
                      _isNumberValid
                       _parseCommand
                 _saveNumberInMemory
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (4) _waitSetupCall                                        1     1      0   17846
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _getSetupCall                                         1     1      0    5631
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (6) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (6) _Mdm_HangPhoneCall                                    0     0      0    2855
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _saveNumberInMemory                                   3     1      2    9612
                                             46 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _parseCommand                                         9     7      2    3008
                                             40 BANK0      9     7      2
                      _StringCompare
 ---------------------------------------------------------------------------------
 (4) _isNumberInMemory                                    19    17      2   28017
                                              0 BANK1     19    17      2
                        _Eeprom_Read
                    _GetCallerNumber (ARG)
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (4) _isNumberValid                                        5     3      2     578
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _initMemorizedNumbersCount                            0     0      0    9342
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (5) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Write                                         7     4      3    9342
                                             39 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   39945
                                              3 BANK1      1     1      0
                         _initEeprom
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15682
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24226
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Read                                          7     4      3   24146
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       3     1      2    7541
                                             39 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5123
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   71700
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   15573
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   12514
                                             40 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _StringCompare                                       11     5      6    2728
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   14664
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8851
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   14102
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   41683
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20878
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20805
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteConstString                                3     1      2    2855
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (8) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _StringCopy                                          10     4      6    4563
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2421
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7347
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7347
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2877
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1    1060
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _StringCompare (ARG)
           _isNumberValid (ARG)
         _isNumberValid
         _parseCommand
           _StringCompare
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _StringCompare (ARG)
           _isNumberValid (ARG)
         _isNumberValid
         _parseCommand
           _StringCompare
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C9     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      C0      14      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9A2       8        0.0%
DATA                 0      0     CC2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 26 21:06:40 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 56FC  
                              _USB_SD_Ptr FC1E                            ??_getSetupCall 0083  
               __size_of_Mdm_SetSmsFormat 0050                      __size_of_TurnOnModem 0046  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 6536  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 2404                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0030                                       l202 2320  
                                     l203 2328                                       l205 2370  
                                     l206 2396                                       l208 239E  
                                     l160 2264                                       l209 23BE  
                                     l161 213A                                       l162 22A2  
                                     l170 2202                                       l171 2218  
                                     l163 2146                                       l315 45B6  
                                     l323 4582                                       l164 2186  
                                     l316 452C                                       l420 4AC6  
                                     l500 4976                                       l173 221C  
                                     l325 459C                                       l421 4AE6  
                                     l237 6542                                       l174 2224  
                                     l166 2194                                       l318 4536  
                                     l422 4AF2               __end_of_USBStdGetDscHandler 2F78  
                                     l510 4948                                       l502 4908  
                                     l175 2230                                       l167 21BC  
                                     l319 455C                                       l423 4AFE  
                                     l511 4938                                       l503 48F8  
                                     l192 23C8                                       l176 2246  
                                     l416 4B12                                       l424 4B0A  
                                     l512 495C                                       l504 491E  
                                     l520 5BB0                                       l193 22A8  
                                     l169 21CE                                       l417 4AB8  
                                     l441 1A70                                       l513 493C  
                                     l505 48FC                                       l521 5B7C  
                                     l194 2400                                       l418 4B40  
                                     l442 1878                                       l514 4942  
                                     l506 4902                                       l530 333E  
                                     l195 22B4                                       l179 2252  
                                     l419 4AC0                                       l523 5B96  
                                     l531 33A4                                       l196 22F4  
                                     l700 5E5A                                       l444 18C0  
                                     l532 336A                                       l445 1908  
                                     l541 64E0                                       l198 2302  
                                     l446 1950                                       l199 2316  
                                     l631 2C8E                                       l447 1998  
                                     l448 19E0                                       l528 33AA  
                                     l633 2D06                                       l625 2C1A  
                                     l449 1A28                                       l529 3396  
                                     l538 64E4                                       l546 3E2E  
                                     l651 5B00                                       l707 5F7E  
                                     l627 2C3E                                       l715 5EF2  
                                     l539 64DC                                       l547 3E4A  
                                     l660 5B24                                       l652 5AFA  
                                     l716 5EC8                                       l709 5F98  
                                     l629 2C66                                       l718 5EE0  
                                     l639 6528                                       l832 627E  
                                     l844 3F02                                       l668 0C44  
                                     _BDT 000400                                       l790 655E  
                                     l855 5090                                       l775 309A  
                                     l864 4CD4                                       l856 5036  
                                     l857 50AA                                       l698 5E3E  
                                     l858 5066                                       l867 4CE6  
                                     l982 27DE                                       l983 26B2  
                                     l985 26D6                                       l987 26F0  
                                     l988 2724                                       l989 2796  
                                     l998 27BA                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 4480  
                          ??_Mdm_MainTask 00A2                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 6106                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1E2E  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CD  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 5EBC  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 26B0  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 5CE4  
         InitGprsNetwork@GprsNetInitState 01EB                                      l1100 1D9E  
                                    l1101 1DEA                                      l1013 5CFC  
                                    l1110 5A04                               RiSm@Counter 02DF  
                                    l1031 375C                                      l1111 5A18  
                                    l1032 3796                                      l1033 37BC  
                                    l1009 5D16                                      l1121 5A70  
                                    l1027 37FE                                      l1035 37E4  
                                    l2003 54DE                                      l1107 5A2A  
                                    l2100 33B2                                      l1220 0DE8  
                                    l1028 374A                                      l1052 210C  
                                    l1060 20DE                                      l1108 59EE  
                                    l2101 3486                                      l1221 0E22  
                                    l1053 2026                                      l2005 54E4  
                                    l2102 33D0                                      l2110 45DE  
                                    l1222 0E96                                      l1070 2E2C  
                                    l2111 4674                                      l1223 0E5E  
                                    l1071 2D24                                      l1055 2126  
                                    l2104 3440                                      l2112 45EE  
                                    l1216 1078                                      l1056 2058  
                                    l1136 63E0                                      l2032 5840  
                                    l1152 63BC                                      l2113 4600  
                                    l1233 1010                                      l1225 0F3E  
                                    l1217 0DD0                                      l1129 5342  
                                    l3001 4F68                                      l1401 5796  
                                    l2130 6212                                      l2114 461A  
                                    l1250 05F4                                      l1234 1054  
                                    l1226 0F78                                      l1074 2D40  
                                    l1058 20A8                                      l2034 584C  
                                    l3002 4F60                                      l1402 5756  
                                    l2122 3C2E                                      l2131 6200  
                                    l1219 10B0                                      l1227 0FB8  
                                    l1075 2D58                                      l1091 1E04  
                                    l3011 513A                                      l2123 3B76  
                                    l2211 4D5E                                      l2116 4628  
                                    l1252 0AB6                                      l1260 07F2  
                                    l1228 0FBC                                      l1092 1C82  
                                    l1156 6090                                      l2140 5856  
                                    l3020 518C                                      l3012 5146  
                                    l1404 5790                                      l2133 6206  
                                    l2109 464C                                      l2117 4636  
                                    l1261 082C                                      l1253 060C  
                                    l1229 1000                                      l3005 4F88  
                                    l2125 3B84                                      l2134 620C  
                                    l1270 096E                                      l1262 0856  
                                    l1254 0646                                      l1238 106E  
                                    l1078 2DCA                                      l2142 5868  
                                    l1414 5EB6                                      l3006 4F92  
                                    l3014 515C                                      l1263 0890  
                                    l1255 0680                                      l1095 1C9E  
                                    l2143 587A                                      l3007 4FA0  
                                    l3015 5154                                      l3200 4FDA  
                                    l1264 08CA                                      l1256 06BA  
                                    l1096 1D54                                      l1440 39F4  
                                    l2400 01AE                                      l2208 4D72  
                                    l3201 4FCE                                      l1249 0A54  
                                    l1265 090E                                      l1257 073E  
                                    l1097 1D78                                      l1409 5F70  
                                    l2401 019C                                      l1601 244E  
                                    l2209 4CF8                                      l2090 2A00  
                                    l2250 60C4                                      l1282 0A42  
                                    l1274 097E                                      l1258 06F6  
                                    l1442 3A52                                      l3018 5174  
                                    l2251 60B0                                      l1283 0A4A  
                                    l1275 09AA                                      l2139 588C  
                                    l1419 64CC                                      l1443 3A66  
                                    l3019 517E                                      l2411 0392  
                                    l1603 2476                                      l1291 5C9E  
                                    l1380 4030                                      l3204 500E  
                                    l2244 54CE                                      l2412 0326  
                                    l1700 3878                                      l1620 1EA4  
                                    l1612 1E5A                                      l1381 4052  
                                    l3205 501C                                      l2245 548E  
                                    l1277 09C4                                      l1269 092A  
                                    l2237 598C                                      l1437 3A8C  
                                    l1445 3A84                                      l2413 02B4  
                                    l1605 24B6                                      l1621 1EB0  
                                    l1613 1E50                                      l2501 6414  
                                    l1390 40B4                                      l2086 2A72  
                                    l1278 0A32                                      l2238 5962  
                                    l1438 39D6                                      l2414 0250  
                                    l2406 01D0                                      l1710 30FA  
                                    l1630 1F44                                      l1614 1E4E  
                                    l1391 40C0                                      l1383 4074  
                                    l2087 2954                                      l2239 5988  
                                    l1439 3AA2                                      l2431 045E  
                                    l2423 0402                                      l1703 38F4  
                                    l1711 30D4                                      l1623 1ED8  
                                    l2088 2A88                                      l3160 64AC  
                                    l2432 0578                                      l2424 03D2  
                                    l2416 0304                                      l1704 38BA  
                                    l1640 5D80                                      l1288 5CD0  
                                    l2089 297C                                      l2417 02C6  
                                    l1713 3172                                      l1641 5D90  
                                    l1633 1F6A                                      l1625 1EEE  
                                    l1617 1E76                                      l2601 182E  
                                    l1386 407C                                      l3170 4488  
                                    l2434 04B4                                      l3410 55A2  
                                    l1714 3158                                      l1730 2F60  
                                    l1722 34E6                                      l1810 368A  
                                    l1626 1EFA                                      l1618 1E86  
                                    l2602 1658                                      l1379 40CE  
                                    l2099 346A                                      l2435 0478  
                                    l1731 2E5C                                      l1811 369E  
                                    l1635 1F8E                                      l1627 1F24  
                                    l1619 1E8E                                      l2611 16EA  
                                    l1388 4098                                      l3172 44C4  
                                    l3412 55C2                                      l1900 434A  
                                    l1724 355A                                      l1812 36A4  
                                    l1628 1F30                                      l2612 1704  
                                    l2604 16D6                USBConfigureEndpoint@handle 0083  
                                    l3253 58C4                                      l1645 41CE  
                                    l3173 4506                                      l2429 041E  
                                    l3413 55B8                                      l2453 131E  
                                    l1733 2E70                                      l1805 3704  
                                    l1637 1FAC                                      l2613 171C  
                                    l2605 167A                                      l3254 58BC  
                                    l3166 5DD6                                      l2438 0524  
                                    l2454 10B8                                      l1902 4362  
                                    l1822 137E                                      l1734 2EF8  
                                    l1750 42B6                                      l1814 36AA  
                                    l1806 3674                                      l1670 480C  
                                    l2622 17A8                                      l1647 41F8  
                                    l3263 5E0C                                      l2439 0570  
                                    l2471 12F8                                      l2463 110E  
                                    l1903 4370                                      l1831 14EA  
                                    l1823 1384                                      l1743 42F8  
                                    l1815 36C8                                      l2615 175E  
                                    l3264 5E04                                      l3440 1AE0  
                                    l3424 5F0C                                      l2456 10DE  
                                    l1664 3C88                                      l1904 438E  
                                    l1736 2F00                                      l1744 427E  
                                    l1816 36E4                                      l1808 367E  
                                    l1672 4826                                      l2624 17DC  
                                    l3257 58E4                                      l1649 4254  
                                    l1921 4A18                                      l3521 62FE  
                                    l2393 05D2                                      l3409 55A8  
                                    l3425 5F06                                      l2473 1318  
                                    l2465 112E                                      l1905 43A6  
                                    l1841 1570                                      l1833 14B2  
                                    l1825 13F6                                      l1737 2F50  
                                    l1809 3684                                      l1681 3242  
                                    l2481 65C6                                      l2617 1774  
                                    l3258 58EE                                      l3418 614C  
                                    l3450 1B5C                                      l3442 1AF8  
                                    l2394 00E2                                      l2810 3AFC  
                                    l2802 3AB2                                      l2458 10FA  
                                    l1834 14D0                                      l1682 31EA  
                                    l2715 46DC                                      l3267 5E24  
                                    l3419 6142                                      l3451 1B6C  
                                    l3283 61B6                                      l2803 3ACC  
                                    l2467 114E                                      l1843 15C6  
                                    l1827 143E                                      l1739 2F58  
                                    l1747 430E                                      l1771 4AA0  
                                    l2627 17FC                                      l1924 49C6  
                                    l3268 5E2E                                      l3516 61F0  
                                    l3460 1C64                                      l3444 1B4C  
                                    l3284 61A4                                      l2804 3B2E  
                                    l1676 48C0                                      l1836 1532  
                                    l1828 1440                                      l1748 4290  
                                    l1772 4A9A                                      l2628 181C  
                                    l2717 4708                                      l1925 49F2  
                                    l3453 1B86                                      l3533 5FE8  
                                    l2397 0152                                      l2813 3B4E  
                                    l2469 128E                                      l1837 153E  
                                    l1829 145C                                      l1749 4296  
                                    l3277 5C40                                      l1757 5D68  
                                    l1765 6020                                      l2718 4718  
                                    l2670 4C10                                      l2574 4BA6  
                                    l1926 49CC                                      l3526 6468  
                                    l2398 01E2                                      l1790 4124  
                                    l1782 5358                                      l1838 15BA  
                                    l1686 326C                                      l3278 5C1E  
                                    l1758 5D66                                      l1766 601E  
                                    l2478 65CC                                      l2663 4C44  
                                    l2671 4C24                                      l2807 3AD2  
                                    l1951 2ABE                                      l1695 3844  
                                    l1791 412A                                      l2680 4EAA  
                                    l2672 4C3C                                      l2664 4BDE  
                                    l2576 4BD0                                      l3464 663E  
                                    l3456 1B98                                      l1960 2B28  
                                    l1792 41A6                                      l1784 53A6  
                                    l2753 6510                                      l3457 1C04  
                                    l3537 6626                                      l3481 35BC  
                                    l2809 3B1A                                      l1953 2AF2  
                                    l1697 384E                                      l1793 416C  
                                    l2682 4EF0                                      l3490 365A  
                                    l2498 641A                                      l2827 565E  
                                    l3459 1C2A                                      l1963 2BA2  
                                    l1699 38B2                                      l1795 418C  
                                    l2499 640C                                      l2828 5672  
                                    l2684 4F20                                      l2780 543A  
                                    l3484 361C                                      l1964 2B6A  
                                    l1956 2B04                                      l2685 4EFC  
                                    l2669 4C60                                      l2693 5C82  
                                    l2757 5AC8                                      l3485 35D4  
                                    l1957 2B08                                      l1949 2AB0  
                                    l2597 1860                                      l2686 4F02  
                                    l2694 5C5C                                      l2782 546C  
                                    l2790 4E94                                      l3486 35EC  
                                    l3478 3594                                      l1990 637C  
                                    l2598 163E                                      l2679 4F0C  
                                    l2783 5472                                      l2759 5AD4  
                                    l3487 35FC                                      l3479 358E  
                                    l1967 2BBC                                      l1959 2B60  
              __size_of_Mdm_IsSmsReceived 0024                                      l2696 5C96  
                                    l2792 4E8E                                      l1968 2BC0  
                                    l1992 6382                                _Led1OutSts 01FA  
                                    l2697 5C6A                                      l2699 5C7C  
                                    l1899 43B0                                      l2980 38FE  
                                    l2789 4E2E                                      l1997 54EA  
                                    l1989 638C                                      l2982 3946  
                                    l2985 3996                                      l2986 3958  
                                    l2979 3904                                      l2988 39CA  
                                    l2998 4F3A                                      l2999 4F4A  
                                    STR_1 FFE6                                      STR_2 FF75  
                                    STR_3 FFDF                                      STR_4 FFC2  
                                    STR_5 FFCE                                      STR_6 FFF0  
                                    STR_7 FFEB                                      STR_8 FE89  
                                    STR_9 FEBD                                _Led2OutSts 01F8  
                              _Led3OutSts 01F6                     ??_USBCtrlTrfTxService 007D  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u8705 5B92  
                                    u8706 5B94                                      u8715 5BA0  
                                    _UEIE 000F37                                      u8716 5BA2  
                                    u8725 5BAC                  __size_of_Uart_Uart1RxIsr 0010  
                                    u8726 5BAE                                      u8695 5B86  
                                    u8696 5B88                                      _UEIR 000F63  
                                    _UCON 000F65                                _AlarmEvent 01F5  
                          ?_StopCondition 0001                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 031C                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 67B2                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 0031  
             Led_SetLedBlinkTime@OnTimeMs 007D    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D5                      _NewStringMdmTerminal 003A  
                                    _atoi 38FC                                      _main 6774  
                         ??_Mdm_IsRinging 0081                                      _itoa 5DB0  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 609C  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 0314                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 4480  
                                    _xtoi 357E                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 67BA               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4AB2               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 5EFC  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC                       __end_of_Eeprom_Read 5850  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 665A                             _isNumberValid 5414  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
        isNumberInMemory@positionInMemory 0111                __end_of_USBCheckStdRequest 3748  
                         _Rtcm_SystemDate 0300                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 66FC                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
                          _GetElapsedTime 3E9E             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
                     StringCopy@SourceStr 007D               __end_of_OsAlrm_ClearOsAlarm 5754  
                Eeprom_Write@SlaveAddress 008C                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
              waitSetupCall@isCallArrived 0093                       __size_of_I2cDummyTx 001C  
                        ??_Mdm_GetSmsData 0089                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 5F78  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDAB  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DC                                     l14122 2446  
                                   l12508 61A4                                     l14150 24AE  
                                   l14074 60E4                                     l12546 384E  
                                   l13710 4718                                     l12742 34DE  
                                   l13560 3992                                     l11776 6542  
                                   l15250 09A4                                     l13394 5C1E  
                                   l15402 1F3C                                     l15084 0FB0  
                                   l14562 5432                                     l16330 5534  
                                   l16328 5504                                     l14736 33AA  
                                   l13948 4ACC                                     l14862 201E  
                                   l14884 20D8                                     l15962 50BA  
                                   l15974 2F82                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 4FAA                                     STR_10 FF4B  
                                   STR_11 FF59                                     STR_12 FF9D  
                                   STR_20 FF3D                                     STR_13 FF67  
                                   STR_21 FE5F                                     STR_30 FF2F  
                                   STR_14 FEA8                                     STR_31 FEFA  
                                   STR_15 FEE6                                     STR_23 FED2  
                                   STR_24 FFF5                                     STR_32 FFAA  
                                   STR_16 FF1E                                     STR_25 FFF5  
                                   STR_33 FFD8                                     STR_17 FF83  
                                   STR_26 FE86                                     STR_18 FF90  
                                   STR_27 FF0D                                     STR_28 FFB6  
                         __end_of___awmod 5196                                     STR_29 FF2F  
       __size_of_USBCtrlEPServiceComplete 0100                           __end_of___lldiv 502E  
                                   ?_utoa 008A                                     u11200 5AF6  
                                   u11130 38A0                                     u12030 4FDE  
                                   u11150 38E2                                     u10335 62C0  
                                   u11400 2EC2                                     u10336 62C2  
                                   u11137 3896                                     u10345 62CC  
                                   u11410 2EF2                                     u10346 62CE  
                                   u10355 62D8                                     u10356 62DA  
                         ___awdiv@divisor 007F                                     u12205 66C0  
                                   u11157 38D8                                     u12206 66C2  
                                   u12310 54C6                                     u12070 62FA  
                                   u11430 2F44                                     u11407 2EB8  
                                   u12160 5FCC                                     u11360 3512  
                                   u13105 0AF4                                     u11417 2EE8  
                                   u12090 61E0                    __end_of_USBDeviceTasks 1FB6  
                                   u13115 0B14                                     u11700 58C8  
                                   u14100 45AE                                     u12260 2C62  
                                   u13220 5998                                     u12180 5FD8  
                                   u12317 54BC                                     u13125 0B9E  
                                   u11437 2F3A                                     ?_xtoi 0083  
                                   u13145 0C78                                     u12450 49A2  
                                   u11730 5E10                                     u11650 1554  
                                   u13250 246A                                     u13155 0C98  
                                   u13165 0D22                                     u13085 6680  
                                   u14125 666A                                     u13086 6682  
                                   u14126 666E                                     u12710 1B32  
                                   u14055 51FA                                     u13280 2512  
                                   u14065 66D4                                     u11770 5E68  
                                   u14090 4594                                     u14170 274C  
                                   u15050 1FB2                                     u14066 66D6  
                                   u14251 1FD0                                     u15211 540A  
                                   u14340 212C                                     u12660 1AE8  
                                   u15140 2B50                                     u14261 1FE2  
                                   u11790 5FA6                                     u14190 2760  
                                   u14271 1FF4                                     u15160 2B92  
                                   u12930 5160                                     u12690 1B22  
                                   u15170 2BAA                 ?_USBCtrlEPServiceComplete 0001  
                                   u15147 2B46                                     u13900 3B66  
                                   u12870 4F6C                                     u15167 2B88  
                                   u15511 4D50                                     u13840 55EA  
                                   u15521 4D68                                     u15530 15FC  
                                   u13780 04BE                                     u12965 5B4A  
                                   u13950 5476                                     u13847 55E0  
                                   u13970 4BEE                                     u15738 50F0  
                                   u15739 511E                                     u15778 304E  
                         __end_of___lwdiv 58F8                                     u15779 307C  
                         __end_of___lwmod 5E38                 TurnOnModem@TurnOnMdmState 0028  
                      ??_UpdateOsCounters 0019                                     i1l742 2572  
                                   i1l747 26AE                                     i2l680 3DC6  
                                   i2l681 3D16                                     i2l690 3D60  
                                   i2l682 3D24                                     i2l686 3D46  
                                   i2l688 3DB8                                     i2l689 3D80  
                                   _UADDR 000F38                           ___awdiv@counter 0081  
                                   _AlCfg 03AB              Led_SetLedBlinkTime@OffTimeMs 007F  
                 I2cSendMsgSm@I2cComState 01E7                                     _USTAT 000F64  
                 __end_of_LedStateMachine 467A        __size_of_USBCtrlEPAllowStatusStage 00CC  
                     ___lmul@multiplicand 0081                      ??_InitModemInterface 007D  
                                   _RxLen 00C2           __end_of_USBCtrlEPAllowDataStage 485A  
                           _StringCompare 594A                                     _sd000 FE5B  
                                   _sd001 FE14                                     _sd002 FDEE  
          ?_USBIncrement1msInternalTimers 0001               Rtcc_GetRtccValue@RtccPtrVal 007E  
                    __end_of_Led_MainTask 3C40                               _ApnLenLocal 01EF  
                  ??_OsTmr_GetTimerStatus 0097              LedPulseStateMachine@LedPulse 008A  
                         __end_of_initFsm 5C9C                           __end_of_isalpha 61FA  
                         __end_of_isdigit 64B4                 saveNumberInMemory@address 0090  
                                   atoi@a 0088                                     atoi@s 0083  
                  Eeprom_Write@DataLength 0089                               _ClearBuffer 609C  
                         __end_of_isspace 6306               I2cSlv_QueryI2cData@RxBuffer 00A5  
              I2c_WriteData@I2cWriteState 0037                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 6470  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 637A                 __end_of_Rtcc_GetRtccValue 4B46  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 5274                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 5754  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                        parseCommand@text 0088                                     wtemp6 0043  
                         __end_of_sprintf 3B74                           __end_of_tolower 662A  
                     __end_of_Mcu_Int0Isr 67E2                       __end_of_Mcu_Int1Isr 67DE  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 6642                    __end_of_GetElapsedTime 3F66  
                   __end_of_UartSetConfig 564C                      __end_of_Eeprom_Write 594A  
                  __size_of_initGprsModem 0090                            ?_isNumberValid 007D  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 65DE                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2E4A                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 62B2  
                          _InitSchedTimer 622A                           __initialization 2802  
             __size_of_saveNumberInMemory 001A                          __end_of_MdmCntSm 45D2  
                    __end_of_I2c_ReadData 2404                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 40F2                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 15EE                              __end_of_atoi 39D4  
                            __end_of_main 6780                       StringCompare@Result 0085  
                            __end_of_itoa 5DF4                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01DF                              __end_of_utoa 452A  
                            __end_of_xtoi 3664                  __end_of_Rtcm_SetRtccDate 57FC  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 679E              __size_of_I2cSlv_QueryI2cData 00D2  
                    Term_MainSm@TermDelay 03D4                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE49                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 0085                                    ??_main 00B0  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4988                             ?_initPreamble 007D  
                              _ReceiveEvt 6258          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 671C  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                    initFsm@isInitialized 0103              isNumberInMemory@searchFailed 010F  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 502E                              _cdc_mem_type 01E0  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03F5  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC        __size_of_initMemorizedNumbersCount 001A  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 3DD6  
              _Uart_MdmGsmGprsReadService 3D0C                __end_of_UsbDevice_MainTask 639E  
                         getsUSBUSART@len 0086                      __end_of_getSetupCall 6516  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 6536  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 57FC  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1409 6060                               _GenerateEvt 6642  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002B  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC30  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 52E0                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 6258                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 67D2  
                              _UartConfig 0328                      __end_of_Mdm_MainTask 5A3C  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CC  
                           ??_Term_MainSm 00A7                                    _Relay1 01DA  
                                  _Relay2 01D9                                    _Relay3 01D8  
                                  _Relay4 01D7                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 5CE2  
                                  _SmsLen 00D3                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 5B76                                    ___lmul 564C  
                    _I2cSlv_ReceiveI2cMsg 5E7C                        TurnOnModem@Counter 02D9  
                            ?_putUSBUSART 0083                                    ___wmul 6306  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5A3C  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5850  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 4A1E  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 5D6C           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 5C0C                    __size_of_HttpGetMethod 04D0  
                                  _memset 619A                                    clear_0 28B4  
                                  clear_1 28C6                                    clear_2 28D2  
                                  clear_3 28DE                                    clear_4 28EA  
                                  clear_5 28F6                                    clear_6 2902  
                                  clear_7 290E                         parseCommand@F9015 FC2B  
                                  clear_8 291A                                    clear_9 2926  
                       parseCommand@F9017 FC28                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E3                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01EC                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01F2  
                      ?_USBEnableEndpoint 0085                            ??_initPreamble 007F  
                                  _strcat 5598                                    _strcpy 6138  
                                  _strlen 5EFC                                    _strtol 1AA0  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 5FF2                  HttpGetMethod@UartMessage 0100  
                               ??_initFsm 00B0                             _initGprsModem 4BD6  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9110 03C1  
                     ModemEvtParser@F9112 03B7                       ModemEvtParser@F9106 03CB  
                     ModemEvtParser@F9108 03C6                              _CDCTxService 2A9A  
                     MdmCntSm@MdmCntState 002D                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC10  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 04CC                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 67CA  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 57A8                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 67DE  
                             _Mcu_Int1Isr 67DA                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                       parseCommand@state 0090                    __size_of_ScheduleTasks 0126  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A0                      _controlTransferState 00CB  
       __end_of_initMemorizedNumbersCount 6612                     __end_ofi1_GenerateEvt 669C  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 4D84  
              __size_of_Rtcc_GetRtccValue 0094                             ?_parseCommand 0088  
                      _ExtInt1IsrCallback 02E1                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 2944  
                      Eeprom_Read@ReadSts 00AE                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                           ??_isNumberValid 007F  
                  __end_of_EnableReceiver 67D6                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01FC                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 5B28  
         I2cSlv_QueryI2cData@TimeoutTimer 033D                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 547A  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FD  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D3  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DD                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 5DB0  
                             _InitNetwork 00DA                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5F  
                           __end_of_sd001 FE32                             __end_of_sd002 FE14  
                            __pidataBANK0 67E4                              __pidataBANK1 67E2  
                            __pidataBANK2 675A                              __pidataBANK3 5BC2  
                            __pidataBANK4 6767                              __pidataBANK5 599C  
               __end_ofparseCommand@F9015 FC2E                 __end_ofparseCommand@F9017 FC2B  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 5E38          isNumberInMemory@searchInProgress 0110  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 6106  
           __size_of_USBConfigureEndpoint 0098               parseCommand@deleteNumberCmd 008D  
                __size_of_InitializeTasks 0074                        __end_of_I2cDummyTx 65AA  
             __end_of_USBCtrlTrfInHandler 41B4                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                 __size_of_isNumberInMemory 008A  
                     __end_of_Term_MainSm 135A                 initGprsModem@currentState 01D5  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 6686  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E6                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 616A  
                              _cdc_notice 0459                     __end_of_Tmr_TmrBPrSet 33B0  
                   __end_of_waitSetupCall 5ADA                       __end_of_Rtcc_RtcIsr 67DA  
                              _cdc_rx_len 00C6                         __end_of_MsgFormat FD22  
                              _cdc_tx_len 00C4                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                     _memorizedNumbersCount 0038  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 6066  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01E1  
                          ClearBuffer@Len 007F                           _secondsAppTimer 467A  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 62B2  
                  _USBStdGetStatusHandler 4272                         __end_of_SendSmsSm 1E2E  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01EE  
                          _Rtcc_RtcConfig 471C                     __size_of_Eeprom_Write 0052  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                          ??_parseCommand 008A                                __pbssBANK2 02C9  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 0572  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 66B2  
             isNumberInMemory@phoneNumber 0100                  __end_of_Uart_WriteString 5FB6  
            getSetupCall@isCalledReceived 0083                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 640A  
                             _SetBaudRate 5B28                 initGprsModem@modemCounter 03B5  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01F0  
                             _pBDTEntryIn 00B6          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 32C2                                 ?_TmrBInit 007D  
                           _CheckTxStatus 679E                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
                     MyApp_Task@cmpString 0120                                 ?_Terminal 0001  
                    Eeprom_Write@WriteSts 008A                                   ?___lmul 007D  
                            _Led_MainTask 3B74                            _Rtcc_UnlockRtc 66FC  
                            _I2cBusStatus 01E8                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2F78  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 22A6  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE49                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 4A1E                     __end_of_UpdateSchFlag 658E  
                            _EepromBuffer 04BD                                _ep_data_in 02D2  
                         _I2cWriteDataEvt 00D8                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 31C2                         __end_of_WriteByte 6794  
                      _USBCheckStdRequest 3664                         _configDescriptor1 FDAB  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04A9  
                            _Eeprom_Write 58F8                     __size_of_getSetupCall 0020  
             __end_of_USBCtrlTrfTxService 38FC                         triggerRelay@F9023 03D2  
                     _USBStdSetCfgHandler 3498                   __size_of_ConfigureModem 00DC  
                  I2cSlv_QueryI2cData@Ret 01E5                 Eeprom_Write@MemoryAddress 008B  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 6286  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 47BC                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 0087                                   _SSP2BUF 000F75  
                            _I2c_ReadData 22A6                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 402E  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01DD  
          __end_of_Pm_DsReleasePinControl 67C0                       ?_USBCheckStdRequest 0001  
                   Mdm_SetSmsFormat@Index 0083              __size_of_USBStdGetDscHandler 012E  
                              ??_MdmCntSm 0081                       __size_of_MyApp_Task 0284  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00E1  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 0029  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01FB  
                     _I2cSlv_QueryI2cData 39D4                                   _Led2Sts 01F9  
                                 _Led3Sts 01F7                __end_of_Sch_SchmIntService 675A  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 0088  
                           _cdc_trf_state 00C5                                ??_ReadByte 007D  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 67C6  
                    __end_of_initPreamble 6354                    initEeprom@currentState 01D4  
                        _ComChecCompleted 002A                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C9  
                   __end_of_Mdm_IsRinging 63C2                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CC                     __size_of_getsUSBUSART 0096  
                                 _RelayB1 01DC                                   _RelayB2 01DB  
                             ?_StringCopy 007D                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 00D7                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 5208  
                  __end_of_Rtcc_UnlockRtc 670C                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 66C6  
                              _initEeprom 4E9A                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD22  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 6554  
                  ?_Uart_WriteConstString 0080                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 6670  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 4F24  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 5124  
                                 ___lldiv 4FAA                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                                   ___lwdiv 58A4  
                       ??_USBStallHandler 007D                                   ___lwmod 5DF4  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                              _getSetupCall 64F6  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 67D6                      __size_of_putUSBUSART 0022  
                                 __pcinit 2802                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CE  
                     __end_of_TurnOnModem 5D28                           __size_of_memset 0030  
                 initEeprom@isInitialized 0102                                 _I2cConfig 0348  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDEE  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 0089  
                             Terminal@Len 03A7                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 6774                                   __ptext1 616A  
                                 __ptext2 6780                                   __ptext3 67BA  
                                 __ptext4 6536                                   __ptext5 65AA  
                                 __ptext6 62B2                                   __ptext7 622A  
                                 __ptext8 3DD6                                   __ptext9 32C2  
                                 _inPipes 00B0                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 471C  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                                 _initFsm 5C54                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 61CA  
                                 _isdigit 6492            isNumberInMemory@memoryOpResult 0112  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B0  
                             ?_SystemInit 0001                                   clear_10 2932  
                                 clear_11 293E                          ___awmod@dividend 007D  
                       ??_InitializeTasks 04FC                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 02E9       __end_of_Tmr_RegisterTmr2IsrCallback 678A  
             _Tmr_RegisterTmr2IsrCallback 6780                                   _isspace 62DC  
                            _Mdm_MainTask 59EC                                   _isupper 644E  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                   MyApp_Task@emptyNumber 0113                    ?_Irq_InitIntController 007D  
                                 _smsText 0495                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 255A  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC30  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 63E6  
                                 _sprintf 3AA6                                   _tolower 6612  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 673C  
                        _HttpGetDataLocal 039E                  __end_of_Mdm_SetSmsFormat 5A8C  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 43D4  
                                 _toupper 662A           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 2944  
                            _getsUSBUSART 4988                              ?_Eeprom_Read 00A9  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DB  
             ?_Uart_MdmGsmGprsReadService 0004                    MyApp_Task@cmdAddNumber 0123  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC24       Irq_InitIntController@PerInt_LowPInt 007E  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                       _pBDTEntryEP0OutNext 00BE  
                                 itoa@buf 0093                                   memset@c 007F  
                                 itoa@val 0095                                   memset@n 0081  
                  Term_MainSm@FwkMinorStr 0136                                   memset@p 0083  
                           __Lmediumconst FC10                            _ModemEvtParser 1FB6  
                                 int_func 43D4                           _USB1msTickCount 0318  
         _dummy_encapsulated_cmd_response 036D                                 i1u1542_20 2570  
                               i1u1546_28 2690                                 i1u1546_29 26A4  
                               i1u1581_28 63F6                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                __end_of_saveNumberInMemory 65F8  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 6572  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 1872                         _Rtcc_SetRtcStatus 665A  
                     _ActivateRiDetection 0041                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 6138  
                           StringCopy@Len 0081                         ?_MdmHttp_MainTask 0001  
                I2cSlv_QueryI2cData@RxLen 00A7                   _USBCtrlEPAllowDataStage 47BC  
                      _UsbDevice_MainTask 637A                  I2cSlv_QueryI2cData@TxLen 00A4  
                            _Mcu_ClearWdg 67C6                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 31C2  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01E9  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2802  
                         _RtccIsrCallback 02E5          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                          _isNumberInMemory 4E10  
                    __end_of_parseCommand 4BD6                _USBStatusStageEnabledFlag1 00C7  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 642C                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 66D8                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 64D6                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 007F                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E7                          _HttpGetMethodSts 01ED  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                isNumberValid@phoneNumber 007D                        _BothEP0OutUOWNsSet 01E2  
                         ??_HttpGetMethod 009D                   __size_of_Mdm_GetSmsData 0068  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0036  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 2138                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D5  
                   __end_of_StopCondition 67CE                  __size_of_HighPriorityIsr 4478  
                     ??_Mdm_HangPhoneCall 0083                 Tmr_TmrBPrSet@TmrBPrCfgSts 009A  
               __size_of_OsTmr_StartTimer 005E                    secondsAppTimer@counter 008A  
                               _Led1Blink 0364                                 _Led2Blink 035B  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 0352  
            __end_of_USBTransferOnePacket 4272                           ??_CheckTxStatus 007D  
                               _Led1Pulse 0388                    secondsAppTimer@seconds 008F  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 1AA0  
               __end_of_Rtcc_SetRtcStatus 6670                                 _Led2Pulse 0382  
                               _Led3Pulse 037C                         _I2cSlv_SendI2cMsg 5F3A  
         SetBaudRate@DesiredI2cBusClockHz 0096                       Eeprom_Read@QuerySts 00AF  
                         ??_ScheduleTasks 04FC                            _Tmr_TmrBConfig 3DD6  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 66D8  
                       _OsAlrm_SetOsAlarm 3F66                      Terminal@TermRxBuffer 0540  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 5B76                               ?_initEeprom 0001  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 5CE2  
                               _ClipEvent 00DE                              ??_MyApp_Task 00B0  
                    Terminal@TermTxBuffer 0100             saveNumberInMemory@phoneNumber 008E  
                               _GetMethod 00D9                    _USBCtrlTrfSetupHandler 4D84  
                      ?_OsAlrm_SetOsAlarm 0083                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 255A     __end_of_USBIncrement1msInternalTimers 644E  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 642C  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 56A4  
                          _CheckAckStatus 67A8                            __end_of___wmul 632E  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 66EA  
                  __size_of_UartWriteByte 0020                            __end_of_memcpy 5C54  
                      Terminal@PackageLen 02EF         Uart_MdmGsmGprsReadService@RxState 002C  
                          __end_of_memset 61CA                        _UartTxBufferStatus 5ADA  
                     ??_OsAlrm_SetOsAlarm 008B                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E3  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 674C  
                               _MdmStatus 00D1                            __end_of_strcat 55F4  
                          __end_of_strcpy 616A                            __end_of_strlen 5F3A  
                          __end_of_strtol 1C76                       start_initialization 2802  
         isNumberInMemory@currentPosition 00E2                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3748  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 60D2  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 48F2                     __size_of_initPreamble 0026  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC32  
                      __end_of_MyApp_Task 1872                          _UpdateOsCounters 672C  
                         ?_ModemEvtParser 0001                I2c_InitI2cModule@I2cConfig 00A2  
                       __size_of_GetSmsSm 0132         __end_of_USBCtrlEPAllowStatusStage 3D0C  
               __end_of_I2cSlv_SendI2cMsg 5F78                    Uart_WriteStringLen@Len 0082  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 4AB2  
                       __size_of_MdmCntSm 00A8                         ?_Uart_WriteString 0080  
                   __size_of_SetAckStatus 0014                ?_initMemorizedNumbersCount 0001  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 671C  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3E9E                                 _SendSmsSm 1C76  
               __end_of_OsAlrm_SetOsAlarm 402E                    __end_of_Tmr_TmrBIrqSet 5BC2  
                               _TaskTable 05A4                                 _RingEvent 00DF  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D4                     __end_of_isNumberValid 547A  
                       __size_of_ReadByte 000A                                 _RtcConfig 03AF  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 55F4                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 6286                    _pBDTEntryEP0OutCurrent 00C0  
                           _Term_MainTask 65C4                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 67B2                                  ??___lmul 0085  
                           _isxdigit$6624 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2E4A  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 50B0  
                      HttpGetMethod@Index 01C8                               __pdataBANK0 00E2  
                             __pdataBANK1 01FE                               __pdataBANK2 02F3  
                             __pdataBANK3 03B7                isNumberInMemory@readBuffer 0102  
                             __pdataBANK4 04EF                               __pdataBANK5 05A4  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 58A4  
                  __end_of_ConfigureModem 3824                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D6            __end_of_USBStdGetStatusHandler 4324  
                            _initPreamble 632E                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC32                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 599C  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00C2                             __pcstackBANK4 04FC  
                         RiSm@MdmDrvState 002E                              _SetAckStatus 66B2  
                            _isalpha$6614 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 678A                       __size_of_initEeprom 008A  
                    ?_USBStdGetDscHandler 0001                              _isdigit$6348 007E  
           UpdateSchFlag@InterruptCounter 02DB                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 5EBC       InitGprsNetwork@GprsNetInitNextState 00D0  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 6516  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 602C  
            __end_of_LedBlinkStateMachine 2A9A                               sprintf@flag 0083  
                    __size_of_Eeprom_Read 0054                           _USBStallHandler 5D28  
                              ?_SendSmsSm 0001                              _pBDTEntryOut 030E  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 00A0                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 65AA                __end_of_USBCheckCDCRequest 43D4  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 56FC  
                         ?_Tmr_TmrBIrqSet 007D                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 64F6  
                            ??_StringCopy 0083                          _Led_SetLedStatus 61FA  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 64B4                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_parseCommand 0090  
                  __size_of_waitSetupCall 004E                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC10                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 58F8                                 __ptext101 5C54  
                               __ptext110 5E7C                                 __ptext102 4BD6  
                               __ptext111 64B4                                 __ptext103 467A  
                               __ptext120 5EBC                                 __ptext112 671C  
                               __ptext104 5A3C                                 __ptext121 1FB6  
                               __ptext113 63C2                                 __ptext105 4E9A  
                               __ptext130 26B0                                 __ptext122 60D2  
                               __ptext114 52E0                                 __ptext106 57FC  
                           Terminal@Index 00A6                                 __ptext131 452A  
                               __ptext123 594A                                 __ptext115 5850  
                               __ptext107 39D4                                 __ptext140 553A  
                               __ptext132 67B2                                 __ptext124 2D18  
                               __ptext116 6066                                 __ptext108 502E  
                               __ptext141 4C66                                 __ptext133 0DC8  
                               __ptext125 3748                                 __ptext117 55F4  
                               __ptext109 5F3A                                 __ptext150 3F66  
                               __ptext142 3E9E                                 __ptext134 05EC  
                               __ptext126 0ABC                                 __ptext118 5CE2  
                               __ptext151 6306                                 __ptext143 66EA  
                               __ptext135 5F78                                 __ptext127 2BE0  
                               __ptext119 1C76                                 __ptext160 678A  
                               __ptext152 5196                                 __ptext144 609C  
                               __ptext136 5E38                                 __ptext128 564C  
                               __ptext161 67CA                                 __ptext153 5B28  
                               __ptext145 45D2                                 __ptext137 6516  
                               __ptext129 56A4                                 __ptext170 63E6  
                               __ptext162 67CE                                 __ptext154 4FAA  
                               __ptext146 33B0                                 __ptext138 5ADA  
                               __ptext171 674C                                 __ptext163 66B2  
                               __ptext155 6286                                 __ptext147 61FA  
                               __ptext139 547A                                 __ptext172 6572  
                               __ptext164 6794                                 __ptext156 402E  
                               __ptext148 2952                                 __ptext181 673C  
                               __ptext173 672C                                 __ptext165 6642  
                               __ptext157 6258                                 __ptext149 58A4  
                               __ptext182 3D0C                                 __ptext174 255A  
                               __ptext166 67D2                                 __ptext158 2138  
                               __ptext183 669C                                 __ptext175 6354  
                               __ptext167 679E                                 __ptext159 22A6  
                               __ptext184 67D6                                 __ptext176 56FC  
                               __ptext168 67A8                                 __ptext185 67DA  
                               __ptext177 658E                                 __ptext186 67DE  
                               __ptext178 602C                                 __ptext187 0000  
                               __ptext179 6686                                  ?___awmod 007D  
                      _Sch_SchmIntService 674C                           _InitializeTasks 50B0  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                 isNumberValid@isNumberOk 0080                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 04E4                   Eeprom_Write@WriteBuffer 0087  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 038E                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 41B4  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                               _I2cTxBuffer 044F  
                                ?_initFsm 0001                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 0399  
          InitializeTasks@ActiveTaskIndex 02C8                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 52E0  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                           Terminal@Payload 0766  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 53AE  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 007D  
                        _Rtcm_GetRtccDate 53AE                ConfigureModem@DelayCounter 0326  
                      __end_of_StringCopy 54DC                               _ep_data_out 02CF  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 0088                              ?_Tmr_Tmr2Isr 0001  
                            _SendSmsEvent 00E0                           Terminal@SwTimer 04D9  
                initEeprom@memoryOpResult 0101                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
                          _setupCallTicks 03B3              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 007D                                  ?_toupper 0001  
                                _I2cReady 02EB                         ?_Mdm_SetSmsFormat 0001  
                          ?_UartWriteByte 007D                  MyApp_Task@numberInMemory 0128  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02D7  
                        _OsTmr_StartTimer 553A                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E                  __end_of_isNumberInMemory 4E9A  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 6686                __end_of_Mcu_StartSystemPll 6554  
                            _parseCommand 4B46                              _PhoneNumbLen 00D2  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 640A  
                           _Rtcm_MainTask 4CF6                            ___wmul@product 0081  
                ModemEvtParser@ClipString 0092                          SendSmsSm@SwTimer 03EA  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 01F4  
         HttpGetMethod@GetMethodNextState 00CF                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 5196                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 619A                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0086                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 0026  
                      ?_I2c_InitI2cModule 00A2                     ??_Uart_WriteStringLen 0083  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      Rtcm_MainTask@Options 0001  
            __end_of_OsTmr_GetTimerStatus 4CF6                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A1  
                    _USBConfigureEndpoint 485A                      _UsbMasterPhoneNumber 0440  
        __size_of_USBStdFeatureReqHandler 0294                        _saveNumberInMemory 65DE  
                   SetUartBaudRate@Module 0099            __end_of_OsAlrm_ProcessOsAlarms 26B0  
                   ??_OsAlrm_ClearOsAlarm 0019                         ___wmul@multiplier 007D  
                   ?_USBTransferOnePacket 007D                                  i1___wmul 6354  
                   __end_of_initGprsModem 4C66                       ??_I2c_InitI2cModule 00A4  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 67BA  
                  __end_of_Mdm_GetSmsData 5348                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E4                                  _ApnLocal 0324  
                          _StartCondition 67CE                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0081               HttpGetMethod@GetMethodState 01EA  
                           _Tmr_TmrBPrSet 32C2                             _waitSetupCall 5A8C  
                     ?_saveNumberInMemory 008E                         _NewStringReceived 003C  
                            _isspace$6617 007E                          _UartSetConfigLow 56A4  
                                _GetSmsSm 2D18                   __end_of_USBStallHandler 5D6C  
                    Mdm_DrvMainFn@Options 0001                            _memoryPreamble 0394  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DF  
                                _MdmCntSm 452A                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 2816  
                               copy_data1 2836                                 copy_data2 2856  
                               copy_data3 288E              __end_of_LedPulseStateMachine 3498  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 357E                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 6794  
                           i2_GenerateEvt 669C                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE5B  
               __end_of_I2c_InitI2cModule 5208                                  _MsgReady FE32  
                         ??_Term_MainTask 00A7                   __end_of_InitializeTasks 5124  
              initGprsModem@isInitialized 0099                   ?_USBCtrlTrfSetupHandler 0001  
                          isNumberValid@i 0081               __end_of_I2cSlv_QueryI2cData 3AA6  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 48F2                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                      ??_saveNumberInMemory 0090  
                            ?_TurnOnModem 0001                                  _TxBuffer 0320  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0083  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081               __end_of_Uart_InitUartModule 0DC8  
                                _SmsEvent 00DD                           _SetUartBaudRate 2BE0  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001E                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0080  
                   SetBaudRate@McuClockHz 009A                     ?_USBConfigureEndpoint 007D  
            OsAlrm_ClearOsAlarm@OsAlarmId 0019                             _I2c_WriteData 2138  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                         MyApp_Task@F9032 FC24                           MyApp_Task@F9034 03CF  
                         MyApp_Task@F9029 FC11                  __end_of_UpdateOsCounters 673C  
                        __size_of___lldiv 0084                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 6572                       __end_of_putUSBUSART 6492  
                             _line_coding 0375                              _Rtcc_LockRtc 670C  
            I2cSlv_QueryI2cData@SlaveAddr 00A8                      _LedBlinkStateMachine 2952  
                  __end_of_StartCondition 67D2                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01F1  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 008A  
                         ?_Mdm_GetSmsData 0087                  I2c_WriteData@WriteStatus 0034  
                            _isupper$6620 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0032                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 0048                  MyApp_Task@smsPhoneNumber 04EF  
                          ?_waitSetupCall 0001                          ??_ModemEvtParser 0088  
                        _GetOsTickCounter 66EA                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0188  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03A3  
                ModemEvtParser@RingString 009C                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                                __ptext10 5B76                                  __ptext11 64D6  
                                __ptext20 637A                                  __ptext12 48F2  
                                __ptext21 5C9C                                  __ptext13 6554  
                         ??_UartWriteByte 007E                                  __ptext30 6106  
                                __ptext22 59EC                                  __ptext14 2F78  
                                __ptext31 5D28                                  __ptext23 5754  
                                __ptext15 50B0                                  __ptext40 3498  
                                __ptext32 642C                                  __ptext24 67C0  
                                __ptext16 15EE                                  __ptext41 4272  
                                __ptext33 2404                                  __ptext25 640A  
                                __ptext17 65C4                                  __ptext50 309E  
                                __ptext42 2E4A                                  __ptext34 4A1E  
                                __ptext26 66C6                                  __ptext18 4CF6  
                                __ptext51 3C40                                  __ptext43 135A  
                                __ptext35 5C0C                                  __ptext27 67C6  
                                __ptext19 3B74                                  __ptext60 00D0  
                                __ptext52 40F2                                  __ptext44 54DC  
                                __ptext36 4D84                                  __ptext28 1E2E  
                                __ptext61 357E                                  __ptext53 3824  
                                __ptext45 4324                                  __ptext37 31C2  
                                __ptext29 5FF2                                  __ptext70 6470  
                                __ptext62 6612                                  __ptext54 2A9A  
                                __ptext46 5208                                  __ptext38 47BC  
                                __ptext71 5DB0                                  __ptext63 5FB6  
                                __ptext55 10B6                                  __ptext47 5D6C  
                                __ptext39 3664                                  __ptext80 1872  
                                __ptext72 4480                                  __ptext64 1AA0  
                                __ptext56 5EFC                                  __ptext48 485A  
                                __ptext81 5124                                  __ptext73 5DF4  
                                __ptext65 662A                                  __ptext57 5598  
                                __ptext49 5348                                  __ptext90 5A8C  
                                __ptext82 4F24                                  __ptext74 4988  
                                __ptext66 62DC                                  __ptext58 3AA6  
                                __ptext91 64F6                                  __ptext83 670C  
                                __ptext75 41B4                                  __ptext67 61CA  
                                __ptext59 619A                                  __ptext92 639E  
                                __ptext84 53AE                                  __ptext76 38FC  
                                __ptext68 644E                                  __ptext93 66D8  
                                __ptext85 4AB2                                  __ptext77 6492  
                                __ptext69 6138                                  __ptext94 65DE  
                                __ptext86 665A                                  __ptext78 57A8  
                                __ptext95 4B46                                  __ptext87 471C  
                                __ptext79 66FC                                  __ptext96 4E10  
                                __ptext88 6670                                  __ptext97 5414  
                                __ptext89 5274                                  __ptext98 65F8  
                                __ptext99 632E                          __size_of_isupper 0022  
                 initEeprom@addressToRead 0100                                _I2cDummyTx 658E  
                  Tmr_TmrBIrqSet@Priority 007D                        __end_of_initEeprom 4F24  
                   __end_of_HttpGetMethod 0ABC                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                                 isxdigit@c 0082  
                        __size_of_sprintf 00CE                          __size_of_tolower 0018  
                   __size_of_Tmr_StartTmr 0020                          __size_of_toupper 0018  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 002F  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                       _Mdm_IsSmsReceived 63C2               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 4E10                             __size_of_main 000C  
             ??_initMemorizedNumbersCount 008E                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 0087  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 67A8  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 67C0  
                      ??_USBCtrlEPService 0097                                  _isxdigit 5FB6  
                           _Mdm_IsRinging 639E                       _USBCtrlTrfInHandler 40F2  
                I2c_ReadData@I2cReadState 0033                __end_of_Mdm_RequestSmsData 672C  
                   __end_of_ScheduleTasks 309E                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 5348                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 0085  
               _USBCtrlEPAllowStatusStage 3C40                       ??_Mdm_IsSmsReceived 0081  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 02C8  
                              strtol@sign 0093                           Term_MainSm@Data 0463  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 602C  
                __end_of_Mcu_ConfigExtInt 65C4                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00C8                  CDCTxService@byte_to_send 0085  
                           ?_Eeprom_Write 0087             I2c_WriteData@TentativeCounter 0035  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 007D                              _Tmr_StartTmr 64D6  
                __end_of_Led_SetLedStatus 622A                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 007D                                  memcpy@s1 007F  
              I2cSlv_I2cReadMsgSts@Result 0081             USBCtrlTrfTxService@byteToSend 007D  
                           ?_I2cSetConfig 0001                                  itoa@base 0097  
             i1I2cSlv_SendI2cMsg@TxBuffer 001C                             ?_I2c_ReadData 0080  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0082  
                  __size_of_Mcu_SetWdgSts 0012                                  isdigit@c 007F  
                                memset@p1 007D                     Eeprom_Read@DataLength 00AB  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 57A8                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 63E6                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 4C66  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0156  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 553A  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 54DC                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2D18  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                   __end_ofMyApp_Task@F9032 FC28  
                 __end_ofMyApp_Task@F9029 FC1E                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084                    MyApp_Task@currentState 01D6  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 0097  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 5E7C  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                         _GetCallerNumber 6066                  __end_of_Rtcm_GetRtccDate 5414  
                             _putUSBUSART 6470                 Eeprom_Write@CommandLength 008D  
                     _USBCtrlTrfRxService 309E                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 5FF2  
                           ?_getSetupCall 0001                   _USBStdFeatureReqHandler 135A  
                __end_of_OsTmr_StartTimer 5598                      _LedPulseStateMachine 33B0  
                      _USBCheckCDCRequest 4324                       _USBCtrlTrfTxService 3824  
                     RtccIrqInit@Priority 007D                 _initMemorizedNumbersCount 65F8  
                                utoa@base 008E                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                             _isMemoryEmpty 01FE  
                          ??_Eeprom_Write 008A                          _Rtcc_AlarmConfig 5274  
                         ??_Tmr_TmrBPrSet 009A                           ??_waitSetupCall 0093  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01DE                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02F1                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 5C9C                    __size_of_isNumberValid 0066  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 62DC                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CA                                _WDTCONbits 000FC0  
                  MyApp_Task@memoryResult 0127                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 45D2  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                             _StopCondition 67CA  
                   ??i1_I2cSlv_SendI2cMsg 0020                         ?_isNumberInMemory 0100  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 00C9  
                        Mdm_IsRinging@Ret 0081                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 60D2                      __end_of_CDCTxService 2BE0  
                      ??_isNumberInMemory 00B0                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC2E  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F3                   _UsbMasterPhoneNumberLen 0322  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 66C6  
