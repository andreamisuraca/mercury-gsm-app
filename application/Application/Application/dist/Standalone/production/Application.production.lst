

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 12 22:05:49 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    27                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    28                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	text0,global,reloc=2,class=CODE,delta=1
    33                           	psect	text1,global,reloc=2,class=CODE,delta=1
    34                           	psect	text2,global,reloc=2,class=CODE,delta=1
    35                           	psect	text3,global,reloc=2,class=CODE,delta=1
    36                           	psect	text4,global,reloc=2,class=CODE,delta=1
    37                           	psect	text5,global,reloc=2,class=CODE,delta=1
    38                           	psect	text6,global,reloc=2,class=CODE,delta=1
    39                           	psect	text7,global,reloc=2,class=CODE,delta=1
    40                           	psect	text8,global,reloc=2,class=CODE,delta=1
    41                           	psect	text9,global,reloc=2,class=CODE,delta=1
    42                           	psect	text10,global,reloc=2,class=CODE,delta=1
    43                           	psect	text11,global,reloc=2,class=CODE,delta=1
    44                           	psect	text12,global,reloc=2,class=CODE,delta=1
    45                           	psect	text13,global,reloc=2,class=CODE,delta=1
    46                           	psect	text14,global,reloc=2,class=CODE,delta=1
    47                           	psect	text15,global,reloc=2,class=CODE,delta=1
    48                           	psect	text16,global,reloc=2,class=CODE,delta=1
    49                           	psect	text17,global,reloc=2,class=CODE,delta=1
    50                           	psect	text18,global,reloc=2,class=CODE,delta=1
    51                           	psect	text19,global,reloc=2,class=CODE,delta=1
    52                           	psect	text20,global,reloc=2,class=CODE,delta=1
    53                           	psect	text21,global,reloc=2,class=CODE,delta=1
    54                           	psect	text22,global,reloc=2,class=CODE,delta=1
    55                           	psect	text23,global,reloc=2,class=CODE,delta=1
    56                           	psect	text24,global,reloc=2,class=CODE,delta=1
    57                           	psect	text25,global,reloc=2,class=CODE,delta=1
    58                           	psect	text26,global,reloc=2,class=CODE,delta=1
    59                           	psect	text27,global,reloc=2,class=CODE,delta=1
    60                           	psect	text28,global,reloc=2,class=CODE,delta=1
    61                           	psect	text29,global,reloc=2,class=CODE,delta=1
    62                           	psect	text30,global,reloc=2,class=CODE,delta=1
    63                           	psect	text31,global,reloc=2,class=CODE,delta=1
    64                           	psect	text32,global,reloc=2,class=CODE,delta=1
    65                           	psect	text33,global,reloc=2,class=CODE,delta=1
    66                           	psect	text34,global,reloc=2,class=CODE,delta=1
    67                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text36,global,reloc=2,class=CODE,delta=1
    69                           	psect	text37,global,reloc=2,class=CODE,delta=1
    70                           	psect	text38,global,reloc=2,class=CODE,delta=1
    71                           	psect	text39,global,reloc=2,class=CODE,delta=1
    72                           	psect	text40,global,reloc=2,class=CODE,delta=1
    73                           	psect	text41,global,reloc=2,class=CODE,delta=1
    74                           	psect	text42,global,reloc=2,class=CODE,delta=1
    75                           	psect	text43,global,reloc=2,class=CODE,delta=1
    76                           	psect	text44,global,reloc=2,class=CODE,delta=1
    77                           	psect	text45,global,reloc=2,class=CODE,delta=1
    78                           	psect	text46,global,reloc=2,class=CODE,delta=1
    79                           	psect	text47,global,reloc=2,class=CODE,delta=1
    80                           	psect	text48,global,reloc=2,class=CODE,delta=1
    81                           	psect	text49,global,reloc=2,class=CODE,delta=1
    82                           	psect	text50,global,reloc=2,class=CODE,delta=1
    83                           	psect	text51,global,reloc=2,class=CODE,delta=1
    84                           	psect	text52,global,reloc=2,class=CODE,delta=1
    85                           	psect	text53,global,reloc=2,class=CODE,delta=1
    86                           	psect	text54,global,reloc=2,class=CODE,delta=1
    87                           	psect	text55,global,reloc=2,class=CODE,delta=1
    88                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text58,global,reloc=2,class=CODE,delta=1
    91                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text60,global,reloc=2,class=CODE,delta=1
    93                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text70,global,reloc=2,class=CODE,delta=1
   103                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text74,global,reloc=2,class=CODE,delta=1
   107                           	psect	text75,global,reloc=2,class=CODE,delta=1
   108                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text78,global,reloc=2,class=CODE,delta=1
   111                           	psect	text79,global,reloc=2,class=CODE,delta=1
   112                           	psect	text80,global,reloc=2,class=CODE,delta=1
   113                           	psect	text81,global,reloc=2,class=CODE,delta=1
   114                           	psect	text82,global,reloc=2,class=CODE,delta=1
   115                           	psect	text83,global,reloc=2,class=CODE,delta=1
   116                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text86,global,reloc=2,class=CODE,delta=1
   119                           	psect	text87,global,reloc=2,class=CODE,delta=1
   120                           	psect	text88,global,reloc=2,class=CODE,delta=1
   121                           	psect	text89,global,reloc=2,class=CODE,delta=1
   122                           	psect	text90,global,reloc=2,class=CODE,delta=1
   123                           	psect	text91,global,reloc=2,class=CODE,delta=1
   124                           	psect	text92,global,reloc=2,class=CODE,delta=1
   125                           	psect	text93,global,reloc=2,class=CODE,delta=1
   126                           	psect	text94,global,reloc=2,class=CODE,delta=1
   127                           	psect	text95,global,reloc=2,class=CODE,delta=1
   128                           	psect	text96,global,reloc=2,class=CODE,delta=1
   129                           	psect	text97,global,reloc=2,class=CODE,delta=1
   130                           	psect	text98,global,reloc=2,class=CODE,delta=1
   131                           	psect	text99,global,reloc=2,class=CODE,delta=1
   132                           	psect	text100,global,reloc=2,class=CODE,delta=1
   133                           	psect	text101,global,reloc=2,class=CODE,delta=1
   134                           	psect	text102,global,reloc=2,class=CODE,delta=1
   135                           	psect	text103,global,reloc=2,class=CODE,delta=1
   136                           	psect	text104,global,reloc=2,class=CODE,delta=1
   137                           	psect	text105,global,reloc=2,class=CODE,delta=1
   138                           	psect	text106,global,reloc=2,class=CODE,delta=1
   139                           	psect	text107,global,reloc=2,class=CODE,delta=1
   140                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text109,global,reloc=2,class=CODE,delta=1
   142                           	psect	text110,global,reloc=2,class=CODE,delta=1
   143                           	psect	text111,global,reloc=2,class=CODE,delta=1
   144                           	psect	text112,global,reloc=2,class=CODE,delta=1
   145                           	psect	text113,global,reloc=2,class=CODE,delta=1
   146                           	psect	text114,global,reloc=2,class=CODE,delta=1
   147                           	psect	text115,global,reloc=2,class=CODE,delta=1
   148                           	psect	text116,global,reloc=2,class=CODE,delta=1
   149                           	psect	text117,global,reloc=2,class=CODE,delta=1
   150                           	psect	text118,global,reloc=2,class=CODE,delta=1
   151                           	psect	text119,global,reloc=2,class=CODE,delta=1
   152                           	psect	text120,global,reloc=2,class=CODE,delta=1
   153                           	psect	text121,global,reloc=2,class=CODE,delta=1
   154                           	psect	text122,global,reloc=2,class=CODE,delta=1
   155                           	psect	text123,global,reloc=2,class=CODE,delta=1
   156                           	psect	text124,global,reloc=2,class=CODE,delta=1
   157                           	psect	text125,global,reloc=2,class=CODE,delta=1
   158                           	psect	text126,global,reloc=2,class=CODE,delta=1
   159                           	psect	text127,global,reloc=2,class=CODE,delta=1
   160                           	psect	text128,global,reloc=2,class=CODE,delta=1
   161                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   162                           	psect	text130,global,reloc=2,class=CODE,delta=1
   163                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   164                           	psect	text132,global,reloc=2,class=CODE,delta=1
   165                           	psect	text133,global,reloc=2,class=CODE,delta=1
   166                           	psect	text134,global,reloc=2,class=CODE,delta=1,group=1
   167                           	psect	text135,global,reloc=2,class=CODE,delta=1
   168                           	psect	text136,global,reloc=2,class=CODE,delta=1
   169                           	psect	text137,global,reloc=2,class=CODE,delta=1
   170                           	psect	text138,global,reloc=2,class=CODE,delta=1
   171                           	psect	text139,global,reloc=2,class=CODE,delta=1
   172                           	psect	text140,global,reloc=2,class=CODE,delta=1
   173                           	psect	text141,global,reloc=2,class=CODE,delta=1
   174                           	psect	text142,global,reloc=2,class=CODE,delta=1
   175                           	psect	text143,global,reloc=2,class=CODE,delta=1
   176                           	psect	text144,global,reloc=2,class=CODE,delta=1
   177                           	psect	text145,global,reloc=2,class=CODE,delta=1
   178                           	psect	text146,global,reloc=2,class=CODE,delta=1
   179                           	psect	text147,global,reloc=2,class=CODE,delta=1
   180                           	psect	text148,global,reloc=2,class=CODE,delta=1
   181                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   182                           	psect	text150,global,reloc=2,class=CODE,delta=1
   183                           	psect	text151,global,reloc=2,class=CODE,delta=1
   184                           	psect	text152,global,reloc=2,class=CODE,delta=1
   185                           	psect	text153,global,reloc=2,class=CODE,delta=1
   186                           	psect	text154,global,reloc=2,class=CODE,delta=1
   187                           	psect	text155,global,reloc=2,class=CODE,delta=1
   188                           	psect	text156,global,reloc=2,class=CODE,delta=1
   189                           	psect	text157,global,reloc=2,class=CODE,delta=1
   190                           	psect	text158,global,reloc=2,class=CODE,delta=1
   191                           	psect	text159,global,reloc=2,class=CODE,delta=1
   192                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   193                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   194                           	psect	text161,global,reloc=2,class=CODE,delta=1
   195                           	psect	text162,global,reloc=2,class=CODE,delta=1
   196                           	psect	text163,global,reloc=2,class=CODE,delta=1
   197                           	psect	text164,global,reloc=2,class=CODE,delta=1
   198                           	psect	text165,global,reloc=2,class=CODE,delta=1
   199                           	psect	text166,global,reloc=2,class=CODE,delta=1
   200                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   201                           	psect	text167,global,reloc=2,class=CODE,delta=1
   202                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   203                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   204                           	dabs	1,0x400,48,_BDT
   205                           	dabs	1,0x438,8,_CtrlTrfData
   206                           	dabs	1,0x430,8,_SetupPkt
   207  0000                     
   208                           ; Version 1.45
   209                           ; Generated 16/11/2017 GMT
   210                           ; 
   211                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   212                           ; All rights reserved.
   213                           ; 
   214                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   215                           ; 
   216                           ; Redistribution and use in source and binary forms, with or without modification, are
   217                           ; permitted provided that the following conditions are met:
   218                           ; 
   219                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   220                           ;        conditions and the following disclaimer.
   221                           ; 
   222                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   223                           ;        of conditions and the following disclaimer in the documentation and/or other
   224                           ;        materials provided with the distribution.
   225                           ; 
   226                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   227                           ;        software without specific prior written permission.
   228                           ; 
   229                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   230                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   231                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   232                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   233                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   234                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   235                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   236                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   237                           ; 
   238                           ; 
   239                           ; Code-generator required, PIC18F46J50 Definitions
   240                           ; 
   241                           ; SFR Addresses
   242  0000                     
   243                           	psect	idataBANK1
   244  005E6E                     __pidataBANK1:
   245                           	opt stack 0
   246                           
   247                           ;initializer for MyApp_Task@countRelay1
   248  005E6E  01                 	db	1
   249                           
   250                           ;initializer for InitGprsNetwork@GprsInitSts
   251  005E6F  01                 	db	1
   252                           
   253                           	psect	idataBANK2
   254  005DF2                     __pidataBANK2:
   255                           	opt stack 0
   256                           
   257                           ;initializer for Terminal@EchoOption
   258  005DF2  01                 	db	1
   259                           
   260                           ;initializer for _MainSystemTimebaseFlag
   261  005DF3  01                 	db	1
   262                           
   263                           ;initializer for _ConnTimeout
   264  005DF4  00                 	db	0
   265  005DF5  01                 	db	1
   266  005DF6  0000               	dw	0
   267  005DF8  0000               	dw	0
   268  005DFA  0000               	dw	0
   269  005DFC  0000               	dw	0
   270  005DFE  00                 	db	0
   271                           
   272                           	psect	idataBANK3
   273  0056D0                     __pidataBANK3:
   274                           	opt stack 0
   275                           
   276                           ;initializer for ModemEvtParser@F9088
   277  0056D0  2B                 	db	43
   278  0056D1  43                 	db	67
   279  0056D2  4D                 	db	77
   280  0056D3  54                 	db	84
   281  0056D4  49                 	db	73
   282                           
   283                           ;initializer for ModemEvtParser@F9086
   284  0056D5  52                 	db	82
   285  0056D6  49                 	db	73
   286  0056D7  4E                 	db	78
   287  0056D8  47                 	db	71
   288                           
   289                           ;initializer for MyApp_Task@F8979
   290  0056D9  50                 	db	80
   291  0056DA  01                 	db	1
   292                           
   293                           ;initializer for MyApp_Task@F8976
   294  0056DB  50                 	db	80
   295  0056DC  00                 	db	0
   296                           
   297                           ;initializer for MyApp_Task@countRelay2
   298  0056DD  0001               	dw	1
   299                           
   300                           ;initializer for triggerRelay@F8966
   301  0056DF  50                 	db	80
   302  0056E0  00                 	db	0
   303                           
   304                           ;initializer for Term_MainSm@TermDelay
   305  0056E1  01                 	db	1
   306  0056E2  01                 	db	1
   307  0056E3  0000               	dw	0
   308  0056E5  0000               	dw	0
   309  0056E7  0000               	dw	0
   310  0056E9  0000               	dw	0
   311  0056EB  00                 	db	0
   312                           
   313                           ;initializer for _ConnWait
   314  0056EC  00                 	db	0
   315  0056ED  01                 	db	1
   316  0056EE  0000               	dw	0
   317  0056F0  0000               	dw	0
   318  0056F2  0000               	dw	0
   319  0056F4  0000               	dw	0
   320  0056F6  00                 	db	0
   321                           
   322                           ;initializer for SendSmsSm@SwTimer
   323  0056F7  01                 	db	1
   324  0056F8  01                 	db	1
   325  0056F9  0000               	dw	0
   326  0056FB  0000               	dw	0
   327  0056FD  0000               	dw	0
   328  0056FF  0000               	dw	0
   329  005701  00                 	db	0
   330                           
   331                           ;initializer for CheckModem@Timeout
   332  005702  00                 	db	0
   333  005703  01                 	db	1
   334  005704  0000               	dw	0
   335  005706  0000               	dw	0
   336  005708  0000               	dw	0
   337  00570A  0000               	dw	0
   338  00570C  00                 	db	0
   339                           
   340                           	psect	idataBANK4
   341  004D56                     __pidataBANK4:
   342                           	opt stack 0
   343                           
   344                           ;initializer for MyApp_Task@F8985
   345  004D56  33                 	db	51
   346  004D57  32                 	db	50
   347  004D58  30                 	db	48
   348  004D59  30                 	db	48
   349  004D5A  32                 	db	50
   350  004D5B  37                 	db	55
   351  004D5C  36                 	db	54
   352  004D5D  33                 	db	51
   353  004D5E  31                 	db	49
   354  004D5F  38                 	db	56
   355                           
   356                           ;initializer for ModemEvtParser@F9090
   357  004D60  43                 	db	67
   358  004D61  61                 	db	97
   359  004D62  6C                 	db	108
   360  004D63  6C                 	db	108
   361  004D64  20                 	db	32
   362  004D65  52                 	db	82
   363  004D66  65                 	db	101
   364  004D67  61                 	db	97
   365  004D68  64                 	db	100
   366  004D69  79                 	db	121
   367                           
   368                           ;initializer for _TaskTable
   369  004D6A  4C                 	db	low _Mdm_DrvMainFn
   370  004D6B  5E                 	db	high _Mdm_DrvMainFn
   371  004D6C  00                 	db	0
   372  004D6D  0000               	dw	0
   373  004D6F  000A               	dw	10
   374  004D71  00                 	db	0
   375  004D72  94                 	db	low _I2cSlv_MainTask
   376  004D73  50                 	db	high _I2cSlv_MainTask
   377  004D74  00                 	db	0
   378  004D75  0000               	dw	0
   379  004D77  0001               	dw	1
   380  004D79  00                 	db	0
   381  004D7A  36                 	db	low _Mdm_MainTask
   382  004D7B  52                 	db	high _Mdm_MainTask
   383  004D7C  00                 	db	0
   384  004D7D  0000               	dw	0
   385  004D7F  0001               	dw	1
   386  004D81  00                 	db	0
   387  004D82  B6                 	db	low _MdmHttp_MainTask
   388  004D83  53                 	db	high _MdmHttp_MainTask
   389  004D84  00                 	db	0
   390  004D85  0000               	dw	0
   391  004D87  0001               	dw	1
   392  004D89  00                 	db	0
   393  004D8A  AC                 	db	low _UsbDevice_MainTask
   394  004D8B  5A                 	db	high _UsbDevice_MainTask
   395  004D8C  00                 	db	0
   396  004D8D  0000               	dw	0
   397  004D8F  0001               	dw	1
   398  004D91  00                 	db	0
   399  004D92  18                 	db	low _Wdg_MainTask
   400  004D93  5B                 	db	high _Wdg_MainTask
   401  004D94  00                 	db	0
   402  004D95  0000               	dw	0
   403  004D97  0064               	dw	100
   404  004D99  00                 	db	0
   405  004D9A  2E                 	db	low _Led_MainTask
   406  004D9B  37                 	db	high _Led_MainTask
   407  004D9C  00                 	db	0
   408  004D9D  0000               	dw	0
   409  004D9F  0032               	dw	50
   410  004DA1  00                 	db	0
   411  004DA2  B8                 	db	low _Rtcm_MainTask
   412  004DA3  47                 	db	high _Rtcm_MainTask
   413  004DA4  00                 	db	0
   414  004DA5  0000               	dw	0
   415  004DA7  0064               	dw	100
   416  004DA9  00                 	db	0
   417  004DAA  B2                 	db	low _Term_MainTask
   418  004DAB  5C                 	db	high _Term_MainTask
   419  004DAC  00                 	db	0
   420  004DAD  0000               	dw	0
   421  004DAF  0001               	dw	1
   422  004DB1  00                 	db	0
   423  004DB2  D2                 	db	low _MyApp_Task
   424  004DB3  33                 	db	high _MyApp_Task
   425  004DB4  00                 	db	0
   426  004DB5  0000               	dw	0
   427  004DB7  0064               	dw	100
   428  004DB9  00                 	db	0
   429                           
   430                           	psect	mediumconst
   431  00FC58                     __pmediumconst:
   432                           	opt stack 0
   433  00FC58  00                 	db	0
   434  00FC59                     _USB_SD_Ptr:
   435                           	opt stack 0
   436  00FC59  8C                 	db	low _sd000
   437  00FC5A  FE                 	db	high _sd000
   438  00FC5B  45                 	db	low _sd001
   439  00FC5C  FE                 	db	high _sd001
   440  00FC5D  1F                 	db	low _sd002
   441  00FC5E  FE                 	db	high _sd002
   442  00FC5F                     __end_of_USB_SD_Ptr:
   443                           	opt stack 0
   444  00FC5F                     _USB_CD_Ptr:
   445                           	opt stack 0
   446  00FC5F  DC                 	db	low _configDescriptor1
   447  00FC60  FD                 	db	high _configDescriptor1
   448  00FC61                     __end_of_USB_CD_Ptr:
   449                           	opt stack 0
   450  00FC61                     _TaskNumber:
   451                           	opt stack 0
   452  00FC61  000A               	dw	10
   453  00FC63                     __end_of_TaskNumber:
   454                           	opt stack 0
   455  00FC63                     _MsgFormat:
   456                           	opt stack 0
   457  00FC63  48                 	db	72
   458  00FC64  6F                 	db	111
   459  00FC65  73                 	db	115
   460  00FC66  74                 	db	116
   461  00FC67  20                 	db	32
   462  00FC68  6D                 	db	109
   463  00FC69  65                 	db	101
   464  00FC6A  73                 	db	115
   465  00FC6B  73                 	db	115
   466  00FC6C  61                 	db	97
   467  00FC6D  67                 	db	103
   468  00FC6E  65                 	db	101
   469  00FC6F  20                 	db	32
   470  00FC70  66                 	db	102
   471  00FC71  6F                 	db	111
   472  00FC72  72                 	db	114
   473  00FC73  6D                 	db	109
   474  00FC74  61                 	db	97
   475  00FC75  74                 	db	116
   476  00FC76  3A                 	db	58
   477  00FC77  20                 	db	32
   478  00FC78  0D                 	db	13
   479  00FC79  0A                 	db	10
   480  00FC7A  5B                 	db	91
   481  00FC7B  6F                 	db	111
   482  00FC7C  70                 	db	112
   483  00FC7D  5F                 	db	95
   484  00FC7E  74                 	db	116
   485  00FC7F  79                 	db	121
   486  00FC80  70                 	db	112
   487  00FC81  65                 	db	101
   488  00FC82  5D                 	db	93
   489  00FC83  3A                 	db	58
   490  00FC84  5B                 	db	91
   491  00FC85  6F                 	db	111
   492  00FC86  70                 	db	112
   493  00FC87  5D                 	db	93
   494  00FC88  3A                 	db	58
   495  00FC89  5B                 	db	91
   496  00FC8A  6C                 	db	108
   497  00FC8B  65                 	db	101
   498  00FC8C  6E                 	db	110
   499  00FC8D  5D                 	db	93
   500  00FC8E  3A                 	db	58
   501  00FC8F  5B                 	db	91
   502  00FC90  61                 	db	97
   503  00FC91  64                 	db	100
   504  00FC92  64                 	db	100
   505  00FC93  72                 	db	114
   506  00FC94  5D                 	db	93
   507  00FC95  3A                 	db	58
   508  00FC96  5B                 	db	91
   509  00FC97  70                 	db	112
   510  00FC98  61                 	db	97
   511  00FC99  79                 	db	121
   512  00FC9A  6C                 	db	108
   513  00FC9B  6F                 	db	111
   514  00FC9C  61                 	db	97
   515  00FC9D  64                 	db	100
   516  00FC9E  5D                 	db	93
   517  00FC9F  0D                 	db	13
   518  00FCA0  0A                 	db	10
   519  00FCA1  0D                 	db	13
   520  00FCA2  0A                 	db	10
   521  00FCA3  5B                 	db	91
   522  00FCA4  6F                 	db	111
   523  00FCA5  70                 	db	112
   524  00FCA6  5F                 	db	95
   525  00FCA7  74                 	db	116
   526  00FCA8  79                 	db	121
   527  00FCA9  70                 	db	112
   528  00FCAA  65                 	db	101
   529  00FCAB  5D                 	db	93
   530  00FCAC  20                 	db	32
   531  00FCAD  3D                 	db	61
   532  00FCAE  20                 	db	32
   533  00FCAF  53                 	db	83
   534  00FCB0  4F                 	db	79
   535  00FCB1  2C                 	db	44
   536  00FCB2  53                 	db	83
   537  00FCB3  42                 	db	66
   538  00FCB4  0D                 	db	13
   539  00FCB5  0A                 	db	10
   540  00FCB6  5B                 	db	91
   541  00FCB7  6F                 	db	111
   542  00FCB8  70                 	db	112
   543  00FCB9  5D                 	db	93
   544  00FCBA  20                 	db	32
   545  00FCBB  3D                 	db	61
   546  00FCBC  20                 	db	32
   547  00FCBD  52                 	db	82
   548  00FCBE  3A                 	db	58
   549  00FCBF  20                 	db	32
   550  00FCC0  72                 	db	114
   551  00FCC1  65                 	db	101
   552  00FCC2  61                 	db	97
   553  00FCC3  64                 	db	100
   554  00FCC4  2C                 	db	44
   555  00FCC5  57                 	db	87
   556  00FCC6  3A                 	db	58
   557  00FCC7  20                 	db	32
   558  00FCC8  77                 	db	119
   559  00FCC9  72                 	db	114
   560  00FCCA  69                 	db	105
   561  00FCCB  74                 	db	116
   562  00FCCC  65                 	db	101
   563  00FCCD  0D                 	db	13
   564  00FCCE  0A                 	db	10
   565  00FCCF  5B                 	db	91
   566  00FCD0  6C                 	db	108
   567  00FCD1  65                 	db	101
   568  00FCD2  6E                 	db	110
   569  00FCD3  5D                 	db	93
   570  00FCD4  20                 	db	32
   571  00FCD5  3D                 	db	61
   572  00FCD6  20                 	db	32
   573  00FCD7  32                 	db	50
   574  00FCD8  20                 	db	32
   575  00FCD9  62                 	db	98
   576  00FCDA  79                 	db	121
   577  00FCDB  74                 	db	116
   578  00FCDC  65                 	db	101
   579  00FCDD  20                 	db	32
   580  00FCDE  41                 	db	65
   581  00FCDF  53                 	db	83
   582  00FCE0  43                 	db	67
   583  00FCE1  49                 	db	73
   584  00FCE2  49                 	db	73
   585  00FCE3  0D                 	db	13
   586  00FCE4  0A                 	db	10
   587  00FCE5  5B                 	db	91
   588  00FCE6  61                 	db	97
   589  00FCE7  64                 	db	100
   590  00FCE8  64                 	db	100
   591  00FCE9  72                 	db	114
   592  00FCEA  5D                 	db	93
   593  00FCEB  20                 	db	32
   594  00FCEC  3D                 	db	61
   595  00FCED  20                 	db	32
   596  00FCEE  32                 	db	50
   597  00FCEF  20                 	db	32
   598  00FCF0  62                 	db	98
   599  00FCF1  79                 	db	121
   600  00FCF2  74                 	db	116
   601  00FCF3  65                 	db	101
   602  00FCF4  20                 	db	32
   603  00FCF5  41                 	db	65
   604  00FCF6  53                 	db	83
   605  00FCF7  43                 	db	67
   606  00FCF8  49                 	db	73
   607  00FCF9  49                 	db	73
   608  00FCFA  0D                 	db	13
   609  00FCFB  0A                 	db	10
   610  00FCFC  5B                 	db	91
   611  00FCFD  70                 	db	112
   612  00FCFE  61                 	db	97
   613  00FCFF  79                 	db	121
   614  00FD00  6C                 	db	108
   615  00FD01  6F                 	db	111
   616  00FD02  61                 	db	97
   617  00FD03  64                 	db	100
   618  00FD04  5D                 	db	93
   619  00FD05  20                 	db	32
   620  00FD06  3D                 	db	61
   621  00FD07  20                 	db	32
   622  00FD08  6D                 	db	109
   623  00FD09  61                 	db	97
   624  00FD0A  78                 	db	120
   625  00FD0B  20                 	db	32
   626  00FD0C  32                 	db	50
   627  00FD0D  30                 	db	48
   628  00FD0E  20                 	db	32
   629  00FD0F  62                 	db	98
   630  00FD10  79                 	db	121
   631  00FD11  74                 	db	116
   632  00FD12  65                 	db	101
   633  00FD13  20                 	db	32
   634  00FD14  41                 	db	65
   635  00FD15  53                 	db	83
   636  00FD16  43                 	db	67
   637  00FD17  49                 	db	73
   638  00FD18  49                 	db	73
   639  00FD19  0D                 	db	13
   640  00FD1A  0A                 	db	10
   641  00FD1B  0D                 	db	13
   642  00FD1C  0A                 	db	10
   643  00FD1D  54                 	db	84
   644  00FD1E  65                 	db	101
   645  00FD1F  72                 	db	114
   646  00FD20  6D                 	db	109
   647  00FD21  69                 	db	105
   648  00FD22  6E                 	db	110
   649  00FD23  61                 	db	97
   650  00FD24  6C                 	db	108
   651  00FD25  20                 	db	32
   652  00FD26  4D                 	db	77
   653  00FD27  6F                 	db	111
   654  00FD28  64                 	db	100
   655  00FD29  65                 	db	101
   656  00FD2A  3A                 	db	58
   657  00FD2B  20                 	db	32
   658  00FD2C  43                 	db	67
   659  00FD2D  4F                 	db	79
   660  00FD2E  4D                 	db	77
   661  00FD2F  4D                 	db	77
   662  00FD30  41                 	db	65
   663  00FD31  4E                 	db	78
   664  00FD32  44                 	db	68
   665  00FD33  20                 	db	32
   666  00FD34  4D                 	db	77
   667  00FD35  4F                 	db	79
   668  00FD36  44                 	db	68
   669  00FD37  45                 	db	69
   670  00FD38  0D                 	db	13
   671  00FD39  0A                 	db	10
   672  00FD3A  4D                 	db	77
   673  00FD3B  6F                 	db	111
   674  00FD3C  64                 	db	100
   675  00FD3D  65                 	db	101
   676  00FD3E  6D                 	db	109
   677  00FD3F  20                 	db	32
   678  00FD40  54                 	db	84
   679  00FD41  79                 	db	121
   680  00FD42  70                 	db	112
   681  00FD43  65                 	db	101
   682  00FD44  3A                 	db	58
   683  00FD45  20                 	db	32
   684  00FD46  47                 	db	71
   685  00FD47  53                 	db	83
   686  00FD48  4D                 	db	77
   687  00FD49  2F                 	db	47
   688  00FD4A  47                 	db	71
   689  00FD4B  50                 	db	80
   690  00FD4C  52                 	db	82
   691  00FD4D  53                 	db	83
   692  00FD4E  0D                 	db	13
   693  00FD4F  0A                 	db	10
   694  00FD50  0D                 	db	13
   695  00FD51  0A                 	db	10
   696  00FD52  00                 	db	0
   697  00FD53                     __end_of_MsgFormat:
   698                           	opt stack 0
   699  00FD53                     _Welcome:
   700                           	opt stack 0
   701  00FD53  2A                 	db	42
   702  00FD54  2A                 	db	42
   703  00FD55  2A                 	db	42
   704  00FD56  2A                 	db	42
   705  00FD57  2A                 	db	42
   706  00FD58  2A                 	db	42
   707  00FD59  2A                 	db	42
   708  00FD5A  2A                 	db	42
   709  00FD5B  2A                 	db	42
   710  00FD5C  2A                 	db	42
   711  00FD5D  2A                 	db	42
   712  00FD5E  2A                 	db	42
   713  00FD5F  2A                 	db	42
   714  00FD60  2A                 	db	42
   715  00FD61  2A                 	db	42
   716  00FD62  2A                 	db	42
   717  00FD63  2A                 	db	42
   718  00FD64  2A                 	db	42
   719  00FD65  2A                 	db	42
   720  00FD66  2A                 	db	42
   721  00FD67  2A                 	db	42
   722  00FD68  2A                 	db	42
   723  00FD69  2A                 	db	42
   724  00FD6A  2A                 	db	42
   725  00FD6B  2A                 	db	42
   726  00FD6C  2A                 	db	42
   727  00FD6D  2A                 	db	42
   728  00FD6E  2A                 	db	42
   729  00FD6F  2A                 	db	42
   730  00FD70  2A                 	db	42
   731  00FD71  2A                 	db	42
   732  00FD72  2A                 	db	42
   733  00FD73  2A                 	db	42
   734  00FD74  2A                 	db	42
   735  00FD75  2A                 	db	42
   736  00FD76  2A                 	db	42
   737  00FD77  2A                 	db	42
   738  00FD78  2A                 	db	42
   739  00FD79  2A                 	db	42
   740  00FD7A  2A                 	db	42
   741  00FD7B  2A                 	db	42
   742  00FD7C  2A                 	db	42
   743  00FD7D  2A                 	db	42
   744  00FD7E  2A                 	db	42
   745  00FD7F  2A                 	db	42
   746  00FD80  2A                 	db	42
   747  00FD81  2A                 	db	42
   748  00FD82  2A                 	db	42
   749  00FD83  2A                 	db	42
   750  00FD84  0D                 	db	13
   751  00FD85  0A                 	db	10
   752  00FD86  20                 	db	32
   753  00FD87  20                 	db	32
   754  00FD88  20                 	db	32
   755  00FD89  20                 	db	32
   756  00FD8A  20                 	db	32
   757  00FD8B  20                 	db	32
   758  00FD8C  20                 	db	32
   759  00FD8D  20                 	db	32
   760  00FD8E  20                 	db	32
   761  00FD8F  20                 	db	32
   762  00FD90  20                 	db	32
   763  00FD91  20                 	db	32
   764  00FD92  20                 	db	32
   765  00FD93  20                 	db	32
   766  00FD94  20                 	db	32
   767  00FD95  20                 	db	32
   768  00FD96  20                 	db	32
   769  00FD97  20                 	db	32
   770  00FD98  4D                 	db	77
   771  00FD99  45                 	db	69
   772  00FD9A  52                 	db	82
   773  00FD9B  43                 	db	67
   774  00FD9C  55                 	db	85
   775  00FD9D  52                 	db	82
   776  00FD9E  59                 	db	89
   777  00FD9F  20                 	db	32
   778  00FDA0  53                 	db	83
   779  00FDA1  59                 	db	89
   780  00FDA2  53                 	db	83
   781  00FDA3  54                 	db	84
   782  00FDA4  45                 	db	69
   783  00FDA5  4D                 	db	77
   784  00FDA6  0D                 	db	13
   785  00FDA7  0A                 	db	10
   786  00FDA8  2A                 	db	42
   787  00FDA9  2A                 	db	42
   788  00FDAA  2A                 	db	42
   789  00FDAB  2A                 	db	42
   790  00FDAC  2A                 	db	42
   791  00FDAD  2A                 	db	42
   792  00FDAE  2A                 	db	42
   793  00FDAF  2A                 	db	42
   794  00FDB0  2A                 	db	42
   795  00FDB1  2A                 	db	42
   796  00FDB2  2A                 	db	42
   797  00FDB3  2A                 	db	42
   798  00FDB4  2A                 	db	42
   799  00FDB5  2A                 	db	42
   800  00FDB6  2A                 	db	42
   801  00FDB7  2A                 	db	42
   802  00FDB8  2A                 	db	42
   803  00FDB9  2A                 	db	42
   804  00FDBA  2A                 	db	42
   805  00FDBB  2A                 	db	42
   806  00FDBC  2A                 	db	42
   807  00FDBD  2A                 	db	42
   808  00FDBE  2A                 	db	42
   809  00FDBF  2A                 	db	42
   810  00FDC0  2A                 	db	42
   811  00FDC1  2A                 	db	42
   812  00FDC2  2A                 	db	42
   813  00FDC3  2A                 	db	42
   814  00FDC4  2A                 	db	42
   815  00FDC5  2A                 	db	42
   816  00FDC6  2A                 	db	42
   817  00FDC7  2A                 	db	42
   818  00FDC8  2A                 	db	42
   819  00FDC9  2A                 	db	42
   820  00FDCA  2A                 	db	42
   821  00FDCB  2A                 	db	42
   822  00FDCC  2A                 	db	42
   823  00FDCD  2A                 	db	42
   824  00FDCE  2A                 	db	42
   825  00FDCF  2A                 	db	42
   826  00FDD0  2A                 	db	42
   827  00FDD1  2A                 	db	42
   828  00FDD2  2A                 	db	42
   829  00FDD3  2A                 	db	42
   830  00FDD4  2A                 	db	42
   831  00FDD5  2A                 	db	42
   832  00FDD6  2A                 	db	42
   833  00FDD7  2A                 	db	42
   834  00FDD8  2A                 	db	42
   835  00FDD9  0D                 	db	13
   836  00FDDA  0A                 	db	10
   837  00FDDB  00                 	db	0
   838  00FDDC                     __end_of_Welcome:
   839                           	opt stack 0
   840  00FDDC                     _configDescriptor1:
   841                           	opt stack 0
   842  00FDDC  09                 	db	9
   843  00FDDD  02                 	db	2
   844  00FDDE  43                 	db	67
   845  00FDDF  00                 	db	0
   846  00FDE0  02                 	db	2
   847  00FDE1  01                 	db	1
   848  00FDE2  00                 	db	0
   849  00FDE3  C0                 	db	192
   850  00FDE4  32                 	db	50
   851  00FDE5  09                 	db	9
   852  00FDE6  04                 	db	4
   853  00FDE7  00                 	db	0
   854  00FDE8  00                 	db	0
   855  00FDE9  01                 	db	1
   856  00FDEA  02                 	db	2
   857  00FDEB  02                 	db	2
   858  00FDEC  01                 	db	1
   859  00FDED  00                 	db	0
   860  00FDEE  05                 	db	5
   861  00FDEF  24                 	db	36
   862  00FDF0  00                 	db	0
   863  00FDF1  10                 	db	16
   864  00FDF2  01                 	db	1
   865  00FDF3  04                 	db	4
   866  00FDF4  24                 	db	36
   867  00FDF5  02                 	db	2
   868  00FDF6  02                 	db	2
   869  00FDF7  05                 	db	5
   870  00FDF8  24                 	db	36
   871  00FDF9  06                 	db	6
   872  00FDFA  00                 	db	0
   873  00FDFB  01                 	db	1
   874  00FDFC  05                 	db	5
   875  00FDFD  24                 	db	36
   876  00FDFE  01                 	db	1
   877  00FDFF  00                 	db	0
   878  00FE00  01                 	db	1
   879  00FE01  07                 	db	7
   880  00FE02  05                 	db	5
   881  00FE03  81                 	db	129
   882  00FE04  03                 	db	3
   883  00FE05  08                 	db	8
   884  00FE06  00                 	db	0
   885  00FE07  02                 	db	2
   886  00FE08  09                 	db	9
   887  00FE09  04                 	db	4
   888  00FE0A  01                 	db	1
   889  00FE0B  00                 	db	0
   890  00FE0C  02                 	db	2
   891  00FE0D  0A                 	db	10
   892  00FE0E  00                 	db	0
   893  00FE0F  00                 	db	0
   894  00FE10  00                 	db	0
   895  00FE11  07                 	db	7
   896  00FE12  05                 	db	5
   897  00FE13  02                 	db	2
   898  00FE14  02                 	db	2
   899  00FE15  40                 	db	64
   900  00FE16  00                 	db	0
   901  00FE17  00                 	db	0
   902  00FE18  07                 	db	7
   903  00FE19  05                 	db	5
   904  00FE1A  82                 	db	130
   905  00FE1B  02                 	db	2
   906  00FE1C  40                 	db	64
   907  00FE1D  00                 	db	0
   908  00FE1E  00                 	db	0
   909  00FE1F                     __end_of_configDescriptor1:
   910                           	opt stack 0
   911  00FE1F                     _sd002:
   912                           	opt stack 0
   913  00FE1F  26                 	db	38
   914  00FE20  03                 	db	3
   915  00FE21  0054               	dw	84
   916  00FE23  0065               	dw	101
   917  00FE25  0072               	dw	114
   918  00FE27  006D               	dw	109
   919  00FE29  0069               	dw	105
   920  00FE2B  006E               	dw	110
   921  00FE2D  0061               	dw	97
   922  00FE2F  006C               	dw	108
   923  00FE31  0020               	dw	32
   924  00FE33  0049               	dw	73
   925  00FE35  006E               	dw	110
   926  00FE37  0074               	dw	116
   927  00FE39  0065               	dw	101
   928  00FE3B  0072               	dw	114
   929  00FE3D  0066               	dw	102
   930  00FE3F  0061               	dw	97
   931  00FE41  0063               	dw	99
   932  00FE43  0065               	dw	101
   933  00FE45                     __end_of_sd002:
   934                           	opt stack 0
   935  00FE45                     _sd001:
   936                           	opt stack 0
   937  00FE45  1E                 	db	30
   938  00FE46  03                 	db	3
   939  00FE47  004D               	dw	77
   940  00FE49  0065               	dw	101
   941  00FE4B  0072               	dw	114
   942  00FE4D  0063               	dw	99
   943  00FE4F  0075               	dw	117
   944  00FE51  0072               	dw	114
   945  00FE53  0079               	dw	121
   946  00FE55  0020               	dw	32
   947  00FE57  0053               	dw	83
   948  00FE59  0079               	dw	121
   949  00FE5B  0073               	dw	115
   950  00FE5D  0074               	dw	116
   951  00FE5F  0065               	dw	101
   952  00FE61  006D               	dw	109
   953  00FE63                     __end_of_sd001:
   954                           	opt stack 0
   955  00FE63                     _MsgReady:
   956                           	opt stack 0
   957  00FE63  0D                 	db	13
   958  00FE64  0A                 	db	10
   959  00FE65  53                 	db	83
   960  00FE66  79                 	db	121
   961  00FE67  73                 	db	115
   962  00FE68  74                 	db	116
   963  00FE69  65                 	db	101
   964  00FE6A  6D                 	db	109
   965  00FE6B  20                 	db	32
   966  00FE6C  52                 	db	82
   967  00FE6D  65                 	db	101
   968  00FE6E  61                 	db	97
   969  00FE6F  64                 	db	100
   970  00FE70  79                 	db	121
   971  00FE71  2E                 	db	46
   972  00FE72  2E                 	db	46
   973  00FE73  2E                 	db	46
   974  00FE74  20                 	db	32
   975  00FE75  0D                 	db	13
   976  00FE76  0A                 	db	10
   977  00FE77  0D                 	db	13
   978  00FE78  0A                 	db	10
   979  00FE79  00                 	db	0
   980  00FE7A                     __end_of_MsgReady:
   981                           	opt stack 0
   982  00FE7A                     _device_dsc:
   983                           	opt stack 0
   984  00FE7A  12                 	db	18
   985  00FE7B  01                 	db	1
   986  00FE7C  0200               	dw	512
   987  00FE7E  02                 	db	2
   988  00FE7F  00                 	db	0
   989  00FE80  00                 	db	0
   990  00FE81  08                 	db	8
   991  00FE82  04D8               	dw	1240
   992  00FE84  000A               	dw	10
   993  00FE86  0100               	dw	256
   994  00FE88  01                 	db	1
   995  00FE89  02                 	db	2
   996  00FE8A  00                 	db	0
   997  00FE8B  01                 	db	1
   998  00FE8C                     __end_of_device_dsc:
   999                           	opt stack 0
  1000  00FE8C                     _sd000:
  1001                           	opt stack 0
  1002  00FE8C  04                 	db	4
  1003  00FE8D  03                 	db	3
  1004  00FE8E  0409               	dw	1033
  1005  00FE90                     __end_of_sd000:
  1006                           	opt stack 0
  1007  0000                     _RPINR1	set	3815
  1008  0000                     _UEP0bits	set	3878
  1009  0000                     _UIEbits	set	3894
  1010  0000                     _UADDR	set	3896
  1011  0000                     _UIE	set	3894
  1012  0000                     _UEIE	set	3895
  1013  0000                     _UCFG	set	3897
  1014  0000                     _RTCCAL	set	3902
  1015  0000                     _PADCFG1bits	set	3900
  1016  0000                     _RTCCFGbits	set	3903
  1017  0000                     _DSCONLbits	set	3916
  1018  0000                     _DSGPR1	set	3919
  1019  0000                     _DSGPR0	set	3918
  1020  0000                     _DSCONHbits	set	3917
  1021  0000                     _ANCON1bits	set	3913
  1022  0000                     _UEP1	set	3879
  1023  0000                     _UEP0	set	3878
  1024  0000                     _T1CONbits	set	4045
  1025  0000                     _PORTDbits	set	3971
  1026  0000                     _USTAT	set	3940
  1027  0000                     _PIR2bits	set	4001
  1028  0000                     _UCON	set	3941
  1029  0000                     _UIRbits	set	3938
  1030  0000                     _UCONbits	set	3941
  1031  0000                     _UIR	set	3938
  1032  0000                     _UEIR	set	3939
  1033  0000                     _PIE2bits	set	4000
  1034  0000                     _BAUDCON2	set	3964
  1035  0000                     _RCSTA2	set	3996
  1036  0000                     _BAUDCON1	set	3966
  1037  0000                     _RCSTA1	set	4012
  1038  0000                     _TRISCbits	set	3988
  1039  0000                     _TXSTA2	set	4008
  1040  0000                     _TXSTA1	set	4013
  1041  0000                     _RCREG2	set	4010
  1042  0000                     _RCREG1	set	4015
  1043  0000                     _TXREG2	set	4009
  1044  0000                     _TXREG1	set	4014
  1045  0000                     _SPBRG2	set	4011
  1046  0000                     _SPBRGH2	set	3965
  1047  0000                     _SPBRG1	set	4016
  1048  0000                     _SPBRGH1	set	3967
  1049  0000                     _PR4	set	3959
  1050  0000                     _PR2	set	4043
  1051  0000                     _PIE1bits	set	3997
  1052  0000                     _IPR1bits	set	3999
  1053  0000                     _T4CONbits	set	3958
  1054  0000                     _T2CONbits	set	4042
  1055  0000                     _ALRMVALL	set	3982
  1056  0000                     _ALRMVALH	set	3983
  1057  0000                     _RTCVALH	set	3993
  1058  0000                     _RTCVALL	set	3992
  1059  0000                     _ALRMRPTbits	set	3984
  1060  0000                     _ALRMCFGbits	set	3985
  1061  0000                     _PIE3bits	set	4003
  1062  0000                     _IPR3bits	set	4005
  1063  0000                     _OSCCONbits	set	4051
  1064  0000                     _PORTEbits	set	3972
  1065  0000                     _TRISEbits	set	3990
  1066  0000                     _WDTCONbits	set	4032
  1067  0000                     _INTCON2bits	set	4081
  1068  0000                     _TRISBbits	set	3987
  1069  0000                     _OSCTUNEbits	set	3995
  1070  0000                     _SSP2CON1	set	3954
  1071  0000                     _TRISDbits	set	3989
  1072  0000                     _SSP2BUF	set	3957
  1073  0000                     _SSP2CON2bits	set	3953
  1074  0000                     _SSP2STAT	set	3955
  1075  0000                     _SSP2CON2	set	3953
  1076  0000                     _SSP2ADD	set	3956
  1077  0000                     _PIR1bits	set	3998
  1078  0000                     _PIR3bits	set	4004
  1079  0000                     _INTCON3bits	set	4080
  1080  0000                     _INTCONbits	set	4082
  1081  0000                     _RCONbits	set	4048
  1082  00FE90                     STR_21:
  1083  00FE90  20                 	db	32
  1084  00FE91  4C                 	db	76	;'L'
  1085  00FE92  61                 	db	97	;'a'
  1086  00FE93  7A                 	db	122	;'z'
  1087  00FE94  79                 	db	121	;'y'
  1088  00FE95  20                 	db	32
  1089  00FE96  64                 	db	100	;'d'
  1090  00FE97  65                 	db	101	;'e'
  1091  00FE98  76                 	db	118	;'v'
  1092  00FE99  69                 	db	105	;'i'
  1093  00FE9A  63                 	db	99	;'c'
  1094  00FE9B  65                 	db	101	;'e'
  1095  00FE9C  2E                 	db	46
  1096  00FE9D  2E                 	db	46
  1097  00FE9E  2E                 	db	46
  1098  00FE9F  79                 	db	121	;'y'
  1099  00FEA0  6F                 	db	111	;'o'
  1100  00FEA1  75                 	db	117	;'u'
  1101  00FEA2  27                 	db	39
  1102  00FEA3  76                 	db	118	;'v'
  1103  00FEA4  65                 	db	101	;'e'
  1104  00FEA5  20                 	db	32
  1105  00FEA6  62                 	db	98	;'b'
  1106  00FEA7  65                 	db	101	;'e'
  1107  00FEA8  65                 	db	101	;'e'
  1108  00FEA9  6E                 	db	110	;'n'
  1109  00FEAA  20                 	db	32
  1110  00FEAB  74                 	db	116	;'t'
  1111  00FEAC  69                 	db	105	;'i'
  1112  00FEAD  6D                 	db	109	;'m'
  1113  00FEAE  65                 	db	101	;'e'
  1114  00FEAF  64                 	db	100	;'d'
  1115  00FEB0  2D                 	db	45
  1116  00FEB1  6F                 	db	111	;'o'
  1117  00FEB2  75                 	db	117	;'u'
  1118  00FEB3  74                 	db	116	;'t'
  1119  00FEB4  21                 	db	33
  1120  00FEB5  21                 	db	33
  1121  00FEB6  21                 	db	33
  1122  00FEB7  0D                 	db	13
  1123  00FEB8  0A                 	db	10
  1124  00FEB9  00                 	db	0
  1125  00FEBA                     STR_8:
  1126  00FEBA  41                 	db	65	;'A'
  1127  00FEBB  54                 	db	84	;'T'
  1128  00FEBC  2B                 	db	43
  1129  00FEBD  53                 	db	83	;'S'
  1130  00FEBE  41                 	db	65	;'A'
  1131  00FEBF  50                 	db	80	;'P'
  1132  00FEC0  42                 	db	66	;'B'
  1133  00FEC1  52                 	db	82	;'R'
  1134  00FEC2  3D                 	db	61	;'='
  1135  00FEC3  33                 	db	51	;'3'
  1136  00FEC4  2C                 	db	44
  1137  00FEC5  31                 	db	49	;'1'
  1138  00FEC6  2C                 	db	44
  1139  00FEC7  22                 	db	34
  1140  00FEC8  43                 	db	67	;'C'
  1141  00FEC9  6F                 	db	111	;'o'
  1142  00FECA  6E                 	db	110	;'n'
  1143  00FECB  74                 	db	116	;'t'
  1144  00FECC  79                 	db	121	;'y'
  1145  00FECD  70                 	db	112	;'p'
  1146  00FECE  65                 	db	101	;'e'
  1147  00FECF  22                 	db	34
  1148  00FED0  2C                 	db	44
  1149  00FED1  22                 	db	34
  1150  00FED2  47                 	db	71	;'G'
  1151  00FED3  50                 	db	80	;'P'
  1152  00FED4  52                 	db	82	;'R'
  1153  00FED5  53                 	db	83	;'S'
  1154  00FED6  22                 	db	34
  1155  00FED7  0D                 	db	13
  1156  00FED8  00                 	db	0
  1157  00FED9                     STR_14:
  1158  00FED9  41                 	db	65	;'A'
  1159  00FEDA  54                 	db	84	;'T'
  1160  00FEDB  2B                 	db	43
  1161  00FEDC  48                 	db	72	;'H'
  1162  00FEDD  54                 	db	84	;'T'
  1163  00FEDE  54                 	db	84	;'T'
  1164  00FEDF  50                 	db	80	;'P'
  1165  00FEE0  50                 	db	80	;'P'
  1166  00FEE1  41                 	db	65	;'A'
  1167  00FEE2  52                 	db	82	;'R'
  1168  00FEE3  41                 	db	65	;'A'
  1169  00FEE4  3D                 	db	61	;'='
  1170  00FEE5  22                 	db	34
  1171  00FEE6  43                 	db	67	;'C'
  1172  00FEE7  49                 	db	73	;'I'
  1173  00FEE8  44                 	db	68	;'D'
  1174  00FEE9  22                 	db	34
  1175  00FEEA  2C                 	db	44
  1176  00FEEB  31                 	db	49	;'1'
  1177  00FEEC  0D                 	db	13
  1178  00FEED  00                 	db	0
  1179  00FEEE                     STR_9:
  1180  00FEEE  41                 	db	65	;'A'
  1181  00FEEF  54                 	db	84	;'T'
  1182  00FEF0  2B                 	db	43
  1183  00FEF1  53                 	db	83	;'S'
  1184  00FEF2  41                 	db	65	;'A'
  1185  00FEF3  50                 	db	80	;'P'
  1186  00FEF4  42                 	db	66	;'B'
  1187  00FEF5  52                 	db	82	;'R'
  1188  00FEF6  3D                 	db	61	;'='
  1189  00FEF7  33                 	db	51	;'3'
  1190  00FEF8  2C                 	db	44
  1191  00FEF9  31                 	db	49	;'1'
  1192  00FEFA  2C                 	db	44
  1193  00FEFB  22                 	db	34
  1194  00FEFC  41                 	db	65	;'A'
  1195  00FEFD  50                 	db	80	;'P'
  1196  00FEFE  4E                 	db	78	;'N'
  1197  00FEFF  22                 	db	34
  1198  00FF00  2C                 	db	44
  1199  00FF01  22                 	db	34
  1200  00FF02  00                 	db	0
  1201  00FF03                     STR_23:
  1202  00FF03  46                 	db	70	;'F'
  1203  00FF04  72                 	db	114	;'r'
  1204  00FF05  61                 	db	97	;'a'
  1205  00FF06  6D                 	db	109	;'m'
  1206  00FF07  65                 	db	101	;'e'
  1207  00FF08  77                 	db	119	;'w'
  1208  00FF09  6F                 	db	111	;'o'
  1209  00FF0A  72                 	db	114	;'r'
  1210  00FF0B  6B                 	db	107	;'k'
  1211  00FF0C  20                 	db	32
  1212  00FF0D  56                 	db	86	;'V'
  1213  00FF0E  65                 	db	101	;'e'
  1214  00FF0F  72                 	db	114	;'r'
  1215  00FF10  73                 	db	115	;'s'
  1216  00FF11  69                 	db	105	;'i'
  1217  00FF12  6F                 	db	111	;'o'
  1218  00FF13  6E                 	db	110	;'n'
  1219  00FF14  3A                 	db	58	;':'
  1220  00FF15  20                 	db	32
  1221  00FF16  00                 	db	0
  1222  00FF17                     STR_15:
  1223  00FF17  41                 	db	65	;'A'
  1224  00FF18  54                 	db	84	;'T'
  1225  00FF19  2B                 	db	43
  1226  00FF1A  48                 	db	72	;'H'
  1227  00FF1B  54                 	db	84	;'T'
  1228  00FF1C  54                 	db	84	;'T'
  1229  00FF1D  50                 	db	80	;'P'
  1230  00FF1E  50                 	db	80	;'P'
  1231  00FF1F  41                 	db	65	;'A'
  1232  00FF20  52                 	db	82	;'R'
  1233  00FF21  41                 	db	65	;'A'
  1234  00FF22  3D                 	db	61	;'='
  1235  00FF23  22                 	db	34
  1236  00FF24  55                 	db	85	;'U'
  1237  00FF25  52                 	db	82	;'R'
  1238  00FF26  4C                 	db	76	;'L'
  1239  00FF27  22                 	db	34
  1240  00FF28  2C                 	db	44
  1241  00FF29  22                 	db	34
  1242  00FF2A  00                 	db	0
  1243  00FF2B                     STR_27:
  1244  00FF2B  42                 	db	66	;'B'
  1245  00FF2C  75                 	db	117	;'u'
  1246  00FF2D  69                 	db	105	;'i'
  1247  00FF2E  6C                 	db	108	;'l'
  1248  00FF2F  64                 	db	100	;'d'
  1249  00FF30  20                 	db	32
  1250  00FF31  44                 	db	68	;'D'
  1251  00FF32  61                 	db	97	;'a'
  1252  00FF33  74                 	db	116	;'t'
  1253  00FF34  65                 	db	101	;'e'
  1254  00FF35  3A                 	db	58	;':'
  1255  00FF36  20                 	db	32
  1256  00FF37  25                 	db	37
  1257  00FF38  73                 	db	115	;'s'
  1258  00FF39  0D                 	db	13
  1259  00FF3A  0A                 	db	10
  1260  00FF3B  00                 	db	0
  1261  00FF3C                     STR_16:
  1262  00FF3C  41                 	db	65	;'A'
  1263  00FF3D  54                 	db	84	;'T'
  1264  00FF3E  2B                 	db	43
  1265  00FF3F  48                 	db	72	;'H'
  1266  00FF40  54                 	db	84	;'T'
  1267  00FF41  54                 	db	84	;'T'
  1268  00FF42  50                 	db	80	;'P'
  1269  00FF43  41                 	db	65	;'A'
  1270  00FF44  43                 	db	67	;'C'
  1271  00FF45  54                 	db	84	;'T'
  1272  00FF46  49                 	db	73	;'I'
  1273  00FF47  4F                 	db	79	;'O'
  1274  00FF48  4E                 	db	78	;'N'
  1275  00FF49  3D                 	db	61	;'='
  1276  00FF4A  30                 	db	48	;'0'
  1277  00FF4B  0D                 	db	13
  1278  00FF4C  00                 	db	0
  1279  00FF4D  41                 	db	65	;'A'
  1280  00FF4E  54                 	db	84	;'T'
  1281  00FF4F  2B                 	db	43
  1282  00FF50  48                 	db	72	;'H'
  1283  00FF51  54                 	db	84	;'T'
  1284  00FF52  54                 	db	84	;'T'
  1285  00FF53  50                 	db	80	;'P'
  1286  00FF54  53                 	db	83	;'S'
  1287  00FF55  53                 	db	83	;'S'
  1288  00FF56  4C                 	db	76	;'L'
  1289  00FF57  3D                 	db	61	;'='
  1290  00FF58  30                 	db	48	;'0'
  1291  00FF59  0D                 	db	13
  1292  00FF5A  00                 	db	0
  1293  00FF5B                     STR_10:
  1294  00FF5B  41                 	db	65	;'A'
  1295  00FF5C  54                 	db	84	;'T'
  1296  00FF5D  2B                 	db	43
  1297  00FF5E  53                 	db	83	;'S'
  1298  00FF5F  41                 	db	65	;'A'
  1299  00FF60  50                 	db	80	;'P'
  1300  00FF61  42                 	db	66	;'B'
  1301  00FF62  52                 	db	82	;'R'
  1302  00FF63  3D                 	db	61	;'='
  1303  00FF64  31                 	db	49	;'1'
  1304  00FF65  2C                 	db	44
  1305  00FF66  31                 	db	49	;'1'
  1306  00FF67  0D                 	db	13
  1307  00FF68  00                 	db	0
  1308  00FF69                     STR_11:
  1309  00FF69  41                 	db	65	;'A'
  1310  00FF6A  54                 	db	84	;'T'
  1311  00FF6B  2B                 	db	43
  1312  00FF6C  53                 	db	83	;'S'
  1313  00FF6D  41                 	db	65	;'A'
  1314  00FF6E  50                 	db	80	;'P'
  1315  00FF6F  42                 	db	66	;'B'
  1316  00FF70  52                 	db	82	;'R'
  1317  00FF71  3D                 	db	61	;'='
  1318  00FF72  32                 	db	50	;'2'
  1319  00FF73  2C                 	db	44
  1320  00FF74  31                 	db	49	;'1'
  1321  00FF75  0D                 	db	13
  1322  00FF76  00                 	db	0
  1323  00FF77                     STR_13:
  1324  00FF77  41                 	db	65	;'A'
  1325  00FF78  54                 	db	84	;'T'
  1326  00FF79  2B                 	db	43
  1327  00FF7A  48                 	db	72	;'H'
  1328  00FF7B  54                 	db	84	;'T'
  1329  00FF7C  54                 	db	84	;'T'
  1330  00FF7D  50                 	db	80	;'P'
  1331  00FF7E  53                 	db	83	;'S'
  1332  00FF7F  53                 	db	83	;'S'
  1333  00FF80  4C                 	db	76	;'L'
  1334  00FF81  3D                 	db	61	;'='
  1335  00FF82  31                 	db	49	;'1'
  1336  00FF83  0D                 	db	13
  1337  00FF84  00                 	db	0
  1338  00FF85                     STR_17:
  1339  00FF85  41                 	db	65	;'A'
  1340  00FF86  54                 	db	84	;'T'
  1341  00FF87  2B                 	db	43
  1342  00FF88  48                 	db	72	;'H'
  1343  00FF89  54                 	db	84	;'T'
  1344  00FF8A  54                 	db	84	;'T'
  1345  00FF8B  50                 	db	80	;'P'
  1346  00FF8C  52                 	db	82	;'R'
  1347  00FF8D  45                 	db	69	;'E'
  1348  00FF8E  41                 	db	65	;'A'
  1349  00FF8F  44                 	db	68	;'D'
  1350  00FF90  0D                 	db	13
  1351  00FF91  00                 	db	0
  1352  00FF92                     STR_18:
  1353  00FF92  41                 	db	65	;'A'
  1354  00FF93  54                 	db	84	;'T'
  1355  00FF94  2B                 	db	43
  1356  00FF95  48                 	db	72	;'H'
  1357  00FF96  54                 	db	84	;'T'
  1358  00FF97  54                 	db	84	;'T'
  1359  00FF98  50                 	db	80	;'P'
  1360  00FF99  54                 	db	84	;'T'
  1361  00FF9A  45                 	db	69	;'E'
  1362  00FF9B  52                 	db	82	;'R'
  1363  00FF9C  4D                 	db	77	;'M'
  1364  00FF9D  0D                 	db	13
  1365  00FF9E  00                 	db	0
  1366  00FF9F                     STR_12:
  1367  00FF9F  41                 	db	65	;'A'
  1368  00FFA0  54                 	db	84	;'T'
  1369  00FFA1  2B                 	db	43
  1370  00FFA2  48                 	db	72	;'H'
  1371  00FFA3  54                 	db	84	;'T'
  1372  00FFA4  54                 	db	84	;'T'
  1373  00FFA5  50                 	db	80	;'P'
  1374  00FFA6  49                 	db	73	;'I'
  1375  00FFA7  4E                 	db	78	;'N'
  1376  00FFA8  49                 	db	73	;'I'
  1377  00FFA9  54                 	db	84	;'T'
  1378  00FFAA  0D                 	db	13
  1379  00FFAB  00                 	db	0
  1380  00FFAC                     STR_2:
  1381  00FFAC  41                 	db	65	;'A'
  1382  00FFAD  54                 	db	84	;'T'
  1383  00FFAE  2B                 	db	43
  1384  00FFAF  49                 	db	73	;'I'
  1385  00FFB0  50                 	db	80	;'P'
  1386  00FFB1  52                 	db	82	;'R'
  1387  00FFB2  3D                 	db	61	;'='
  1388  00FFB3  39                 	db	57	;'9'
  1389  00FFB4  36                 	db	54	;'6'
  1390  00FFB5  30                 	db	48	;'0'
  1391  00FFB6  30                 	db	48	;'0'
  1392  00FFB7  0D                 	db	13
  1393  00FFB8  00                 	db	0
  1394  00FFB9                     STR_28:
  1395  00FFB9  4D                 	db	77	;'M'
  1396  00FFBA  61                 	db	97	;'a'
  1397  00FFBB  72                 	db	114	;'r'
  1398  00FFBC  20                 	db	32
  1399  00FFBD  31                 	db	49	;'1'
  1400  00FFBE  32                 	db	50	;'2'
  1401  00FFBF  20                 	db	32
  1402  00FFC0  32                 	db	50	;'2'
  1403  00FFC1  30                 	db	48	;'0'
  1404  00FFC2  32                 	db	50	;'2'
  1405  00FFC3  32                 	db	50	;'2'
  1406  00FFC4  00                 	db	0
  1407  00FFC5                     STR_4:
  1408  00FFC5  41                 	db	65	;'A'
  1409  00FFC6  54                 	db	84	;'T'
  1410  00FFC7  2B                 	db	43
  1411  00FFC8  43                 	db	67	;'C'
  1412  00FFC9  4D                 	db	77	;'M'
  1413  00FFCA  47                 	db	71	;'G'
  1414  00FFCB  52                 	db	82	;'R'
  1415  00FFCC  3D                 	db	61	;'='
  1416  00FFCD  31                 	db	49	;'1'
  1417  00FFCE  0D                 	db	13
  1418  00FFCF  00                 	db	0
  1419  00FFD0                     STR_5:
  1420  00FFD0  41                 	db	65	;'A'
  1421  00FFD1  54                 	db	84	;'T'
  1422  00FFD2  2B                 	db	43
  1423  00FFD3  43                 	db	67	;'C'
  1424  00FFD4  4D                 	db	77	;'M'
  1425  00FFD5  47                 	db	71	;'G'
  1426  00FFD6  53                 	db	83	;'S'
  1427  00FFD7  3D                 	db	61	;'='
  1428  00FFD8  22                 	db	34
  1429  00FFD9  00                 	db	0
  1430  00FFDA                     STR_29:
  1431  00FFDA  28                 	db	40
  1432  00FFDB  6E                 	db	110	;'n'
  1433  00FFDC  75                 	db	117	;'u'
  1434  00FFDD  6C                 	db	108	;'l'
  1435  00FFDE  6C                 	db	108	;'l'
  1436  00FFDF  29                 	db	41
  1437  00FFE0  00                 	db	0
  1438  00FFE1                     STR_3:
  1439  00FFE1  41                 	db	65	;'A'
  1440  00FFE2  54                 	db	84	;'T'
  1441  00FFE3  45                 	db	69	;'E'
  1442  00FFE4  30                 	db	48	;'0'
  1443  00FFE5  0D                 	db	13
  1444  00FFE6  00                 	db	0
  1445  00FFE7  41                 	db	65	;'A'
  1446  00FFE8  54                 	db	84	;'T'
  1447  00FFE9  41                 	db	65	;'A'
  1448  00FFEA  0D                 	db	13
  1449  00FFEB  00                 	db	0
  1450  00FFEC  41                 	db	65	;'A'
  1451  00FFED  54                 	db	84	;'T'
  1452  00FFEE  48                 	db	72	;'H'
  1453  00FFEF  0D                 	db	13
  1454  00FFF0  00                 	db	0
  1455  00FFF1                     STR_1:
  1456  00FFF1  41                 	db	65	;'A'
  1457  00FFF2  54                 	db	84	;'T'
  1458  00FFF3  0D                 	db	13
  1459  00FFF4  00                 	db	0
  1460  00FFF5                     STR_24:
  1461  00FFF5  2E                 	db	46
  1462  00FFF6  00                 	db	0
  1463  0000                     
  1464                           ; #config settings
  1465  00FFF7  00                 	db	0	; dummy byte at the end
  1466  0000                     
  1467                           	psect	cinit
  1468  002B22                     __pcinit:
  1469                           	opt stack 0
  1470  002B22                     start_initialization:
  1471                           	opt stack 0
  1472  002B22                     __initialization:
  1473                           	opt stack 0
  1474                           
  1475                           ; Initialize objects allocated to BANK3 (61 bytes)
  1476                           ; load TBLPTR registers with __pidataBANK3
  1477  002B22  0ED0               	movlw	low __pidataBANK3
  1478  002B24  6EF6               	movwf	tblptrl,c
  1479  002B26  0E56               	movlw	high __pidataBANK3
  1480  002B28  6EF7               	movwf	tblptrh,c
  1481  002B2A  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1482  002B2C  6EF8               	movwf	tblptru,c
  1483  002B2E  EE03  F0C2         	lfsr	0,__pdataBANK3
  1484  002B32  EE10 F03D          	lfsr	1,61
  1485  002B36                     copy_data0:
  1486  002B36  0009               	tblrd		*+
  1487  002B38  CFF5 FFEE          	movff	tablat,postinc0
  1488  002B3C  50E5               	movf	postdec1,w,c
  1489  002B3E  50E1               	movf	fsr1l,w,c
  1490  002B40  E1FA               	bnz	copy_data0
  1491                           
  1492                           ; Initialize objects allocated to BANK2 (13 bytes)
  1493                           ; load TBLPTR registers with __pidataBANK2
  1494  002B42  0EF2               	movlw	low __pidataBANK2
  1495  002B44  6EF6               	movwf	tblptrl,c
  1496  002B46  0E5D               	movlw	high __pidataBANK2
  1497  002B48  6EF7               	movwf	tblptrh,c
  1498  002B4A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1499  002B4C  6EF8               	movwf	tblptru,c
  1500  002B4E  EE02  F0F3         	lfsr	0,__pdataBANK2
  1501  002B52  EE10 F00D          	lfsr	1,13
  1502  002B56                     copy_data1:
  1503  002B56  0009               	tblrd		*+
  1504  002B58  CFF5 FFEE          	movff	tablat,postinc0
  1505  002B5C  50E5               	movf	postdec1,w,c
  1506  002B5E  50E1               	movf	fsr1l,w,c
  1507  002B60  E1FA               	bnz	copy_data1
  1508                           
  1509                           ; Initialize objects allocated to BANK1 (2 bytes)
  1510                           ; load TBLPTR registers with __pidataBANK1
  1511  002B62  0E6E               	movlw	low __pidataBANK1
  1512  002B64  6EF6               	movwf	tblptrl,c
  1513  002B66  0E5E               	movlw	high __pidataBANK1
  1514  002B68  6EF7               	movwf	tblptrh,c
  1515  002B6A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1516  002B6C  6EF8               	movwf	tblptru,c
  1517  002B6E  0009               	tblrd		*+	;fetch initializer
  1518  002B70  CFF5 F1FD          	movff	tablat,__pdataBANK1
  1519  002B74  0009               	tblrd		*+	;fetch initializer
  1520  002B76  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
  1521                           
  1522                           ; Initialize objects allocated to BANK4 (100 bytes)
  1523                           ; load TBLPTR registers with __pidataBANK4
  1524  002B7A  0E56               	movlw	low __pidataBANK4
  1525  002B7C  6EF6               	movwf	tblptrl,c
  1526  002B7E  0E4D               	movlw	high __pidataBANK4
  1527  002B80  6EF7               	movwf	tblptrh,c
  1528  002B82  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1529  002B84  6EF8               	movwf	tblptru,c
  1530  002B86  EE04  F040         	lfsr	0,__pdataBANK4
  1531  002B8A  EE10 F064          	lfsr	1,100
  1532  002B8E                     copy_data2:
  1533  002B8E  0009               	tblrd		*+
  1534  002B90  CFF5 FFEE          	movff	tablat,postinc0
  1535  002B94  50E5               	movf	postdec1,w,c
  1536  002B96  50E1               	movf	fsr1l,w,c
  1537  002B98  E1FA               	bnz	copy_data2
  1538                           
  1539                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1540  002B9A  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1541  002B9E  EE13 F020          	lfsr	1,800
  1542  002BA2                     clear_0:
  1543  002BA2  6AEE               	clrf	postinc0,c
  1544  002BA4  50E5               	movf	postdec1,w,c
  1545  002BA6  50E1               	movf	fsr1l,w,c
  1546  002BA8  E1FC               	bnz	clear_0
  1547  002BAA  50E2               	movf	fsr1h,w,c
  1548  002BAC  E1FA               	bnz	clear_0
  1549                           
  1550                           ; Clear objects allocated to BANK9 (200 bytes)
  1551  002BAE  EE09  F000         	lfsr	0,__pbssBANK9
  1552  002BB2  0EC8               	movlw	200
  1553  002BB4                     clear_1:
  1554  002BB4  6AEE               	clrf	postinc0,c
  1555  002BB6  06E8               	decf	wreg,f,c
  1556  002BB8  E1FD               	bnz	clear_1
  1557                           
  1558                           ; Clear objects allocated to BANK8 (200 bytes)
  1559  002BBA  EE08  F000         	lfsr	0,__pbssBANK8
  1560  002BBE  0EC8               	movlw	200
  1561  002BC0                     clear_2:
  1562  002BC0  6AEE               	clrf	postinc0,c
  1563  002BC2  06E8               	decf	wreg,f,c
  1564  002BC4  E1FD               	bnz	clear_2
  1565                           
  1566                           ; Clear objects allocated to BANK7 (196 bytes)
  1567  002BC6  EE07  F000         	lfsr	0,__pbssBANK7
  1568  002BCA  0EC4               	movlw	196
  1569  002BCC                     clear_3:
  1570  002BCC  6AEE               	clrf	postinc0,c
  1571  002BCE  06E8               	decf	wreg,f,c
  1572  002BD0  E1FD               	bnz	clear_3
  1573                           
  1574                           ; Clear objects allocated to BANK6 (220 bytes)
  1575  002BD2  EE06  F000         	lfsr	0,__pbssBANK6
  1576  002BD6  0EDC               	movlw	220
  1577  002BD8                     clear_4:
  1578  002BD8  6AEE               	clrf	postinc0,c
  1579  002BDA  06E8               	decf	wreg,f,c
  1580  002BDC  E1FD               	bnz	clear_4
  1581                           
  1582                           ; Clear objects allocated to BANK5 (244 bytes)
  1583  002BDE  EE05  F000         	lfsr	0,__pbssBANK5
  1584  002BE2  0EF4               	movlw	244
  1585  002BE4                     clear_5:
  1586  002BE4  6AEE               	clrf	postinc0,c
  1587  002BE6  06E8               	decf	wreg,f,c
  1588  002BE8  E1FD               	bnz	clear_5
  1589                           
  1590                           ; Clear objects allocated to BANK3 (194 bytes)
  1591  002BEA  EE03  F000         	lfsr	0,__pbssBANK3
  1592  002BEE  0EC2               	movlw	194
  1593  002BF0                     clear_6:
  1594  002BF0  6AEE               	clrf	postinc0,c
  1595  002BF2  06E8               	decf	wreg,f,c
  1596  002BF4  E1FD               	bnz	clear_6
  1597                           
  1598                           ; Clear objects allocated to BANK2 (43 bytes)
  1599  002BF6  EE02  F0C8         	lfsr	0,__pbssBANK2
  1600  002BFA  0E2B               	movlw	43
  1601  002BFC                     clear_7:
  1602  002BFC  6AEE               	clrf	postinc0,c
  1603  002BFE  06E8               	decf	wreg,f,c
  1604  002C00  E1FD               	bnz	clear_7
  1605                           
  1606                           ; Clear objects allocated to BANK1 (52 bytes)
  1607  002C02  EE01  F0C9         	lfsr	0,__pbssBANK1
  1608  002C06  0E34               	movlw	52
  1609  002C08                     clear_8:
  1610  002C08  6AEE               	clrf	postinc0,c
  1611  002C0A  06E8               	decf	wreg,f,c
  1612  002C0C  E1FD               	bnz	clear_8
  1613                           
  1614                           ; Clear objects allocated to BANK4 (90 bytes)
  1615  002C0E  EE04  F0A4         	lfsr	0,__pbssBANK4
  1616  002C12  0E5A               	movlw	90
  1617  002C14                     clear_9:
  1618  002C14  6AEE               	clrf	postinc0,c
  1619  002C16  06E8               	decf	wreg,f,c
  1620  002C18  E1FD               	bnz	clear_9
  1621                           
  1622                           ; Clear objects allocated to BANK0 (51 bytes)
  1623  002C1A  EE00  F0AC         	lfsr	0,__pbssBANK0
  1624  002C1E  0E33               	movlw	51
  1625  002C20                     clear_10:
  1626  002C20  6AEE               	clrf	postinc0,c
  1627  002C22  06E8               	decf	wreg,f,c
  1628  002C24  E1FD               	bnz	clear_10
  1629                           
  1630                           ; Clear objects allocated to COMRAM (31 bytes)
  1631  002C26  EE00  F023         	lfsr	0,__pbssCOMRAM
  1632  002C2A  0E1F               	movlw	31
  1633  002C2C                     clear_11:
  1634  002C2C  6AEE               	clrf	postinc0,c
  1635  002C2E  06E8               	decf	wreg,f,c
  1636  002C30  E1FD               	bnz	clear_11
  1637  002C32                     end_of_initialization:
  1638                           	opt stack 0
  1639  002C32                     __end_of__initialization:
  1640                           	opt stack 0
  1641  002C32  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1642  002C34  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1643  002C36  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1644  002C38  6EF8               	movwf	tblptru,c
  1645  002C3A  0100               	movlb	0
  1646  002C3C  EF00  F02F         	goto	_main	;jump to C main() function
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           postinc0	equ	0xFEE
  1652                           wreg	equ	0xFE8
  1653                           postdec1	equ	0xFE5
  1654                           fsr1h	equ	0xFE2
  1655                           fsr1l	equ	0xFE1
  1656                           
  1657                           	psect	bssCOMRAM
  1658  000023                     __pbssCOMRAM:
  1659                           	opt stack 0
  1660  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1661                           	opt stack 0
  1662  000023                     	ds	2
  1663  000025                     MyApp_Task@isRelay1On:
  1664                           	opt stack 0
  1665  000025                     	ds	1
  1666  000026                     _USBDeferOUTDataStagePackets:
  1667                           	opt stack 0
  1668  000026                     	ds	1
  1669  000027                     ConfigureModem@NextState:
  1670                           	opt stack 0
  1671  000027                     	ds	1
  1672  000028                     ConfigureModem@MdmConfigState:
  1673                           	opt stack 0
  1674  000028                     	ds	1
  1675  000029                     TurnOnModem@TurnOnMdmState:
  1676                           	opt stack 0
  1677  000029                     	ds	1
  1678  00002A                     CheckModem@CheckMdmSts:
  1679                           	opt stack 0
  1680  00002A                     	ds	1
  1681  00002B                     _ComChecCompleted:
  1682                           	opt stack 0
  1683  00002B                     	ds	1
  1684  00002C                     Uart_Uart1RxIsr@UartRxData:
  1685                           	opt stack 0
  1686  00002C                     	ds	1
  1687  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1688                           	opt stack 0
  1689  00002D                     	ds	1
  1690  00002E                     MdmCntSm@MdmCntState:
  1691                           	opt stack 0
  1692  00002E                     	ds	1
  1693  00002F                     RiSm@MdmDrvState:
  1694                           	opt stack 0
  1695  00002F                     	ds	1
  1696  000030                     _Mmd_RingIndicator:
  1697                           	opt stack 0
  1698  000030                     	ds	1
  1699  000031                     I2c_ReadData@ReadStatus:
  1700                           	opt stack 0
  1701  000031                     	ds	1
  1702  000032                     I2c_ReadData@TentativeCounter:
  1703                           	opt stack 0
  1704  000032                     	ds	1
  1705  000033                     I2c_ReadData@DataCounter:
  1706                           	opt stack 0
  1707  000033                     	ds	1
  1708  000034                     I2c_ReadData@I2cReadState:
  1709                           	opt stack 0
  1710  000034                     	ds	1
  1711  000035                     I2c_WriteData@WriteStatus:
  1712                           	opt stack 0
  1713  000035                     	ds	1
  1714  000036                     I2c_WriteData@TentativeCounter:
  1715                           	opt stack 0
  1716  000036                     	ds	1
  1717  000037                     I2c_WriteData@I2cNextState:
  1718                           	opt stack 0
  1719  000037                     	ds	1
  1720  000038                     I2c_WriteData@I2cWriteState:
  1721                           	opt stack 0
  1722  000038                     	ds	1
  1723  000039                     _MdmStsReady:
  1724                           	opt stack 0
  1725  000039                     	ds	1
  1726  00003A                     _NewStringMdmTerminal:
  1727                           	opt stack 0
  1728  00003A                     	ds	1
  1729  00003B                     _NewMdmEvtParserRequest:
  1730                           	opt stack 0
  1731  00003B                     	ds	1
  1732  00003C                     _NewStringReceived:
  1733                           	opt stack 0
  1734  00003C                     	ds	1
  1735  00003D                     _MdmResetRequest:
  1736                           	opt stack 0
  1737  00003D                     	ds	1
  1738  00003E                     _CallClosedEvent:
  1739                           	opt stack 0
  1740  00003E                     	ds	1
  1741  00003F                     _IncomingCallEvent:
  1742                           	opt stack 0
  1743  00003F                     	ds	1
  1744  000040                     _NewSmsEvent:
  1745                           	opt stack 0
  1746  000040                     	ds	1
  1747  000041                     _ActivateRiDetection:
  1748                           	opt stack 0
  1749  000041                     	ds	1
  1750                           tblptru	equ	0xFF8
  1751                           tblptrh	equ	0xFF7
  1752                           tblptrl	equ	0xFF6
  1753                           tablat	equ	0xFF5
  1754                           postinc0	equ	0xFEE
  1755                           wreg	equ	0xFE8
  1756                           postdec1	equ	0xFE5
  1757                           fsr1h	equ	0xFE2
  1758                           fsr1l	equ	0xFE1
  1759                           
  1760                           	psect	bssBANK0
  1761  0000AC                     __pbssBANK0:
  1762                           	opt stack 0
  1763  0000AC                     _inPipes:
  1764                           	opt stack 0
  1765  0000AC                     	ds	6
  1766  0000B2                     _pBDTEntryIn:
  1767                           	opt stack 0
  1768  0000B2                     	ds	6
  1769  0000B8                     _CDCDataOutHandle:
  1770                           	opt stack 0
  1771  0000B8                     	ds	2
  1772  0000BA                     _pBDTEntryEP0OutNext:
  1773                           	opt stack 0
  1774  0000BA                     	ds	2
  1775  0000BC                     _pBDTEntryEP0OutCurrent:
  1776                           	opt stack 0
  1777  0000BC                     	ds	2
  1778  0000BE                     _RxLen:
  1779                           	opt stack 0
  1780  0000BE                     	ds	2
  1781  0000C0                     _cdc_tx_len:
  1782                           	opt stack 0
  1783  0000C0                     	ds	1
  1784  0000C1                     _cdc_trf_state:
  1785                           	opt stack 0
  1786  0000C1                     	ds	1
  1787  0000C2                     _cdc_rx_len:
  1788                           	opt stack 0
  1789  0000C2                     	ds	1
  1790  0000C3                     _USBDeferINDataStagePackets:
  1791                           	opt stack 0
  1792  0000C3                     	ds	1
  1793  0000C4                     _USBStatusStageEnabledFlag2:
  1794                           	opt stack 0
  1795  0000C4                     	ds	1
  1796  0000C5                     _USBStatusStageEnabledFlag1:
  1797                           	opt stack 0
  1798  0000C5                     	ds	1
  1799  0000C6                     _USBDeferStatusStagePacket:
  1800                           	opt stack 0
  1801  0000C6                     	ds	1
  1802  0000C7                     _USBStatusStageTimeoutCounter:
  1803                           	opt stack 0
  1804  0000C7                     	ds	1
  1805  0000C8                     _endpoint_number:
  1806                           	opt stack 0
  1807  0000C8                     	ds	1
  1808  0000C9                     _controlTransferState:
  1809                           	opt stack 0
  1810  0000C9                     	ds	1
  1811  0000CA                     _shortPacketStatus:
  1812                           	opt stack 0
  1813  0000CA                     	ds	1
  1814  0000CB                     _USBDeviceState:
  1815                           	opt stack 0
  1816  0000CB                     	ds	1
  1817  0000CC                     _I2cComSts:
  1818                           	opt stack 0
  1819  0000CC                     	ds	1
  1820  0000CD                     HttpGetMethod@GetMethodNextState:
  1821                           	opt stack 0
  1822  0000CD                     	ds	1
  1823  0000CE                     InitGprsNetwork@GprsNetInitNextState:
  1824                           	opt stack 0
  1825  0000CE                     	ds	1
  1826  0000CF                     _MdmStatus:
  1827                           	opt stack 0
  1828  0000CF                     	ds	1
  1829  0000D0                     _PhoneNumbLen:
  1830                           	opt stack 0
  1831  0000D0                     	ds	1
  1832  0000D1                     _SmsLen:
  1833                           	opt stack 0
  1834  0000D1                     	ds	1
  1835  0000D2                     _SystemState:
  1836                           	opt stack 0
  1837  0000D2                     	ds	1
  1838  0000D3                     _USTATcopy:
  1839                           	opt stack 0
  1840  0000D3                     	ds	1
  1841  0000D4                     _USBActiveConfiguration:
  1842                           	opt stack 0
  1843  0000D4                     	ds	1
  1844  0000D5                     _I2cReadDataEvt:
  1845                           	opt stack 0
  1846  0000D5                     	ds	1
  1847  0000D6                     _I2cWriteDataEvt:
  1848                           	opt stack 0
  1849  0000D6                     	ds	1
  1850  0000D7                     _GetMethod:
  1851                           	opt stack 0
  1852  0000D7                     	ds	1
  1853  0000D8                     _InitNetwork:
  1854                           	opt stack 0
  1855  0000D8                     	ds	1
  1856  0000D9                     _SmsTxtReady:
  1857                           	opt stack 0
  1858  0000D9                     	ds	1
  1859  0000DA                     _GetSmsText:
  1860                           	opt stack 0
  1861  0000DA                     	ds	1
  1862  0000DB                     _SmsEvent:
  1863                           	opt stack 0
  1864  0000DB                     	ds	1
  1865  0000DC                     _RingEvent:
  1866                           	opt stack 0
  1867  0000DC                     	ds	1
  1868  0000DD                     _SendSmsEvent:
  1869                           	opt stack 0
  1870  0000DD                     	ds	1
  1871  0000DE                     _MdmOnOffPulseRequest:
  1872                           	opt stack 0
  1873  0000DE                     	ds	1
  1874                           tblptru	equ	0xFF8
  1875                           tblptrh	equ	0xFF7
  1876                           tblptrl	equ	0xFF6
  1877                           tablat	equ	0xFF5
  1878                           postinc0	equ	0xFEE
  1879                           wreg	equ	0xFE8
  1880                           postdec1	equ	0xFE5
  1881                           fsr1h	equ	0xFE2
  1882                           fsr1l	equ	0xFE1
  1883                           
  1884                           	psect	bssBANK1
  1885  0001C9                     __pbssBANK1:
  1886                           	opt stack 0
  1887  0001C9                     _outPipes:
  1888                           	opt stack 0
  1889  0001C9                     	ds	8
  1890  0001D1                     _CDCDataInHandle:
  1891                           	opt stack 0
  1892  0001D1                     	ds	2
  1893  0001D3                     _Tmr2IsrCallback:
  1894                           	opt stack 0
  1895  0001D3                     	ds	2
  1896  0001D5                     MyApp_Task@I2cStsReady:
  1897                           	opt stack 0
  1898  0001D5                     	ds	1
  1899  0001D6                     	ds	1
  1900  0001D7                     MyApp_Task@isRelay2On:
  1901                           	opt stack 0
  1902  0001D7                     	ds	1
  1903  0001D8                     	ds	1
  1904  0001D9                     	ds	1
  1905  0001DA                     	ds	1
  1906  0001DB                     	ds	1
  1907  0001DC                     	ds	1
  1908  0001DD                     	ds	1
  1909  0001DE                     	ds	1
  1910  0001DF                     GsmGprsTerminal@SMS:
  1911                           	opt stack 0
  1912  0001DF                     	ds	1
  1913  0001E0                     	ds	1
  1914  0001E1                     _control_signal_bitmap:
  1915                           	opt stack 0
  1916  0001E1                     	ds	1
  1917  0001E2                     _cdc_mem_type:
  1918                           	opt stack 0
  1919  0001E2                     	ds	1
  1920  0001E3                     _USBTicksSinceSuspendEnd:
  1921                           	opt stack 0
  1922  0001E3                     	ds	1
  1923  0001E4                     _BothEP0OutUOWNsSet:
  1924                           	opt stack 0
  1925  0001E4                     	ds	1
  1926  0001E5                     _USBBusIsSuspended:
  1927                           	opt stack 0
  1928  0001E5                     	ds	1
  1929  0001E6                     _RemoteWakeup:
  1930                           	opt stack 0
  1931  0001E6                     	ds	1
  1932  0001E7                     I2cSlv_QueryI2cData@Ret:
  1933                           	opt stack 0
  1934  0001E7                     	ds	1
  1935  0001E8                     I2cSlv_QueryI2cData@I2cOpState:
  1936                           	opt stack 0
  1937  0001E8                     	ds	1
  1938  0001E9                     I2cSendMsgSm@I2cComState:
  1939                           	opt stack 0
  1940  0001E9                     	ds	1
  1941  0001EA                     _I2cBusStatus:
  1942                           	opt stack 0
  1943  0001EA                     	ds	1
  1944  0001EB                     HttpGetMethod@GetMOutSts:
  1945                           	opt stack 0
  1946  0001EB                     	ds	1
  1947  0001EC                     HttpGetMethod@GetMethodState:
  1948                           	opt stack 0
  1949  0001EC                     	ds	1
  1950  0001ED                     InitGprsNetwork@GprsNetInitState:
  1951                           	opt stack 0
  1952  0001ED                     	ds	1
  1953  0001EE                     _PostMethod:
  1954                           	opt stack 0
  1955  0001EE                     	ds	1
  1956  0001EF                     _HttpGetMethodSts:
  1957                           	opt stack 0
  1958  0001EF                     	ds	1
  1959  0001F0                     _GprsNetworkSts:
  1960                           	opt stack 0
  1961  0001F0                     	ds	1
  1962  0001F1                     _ApnLenLocal:
  1963                           	opt stack 0
  1964  0001F1                     	ds	1
  1965  0001F2                     SendSmsSm@SendSms_NextState:
  1966                           	opt stack 0
  1967  0001F2                     	ds	1
  1968  0001F3                     SendSmsSm@SendSms_State:
  1969                           	opt stack 0
  1970  0001F3                     	ds	1
  1971  0001F4                     GetSmsSm@GetSmsState:
  1972                           	opt stack 0
  1973  0001F4                     	ds	1
  1974  0001F5                     _AlarmEvent:
  1975                           	opt stack 0
  1976  0001F5                     	ds	1
  1977  0001F6                     _Led3OutSts:
  1978                           	opt stack 0
  1979  0001F6                     	ds	1
  1980  0001F7                     _Led3Sts:
  1981                           	opt stack 0
  1982  0001F7                     	ds	1
  1983  0001F8                     _Led2OutSts:
  1984                           	opt stack 0
  1985  0001F8                     	ds	1
  1986  0001F9                     _Led2Sts:
  1987                           	opt stack 0
  1988  0001F9                     	ds	1
  1989  0001FA                     _Led1OutSts:
  1990                           	opt stack 0
  1991  0001FA                     	ds	1
  1992  0001FB                     _Led1Sts:
  1993                           	opt stack 0
  1994  0001FB                     	ds	1
  1995  0001FC                     I2cDummyTx@DummyBuffer:
  1996                           	opt stack 0
  1997  0001FC                     	ds	1
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           postdec1	equ	0xFE5
  2005                           fsr1h	equ	0xFE2
  2006                           fsr1l	equ	0xFE1
  2007                           
  2008                           	psect	dataBANK1
  2009  0001FD                     __pdataBANK1:
  2010                           	opt stack 0
  2011  0001FD                     	ds	1
  2012  0001FE                     InitGprsNetwork@GprsInitSts:
  2013                           	opt stack 0
  2014  0001FE                     	ds	1
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           postinc0	equ	0xFEE
  2020                           wreg	equ	0xFE8
  2021                           postdec1	equ	0xFE5
  2022                           fsr1h	equ	0xFE2
  2023                           fsr1l	equ	0xFE1
  2024                           
  2025                           	psect	bssBANK2
  2026  0002C8                     __pbssBANK2:
  2027                           	opt stack 0
  2028  0002C8                     _pCDCDst:
  2029                           	opt stack 0
  2030  0002C8                     	ds	3
  2031  0002CB                     _pCDCSrc:
  2032                           	opt stack 0
  2033  0002CB                     	ds	3
  2034  0002CE                     _ep_data_out:
  2035                           	opt stack 0
  2036  0002CE                     	ds	3
  2037  0002D1                     _ep_data_in:
  2038                           	opt stack 0
  2039  0002D1                     	ds	3
  2040  0002D4                     _pDst:
  2041                           	opt stack 0
  2042  0002D4                     	ds	2
  2043  0002D6                     _ApnLocal:
  2044                           	opt stack 0
  2045  0002D6                     	ds	2
  2046  0002D8                     ConfigureModem@DelayCounter:
  2047                           	opt stack 0
  2048  0002D8                     	ds	2
  2049  0002DA                     ConfigureModem@DelayValueMs:
  2050                           	opt stack 0
  2051  0002DA                     	ds	2
  2052  0002DC                     TurnOnModem@Counter:
  2053                           	opt stack 0
  2054  0002DC                     	ds	2
  2055  0002DE                     UpdateSchFlag@InterruptCounter:
  2056                           	opt stack 0
  2057  0002DE                     	ds	2
  2058  0002E0                     MdmCntSm@Counter:
  2059                           	opt stack 0
  2060  0002E0                     	ds	2
  2061  0002E2                     RiSm@Counter:
  2062                           	opt stack 0
  2063  0002E2                     	ds	2
  2064  0002E4                     _ExtInt1IsrCallback:
  2065                           	opt stack 0
  2066  0002E4                     	ds	2
  2067  0002E6                     _ExtInt0IsrCallback:
  2068                           	opt stack 0
  2069  0002E6                     	ds	2
  2070  0002E8                     _RtccIsrCallback:
  2071                           	opt stack 0
  2072  0002E8                     	ds	2
  2073  0002EA                     _Tmr4IsrCallback:
  2074                           	opt stack 0
  2075  0002EA                     	ds	2
  2076  0002EC                     Term_MainSm@TermMainSmState:
  2077                           	opt stack 0
  2078  0002EC                     	ds	1
  2079  0002ED                     Terminal@FormatOption:
  2080                           	opt stack 0
  2081  0002ED                     	ds	1
  2082  0002EE                     Terminal@SlaveAddr:
  2083                           	opt stack 0
  2084  0002EE                     	ds	1
  2085  0002EF                     Terminal@PackageLen:
  2086                           	opt stack 0
  2087  0002EF                     	ds	1
  2088  0002F0                     Terminal@TermState:
  2089                           	opt stack 0
  2090  0002F0                     	ds	1
  2091  0002F1                     _USBAlternateInterface:
  2092                           	opt stack 0
  2093  0002F1                     	ds	2
  2094                           tblptru	equ	0xFF8
  2095                           tblptrh	equ	0xFF7
  2096                           tblptrl	equ	0xFF6
  2097                           tablat	equ	0xFF5
  2098                           postinc0	equ	0xFEE
  2099                           wreg	equ	0xFE8
  2100                           postdec1	equ	0xFE5
  2101                           fsr1h	equ	0xFE2
  2102                           fsr1l	equ	0xFE1
  2103                           
  2104                           	psect	dataBANK2
  2105  0002F3                     __pdataBANK2:
  2106                           	opt stack 0
  2107  0002F3                     Terminal@EchoOption:
  2108                           	opt stack 0
  2109  0002F3                     	ds	1
  2110  0002F4                     _MainSystemTimebaseFlag:
  2111                           	opt stack 0
  2112  0002F4                     	ds	1
  2113  0002F5                     _ConnTimeout:
  2114                           	opt stack 0
  2115  0002F5                     	ds	11
  2116                           tblptru	equ	0xFF8
  2117                           tblptrh	equ	0xFF7
  2118                           tblptrl	equ	0xFF6
  2119                           tablat	equ	0xFF5
  2120                           postinc0	equ	0xFEE
  2121                           wreg	equ	0xFE8
  2122                           postdec1	equ	0xFE5
  2123                           fsr1h	equ	0xFE2
  2124                           fsr1l	equ	0xFE1
  2125                           
  2126                           	psect	bssBANK3
  2127  000300                     __pbssBANK3:
  2128                           	opt stack 0
  2129  000300                     _Rtcm_SystemDate:
  2130                           	opt stack 0
  2131  000300                     	ds	8
  2132  000308                     _Rtcm_RtccAlarm:
  2133                           	opt stack 0
  2134  000308                     	ds	6
  2135  00030E                     _pBDTEntryOut:
  2136                           	opt stack 0
  2137  00030E                     	ds	6
  2138  000314                     _BaudRateGen:
  2139                           	opt stack 0
  2140  000314                     	ds	4
  2141  000318                     _USB1msTickCount:
  2142                           	opt stack 0
  2143  000318                     	ds	4
  2144  00031C                     _OsTmr_OsTickCounter:
  2145                           	opt stack 0
  2146  00031C                     	ds	4
  2147  000320                     MyApp_Task@F8982:
  2148                           	opt stack 0
  2149  000320                     	ds	2
  2150  000322                     	ds	2
  2151  000324                     _PhoneNumberLen:
  2152                           	opt stack 0
  2153  000324                     	ds	2
  2154  000326                     _UartConfig:
  2155                           	opt stack 0
  2156  000326                     	ds	21
  2157  00033B                     Terminal@SwTimer:
  2158                           	opt stack 0
  2159  00033B                     	ds	11
  2160  000346                     I2cSlv_QueryI2cData@TimeoutTimer:
  2161                           	opt stack 0
  2162  000346                     	ds	11
  2163  000351                     I2cSlv_QueryI2cData@QueryTimer:
  2164                           	opt stack 0
  2165  000351                     	ds	11
  2166  00035C                     _I2cConfig:
  2167                           	opt stack 0
  2168  00035C                     	ds	10
  2169  000366                     _Led3Blink:
  2170                           	opt stack 0
  2171  000366                     	ds	9
  2172  00036F                     _Led2Blink:
  2173                           	opt stack 0
  2174  00036F                     	ds	9
  2175  000378                     _Led1Blink:
  2176                           	opt stack 0
  2177  000378                     	ds	9
  2178  000381                     _dummy_encapsulated_cmd_response:
  2179                           	opt stack 0
  2180  000381                     	ds	8
  2181  000389                     _line_coding:
  2182                           	opt stack 0
  2183  000389                     	ds	7
  2184  000390                     _Led3Pulse:
  2185                           	opt stack 0
  2186  000390                     	ds	6
  2187  000396                     _Led2Pulse:
  2188                           	opt stack 0
  2189  000396                     	ds	6
  2190  00039C                     _Led1Pulse:
  2191                           	opt stack 0
  2192  00039C                     	ds	6
  2193  0003A2                     _I2cRxPacket:
  2194                           	opt stack 0
  2195  0003A2                     	ds	6
  2196  0003A8                     _I2cTxPacket:
  2197                           	opt stack 0
  2198  0003A8                     	ds	5
  2199  0003AD                     _HttpGetDataLocal:
  2200                           	opt stack 0
  2201  0003AD                     	ds	5
  2202  0003B2                     Terminal@Addr:
  2203                           	opt stack 0
  2204  0003B2                     	ds	4
  2205  0003B6                     Terminal@Len:
  2206                           	opt stack 0
  2207  0003B6                     	ds	4
  2208  0003BA                     _AlCfg:
  2209                           	opt stack 0
  2210  0003BA                     	ds	4
  2211  0003BE                     _RtcConfig:
  2212                           	opt stack 0
  2213  0003BE                     	ds	4
  2214                           tblptru	equ	0xFF8
  2215                           tblptrh	equ	0xFF7
  2216                           tblptrl	equ	0xFF6
  2217                           tablat	equ	0xFF5
  2218                           postinc0	equ	0xFEE
  2219                           wreg	equ	0xFE8
  2220                           postdec1	equ	0xFE5
  2221                           fsr1h	equ	0xFE2
  2222                           fsr1l	equ	0xFE1
  2223                           
  2224                           	psect	dataBANK3
  2225  0003C2                     __pdataBANK3:
  2226                           	opt stack 0
  2227  0003C2                     ModemEvtParser@F9088:
  2228                           	opt stack 0
  2229  0003C2                     	ds	5
  2230  0003C7                     ModemEvtParser@F9086:
  2231                           	opt stack 0
  2232  0003C7                     	ds	4
  2233  0003CB                     MyApp_Task@F8979:
  2234                           	opt stack 0
  2235  0003CB                     	ds	2
  2236  0003CD                     MyApp_Task@F8976:
  2237                           	opt stack 0
  2238  0003CD                     	ds	2
  2239  0003CF                     	ds	2
  2240  0003D1                     triggerRelay@F8966:
  2241                           	opt stack 0
  2242  0003D1                     	ds	2
  2243  0003D3                     Term_MainSm@TermDelay:
  2244                           	opt stack 0
  2245  0003D3                     	ds	11
  2246  0003DE                     _ConnWait:
  2247                           	opt stack 0
  2248  0003DE                     	ds	11
  2249  0003E9                     SendSmsSm@SwTimer:
  2250                           	opt stack 0
  2251  0003E9                     	ds	11
  2252  0003F4                     CheckModem@Timeout:
  2253                           	opt stack 0
  2254  0003F4                     	ds	11
  2255                           tblptru	equ	0xFF8
  2256                           tblptrh	equ	0xFF7
  2257                           tblptrl	equ	0xFF6
  2258                           tablat	equ	0xFF5
  2259                           postinc0	equ	0xFEE
  2260                           wreg	equ	0xFE8
  2261                           postdec1	equ	0xFE5
  2262                           fsr1h	equ	0xFE2
  2263                           fsr1l	equ	0xFE1
  2264                           
  2265                           	psect	bssBANK4
  2266  0004A4                     __pbssBANK4:
  2267                           	opt stack 0
  2268  0004A4                     	ds	10
  2269  0004AE                     _cdc_notice:
  2270                           	opt stack 0
  2271  0004AE                     	ds	10
  2272  0004B8                     Term_MainSm@Data:
  2273                           	opt stack 0
  2274  0004B8                     	ds	50
  2275  0004EA                     _PhoneNumber:
  2276                           	opt stack 0
  2277  0004EA                     	ds	20
  2278                           tblptru	equ	0xFF8
  2279                           tblptrh	equ	0xFF7
  2280                           tblptrl	equ	0xFF6
  2281                           tablat	equ	0xFF5
  2282                           postinc0	equ	0xFEE
  2283                           wreg	equ	0xFE8
  2284                           postdec1	equ	0xFE5
  2285                           fsr1h	equ	0xFE2
  2286                           fsr1l	equ	0xFE1
  2287                           
  2288                           	psect	dataBANK4
  2289  000440                     __pdataBANK4:
  2290                           	opt stack 0
  2291  000440                     MyApp_Task@F8985:
  2292                           	opt stack 0
  2293  000440                     	ds	10
  2294  00044A                     ModemEvtParser@F9090:
  2295                           	opt stack 0
  2296  00044A                     	ds	10
  2297  000454                     _TaskTable:
  2298                           	opt stack 0
  2299  000454                     	ds	80
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           postinc0	equ	0xFEE
  2305                           wreg	equ	0xFE8
  2306                           postdec1	equ	0xFE5
  2307                           fsr1h	equ	0xFE2
  2308                           fsr1l	equ	0xFE1
  2309                           
  2310                           	psect	bssBANK5
  2311  000500                     __pbssBANK5:
  2312                           	opt stack 0
  2313  000500                     Terminal@Payload:
  2314                           	opt stack 0
  2315  000500                     	ds	80
  2316  000550                     _cdc_data_rx:
  2317                           	opt stack 0
  2318  000550                     	ds	64
  2319  000590                     Terminal@TermRxBuffer:
  2320                           	opt stack 0
  2321  000590                     	ds	50
  2322  0005C2                     _MessageText:
  2323                           	opt stack 0
  2324  0005C2                     	ds	50
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           postdec1	equ	0xFE5
  2332                           fsr1h	equ	0xFE2
  2333                           fsr1l	equ	0xFE1
  2334                           
  2335                           	psect	bssBANK6
  2336  000600                     __pbssBANK6:
  2337                           	opt stack 0
  2338  000600                     _OsAlarms:
  2339                           	opt stack 0
  2340  000600                     	ds	220
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           postinc0	equ	0xFEE
  2346                           wreg	equ	0xFE8
  2347                           postdec1	equ	0xFE5
  2348                           fsr1h	equ	0xFE2
  2349                           fsr1l	equ	0xFE1
  2350                           
  2351                           	psect	bssBANK7
  2352  000700                     __pbssBANK7:
  2353                           	opt stack 0
  2354  000700                     _Mdm_SmsRx:
  2355                           	opt stack 0
  2356  000700                     	ds	132
  2357  000784                     _cdc_data_tx:
  2358                           	opt stack 0
  2359  000784                     	ds	64
  2360                           tblptru	equ	0xFF8
  2361                           tblptrh	equ	0xFF7
  2362                           tblptrl	equ	0xFF6
  2363                           tablat	equ	0xFF5
  2364                           postinc0	equ	0xFEE
  2365                           wreg	equ	0xFE8
  2366                           postdec1	equ	0xFE5
  2367                           fsr1h	equ	0xFE2
  2368                           fsr1l	equ	0xFE1
  2369                           
  2370                           	psect	bssBANK8
  2371  000800                     __pbssBANK8:
  2372                           	opt stack 0
  2373  000800                     GsmGprsTerminal@UsbBuffer:
  2374                           	opt stack 0
  2375  000800                     	ds	200
  2376                           tblptru	equ	0xFF8
  2377                           tblptrh	equ	0xFF7
  2378                           tblptrl	equ	0xFF6
  2379                           tablat	equ	0xFF5
  2380                           postinc0	equ	0xFEE
  2381                           wreg	equ	0xFE8
  2382                           postdec1	equ	0xFE5
  2383                           fsr1h	equ	0xFE2
  2384                           fsr1l	equ	0xFE1
  2385                           
  2386                           	psect	bssBANK9
  2387  000900                     __pbssBANK9:
  2388                           	opt stack 0
  2389  000900                     GsmGprsTerminal@UartBuffer:
  2390                           	opt stack 0
  2391  000900                     	ds	200
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           postinc0	equ	0xFEE
  2397                           wreg	equ	0xFE8
  2398                           postdec1	equ	0xFE5
  2399                           fsr1h	equ	0xFE2
  2400                           fsr1l	equ	0xFE1
  2401                           
  2402                           	psect	bssBIGRAMl
  2403  000AC8                     __pbssBIGRAMl:
  2404                           	opt stack 0
  2405  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2406                           	opt stack 0
  2407  000AC8                     	ds	400
  2408  000C58                     _RxBuffer:
  2409                           	opt stack 0
  2410  000C58                     	ds	400
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           postinc0	equ	0xFEE
  2416                           wreg	equ	0xFE8
  2417                           postdec1	equ	0xFE5
  2418                           fsr1h	equ	0xFE2
  2419                           fsr1l	equ	0xFE1
  2420                           
  2421                           	psect	cstackBANK10
  2422  000A00                     __pcstackBANK10:
  2423                           	opt stack 0
  2424  000A00                     Terminal@UsbRxBuffer:
  2425                           	opt stack 0
  2426                           
  2427                           ; 200 bytes @ 0x0
  2428  000A00                     	ds	200
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           
  2439                           	psect	cstackBANK2
  2440  000200                     __pcstackBANK2:
  2441                           	opt stack 0
  2442  000200                     Terminal@UsbTxBuffer:
  2443                           	opt stack 0
  2444                           
  2445                           ; 200 bytes @ 0x0
  2446  000200                     	ds	200
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           postinc0	equ	0xFEE
  2452                           wreg	equ	0xFE8
  2453                           postdec1	equ	0xFE5
  2454                           fsr1h	equ	0xFE2
  2455                           fsr1l	equ	0xFE1
  2456                           
  2457                           	psect	cstackBANK1
  2458  000100                     __pcstackBANK1:
  2459                           	opt stack 0
  2460  000100                     SendSmsSm@UartMessage:
  2461                           	opt stack 0
  2462  000100                     InitGprsNetwork@UartMessage:
  2463                           	opt stack 0
  2464  000100                     Terminal@TermTxBuffer:
  2465                           	opt stack 0
  2466  000100                     HttpGetMethod@UartMessage:
  2467                           	opt stack 0
  2468                           
  2469                           ; 200 bytes @ 0x0
  2470  000100                     	ds	50
  2471  000132                     InitGprsNetwork@Index:
  2472                           	opt stack 0
  2473  000132                     Term_MainSm@FwkMajorStr:
  2474                           	opt stack 0
  2475                           
  2476                           ; 4 bytes @ 0x32
  2477  000132                     	ds	4
  2478  000136                     Term_MainSm@FwkMinorStr:
  2479                           	opt stack 0
  2480                           
  2481                           ; 4 bytes @ 0x36
  2482  000136                     	ds	4
  2483  00013A                     Term_MainSm@FwkBuildStr:
  2484                           	opt stack 0
  2485                           
  2486                           ; 4 bytes @ 0x3A
  2487  00013A                     	ds	142
  2488  0001C8                     HttpGetMethod@Index:
  2489                           	opt stack 0
  2490                           
  2491                           ; 1 bytes @ 0xC8
  2492  0001C8                     	ds	1
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           postinc0	equ	0xFEE
  2498                           wreg	equ	0xFE8
  2499                           postdec1	equ	0xFE5
  2500                           fsr1h	equ	0xFE2
  2501                           fsr1l	equ	0xFE1
  2502                           
  2503                           	psect	cstackBANK0
  2504  000060                     __pcstackBANK0:
  2505                           	opt stack 0
  2506  000060                     
  2507                           ; 1 bytes @ 0x0
  2508  000060                     	ds	8
  2509  000068                     ??_LowPriorityIsr:
  2510                           
  2511                           ; 1 bytes @ 0x8
  2512  000068                     	ds	21
  2513  00007D                     ??_isdigit:
  2514  00007D                     ??_isspace:
  2515  00007D                     ??_isupper:
  2516  00007D                     ??_Rtcc_GetRtccValue:
  2517  00007D                     ??_UartTxBufferStatus:
  2518  00007D                     ??_USBStdGetDscHandler:
  2519  00007D                     ??_USBStdGetStatusHandler:
  2520  00007D                     ?_USBTransferOnePacket:
  2521                           	opt stack 0
  2522  00007D                     ?_strlen:
  2523                           	opt stack 0
  2524  00007D                     ?_sprintf:
  2525                           	opt stack 0
  2526  00007D                     ?___wmul:
  2527                           	opt stack 0
  2528  00007D                     ?___awdiv:
  2529                           	opt stack 0
  2530  00007D                     ?___awmod:
  2531                           	opt stack 0
  2532  00007D                     ?___lwdiv:
  2533                           	opt stack 0
  2534  00007D                     ?___lwmod:
  2535                           	opt stack 0
  2536  00007D                     ?_GetOsTickCounter:
  2537                           	opt stack 0
  2538  00007D                     ?___lmul:
  2539                           	opt stack 0
  2540  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2541                           	opt stack 0
  2542  00007D                     SetAckStatus@AckSts:
  2543                           	opt stack 0
  2544  00007D                     WriteByte@Byte:
  2545                           	opt stack 0
  2546  00007D                     ReadByte@Byte:
  2547                           	opt stack 0
  2548  00007D                     Mcu_SetWdgSts@WdgSts:
  2549                           	opt stack 0
  2550  00007D                     RtccIrqInit@Priority:
  2551                           	opt stack 0
  2552  00007D                     Rtcc_SetRtcStatus@Status:
  2553                           	opt stack 0
  2554  00007D                     TmrBInit@Prescaler:
  2555                           	opt stack 0
  2556  00007D                     Tmr_TmrBIrqSet@Priority:
  2557                           	opt stack 0
  2558  00007D                     Tmr_StartTmr@TmrNumb:
  2559                           	opt stack 0
  2560  00007D                     UartWriteByte@ByteToWrite:
  2561                           	opt stack 0
  2562  00007D                     USBTransferOnePacket@dir:
  2563                           	opt stack 0
  2564  00007D                     USBConfigureEndpoint@direction:
  2565                           	opt stack 0
  2566  00007D                     USBCtrlTrfTxService@byteToSend:
  2567                           	opt stack 0
  2568  00007D                     USBCtrlTrfRxService@i:
  2569                           	opt stack 0
  2570  00007D                     Led_SetLedStatus@LedSts:
  2571                           	opt stack 0
  2572  00007D                     toupper@c:
  2573                           	opt stack 0
  2574  00007D                     tolower@c:
  2575                           	opt stack 0
  2576  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2577                           	opt stack 0
  2578  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2579                           	opt stack 0
  2580  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2581                           	opt stack 0
  2582  00007D                     Uart_ClearRxBuffer@Index:
  2583                           	opt stack 0
  2584  00007D                     GenerateEvt@Event:
  2585                           	opt stack 0
  2586  00007D                     ReceiveEvt@Event:
  2587                           	opt stack 0
  2588  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2589                           	opt stack 0
  2590  00007D                     StringCompare@String1:
  2591                           	opt stack 0
  2592  00007D                     StringCopy@SourceStr:
  2593                           	opt stack 0
  2594  00007D                     ClearBuffer@Buffer:
  2595                           	opt stack 0
  2596  00007D                     sprintf@sp:
  2597                           	opt stack 0
  2598  00007D                     ___wmul@multiplier:
  2599                           	opt stack 0
  2600  00007D                     ___awdiv@dividend:
  2601                           	opt stack 0
  2602  00007D                     ___awmod@dividend:
  2603                           	opt stack 0
  2604  00007D                     ___lwdiv@dividend:
  2605                           	opt stack 0
  2606  00007D                     ___lwmod@dividend:
  2607                           	opt stack 0
  2608  00007D                     memcpy@d1:
  2609                           	opt stack 0
  2610  00007D                     memset@p1:
  2611                           	opt stack 0
  2612  00007D                     strcat@to:
  2613                           	opt stack 0
  2614  00007D                     strcpy@to:
  2615                           	opt stack 0
  2616  00007D                     strlen@s:
  2617                           	opt stack 0
  2618  00007D                     ___lmul@multiplier:
  2619                           	opt stack 0
  2620                           
  2621                           ; 4 bytes @ 0x1D
  2622  00007D                     	ds	1
  2623  00007E                     ??_USBConfigureEndpoint:
  2624  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2625                           	opt stack 0
  2626  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2627                           	opt stack 0
  2628  00007E                     TmrBInit@Postscaler:
  2629                           	opt stack 0
  2630  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2631                           	opt stack 0
  2632  00007E                     UartWriteByte@Module:
  2633                           	opt stack 0
  2634  00007E                     UartTxBufferStatus@Module:
  2635                           	opt stack 0
  2636  00007E                     USBCtrlTrfRxService@byteToRead:
  2637                           	opt stack 0
  2638  00007E                     USBCtrlTrfInHandler@lastDTS:
  2639                           	opt stack 0
  2640  00007E                     Led_SetLedStatus@Led:
  2641                           	opt stack 0
  2642  00007E                     _isdigit$6101:
  2643                           	opt stack 0
  2644  00007E                     _isspace$6370:
  2645                           	opt stack 0
  2646  00007E                     _isupper$6373:
  2647                           	opt stack 0
  2648  00007E                     I2c_WriteData@WritePacket:
  2649                           	opt stack 0
  2650  00007E                     Rtcc_RtcConfig@RtcConfig:
  2651                           	opt stack 0
  2652  00007E                     USBTransferOnePacket@data:
  2653                           	opt stack 0
  2654  00007E                     USBStdGetStatusHandler@p:
  2655                           	opt stack 0
  2656                           
  2657                           ; 2 bytes @ 0x1E
  2658  00007E                     	ds	1
  2659  00007F                     ??_strlen:
  2660  00007F                     ??_Rtcc_AlarmConfig:
  2661  00007F                     ??_TmrBInit:
  2662  00007F                     Irq_InitIntController@IntPriorityEn:
  2663                           	opt stack 0
  2664  00007F                     Rtcc_GetRtccValue@RetValue:
  2665                           	opt stack 0
  2666  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2667                           	opt stack 0
  2668  00007F                     UartTxBufferStatus@TxBufferStatus:
  2669                           	opt stack 0
  2670  00007F                     GenerateEvt@EventStatus:
  2671                           	opt stack 0
  2672  00007F                     isdigit@c:
  2673                           	opt stack 0
  2674  00007F                     isspace@c:
  2675                           	opt stack 0
  2676  00007F                     isupper@c:
  2677                           	opt stack 0
  2678  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2679                           	opt stack 0
  2680  00007F                     StringCompare@String2:
  2681                           	opt stack 0
  2682  00007F                     StringCopy@DestStr:
  2683                           	opt stack 0
  2684  00007F                     ClearBuffer@Len:
  2685                           	opt stack 0
  2686  00007F                     sprintf@f:
  2687                           	opt stack 0
  2688  00007F                     ___wmul@multiplicand:
  2689                           	opt stack 0
  2690  00007F                     ___awdiv@divisor:
  2691                           	opt stack 0
  2692  00007F                     ___awmod@divisor:
  2693                           	opt stack 0
  2694  00007F                     ___lwdiv@divisor:
  2695                           	opt stack 0
  2696  00007F                     ___lwmod@divisor:
  2697                           	opt stack 0
  2698  00007F                     memcpy@s1:
  2699                           	opt stack 0
  2700  00007F                     memset@c:
  2701                           	opt stack 0
  2702  00007F                     strcat@from:
  2703                           	opt stack 0
  2704  00007F                     strcpy@from:
  2705                           	opt stack 0
  2706                           
  2707                           ; 2 bytes @ 0x1F
  2708  00007F                     	ds	1
  2709  000080                     ??_isalpha:
  2710  000080                     ??_isxdigit:
  2711  000080                     ??_I2c_WriteData:
  2712  000080                     ??_Rtcc_RtcConfig:
  2713  000080                     Rtcc_GetRtccValue@RegValue:
  2714                           	opt stack 0
  2715  000080                     TmrBInit@TmrNumb:
  2716                           	opt stack 0
  2717  000080                     ReceiveEvt@EventStatus:
  2718                           	opt stack 0
  2719  000080                     USBTransferOnePacket@len:
  2720                           	opt stack 0
  2721  000080                     I2c_ReadData@ReadPacket:
  2722                           	opt stack 0
  2723  000080                     Uart_WriteConstString@ConstStringToWrite:
  2724                           	opt stack 0
  2725  000080                     Uart_WriteString@StringToWrite:
  2726                           	opt stack 0
  2727  000080                     Uart_WriteStringLen@StringToWrite:
  2728                           	opt stack 0
  2729  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2730                           	opt stack 0
  2731  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2732                           	opt stack 0
  2733                           
  2734                           ; 2 bytes @ 0x20
  2735  000080                     	ds	1
  2736  000081                     ?_GetElapsedTime:
  2737                           	opt stack 0
  2738  000081                     ?_Rtcm_GetRtccDate:
  2739                           	opt stack 0
  2740  000081                     Mdm_IsRinging@Ret:
  2741                           	opt stack 0
  2742  000081                     I2cSlv_I2cReadMsgSts@Result:
  2743                           	opt stack 0
  2744  000081                     USBTransferOnePacket@ep:
  2745                           	opt stack 0
  2746  000081                     Led_SetLedBlinkTime@Led:
  2747                           	opt stack 0
  2748  000081                     ___awdiv@counter:
  2749                           	opt stack 0
  2750  000081                     ___awmod@counter:
  2751                           	opt stack 0
  2752  000081                     ___lwdiv@counter:
  2753                           	opt stack 0
  2754  000081                     ___lwmod@counter:
  2755                           	opt stack 0
  2756  000081                     _isalpha$6367:
  2757                           	opt stack 0
  2758  000081                     _isxdigit$6377:
  2759                           	opt stack 0
  2760  000081                     OsTmr_StartTimer@Timer:
  2761                           	opt stack 0
  2762  000081                     StringCompare@Len:
  2763                           	opt stack 0
  2764  000081                     StringCopy@Len:
  2765                           	opt stack 0
  2766  000081                     ClearBuffer@Index:
  2767                           	opt stack 0
  2768  000081                     ___wmul@product:
  2769                           	opt stack 0
  2770  000081                     memcpy@n:
  2771                           	opt stack 0
  2772  000081                     memset@n:
  2773                           	opt stack 0
  2774  000081                     strcat@cp:
  2775                           	opt stack 0
  2776  000081                     strcpy@cp:
  2777                           	opt stack 0
  2778  000081                     strlen@cp:
  2779                           	opt stack 0
  2780  000081                     GetElapsedTime@StartTime:
  2781                           	opt stack 0
  2782  000081                     ___lmul@multiplicand:
  2783                           	opt stack 0
  2784                           
  2785                           ; 4 bytes @ 0x21
  2786  000081                     	ds	1
  2787  000082                     ??_I2c_ReadData:
  2788  000082                     Uart_WriteConstString@Module:
  2789                           	opt stack 0
  2790  000082                     Uart_WriteString@Module:
  2791                           	opt stack 0
  2792  000082                     Uart_WriteStringLen@Len:
  2793                           	opt stack 0
  2794  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2795                           	opt stack 0
  2796  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2797                           	opt stack 0
  2798  000082                     USBConfigureEndpoint@EPNum:
  2799                           	opt stack 0
  2800  000082                     ___awdiv@sign:
  2801                           	opt stack 0
  2802  000082                     ___awmod@sign:
  2803                           	opt stack 0
  2804  000082                     isalpha@c:
  2805                           	opt stack 0
  2806  000082                     isxdigit@c:
  2807                           	opt stack 0
  2808  000082                     USBTransferOnePacket@handle:
  2809                           	opt stack 0
  2810  000082                     ___lwdiv@quotient:
  2811                           	opt stack 0
  2812                           
  2813                           ; 2 bytes @ 0x22
  2814  000082                     	ds	1
  2815  000083                     ??_StringCopy:
  2816  000083                     ?_atoi:
  2817                           	opt stack 0
  2818  000083                     ?_xtoi:
  2819                           	opt stack 0
  2820  000083                     Uart_WriteStringLen@Index:
  2821                           	opt stack 0
  2822  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2823                           	opt stack 0
  2824  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2825                           	opt stack 0
  2826  000083                     sprintf@flag:
  2827                           	opt stack 0
  2828  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2829                           	opt stack 0
  2830  000083                     USBConfigureEndpoint@handle:
  2831                           	opt stack 0
  2832  000083                     putUSBUSART@data:
  2833                           	opt stack 0
  2834  000083                     atoi@s:
  2835                           	opt stack 0
  2836  000083                     ___awdiv@quotient:
  2837                           	opt stack 0
  2838  000083                     memcpy@d:
  2839                           	opt stack 0
  2840  000083                     memset@p:
  2841                           	opt stack 0
  2842  000083                     xtoi@s:
  2843                           	opt stack 0
  2844  000083                     OsTmr_StartTimer@Timeout:
  2845                           	opt stack 0
  2846                           
  2847                           ; 4 bytes @ 0x23
  2848  000083                     	ds	1
  2849  000084                     Uart_WriteStringLen@Module:
  2850                           	opt stack 0
  2851  000084                     I2cSlv_SendI2cMsg@TxSts:
  2852                           	opt stack 0
  2853  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  2854                           	opt stack 0
  2855  000084                     CDCTxService@i:
  2856                           	opt stack 0
  2857  000084                     getsUSBUSART@buffer:
  2858                           	opt stack 0
  2859  000084                     LedBlinkStateMachine@LedBlink:
  2860                           	opt stack 0
  2861  000084                     LedPulseStateMachine@LedPulse:
  2862                           	opt stack 0
  2863  000084                     sprintf@ap:
  2864                           	opt stack 0
  2865  000084                     utoa@buf:
  2866                           	opt stack 0
  2867                           
  2868                           ; 2 bytes @ 0x24
  2869  000084                     	ds	1
  2870  000085                     ??_atoi:
  2871  000085                     ??_xtoi:
  2872  000085                     ??_GetElapsedTime:
  2873  000085                     Rtcc_SetRtccValue@Value:
  2874                           	opt stack 0
  2875  000085                     USBDeviceInit@i:
  2876                           	opt stack 0
  2877  000085                     USBEnableEndpoint@options:
  2878                           	opt stack 0
  2879  000085                     putUSBUSART@length:
  2880                           	opt stack 0
  2881  000085                     CDCTxService@byte_to_send:
  2882                           	opt stack 0
  2883  000085                     StringCompare@Result:
  2884                           	opt stack 0
  2885  000085                     triggerRelay@isRelayOn:
  2886                           	opt stack 0
  2887  000085                     StringCopy@Index:
  2888                           	opt stack 0
  2889  000085                     memcpy@s:
  2890                           	opt stack 0
  2891  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  2892                           	opt stack 0
  2893  000085                     ___lmul@product:
  2894                           	opt stack 0
  2895                           
  2896                           ; 4 bytes @ 0x25
  2897  000085                     	ds	1
  2898  000086                     ??_Rtcc_SetRtccValue:
  2899  000086                     getsUSBUSART@len:
  2900                           	opt stack 0
  2901  000086                     LedPulseStateMachine@Led:
  2902                           	opt stack 0
  2903  000086                     triggerRelay@res:
  2904                           	opt stack 0
  2905  000086                     sprintf@c:
  2906                           	opt stack 0
  2907  000086                     USBEnableEndpoint@p:
  2908                           	opt stack 0
  2909  000086                     StringCompare@Index:
  2910                           	opt stack 0
  2911  000086                     utoa@val:
  2912                           	opt stack 0
  2913                           
  2914                           ; 2 bytes @ 0x26
  2915  000086                     	ds	1
  2916  000087                     triggerRelay@realyId:
  2917                           	opt stack 0
  2918  000087                     atoi@sign:
  2919                           	opt stack 0
  2920  000087                     memcpy@tmp:
  2921                           	opt stack 0
  2922  000087                     xtoi@sign:
  2923                           	opt stack 0
  2924  000087                     sprintf@cp:
  2925                           	opt stack 0
  2926                           
  2927                           ; 2 bytes @ 0x27
  2928  000087                     	ds	1
  2929  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  2930                           	opt stack 0
  2931  000088                     USBEnableEndpoint@ep:
  2932                           	opt stack 0
  2933  000088                     triggerRelay@txBuffer:
  2934                           	opt stack 0
  2935  000088                     atoi@a:
  2936                           	opt stack 0
  2937  000088                     utoa@base:
  2938                           	opt stack 0
  2939  000088                     xtoi@val:
  2940                           	opt stack 0
  2941  000088                     ModemEvtParser@CallReadyString:
  2942                           	opt stack 0
  2943                           
  2944                           ; 10 bytes @ 0x28
  2945  000088                     	ds	1
  2946  000089                     ??_Rtcm_GetRtccDate:
  2947  000089                     ?_strtol:
  2948                           	opt stack 0
  2949  000089                     ?___lldiv:
  2950                           	opt stack 0
  2951  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  2952                           	opt stack 0
  2953  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2954                           	opt stack 0
  2955  000089                     LedStateMachine@LedSts:
  2956                           	opt stack 0
  2957  000089                     strtol@s:
  2958                           	opt stack 0
  2959  000089                     ___lldiv@dividend:
  2960                           	opt stack 0
  2961  000089                     Rtcm_SetRtccDate@Date:
  2962                           	opt stack 0
  2963                           
  2964                           ; 8 bytes @ 0x29
  2965  000089                     	ds	1
  2966  00008A                     xtoi@c:
  2967                           	opt stack 0
  2968  00008A                     utoa@v:
  2969                           	opt stack 0
  2970  00008A                     Rtcm_GetRtccDate@LocalDate:
  2971                           	opt stack 0
  2972  00008A                     MyApp_Task@phone:
  2973                           	opt stack 0
  2974                           
  2975                           ; 10 bytes @ 0x2A
  2976  00008A                     	ds	1
  2977  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2978                           	opt stack 0
  2979  00008B                     LedStateMachine@LedOut:
  2980                           	opt stack 0
  2981  00008B                     strtol@endptr:
  2982                           	opt stack 0
  2983                           
  2984                           ; 2 bytes @ 0x2B
  2985  00008B                     	ds	1
  2986  00008C                     utoa@c:
  2987                           	opt stack 0
  2988                           
  2989                           ; 1 bytes @ 0x2C
  2990  00008C                     	ds	1
  2991  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2992                           	opt stack 0
  2993  00008D                     LedStateMachine@LedBlink:
  2994                           	opt stack 0
  2995  00008D                     itoa@buf:
  2996                           	opt stack 0
  2997  00008D                     strtol@base:
  2998                           	opt stack 0
  2999  00008D                     GetElapsedTime@TimeValue:
  3000                           	opt stack 0
  3001  00008D                     ___lldiv@divisor:
  3002                           	opt stack 0
  3003                           
  3004                           ; 4 bytes @ 0x2D
  3005  00008D                     	ds	2
  3006  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3007  00008F                     ??_strtol:
  3008  00008F                     LedStateMachine@LedPulse:
  3009                           	opt stack 0
  3010  00008F                     itoa@val:
  3011                           	opt stack 0
  3012                           
  3013                           ; 2 bytes @ 0x2F
  3014  00008F                     	ds	2
  3015  000091                     ??_USBStdFeatureReqHandler:
  3016  000091                     USBStdSetCfgHandler@i:
  3017                           	opt stack 0
  3018  000091                     itoa@base:
  3019                           	opt stack 0
  3020  000091                     GetElapsedTime@CurrentTimestamp:
  3021                           	opt stack 0
  3022  000091                     ___lldiv@quotient:
  3023                           	opt stack 0
  3024                           
  3025                           ; 4 bytes @ 0x31
  3026  000091                     	ds	1
  3027  000092                     LedStateMachine@LedOutSts:
  3028                           	opt stack 0
  3029  000092                     USBStdFeatureReqHandler@pUEP:
  3030                           	opt stack 0
  3031  000092                     ModemEvtParser@SmsString:
  3032                           	opt stack 0
  3033                           
  3034                           ; 5 bytes @ 0x32
  3035  000092                     	ds	1
  3036  000093                     LedStateMachine@Led:
  3037                           	opt stack 0
  3038  000093                     strtol@sign:
  3039                           	opt stack 0
  3040  000093                     itoa@cp:
  3041                           	opt stack 0
  3042                           
  3043                           ; 2 bytes @ 0x33
  3044  000093                     	ds	1
  3045  000094                     ??_Led_MainTask:
  3046  000094                     USBStdFeatureReqHandler@current_ep_data:
  3047                           	opt stack 0
  3048  000094                     MyApp_Task@I2cTxBufferTest:
  3049                           	opt stack 0
  3050  000094                     strtol@a:
  3051                           	opt stack 0
  3052                           
  3053                           ; 4 bytes @ 0x34
  3054  000094                     	ds	1
  3055  000095                     ___lldiv@counter:
  3056                           	opt stack 0
  3057  000095                     OsTmr_GetTimerStatus@Timer:
  3058                           	opt stack 0
  3059  000095                     USBStdFeatureReqHandler@p:
  3060                           	opt stack 0
  3061                           
  3062                           ; 2 bytes @ 0x35
  3063  000095                     	ds	1
  3064  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3065                           	opt stack 0
  3066  000096                     SetUartBaudRate@UartConfig:
  3067                           	opt stack 0
  3068  000096                     MyApp_Task@off:
  3069                           	opt stack 0
  3070  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3071                           	opt stack 0
  3072                           
  3073                           ; 4 bytes @ 0x36
  3074  000096                     	ds	1
  3075  000097                     ??_USBCtrlEPService:
  3076  000097                     ModemEvtParser@RingString:
  3077                           	opt stack 0
  3078                           
  3079                           ; 4 bytes @ 0x37
  3080  000097                     	ds	1
  3081  000098                     Tmr_TmrBPrSet@Prescaler:
  3082                           	opt stack 0
  3083  000098                     USBDeviceTasks@i:
  3084                           	opt stack 0
  3085  000098                     strtol@c:
  3086                           	opt stack 0
  3087  000098                     MyApp_Task@on:
  3088                           	opt stack 0
  3089                           
  3090                           ; 2 bytes @ 0x38
  3091  000098                     	ds	1
  3092  000099                     Tmr_TmrBPrSet@Postscaler:
  3093                           	opt stack 0
  3094  000099                     SetUartBaudRate@Module:
  3095                           	opt stack 0
  3096                           
  3097                           ; 1 bytes @ 0x39
  3098  000099                     	ds	1
  3099  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3100                           	opt stack 0
  3101  00009A                     SetUartBaudRate@BaudRateRegister:
  3102                           	opt stack 0
  3103  00009A                     SetBaudRate@McuClockHz:
  3104                           	opt stack 0
  3105                           
  3106                           ; 4 bytes @ 0x3A
  3107  00009A                     	ds	1
  3108  00009B                     ??_SendSmsSm:
  3109  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3110                           	opt stack 0
  3111  00009B                     ModemEvtParser@Match:
  3112                           	opt stack 0
  3113  00009B                     OsTmr_Wait@WaitTimer:
  3114                           	opt stack 0
  3115  00009B                     InitGprsNetwork@Apn:
  3116                           	opt stack 0
  3117  00009B                     HttpGetMethod@GetData:
  3118                           	opt stack 0
  3119                           
  3120                           ; 2 bytes @ 0x3B
  3121  00009B                     	ds	1
  3122  00009C                     SetUartBaudRate@DivisionFactor:
  3123                           	opt stack 0
  3124  00009C                     ModemEvtParser@CompareIdx:
  3125                           	opt stack 0
  3126  00009C                     Tmr_TmrBPrSet@Divisor:
  3127                           	opt stack 0
  3128                           
  3129                           ; 4 bytes @ 0x3C
  3130  00009C                     	ds	1
  3131  00009D                     ??_HttpGetMethod:
  3132  00009D                     InitGprsNetwork@ApnLen:
  3133                           	opt stack 0
  3134  00009D                     Uart_InitUartModule@UartConfig:
  3135                           	opt stack 0
  3136  00009D                     OsTmr_Wait@DelayMs:
  3137                           	opt stack 0
  3138                           
  3139                           ; 4 bytes @ 0x3D
  3140  00009D                     	ds	1
  3141  00009E                     ??_SetBaudRate:
  3142  00009E                     ??_InitGprsNetwork:
  3143                           
  3144                           ; 1 bytes @ 0x3E
  3145  00009E                     	ds	1
  3146  00009F                     ??_Uart_InitUartModule:
  3147                           
  3148                           ; 1 bytes @ 0x3F
  3149  00009F                     	ds	1
  3150  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3151                           	opt stack 0
  3152                           
  3153                           ; 2 bytes @ 0x40
  3154  0000A0                     	ds	1
  3155  0000A1                     Uart_InitUartModule@Module:
  3156                           	opt stack 0
  3157  0000A1                     OsTmr_Wait@Ret:
  3158                           	opt stack 0
  3159                           
  3160                           ; 1 bytes @ 0x41
  3161  0000A1                     	ds	1
  3162  0000A2                     ??_Terminal:
  3163  0000A2                     I2c_InitI2cModule@I2cConfig:
  3164                           	opt stack 0
  3165                           
  3166                           ; 2 bytes @ 0x42
  3167  0000A2                     	ds	1
  3168  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3169                           	opt stack 0
  3170                           
  3171                           ; 1 bytes @ 0x43
  3172  0000A3                     	ds	1
  3173  0000A4                     ??_I2c_InitI2cModule:
  3174  0000A4                     Terminal@i:
  3175                           	opt stack 0
  3176  0000A4                     InitSchedTimer@TmrBConfig:
  3177                           	opt stack 0
  3178                           
  3179                           ; 7 bytes @ 0x44
  3180  0000A4                     	ds	1
  3181  0000A5                     Terminal@ReceivedBytes:
  3182                           	opt stack 0
  3183                           
  3184                           ; 1 bytes @ 0x45
  3185  0000A5                     	ds	1
  3186  0000A6                     Terminal@Index:
  3187                           	opt stack 0
  3188                           
  3189                           ; 1 bytes @ 0x46
  3190  0000A6                     	ds	1
  3191  0000A7                     ??_InitializeTasks:
  3192  0000A7                     ??_ScheduleTasks:
  3193  0000A7                     
  3194                           ; 1 bytes @ 0x47
  3195  0000A7                     	ds	2
  3196  0000A9                     InitializeTasks@ActiveTaskIndex:
  3197                           	opt stack 0
  3198                           
  3199                           ; 1 bytes @ 0x49
  3200  0000A9                     	ds	2
  3201  0000AB                     ScheduleTasks@ActiveTaskIndex:
  3202                           	opt stack 0
  3203                           
  3204                           ; 1 bytes @ 0x4B
  3205  0000AB                     	ds	1
  3206  0000AC                     tblptru	equ	0xFF8
  3207                           tblptrh	equ	0xFF7
  3208                           tblptrl	equ	0xFF6
  3209                           tablat	equ	0xFF5
  3210                           postinc0	equ	0xFEE
  3211                           wreg	equ	0xFE8
  3212                           postdec1	equ	0xFE5
  3213                           fsr1h	equ	0xFE2
  3214                           fsr1l	equ	0xFE1
  3215                           
  3216                           ; 1 bytes @ 0x4C
  3217                           
  3218                           	psect	cstackCOMRAM
  3219  000001                     __pcstackCOMRAM:
  3220                           	opt stack 0
  3221  000001                     i2GenerateEvt@Event:
  3222                           	opt stack 0
  3223                           
  3224                           ; 2 bytes @ 0x0
  3225  000001                     	ds	2
  3226  000003                     i2GenerateEvt@EventStatus:
  3227                           	opt stack 0
  3228                           
  3229                           ; 1 bytes @ 0x2
  3230  000003                     	ds	1
  3231  000004                     Uart_MdmGsmGprsReadService@UartData:
  3232                           	opt stack 0
  3233                           
  3234                           ; 1 bytes @ 0x3
  3235  000004                     	ds	1
  3236  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3237                           	opt stack 0
  3238                           
  3239                           ; 2 bytes @ 0x4
  3240  000005                     	ds	2
  3241  000007                     ??_HighPriorityIsr:
  3242                           
  3243                           ; 1 bytes @ 0x6
  3244  000007                     	ds	18
  3245  000019                     ?i1___wmul:
  3246                           	opt stack 0
  3247  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3248                           	opt stack 0
  3249  000019                     i1GenerateEvt@Event:
  3250                           	opt stack 0
  3251  000019                     i1___wmul@multiplier:
  3252                           	opt stack 0
  3253                           
  3254                           ; 2 bytes @ 0x18
  3255  000019                     	ds	2
  3256  00001B                     i1GenerateEvt@EventStatus:
  3257                           	opt stack 0
  3258  00001B                     i1___wmul@multiplicand:
  3259                           	opt stack 0
  3260                           
  3261                           ; 2 bytes @ 0x1A
  3262  00001B                     	ds	1
  3263  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3264                           	opt stack 0
  3265                           
  3266                           ; 2 bytes @ 0x1B
  3267  00001C                     	ds	1
  3268  00001D                     i1___wmul@product:
  3269                           	opt stack 0
  3270                           
  3271                           ; 2 bytes @ 0x1C
  3272  00001D                     	ds	1
  3273  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3274                           	opt stack 0
  3275                           
  3276                           ; 1 bytes @ 0x1D
  3277  00001E                     	ds	1
  3278  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3279                           	opt stack 0
  3280                           
  3281                           ; 1 bytes @ 0x1E
  3282  00001F                     	ds	1
  3283  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3284                           	opt stack 0
  3285                           
  3286                           ; 1 bytes @ 0x1F
  3287  000020                     	ds	1
  3288  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3289                           	opt stack 0
  3290                           
  3291                           ; 2 bytes @ 0x20
  3292  000021                     	ds	2
  3293  000023                     tblptru	equ	0xFF8
  3294                           tblptrh	equ	0xFF7
  3295                           tblptrl	equ	0xFF6
  3296                           tablat	equ	0xFF5
  3297                           postinc0	equ	0xFEE
  3298                           wreg	equ	0xFE8
  3299                           postdec1	equ	0xFE5
  3300                           fsr1h	equ	0xFE2
  3301                           fsr1l	equ	0xFE1
  3302                           
  3303                           ; 1 bytes @ 0x22
  3304 ;;
  3305 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3306 ;;
  3307 ;; *************** function _main *****************
  3308 ;; Defined at:
  3309 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  2   14[None  ] short 
  3316 ;; Registers used:
  3317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels required when called:   23
  3329 ;; This function calls:
  3330 ;;		_Sch_MainScheduler
  3331 ;;		_SystemInit
  3332 ;; This function is called by:
  3333 ;;		Startup code after reset
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text0
  3338  005E00                     __ptext0:
  3339                           	opt stack 0
  3340  005E00                     _main:
  3341                           	opt stack 8
  3342                           
  3343                           ;main.c: 61: SystemInit();
  3344                           
  3345                           ;incstack = 0
  3346  005E00  EC61  F02C         	call	_SystemInit	;wreg free
  3347                           
  3348                           ;main.c: 64: Sch_MainScheduler();
  3349  005E04  EC21  F02E         	call	_Sch_MainScheduler	;wreg free
  3350                           
  3351                           ;main.c: 67: return 0;
  3352                           ;	Return value of _main is never used
  3353  005E08  EF66  F000         	goto	start
  3354  005E0C                     __end_of_main:
  3355                           	opt stack 0
  3356                           tblptru	equ	0xFF8
  3357                           tblptrh	equ	0xFF7
  3358                           tblptrl	equ	0xFF6
  3359                           tablat	equ	0xFF5
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           postdec1	equ	0xFE5
  3363                           fsr1h	equ	0xFE2
  3364                           fsr1l	equ	0xFE1
  3365                           
  3366 ;; *************** function _SystemInit *****************
  3367 ;; Defined at:
  3368 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:   15
  3389 ;; This function calls:
  3390 ;;		_InitSchedTimer
  3391 ;;		_Irq_InitIntController
  3392 ;;		_Mcu_ConfigExtInt
  3393 ;;		_Mcu_StartSystemPll
  3394 ;;		_Pm_DsReleasePinControl
  3395 ;;		_Tmr_RegisterTmr2IsrCallback
  3396 ;; This function is called by:
  3397 ;;		_main
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text1
  3402  0058C2                     __ptext1:
  3403                           	opt stack 0
  3404  0058C2                     _SystemInit:
  3405                           	opt stack 15
  3406                           
  3407                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3408                           
  3409                           ;incstack = 0
  3410  0058C2  EC23  F02F         	call	_Pm_DsReleasePinControl	;wreg free
  3411                           
  3412                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3413  0058C6  EC12  F02E         	call	_Mcu_StartSystemPll	;wreg free
  3414                           
  3415                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3416  0058CA  0E01               	movlw	1
  3417  0058CC  0100               	movlb	0	; () banked
  3418  0058CE  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3419  0058D0  0E01               	movlw	1
  3420  0058D2  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3421  0058D4  0E01               	movlw	1
  3422  0058D6  EC05  F02D         	call	_Irq_InitIntController
  3423                           
  3424                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3425  0058DA  0EE4               	movlw	low _Sch_SchmIntService
  3426  0058DC  0100               	movlb	0	; () banked
  3427  0058DE  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3428  0058E0  0E5D               	movlw	high _Sch_SchmIntService
  3429  0058E2  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3430  0058E4  EC06  F02F         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3431                           
  3432                           ;sys_init.c: 132: InitSchedTimer();
  3433  0058E8  ECC1  F02C         	call	_InitSchedTimer	;wreg free
  3434                           
  3435                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3436  0058EC  EC4C  F02E         	call	_Mcu_ConfigExtInt	;wreg free
  3437  0058F0  0012               	return		;funcret
  3438  0058F2                     __end_of_SystemInit:
  3439                           	opt stack 0
  3440                           tblptru	equ	0xFF8
  3441                           tblptrh	equ	0xFF7
  3442                           tblptrl	equ	0xFF6
  3443                           tablat	equ	0xFF5
  3444                           postinc0	equ	0xFEE
  3445                           wreg	equ	0xFE8
  3446                           postdec1	equ	0xFE5
  3447                           fsr1h	equ	0xFE2
  3448                           fsr1l	equ	0xFE1
  3449                           
  3450 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3451 ;; Defined at:
  3452 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3455 ;;		 -> Sch_SchmIntService(1), 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3467 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3470 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3471 ;;Total ram usage:        2 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:   11
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_SystemInit
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text2
  3482  005E0C                     __ptext2:
  3483                           	opt stack 0
  3484  005E0C                     _Tmr_RegisterTmr2IsrCallback:
  3485                           	opt stack 18
  3486                           
  3487                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3488                           
  3489                           ;incstack = 0
  3490  005E0C  C07D  F1D3         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3491  005E10  C07E  F1D4         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3492  005E14  0012               	return		;funcret
  3493  005E16                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3494                           	opt stack 0
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           postinc0	equ	0xFEE
  3500                           wreg	equ	0xFE8
  3501                           postdec1	equ	0xFE5
  3502                           fsr1h	equ	0xFE2
  3503                           fsr1l	equ	0xFE1
  3504                           
  3505 ;; *************** function _Pm_DsReleasePinControl *****************
  3506 ;; Defined at:
  3507 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		None
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:   11
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_SystemInit
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text3
  3536  005E46                     __ptext3:
  3537                           	opt stack 0
  3538  005E46                     _Pm_DsReleasePinControl:
  3539                           	opt stack 18
  3540                           
  3541                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3542                           
  3543                           ;incstack = 0
  3544  005E46  010F               	movlb	15	; () banked
  3545  005E48  914C               	bcf	76,0,b	;volatile
  3546                           
  3547                           ; BSR set to: 15
  3548  005E4A  0012               	return		;funcret
  3549  005E4C                     __end_of_Pm_DsReleasePinControl:
  3550                           	opt stack 0
  3551                           tblptru	equ	0xFF8
  3552                           tblptrh	equ	0xFF7
  3553                           tblptrl	equ	0xFF6
  3554                           tablat	equ	0xFF5
  3555                           postinc0	equ	0xFEE
  3556                           wreg	equ	0xFE8
  3557                           postdec1	equ	0xFE5
  3558                           fsr1h	equ	0xFE2
  3559                           fsr1l	equ	0xFE1
  3560                           
  3561 ;; *************** function _Mcu_StartSystemPll *****************
  3562 ;; Defined at:
  3563 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3580 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3581 ;;Total ram usage:        2 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:   11
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_SystemInit
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text4
  3592  005C24                     __ptext4:
  3593                           	opt stack 0
  3594  005C24                     _Mcu_StartSystemPll:
  3595                           	opt stack 18
  3596                           
  3597                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3598                           
  3599                           ; BSR set to: 15
  3600                           ;incstack = 0
  3601  005C24  0E03               	movlw	3
  3602  005C26  0100               	movlb	0	; () banked
  3603  005C28  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3604  005C2A  0EE8               	movlw	232
  3605  005C2C  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3609  005C2E  8C9B               	bsf	3995,6,c	;volatile
  3610  005C30                     l10731:
  3611                           
  3612                           ; BSR set to: 0
  3613  005C30  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3614  005C32  A0D8               	btfss	status,0,c
  3615  005C34  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3616  005C36  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3617  005C38  E1FB               	bnz	l10731
  3618  005C3A  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3619  005C3C  B4D8               	btfsc	status,2,c
  3620  005C3E  0012               	return	
  3621  005C40  D7F7               	goto	l237
  3622  005C42                     __end_of_Mcu_StartSystemPll:
  3623                           	opt stack 0
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           postinc0	equ	0xFEE
  3629                           wreg	equ	0xFE8
  3630                           postdec1	equ	0xFE5
  3631                           fsr1h	equ	0xFE2
  3632                           fsr1l	equ	0xFE1
  3633                           status	equ	0xFD8
  3634                           
  3635 ;; *************** function _Mcu_ConfigExtInt *****************
  3636 ;; Defined at:
  3637 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3655 ;;Total ram usage:        0 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:   11
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_SystemInit
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text5
  3666  005C98                     __ptext5:
  3667                           	opt stack 0
  3668  005C98                     _Mcu_ConfigExtInt:
  3669                           	opt stack 18
  3670                           
  3671                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;incstack = 0
  3675  005C98  8093               	bsf	3987,0,c	;volatile
  3676                           
  3677                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3678  005C9A  8695               	bsf	3989,3,c	;volatile
  3679                           
  3680                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3681  005C9C  010F               	movlb	15	; () banked
  3682  005C9E  8949               	bsf	73,4,b	;volatile
  3683                           
  3684                           ; BSR set to: 15
  3685                           ;mcu_drv.c: 108: RPINR1 = 20;
  3686  005CA0  0E14               	movlw	20
  3687  005CA2  010E               	movlb	14	; () banked
  3688  005CA4  6FE7               	movwf	231,b	;volatile
  3689                           
  3690                           ; BSR set to: 14
  3691                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3692  005CA6  88F2               	bsf	intcon,4,c	;volatile
  3693                           
  3694                           ; BSR set to: 14
  3695                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3696  005CA8  86F0               	bsf	intcon3,3,c	;volatile
  3697                           
  3698                           ; BSR set to: 14
  3699                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3700  005CAA  8CF0               	bsf	intcon3,6,c	;volatile
  3701                           
  3702                           ; BSR set to: 14
  3703                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3704  005CAC  9CF1               	bcf	intcon2,6,c	;volatile
  3705                           
  3706                           ; BSR set to: 14
  3707                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3708  005CAE  9AF1               	bcf	intcon2,5,c	;volatile
  3709                           
  3710                           ; BSR set to: 14
  3711  005CB0  0012               	return		;funcret
  3712  005CB2                     __end_of_Mcu_ConfigExtInt:
  3713                           	opt stack 0
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           intcon	equ	0xFF2
  3719                           intcon2	equ	0xFF1
  3720                           intcon3	equ	0xFF0
  3721                           postinc0	equ	0xFEE
  3722                           wreg	equ	0xFE8
  3723                           postdec1	equ	0xFE5
  3724                           fsr1h	equ	0xFE2
  3725                           fsr1l	equ	0xFE1
  3726                           status	equ	0xFD8
  3727                           
  3728 ;; *************** function _Irq_InitIntController *****************
  3729 ;; Defined at:
  3730 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  IntPriorityE    1    wreg     enum E7720
  3733 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3734 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      void 
  3739 ;; Registers used:
  3740 ;;		wreg
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3746 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3749 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3750 ;;Total ram usage:        3 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:   11
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_SystemInit
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text6
  3761  005A0A                     __ptext6:
  3762                           	opt stack 0
  3763  005A0A                     _Irq_InitIntController:
  3764                           	opt stack 18
  3765                           
  3766                           ; BSR set to: 14
  3767                           ;incstack = 0
  3768                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3769  005A0A  0100               	movlb	0	; () banked
  3770  005A0C  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3771                           
  3772                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3773  005A0E  0100               	movlb	0	; () banked
  3774  005A10  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3775  005A12  D002               	bra	u9275
  3776  005A14  9ED0               	bcf	4048,7,c	;volatile
  3777  005A16  D001               	bra	u9276
  3778  005A18                     u9275:
  3779  005A18  8ED0               	bsf	4048,7,c	;volatile
  3780  005A1A                     u9276:
  3781                           
  3782                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3783  005A1A  0100               	movlb	0	; () banked
  3784  005A1C  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3785  005A1E  D002               	bra	u9285
  3786  005A20  9EF2               	bcf	intcon,7,c	;volatile
  3787  005A22  D001               	bra	u9286
  3788  005A24                     u9285:
  3789  005A24  8EF2               	bsf	intcon,7,c	;volatile
  3790  005A26                     u9286:
  3791                           
  3792                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3793  005A26  0100               	movlb	0	; () banked
  3794  005A28  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3795  005A2A  D002               	bra	u9295
  3796  005A2C  9CF2               	bcf	intcon,6,c	;volatile
  3797  005A2E  D001               	bra	u9296
  3798  005A30                     u9295:
  3799  005A30  8CF2               	bsf	intcon,6,c	;volatile
  3800  005A32                     u9296:
  3801  005A32  0012               	return		;funcret
  3802  005A34                     __end_of_Irq_InitIntController:
  3803                           	opt stack 0
  3804                           tblptru	equ	0xFF8
  3805                           tblptrh	equ	0xFF7
  3806                           tblptrl	equ	0xFF6
  3807                           tablat	equ	0xFF5
  3808                           intcon	equ	0xFF2
  3809                           intcon2	equ	0xFF1
  3810                           intcon3	equ	0xFF0
  3811                           postinc0	equ	0xFEE
  3812                           wreg	equ	0xFE8
  3813                           postdec1	equ	0xFE5
  3814                           fsr1h	equ	0xFE2
  3815                           fsr1l	equ	0xFE1
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function _InitSchedTimer *****************
  3819 ;; Defined at:
  3820 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3835 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3838 ;;Total ram usage:        7 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:   14
  3841 ;; This function calls:
  3842 ;;		_Tmr_TmrBConfig
  3843 ;; This function is called by:
  3844 ;;		_SystemInit
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text7
  3849  005982                     __ptext7:
  3850                           	opt stack 0
  3851  005982                     _InitSchedTimer:
  3852                           	opt stack 15
  3853                           
  3854                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  3855                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  3856                           
  3857                           ;incstack = 0
  3858  005982  0E04               	movlw	4
  3859  005984  0100               	movlb	0	; () banked
  3860  005986  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  3861                           
  3862                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  3863  005988  0E0C               	movlw	12
  3864  00598A  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  3865                           
  3866                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  3867  00598C  0E00               	movlw	0
  3868  00598E  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  3869                           
  3870                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  3871  005990  0E01               	movlw	1
  3872  005992  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  3873                           
  3874                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  3875  005994  0E03               	movlw	3
  3876  005996  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  3877  005998  0EE8               	movlw	232
  3878  00599A  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  3879                           
  3880                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  3881  00599C  0E01               	movlw	1
  3882  00599E  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  3886  0059A0  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  3887  0059A2  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  3888  0059A4  0E00               	movlw	high InitSchedTimer@TmrBConfig
  3889  0059A6  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  3890  0059A8  0E02               	movlw	2
  3891  0059AA  EC2D  F01D         	call	_Tmr_TmrBConfig
  3892  0059AE  0012               	return		;funcret
  3893  0059B0                     __end_of_InitSchedTimer:
  3894                           	opt stack 0
  3895                           tblptru	equ	0xFF8
  3896                           tblptrh	equ	0xFF7
  3897                           tblptrl	equ	0xFF6
  3898                           tablat	equ	0xFF5
  3899                           intcon	equ	0xFF2
  3900                           intcon2	equ	0xFF1
  3901                           intcon3	equ	0xFF0
  3902                           postinc0	equ	0xFEE
  3903                           wreg	equ	0xFE8
  3904                           postdec1	equ	0xFE5
  3905                           fsr1h	equ	0xFE2
  3906                           fsr1l	equ	0xFE1
  3907                           status	equ	0xFD8
  3908                           
  3909 ;; *************** function _Tmr_TmrBConfig *****************
  3910 ;; Defined at:
  3911 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  TmrNumb         1    wreg     unsigned char 
  3914 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  3915 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3927 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3930 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3931 ;;Total ram usage:        4 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:   13
  3934 ;; This function calls:
  3935 ;;		_TmrBInit
  3936 ;;		_Tmr_StartTmr
  3937 ;;		_Tmr_TmrBIrqSet
  3938 ;;		_Tmr_TmrBPrSet
  3939 ;; This function is called by:
  3940 ;;		_InitSchedTimer
  3941 ;;		_InitAuxTimer
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text8
  3946  003A5A                     __ptext8:
  3947                           	opt stack 0
  3948  003A5A                     _Tmr_TmrBConfig:
  3949                           	opt stack 15
  3950                           
  3951                           ;incstack = 0
  3952                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  3953  003A5A  0100               	movlb	0	; () banked
  3954  003A5C  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  3955                           
  3956                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  3957  003A5E  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3958  003A62  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3959  003A66  50DF               	movf	indf2,w,c
  3960  003A68  0100               	movlb	0	; () banked
  3961  003A6A  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  3962  003A6C  EE20 F001          	lfsr	2,1
  3963  003A70  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3964  003A72  26D9               	addwf	fsr2l,f,c
  3965  003A74  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3966  003A76  22DA               	addwfc	fsr2h,f,c
  3967  003A78  50DF               	movf	indf2,w,c
  3968  003A7A  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  3969  003A7C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3970  003A7E  EC6A  F022         	call	_TmrBInit
  3971                           
  3972                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  3973  003A82  0100               	movlb	0	; () banked
  3974  003A84  EE20 F002          	lfsr	2,2
  3975  003A88  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3976  003A8A  26D9               	addwf	fsr2l,f,c
  3977  003A8C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3978  003A8E  22DA               	addwfc	fsr2h,f,c
  3979  003A90  04DE               	decf	postinc2,w,c
  3980  003A92  A4D8               	btfss	status,2,c
  3981  003A94  D00E               	goto	l546
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;tmr_drv.c: 277: {
  3985                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  3986  003A96  EE20 F003          	lfsr	2,3
  3987  003A9A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3988  003A9C  26D9               	addwf	fsr2l,f,c
  3989  003A9E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3990  003AA0  22DA               	addwfc	fsr2h,f,c
  3991  003AA2  50DF               	movf	indf2,w,c
  3992  003AA4  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3993  003AA6  0E01               	movlw	1
  3994  003AA8  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3995  003AAA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3996  003AAC  EC91  F029         	call	_Tmr_TmrBIrqSet
  3997                           
  3998                           ;tmr_drv.c: 280: }
  3999  003AB0  D00E               	goto	l547
  4000  003AB2                     l546:
  4001                           
  4002                           ;tmr_drv.c: 281: else
  4003                           ;tmr_drv.c: 282: {
  4004                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4005  003AB2  0100               	movlb	0	; () banked
  4006  003AB4  EE20 F003          	lfsr	2,3
  4007  003AB8  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4008  003ABA  26D9               	addwf	fsr2l,f,c
  4009  003ABC  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4010  003ABE  22DA               	addwfc	fsr2h,f,c
  4011  003AC0  50DF               	movf	indf2,w,c
  4012  003AC2  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4013  003AC4  0E00               	movlw	0
  4014  003AC6  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4015  003AC8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4016  003ACA  EC91  F029         	call	_Tmr_TmrBIrqSet
  4017  003ACE                     l547:
  4018                           
  4019                           ;tmr_drv.c: 285: }
  4020                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4021  003ACE  0100               	movlb	0	; () banked
  4022  003AD0  EE20 F004          	lfsr	2,4
  4023  003AD4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4024  003AD6  26D9               	addwf	fsr2l,f,c
  4025  003AD8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4026  003ADA  22DA               	addwfc	fsr2h,f,c
  4027  003ADC  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4028  003AE0  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4029  003AE4  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4030  003AE8  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4031  003AEC  50DF               	movf	indf2,w,c
  4032  003AEE  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4033  003AF0  EE20 F001          	lfsr	2,1
  4034  003AF4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4035  003AF6  26D9               	addwf	fsr2l,f,c
  4036  003AF8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4037  003AFA  22DA               	addwfc	fsr2h,f,c
  4038  003AFC  50DF               	movf	indf2,w,c
  4039  003AFE  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4040  003B00  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4041  003B02  ECA6  F017         	call	_Tmr_TmrBPrSet
  4042                           
  4043                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4044  003B06  0100               	movlb	0	; () banked
  4045  003B08  EE20 F006          	lfsr	2,6
  4046  003B0C  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4047  003B0E  26D9               	addwf	fsr2l,f,c
  4048  003B10  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4049  003B12  22DA               	addwfc	fsr2h,f,c
  4050  003B14  04DE               	decf	postinc2,w,c
  4051  003B16  A4D8               	btfss	status,2,c
  4052  003B18  0012               	return	
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;tmr_drv.c: 290: {
  4056                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4057  003B1A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4058  003B1C  ECF2  F02D         	call	_Tmr_StartTmr
  4059                           
  4060                           ;tmr_drv.c: 293: }
  4061  003B20  0012               	return	
  4062  003B22                     __end_of_Tmr_TmrBConfig:
  4063                           	opt stack 0
  4064                           tblptru	equ	0xFF8
  4065                           tblptrh	equ	0xFF7
  4066                           tblptrl	equ	0xFF6
  4067                           tablat	equ	0xFF5
  4068                           intcon	equ	0xFF2
  4069                           intcon2	equ	0xFF1
  4070                           intcon3	equ	0xFF0
  4071                           postinc0	equ	0xFEE
  4072                           wreg	equ	0xFE8
  4073                           postdec1	equ	0xFE5
  4074                           fsr1h	equ	0xFE2
  4075                           fsr1l	equ	0xFE1
  4076                           indf2	equ	0xFDF
  4077                           postinc2	equ	0xFDE
  4078                           postdec2	equ	0xFDD
  4079                           fsr2h	equ	0xFDA
  4080                           fsr2l	equ	0xFD9
  4081                           status	equ	0xFD8
  4082                           
  4083 ;; *************** function _Tmr_TmrBPrSet *****************
  4084 ;; Defined at:
  4085 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  TmrNumb         1    wreg     unsigned char 
  4088 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4089 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4090 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4093 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4094 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      enum E7736
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4104 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4105 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4107 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4108 ;;Total ram usage:       10 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:   12
  4111 ;; This function calls:
  4112 ;;		___lldiv
  4113 ;;		___lmul
  4114 ;; This function is called by:
  4115 ;;		_Tmr_TmrBConfig
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text9
  4120  002F4C                     __ptext9:
  4121                           	opt stack 0
  4122  002F4C                     _Tmr_TmrBPrSet:
  4123                           	opt stack 15
  4124                           
  4125                           ;incstack = 0
  4126                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4127  002F4C  0100               	movlb	0	; () banked
  4128  002F4E  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4129                           
  4130                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4131                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4132  002F50  0E00               	movlw	0
  4133  002F52  0100               	movlb	0	; () banked
  4134  002F54  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4135  002F56  0E00               	movlw	0
  4136  002F58  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4137  002F5A  0E00               	movlw	0
  4138  002F5C  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4139  002F5E  0E00               	movlw	0
  4140  002F60  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4144  002F62  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4145  002F64  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4146  002F66  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4147  002F6A  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4148  002F6E  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4149  002F70  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4150  002F72  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4151  002F76  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4152  002F7A  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4153  002F7C  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4154  002F7E  ECC6  F027         	call	___lmul	;wreg free
  4155  002F82  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4156  002F86  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4157  002F8A  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4158  002F8E  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4159                           
  4160                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4161  002F92  0E00               	movlw	0
  4162  002F94  0100               	movlb	0	; () banked
  4163  002F96  6F89               	movwf	___lldiv@dividend& (0+255),b
  4164  002F98  0E1B               	movlw	27
  4165  002F9A  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4166  002F9C  0EB7               	movlw	183
  4167  002F9E  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4168  002FA0  0E00               	movlw	0
  4169  002FA2  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4170  002FA4  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4171  002FA8  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4172  002FAC  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4173  002FB0  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4174  002FB4  ECAC  F024         	call	___lldiv	;wreg free
  4175  002FB8  0100               	movlb	0	; () banked
  4176  002FBA  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4177  002FBC  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4178  002FBE  E13A               	bnz	l12865
  4179  002FC0  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4180  002FC2  A0D8               	btfss	status,0,c
  4181  002FC4  D02D               	goto	l529
  4182  002FC6  D036               	goto	l528
  4183  002FC8                     
  4184                           ; BSR set to: 0
  4185                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4186                           
  4187                           ; BSR set to: 0
  4188  002FC8  0E00               	movlw	0
  4189  002FCA  6F89               	movwf	___lldiv@dividend& (0+255),b
  4190  002FCC  0E1B               	movlw	27
  4191  002FCE  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4192  002FD0  0EB7               	movlw	183
  4193  002FD2  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4194  002FD4  0E00               	movlw	0
  4195  002FD6  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4196  002FD8  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4197  002FDC  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4198  002FE0  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4199  002FE4  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4200  002FE8  ECAC  F024         	call	___lldiv	;wreg free
  4201  002FEC  0100               	movlb	0	; () banked
  4202  002FEE  5189               	movf	?___lldiv& (0+255),w,b
  4203  002FF0  6ECB               	movwf	4043,c	;volatile
  4204                           
  4205                           ;tmr_drv.c: 210: break;
  4206  002FF2  D01D               	goto	l531
  4207  002FF4                     
  4208                           ; BSR set to: 0
  4209                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4210                           
  4211                           ; BSR set to: 0
  4212  002FF4  0E00               	movlw	0
  4213  002FF6  6F89               	movwf	___lldiv@dividend& (0+255),b
  4214  002FF8  0E1B               	movlw	27
  4215  002FFA  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4216  002FFC  0EB7               	movlw	183
  4217  002FFE  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4218  003000  0E00               	movlw	0
  4219  003002  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4220  003004  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4221  003008  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4222  00300C  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4223  003010  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4224  003014  ECAC  F024         	call	___lldiv	;wreg free
  4225  003018  0100               	movlb	0	; () banked
  4226  00301A  5189               	movf	?___lldiv& (0+255),w,b
  4227  00301C  6E77               	movwf	3959,c	;volatile
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;tmr_drv.c: 219: }
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;tmr_drv.c: 218: break;
  4234                           
  4235                           ;tmr_drv.c: 217: default:
  4236                           
  4237                           ;tmr_drv.c: 215: break;
  4238  00301E  D007               	goto	l531
  4239  003020                     l529:
  4240                           
  4241                           ; BSR set to: 0
  4242                           
  4243                           ; BSR set to: 0
  4244  003020  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4245                           
  4246                           ; Switch size 1, requested type "space"
  4247                           ; Number of cases is 2, Range of values is 2 to 4
  4248                           ; switch strategies available:
  4249                           ; Name         Instructions Cycles
  4250                           ; simple_byte            7     4 (average)
  4251                           ;	Chosen strategy is simple_byte
  4252  003022  0A02               	xorlw	2	; case 2
  4253  003024  B4D8               	btfsc	status,2,c
  4254  003026  D7D0               	goto	l530
  4255  003028  0A06               	xorlw	6	; case 4
  4256  00302A  B4D8               	btfsc	status,2,c
  4257  00302C  D7E3               	goto	l532
  4258  00302E                     l531:
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4262                           
  4263                           ; BSR set to: 0
  4264  00302E  0E00               	movlw	0
  4265  003030  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4266                           
  4267                           ;tmr_drv.c: 223: }
  4268  003032  0012               	return	
  4269  003034                     l528:
  4270  003034                     l12865:
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;tmr_drv.c: 224: else
  4274                           ;tmr_drv.c: 225: {
  4275                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4276  003034  0E01               	movlw	1
  4277  003036  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4278                           
  4279                           ; BSR set to: 0
  4280  003038  0012               	return	
  4281  00303A                     __end_of_Tmr_TmrBPrSet:
  4282                           	opt stack 0
  4283                           tblptru	equ	0xFF8
  4284                           tblptrh	equ	0xFF7
  4285                           tblptrl	equ	0xFF6
  4286                           tablat	equ	0xFF5
  4287                           prodh	equ	0xFF4
  4288                           prodl	equ	0xFF3
  4289                           intcon	equ	0xFF2
  4290                           intcon2	equ	0xFF1
  4291                           intcon3	equ	0xFF0
  4292                           postinc0	equ	0xFEE
  4293                           wreg	equ	0xFE8
  4294                           postdec1	equ	0xFE5
  4295                           fsr1h	equ	0xFE2
  4296                           fsr1l	equ	0xFE1
  4297                           indf2	equ	0xFDF
  4298                           postinc2	equ	0xFDE
  4299                           postdec2	equ	0xFDD
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function _Tmr_TmrBIrqSet *****************
  4305 ;; Defined at:
  4306 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  TmrNumb         1    wreg     unsigned char 
  4309 ;;  Priority        1   29[BANK0 ] enum E7716
  4310 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4323 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4325 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4326 ;;Total ram usage:        3 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:   11
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_Tmr_TmrBConfig
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text10
  4337  005322                     __ptext10:
  4338                           	opt stack 0
  4339  005322                     _Tmr_TmrBIrqSet:
  4340                           	opt stack 16
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;incstack = 0
  4344                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4345  005322  0100               	movlb	0	; () banked
  4346  005324  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4347                           
  4348                           ;tmr_drv.c: 156: switch (TmrNumb)
  4349  005326  D01A               	goto	l520
  4350  005328                     l521:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4354  005328  929E               	bcf	3998,1,c	;volatile
  4355                           
  4356                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4357  00532A  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4358  00532C  D002               	bra	u7925
  4359  00532E  929F               	bcf	3999,1,c	;volatile
  4360  005330  D001               	bra	u7926
  4361  005332                     u7925:
  4362  005332  829F               	bsf	3999,1,c	;volatile
  4363  005334                     u7926:
  4364                           
  4365                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4366  005334  0100               	movlb	0	; () banked
  4367  005336  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4368  005338  D002               	bra	u7935
  4369  00533A  929D               	bcf	3997,1,c	;volatile
  4370  00533C  D001               	bra	u7936
  4371  00533E                     u7935:
  4372  00533E  829D               	bsf	3997,1,c	;volatile
  4373  005340                     u7936:
  4374                           
  4375                           ;tmr_drv.c: 165: break;
  4376  005340  0012               	return	
  4377  005342                     l523:
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4381  005342  96A4               	bcf	4004,3,c	;volatile
  4382                           
  4383                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4384  005344  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4385  005346  D002               	bra	u7945
  4386  005348  96A5               	bcf	4005,3,c	;volatile
  4387  00534A  D001               	bra	u7946
  4388  00534C                     u7945:
  4389  00534C  86A5               	bsf	4005,3,c	;volatile
  4390  00534E                     u7946:
  4391                           
  4392                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4393  00534E  0100               	movlb	0	; () banked
  4394  005350  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4395  005352  D002               	bra	u7955
  4396  005354  96A3               	bcf	4003,3,c	;volatile
  4397  005356  D001               	bra	u7956
  4398  005358                     u7955:
  4399  005358  86A3               	bsf	4003,3,c	;volatile
  4400  00535A                     u7956:
  4401                           
  4402                           ;tmr_drv.c: 178: }
  4403                           
  4404                           ;tmr_drv.c: 177: break;
  4405                           
  4406                           ;tmr_drv.c: 176: default:
  4407                           
  4408                           ;tmr_drv.c: 174: break;
  4409  00535A  0012               	return	
  4410  00535C                     l520:
  4411  00535C  0100               	movlb	0	; () banked
  4412  00535E  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4413                           
  4414                           ; Switch size 1, requested type "space"
  4415                           ; Number of cases is 2, Range of values is 2 to 4
  4416                           ; switch strategies available:
  4417                           ; Name         Instructions Cycles
  4418                           ; simple_byte            7     4 (average)
  4419                           ;	Chosen strategy is simple_byte
  4420  005360  0A02               	xorlw	2	; case 2
  4421  005362  B4D8               	btfsc	status,2,c
  4422  005364  D7E1               	goto	l521
  4423  005366  0A06               	xorlw	6	; case 4
  4424  005368  A4D8               	btfss	status,2,c
  4425  00536A  0012               	return	
  4426  00536C  D7EA               	goto	l523
  4427  00536E                     __end_of_Tmr_TmrBIrqSet:
  4428                           	opt stack 0
  4429                           tblptru	equ	0xFF8
  4430                           tblptrh	equ	0xFF7
  4431                           tblptrl	equ	0xFF6
  4432                           tablat	equ	0xFF5
  4433                           prodh	equ	0xFF4
  4434                           prodl	equ	0xFF3
  4435                           intcon	equ	0xFF2
  4436                           intcon2	equ	0xFF1
  4437                           intcon3	equ	0xFF0
  4438                           postinc0	equ	0xFEE
  4439                           wreg	equ	0xFE8
  4440                           postdec1	equ	0xFE5
  4441                           fsr1h	equ	0xFE2
  4442                           fsr1l	equ	0xFE1
  4443                           indf2	equ	0xFDF
  4444                           postinc2	equ	0xFDE
  4445                           postdec2	equ	0xFDD
  4446                           fsr2h	equ	0xFDA
  4447                           fsr2l	equ	0xFD9
  4448                           status	equ	0xFD8
  4449                           
  4450 ;; *************** function _Tmr_StartTmr *****************
  4451 ;; Defined at:
  4452 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  TmrNumb         1    wreg     unsigned char 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  1    wreg      void 
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4469 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4470 ;;Total ram usage:        1 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; Hardware stack levels required when called:   11
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_Tmr_TmrBConfig
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text11
  4481  005BE4                     __ptext11:
  4482                           	opt stack 0
  4483  005BE4                     _Tmr_StartTmr:
  4484                           	opt stack 16
  4485                           
  4486                           ;incstack = 0
  4487                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4488  005BE4  0100               	movlb	0	; () banked
  4489  005BE6  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4490                           
  4491                           ;tmr_drv.c: 245: switch (TmrNumb)
  4492  005BE8  D004               	goto	l538
  4493  005BEA                     l539:
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4497  005BEA  84CA               	bsf	4042,2,c	;volatile
  4498                           
  4499                           ;tmr_drv.c: 250: break;
  4500  005BEC  0012               	return	
  4501  005BEE                     l541:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4505  005BEE  8476               	bsf	3958,2,c	;volatile
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;tmr_drv.c: 259: }
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;tmr_drv.c: 258: break;
  4512                           
  4513                           ;tmr_drv.c: 257: default:
  4514                           
  4515                           ;tmr_drv.c: 255: break;
  4516  005BF0  0012               	return	
  4517  005BF2                     l538:
  4518                           
  4519                           ; BSR set to: 0
  4520  005BF2  0100               	movlb	0	; () banked
  4521  005BF4  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4522                           
  4523                           ; Switch size 1, requested type "space"
  4524                           ; Number of cases is 2, Range of values is 2 to 4
  4525                           ; switch strategies available:
  4526                           ; Name         Instructions Cycles
  4527                           ; simple_byte            7     4 (average)
  4528                           ;	Chosen strategy is simple_byte
  4529  005BF6  0A02               	xorlw	2	; case 2
  4530  005BF8  B4D8               	btfsc	status,2,c
  4531  005BFA  D7F7               	goto	l539
  4532  005BFC  0A06               	xorlw	6	; case 4
  4533  005BFE  A4D8               	btfss	status,2,c
  4534  005C00  0012               	return	
  4535  005C02  D7F5               	goto	l541
  4536  005C04                     __end_of_Tmr_StartTmr:
  4537                           	opt stack 0
  4538                           tblptru	equ	0xFF8
  4539                           tblptrh	equ	0xFF7
  4540                           tblptrl	equ	0xFF6
  4541                           tablat	equ	0xFF5
  4542                           prodh	equ	0xFF4
  4543                           prodl	equ	0xFF3
  4544                           intcon	equ	0xFF2
  4545                           intcon2	equ	0xFF1
  4546                           intcon3	equ	0xFF0
  4547                           postinc0	equ	0xFEE
  4548                           wreg	equ	0xFE8
  4549                           postdec1	equ	0xFE5
  4550                           fsr1h	equ	0xFE2
  4551                           fsr1l	equ	0xFE1
  4552                           indf2	equ	0xFDF
  4553                           postinc2	equ	0xFDE
  4554                           postdec2	equ	0xFDD
  4555                           fsr2h	equ	0xFDA
  4556                           fsr2l	equ	0xFD9
  4557                           status	equ	0xFD8
  4558                           
  4559 ;; *************** function _TmrBInit *****************
  4560 ;; Defined at:
  4561 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  TmrNumb         1    wreg     unsigned char 
  4564 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4565 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4577 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4580 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4581 ;;Total ram usage:        4 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:   11
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_Tmr_TmrBConfig
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text12
  4592  0044D4                     __ptext12:
  4593                           	opt stack 0
  4594  0044D4                     _TmrBInit:
  4595                           	opt stack 16
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;incstack = 0
  4599                           ;TmrBInit@TmrNumb stored from wreg
  4600  0044D4  0100               	movlb	0	; () banked
  4601  0044D6  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4602                           
  4603                           ;tmr_drv.c: 75: switch (TmrNumb)
  4604  0044D8  D03F               	goto	l500
  4605  0044DA                     l503:
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4609  0044DA  90CA               	bcf	4042,0,c	;volatile
  4610  0044DC  D001               	goto	L1
  4611  0044DE                     l505:
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4615  0044DE  80CA               	bsf	4042,0,c	;volatile
  4616  0044E0                     L1:
  4617                           
  4618                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4619  0044E0  92CA               	bcf	4042,1,c	;volatile
  4620                           
  4621                           ;tmr_drv.c: 91: break;
  4622  0044E2  D00E               	goto	l504
  4623  0044E4                     l506:
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4627  0044E4  80CA               	bsf	4042,0,c	;volatile
  4628                           
  4629                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4630  0044E6  82CA               	bsf	4042,1,c	;volatile
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;tmr_drv.c: 100: }
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;tmr_drv.c: 99: break;
  4637                           
  4638                           ;tmr_drv.c: 98: default:
  4639                           
  4640                           ;tmr_drv.c: 96: break;
  4641  0044E8  D00B               	goto	l504
  4642  0044EA                     
  4643                           ; BSR set to: 0
  4644  0044EA  0100               	movlb	0	; () banked
  4645  0044EC  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4646                           
  4647                           ; Switch size 1, requested type "space"
  4648                           ; Number of cases is 3, Range of values is 1 to 16
  4649                           ; switch strategies available:
  4650                           ; Name         Instructions Cycles
  4651                           ; simple_byte           10     6 (average)
  4652                           ;	Chosen strategy is simple_byte
  4653  0044EE  0A01               	xorlw	1	; case 1
  4654  0044F0  B4D8               	btfsc	status,2,c
  4655  0044F2  D7F3               	goto	l503
  4656  0044F4  0A05               	xorlw	5	; case 4
  4657  0044F6  B4D8               	btfsc	status,2,c
  4658  0044F8  D7F2               	goto	l505
  4659  0044FA  0A14               	xorlw	20	; case 16
  4660  0044FC  B4D8               	btfsc	status,2,c
  4661  0044FE  D7F2               	goto	l506
  4662  004500                     l504:
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4666                           
  4667                           ; BSR set to: 0
  4668  004500  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4669  004504  0EFF               	movlw	255
  4670  004506  277F               	addwf	??_TmrBInit& (0+255),f,b
  4671  004508  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4672  00450A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4673  00450C  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4674  00450E  50CA               	movf	4042,w,c	;volatile
  4675  004510  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4676  004512  0B87               	andlw	-121
  4677  004514  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4678  004516  6ECA               	movwf	4042,c	;volatile
  4679                           
  4680                           ;tmr_drv.c: 104: break;
  4681  004518  0012               	return	
  4682  00451A                     l511:
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4686  00451A  9076               	bcf	3958,0,c	;volatile
  4687  00451C  D001               	goto	L2
  4688  00451E                     l513:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4692  00451E  8076               	bsf	3958,0,c	;volatile
  4693  004520                     L2:
  4694                           
  4695                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4696  004520  9276               	bcf	3958,1,c	;volatile
  4697                           
  4698                           ;tmr_drv.c: 120: break;
  4699  004522  D00D               	goto	l512
  4700  004524                     l514:
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4704  004524  8076               	bsf	3958,0,c	;volatile
  4705                           
  4706                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4707  004526  8276               	bsf	3958,1,c	;volatile
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;tmr_drv.c: 129: }
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;tmr_drv.c: 128: break;
  4714                           
  4715                           ;tmr_drv.c: 127: default:
  4716                           
  4717                           ;tmr_drv.c: 125: break;
  4718  004528  D00A               	goto	l512
  4719  00452A                     
  4720                           ; BSR set to: 0
  4721                           
  4722                           ; BSR set to: 0
  4723  00452A  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4724                           
  4725                           ; Switch size 1, requested type "space"
  4726                           ; Number of cases is 3, Range of values is 1 to 16
  4727                           ; switch strategies available:
  4728                           ; Name         Instructions Cycles
  4729                           ; simple_byte           10     6 (average)
  4730                           ;	Chosen strategy is simple_byte
  4731  00452C  0A01               	xorlw	1	; case 1
  4732  00452E  B4D8               	btfsc	status,2,c
  4733  004530  D7F4               	goto	l511
  4734  004532  0A05               	xorlw	5	; case 4
  4735  004534  B4D8               	btfsc	status,2,c
  4736  004536  D7F3               	goto	l513
  4737  004538  0A14               	xorlw	20	; case 16
  4738  00453A  B4D8               	btfsc	status,2,c
  4739  00453C  D7F3               	goto	l514
  4740  00453E                     l512:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4744                           
  4745                           ; BSR set to: 0
  4746  00453E  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4747  004542  0EFF               	movlw	255
  4748  004544  277F               	addwf	??_TmrBInit& (0+255),f,b
  4749  004546  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4750  004548  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4751  00454A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4752  00454C  5076               	movf	3958,w,c	;volatile
  4753  00454E  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4754  004550  0B87               	andlw	-121
  4755  004552  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4756  004554  6E76               	movwf	3958,c	;volatile
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;tmr_drv.c: 137: }
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;tmr_drv.c: 136: break;
  4763                           
  4764                           ;tmr_drv.c: 135: default:
  4765                           
  4766                           ;tmr_drv.c: 133: break;
  4767  004556  0012               	return	
  4768  004558                     l500:
  4769                           
  4770                           ; BSR set to: 0
  4771  004558  0100               	movlb	0	; () banked
  4772  00455A  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4773                           
  4774                           ; Switch size 1, requested type "space"
  4775                           ; Number of cases is 2, Range of values is 2 to 4
  4776                           ; switch strategies available:
  4777                           ; Name         Instructions Cycles
  4778                           ; simple_byte            7     4 (average)
  4779                           ;	Chosen strategy is simple_byte
  4780  00455C  0A02               	xorlw	2	; case 2
  4781  00455E  B4D8               	btfsc	status,2,c
  4782  004560  D7C4               	goto	l502
  4783  004562  0A06               	xorlw	6	; case 4
  4784  004564  A4D8               	btfss	status,2,c
  4785  004566  0012               	return	
  4786  004568  D7E0               	goto	l510
  4787  00456A                     __end_of_TmrBInit:
  4788                           	opt stack 0
  4789                           tblptru	equ	0xFF8
  4790                           tblptrh	equ	0xFF7
  4791                           tblptrl	equ	0xFF6
  4792                           tablat	equ	0xFF5
  4793                           prodh	equ	0xFF4
  4794                           prodl	equ	0xFF3
  4795                           intcon	equ	0xFF2
  4796                           intcon2	equ	0xFF1
  4797                           intcon3	equ	0xFF0
  4798                           postinc0	equ	0xFEE
  4799                           wreg	equ	0xFE8
  4800                           postdec1	equ	0xFE5
  4801                           fsr1h	equ	0xFE2
  4802                           fsr1l	equ	0xFE1
  4803                           indf2	equ	0xFDF
  4804                           postinc2	equ	0xFDE
  4805                           postdec2	equ	0xFDD
  4806                           fsr2h	equ	0xFDA
  4807                           fsr2l	equ	0xFD9
  4808                           status	equ	0xFD8
  4809                           
  4810 ;; *************** function _Sch_MainScheduler *****************
  4811 ;; Defined at:
  4812 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:   22
  4833 ;; This function calls:
  4834 ;;		_InitializeTasks
  4835 ;;		_ScheduleTasks
  4836 ;; This function is called by:
  4837 ;;		_main
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text13
  4842  005C42                     __ptext13:
  4843                           	opt stack 0
  4844  005C42                     _Sch_MainScheduler:
  4845                           	opt stack 8
  4846                           
  4847                           ;os_sched.c: 178: InitializeTasks();
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;incstack = 0
  4851  005C42  ECA1  F025         	call	_InitializeTasks	;wreg free
  4852                           
  4853                           ;os_sched.c: 180: SystemState = RunningState;
  4854  005C46  0E01               	movlw	1
  4855  005C48  0100               	movlb	0	; () banked
  4856  005C4A  6FD2               	movwf	_SystemState& (0+255),b
  4857  005C4C                     
  4858                           ;os_sched.c: 188: {
  4859                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  4860                           
  4861                           ; BSR set to: 0
  4862  005C4C  0102               	movlb	2	; () banked
  4863  005C4E  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  4864  005C50  A4D8               	btfss	status,2,c
  4865  005C52  D7FC               	goto	l790
  4866                           
  4867                           ; BSR set to: 2
  4868                           ;os_sched.c: 191: {
  4869                           ;os_sched.c: 196: ScheduleTasks();
  4870  005C54  EC00  F015         	call	_ScheduleTasks	;wreg free
  4871                           
  4872                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  4873  005C58  0E01               	movlw	1
  4874  005C5A  0102               	movlb	2	; () banked
  4875  005C5C  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  4876                           
  4877                           ; BSR set to: 2
  4878                           
  4879                           ; BSR set to: 2
  4880  005C5E  D7F6               	goto	l790
  4881  005C60                     __end_of_Sch_MainScheduler:
  4882                           	opt stack 0
  4883                           tblptru	equ	0xFF8
  4884                           tblptrh	equ	0xFF7
  4885                           tblptrl	equ	0xFF6
  4886                           tablat	equ	0xFF5
  4887                           prodh	equ	0xFF4
  4888                           prodl	equ	0xFF3
  4889                           intcon	equ	0xFF2
  4890                           intcon2	equ	0xFF1
  4891                           intcon3	equ	0xFF0
  4892                           postinc0	equ	0xFEE
  4893                           wreg	equ	0xFE8
  4894                           postdec1	equ	0xFE5
  4895                           fsr1h	equ	0xFE2
  4896                           fsr1l	equ	0xFE1
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           postdec2	equ	0xFDD
  4900                           fsr2h	equ	0xFDA
  4901                           fsr2l	equ	0xFD9
  4902                           status	equ	0xFD8
  4903                           
  4904 ;; *************** function _ScheduleTasks *****************
  4905 ;; Defined at:
  4906 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  ActiveTaskIn    1   75[BANK0 ] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4922 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4923 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4924 ;;Total ram usage:        5 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:   21
  4927 ;; This function calls:
  4928 ;;		_I2cSlv_MainTask
  4929 ;;		_Led_MainTask
  4930 ;;		_MdmHttp_MainTask
  4931 ;;		_Mdm_DrvMainFn
  4932 ;;		_Mdm_MainTask
  4933 ;;		_MyApp_Task
  4934 ;;		_Rtcm_MainTask
  4935 ;;		_Term_MainTask
  4936 ;;		_UsbDevice_MainTask
  4937 ;;		_Wdg_MainTask
  4938 ;; This function is called by:
  4939 ;;		_Sch_MainScheduler
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text14
  4944  002A00                     __ptext14:
  4945                           	opt stack 0
  4946  002A00                     _ScheduleTasks:
  4947                           	opt stack 8
  4948                           
  4949                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  4950                           
  4951                           ; BSR set to: 2
  4952                           ;incstack = 0
  4953  002A00  0E00               	movlw	0
  4954  002A02  0100               	movlb	0	; () banked
  4955  002A04  6FAB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4956                           
  4957                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  4958  002A06  0E00               	movlw	0
  4959  002A08  6FAB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4960  002A0A                     l13849:
  4961                           
  4962                           ; BSR set to: 0
  4963  002A0A  0E61               	movlw	low _TaskNumber
  4964  002A0C  6EF6               	movwf	tblptrl,c
  4965  002A0E                     	if	1	;There is more than 1 active tblptr byte
  4966  002A0E  0EFC               	movlw	high _TaskNumber
  4967  002A10  6EF7               	movwf	tblptrh,c
  4968  002A12                     	endif
  4969  002A12                     	if	0	;There are less than 3 active tblptr bytes
  4970  002A12                     	endif
  4971  002A12  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4972  002A14  6FA7               	movwf	??_ScheduleTasks& (0+255),b
  4973  002A16  6BA8               	clrf	(??_ScheduleTasks+1)& (0+255),b
  4974  002A18  0009               	tblrd		*+
  4975  002A1A  50F5               	movf	tablat,w,c
  4976  002A1C  5DA7               	subwf	??_ScheduleTasks& (0+255),w,b
  4977  002A1E  0009               	tblrd		*+
  4978  002A20  50F5               	movf	tablat,w,c
  4979  002A22  59A8               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  4980  002A24  B0D8               	btfsc	status,0,c
  4981  002A26  0012               	return	
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;os_sched.c: 106: {
  4985                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  4986                           
  4987                           ; BSR set to: 0
  4988                           
  4989                           ; BSR set to: 0
  4990  002A28  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4991  002A2A  0D08               	mullw	8
  4992  002A2C  0E03               	movlw	3
  4993  002A2E  26F3               	addwf	prodl,f,c
  4994  002A30  0E00               	movlw	0
  4995  002A32  22F4               	addwfc	prodh,f,c
  4996  002A34  0E54               	movlw	low _TaskTable
  4997  002A36  24F3               	addwf	prodl,w,c
  4998  002A38  6ED9               	movwf	fsr2l,c
  4999  002A3A  0E04               	movlw	high _TaskTable
  5000  002A3C  20F4               	addwfc	prodh,w,c
  5001  002A3E  6EDA               	movwf	fsr2h,c
  5002  002A40  2ADE               	incf	postinc2,f,c
  5003  002A42  0E00               	movlw	0
  5004  002A44  22DD               	addwfc	postdec2,f,c
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5008  002A46  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5009  002A48  0D08               	mullw	8
  5010  002A4A  0E05               	movlw	5
  5011  002A4C  26F3               	addwf	prodl,f,c
  5012  002A4E  0E00               	movlw	0
  5013  002A50  22F4               	addwfc	prodh,f,c
  5014  002A52  0E54               	movlw	low _TaskTable
  5015  002A54  24F3               	addwf	prodl,w,c
  5016  002A56  6ED9               	movwf	fsr2l,c
  5017  002A58  0E04               	movlw	high _TaskTable
  5018  002A5A  20F4               	addwfc	prodh,w,c
  5019  002A5C  6EDA               	movwf	fsr2h,c
  5020  002A5E  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5021  002A60  0D08               	mullw	8
  5022  002A62  0E03               	movlw	3
  5023  002A64  26F3               	addwf	prodl,f,c
  5024  002A66  0E00               	movlw	0
  5025  002A68  22F4               	addwfc	prodh,f,c
  5026  002A6A  0E54               	movlw	low _TaskTable
  5027  002A6C  24F3               	addwf	prodl,w,c
  5028  002A6E  6EE1               	movwf	fsr1l,c
  5029  002A70  0E04               	movlw	high _TaskTable
  5030  002A72  20F4               	addwfc	prodh,w,c
  5031  002A74  6EE2               	movwf	fsr1h,c
  5032  002A76  50DE               	movf	postinc2,w,c
  5033  002A78  5CE6               	subwf	postinc1,w,c
  5034  002A7A  50DE               	movf	postinc2,w,c
  5035  002A7C  58E6               	subwfb	postinc1,w,c
  5036  002A7E  A0D8               	btfss	status,0,c
  5037  002A80  D04E               	goto	l775
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;os_sched.c: 111: {
  5041                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5042  002A82  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5043  002A84  0D08               	mullw	8
  5044  002A86  0E03               	movlw	3
  5045  002A88  26F3               	addwf	prodl,f,c
  5046  002A8A  0E00               	movlw	0
  5047  002A8C  22F4               	addwfc	prodh,f,c
  5048  002A8E  0E54               	movlw	low _TaskTable
  5049  002A90  24F3               	addwf	prodl,w,c
  5050  002A92  6ED9               	movwf	fsr2l,c
  5051  002A94  0E04               	movlw	high _TaskTable
  5052  002A96  20F4               	addwfc	prodh,w,c
  5053  002A98  6EDA               	movwf	fsr2h,c
  5054  002A9A  0E00               	movlw	0
  5055  002A9C  6EDE               	movwf	postinc2,c
  5056  002A9E  0E00               	movlw	0
  5057  002AA0  6EDD               	movwf	postdec2,c
  5058                           
  5059                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5060  002AA2  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5061  002AA4  0D08               	mullw	8
  5062  002AA6  0E02               	movlw	2
  5063  002AA8  26F3               	addwf	prodl,f,c
  5064  002AAA  0E00               	movlw	0
  5065  002AAC  22F4               	addwfc	prodh,f,c
  5066  002AAE  0E54               	movlw	low _TaskTable
  5067  002AB0  24F3               	addwf	prodl,w,c
  5068  002AB2  6ED9               	movwf	fsr2l,c
  5069  002AB4  0E04               	movlw	high _TaskTable
  5070  002AB6  20F4               	addwfc	prodh,w,c
  5071  002AB8  6EDA               	movwf	fsr2h,c
  5072  002ABA  0E01               	movlw	1
  5073  002ABC  6EDF               	movwf	indf2,c
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5077  002ABE  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5078  002AC0  0D08               	mullw	8
  5079  002AC2  0E54               	movlw	low _TaskTable
  5080  002AC4  24F3               	addwf	prodl,w,c
  5081  002AC6  6ED9               	movwf	fsr2l,c
  5082  002AC8  0E04               	movlw	high _TaskTable
  5083  002ACA  20F4               	addwfc	prodh,w,c
  5084  002ACC  6EDA               	movwf	fsr2h,c
  5085  002ACE  D801               	call	u13328
  5086  002AD0  D017               	goto	u13329
  5087  002AD2                     u13328:
  5088  002AD2  0005               	push	
  5089  002AD4  6EFA               	movwf	pclath,c
  5090  002AD6  50DE               	movf	postinc2,w,c
  5091  002AD8  6EFD               	movwf	tosl,c
  5092  002ADA  50DE               	movf	postinc2,w,c
  5093  002ADC  6EFE               	movwf	tosh,c
  5094  002ADE  50F8               	movf	tblptru,w,c
  5095  002AE0  6EFF               	movwf	tosu,c
  5096  002AE2  50FA               	movf	pclath,w,c
  5097  002AE4  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5098  002AE6  0D08               	mullw	8
  5099  002AE8  0E07               	movlw	7
  5100  002AEA  26F3               	addwf	prodl,f,c
  5101  002AEC  0E00               	movlw	0
  5102  002AEE  22F4               	addwfc	prodh,f,c
  5103  002AF0  0E54               	movlw	low _TaskTable
  5104  002AF2  24F3               	addwf	prodl,w,c
  5105  002AF4  6ED9               	movwf	fsr2l,c
  5106  002AF6  0E04               	movlw	high _TaskTable
  5107  002AF8  20F4               	addwfc	prodh,w,c
  5108  002AFA  6EDA               	movwf	fsr2h,c
  5109  002AFC  50DF               	movf	indf2,w,c
  5110  002AFE  0012               	return		;indir
  5111  002B00                     u13329:
  5112                           
  5113                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5114  002B00  0100               	movlb	0	; () banked
  5115  002B02  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5116  002B04  0D08               	mullw	8
  5117  002B06  0E02               	movlw	2
  5118  002B08  26F3               	addwf	prodl,f,c
  5119  002B0A  0E00               	movlw	0
  5120  002B0C  22F4               	addwfc	prodh,f,c
  5121  002B0E  0E54               	movlw	low _TaskTable
  5122  002B10  24F3               	addwf	prodl,w,c
  5123  002B12  6ED9               	movwf	fsr2l,c
  5124  002B14  0E04               	movlw	high _TaskTable
  5125  002B16  20F4               	addwfc	prodh,w,c
  5126  002B18  6EDA               	movwf	fsr2h,c
  5127  002B1A  0E00               	movlw	0
  5128  002B1C  6EDF               	movwf	indf2,c
  5129  002B1E                     l775:
  5130                           
  5131                           ; BSR set to: 0
  5132                           
  5133                           ; BSR set to: 0
  5134                           
  5135                           ;os_sched.c: 117: else
  5136                           ;os_sched.c: 118: {
  5137                           
  5138                           ; BSR set to: 0
  5139  002B1E  2BAB               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5140  002B20  D774               	goto	l13849
  5141  002B22                     __end_of_ScheduleTasks:
  5142                           	opt stack 0
  5143                           tosu	equ	0xFFF
  5144                           tosh	equ	0xFFE
  5145                           tosl	equ	0xFFD
  5146                           pclath	equ	0xFFA
  5147                           tblptru	equ	0xFF8
  5148                           tblptrh	equ	0xFF7
  5149                           tblptrl	equ	0xFF6
  5150                           tablat	equ	0xFF5
  5151                           prodh	equ	0xFF4
  5152                           prodl	equ	0xFF3
  5153                           intcon	equ	0xFF2
  5154                           intcon2	equ	0xFF1
  5155                           intcon3	equ	0xFF0
  5156                           postinc0	equ	0xFEE
  5157                           wreg	equ	0xFE8
  5158                           postinc1	equ	0xFE6
  5159                           postdec1	equ	0xFE5
  5160                           fsr1h	equ	0xFE2
  5161                           fsr1l	equ	0xFE1
  5162                           indf2	equ	0xFDF
  5163                           postinc2	equ	0xFDE
  5164                           postdec2	equ	0xFDD
  5165                           fsr2h	equ	0xFDA
  5166                           fsr2l	equ	0xFD9
  5167                           status	equ	0xFD8
  5168                           
  5169 ;; *************** function _InitializeTasks *****************
  5170 ;; Defined at:
  5171 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;		None
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  ActiveTaskIn    1   73[BANK0 ] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5187 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5189 ;;Total ram usage:        3 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:   21
  5192 ;; This function calls:
  5193 ;;		_I2cSlv_MainTask
  5194 ;;		_Led_MainTask
  5195 ;;		_MdmHttp_MainTask
  5196 ;;		_Mdm_DrvMainFn
  5197 ;;		_Mdm_MainTask
  5198 ;;		_MyApp_Task
  5199 ;;		_Rtcm_MainTask
  5200 ;;		_Term_MainTask
  5201 ;;		_UsbDevice_MainTask
  5202 ;;		_Wdg_MainTask
  5203 ;; This function is called by:
  5204 ;;		_Sch_MainScheduler
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text15
  5209  004B42                     __ptext15:
  5210                           	opt stack 0
  5211  004B42                     _InitializeTasks:
  5212                           	opt stack 8
  5213                           
  5214                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;incstack = 0
  5218  004B42  0E00               	movlw	0
  5219  004B44  0100               	movlb	0	; () banked
  5220  004B46  6FA9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5221                           
  5222                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5223  004B48  0E00               	movlw	0
  5224  004B4A  6FA9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5225  004B4C                     l13837:
  5226                           
  5227                           ; BSR set to: 0
  5228  004B4C  0E61               	movlw	low _TaskNumber
  5229  004B4E  6EF6               	movwf	tblptrl,c
  5230  004B50                     	if	1	;There is more than 1 active tblptr byte
  5231  004B50  0EFC               	movlw	high _TaskNumber
  5232  004B52  6EF7               	movwf	tblptrh,c
  5233  004B54                     	endif
  5234  004B54                     	if	0	;There are less than 3 active tblptr bytes
  5235  004B54                     	endif
  5236  004B54  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5237  004B56  6FA7               	movwf	??_InitializeTasks& (0+255),b
  5238  004B58  6BA8               	clrf	(??_InitializeTasks+1)& (0+255),b
  5239  004B5A  0009               	tblrd		*+
  5240  004B5C  50F5               	movf	tablat,w,c
  5241  004B5E  5DA7               	subwf	??_InitializeTasks& (0+255),w,b
  5242  004B60  0009               	tblrd		*+
  5243  004B62  50F5               	movf	tablat,w,c
  5244  004B64  59A8               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5245  004B66  B0D8               	btfsc	status,0,c
  5246  004B68  0012               	return	
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;os_sched.c: 86: {
  5250                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5251                           
  5252                           ; BSR set to: 0
  5253                           
  5254                           ; BSR set to: 0
  5255  004B6A  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5256  004B6C  0D08               	mullw	8
  5257  004B6E  0E54               	movlw	low _TaskTable
  5258  004B70  24F3               	addwf	prodl,w,c
  5259  004B72  6ED9               	movwf	fsr2l,c
  5260  004B74  0E04               	movlw	high _TaskTable
  5261  004B76  20F4               	addwfc	prodh,w,c
  5262  004B78  6EDA               	movwf	fsr2h,c
  5263  004B7A  D801               	call	u13288
  5264  004B7C  D017               	goto	u13289
  5265  004B7E                     u13288:
  5266  004B7E  0005               	push	
  5267  004B80  6EFA               	movwf	pclath,c
  5268  004B82  50DE               	movf	postinc2,w,c
  5269  004B84  6EFD               	movwf	tosl,c
  5270  004B86  50DE               	movf	postinc2,w,c
  5271  004B88  6EFE               	movwf	tosh,c
  5272  004B8A  50F8               	movf	tblptru,w,c
  5273  004B8C  6EFF               	movwf	tosu,c
  5274  004B8E  50FA               	movf	pclath,w,c
  5275  004B90  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5276  004B92  0D08               	mullw	8
  5277  004B94  0E07               	movlw	7
  5278  004B96  26F3               	addwf	prodl,f,c
  5279  004B98  0E00               	movlw	0
  5280  004B9A  22F4               	addwfc	prodh,f,c
  5281  004B9C  0E54               	movlw	low _TaskTable
  5282  004B9E  24F3               	addwf	prodl,w,c
  5283  004BA0  6ED9               	movwf	fsr2l,c
  5284  004BA2  0E04               	movlw	high _TaskTable
  5285  004BA4  20F4               	addwfc	prodh,w,c
  5286  004BA6  6EDA               	movwf	fsr2h,c
  5287  004BA8  50DF               	movf	indf2,w,c
  5288  004BAA  0012               	return		;indir
  5289  004BAC                     u13289:
  5290  004BAC  0100               	movlb	0	; () banked
  5291  004BAE  2BA9               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5292  004BB0  D7CD               	goto	l13837
  5293  004BB2                     __end_of_InitializeTasks:
  5294                           	opt stack 0
  5295                           tosu	equ	0xFFF
  5296                           tosh	equ	0xFFE
  5297                           tosl	equ	0xFFD
  5298                           pclath	equ	0xFFA
  5299                           tblptru	equ	0xFF8
  5300                           tblptrh	equ	0xFF7
  5301                           tblptrl	equ	0xFF6
  5302                           tablat	equ	0xFF5
  5303                           prodh	equ	0xFF4
  5304                           prodl	equ	0xFF3
  5305                           intcon	equ	0xFF2
  5306                           intcon2	equ	0xFF1
  5307                           intcon3	equ	0xFF0
  5308                           postinc0	equ	0xFEE
  5309                           wreg	equ	0xFE8
  5310                           postinc1	equ	0xFE6
  5311                           postdec1	equ	0xFE5
  5312                           fsr1h	equ	0xFE2
  5313                           fsr1l	equ	0xFE1
  5314                           indf2	equ	0xFDF
  5315                           postinc2	equ	0xFDE
  5316                           postdec2	equ	0xFDD
  5317                           fsr2h	equ	0xFDA
  5318                           fsr2l	equ	0xFD9
  5319                           status	equ	0xFD8
  5320                           
  5321 ;; *************** function _MyApp_Task *****************
  5322 ;; Defined at:
  5323 ;;		line 95 in file "../Source/c/04_App/app.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  Options         1    wreg     unsigned char 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  Options         1    0[COMRAM] unsigned char 
  5328 ;;  phone          10   42[BANK0 ] unsigned char [10]
  5329 ;;  on              2   56[BANK0 ] unsigned char [2]
  5330 ;;  off             2   54[BANK0 ] unsigned char [2]
  5331 ;;  I2cTxBufferT    2   52[BANK0 ] unsigned char [2]
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5342 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5344 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5345 ;;Total ram usage:       16 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:   14
  5348 ;; This function calls:
  5349 ;;		_I2cSlv_SendI2cMsg
  5350 ;;		_Led_SetLedBlinkTime
  5351 ;;		_Led_SetLedStatus
  5352 ;;		_Mdm_IsRinging
  5353 ;;		_triggerRelay
  5354 ;; This function is called by:
  5355 ;;		_InitializeTasks
  5356 ;;		_ScheduleTasks
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text16
  5361  0033D2                     __ptext16:
  5362                           	opt stack 0
  5363  0033D2                     _MyApp_Task:
  5364                           	opt stack 14
  5365                           
  5366                           ;app.c: 97: static uint8_t countRelay1 = 1;
  5367                           ;app.c: 98: static uint16_t countRelay2 = 1;
  5368                           ;app.c: 99: static bool isRelay1On = 0;
  5369                           ;app.c: 100: static bool isRelay2On = 0;
  5370                           ;app.c: 101: static uint8_t test = 0;
  5371                           ;app.c: 102: uint8_t off[2] = {((UINT8)(0x50)), 0x00};
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;incstack = 0
  5375  0033D2  C3CD  F096         	movff	MyApp_Task@F8976,MyApp_Task@off
  5376  0033D6  C3CE  F097         	movff	MyApp_Task@F8976+1,MyApp_Task@off+1
  5377                           
  5378                           ;app.c: 103: uint8_t on[2] = {((UINT8)(0x50)), 0x1};
  5379  0033DA  C3CB  F098         	movff	MyApp_Task@F8979,MyApp_Task@on
  5380  0033DE  C3CC  F099         	movff	MyApp_Task@F8979+1,MyApp_Task@on+1
  5381                           
  5382                           ;app.c: 106: UINT8 I2cTxBufferTest[] = {0x00, 0x00};
  5383  0033E2  C320  F094         	movff	MyApp_Task@F8982,MyApp_Task@I2cTxBufferTest
  5384  0033E6  C321  F095         	movff	MyApp_Task@F8982+1,MyApp_Task@I2cTxBufferTest+1
  5385                           
  5386                           ;app.c: 107: static UINT8 I2cStsReady = 0u;
  5387                           ;app.c: 108: UINT8 phone[] = {'3', '2', '0', '0', '2', '7', '6', '3', '1', '8'};
  5388  0033EA  EE24  F040         	lfsr	2,MyApp_Task@F8985
  5389  0033EE  EE10  F08A         	lfsr	1,MyApp_Task@phone
  5390  0033F2  0E09               	movlw	9
  5391  0033F4                     u13201:
  5392  0033F4  CFDB FFE3          	movff	plusw2,plusw1
  5393  0033F8  06E8               	decf	wreg,f,c
  5394  0033FA  E2FC               	bc	u13201
  5395                           
  5396                           ;app.c: 110: switch (SystemState)
  5397  0033FC  D050               	goto	l2522
  5398  0033FE                     
  5399                           ;app.c: 115: Led_SetLedBlinkTime(1u,100,900);
  5400  0033FE  0E00               	movlw	0
  5401  003400  0100               	movlb	0	; () banked
  5402  003402  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5403  003404  0E64               	movlw	100
  5404  003406  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5405  003408  0E03               	movlw	3
  5406  00340A  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5407  00340C  0E84               	movlw	132
  5408  00340E  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5409  003410  0E01               	movlw	1
  5410  003412  EC9E  F028         	call	_Led_SetLedBlinkTime
  5411                           
  5412                           ;app.c: 116: Led_SetLedStatus(1u, LED_STS_BLINK);
  5413  003416  0E03               	movlw	3
  5414  003418  0100               	movlb	0	; () banked
  5415  00341A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  5416  00341C  0E01               	movlw	1
  5417  00341E  ECA9  F02C         	call	_Led_SetLedStatus
  5418                           
  5419                           ;app.c: 117: break;
  5420  003422  0012               	return	
  5421  003424                     
  5422                           ;app.c: 123: if (I2cStsReady == 0)
  5423  003424  0101               	movlb	1	; () banked
  5424  003426  51D5               	movf	MyApp_Task@I2cStsReady& (0+255),w,b
  5425  003428  A4D8               	btfss	status,2,c
  5426  00342A  D003               	goto	l2526
  5427                           
  5428                           ; BSR set to: 1
  5429                           ;app.c: 124: {
  5430                           ;app.c: 128: I2cStsReady = 1;
  5431  00342C  0E01               	movlw	1
  5432  00342E  6FD5               	movwf	MyApp_Task@I2cStsReady& (0+255),b
  5433                           
  5434                           ;app.c: 131: }
  5435  003430  D024               	goto	l2530
  5436  003432                     l2526:
  5437                           
  5438                           ; BSR set to: 1
  5439                           ;app.c: 147: else if (Mdm_IsRinging() == PhoneRinging)
  5440                           
  5441                           ; BSR set to: 1
  5442  003432  EC68  F02D         	call	_Mdm_IsRinging	;wreg free
  5443  003436  06E8               	decf	wreg,f,c
  5444  003438  A4D8               	btfss	status,2,c
  5445  00343A  D01F               	goto	l2530
  5446                           
  5447                           ;app.c: 148: {
  5448                           ;app.c: 149: if (isRelay2On)
  5449  00343C  0101               	movlb	1	; () banked
  5450  00343E  51D7               	movf	MyApp_Task@isRelay2On& (0+255),w,b
  5451  003440  B4D8               	btfsc	status,2,c
  5452  003442  D00D               	goto	l2529
  5453                           
  5454                           ; BSR set to: 1
  5455                           ;app.c: 150: {
  5456                           ;app.c: 151: I2cSlv_SendI2cMsg(on, 2, 2);
  5457  003444  0E98               	movlw	low MyApp_Task@on
  5458  003446  0100               	movlb	0	; () banked
  5459  003448  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
  5460  00344A  0E00               	movlw	high MyApp_Task@on
  5461  00344C  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
  5462  00344E  0E02               	movlw	2
  5463  003450  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
  5464  003452  0E02               	movlw	2
  5465  003454  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
  5466  003456  EC2A  F02B         	call	_I2cSlv_SendI2cMsg	;wreg free
  5467                           
  5468                           ;app.c: 152: isRelay2On = 0;
  5469  00345A  0E00               	movlw	0
  5470  00345C  D00C               	goto	L3
  5471  00345E                     l2529:
  5472                           
  5473                           ; BSR set to: 1
  5474                           ;app.c: 154: else
  5475                           ;app.c: 155: {
  5476                           ;app.c: 156: I2cSlv_SendI2cMsg(off, 2, 2);
  5477                           
  5478                           ; BSR set to: 1
  5479  00345E  0E96               	movlw	low MyApp_Task@off
  5480  003460  0100               	movlb	0	; () banked
  5481  003462  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
  5482  003464  0E00               	movlw	high MyApp_Task@off
  5483  003466  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
  5484  003468  0E02               	movlw	2
  5485  00346A  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
  5486  00346C  0E02               	movlw	2
  5487  00346E  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
  5488  003470  EC2A  F02B         	call	_I2cSlv_SendI2cMsg	;wreg free
  5489                           
  5490                           ;app.c: 157: isRelay2On = 1;
  5491  003474  0E01               	movlw	1
  5492  003476                     L3:
  5493  003476  0101               	movlb	1	; () banked
  5494  003478  6FD7               	movwf	MyApp_Task@isRelay2On& (0+255),b
  5495  00347A                     l2530:
  5496                           
  5497                           ;app.c: 158: }
  5498                           ;app.c: 159: }
  5499                           ;app.c: 166: if (Mdm_IsRinging() == PhoneRinging)
  5500                           
  5501                           ; BSR set to: 1
  5502                           
  5503                           ; BSR set to: 1
  5504                           
  5505                           ; BSR set to: 1
  5506  00347A  EC68  F02D         	call	_Mdm_IsRinging	;wreg free
  5507  00347E  06E8               	decf	wreg,f,c
  5508  003480  A4D8               	btfss	status,2,c
  5509  003482  0012               	return	
  5510                           
  5511                           ;app.c: 167: {
  5512                           ;app.c: 168: isRelay1On = !isRelay1On;
  5513  003484  5025               	movf	MyApp_Task@isRelay1On,w,c
  5514  003486  A4D8               	btfss	status,2,c
  5515  003488  D002               	goto	u13250
  5516  00348A  0E01               	movlw	1
  5517  00348C  D001               	goto	u13260
  5518  00348E                     u13250:
  5519  00348E  0E00               	movlw	0
  5520  003490                     u13260:
  5521  003490  6E25               	movwf	MyApp_Task@isRelay1On,c
  5522                           
  5523                           ;app.c: 169: triggerRelay(1, isRelay1On);
  5524  003492  C025  F085         	movff	MyApp_Task@isRelay1On,triggerRelay@isRelayOn
  5525  003496  0E01               	movlw	1
  5526  003498  ECDF  F02B         	call	_triggerRelay
  5527                           
  5528                           ;app.c: 204: }
  5529                           
  5530                           ;app.c: 203: break;
  5531                           
  5532                           ;app.c: 202: default:
  5533                           
  5534                           ;app.c: 170: }
  5535                           ;app.c: 199: break;
  5536  00349C  0012               	return	
  5537  00349E                     l2522:
  5538  00349E  0100               	movlb	0	; () banked
  5539  0034A0  51D2               	movf	_SystemState& (0+255),w,b
  5540                           
  5541                           ; Switch size 1, requested type "space"
  5542                           ; Number of cases is 2, Range of values is 0 to 1
  5543                           ; switch strategies available:
  5544                           ; Name         Instructions Cycles
  5545                           ; simple_byte            7     4 (average)
  5546                           ;	Chosen strategy is simple_byte
  5547  0034A2  0A00               	xorlw	0	; case 0
  5548  0034A4  B4D8               	btfsc	status,2,c
  5549  0034A6  D7AB               	goto	l2523
  5550  0034A8  0A01               	xorlw	1	; case 1
  5551  0034AA  A4D8               	btfss	status,2,c
  5552  0034AC  0012               	return	
  5553  0034AE  D7BA               	goto	l2525
  5554  0034B0                     __end_of_MyApp_Task:
  5555                           	opt stack 0
  5556                           tosu	equ	0xFFF
  5557                           tosh	equ	0xFFE
  5558                           tosl	equ	0xFFD
  5559                           pclath	equ	0xFFA
  5560                           tblptru	equ	0xFF8
  5561                           tblptrh	equ	0xFF7
  5562                           tblptrl	equ	0xFF6
  5563                           tablat	equ	0xFF5
  5564                           prodh	equ	0xFF4
  5565                           prodl	equ	0xFF3
  5566                           intcon	equ	0xFF2
  5567                           intcon2	equ	0xFF1
  5568                           intcon3	equ	0xFF0
  5569                           postinc0	equ	0xFEE
  5570                           wreg	equ	0xFE8
  5571                           postinc1	equ	0xFE6
  5572                           postdec1	equ	0xFE5
  5573                           plusw1	equ	0xFE3
  5574                           fsr1h	equ	0xFE2
  5575                           fsr1l	equ	0xFE1
  5576                           indf2	equ	0xFDF
  5577                           postinc2	equ	0xFDE
  5578                           postdec2	equ	0xFDD
  5579                           plusw2	equ	0xFDB
  5580                           fsr2h	equ	0xFDA
  5581                           fsr2l	equ	0xFD9
  5582                           status	equ	0xFD8
  5583                           
  5584 ;; *************** function _Term_MainTask *****************
  5585 ;; Defined at:
  5586 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;  Options         1    wreg     unsigned char 
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;  Options         1    0[COMRAM] unsigned char 
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:   17
  5607 ;; This function calls:
  5608 ;;		_Term_MainSm
  5609 ;; This function is called by:
  5610 ;;		_InitializeTasks
  5611 ;;		_ScheduleTasks
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text17
  5616  005CB2                     __ptext17:
  5617                           	opt stack 0
  5618  005CB2                     _Term_MainTask:
  5619                           	opt stack 11
  5620                           
  5621                           ;term.c: 847: switch (SystemState)
  5622                           
  5623                           ;incstack = 0
  5624  005CB2  D003               	goto	l2434
  5625  005CB4                     
  5626                           ;term.c: 858: Term_MainSm();
  5627  005CB4  EC5B  F008         	call	_Term_MainSm	;wreg free
  5628                           
  5629                           ;term.c: 865: }
  5630                           
  5631                           ;term.c: 864: break;
  5632                           
  5633                           ;term.c: 863: default:
  5634                           
  5635                           ;term.c: 860: break;
  5636  005CB8  0012               	return	
  5637  005CBA                     l2434:
  5638  005CBA  0100               	movlb	0	; () banked
  5639  005CBC  51D2               	movf	_SystemState& (0+255),w,b
  5640                           
  5641                           ; Switch size 1, requested type "space"
  5642                           ; Number of cases is 2, Range of values is 0 to 1
  5643                           ; switch strategies available:
  5644                           ; Name         Instructions Cycles
  5645                           ; simple_byte            7     4 (average)
  5646                           ;	Chosen strategy is simple_byte
  5647  005CBE  0A00               	xorlw	0	; case 0
  5648  005CC0  B4D8               	btfsc	status,2,c
  5649  005CC2  0012               	return	
  5650  005CC4  0A01               	xorlw	1	; case 1
  5651  005CC6  A4D8               	btfss	status,2,c
  5652  005CC8  0012               	return	
  5653  005CCA  D7F4               	goto	l2437
  5654  005CCC                     __end_of_Term_MainTask:
  5655                           	opt stack 0
  5656                           tosu	equ	0xFFF
  5657                           tosh	equ	0xFFE
  5658                           tosl	equ	0xFFD
  5659                           pclath	equ	0xFFA
  5660                           tblptru	equ	0xFF8
  5661                           tblptrh	equ	0xFF7
  5662                           tblptrl	equ	0xFF6
  5663                           tablat	equ	0xFF5
  5664                           prodh	equ	0xFF4
  5665                           prodl	equ	0xFF3
  5666                           intcon	equ	0xFF2
  5667                           intcon2	equ	0xFF1
  5668                           intcon3	equ	0xFF0
  5669                           postinc0	equ	0xFEE
  5670                           wreg	equ	0xFE8
  5671                           postinc1	equ	0xFE6
  5672                           postdec1	equ	0xFE5
  5673                           plusw1	equ	0xFE3
  5674                           fsr1h	equ	0xFE2
  5675                           fsr1l	equ	0xFE1
  5676                           indf2	equ	0xFDF
  5677                           postinc2	equ	0xFDE
  5678                           postdec2	equ	0xFDD
  5679                           plusw2	equ	0xFDB
  5680                           fsr2h	equ	0xFDA
  5681                           fsr2l	equ	0xFD9
  5682                           status	equ	0xFD8
  5683                           
  5684 ;; *************** function _Rtcm_MainTask *****************
  5685 ;; Defined at:
  5686 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  Options         1    wreg     unsigned char 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  Options         1    0[COMRAM] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5704 ;;Total ram usage:        0 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:   14
  5707 ;; This function calls:
  5708 ;;		_Rtcc_AlarmConfig
  5709 ;;		_Rtcc_LockRtc
  5710 ;;		_Rtcc_RtcConfig
  5711 ;;		_Rtcc_SetRtcStatus
  5712 ;;		_Rtcc_UnlockRtc
  5713 ;;		_Rtcm_GetRtccDate
  5714 ;;		_Rtcm_SetRtccDate
  5715 ;; This function is called by:
  5716 ;;		_InitializeTasks
  5717 ;;		_ScheduleTasks
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text18
  5722  0047B8                     __ptext18:
  5723                           	opt stack 0
  5724  0047B8                     _Rtcm_MainTask:
  5725                           	opt stack 14
  5726                           
  5727                           ;rtcm.c: 101: switch (SystemState)
  5728                           
  5729                           ;incstack = 0
  5730  0047B8  D03D               	goto	l2164
  5731  0047BA                     l2165:
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  5735  0047BA  86CD               	bsf	4045,3,c	;volatile
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  5739  0047BC  0E00               	movlw	0
  5740  0047BE  0103               	movlb	3	; () banked
  5741  0047C0  6FBE               	movwf	_RtcConfig& (0+255),b
  5742                           
  5743                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  5744  0047C2  0E00               	movlw	0
  5745  0047C4  6FBF               	movwf	(_RtcConfig+1)& (0+255),b
  5746                           
  5747                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  5748  0047C6  0E01               	movlw	1
  5749  0047C8  6FC0               	movwf	(_RtcConfig+2)& (0+255),b
  5750                           
  5751                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  5752  0047CA  0E01               	movlw	1
  5753  0047CC  6FC1               	movwf	(_RtcConfig+3)& (0+255),b
  5754                           
  5755                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  5756  0047CE  0E01               	movlw	1
  5757  0047D0  6FBA               	movwf	_AlCfg& (0+255),b
  5758                           
  5759                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  5760  0047D2  0E01               	movlw	1
  5761  0047D4  6FBB               	movwf	(_AlCfg+1)& (0+255),b
  5762                           
  5763                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  5764  0047D6  0E01               	movlw	1
  5765  0047D8  6FBC               	movwf	(_AlCfg+2)& (0+255),b
  5766                           
  5767                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  5768  0047DA  0E00               	movlw	0
  5769  0047DC  6FBD               	movwf	(_AlCfg+3)& (0+255),b
  5770                           
  5771                           ; BSR set to: 3
  5772                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  5773  0047DE  ECD2  F02E         	call	_Rtcc_UnlockRtc	;wreg free
  5774                           
  5775                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  5776  0047E2  0EBE               	movlw	low _RtcConfig
  5777  0047E4  0100               	movlb	0	; () banked
  5778  0047E6  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  5779  0047E8  0E03               	movlw	high _RtcConfig
  5780  0047EA  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  5781  0047EC  EC7F  F021         	call	_Rtcc_RtcConfig	;wreg free
  5782                           
  5783                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  5784  0047F0  0EBA               	movlw	low _AlCfg
  5785  0047F2  0100               	movlb	0	; () banked
  5786  0047F4  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  5787  0047F6  0E03               	movlw	high _AlCfg
  5788  0047F8  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  5789  0047FA  EC0F  F026         	call	_Rtcc_AlarmConfig	;wreg free
  5790                           
  5791                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  5792  0047FE  0E01               	movlw	1
  5793  004800  EC8A  F02E         	call	_Rtcc_SetRtcStatus
  5794                           
  5795                           ;rtcm.c: 127: Rtcc_LockRtc();
  5796  004804  ECDA  F02E         	call	_Rtcc_LockRtc	;wreg free
  5797                           
  5798                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  5799  004808  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  5800  00480C  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  5801  004810  0E07               	movlw	7
  5802  004812                     u9181:
  5803  004812  CFDB FFEB          	movff	plusw2,plusw0
  5804  004816  06E8               	decf	wreg,f,c
  5805  004818  E2FC               	bc	u9181
  5806  00481A  EC74  F028         	call	_Rtcm_SetRtccDate	;wreg free
  5807                           
  5808                           ;rtcm.c: 154: break;
  5809  00481E  0012               	return	
  5810  004820                     
  5811                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  5812  004820  EC78  F026         	call	_Rtcm_GetRtccDate	;wreg free
  5813  004824  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  5814  004828  0E07               	movlw	7
  5815  00482A                     u9191:
  5816  00482A  CFEB FFDB          	movff	plusw0,plusw2
  5817  00482E  06E8               	decf	wreg,f,c
  5818  004830  E2FC               	bc	u9191
  5819                           
  5820                           ;rtcm.c: 165: }
  5821                           
  5822                           ;rtcm.c: 164: break;
  5823                           
  5824                           ;rtcm.c: 163: default:
  5825                           
  5826                           ;rtcm.c: 160: break;
  5827  004832  0012               	return	
  5828  004834                     l2164:
  5829  004834  0100               	movlb	0	; () banked
  5830  004836  51D2               	movf	_SystemState& (0+255),w,b
  5831                           
  5832                           ; Switch size 1, requested type "space"
  5833                           ; Number of cases is 2, Range of values is 0 to 1
  5834                           ; switch strategies available:
  5835                           ; Name         Instructions Cycles
  5836                           ; simple_byte            7     4 (average)
  5837                           ;	Chosen strategy is simple_byte
  5838  004838  0A00               	xorlw	0	; case 0
  5839  00483A  B4D8               	btfsc	status,2,c
  5840  00483C  D7BE               	goto	l2165
  5841  00483E  0A01               	xorlw	1	; case 1
  5842  004840  A4D8               	btfss	status,2,c
  5843  004842  0012               	return	
  5844  004844  D7ED               	goto	l2167
  5845  004846                     __end_of_Rtcm_MainTask:
  5846                           	opt stack 0
  5847                           tosu	equ	0xFFF
  5848                           tosh	equ	0xFFE
  5849                           tosl	equ	0xFFD
  5850                           pclath	equ	0xFFA
  5851                           tblptru	equ	0xFF8
  5852                           tblptrh	equ	0xFF7
  5853                           tblptrl	equ	0xFF6
  5854                           tablat	equ	0xFF5
  5855                           prodh	equ	0xFF4
  5856                           prodl	equ	0xFF3
  5857                           intcon	equ	0xFF2
  5858                           intcon2	equ	0xFF1
  5859                           intcon3	equ	0xFF0
  5860                           postinc0	equ	0xFEE
  5861                           plusw0	equ	0xFEB
  5862                           wreg	equ	0xFE8
  5863                           postinc1	equ	0xFE6
  5864                           postdec1	equ	0xFE5
  5865                           plusw1	equ	0xFE3
  5866                           fsr1h	equ	0xFE2
  5867                           fsr1l	equ	0xFE1
  5868                           indf2	equ	0xFDF
  5869                           postinc2	equ	0xFDE
  5870                           postdec2	equ	0xFDD
  5871                           plusw2	equ	0xFDB
  5872                           fsr2h	equ	0xFDA
  5873                           fsr2l	equ	0xFD9
  5874                           status	equ	0xFD8
  5875                           
  5876 ;; *************** function _Led_MainTask *****************
  5877 ;; Defined at:
  5878 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  Options         1    wreg     unsigned char 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  Options         1    0[COMRAM] unsigned char 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5896 ;;Total ram usage:        1 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:   14
  5899 ;; This function calls:
  5900 ;;		_LedStateMachine
  5901 ;; This function is called by:
  5902 ;;		_InitializeTasks
  5903 ;;		_ScheduleTasks
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text19
  5908  00372E                     __ptext19:
  5909                           	opt stack 0
  5910  00372E                     _Led_MainTask:
  5911                           	opt stack 14
  5912                           
  5913                           ;led.c: 300: switch (SystemState)
  5914                           
  5915                           ;incstack = 0
  5916  00372E  D05C               	goto	l2078
  5917  003730                     l2079:
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  5921  003730  9895               	bcf	3989,4,c	;volatile
  5922                           
  5923                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  5924  003732  9A95               	bcf	3989,5,c	;volatile
  5925                           
  5926                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  5927  003734  9C95               	bcf	3989,6,c	;volatile
  5928                           
  5929                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  5930  003736  9883               	bcf	3971,4,c	;volatile
  5931                           
  5932                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  5933  003738  9A83               	bcf	3971,5,c	;volatile
  5934                           
  5935                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  5936  00373A  9C83               	bcf	3971,6,c	;volatile
  5937                           
  5938                           ;led.c: 311: break;
  5939  00373C  0012               	return	
  5940  00373E                     
  5941                           ; BSR set to: 0
  5942                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  5943                           
  5944                           ; BSR set to: 0
  5945  00373E  0EFB               	movlw	low _Led1Sts
  5946  003740  6F89               	movwf	LedStateMachine@LedSts& (0+255),b
  5947  003742  0E01               	movlw	high _Led1Sts
  5948  003744  6F8A               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5949  003746  0EFA               	movlw	low _Led1OutSts
  5950  003748  6F8B               	movwf	LedStateMachine@LedOut& (0+255),b
  5951  00374A  0E01               	movlw	high _Led1OutSts
  5952  00374C  6F8C               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  5953  00374E  0E78               	movlw	low _Led1Blink
  5954  003750  6F8D               	movwf	LedStateMachine@LedBlink& (0+255),b
  5955  003752  0E03               	movlw	high _Led1Blink
  5956  003754  6F8E               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  5957  003756  0E9C               	movlw	low _Led1Pulse
  5958  003758  6F8F               	movwf	LedStateMachine@LedPulse& (0+255),b
  5959  00375A  0E03               	movlw	high _Led1Pulse
  5960  00375C  6F90               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  5961  00375E  0E01               	movlw	1
  5962  003760  EC2B  F021         	call	_LedStateMachine
  5963  003764  0100               	movlb	0	; () banked
  5964  003766  6F94               	movwf	??_Led_MainTask& (0+255),b
  5965  003768  3B94               	swapf	??_Led_MainTask& (0+255),f,b
  5966  00376A  5083               	movf	3971,w,c	;volatile
  5967  00376C  1994               	xorwf	??_Led_MainTask& (0+255),w,b
  5968  00376E  0BEF               	andlw	-17
  5969  003770  1994               	xorwf	??_Led_MainTask& (0+255),w,b
  5970  003772  6E83               	movwf	3971,c	;volatile
  5971                           
  5972                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  5973  003774  0EF9               	movlw	low _Led2Sts
  5974  003776  6F89               	movwf	LedStateMachine@LedSts& (0+255),b
  5975  003778  0E01               	movlw	high _Led2Sts
  5976  00377A  6F8A               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5977  00377C  0EF8               	movlw	low _Led2OutSts
  5978  00377E  6F8B               	movwf	LedStateMachine@LedOut& (0+255),b
  5979  003780  0E01               	movlw	high _Led2OutSts
  5980  003782  6F8C               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  5981  003784  0E6F               	movlw	low _Led2Blink
  5982  003786  6F8D               	movwf	LedStateMachine@LedBlink& (0+255),b
  5983  003788  0E03               	movlw	high _Led2Blink
  5984  00378A  6F8E               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  5985  00378C  0E96               	movlw	low _Led2Pulse
  5986  00378E  6F8F               	movwf	LedStateMachine@LedPulse& (0+255),b
  5987  003790  0E03               	movlw	high _Led2Pulse
  5988  003792  6F90               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  5989  003794  0E02               	movlw	2
  5990  003796  EC2B  F021         	call	_LedStateMachine
  5991  00379A  0100               	movlb	0	; () banked
  5992  00379C  6F94               	movwf	??_Led_MainTask& (0+255),b
  5993  00379E  3B94               	swapf	??_Led_MainTask& (0+255),f,b
  5994  0037A0  4794               	rlncf	??_Led_MainTask& (0+255),f,b
  5995  0037A2  5083               	movf	3971,w,c	;volatile
  5996  0037A4  1994               	xorwf	??_Led_MainTask& (0+255),w,b
  5997  0037A6  0BDF               	andlw	-33
  5998  0037A8  1994               	xorwf	??_Led_MainTask& (0+255),w,b
  5999  0037AA  6E83               	movwf	3971,c	;volatile
  6000                           
  6001                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6002  0037AC  0EF7               	movlw	low _Led3Sts
  6003  0037AE  6F89               	movwf	LedStateMachine@LedSts& (0+255),b
  6004  0037B0  0E01               	movlw	high _Led3Sts
  6005  0037B2  6F8A               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6006  0037B4  0EF6               	movlw	low _Led3OutSts
  6007  0037B6  6F8B               	movwf	LedStateMachine@LedOut& (0+255),b
  6008  0037B8  0E01               	movlw	high _Led3OutSts
  6009  0037BA  6F8C               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6010  0037BC  0E66               	movlw	low _Led3Blink
  6011  0037BE  6F8D               	movwf	LedStateMachine@LedBlink& (0+255),b
  6012  0037C0  0E03               	movlw	high _Led3Blink
  6013  0037C2  6F8E               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6014  0037C4  0E90               	movlw	low _Led3Pulse
  6015  0037C6  6F8F               	movwf	LedStateMachine@LedPulse& (0+255),b
  6016  0037C8  0E03               	movlw	high _Led3Pulse
  6017  0037CA  6F90               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6018  0037CC  0E03               	movlw	3
  6019  0037CE  EC2B  F021         	call	_LedStateMachine
  6020  0037D2  0100               	movlb	0	; () banked
  6021  0037D4  6F94               	movwf	??_Led_MainTask& (0+255),b
  6022  0037D6  3B94               	swapf	??_Led_MainTask& (0+255),f,b
  6023  0037D8  4794               	rlncf	??_Led_MainTask& (0+255),f,b
  6024  0037DA  4794               	rlncf	??_Led_MainTask& (0+255),f,b
  6025  0037DC  5083               	movf	3971,w,c	;volatile
  6026  0037DE  1994               	xorwf	??_Led_MainTask& (0+255),w,b
  6027  0037E0  0BBF               	andlw	-65
  6028  0037E2  1994               	xorwf	??_Led_MainTask& (0+255),w,b
  6029  0037E4  6E83               	movwf	3971,c	;volatile
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;led.c: 326: }
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;led.c: 325: break;
  6036                           
  6037                           ;led.c: 324: default:
  6038                           
  6039                           ;led.c: 321: break;
  6040  0037E6  0012               	return	
  6041  0037E8                     l2078:
  6042                           
  6043                           ; BSR set to: 0
  6044  0037E8  0100               	movlb	0	; () banked
  6045  0037EA  51D2               	movf	_SystemState& (0+255),w,b
  6046                           
  6047                           ; Switch size 1, requested type "space"
  6048                           ; Number of cases is 2, Range of values is 0 to 1
  6049                           ; switch strategies available:
  6050                           ; Name         Instructions Cycles
  6051                           ; simple_byte            7     4 (average)
  6052                           ;	Chosen strategy is simple_byte
  6053  0037EC  0A00               	xorlw	0	; case 0
  6054  0037EE  B4D8               	btfsc	status,2,c
  6055  0037F0  D79F               	goto	l2079
  6056  0037F2  0A01               	xorlw	1	; case 1
  6057  0037F4  A4D8               	btfss	status,2,c
  6058  0037F6  0012               	return	
  6059  0037F8  D7A2               	goto	l2081
  6060  0037FA                     __end_of_Led_MainTask:
  6061                           	opt stack 0
  6062                           tosu	equ	0xFFF
  6063                           tosh	equ	0xFFE
  6064                           tosl	equ	0xFFD
  6065                           pclath	equ	0xFFA
  6066                           tblptru	equ	0xFF8
  6067                           tblptrh	equ	0xFF7
  6068                           tblptrl	equ	0xFF6
  6069                           tablat	equ	0xFF5
  6070                           prodh	equ	0xFF4
  6071                           prodl	equ	0xFF3
  6072                           intcon	equ	0xFF2
  6073                           intcon2	equ	0xFF1
  6074                           intcon3	equ	0xFF0
  6075                           postinc0	equ	0xFEE
  6076                           plusw0	equ	0xFEB
  6077                           wreg	equ	0xFE8
  6078                           postinc1	equ	0xFE6
  6079                           postdec1	equ	0xFE5
  6080                           plusw1	equ	0xFE3
  6081                           fsr1h	equ	0xFE2
  6082                           fsr1l	equ	0xFE1
  6083                           indf2	equ	0xFDF
  6084                           postinc2	equ	0xFDE
  6085                           postdec2	equ	0xFDD
  6086                           plusw2	equ	0xFDB
  6087                           fsr2h	equ	0xFDA
  6088                           fsr2l	equ	0xFD9
  6089                           status	equ	0xFD8
  6090                           
  6091 ;; *************** function _UsbDevice_MainTask *****************
  6092 ;; Defined at:
  6093 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  Options         1    wreg     unsigned char 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  Options         1    0[COMRAM] unsigned char 
  6098 ;; Return value:  Size  Location     Type
  6099 ;;                  1    wreg      void 
  6100 ;; Registers used:
  6101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/0
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6111 ;;Total ram usage:        0 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; Hardware stack levels required when called:   20
  6114 ;; This function calls:
  6115 ;;		_CDCTxService
  6116 ;;		_USBDeviceInit
  6117 ;;		_USBDeviceTasks
  6118 ;; This function is called by:
  6119 ;;		_InitializeTasks
  6120 ;;		_ScheduleTasks
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text20
  6125  005AAC                     __ptext20:
  6126                           	opt stack 0
  6127  005AAC                     _UsbDevice_MainTask:
  6128                           	opt stack 8
  6129                           
  6130                           ;usb_device_mgr.c: 74: switch (SystemState)
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;incstack = 0
  6134  005AAC  D008               	goto	l1971
  6135  005AAE                     
  6136                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6137  005AAE  ECFF  F00F         	call	_USBDeviceInit	;wreg free
  6138                           
  6139                           ;usb_device_mgr.c: 80: ;
  6140                           ;usb_device_mgr.c: 81: break;
  6141  005AB2  0012               	return	
  6142  005AB4                     
  6143                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6144  005AB4  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6145                           
  6146                           ;usb_device_mgr.c: 90: CDCTxService();
  6147  005AB8  ECF9  F011         	call	_CDCTxService	;wreg free
  6148                           
  6149                           ;usb_device_mgr.c: 101: }
  6150                           
  6151                           ;usb_device_mgr.c: 100: break;
  6152                           
  6153                           ;usb_device_mgr.c: 99: default:
  6154                           
  6155                           ;usb_device_mgr.c: 96: break;
  6156  005ABC  0012               	return	
  6157  005ABE                     l1971:
  6158  005ABE  0100               	movlb	0	; () banked
  6159  005AC0  51D2               	movf	_SystemState& (0+255),w,b
  6160                           
  6161                           ; Switch size 1, requested type "space"
  6162                           ; Number of cases is 2, Range of values is 0 to 1
  6163                           ; switch strategies available:
  6164                           ; Name         Instructions Cycles
  6165                           ; simple_byte            7     4 (average)
  6166                           ;	Chosen strategy is simple_byte
  6167  005AC2  0A00               	xorlw	0	; case 0
  6168  005AC4  B4D8               	btfsc	status,2,c
  6169  005AC6  D7F3               	goto	l1972
  6170  005AC8  0A01               	xorlw	1	; case 1
  6171  005ACA  A4D8               	btfss	status,2,c
  6172  005ACC  0012               	return	
  6173  005ACE  D7F2               	goto	l1974
  6174  005AD0                     __end_of_UsbDevice_MainTask:
  6175                           	opt stack 0
  6176                           tosu	equ	0xFFF
  6177                           tosh	equ	0xFFE
  6178                           tosl	equ	0xFFD
  6179                           pclath	equ	0xFFA
  6180                           tblptru	equ	0xFF8
  6181                           tblptrh	equ	0xFF7
  6182                           tblptrl	equ	0xFF6
  6183                           tablat	equ	0xFF5
  6184                           prodh	equ	0xFF4
  6185                           prodl	equ	0xFF3
  6186                           intcon	equ	0xFF2
  6187                           intcon2	equ	0xFF1
  6188                           intcon3	equ	0xFF0
  6189                           postinc0	equ	0xFEE
  6190                           plusw0	equ	0xFEB
  6191                           wreg	equ	0xFE8
  6192                           postinc1	equ	0xFE6
  6193                           postdec1	equ	0xFE5
  6194                           plusw1	equ	0xFE3
  6195                           fsr1h	equ	0xFE2
  6196                           fsr1l	equ	0xFE1
  6197                           indf2	equ	0xFDF
  6198                           postinc2	equ	0xFDE
  6199                           postdec2	equ	0xFDD
  6200                           plusw2	equ	0xFDB
  6201                           fsr2h	equ	0xFDA
  6202                           fsr2l	equ	0xFD9
  6203                           status	equ	0xFD8
  6204                           
  6205 ;; *************** function _MdmHttp_MainTask *****************
  6206 ;; Defined at:
  6207 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  Options         1    wreg     unsigned char 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  Options         1    0[COMRAM] unsigned char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      void 
  6214 ;; Registers used:
  6215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6225 ;;Total ram usage:        0 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; Hardware stack levels required when called:   15
  6228 ;; This function calls:
  6229 ;;		_HttpGetMethod
  6230 ;;		_InitGprsNetwork
  6231 ;; This function is called by:
  6232 ;;		_InitializeTasks
  6233 ;;		_ScheduleTasks
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text21
  6238  0053B6                     __ptext21:
  6239                           	opt stack 0
  6240  0053B6                     _MdmHttp_MainTask:
  6241                           	opt stack 13
  6242                           
  6243                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6244                           
  6245                           ;incstack = 0
  6246  0053B6  D019               	goto	l1270
  6247  0053B8                     
  6248                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6249  0053B8  0E03               	movlw	3
  6250  0053BA  0100               	movlb	0	; () banked
  6251  0053BC  19CF               	xorwf	_MdmStatus& (0+255),w,b
  6252  0053BE  A4D8               	btfss	status,2,c
  6253  0053C0  0012               	return	
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;mdm_gsm_gprs_http.c: 570: {
  6257                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6258  0053C2  C2D6  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6259  0053C6  C2D7  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6260  0053CA  C1F1  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6261  0053CE  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6262  0053D2  0101               	movlb	1	; () banked
  6263  0053D4  6FF0               	movwf	_GprsNetworkSts& (0+255),b
  6264                           
  6265                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6266  0053D6  0EAD               	movlw	low _HttpGetDataLocal
  6267  0053D8  0100               	movlb	0	; () banked
  6268  0053DA  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6269  0053DC  0E03               	movlw	high _HttpGetDataLocal
  6270  0053DE  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6271  0053E0  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6272  0053E4  0101               	movlb	1	; () banked
  6273  0053E6  6FEF               	movwf	_HttpGetMethodSts& (0+255),b
  6274                           
  6275                           ; BSR set to: 1
  6276                           ;mdm_gsm_gprs_http.c: 581: }
  6277                           
  6278                           ; BSR set to: 1
  6279                           ;mdm_gsm_gprs_http.c: 580: break;
  6280                           
  6281                           ;mdm_gsm_gprs_http.c: 579: default:
  6282                           
  6283                           ; BSR set to: 1
  6284                           ;mdm_gsm_gprs_http.c: 575: }
  6285                           ;mdm_gsm_gprs_http.c: 576: break;
  6286  0053E8  0012               	return	
  6287  0053EA                     l1270:
  6288                           
  6289                           ; BSR set to: 1
  6290  0053EA  0100               	movlb	0	; () banked
  6291  0053EC  51D2               	movf	_SystemState& (0+255),w,b
  6292                           
  6293                           ; Switch size 1, requested type "space"
  6294                           ; Number of cases is 2, Range of values is 0 to 1
  6295                           ; switch strategies available:
  6296                           ; Name         Instructions Cycles
  6297                           ; simple_byte            7     4 (average)
  6298                           ;	Chosen strategy is simple_byte
  6299  0053EE  0A00               	xorlw	0	; case 0
  6300  0053F0  B4D8               	btfsc	status,2,c
  6301  0053F2  0012               	return	
  6302  0053F4  0A01               	xorlw	1	; case 1
  6303  0053F6  A4D8               	btfss	status,2,c
  6304  0053F8  0012               	return	
  6305  0053FA  D7DE               	goto	l1273
  6306  0053FC                     __end_of_MdmHttp_MainTask:
  6307                           	opt stack 0
  6308                           tosu	equ	0xFFF
  6309                           tosh	equ	0xFFE
  6310                           tosl	equ	0xFFD
  6311                           pclath	equ	0xFFA
  6312                           tblptru	equ	0xFF8
  6313                           tblptrh	equ	0xFF7
  6314                           tblptrl	equ	0xFF6
  6315                           tablat	equ	0xFF5
  6316                           prodh	equ	0xFF4
  6317                           prodl	equ	0xFF3
  6318                           intcon	equ	0xFF2
  6319                           intcon2	equ	0xFF1
  6320                           intcon3	equ	0xFF0
  6321                           postinc0	equ	0xFEE
  6322                           plusw0	equ	0xFEB
  6323                           wreg	equ	0xFE8
  6324                           postinc1	equ	0xFE6
  6325                           postdec1	equ	0xFE5
  6326                           plusw1	equ	0xFE3
  6327                           fsr1h	equ	0xFE2
  6328                           fsr1l	equ	0xFE1
  6329                           indf2	equ	0xFDF
  6330                           postinc2	equ	0xFDE
  6331                           postdec2	equ	0xFDD
  6332                           plusw2	equ	0xFDB
  6333                           fsr2h	equ	0xFDA
  6334                           fsr2l	equ	0xFD9
  6335                           status	equ	0xFD8
  6336                           
  6337 ;; *************** function _Mdm_MainTask *****************
  6338 ;; Defined at:
  6339 ;;		line 734 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  Options         1    wreg     unsigned char 
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;  Options         1    0[COMRAM] unsigned char 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  1    wreg      void 
  6346 ;; Registers used:
  6347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6357 ;;Total ram usage:        0 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:   15
  6360 ;; This function calls:
  6361 ;;		_CheckModem
  6362 ;;		_ConfigureModem
  6363 ;;		_GetSmsSm
  6364 ;;		_ModemEvtParser
  6365 ;;		_SendSmsSm
  6366 ;;		_TurnOnModem
  6367 ;;		_UartSetConfig
  6368 ;;		_Uart_InitUartModule
  6369 ;; This function is called by:
  6370 ;;		_InitializeTasks
  6371 ;;		_ScheduleTasks
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text22
  6376  005236                     __ptext22:
  6377                           	opt stack 0
  6378  005236                     _Mdm_MainTask:
  6379                           	opt stack 13
  6380                           
  6381                           ;mdm_gsm_gprs.c: 736: switch (SystemState)
  6382                           
  6383                           ;incstack = 0
  6384  005236  D01E               	goto	l1093
  6385  005238                     
  6386                           ;mdm_gsm_gprs.c: 741: UartSetConfig();
  6387  005238  EC9A  F027         	call	_UartSetConfig	;wreg free
  6388                           
  6389                           ;mdm_gsm_gprs.c: 743: Uart_InitUartModule(1,&UartConfig);
  6390  00523C  0E26               	movlw	low _UartConfig
  6391  00523E  0100               	movlb	0	; () banked
  6392  005240  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6393  005242  0E03               	movlw	high _UartConfig
  6394  005244  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6395  005246  0E01               	movlw	1
  6396  005248  EC5E  F005         	call	_Uart_InitUartModule
  6397                           
  6398                           ;mdm_gsm_gprs.c: 744: break;
  6399  00524C  0012               	return	
  6400  00524E                     
  6401                           ;mdm_gsm_gprs.c: 749: CheckModem();
  6402  00524E  EC9C  F012         	call	_CheckModem	;wreg free
  6403                           
  6404                           ;mdm_gsm_gprs.c: 751: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6405  005252  042B               	decf	_ComChecCompleted,w,c
  6406  005254  A4D8               	btfss	status,2,c
  6407  005256  D005               	goto	l1097
  6408  005258  0100               	movlb	0	; () banked
  6409  00525A  51CF               	movf	_MdmStatus& (0+255),w,b
  6410  00525C  B4D8               	btfsc	status,2,c
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;mdm_gsm_gprs.c: 752: {
  6414                           ;mdm_gsm_gprs.c: 754: TurnOnModem();
  6415  00525E  ECFE  F029         	call	_TurnOnModem	;wreg free
  6416  005262                     l1097:
  6417                           
  6418                           ;mdm_gsm_gprs.c: 755: }
  6419                           ;mdm_gsm_gprs.c: 757: ConfigureModem();
  6420  005262  EC63  F01C         	call	_ConfigureModem	;wreg free
  6421                           
  6422                           ;mdm_gsm_gprs.c: 759: ModemEvtParser();
  6423  005266  EC20  F016         	call	_ModemEvtParser	;wreg free
  6424                           
  6425                           ;mdm_gsm_gprs.c: 761: GetSmsSm();
  6426  00526A  EC2D  F017         	call	_GetSmsSm	;wreg free
  6427                           
  6428                           ;mdm_gsm_gprs.c: 763: SendSmsSm();
  6429  00526E  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6430                           
  6431                           ;mdm_gsm_gprs.c: 769: }
  6432                           
  6433                           ;mdm_gsm_gprs.c: 768: break;
  6434                           
  6435                           ;mdm_gsm_gprs.c: 767: default:
  6436                           
  6437                           ;mdm_gsm_gprs.c: 764: break;
  6438  005272  0012               	return	
  6439  005274                     l1093:
  6440  005274  0100               	movlb	0	; () banked
  6441  005276  51D2               	movf	_SystemState& (0+255),w,b
  6442                           
  6443                           ; Switch size 1, requested type "space"
  6444                           ; Number of cases is 2, Range of values is 0 to 1
  6445                           ; switch strategies available:
  6446                           ; Name         Instructions Cycles
  6447                           ; simple_byte            7     4 (average)
  6448                           ;	Chosen strategy is simple_byte
  6449  005278  0A00               	xorlw	0	; case 0
  6450  00527A  B4D8               	btfsc	status,2,c
  6451  00527C  D7DD               	goto	l1094
  6452  00527E  0A01               	xorlw	1	; case 1
  6453  005280  A4D8               	btfss	status,2,c
  6454  005282  0012               	return	
  6455  005284  D7E4               	goto	l1096
  6456  005286                     __end_of_Mdm_MainTask:
  6457                           	opt stack 0
  6458                           tosu	equ	0xFFF
  6459                           tosh	equ	0xFFE
  6460                           tosl	equ	0xFFD
  6461                           pclath	equ	0xFFA
  6462                           tblptru	equ	0xFF8
  6463                           tblptrh	equ	0xFF7
  6464                           tblptrl	equ	0xFF6
  6465                           tablat	equ	0xFF5
  6466                           prodh	equ	0xFF4
  6467                           prodl	equ	0xFF3
  6468                           intcon	equ	0xFF2
  6469                           intcon2	equ	0xFF1
  6470                           intcon3	equ	0xFF0
  6471                           postinc0	equ	0xFEE
  6472                           plusw0	equ	0xFEB
  6473                           wreg	equ	0xFE8
  6474                           postinc1	equ	0xFE6
  6475                           postdec1	equ	0xFE5
  6476                           plusw1	equ	0xFE3
  6477                           fsr1h	equ	0xFE2
  6478                           fsr1l	equ	0xFE1
  6479                           indf2	equ	0xFDF
  6480                           postinc2	equ	0xFDE
  6481                           postdec2	equ	0xFDD
  6482                           plusw2	equ	0xFDB
  6483                           fsr2h	equ	0xFDA
  6484                           fsr2l	equ	0xFD9
  6485                           status	equ	0xFD8
  6486                           
  6487 ;; *************** function _I2cSlv_MainTask *****************
  6488 ;; Defined at:
  6489 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  Options         1    wreg     unsigned char 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  Options         1    0[COMRAM] unsigned char 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      void 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6507 ;;Total ram usage:        0 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:   14
  6510 ;; This function calls:
  6511 ;;		_I2cSendMsgSm
  6512 ;;		_I2cSetConfig
  6513 ;;		_I2c_InitI2cModule
  6514 ;;		_OsAlrm_SetOsAlarm
  6515 ;; This function is called by:
  6516 ;;		_InitializeTasks
  6517 ;;		_ScheduleTasks
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text23
  6522  005094                     __ptext23:
  6523                           	opt stack 0
  6524  005094                     _I2cSlv_MainTask:
  6525                           	opt stack 14
  6526                           
  6527                           ;i2c_slv.c: 217: switch (SystemState)
  6528                           
  6529                           ;incstack = 0
  6530  005094  D020               	goto	l1383
  6531  005096                     
  6532                           ;i2c_slv.c: 222: I2cSetConfig();
  6533  005096  ECEF  F02C         	call	_I2cSetConfig	;wreg free
  6534                           
  6535                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6536  00509A  0E5C               	movlw	low _I2cConfig
  6537  00509C  0100               	movlb	0	; () banked
  6538  00509E  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6539  0050A0  0E03               	movlw	high _I2cConfig
  6540  0050A2  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6541  0050A4  EC68  F025         	call	_I2c_InitI2cModule	;wreg free
  6542                           
  6543                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6544  0050A8  0E00               	movlw	0
  6545  0050AA  0100               	movlb	0	; () banked
  6546  0050AC  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6547  0050AE  0E00               	movlw	0
  6548  0050B0  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6549  0050B2  0E32               	movlw	50
  6550  0050B4  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6551  0050B6  0E00               	movlw	0
  6552  0050B8  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6553  0050BA  0E00               	movlw	0
  6554  0050BC  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6555  0050BE  0E00               	movlw	0
  6556  0050C0  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6557  0050C2  0E7C               	movlw	low _I2cDummyTx
  6558  0050C4  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6559  0050C6  0E5C               	movlw	high _I2cDummyTx
  6560  0050C8  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6561  0050CA  ECF5  F01D         	call	_OsAlrm_SetOsAlarm	;wreg free
  6562                           
  6563                           ;i2c_slv.c: 227: break;
  6564  0050CE  0012               	return	
  6565  0050D0                     
  6566                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6567  0050D0  EC59  F01E         	call	_I2cSendMsgSm	;wreg free
  6568                           
  6569                           ;i2c_slv.c: 238: }
  6570                           
  6571                           ;i2c_slv.c: 237: break;
  6572                           
  6573                           ;i2c_slv.c: 236: default:
  6574                           
  6575                           ;i2c_slv.c: 233: break;
  6576  0050D4  0012               	return	
  6577  0050D6                     l1383:
  6578  0050D6  0100               	movlb	0	; () banked
  6579  0050D8  51D2               	movf	_SystemState& (0+255),w,b
  6580                           
  6581                           ; Switch size 1, requested type "space"
  6582                           ; Number of cases is 2, Range of values is 0 to 1
  6583                           ; switch strategies available:
  6584                           ; Name         Instructions Cycles
  6585                           ; simple_byte            7     4 (average)
  6586                           ;	Chosen strategy is simple_byte
  6587  0050DA  0A00               	xorlw	0	; case 0
  6588  0050DC  B4D8               	btfsc	status,2,c
  6589  0050DE  D7DB               	goto	l1384
  6590  0050E0  0A01               	xorlw	1	; case 1
  6591  0050E2  A4D8               	btfss	status,2,c
  6592  0050E4  0012               	return	
  6593  0050E6  D7F4               	goto	l1386
  6594  0050E8                     __end_of_I2cSlv_MainTask:
  6595                           	opt stack 0
  6596                           tosu	equ	0xFFF
  6597                           tosh	equ	0xFFE
  6598                           tosl	equ	0xFFD
  6599                           pclath	equ	0xFFA
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           prodh	equ	0xFF4
  6605                           prodl	equ	0xFF3
  6606                           intcon	equ	0xFF2
  6607                           intcon2	equ	0xFF1
  6608                           intcon3	equ	0xFF0
  6609                           postinc0	equ	0xFEE
  6610                           plusw0	equ	0xFEB
  6611                           wreg	equ	0xFE8
  6612                           postinc1	equ	0xFE6
  6613                           postdec1	equ	0xFE5
  6614                           plusw1	equ	0xFE3
  6615                           fsr1h	equ	0xFE2
  6616                           fsr1l	equ	0xFE1
  6617                           indf2	equ	0xFDF
  6618                           postinc2	equ	0xFDE
  6619                           postdec2	equ	0xFDD
  6620                           plusw2	equ	0xFDB
  6621                           fsr2h	equ	0xFDA
  6622                           fsr2l	equ	0xFD9
  6623                           status	equ	0xFD8
  6624                           
  6625 ;; *************** function _Mdm_DrvMainFn *****************
  6626 ;; Defined at:
  6627 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  Options         1    wreg     unsigned char 
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;  Options         1    0[COMRAM] unsigned char 
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  1    wreg      void 
  6634 ;; Registers used:
  6635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6645 ;;Total ram usage:        0 bytes
  6646 ;; Hardware stack levels used:    1
  6647 ;; Hardware stack levels required when called:   13
  6648 ;; This function calls:
  6649 ;;		_MdmCntSm
  6650 ;; This function is called by:
  6651 ;;		_InitializeTasks
  6652 ;;		_ScheduleTasks
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text24
  6657  005E4C                     __ptext24:
  6658                           	opt stack 0
  6659  005E4C                     _Mdm_DrvMainFn:
  6660                           	opt stack 15
  6661                           
  6662                           ;mdm_drv.c: 307: MdmCntSm();
  6663                           
  6664                           ;incstack = 0
  6665  005E4C  ECD7  F020         	call	_MdmCntSm	;wreg free
  6666  005E50  0012               	return		;funcret
  6667  005E52                     __end_of_Mdm_DrvMainFn:
  6668                           	opt stack 0
  6669                           tosu	equ	0xFFF
  6670                           tosh	equ	0xFFE
  6671                           tosl	equ	0xFFD
  6672                           pclath	equ	0xFFA
  6673                           tblptru	equ	0xFF8
  6674                           tblptrh	equ	0xFF7
  6675                           tblptrl	equ	0xFF6
  6676                           tablat	equ	0xFF5
  6677                           prodh	equ	0xFF4
  6678                           prodl	equ	0xFF3
  6679                           intcon	equ	0xFF2
  6680                           intcon2	equ	0xFF1
  6681                           intcon3	equ	0xFF0
  6682                           postinc0	equ	0xFEE
  6683                           plusw0	equ	0xFEB
  6684                           wreg	equ	0xFE8
  6685                           postinc1	equ	0xFE6
  6686                           postdec1	equ	0xFE5
  6687                           plusw1	equ	0xFE3
  6688                           fsr1h	equ	0xFE2
  6689                           fsr1l	equ	0xFE1
  6690                           indf2	equ	0xFDF
  6691                           postinc2	equ	0xFDE
  6692                           postdec2	equ	0xFDD
  6693                           plusw2	equ	0xFDB
  6694                           fsr2h	equ	0xFDA
  6695                           fsr2l	equ	0xFD9
  6696                           status	equ	0xFD8
  6697                           
  6698 ;; *************** function _Wdg_MainTask *****************
  6699 ;; Defined at:
  6700 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  Options         1    wreg     unsigned char 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  Options         1    0[COMRAM] unsigned char 
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  1    wreg      void 
  6707 ;; Registers used:
  6708 ;;		wreg, status,2, status,0, cstack
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6718 ;;Total ram usage:        0 bytes
  6719 ;; Hardware stack levels used:    1
  6720 ;; Hardware stack levels required when called:   12
  6721 ;; This function calls:
  6722 ;;		_Mcu_ClearWdg
  6723 ;;		_Mcu_SetWdgSts
  6724 ;; This function is called by:
  6725 ;;		_InitializeTasks
  6726 ;;		_ScheduleTasks
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           	psect	text25
  6731  005B18                     __ptext25:
  6732                           	opt stack 0
  6733  005B18                     _Wdg_MainTask:
  6734                           	opt stack 16
  6735                           
  6736                           ;wdg.c: 75: switch (SystemState)
  6737                           
  6738                           ;incstack = 0
  6739  005B18  D007               	goto	l2454
  6740  005B1A                     
  6741                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  6742  005B1A  0E01               	movlw	1
  6743  005B1C  ECC0  F02E         	call	_Mcu_SetWdgSts
  6744                           
  6745                           ;wdg.c: 81: break;
  6746  005B20  0012               	return	
  6747  005B22                     
  6748                           ;wdg.c: 86: Mcu_ClearWdg();
  6749  005B22  EC29  F02F         	call	_Mcu_ClearWdg	;wreg free
  6750                           
  6751                           ;wdg.c: 92: }
  6752                           
  6753                           ;wdg.c: 91: break;
  6754                           
  6755                           ;wdg.c: 90: default:
  6756                           
  6757                           ;wdg.c: 87: break;
  6758  005B26  0012               	return	
  6759  005B28                     l2454:
  6760  005B28  0100               	movlb	0	; () banked
  6761  005B2A  51D2               	movf	_SystemState& (0+255),w,b
  6762                           
  6763                           ; Switch size 1, requested type "space"
  6764                           ; Number of cases is 2, Range of values is 0 to 1
  6765                           ; switch strategies available:
  6766                           ; Name         Instructions Cycles
  6767                           ; simple_byte            7     4 (average)
  6768                           ;	Chosen strategy is simple_byte
  6769  005B2C  0A00               	xorlw	0	; case 0
  6770  005B2E  B4D8               	btfsc	status,2,c
  6771  005B30  D7F4               	goto	l2455
  6772  005B32  0A01               	xorlw	1	; case 1
  6773  005B34  A4D8               	btfss	status,2,c
  6774  005B36  0012               	return	
  6775  005B38  D7F4               	goto	l2457
  6776  005B3A                     __end_of_Wdg_MainTask:
  6777                           	opt stack 0
  6778                           tosu	equ	0xFFF
  6779                           tosh	equ	0xFFE
  6780                           tosl	equ	0xFFD
  6781                           pclath	equ	0xFFA
  6782                           tblptru	equ	0xFF8
  6783                           tblptrh	equ	0xFF7
  6784                           tblptrl	equ	0xFF6
  6785                           tablat	equ	0xFF5
  6786                           prodh	equ	0xFF4
  6787                           prodl	equ	0xFF3
  6788                           intcon	equ	0xFF2
  6789                           intcon2	equ	0xFF1
  6790                           intcon3	equ	0xFF0
  6791                           postinc0	equ	0xFEE
  6792                           plusw0	equ	0xFEB
  6793                           wreg	equ	0xFE8
  6794                           postinc1	equ	0xFE6
  6795                           postdec1	equ	0xFE5
  6796                           plusw1	equ	0xFE3
  6797                           fsr1h	equ	0xFE2
  6798                           fsr1l	equ	0xFE1
  6799                           indf2	equ	0xFDF
  6800                           postinc2	equ	0xFDE
  6801                           postdec2	equ	0xFDD
  6802                           plusw2	equ	0xFDB
  6803                           fsr2h	equ	0xFDA
  6804                           fsr2l	equ	0xFD9
  6805                           status	equ	0xFD8
  6806                           
  6807 ;; *************** function _Mcu_SetWdgSts *****************
  6808 ;; Defined at:
  6809 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  WdgSts          1    wreg     unsigned char 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  1    wreg      void 
  6816 ;; Registers used:
  6817 ;;		wreg
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6826 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6827 ;;Total ram usage:        1 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:   11
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		_Wdg_MainTask
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text26
  6838  005D80                     __ptext26:
  6839                           	opt stack 0
  6840  005D80                     _Mcu_SetWdgSts:
  6841                           	opt stack 16
  6842                           
  6843                           ;incstack = 0
  6844                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  6845  005D80  0100               	movlb	0	; () banked
  6846  005D82  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  6847                           
  6848                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  6849  005D84  0100               	movlb	0	; () banked
  6850  005D86  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  6851  005D88  D002               	bra	u7855
  6852  005D8A  90C0               	bcf	4032,0,c	;volatile
  6853  005D8C  D001               	bra	u7856
  6854  005D8E                     u7855:
  6855  005D8E  80C0               	bsf	4032,0,c	;volatile
  6856  005D90                     u7856:
  6857  005D90  0012               	return		;funcret
  6858  005D92                     __end_of_Mcu_SetWdgSts:
  6859                           	opt stack 0
  6860                           tosu	equ	0xFFF
  6861                           tosh	equ	0xFFE
  6862                           tosl	equ	0xFFD
  6863                           pclath	equ	0xFFA
  6864                           tblptru	equ	0xFF8
  6865                           tblptrh	equ	0xFF7
  6866                           tblptrl	equ	0xFF6
  6867                           tablat	equ	0xFF5
  6868                           prodh	equ	0xFF4
  6869                           prodl	equ	0xFF3
  6870                           intcon	equ	0xFF2
  6871                           intcon2	equ	0xFF1
  6872                           intcon3	equ	0xFF0
  6873                           postinc0	equ	0xFEE
  6874                           plusw0	equ	0xFEB
  6875                           wreg	equ	0xFE8
  6876                           postinc1	equ	0xFE6
  6877                           postdec1	equ	0xFE5
  6878                           plusw1	equ	0xFE3
  6879                           fsr1h	equ	0xFE2
  6880                           fsr1l	equ	0xFE1
  6881                           indf2	equ	0xFDF
  6882                           postinc2	equ	0xFDE
  6883                           postdec2	equ	0xFDD
  6884                           plusw2	equ	0xFDB
  6885                           fsr2h	equ	0xFDA
  6886                           fsr2l	equ	0xFD9
  6887                           status	equ	0xFD8
  6888                           
  6889 ;; *************** function _Mcu_ClearWdg *****************
  6890 ;; Defined at:
  6891 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;		None
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;		None
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  1    wreg      void 
  6898 ;; Registers used:
  6899 ;;		None
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6909 ;;Total ram usage:        0 bytes
  6910 ;; Hardware stack levels used:    1
  6911 ;; Hardware stack levels required when called:   11
  6912 ;; This function calls:
  6913 ;;		Nothing
  6914 ;; This function is called by:
  6915 ;;		_Wdg_MainTask
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           	psect	text27
  6920  005E52                     __ptext27:
  6921                           	opt stack 0
  6922  005E52                     _Mcu_ClearWdg:
  6923                           	opt stack 16
  6924                           
  6925                           ;incstack = 0
  6926  005E52  0004               	clrwdt		;# 
  6927  005E54  0012               	return		;funcret
  6928  005E56                     __end_of_Mcu_ClearWdg:
  6929                           	opt stack 0
  6930                           tosu	equ	0xFFF
  6931                           tosh	equ	0xFFE
  6932                           tosl	equ	0xFFD
  6933                           pclath	equ	0xFFA
  6934                           tblptru	equ	0xFF8
  6935                           tblptrh	equ	0xFF7
  6936                           tblptrl	equ	0xFF6
  6937                           tablat	equ	0xFF5
  6938                           prodh	equ	0xFF4
  6939                           prodl	equ	0xFF3
  6940                           intcon	equ	0xFF2
  6941                           intcon2	equ	0xFF1
  6942                           intcon3	equ	0xFF0
  6943                           postinc0	equ	0xFEE
  6944                           plusw0	equ	0xFEB
  6945                           wreg	equ	0xFE8
  6946                           postinc1	equ	0xFE6
  6947                           postdec1	equ	0xFE5
  6948                           plusw1	equ	0xFE3
  6949                           fsr1h	equ	0xFE2
  6950                           fsr1l	equ	0xFE1
  6951                           indf2	equ	0xFDF
  6952                           postinc2	equ	0xFDE
  6953                           postdec2	equ	0xFDD
  6954                           plusw2	equ	0xFDB
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8
  6958                           
  6959 ;; *************** function _USBDeviceTasks *****************
  6960 ;; Defined at:
  6961 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;		None
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  i               1   56[BANK0 ] unsigned char 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      void 
  6968 ;; Registers used:
  6969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6978 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6979 ;;Total ram usage:        1 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; Hardware stack levels required when called:   19
  6982 ;; This function calls:
  6983 ;;		_USBCtrlEPAllowStatusStage
  6984 ;;		_USBCtrlEPService
  6985 ;;		_USBDeviceInit
  6986 ;;		_USBIncrement1msInternalTimers
  6987 ;;		_USBStallHandler
  6988 ;;		_USBSuspend
  6989 ;;		_USBWakeFromSuspend
  6990 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6991 ;; This function is called by:
  6992 ;;		_UsbDevice_MainTask
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text28
  6997  001BAA                     __ptext28:
  6998                           	opt stack 0
  6999  001BAA                     _USBDeviceTasks:
  7000                           	opt stack 8
  7001                           
  7002                           ;usb_device.c: 562: }
  7003                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7004                           
  7005                           ; BSR set to: 0
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;usb_device.c: 561: return;
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7012                           
  7013                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7014                           
  7015                           ;usb_device.c: 529: UIE = 0;
  7016                           
  7017                           ;usb_device.c: 524: {
  7018                           ;usb_device.c: 526: UCON = 0;
  7019                           
  7020                           ;usb_device.c: 497: uint8_t i;
  7021                           ;usb_device.c: 523: if (1 != 1)
  7022                           
  7023                           ;incstack = 0
  7024  001BAA  0100               	movlb	0	; () banked
  7025  001BAC  51CB               	movf	_USBDeviceState& (0+255),w,b
  7026  001BAE  A4D8               	btfss	status,2,c
  7027  001BB0  D012               	goto	l1594
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;usb_device.c: 585: {
  7031                           ;usb_device.c: 587: UCON = 0;
  7032  001BB2  0E00               	movlw	0
  7033  001BB4  6E65               	movwf	3941,c	;volatile
  7034                           
  7035                           ;usb_device.c: 590: UIE = 0;
  7036  001BB6  0E00               	movlw	0
  7037  001BB8  010F               	movlb	15	; () banked
  7038  001BBA  6F36               	movwf	54,b	;volatile
  7039                           
  7040                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7041  001BBC  0E16               	movlw	22
  7042  001BBE  6F39               	movwf	57,b	;volatile
  7043  001BC0  0E9F               	movlw	159
  7044  001BC2  6F37               	movwf	55,b	;volatile
  7045  001BC4  0E7B               	movlw	123
  7046  001BC6  6F36               	movwf	54,b	;volatile
  7047                           
  7048                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7049  001BC8  D001               	goto	l1595
  7050  001BCA                     l1596:
  7051  001BCA  8665               	bsf	3941,3,c	;volatile
  7052  001BCC                     l1595:
  7053  001BCC  A665               	btfss	3941,3,c	;volatile
  7054  001BCE  D7FD               	goto	l1596
  7055                           
  7056                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7057  001BD0  0E01               	movlw	1
  7058  001BD2  0100               	movlb	0	; () banked
  7059  001BD4  6FCB               	movwf	_USBDeviceState& (0+255),b
  7060  001BD6                     l1594:
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;usb_device.c: 605: }
  7064                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7065                           
  7066                           ; BSR set to: 0
  7067  001BD6  05CB               	decf	_USBDeviceState& (0+255),w,b
  7068  001BD8  B4D8               	btfsc	status,2,c
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;usb_device.c: 609: {
  7072                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7073  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7074  001BDC  D00A               	goto	l1599
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;usb_device.c: 620: {
  7078                           ;usb_device.c: 626: {UIR = 0;};
  7079  001BDE  0E00               	movlw	0
  7080  001BE0  6E62               	movwf	3938,c	;volatile
  7081                           
  7082                           ;usb_device.c: 630: UIE=0;
  7083  001BE2  0E00               	movlw	0
  7084  001BE4  010F               	movlb	15	; () banked
  7085  001BE6  6F36               	movwf	54,b	;volatile
  7086                           
  7087                           ; BSR set to: 15
  7088                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7089  001BE8  8136               	bsf	54,0,b	;volatile
  7090                           
  7091                           ; BSR set to: 15
  7092                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7093  001BEA  8936               	bsf	54,4,b	;volatile
  7094                           
  7095                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7096  001BEC  0E02               	movlw	2
  7097  001BEE  0100               	movlb	0	; () banked
  7098  001BF0  6FCB               	movwf	_USBDeviceState& (0+255),b
  7099  001BF2                     l1599:
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;usb_device.c: 635: }
  7103                           ;usb_device.c: 636: }
  7104                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7105                           
  7106                           ; BSR set to: 0
  7107                           
  7108                           ; BSR set to: 0
  7109  001BF2  A462               	btfss	3938,2,c	;volatile
  7110  001BF4  D006               	goto	l1600
  7111                           
  7112                           ; BSR set to: 0
  7113  001BF6  010F               	movlb	15	; () banked
  7114  001BF8  A536               	btfss	54,2,b	;volatile
  7115  001BFA  D003               	goto	l1600
  7116                           
  7117                           ; BSR set to: 15
  7118                           ;usb_device.c: 653: {
  7119                           ;usb_device.c: 654: (UIR &= 0xFB);
  7120  001BFC  9462               	bcf	3938,2,c	;volatile
  7121                           
  7122                           ; BSR set to: 15
  7123                           ;usb_device.c: 658: USBWakeFromSuspend();
  7124  001BFE  ECA5  F02B         	call	_USBWakeFromSuspend	;wreg free
  7125  001C02                     l1600:
  7126                           
  7127                           ;usb_device.c: 660: }
  7128                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7129  001C02  A265               	btfss	3941,1,c	;volatile
  7130  001C04  D002               	goto	l1601
  7131                           
  7132                           ;usb_device.c: 666: {
  7133                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7134  001C06  98A1               	bcf	4001,4,c	;volatile
  7135                           
  7136                           ;usb_device.c: 668: return;
  7137  001C08  0012               	return	
  7138  001C0A                     l1601:
  7139                           
  7140                           ;usb_device.c: 669: }
  7141                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7142  001C0A  A062               	btfss	3938,0,c	;volatile
  7143  001C0C  D009               	goto	l1602
  7144  001C0E  010F               	movlb	15	; () banked
  7145  001C10  A136               	btfss	54,0,b	;volatile
  7146  001C12  D006               	goto	l1602
  7147                           
  7148                           ; BSR set to: 15
  7149                           ;usb_device.c: 682: {
  7150                           ;usb_device.c: 683: USBDeviceInit();
  7151  001C14  ECFF  F00F         	call	_USBDeviceInit	;wreg free
  7152                           
  7153                           ;usb_device.c: 687: ;
  7154                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7155  001C18  0E04               	movlw	4
  7156  001C1A  0100               	movlb	0	; () banked
  7157  001C1C  6FCB               	movwf	_USBDeviceState& (0+255),b
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;usb_device.c: 699: (UIR &= 0xFE);
  7161  001C1E  9062               	bcf	3938,0,c	;volatile
  7162  001C20                     l1602:
  7163                           
  7164                           ;usb_device.c: 700: }
  7165                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7166                           
  7167                           ; BSR set to: 0
  7168  001C20  A862               	btfss	3938,4,c	;volatile
  7169  001C22  D004               	goto	l1603
  7170  001C24  010F               	movlb	15	; () banked
  7171  001C26  B936               	btfsc	54,4,b	;volatile
  7172                           
  7173                           ; BSR set to: 15
  7174                           ;usb_device.c: 706: {
  7175                           ;usb_device.c: 712: USBSuspend();
  7176  001C28  EC2F  F02C         	call	_USBSuspend	;wreg free
  7177  001C2C                     l1603:
  7178                           
  7179                           ;usb_device.c: 714: }
  7180                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7181  001C2C  AC62               	btfss	3938,6,c	;volatile
  7182  001C2E  D01D               	goto	l1607
  7183                           
  7184                           ;usb_device.c: 727: {
  7185                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7186  001C30  010F               	movlb	15	; () banked
  7187  001C32  AD36               	btfss	54,6,b	;volatile
  7188  001C34  D00F               	goto	l1605
  7189                           
  7190                           ; BSR set to: 15
  7191                           ;usb_device.c: 730: {
  7192                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7193  001C36  0E00               	movlw	0
  7194  001C38  0100               	movlb	0	; () banked
  7195  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7196  001C3C  0E73               	movlw	115
  7197  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7198  001C40  0E00               	movlw	0
  7199  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7200  001C44  0E00               	movlw	0
  7201  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7202  001C48  0E00               	movlw	0
  7203  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7204  001C4C  0E01               	movlw	1
  7205  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7206  001C50  EC0E  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7207  001C54                     l1605:
  7208                           
  7209                           ;usb_device.c: 732: }
  7210                           ;usb_device.c: 733: (UIR &= 0xBF);
  7211  001C54  9C62               	bcf	3938,6,c	;volatile
  7212                           
  7213                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7214  001C56  EC9D  F02D         	call	_USBIncrement1msInternalTimers	;wreg free
  7215                           
  7216                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7217  001C5A  0100               	movlb	0	; () banked
  7218  001C5C  51C7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7219  001C5E  A4D8               	btfss	status,2,c
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;usb_device.c: 754: {
  7223                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7224  001C60  07C7               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;usb_device.c: 756: }
  7228                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7229                           
  7230                           ; BSR set to: 0
  7231  001C62  51C7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7232  001C64  B4D8               	btfsc	status,2,c
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;usb_device.c: 763: {
  7236                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7237  001C66  ECFD  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7238  001C6A                     l1607:
  7239                           
  7240                           ;usb_device.c: 765: }
  7241                           ;usb_device.c: 767: }
  7242                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7243  001C6A  AA62               	btfss	3938,5,c	;volatile
  7244  001C6C  D004               	goto	l1608
  7245  001C6E  010F               	movlb	15	; () banked
  7246  001C70  BB36               	btfsc	54,5,b	;volatile
  7247                           
  7248                           ; BSR set to: 15
  7249                           ;usb_device.c: 770: {
  7250                           ;usb_device.c: 771: USBStallHandler();
  7251  001C72  EC21  F02A         	call	_USBStallHandler	;wreg free
  7252  001C76                     l1608:
  7253                           
  7254                           ;usb_device.c: 772: }
  7255                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7256  001C76  A262               	btfss	3938,1,c	;volatile
  7257  001C78  D013               	goto	l1609
  7258  001C7A  010F               	movlb	15	; () banked
  7259  001C7C  A336               	btfss	54,1,b	;volatile
  7260  001C7E  D010               	goto	l1609
  7261                           
  7262                           ; BSR set to: 15
  7263                           ;usb_device.c: 775: {
  7264                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7265  001C80  0E7F               	movlw	127
  7266  001C82  0100               	movlb	0	; () banked
  7267  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7268  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7269  001C88  0E00               	movlw	0
  7270  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7271  001C8C  0E00               	movlw	0
  7272  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7273  001C90  0E00               	movlw	0
  7274  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7275  001C94  0E01               	movlw	1
  7276  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7277  001C98  EC0E  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7278                           
  7279                           ;usb_device.c: 777: {UEIR = 0;};
  7280  001C9C  0E00               	movlw	0
  7281  001C9E  6E63               	movwf	3939,c	;volatile
  7282  001CA0                     l1609:
  7283                           
  7284                           ;usb_device.c: 785: }
  7285                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7286  001CA0  0E04               	movlw	4
  7287  001CA2  0100               	movlb	0	; () banked
  7288  001CA4  61CB               	cpfslt	_USBDeviceState& (0+255),b
  7289  001CA6  D002               	goto	l1610
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;usb_device.c: 793: {
  7293                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7294  001CA8  98A1               	bcf	4001,4,c	;volatile
  7295                           
  7296                           ;usb_device.c: 795: return;
  7297  001CAA  0012               	return	
  7298  001CAC                     l1610:
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;usb_device.c: 796: }
  7302                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7303  001CAC  010F               	movlb	15	; () banked
  7304  001CAE  A736               	btfss	54,3,b	;volatile
  7305  001CB0  D03E               	goto	u12840
  7306                           
  7307                           ; BSR set to: 15
  7308                           ;usb_device.c: 802: {
  7309                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7310  001CB2  0E00               	movlw	0
  7311  001CB4  0100               	movlb	0	; () banked
  7312  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7313  001CB8                     l13485:
  7314                           
  7315                           ; BSR set to: 0
  7316  001CB8  0E03               	movlw	3
  7317  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7318  001CBC  D001               	goto	l1612
  7319  001CBE  D037               	goto	u12840
  7320  001CC0                     l1612:
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;usb_device.c: 804: {
  7324                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7325  001CC0  A662               	btfss	3938,3,c	;volatile
  7326  001CC2  D035               	goto	u12840
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;usb_device.c: 806: {
  7330                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7331  001CC4  CF64 F0D3          	movff	3940,_USTATcopy	;volatile
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7335  001CC8  31D3               	rrcf	_USTATcopy& (0+255),w,b
  7336  001CCA  32E8               	rrcf	wreg,f,c
  7337  001CCC  32E8               	rrcf	wreg,f,c
  7338  001CCE  0B0F               	andlw	15
  7339  001CD0  6FC8               	movwf	_endpoint_number& (0+255),b
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;usb_device.c: 811: (UIR &= 0xF7);
  7343  001CD2  9662               	bcf	3938,3,c	;volatile
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7347  001CD4  B5D3               	btfsc	_USTATcopy& (0+255),2,b
  7348  001CD6  D007               	goto	l1615
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;usb_device.c: 817: {
  7352                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7353  001CD8  51C8               	movf	_endpoint_number& (0+255),w,b
  7354  001CDA  0D01               	mullw	1
  7355  001CDC  0ECE               	movlw	low _ep_data_out
  7356  001CDE  24F3               	addwf	prodl,w,c
  7357  001CE0  6ED9               	movwf	fsr2l,c
  7358  001CE2  0E02               	movlw	high _ep_data_out
  7359  001CE4  D007               	goto	L4
  7360  001CE6                     l1615:
  7361                           
  7362                           ;usb_device.c: 820: else
  7363                           ;usb_device.c: 821: {
  7364                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7365                           
  7366                           ; BSR set to: 2
  7367  001CE6  0100               	movlb	0	; () banked
  7368  001CE8  51C8               	movf	_endpoint_number& (0+255),w,b
  7369  001CEA  0D01               	mullw	1
  7370  001CEC  0ED1               	movlw	low _ep_data_in
  7371  001CEE  24F3               	addwf	prodl,w,c
  7372  001CF0  6ED9               	movwf	fsr2l,c
  7373  001CF2  0E02               	movlw	high _ep_data_in
  7374  001CF4                     L4:
  7375  001CF4  20F4               	addwfc	prodh,w,c
  7376  001CF6  6EDA               	movwf	fsr2h,c
  7377  001CF8  0102               	movlb	2	; () banked
  7378  001CFA  70DF               	btg	indf2,0,c
  7379                           
  7380                           ; BSR set to: 2
  7381                           ;usb_device.c: 823: }
  7382                           ;usb_device.c: 828: if(endpoint_number == 0)
  7383                           
  7384                           ; BSR set to: 2
  7385  001CFC  0100               	movlb	0	; () banked
  7386  001CFE  51C8               	movf	_endpoint_number& (0+255),w,b
  7387  001D00  A4D8               	btfss	status,2,c
  7388  001D02  D003               	goto	l1617
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;usb_device.c: 829: {
  7392                           ;usb_device.c: 830: USBCtrlEPService();
  7393  001D04  EC00  F023         	call	_USBCtrlEPService	;wreg free
  7394                           
  7395                           ;usb_device.c: 831: }
  7396  001D08  D00F               	goto	l1619
  7397  001D0A                     l1617:
  7398                           
  7399                           ;usb_device.c: 832: else
  7400                           ;usb_device.c: 833: {
  7401                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7402  001D0A  0E00               	movlw	0
  7403  001D0C  0100               	movlb	0	; () banked
  7404  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7405  001D10  0E72               	movlw	114
  7406  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7407  001D14  0ED3               	movlw	low _USTATcopy
  7408  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7409  001D18  0E00               	movlw	high _USTATcopy
  7410  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7411  001D1C  0E00               	movlw	0
  7412  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7413  001D20  0E00               	movlw	0
  7414  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7415  001D24  EC0E  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7416  001D28                     l1619:
  7417  001D28  0100               	movlb	0	; () banked
  7418  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7419  001D2C  D7C5               	goto	l13485
  7420  001D2E                     u12840:
  7421                           
  7422                           ;usb_device.c: 840: }
  7423                           ;usb_device.c: 841: }
  7424                           ;usb_device.c: 842: }
  7425                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7426                           
  7427                           ; BSR set to: 0
  7428  001D2E  98A1               	bcf	4001,4,c	;volatile
  7429  001D30  0012               	return		;funcret
  7430  001D32                     __end_of_USBDeviceTasks:
  7431                           	opt stack 0
  7432                           tosu	equ	0xFFF
  7433                           tosh	equ	0xFFE
  7434                           tosl	equ	0xFFD
  7435                           pclath	equ	0xFFA
  7436                           tblptru	equ	0xFF8
  7437                           tblptrh	equ	0xFF7
  7438                           tblptrl	equ	0xFF6
  7439                           tablat	equ	0xFF5
  7440                           prodh	equ	0xFF4
  7441                           prodl	equ	0xFF3
  7442                           intcon	equ	0xFF2
  7443                           intcon2	equ	0xFF1
  7444                           intcon3	equ	0xFF0
  7445                           postinc0	equ	0xFEE
  7446                           plusw0	equ	0xFEB
  7447                           wreg	equ	0xFE8
  7448                           postinc1	equ	0xFE6
  7449                           postdec1	equ	0xFE5
  7450                           plusw1	equ	0xFE3
  7451                           fsr1h	equ	0xFE2
  7452                           fsr1l	equ	0xFE1
  7453                           indf2	equ	0xFDF
  7454                           postinc2	equ	0xFDE
  7455                           postdec2	equ	0xFDD
  7456                           plusw2	equ	0xFDB
  7457                           fsr2h	equ	0xFDA
  7458                           fsr2l	equ	0xFD9
  7459                           status	equ	0xFD8
  7460                           
  7461 ;; *************** function _USBWakeFromSuspend *****************
  7462 ;; Defined at:
  7463 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;		None
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;		None
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      void 
  7470 ;; Registers used:
  7471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7481 ;;Total ram usage:        0 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:   15
  7484 ;; This function calls:
  7485 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7486 ;; This function is called by:
  7487 ;;		_USBDeviceTasks
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text29
  7492  00574A                     __ptext29:
  7493                           	opt stack 0
  7494  00574A                     _USBWakeFromSuspend:
  7495                           	opt stack 11
  7496                           
  7497                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7498                           
  7499                           ;incstack = 0
  7500  00574A  0E00               	movlw	0
  7501  00574C  0101               	movlb	1	; () banked
  7502  00574E  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  7503                           
  7504                           ; BSR set to: 1
  7505                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7506  005750  0E00               	movlw	0
  7507  005752  0100               	movlb	0	; () banked
  7508  005754  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7509  005756  0E74               	movlw	116
  7510  005758  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7511  00575A  0E00               	movlw	0
  7512  00575C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7513  00575E  0E00               	movlw	0
  7514  005760  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7515  005762  0E00               	movlw	0
  7516  005764  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7517  005766  0E00               	movlw	0
  7518  005768  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7519  00576A  EC0E  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7520                           
  7521                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7522  00576E  9265               	bcf	3941,1,c	;volatile
  7523                           
  7524                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7525  005770  010F               	movlb	15	; () banked
  7526  005772  9536               	bcf	54,2,b	;volatile
  7527                           
  7528                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7529  005774  D001               	goto	l1747
  7530  005776                     
  7531                           ;usb_device.c: 2361: {
  7532                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7533                           
  7534                           ; BSR set to: 15
  7535  005776  9462               	bcf	3938,2,c	;volatile
  7536  005778                     l1747:
  7537  005778  B462               	btfsc	3938,2,c	;volatile
  7538  00577A  D7FD               	goto	l1748
  7539                           
  7540                           ;usb_device.c: 2363: }
  7541                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7542  00577C  0E00               	movlw	0
  7543  00577E  0101               	movlb	1	; () banked
  7544  005780  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7545                           
  7546                           ; BSR set to: 1
  7547  005782  0012               	return		;funcret
  7548  005784                     __end_of_USBWakeFromSuspend:
  7549                           	opt stack 0
  7550                           tosu	equ	0xFFF
  7551                           tosh	equ	0xFFE
  7552                           tosl	equ	0xFFD
  7553                           pclath	equ	0xFFA
  7554                           tblptru	equ	0xFF8
  7555                           tblptrh	equ	0xFF7
  7556                           tblptrl	equ	0xFF6
  7557                           tablat	equ	0xFF5
  7558                           prodh	equ	0xFF4
  7559                           prodl	equ	0xFF3
  7560                           intcon	equ	0xFF2
  7561                           intcon2	equ	0xFF1
  7562                           intcon3	equ	0xFF0
  7563                           postinc0	equ	0xFEE
  7564                           plusw0	equ	0xFEB
  7565                           wreg	equ	0xFE8
  7566                           postinc1	equ	0xFE6
  7567                           postdec1	equ	0xFE5
  7568                           plusw1	equ	0xFE3
  7569                           fsr1h	equ	0xFE2
  7570                           fsr1l	equ	0xFE1
  7571                           indf2	equ	0xFDF
  7572                           postinc2	equ	0xFDE
  7573                           postdec2	equ	0xFDD
  7574                           plusw2	equ	0xFDB
  7575                           fsr2h	equ	0xFDA
  7576                           fsr2l	equ	0xFD9
  7577                           status	equ	0xFD8
  7578                           
  7579 ;; *************** function _USBSuspend *****************
  7580 ;; Defined at:
  7581 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;		None
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;		None
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      void 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7599 ;;Total ram usage:        0 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:   15
  7602 ;; This function calls:
  7603 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7604 ;; This function is called by:
  7605 ;;		_USBDeviceTasks
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text30
  7610  00585E                     __ptext30:
  7611                           	opt stack 0
  7612  00585E                     _USBSuspend:
  7613                           	opt stack 11
  7614                           
  7615                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7616                           
  7617                           ; BSR set to: 1
  7618                           ;incstack = 0
  7619  00585E  010F               	movlb	15	; () banked
  7620  005860  8536               	bsf	54,2,b	;volatile
  7621                           
  7622                           ; BSR set to: 15
  7623                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7624  005862  9862               	bcf	3938,4,c	;volatile
  7625                           
  7626                           ; BSR set to: 15
  7627                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7628  005864  8265               	bsf	3941,1,c	;volatile
  7629                           
  7630                           ; BSR set to: 15
  7631                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7632  005866  0E01               	movlw	1
  7633  005868  0101               	movlb	1	; () banked
  7634  00586A  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  7635                           
  7636                           ; BSR set to: 1
  7637                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7638  00586C  0E00               	movlw	0
  7639  00586E  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7640                           
  7641                           ; BSR set to: 1
  7642                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7643  005870  0E00               	movlw	0
  7644  005872  0100               	movlb	0	; () banked
  7645  005874  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7646  005876  0E75               	movlw	117
  7647  005878  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7648  00587A  0E00               	movlw	0
  7649  00587C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7650  00587E  0E00               	movlw	0
  7651  005880  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7652  005882  0E00               	movlw	0
  7653  005884  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7654  005886  0E00               	movlw	0
  7655  005888  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7656  00588A  EC0E  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7657  00588E  0012               	return		;funcret
  7658  005890                     __end_of_USBSuspend:
  7659                           	opt stack 0
  7660                           tosu	equ	0xFFF
  7661                           tosh	equ	0xFFE
  7662                           tosl	equ	0xFFD
  7663                           pclath	equ	0xFFA
  7664                           tblptru	equ	0xFF8
  7665                           tblptrh	equ	0xFF7
  7666                           tblptrl	equ	0xFF6
  7667                           tablat	equ	0xFF5
  7668                           prodh	equ	0xFF4
  7669                           prodl	equ	0xFF3
  7670                           intcon	equ	0xFF2
  7671                           intcon2	equ	0xFF1
  7672                           intcon3	equ	0xFF0
  7673                           postinc0	equ	0xFEE
  7674                           plusw0	equ	0xFEB
  7675                           wreg	equ	0xFE8
  7676                           postinc1	equ	0xFE6
  7677                           postdec1	equ	0xFE5
  7678                           plusw1	equ	0xFE3
  7679                           fsr1h	equ	0xFE2
  7680                           fsr1l	equ	0xFE1
  7681                           indf2	equ	0xFDF
  7682                           postinc2	equ	0xFDE
  7683                           postdec2	equ	0xFDD
  7684                           plusw2	equ	0xFDB
  7685                           fsr2h	equ	0xFDA
  7686                           fsr2l	equ	0xFD9
  7687                           status	equ	0xFD8
  7688                           
  7689 ;; *************** function _USBStallHandler *****************
  7690 ;; Defined at:
  7691 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;		None
  7694 ;; Auto vars:     Size  Location     Type
  7695 ;;		None
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  1    wreg      void 
  7698 ;; Registers used:
  7699 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7708 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7709 ;;Total ram usage:        1 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; Hardware stack levels required when called:   11
  7712 ;; This function calls:
  7713 ;;		Nothing
  7714 ;; This function is called by:
  7715 ;;		_USBDeviceTasks
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text31
  7720  005442                     __ptext31:
  7721                           	opt stack 0
  7722  005442                     _USBStallHandler:
  7723                           	opt stack 15
  7724                           
  7725                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  7726                           
  7727                           ;incstack = 0
  7728  005442  010F               	movlb	15	; () banked
  7729  005444  A126               	btfss	38,0,b	;volatile
  7730  005446  D01D               	goto	l1739
  7731                           
  7732                           ; BSR set to: 15
  7733                           ;usb_device.c: 2233: {
  7734                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  7735  005448  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7736  00544C  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7737  005450  0E80               	movlw	128
  7738  005452  18DE               	xorwf	postinc2,w,c
  7739  005454  A4D8               	btfss	status,2,c
  7740  005456  D014               	goto	l1740
  7741                           
  7742                           ; BSR set to: 15
  7743  005458  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  7744  00545C  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7745  005460  0E84               	movlw	132
  7746  005462  18DE               	xorwf	postinc2,w,c
  7747  005464  A4D8               	btfss	status,2,c
  7748  005466  D00C               	goto	l1740
  7749                           
  7750                           ; BSR set to: 15
  7751                           ;usb_device.c: 2236: {
  7752                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7753  005468  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7754  00546C  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7755  005470  0E0C               	movlw	12
  7756  005472  6EDF               	movwf	indf2,c
  7757                           
  7758                           ; BSR set to: 15
  7759                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7760  005474  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7761  005478  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7762  00547C  0E00               	movlw	0
  7763  00547E  8EDB               	bsf	plusw2,7,c
  7764  005480                     l1740:
  7765                           
  7766                           ; BSR set to: 15
  7767                           ;usb_device.c: 2240: }
  7768                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  7769                           
  7770                           ; BSR set to: 15
  7771  005480  9126               	bcf	38,0,b	;volatile
  7772  005482                     l1739:
  7773                           
  7774                           ; BSR set to: 15
  7775                           ;usb_device.c: 2242: }
  7776                           ;usb_device.c: 2244: (UIR &= 0xDF);
  7777  005482  9A62               	bcf	3938,5,c	;volatile
  7778                           
  7779                           ; BSR set to: 15
  7780  005484  0012               	return		;funcret
  7781  005486                     __end_of_USBStallHandler:
  7782                           	opt stack 0
  7783                           tosu	equ	0xFFF
  7784                           tosh	equ	0xFFE
  7785                           tosl	equ	0xFFD
  7786                           pclath	equ	0xFFA
  7787                           tblptru	equ	0xFF8
  7788                           tblptrh	equ	0xFF7
  7789                           tblptrl	equ	0xFF6
  7790                           tablat	equ	0xFF5
  7791                           prodh	equ	0xFF4
  7792                           prodl	equ	0xFF3
  7793                           intcon	equ	0xFF2
  7794                           intcon2	equ	0xFF1
  7795                           intcon3	equ	0xFF0
  7796                           postinc0	equ	0xFEE
  7797                           plusw0	equ	0xFEB
  7798                           wreg	equ	0xFE8
  7799                           postinc1	equ	0xFE6
  7800                           postdec1	equ	0xFE5
  7801                           plusw1	equ	0xFE3
  7802                           fsr1h	equ	0xFE2
  7803                           fsr1l	equ	0xFE1
  7804                           indf2	equ	0xFDF
  7805                           postinc2	equ	0xFDE
  7806                           postdec2	equ	0xFDD
  7807                           plusw2	equ	0xFDB
  7808                           fsr2h	equ	0xFDA
  7809                           fsr2l	equ	0xFD9
  7810                           status	equ	0xFD8
  7811                           
  7812 ;; *************** function _USBIncrement1msInternalTimers *****************
  7813 ;; Defined at:
  7814 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;		None
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;		None
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		wreg, status,2, status,0
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7832 ;;Total ram usage:        0 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; Hardware stack levels required when called:   11
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_USBDeviceTasks
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text32
  7843  005B3A                     __ptext32:
  7844                           	opt stack 0
  7845  005B3A                     _USBIncrement1msInternalTimers:
  7846                           	opt stack 15
  7847                           
  7848                           ;usb_device.c: 3050: USB1msTickCount++;
  7849                           
  7850                           ; BSR set to: 15
  7851                           ;incstack = 0
  7852  005B3A  0E01               	movlw	1
  7853  005B3C  0103               	movlb	3	; () banked
  7854  005B3E  2718               	addwf	_USB1msTickCount& (0+255),f,b
  7855  005B40  0E00               	movlw	0
  7856  005B42  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  7857  005B44  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  7858  005B46  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  7859                           
  7860                           ; BSR set to: 3
  7861                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  7862  005B48  0101               	movlb	1	; () banked
  7863  005B4A  51E5               	movf	_USBBusIsSuspended& (0+255),w,b
  7864  005B4C  A4D8               	btfss	status,2,c
  7865  005B4E  0012               	return	
  7866                           
  7867                           ; BSR set to: 1
  7868                           ;usb_device.c: 3052: {
  7869                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  7870  005B50  2BE3               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  7871                           
  7872                           ; BSR set to: 1
  7873                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  7874  005B52  51E3               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  7875  005B54  A4D8               	btfss	status,2,c
  7876  005B56  0012               	return	
  7877                           
  7878                           ; BSR set to: 1
  7879                           ;usb_device.c: 3056: {
  7880                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  7881  005B58  69E3               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  7882                           
  7883                           ; BSR set to: 1
  7884  005B5A  0012               	return	
  7885  005B5C                     __end_of_USBIncrement1msInternalTimers:
  7886                           	opt stack 0
  7887                           tosu	equ	0xFFF
  7888                           tosh	equ	0xFFE
  7889                           tosl	equ	0xFFD
  7890                           pclath	equ	0xFFA
  7891                           tblptru	equ	0xFF8
  7892                           tblptrh	equ	0xFF7
  7893                           tblptrl	equ	0xFF6
  7894                           tablat	equ	0xFF5
  7895                           prodh	equ	0xFF4
  7896                           prodl	equ	0xFF3
  7897                           intcon	equ	0xFF2
  7898                           intcon2	equ	0xFF1
  7899                           intcon3	equ	0xFF0
  7900                           postinc0	equ	0xFEE
  7901                           plusw0	equ	0xFEB
  7902                           wreg	equ	0xFE8
  7903                           postinc1	equ	0xFE6
  7904                           postdec1	equ	0xFE5
  7905                           plusw1	equ	0xFE3
  7906                           fsr1h	equ	0xFE2
  7907                           fsr1l	equ	0xFE1
  7908                           indf2	equ	0xFDF
  7909                           postinc2	equ	0xFDE
  7910                           postdec2	equ	0xFDD
  7911                           plusw2	equ	0xFDB
  7912                           fsr2h	equ	0xFDA
  7913                           fsr2l	equ	0xFD9
  7914                           status	equ	0xFD8
  7915                           
  7916 ;; *************** function _USBDeviceInit *****************
  7917 ;; Defined at:
  7918 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;		None
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;  i               1   37[BANK0 ] unsigned char 
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7935 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7936 ;;Total ram usage:        1 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:   12
  7939 ;; This function calls:
  7940 ;;		_memset
  7941 ;; This function is called by:
  7942 ;;		_USBDeviceTasks
  7943 ;;		_UsbDevice_MainTask
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text33
  7948  001FFE                     __ptext33:
  7949                           	opt stack 0
  7950  001FFE                     _USBDeviceInit:
  7951                           	opt stack 14
  7952                           
  7953                           ;usb_device.c: 297: uint8_t i;
  7954                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  7955                           
  7956                           ; BSR set to: 1
  7957                           ;incstack = 0
  7958  001FFE  98A0               	bcf	4000,4,c	;volatile
  7959                           
  7960                           ;usb_device.c: 303: ;
  7961                           ;usb_device.c: 306: {UEIR = 0;};
  7962  002000  0E00               	movlw	0
  7963  002002  6E63               	movwf	3939,c	;volatile
  7964                           
  7965                           ;usb_device.c: 309: {UIR = 0;};
  7966  002004  0E00               	movlw	0
  7967  002006  6E62               	movwf	3938,c	;volatile
  7968                           
  7969                           ;usb_device.c: 312: UEP0 = 0;
  7970  002008  0E00               	movlw	0
  7971  00200A  010F               	movlb	15	; () banked
  7972  00200C  6F26               	movwf	38,b	;volatile
  7973                           
  7974                           ; BSR set to: 15
  7975                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  7976  00200E  0E27               	movlw	39
  7977  002010  0100               	movlb	0	; () banked
  7978  002012  6F7D               	movwf	memset@p1& (0+255),b
  7979  002014  0E0F               	movlw	15
  7980  002016  6F7E               	movwf	(memset@p1+1)& (0+255),b
  7981  002018  0E00               	movlw	0
  7982  00201A  6F80               	movwf	(memset@c+1)& (0+255),b
  7983  00201C  0E00               	movlw	0
  7984  00201E  6F7F               	movwf	memset@c& (0+255),b
  7985  002020  0E00               	movlw	0
  7986  002022  6F82               	movwf	(memset@n+1)& (0+255),b
  7987  002024  0E02               	movlw	2
  7988  002026  6F81               	movwf	memset@n& (0+255),b
  7989  002028  EC79  F02C         	call	_memset	;wreg free
  7990                           
  7991                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7992  00202C  0E16               	movlw	22
  7993  00202E  010F               	movlb	15	; () banked
  7994  002030  6F39               	movwf	57,b	;volatile
  7995                           
  7996                           ; BSR set to: 15
  7997  002032  0E9F               	movlw	159
  7998  002034  6F37               	movwf	55,b	;volatile
  7999                           
  8000                           ; BSR set to: 15
  8001  002036  0E7B               	movlw	123
  8002  002038  6F36               	movwf	54,b	;volatile
  8003                           
  8004                           ; BSR set to: 15
  8005                           ;usb_device.c: 319: ;
  8006                           ;usb_device.c: 322: ;
  8007                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8008  00203A  0E00               	movlw	0
  8009  00203C  0100               	movlb	0	; () banked
  8010  00203E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8011  002040                     l12413:
  8012                           
  8013                           ; BSR set to: 0
  8014  002040  0E0B               	movlw	11
  8015  002042  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8016  002044  D001               	goto	l1583
  8017  002046  D00E               	goto	u11360
  8018  002048                     l1583:
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;usb_device.c: 326: {
  8022                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8023                           
  8024                           ; BSR set to: 0
  8025  002048  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8026  00204A  0D04               	mullw	4
  8027  00204C  0E00               	movlw	0
  8028  00204E  24F3               	addwf	prodl,w,c
  8029  002050  6ED9               	movwf	fsr2l,c
  8030  002052  0E04               	movlw	4
  8031  002054  20F4               	addwfc	prodh,w,c
  8032  002056  6EDA               	movwf	fsr2h,c
  8033  002058  6ADE               	clrf	postinc2,c
  8034  00205A  6ADE               	clrf	postinc2,c
  8035  00205C  6ADE               	clrf	postinc2,c
  8036  00205E  6ADD               	clrf	postdec2,c
  8037                           
  8038                           ; BSR set to: 0
  8039  002060  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8040  002062  D7EE               	goto	l12413
  8041  002064                     u11360:
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;usb_device.c: 328: }
  8045                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8046  002064  8C65               	bsf	3941,6,c	;volatile
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;usb_device.c: 334: UADDR = 0x00;
  8050  002066  0E00               	movlw	0
  8051  002068  010F               	movlb	15	; () banked
  8052  00206A  6F38               	movwf	56,b	;volatile
  8053                           
  8054                           ; BSR set to: 15
  8055                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8056  00206C  9865               	bcf	3941,4,c	;volatile
  8057                           
  8058                           ; BSR set to: 15
  8059                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8060  00206E  9C65               	bcf	3941,6,c	;volatile
  8061  002070                     
  8062                           ;usb_device.c: 344: {
  8063                           ;usb_device.c: 345: (UIR &= 0xF7);
  8064                           
  8065                           ; BSR set to: 15
  8066  002070  9662               	bcf	3938,3,c	;volatile
  8067                           
  8068                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8069  002072  0E00               	movlw	0
  8070  002074  0100               	movlb	0	; () banked
  8071  002076  6FAF               	movwf	(_inPipes+3)& (0+255),b
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8075  002078  0E00               	movlw	0
  8076  00207A  0101               	movlb	1	; () banked
  8077  00207C  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8078                           
  8079                           ; BSR set to: 1
  8080                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8081  00207E  0E00               	movlw	0
  8082  002080  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8083  002082  0E00               	movlw	0
  8084  002084  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8085                           
  8086                           ; BSR set to: 1
  8087                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8088  002086  B662               	btfsc	3938,3,c	;volatile
  8089  002088  D7F3               	goto	l1585
  8090                           
  8091                           ; BSR set to: 1
  8092                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8093                           
  8094                           ; BSR set to: 1
  8095  00208A  0E01               	movlw	1
  8096  00208C  0100               	movlb	0	; () banked
  8097  00208E  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8098                           
  8099                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8100  002090  0E01               	movlw	1
  8101  002092  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8102                           
  8103                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8104  002094  0E00               	movlw	0
  8105  002096  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8106                           
  8107                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8108  002098  0E00               	movlw	0
  8109  00209A  6E26               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8110                           
  8111                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8112  00209C  0E00               	movlw	0
  8113  00209E  0101               	movlb	1	; () banked
  8114  0020A0  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  8115                           
  8116                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8117  0020A2  0E00               	movlw	0
  8118  0020A4  0100               	movlb	0	; () banked
  8119  0020A6  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8120  0020A8                     l12441:
  8121                           
  8122                           ; BSR set to: 0
  8123  0020A8  0E02               	movlw	2
  8124  0020AA  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8125  0020AC  D001               	goto	l1587
  8126  0020AE  D02E               	goto	u11390
  8127  0020B0                     l1587:
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;usb_device.c: 364: {
  8131                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8132                           
  8133                           ; BSR set to: 0
  8134  0020B0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8135  0020B2  0D02               	mullw	2
  8136  0020B4  0EB2               	movlw	low _pBDTEntryIn
  8137  0020B6  24F3               	addwf	prodl,w,c
  8138  0020B8  6ED9               	movwf	fsr2l,c
  8139  0020BA  0E00               	movlw	high _pBDTEntryIn
  8140  0020BC  20F4               	addwfc	prodh,w,c
  8141  0020BE  6EDA               	movwf	fsr2h,c
  8142  0020C0  0E00               	movlw	0
  8143  0020C2  6EDE               	movwf	postinc2,c
  8144  0020C4  0E00               	movlw	0
  8145  0020C6  6EDD               	movwf	postdec2,c
  8146                           
  8147                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8148  0020C8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8149  0020CA  0D02               	mullw	2
  8150  0020CC  0E0E               	movlw	low _pBDTEntryOut
  8151  0020CE  24F3               	addwf	prodl,w,c
  8152  0020D0  6ED9               	movwf	fsr2l,c
  8153  0020D2  0E03               	movlw	high _pBDTEntryOut
  8154  0020D4  20F4               	addwfc	prodh,w,c
  8155  0020D6  6EDA               	movwf	fsr2h,c
  8156  0020D8  0E00               	movlw	0
  8157  0020DA  6EDE               	movwf	postinc2,c
  8158  0020DC  0E00               	movlw	0
  8159  0020DE  6EDD               	movwf	postdec2,c
  8160                           
  8161                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8162  0020E0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8163  0020E2  0D01               	mullw	1
  8164  0020E4  0ED1               	movlw	low _ep_data_in
  8165  0020E6  24F3               	addwf	prodl,w,c
  8166  0020E8  6ED9               	movwf	fsr2l,c
  8167  0020EA  0E02               	movlw	high _ep_data_in
  8168  0020EC  20F4               	addwfc	prodh,w,c
  8169  0020EE  6EDA               	movwf	fsr2h,c
  8170  0020F0  0E00               	movlw	0
  8171  0020F2  6EDF               	movwf	indf2,c
  8172                           
  8173                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8174  0020F4  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8175  0020F6  0D01               	mullw	1
  8176  0020F8  0ECE               	movlw	low _ep_data_out
  8177  0020FA  24F3               	addwf	prodl,w,c
  8178  0020FC  6ED9               	movwf	fsr2l,c
  8179  0020FE  0E02               	movlw	high _ep_data_out
  8180  002100  20F4               	addwfc	prodh,w,c
  8181  002102  6EDA               	movwf	fsr2h,c
  8182  002104  0E00               	movlw	0
  8183  002106  6EDF               	movwf	indf2,c
  8184                           
  8185                           ; BSR set to: 0
  8186  002108  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8187  00210A  D7CE               	goto	l12441
  8188  00210C                     u11390:
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;usb_device.c: 369: }
  8192                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8193                           
  8194                           ; BSR set to: 0
  8195  00210C  0E08               	movlw	8
  8196  00210E  6FB2               	movwf	_pBDTEntryIn& (0+255),b
  8197  002110  0E04               	movlw	4
  8198  002112  6FB3               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8202  002114  0E16               	movlw	22
  8203  002116  010F               	movlb	15	; () banked
  8204  002118  6F26               	movwf	38,b	;volatile
  8205                           
  8206                           ; BSR set to: 15
  8207                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8208  00211A  0E04               	movlw	4
  8209  00211C  0104               	movlb	4	; () banked
  8210  00211E  6F03               	movwf	3,b	;volatile
  8211  002120  0E30               	movlw	48
  8212  002122  6F02               	movwf	2,b	;volatile
  8213                           
  8214                           ; BSR set to: 4
  8215                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8216  002124  0E08               	movlw	8
  8217  002126  6F01               	movwf	1,b	;volatile
  8218                           
  8219                           ; BSR set to: 4
  8220                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8221  002128  0E04               	movlw	4
  8222  00212A  6F00               	movwf	0,b	;volatile
  8223                           
  8224                           ; BSR set to: 4
  8225                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8226  00212C  8F00               	bsf	0,7,b	;volatile
  8227                           
  8228                           ; BSR set to: 4
  8229                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8230  00212E  0E00               	movlw	0
  8231  002130  0100               	movlb	0	; () banked
  8232  002132  6FD4               	movwf	_USBActiveConfiguration& (0+255),b
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;usb_device.c: 384: USB1msTickCount = 0;
  8236  002134  0E00               	movlw	0
  8237  002136  0103               	movlb	3	; () banked
  8238  002138  6F18               	movwf	_USB1msTickCount& (0+255),b
  8239  00213A  0E00               	movlw	0
  8240  00213C  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8241  00213E  0E00               	movlw	0
  8242  002140  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8243  002142  0E00               	movlw	0
  8244  002144  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8245                           
  8246                           ; BSR set to: 3
  8247                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8248  002146  0E00               	movlw	0
  8249  002148  0101               	movlb	1	; () banked
  8250  00214A  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8251                           
  8252                           ; BSR set to: 1
  8253                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8254  00214C  0E00               	movlw	0
  8255  00214E  0100               	movlb	0	; () banked
  8256  002150  6FCB               	movwf	_USBDeviceState& (0+255),b
  8257                           
  8258                           ; BSR set to: 0
  8259  002152  0012               	return		;funcret
  8260  002154                     __end_of_USBDeviceInit:
  8261                           	opt stack 0
  8262                           tosu	equ	0xFFF
  8263                           tosh	equ	0xFFE
  8264                           tosl	equ	0xFFD
  8265                           pclath	equ	0xFFA
  8266                           tblptru	equ	0xFF8
  8267                           tblptrh	equ	0xFF7
  8268                           tblptrl	equ	0xFF6
  8269                           tablat	equ	0xFF5
  8270                           prodh	equ	0xFF4
  8271                           prodl	equ	0xFF3
  8272                           intcon	equ	0xFF2
  8273                           intcon2	equ	0xFF1
  8274                           intcon3	equ	0xFF0
  8275                           postinc0	equ	0xFEE
  8276                           plusw0	equ	0xFEB
  8277                           wreg	equ	0xFE8
  8278                           postinc1	equ	0xFE6
  8279                           postdec1	equ	0xFE5
  8280                           plusw1	equ	0xFE3
  8281                           fsr1h	equ	0xFE2
  8282                           fsr1l	equ	0xFE1
  8283                           indf2	equ	0xFDF
  8284                           postinc2	equ	0xFDE
  8285                           postdec2	equ	0xFDD
  8286                           plusw2	equ	0xFDB
  8287                           fsr2h	equ	0xFDA
  8288                           fsr2l	equ	0xFD9
  8289                           status	equ	0xFD8
  8290                           
  8291 ;; *************** function _USBCtrlEPService *****************
  8292 ;; Defined at:
  8293 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;		None
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;		None
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  1    wreg      void 
  8300 ;; Registers used:
  8301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8311 ;;Total ram usage:        1 bytes
  8312 ;; Hardware stack levels used:    1
  8313 ;; Hardware stack levels required when called:   18
  8314 ;; This function calls:
  8315 ;;		_USBCtrlTrfInHandler
  8316 ;;		_USBCtrlTrfOutHandler
  8317 ;;		_USBCtrlTrfSetupHandler
  8318 ;;		_memcpy
  8319 ;; This function is called by:
  8320 ;;		_USBDeviceTasks
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text34
  8325  004600                     __ptext34:
  8326                           	opt stack 0
  8327  004600                     _USBCtrlEPService:
  8328                           	opt stack 8
  8329                           
  8330                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8331                           
  8332                           ; BSR set to: 0
  8333                           ;incstack = 0
  8334  004600  0E2D               	movlw	45
  8335  004602  0100               	movlb	0	; () banked
  8336  004604  6FC7               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8340  004606  C0D3  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8341  00460A  0EFD               	movlw	253
  8342  00460C  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8343  00460E  A4D8               	btfss	status,2,c
  8344  004610  D038               	goto	l1753
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;usb_device.c: 2401: {
  8348                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8349  004612  C0D3  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8350  004616  90D8               	bcf	status,0,c
  8351  004618  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8352  00461A  0E3F               	movlw	63
  8353  00461C  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8354  00461E  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8355  004620  0D04               	mullw	4
  8356  004622  0E00               	movlw	0
  8357  004624  24F3               	addwf	prodl,w,c
  8358  004626  6FBC               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8359  004628  0E04               	movlw	4
  8360  00462A  20F4               	addwfc	prodh,w,c
  8361  00462C  6FBD               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8365  00462E  C0BC  F0BA         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8366  004632  C0BD  F0BB         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8370  004636  0E04               	movlw	4
  8371  004638  1BBA               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8375  00463A  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8376  00463E  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8377  004642  30DF               	rrcf	223,w,c
  8378  004644  32E8               	rrcf	wreg,f,c
  8379  004646  0B0F               	andlw	15
  8380  004648  0A0D               	xorlw	13
  8381  00464A  A4D8               	btfss	status,2,c
  8382  00464C  D017               	goto	l1754
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;usb_device.c: 2418: {
  8386                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8387  00464E  0E30               	movlw	48
  8388  004650  6F7D               	movwf	memcpy@d1& (0+255),b
  8389  004652  0E04               	movlw	4
  8390  004654  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8391  004656  EE20 F002          	lfsr	2,2
  8392  00465A  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8393  00465C  26D9               	addwf	fsr2l,f,c
  8394  00465E  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8395  004660  22DA               	addwfc	fsr2h,f,c
  8396  004662  CFDE F07F          	movff	postinc2,memcpy@s1
  8397  004666  CFDD F080          	movff	postdec2,memcpy@s1+1
  8398  00466A  0E00               	movlw	0
  8399  00466C  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8400  00466E  0E08               	movlw	8
  8401  004670  6F81               	movwf	memcpy@n& (0+255),b
  8402  004672  ECB7  F029         	call	_memcpy	;wreg free
  8403                           
  8404                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8405  004676  EC23  F024         	call	_USBCtrlTrfSetupHandler	;wreg free
  8406                           
  8407                           ;usb_device.c: 2427: }
  8408  00467A  0012               	return	
  8409  00467C                     l1754:
  8410                           
  8411                           ;usb_device.c: 2428: else
  8412                           ;usb_device.c: 2429: {
  8413                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8414  00467C  EC45  F026         	call	_USBCtrlTrfOutHandler	;wreg free
  8415                           
  8416                           ;usb_device.c: 2432: }
  8417                           ;usb_device.c: 2433: }
  8418  004680  0012               	return	
  8419  004682                     l1753:
  8420                           
  8421                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8422  004682  0100               	movlb	0	; () banked
  8423  004684  51D3               	movf	_USTATcopy& (0+255),w,b
  8424  004686  0BFD               	andlw	253
  8425  004688  0A04               	xorlw	4
  8426  00468A  A4D8               	btfss	status,2,c
  8427  00468C  0012               	return	
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;usb_device.c: 2435: {
  8431                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8432  00468E  ECBB  F01E         	call	_USBCtrlTrfInHandler	;wreg free
  8433  004692  0012               	return	
  8434  004694                     __end_of_USBCtrlEPService:
  8435                           	opt stack 0
  8436                           tosu	equ	0xFFF
  8437                           tosh	equ	0xFFE
  8438                           tosl	equ	0xFFD
  8439                           pclath	equ	0xFFA
  8440                           tblptru	equ	0xFF8
  8441                           tblptrh	equ	0xFF7
  8442                           tblptrl	equ	0xFF6
  8443                           tablat	equ	0xFF5
  8444                           prodh	equ	0xFF4
  8445                           prodl	equ	0xFF3
  8446                           intcon	equ	0xFF2
  8447                           intcon2	equ	0xFF1
  8448                           intcon3	equ	0xFF0
  8449                           postinc0	equ	0xFEE
  8450                           plusw0	equ	0xFEB
  8451                           wreg	equ	0xFE8
  8452                           postinc1	equ	0xFE6
  8453                           postdec1	equ	0xFE5
  8454                           plusw1	equ	0xFE3
  8455                           fsr1h	equ	0xFE2
  8456                           fsr1l	equ	0xFE1
  8457                           indf2	equ	0xFDF
  8458                           postinc2	equ	0xFDE
  8459                           postdec2	equ	0xFDD
  8460                           plusw2	equ	0xFDB
  8461                           fsr2h	equ	0xFDA
  8462                           fsr2l	equ	0xFD9
  8463                           status	equ	0xFD8
  8464                           
  8465 ;; *************** function _memcpy *****************
  8466 ;; Defined at:
  8467 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;  d1              2   29[BANK0 ] PTR void 
  8470 ;;		 -> SetupPkt(8), 
  8471 ;;  s1              2   31[BANK0 ] PTR const void 
  8472 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8473 ;;  n               2   33[BANK0 ] unsigned int 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  8476 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8477 ;;  d               2   35[BANK0 ] PTR unsigned char 
  8478 ;;		 -> SetupPkt(8), 
  8479 ;;  tmp             1   39[BANK0 ] unsigned char 
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  2   29[BANK0 ] PTR void 
  8482 ;; Registers used:
  8483 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8489 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8490 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8492 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8493 ;;Total ram usage:       11 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:   11
  8496 ;; This function calls:
  8497 ;;		Nothing
  8498 ;; This function is called by:
  8499 ;;		_USBCtrlEPService
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text35
  8504  00536E                     __ptext35:
  8505                           	opt stack 0
  8506  00536E                     _memcpy:
  8507                           	opt stack 14
  8508                           
  8509                           ;incstack = 0
  8510  00536E  C07F  F085         	movff	memcpy@s1,memcpy@s
  8511  005372  C080  F086         	movff	memcpy@s1+1,memcpy@s+1
  8512  005376  C07D  F083         	movff	memcpy@d1,memcpy@d
  8513  00537A  C07E  F084         	movff	memcpy@d1+1,memcpy@d+1
  8514  00537E  D011               	goto	l3016
  8515  005380                     l8385:
  8516  005380  C085  FFD9         	movff	memcpy@s,fsr2l
  8517  005384  C086  FFDA         	movff	memcpy@s+1,fsr2h
  8518  005388  50DF               	movf	indf2,w,c
  8519  00538A  0100               	movlb	0	; () banked
  8520  00538C  6F87               	movwf	memcpy@tmp& (0+255),b
  8521                           
  8522                           ; BSR set to: 0
  8523  00538E  4B85               	infsnz	memcpy@s& (0+255),f,b
  8524  005390  2B86               	incf	(memcpy@s+1)& (0+255),f,b
  8525                           
  8526                           ; BSR set to: 0
  8527  005392  C083  FFD9         	movff	memcpy@d,fsr2l
  8528  005396  C084  FFDA         	movff	memcpy@d+1,fsr2h
  8529  00539A  C087  FFDF         	movff	memcpy@tmp,indf2
  8530                           
  8531                           ; BSR set to: 0
  8532  00539E  4B83               	infsnz	memcpy@d& (0+255),f,b
  8533  0053A0  2B84               	incf	(memcpy@d+1)& (0+255),f,b
  8534  0053A2                     l3016:
  8535                           
  8536                           ; BSR set to: 0
  8537  0053A2  0100               	movlb	0	; () banked
  8538  0053A4  0781               	decf	memcpy@n& (0+255),f,b
  8539  0053A6  A0D8               	btfss	status,0,c
  8540  0053A8  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8541  0053AA  2981               	incf	memcpy@n& (0+255),w,b
  8542  0053AC  E1E9               	bnz	l8385
  8543  0053AE  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8544  0053B0  B4D8               	btfsc	status,2,c
  8545  0053B2  0012               	return	
  8546  0053B4  D7E5               	goto	l3017
  8547  0053B6                     __end_of_memcpy:
  8548                           	opt stack 0
  8549                           tosu	equ	0xFFF
  8550                           tosh	equ	0xFFE
  8551                           tosl	equ	0xFFD
  8552                           pclath	equ	0xFFA
  8553                           tblptru	equ	0xFF8
  8554                           tblptrh	equ	0xFF7
  8555                           tblptrl	equ	0xFF6
  8556                           tablat	equ	0xFF5
  8557                           prodh	equ	0xFF4
  8558                           prodl	equ	0xFF3
  8559                           intcon	equ	0xFF2
  8560                           intcon2	equ	0xFF1
  8561                           intcon3	equ	0xFF0
  8562                           postinc0	equ	0xFEE
  8563                           plusw0	equ	0xFEB
  8564                           wreg	equ	0xFE8
  8565                           postinc1	equ	0xFE6
  8566                           postdec1	equ	0xFE5
  8567                           plusw1	equ	0xFE3
  8568                           fsr1h	equ	0xFE2
  8569                           fsr1l	equ	0xFE1
  8570                           indf2	equ	0xFDF
  8571                           postinc2	equ	0xFDE
  8572                           postdec2	equ	0xFDD
  8573                           plusw2	equ	0xFDB
  8574                           fsr2h	equ	0xFDA
  8575                           fsr2l	equ	0xFD9
  8576                           status	equ	0xFD8
  8577                           
  8578 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8579 ;; Defined at:
  8580 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;		None
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1    wreg      void 
  8587 ;; Registers used:
  8588 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8598 ;;Total ram usage:        0 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; Hardware stack levels required when called:   17
  8601 ;; This function calls:
  8602 ;;		_USBCheckStdRequest
  8603 ;;		_USBCtrlEPServiceComplete
  8604 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8605 ;; This function is called by:
  8606 ;;		_USBCtrlEPService
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text36
  8611  004846                     __ptext36:
  8612                           	opt stack 0
  8613  004846                     _USBCtrlTrfSetupHandler:
  8614                           	opt stack 8
  8615                           
  8616                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;incstack = 0
  8620  004846  0E00               	movlw	0
  8621  004848  0100               	movlb	0	; () banked
  8622  00484A  6FCA               	movwf	_shortPacketStatus& (0+255),b
  8623                           
  8624                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8625  00484C  0E00               	movlw	0
  8626  00484E  6FC6               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8627                           
  8628                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8629  004850  0E00               	movlw	0
  8630  004852  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8631                           
  8632                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8633  004854  0E00               	movlw	0
  8634  004856  6E26               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8635                           
  8636                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8637  004858  0E00               	movlw	0
  8638  00485A  0101               	movlb	1	; () banked
  8639  00485C  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8640                           
  8641                           ;usb_device.c: 2493: controlTransferState = 0;
  8642  00485E  0E00               	movlw	0
  8643  004860  0100               	movlb	0	; () banked
  8644  004862  6FC9               	movwf	_controlTransferState& (0+255),b
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8648  004864  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8649  004868  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8650  00486C  0E7F               	movlw	127
  8651  00486E  16DF               	andwf	indf2,f,c
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8655  004870  0E04               	movlw	4
  8656  004872  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8660  004874  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8661  004878  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8662  00487C  0E7F               	movlw	127
  8663  00487E  16DF               	andwf	indf2,f,c
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8667  004880  0E04               	movlw	4
  8668  004882  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8672  004884  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8673  004888  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8674  00488C  0E7F               	movlw	127
  8675  00488E  16DF               	andwf	indf2,f,c
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8679  004890  0E00               	movlw	0
  8680  004892  6FAF               	movwf	(_inPipes+3)& (0+255),b
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8684  004894  0E00               	movlw	0
  8685  004896  6FB1               	movwf	(_inPipes+5)& (0+255),b
  8686  004898  0E00               	movlw	0
  8687  00489A  6FB0               	movwf	(_inPipes+4)& (0+255),b
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8691  00489C  0E00               	movlw	0
  8692  00489E  0101               	movlb	1	; () banked
  8693  0048A0  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8694                           
  8695                           ; BSR set to: 1
  8696                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8697  0048A2  0E00               	movlw	0
  8698  0048A4  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8699  0048A6  0E00               	movlw	0
  8700  0048A8  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8701                           
  8702                           ; BSR set to: 1
  8703                           ;usb_device.c: 2517: USBCheckStdRequest();
  8704  0048AA  EC77  F019         	call	_USBCheckStdRequest	;wreg free
  8705                           
  8706                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8707  0048AE  0E00               	movlw	0
  8708  0048B0  0100               	movlb	0	; () banked
  8709  0048B2  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8710  0048B4  0E03               	movlw	3
  8711  0048B6  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8712  0048B8  0E00               	movlw	0
  8713  0048BA  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8714  0048BC  0E00               	movlw	0
  8715  0048BE  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8716  0048C0  0E00               	movlw	0
  8717  0048C2  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8718  0048C4  0E00               	movlw	0
  8719  0048C6  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8720  0048C8  EC0E  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8721                           
  8722                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8723  0048CC  ECAD  F016         	call	_USBCtrlEPServiceComplete	;wreg free
  8724  0048D0  0012               	return		;funcret
  8725  0048D2                     __end_of_USBCtrlTrfSetupHandler:
  8726                           	opt stack 0
  8727                           tosu	equ	0xFFF
  8728                           tosh	equ	0xFFE
  8729                           tosl	equ	0xFFD
  8730                           pclath	equ	0xFFA
  8731                           tblptru	equ	0xFF8
  8732                           tblptrh	equ	0xFF7
  8733                           tblptrl	equ	0xFF6
  8734                           tablat	equ	0xFF5
  8735                           prodh	equ	0xFF4
  8736                           prodl	equ	0xFF3
  8737                           intcon	equ	0xFF2
  8738                           intcon2	equ	0xFF1
  8739                           intcon3	equ	0xFF0
  8740                           postinc0	equ	0xFEE
  8741                           plusw0	equ	0xFEB
  8742                           wreg	equ	0xFE8
  8743                           postinc1	equ	0xFE6
  8744                           postdec1	equ	0xFE5
  8745                           plusw1	equ	0xFE3
  8746                           fsr1h	equ	0xFE2
  8747                           fsr1l	equ	0xFE1
  8748                           indf2	equ	0xFDF
  8749                           postinc2	equ	0xFDE
  8750                           postdec2	equ	0xFDD
  8751                           plusw2	equ	0xFDB
  8752                           fsr2h	equ	0xFDA
  8753                           fsr2l	equ	0xFD9
  8754                           status	equ	0xFD8
  8755                           
  8756 ;; *************** function _USBCtrlEPServiceComplete *****************
  8757 ;; Defined at:
  8758 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;		None
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  1    wreg      void 
  8765 ;; Registers used:
  8766 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8776 ;;Total ram usage:        0 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; Hardware stack levels required when called:   13
  8779 ;; This function calls:
  8780 ;;		_USBCtrlEPAllowDataStage
  8781 ;;		_USBCtrlEPAllowStatusStage
  8782 ;; This function is called by:
  8783 ;;		_USBCtrlTrfSetupHandler
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text37
  8788  002D5A                     __ptext37:
  8789                           	opt stack 0
  8790  002D5A                     _USBCtrlEPServiceComplete:
  8791                           	opt stack 11
  8792                           
  8793                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  8794                           
  8795                           ;incstack = 0
  8796  002D5A  9865               	bcf	3941,4,c	;volatile
  8797                           
  8798                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  8799  002D5C  0100               	movlb	0	; () banked
  8800  002D5E  BFAF               	btfsc	(_inPipes+3)& (0+255),7,b
  8801  002D60  D03C               	goto	l1663
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;usb_device.c: 1647: {
  8805                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  8806  002D62  0101               	movlb	1	; () banked
  8807  002D64  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  8808  002D66  D00D               	goto	l1664
  8809                           
  8810                           ; BSR set to: 1
  8811                           ;usb_device.c: 1649: {
  8812                           ;usb_device.c: 1650: controlTransferState = 2;
  8813  002D68  0E02               	movlw	2
  8814  002D6A  0100               	movlb	0	; () banked
  8815  002D6C  6FC9               	movwf	_controlTransferState& (0+255),b
  8816                           
  8817                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  8818  002D6E  5026               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  8819  002D70  B4D8               	btfsc	status,2,c
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;usb_device.c: 1662: {
  8823                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  8824  002D72  ECCF  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
  8825                           
  8826                           ;usb_device.c: 1664: }
  8827                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  8828  002D76  0E00               	movlw	0
  8829  002D78  0100               	movlb	0	; () banked
  8830  002D7A  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  8834  002D7C  0E00               	movlw	0
  8835  002D7E  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8836                           
  8837                           ;usb_device.c: 1670: }
  8838  002D80  0012               	return	
  8839  002D82                     l1664:
  8840                           
  8841                           ;usb_device.c: 1671: else
  8842                           ;usb_device.c: 1672: {
  8843                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  8844                           
  8845                           ; BSR set to: 0
  8846  002D82  0100               	movlb	0	; () banked
  8847  002D84  EE20 F001          	lfsr	2,1
  8848  002D88  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8849  002D8A  26D9               	addwf	fsr2l,f,c
  8850  002D8C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8851  002D8E  22DA               	addwfc	fsr2h,f,c
  8852  002D90  0E08               	movlw	8
  8853  002D92  6EDF               	movwf	indf2,c
  8854                           
  8855                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8856  002D94  EE20 F002          	lfsr	2,2
  8857  002D98  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8858  002D9A  26D9               	addwf	fsr2l,f,c
  8859  002D9C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8860  002D9E  22DA               	addwfc	fsr2h,f,c
  8861  002DA0  0E30               	movlw	48
  8862  002DA2  6EDE               	movwf	postinc2,c
  8863  002DA4  0E04               	movlw	4
  8864  002DA6  6EDD               	movwf	postdec2,c
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8868  002DA8  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8869  002DAC  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8870  002DB0  0E0C               	movlw	12
  8871  002DB2  6EDF               	movwf	indf2,c
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8875  002DB4  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8876  002DB8  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8877  002DBC  0E00               	movlw	0
  8878  002DBE  8EDB               	bsf	plusw2,7,c
  8879                           
  8880                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  8881  002DC0  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8882  002DC4  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8883  002DC8  0E04               	movlw	4
  8884  002DCA  6EDF               	movwf	indf2,c
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8888  002DCC  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8889  002DD0  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8890  002DD4  0E00               	movlw	0
  8891  002DD6  8EDB               	bsf	plusw2,7,c
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;usb_device.c: 1683: }
  8895                           ;usb_device.c: 1684: }
  8896  002DD8  0012               	return	
  8897  002DDA                     l1663:
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;usb_device.c: 1685: else
  8901                           ;usb_device.c: 1686: {
  8902                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  8903  002DDA  0104               	movlb	4	; () banked
  8904  002DDC  AF30               	btfss	48,7,b	;volatile
  8905  002DDE  D012               	goto	l1668
  8906                           
  8907                           ; BSR set to: 4
  8908                           ;usb_device.c: 1688: {
  8909                           ;usb_device.c: 1689: controlTransferState = 1;
  8910  002DE0  0E01               	movlw	1
  8911  002DE2  0100               	movlb	0	; () banked
  8912  002DE4  6FC9               	movwf	_controlTransferState& (0+255),b
  8913                           
  8914                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  8915  002DE6  51C3               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  8916  002DE8  B4D8               	btfsc	status,2,c
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;usb_device.c: 1704: {
  8920                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  8921  002DEA  ECCF  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
  8922                           
  8923                           ;usb_device.c: 1706: }
  8924                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  8925  002DEE  0E00               	movlw	0
  8926  002DF0  0100               	movlb	0	; () banked
  8927  002DF2  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  8931  002DF4  0E00               	movlw	0
  8932  002DF6  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  8936  002DF8  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  8937  002DFA  A4D8               	btfss	status,2,c
  8938  002DFC  0012               	return	
  8939                           
  8940                           ; BSR set to: 0
  8941                           ;usb_device.c: 1731: {
  8942                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  8943  002DFE  ECFD  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8944                           
  8945                           ;usb_device.c: 1733: }
  8946                           ;usb_device.c: 1734: }
  8947  002E02  0012               	return	
  8948  002E04                     l1668:
  8949                           
  8950                           ;usb_device.c: 1735: else
  8951                           ;usb_device.c: 1736: {
  8952                           ;usb_device.c: 1747: controlTransferState = 2;
  8953  002E04  0E02               	movlw	2
  8954  002E06  0100               	movlb	0	; () banked
  8955  002E08  6FC9               	movwf	_controlTransferState& (0+255),b
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  8959  002E0A  EE20 F001          	lfsr	2,1
  8960  002E0E  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8961  002E10  26D9               	addwf	fsr2l,f,c
  8962  002E12  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8963  002E14  22DA               	addwfc	fsr2h,f,c
  8964  002E16  0E08               	movlw	8
  8965  002E18  6EDF               	movwf	indf2,c
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8969  002E1A  EE20 F002          	lfsr	2,2
  8970  002E1E  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8971  002E20  26D9               	addwf	fsr2l,f,c
  8972  002E22  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8973  002E24  22DA               	addwfc	fsr2h,f,c
  8974  002E26  0E30               	movlw	48
  8975  002E28  6EDE               	movwf	postinc2,c
  8976  002E2A  0E04               	movlw	4
  8977  002E2C  6EDD               	movwf	postdec2,c
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8981  002E2E  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8982  002E32  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8983  002E36  0E04               	movlw	4
  8984  002E38  6EDF               	movwf	indf2,c
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8988  002E3A  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8989  002E3E  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8990  002E42  0E00               	movlw	0
  8991  002E44  8EDB               	bsf	plusw2,7,c
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  8995  002E46  0E00               	movlw	0
  8996  002E48  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9000  002E4A  0E00               	movlw	0
  9001  002E4C  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9002                           
  9003                           ; BSR set to: 0
  9004                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9005  002E4E  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9006  002E50  A4D8               	btfss	status,2,c
  9007  002E52  0012               	return	
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;usb_device.c: 1759: {
  9011                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9012  002E54  ECFD  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9013  002E58  0012               	return	
  9014  002E5A                     __end_of_USBCtrlEPServiceComplete:
  9015                           	opt stack 0
  9016                           tosu	equ	0xFFF
  9017                           tosh	equ	0xFFE
  9018                           tosl	equ	0xFFD
  9019                           pclath	equ	0xFFA
  9020                           tblptru	equ	0xFF8
  9021                           tblptrh	equ	0xFF7
  9022                           tblptrl	equ	0xFF6
  9023                           tablat	equ	0xFF5
  9024                           prodh	equ	0xFF4
  9025                           prodl	equ	0xFF3
  9026                           intcon	equ	0xFF2
  9027                           intcon2	equ	0xFF1
  9028                           intcon3	equ	0xFF0
  9029                           postinc0	equ	0xFEE
  9030                           plusw0	equ	0xFEB
  9031                           wreg	equ	0xFE8
  9032                           postinc1	equ	0xFE6
  9033                           postdec1	equ	0xFE5
  9034                           plusw1	equ	0xFE3
  9035                           fsr1h	equ	0xFE2
  9036                           fsr1l	equ	0xFE1
  9037                           indf2	equ	0xFDF
  9038                           postinc2	equ	0xFDE
  9039                           postdec2	equ	0xFDD
  9040                           plusw2	equ	0xFDB
  9041                           fsr2h	equ	0xFDA
  9042                           fsr2l	equ	0xFD9
  9043                           status	equ	0xFD8
  9044                           
  9045 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9046 ;; Defined at:
  9047 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;		None
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;		None
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  1    wreg      void 
  9054 ;; Registers used:
  9055 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9065 ;;Total ram usage:        0 bytes
  9066 ;; Hardware stack levels used:    1
  9067 ;; Hardware stack levels required when called:   12
  9068 ;; This function calls:
  9069 ;;		_USBCtrlTrfTxService
  9070 ;; This function is called by:
  9071 ;;		_USBCtrlEPServiceComplete
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           	psect	text38
  9076  00439E                     __ptext38:
  9077                           	opt stack 0
  9078  00439E                     _USBCtrlEPAllowDataStage:
  9079                           	opt stack 11
  9080                           
  9081                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9082                           
  9083                           ;incstack = 0
  9084  00439E  0E00               	movlw	0
  9085  0043A0  0100               	movlb	0	; () banked
  9086  0043A2  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  9087                           
  9088                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9089  0043A4  0E00               	movlw	0
  9090  0043A6  6E26               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9094  0043A8  0E02               	movlw	2
  9095  0043AA  19C9               	xorwf	_controlTransferState& (0+255),w,b
  9096  0043AC  A4D8               	btfss	status,2,c
  9097  0043AE  D01F               	goto	l1652
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;usb_device.c: 1512: {
  9101                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9102  0043B0  EE20 F001          	lfsr	2,1
  9103  0043B4  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9104  0043B6  26D9               	addwf	fsr2l,f,c
  9105  0043B8  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9106  0043BA  22DA               	addwfc	fsr2h,f,c
  9107  0043BC  0E08               	movlw	8
  9108  0043BE  6EDF               	movwf	indf2,c
  9109                           
  9110                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9111  0043C0  EE20 F002          	lfsr	2,2
  9112  0043C4  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9113  0043C6  26D9               	addwf	fsr2l,f,c
  9114  0043C8  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9115  0043CA  22DA               	addwfc	fsr2h,f,c
  9116  0043CC  0E38               	movlw	56
  9117  0043CE  6EDE               	movwf	postinc2,c
  9118  0043D0  0E04               	movlw	4
  9119  0043D2  6EDD               	movwf	postdec2,c
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9123  0043D4  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9124  0043D8  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9125  0043DC  0E48               	movlw	72
  9126  0043DE  6EDF               	movwf	indf2,c
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9130  0043E0  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9131  0043E4  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9132  0043E8  0E00               	movlw	0
  9133  0043EA  8EDB               	bsf	plusw2,7,c
  9134                           
  9135                           ;usb_device.c: 1518: }
  9136  0043EC  0012               	return	
  9137  0043EE                     l1652:
  9138                           
  9139                           ; BSR set to: 0
  9140                           ;usb_device.c: 1519: else
  9141                           ;usb_device.c: 1520: {
  9142                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9143                           
  9144                           ; BSR set to: 0
  9145  0043EE  51B0               	movf	(_inPipes+4)& (0+255),w,b
  9146  0043F0  0104               	movlb	4	; () banked
  9147  0043F2  5D36               	subwf	54,w,b	;volatile
  9148  0043F4  0100               	movlb	0	; () banked
  9149  0043F6  51B1               	movf	(_inPipes+5)& (0+255),w,b
  9150  0043F8  0104               	movlb	4	; () banked
  9151  0043FA  5937               	subwfb	55,w,b	;volatile
  9152  0043FC  B0D8               	btfsc	status,0,c
  9153  0043FE  D004               	goto	l1654
  9154                           
  9155                           ; BSR set to: 4
  9156                           ;usb_device.c: 1524: {
  9157                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9158  004400  C436 F0B0          	movff	1078,_inPipes+4	;volatile
  9159  004404  C437 F0B1          	movff	1079,_inPipes+5	;volatile
  9160  004408                     l1654:
  9161                           
  9162                           ; BSR set to: 4
  9163                           ;usb_device.c: 1526: }
  9164                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9165                           
  9166                           ; BSR set to: 4
  9167  004408  EC58  F01A         	call	_USBCtrlTrfTxService	;wreg free
  9168                           
  9169                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9170  00440C  0100               	movlb	0	; () banked
  9171  00440E  EE20 F002          	lfsr	2,2
  9172  004412  51B2               	movf	_pBDTEntryIn& (0+255),w,b
  9173  004414  26D9               	addwf	fsr2l,f,c
  9174  004416  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9175  004418  22DA               	addwfc	fsr2h,f,c
  9176  00441A  0E38               	movlw	56
  9177  00441C  6EDE               	movwf	postinc2,c
  9178  00441E  0E04               	movlw	4
  9179  004420  6EDD               	movwf	postdec2,c
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9183  004422  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  9184  004426  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9185  00442A  0E48               	movlw	72
  9186  00442C  6EDF               	movwf	indf2,c
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9190  00442E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  9191  004432  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9192  004436  0E00               	movlw	0
  9193  004438  8EDB               	bsf	plusw2,7,c
  9194  00443A  0012               	return	
  9195  00443C                     __end_of_USBCtrlEPAllowDataStage:
  9196                           	opt stack 0
  9197                           tosu	equ	0xFFF
  9198                           tosh	equ	0xFFE
  9199                           tosl	equ	0xFFD
  9200                           pclath	equ	0xFFA
  9201                           tblptru	equ	0xFF8
  9202                           tblptrh	equ	0xFF7
  9203                           tblptrl	equ	0xFF6
  9204                           tablat	equ	0xFF5
  9205                           prodh	equ	0xFF4
  9206                           prodl	equ	0xFF3
  9207                           intcon	equ	0xFF2
  9208                           intcon2	equ	0xFF1
  9209                           intcon3	equ	0xFF0
  9210                           postinc0	equ	0xFEE
  9211                           plusw0	equ	0xFEB
  9212                           wreg	equ	0xFE8
  9213                           postinc1	equ	0xFE6
  9214                           postdec1	equ	0xFE5
  9215                           plusw1	equ	0xFE3
  9216                           fsr1h	equ	0xFE2
  9217                           fsr1l	equ	0xFE1
  9218                           indf2	equ	0xFDF
  9219                           postinc2	equ	0xFDE
  9220                           postdec2	equ	0xFDD
  9221                           plusw2	equ	0xFDB
  9222                           fsr2h	equ	0xFDA
  9223                           fsr2l	equ	0xFD9
  9224                           status	equ	0xFD8
  9225                           
  9226 ;; *************** function _USBCheckStdRequest *****************
  9227 ;; Defined at:
  9228 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;		None
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;		None
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      void 
  9235 ;; Registers used:
  9236 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9246 ;;Total ram usage:        0 bytes
  9247 ;; Hardware stack levels used:    1
  9248 ;; Hardware stack levels required when called:   16
  9249 ;; This function calls:
  9250 ;;		_USBStdFeatureReqHandler
  9251 ;;		_USBStdGetDscHandler
  9252 ;;		_USBStdGetStatusHandler
  9253 ;;		_USBStdSetCfgHandler
  9254 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9255 ;; This function is called by:
  9256 ;;		_USBCtrlTrfSetupHandler
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text39
  9261  0032EE                     __ptext39:
  9262                           	opt stack 0
  9263  0032EE                     _USBCheckStdRequest:
  9264                           	opt stack 8
  9265                           
  9266                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;incstack = 0
  9270  0032EE  0104               	movlb	4	; () banked
  9271  0032F0  3930               	swapf	48,w,b	;volatile
  9272  0032F2  32E8               	rrcf	wreg,f,c
  9273  0032F4  0B03               	andlw	3
  9274  0032F6  0900               	iorlw	0
  9275  0032F8  A4D8               	btfss	status,2,c
  9276  0032FA  0012               	return	
  9277  0032FC  D048               	goto	l1787
  9278  0032FE                     l1788:
  9279                           
  9280                           ; BSR set to: 4
  9281                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9282  0032FE  0100               	movlb	0	; () banked
  9283  003300  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9287  003302  0E08               	movlw	8
  9288  003304  6FCB               	movwf	_USBDeviceState& (0+255),b
  9289                           
  9290                           ;usb_device.c: 2713: break;
  9291  003306  0012               	return	
  9292  003308                     
  9293                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9294                           
  9295                           ; BSR set to: 0
  9296  003308  ECD7  F013         	call	_USBStdGetDscHandler	;wreg free
  9297                           
  9298                           ;usb_device.c: 2716: break;
  9299  00330C  0012               	return	
  9300  00330E                     
  9301                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9302  00330E  EC91  F018         	call	_USBStdSetCfgHandler	;wreg free
  9303                           
  9304                           ;usb_device.c: 2719: break;
  9305  003312  0012               	return	
  9306  003314                     
  9307                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9308  003314  0ED4               	movlw	low _USBActiveConfiguration
  9309  003316  0100               	movlb	0	; () banked
  9310  003318  6FAC               	movwf	_inPipes& (0+255),b
  9311  00331A  0E00               	movlw	high _USBActiveConfiguration
  9312  00331C  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9316  00331E  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9320  003320  0E01               	movlw	1
  9321  003322  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9322                           
  9323                           ; BSR set to: 0
  9324                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9325  003324  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9326                           
  9327                           ;usb_device.c: 2725: break;
  9328  003326  0012               	return	
  9329  003328                     
  9330                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9331                           
  9332                           ; BSR set to: 0
  9333  003328  EC7B  F01F         	call	_USBStdGetStatusHandler	;wreg free
  9334                           
  9335                           ;usb_device.c: 2728: break;
  9336  00332C  0012               	return	
  9337  00332E                     
  9338                           ;usb_device.c: 2730: case 3:
  9339                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9340  00332E  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9341                           
  9342                           ;usb_device.c: 2732: break;
  9343  003332  0012               	return	
  9344  003334                     
  9345                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9346  003334  0104               	movlb	4	; () banked
  9347  003336  5134               	movf	52,w,b	;volatile
  9348  003338  0D01               	mullw	1
  9349  00333A  0EF1               	movlw	low _USBAlternateInterface
  9350  00333C  24F3               	addwf	prodl,w,c
  9351  00333E  0100               	movlb	0	; () banked
  9352  003340  6FAC               	movwf	_inPipes& (0+255),b
  9353  003342  0E02               	movlw	high _USBAlternateInterface
  9354  003344  20F4               	addwfc	prodh,w,c
  9355  003346  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9359  003348  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9363  00334A  0E01               	movlw	1
  9364  00334C  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9368  00334E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9369                           
  9370                           ;usb_device.c: 2738: break;
  9371  003350  0012               	return	
  9372  003352                     l1797:
  9373                           
  9374                           ; BSR set to: 4
  9375                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9376  003352  0100               	movlb	0	; () banked
  9377  003354  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9378                           
  9379                           ; BSR set to: 0
  9380                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9381  003356  0104               	movlb	4	; () banked
  9382  003358  5134               	movf	52,w,b	;volatile
  9383  00335A  0D01               	mullw	1
  9384  00335C  0EF1               	movlw	low _USBAlternateInterface
  9385  00335E  24F3               	addwf	prodl,w,c
  9386  003360  6ED9               	movwf	fsr2l,c
  9387  003362  0E02               	movlw	high _USBAlternateInterface
  9388  003364  20F4               	addwfc	prodh,w,c
  9389  003366  6EDA               	movwf	fsr2h,c
  9390  003368  C432 FFDF          	movff	1074,indf2	;volatile
  9391                           
  9392                           ;usb_device.c: 2742: break;
  9393  00336C  0012               	return	
  9394  00336E                     
  9395                           ; BSR set to: 4
  9396                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9397                           
  9398                           ; BSR set to: 4
  9399  00336E  0E00               	movlw	0
  9400  003370  0100               	movlb	0	; () banked
  9401  003372  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9402  003374  0E02               	movlw	2
  9403  003376  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9404  003378  0E00               	movlw	0
  9405  00337A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9406  00337C  0E00               	movlw	0
  9407  00337E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9408  003380  0E00               	movlw	0
  9409  003382  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9410  003384  0E00               	movlw	0
  9411  003386  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9412  003388  EC0E  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9413                           
  9414                           ;usb_device.c: 2749: }
  9415                           
  9416                           ;usb_device.c: 2748: break;
  9417                           
  9418                           ;usb_device.c: 2747: default:
  9419                           
  9420                           ;usb_device.c: 2746: case 12:
  9421                           
  9422                           ;usb_device.c: 2745: break;
  9423  00338C  0012               	return	
  9424  00338E                     l1787:
  9425  00338E  0104               	movlb	4	; () banked
  9426  003390  5131               	movf	49,w,b	;volatile
  9427                           
  9428                           ; Switch size 1, requested type "space"
  9429                           ; Number of cases is 11, Range of values is 0 to 12
  9430                           ; switch strategies available:
  9431                           ; Name         Instructions Cycles
  9432                           ; simple_byte           34    18 (average)
  9433                           ;	Chosen strategy is simple_byte
  9434  003392  0A00               	xorlw	0	; case 0
  9435  003394  B4D8               	btfsc	status,2,c
  9436  003396  D7C8               	goto	l1793
  9437  003398  0A01               	xorlw	1	; case 1
  9438  00339A  B4D8               	btfsc	status,2,c
  9439  00339C  D7C8               	goto	l1794
  9440  00339E  0A02               	xorlw	2	; case 3
  9441  0033A0  B4D8               	btfsc	status,2,c
  9442  0033A2  D7C5               	goto	l1794
  9443  0033A4  0A06               	xorlw	6	; case 5
  9444  0033A6  B4D8               	btfsc	status,2,c
  9445  0033A8  D7AA               	goto	l1788
  9446  0033AA  0A03               	xorlw	3	; case 6
  9447  0033AC  B4D8               	btfsc	status,2,c
  9448  0033AE  D7AC               	goto	l1790
  9449  0033B0  0A01               	xorlw	1	; case 7
  9450  0033B2  B4D8               	btfsc	status,2,c
  9451  0033B4  D7DC               	goto	l1798
  9452  0033B6  0A0F               	xorlw	15	; case 8
  9453  0033B8  B4D8               	btfsc	status,2,c
  9454  0033BA  D7AC               	goto	l1792
  9455  0033BC  0A01               	xorlw	1	; case 9
  9456  0033BE  B4D8               	btfsc	status,2,c
  9457  0033C0  D7A6               	goto	l1791
  9458  0033C2  0A03               	xorlw	3	; case 10
  9459  0033C4  B4D8               	btfsc	status,2,c
  9460  0033C6  D7B6               	goto	l1796
  9461  0033C8  0A01               	xorlw	1	; case 11
  9462  0033CA  B4D8               	btfsc	status,2,c
  9463  0033CC  D7C2               	goto	l1797
  9464  0033CE  0A07               	xorlw	7	; case 12
  9465  0033D0  0012               	return	
  9466  0033D2                     __end_of_USBCheckStdRequest:
  9467                           	opt stack 0
  9468                           tosu	equ	0xFFF
  9469                           tosh	equ	0xFFE
  9470                           tosl	equ	0xFFD
  9471                           pclath	equ	0xFFA
  9472                           tblptru	equ	0xFF8
  9473                           tblptrh	equ	0xFF7
  9474                           tblptrl	equ	0xFF6
  9475                           tablat	equ	0xFF5
  9476                           prodh	equ	0xFF4
  9477                           prodl	equ	0xFF3
  9478                           intcon	equ	0xFF2
  9479                           intcon2	equ	0xFF1
  9480                           intcon3	equ	0xFF0
  9481                           postinc0	equ	0xFEE
  9482                           plusw0	equ	0xFEB
  9483                           wreg	equ	0xFE8
  9484                           postinc1	equ	0xFE6
  9485                           postdec1	equ	0xFE5
  9486                           plusw1	equ	0xFE3
  9487                           fsr1h	equ	0xFE2
  9488                           fsr1l	equ	0xFE1
  9489                           indf2	equ	0xFDF
  9490                           postinc2	equ	0xFDE
  9491                           postdec2	equ	0xFDD
  9492                           plusw2	equ	0xFDB
  9493                           fsr2h	equ	0xFDA
  9494                           fsr2l	equ	0xFD9
  9495                           status	equ	0xFD8
  9496                           
  9497 ;; *************** function _USBStdSetCfgHandler *****************
  9498 ;; Defined at:
  9499 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;		None
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  i               1   49[BANK0 ] unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9514 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9516 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9517 ;;Total ram usage:        1 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:   15
  9520 ;; This function calls:
  9521 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9522 ;;		_memset
  9523 ;; This function is called by:
  9524 ;;		_USBCheckStdRequest
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           	psect	text40
  9529  003122                     __ptext40:
  9530                           	opt stack 0
  9531  003122                     _USBStdSetCfgHandler:
  9532                           	opt stack 8
  9533                           
  9534                           ;usb_device.c: 1988: uint8_t i;
  9535                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9536                           
  9537                           ;incstack = 0
  9538  003122  0100               	movlb	0	; () banked
  9539  003124  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9543  003126  0E27               	movlw	39
  9544  003128  6F7D               	movwf	memset@p1& (0+255),b
  9545  00312A  0E0F               	movlw	15
  9546  00312C  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9547  00312E  0E00               	movlw	0
  9548  003130  6F80               	movwf	(memset@c+1)& (0+255),b
  9549  003132  0E00               	movlw	0
  9550  003134  6F7F               	movwf	memset@c& (0+255),b
  9551  003136  0E00               	movlw	0
  9552  003138  6F82               	movwf	(memset@n+1)& (0+255),b
  9553  00313A  0E02               	movlw	2
  9554  00313C  6F81               	movwf	memset@n& (0+255),b
  9555  00313E  EC79  F02C         	call	_memset	;wreg free
  9556                           
  9557                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9558  003142  0E00               	movlw	0
  9559  003144  0100               	movlb	0	; () banked
  9560  003146  6F7D               	movwf	memset@p1& (0+255),b
  9561  003148  0E04               	movlw	4
  9562  00314A  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9563  00314C  0E00               	movlw	0
  9564  00314E  6F80               	movwf	(memset@c+1)& (0+255),b
  9565  003150  0E00               	movlw	0
  9566  003152  6F7F               	movwf	memset@c& (0+255),b
  9567  003154  0E00               	movlw	0
  9568  003156  6F82               	movwf	(memset@n+1)& (0+255),b
  9569  003158  0E30               	movlw	48
  9570  00315A  6F81               	movwf	memset@n& (0+255),b
  9571  00315C  EC79  F02C         	call	_memset	;wreg free
  9572                           
  9573                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9574  003160  8C65               	bsf	3941,6,c	;volatile
  9575                           
  9576                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9577  003162  0E00               	movlw	0
  9578  003164  0100               	movlb	0	; () banked
  9579  003166  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9580  003168                     l11407:
  9581                           
  9582                           ; BSR set to: 0
  9583  003168  0E02               	movlw	2
  9584  00316A  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9585  00316C  D001               	goto	l1704
  9586  00316E  D016               	goto	u9960
  9587  003170                     l1704:
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;usb_device.c: 2006: {
  9591                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9592                           
  9593                           ; BSR set to: 0
  9594  003170  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9595  003172  0D01               	mullw	1
  9596  003174  0ED1               	movlw	low _ep_data_in
  9597  003176  24F3               	addwf	prodl,w,c
  9598  003178  6ED9               	movwf	fsr2l,c
  9599  00317A  0E02               	movlw	high _ep_data_in
  9600  00317C  20F4               	addwfc	prodh,w,c
  9601  00317E  6EDA               	movwf	fsr2h,c
  9602  003180  0E00               	movlw	0
  9603  003182  6EDF               	movwf	indf2,c
  9604                           
  9605                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9606  003184  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9607  003186  0D01               	mullw	1
  9608  003188  0ECE               	movlw	low _ep_data_out
  9609  00318A  24F3               	addwf	prodl,w,c
  9610  00318C  6ED9               	movwf	fsr2l,c
  9611  00318E  0E02               	movlw	high _ep_data_out
  9612  003190  20F4               	addwfc	prodh,w,c
  9613  003192  6EDA               	movwf	fsr2h,c
  9614  003194  0E00               	movlw	0
  9615  003196  6EDF               	movwf	indf2,c
  9616                           
  9617                           ; BSR set to: 0
  9618  003198  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9619  00319A  D7E6               	goto	l11407
  9620  00319C                     u9960:
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;usb_device.c: 2009: }
  9624                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9625                           
  9626                           ; BSR set to: 0
  9627  00319C  0EF1               	movlw	low _USBAlternateInterface
  9628  00319E  6F7D               	movwf	memset@p1& (0+255),b
  9629  0031A0  0E02               	movlw	high _USBAlternateInterface
  9630  0031A2  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9631  0031A4  0E00               	movlw	0
  9632  0031A6  6F80               	movwf	(memset@c+1)& (0+255),b
  9633  0031A8  0E00               	movlw	0
  9634  0031AA  6F7F               	movwf	memset@c& (0+255),b
  9635  0031AC  0E00               	movlw	0
  9636  0031AE  6F82               	movwf	(memset@n+1)& (0+255),b
  9637  0031B0  0E02               	movlw	2
  9638  0031B2  6F81               	movwf	memset@n& (0+255),b
  9639  0031B4  EC79  F02C         	call	_memset	;wreg free
  9640                           
  9641                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9642  0031B8  9C65               	bcf	3941,6,c	;volatile
  9643                           
  9644                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9645  0031BA  0E08               	movlw	8
  9646  0031BC  0100               	movlb	0	; () banked
  9647  0031BE  6FB2               	movwf	_pBDTEntryIn& (0+255),b
  9648  0031C0  0E04               	movlw	4
  9649  0031C2  6FB3               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9653  0031C4  0E00               	movlw	0
  9654  0031C6  6FBC               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9655  0031C8  0E04               	movlw	4
  9656  0031CA  6FBD               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9660  0031CC  C0BC  F0BA         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9661  0031D0  C0BD  F0BB         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9665  0031D4  C432 F0D4          	movff	1074,_USBActiveConfiguration	;volatile
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9669  0031D8  51D4               	movf	_USBActiveConfiguration& (0+255),w,b
  9670  0031DA  A4D8               	btfss	status,2,c
  9671  0031DC  D003               	goto	l1706
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;usb_device.c: 2028: {
  9675                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9676  0031DE  0E10               	movlw	16
  9677  0031E0  6FCB               	movwf	_USBDeviceState& (0+255),b
  9678                           
  9679                           ;usb_device.c: 2031: }
  9680  0031E2  0012               	return	
  9681  0031E4                     l1706:
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;usb_device.c: 2032: else
  9685                           ;usb_device.c: 2033: {
  9686                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9687                           
  9688                           ; BSR set to: 0
  9689  0031E4  0E00               	movlw	0
  9690  0031E6  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9691  0031E8  0E01               	movlw	1
  9692  0031EA  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9693  0031EC  0ED4               	movlw	low _USBActiveConfiguration
  9694  0031EE  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9695  0031F0  0E00               	movlw	high _USBActiveConfiguration
  9696  0031F2  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9697  0031F4  0E00               	movlw	0
  9698  0031F6  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9699  0031F8  0E01               	movlw	1
  9700  0031FA  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9701  0031FC  EC0E  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9702                           
  9703                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9704  003200  0E20               	movlw	32
  9705  003202  0100               	movlb	0	; () banked
  9706  003204  6FCB               	movwf	_USBDeviceState& (0+255),b
  9707  003206  0012               	return	
  9708  003208                     __end_of_USBStdSetCfgHandler:
  9709                           	opt stack 0
  9710                           tosu	equ	0xFFF
  9711                           tosh	equ	0xFFE
  9712                           tosl	equ	0xFFD
  9713                           pclath	equ	0xFFA
  9714                           tblptru	equ	0xFF8
  9715                           tblptrh	equ	0xFF7
  9716                           tblptrl	equ	0xFF6
  9717                           tablat	equ	0xFF5
  9718                           prodh	equ	0xFF4
  9719                           prodl	equ	0xFF3
  9720                           intcon	equ	0xFF2
  9721                           intcon2	equ	0xFF1
  9722                           intcon3	equ	0xFF0
  9723                           postinc0	equ	0xFEE
  9724                           plusw0	equ	0xFEB
  9725                           wreg	equ	0xFE8
  9726                           postinc1	equ	0xFE6
  9727                           postdec1	equ	0xFE5
  9728                           plusw1	equ	0xFE3
  9729                           fsr1h	equ	0xFE2
  9730                           fsr1l	equ	0xFE1
  9731                           indf2	equ	0xFDF
  9732                           postinc2	equ	0xFDE
  9733                           postdec2	equ	0xFDD
  9734                           plusw2	equ	0xFDB
  9735                           fsr2h	equ	0xFDA
  9736                           fsr2l	equ	0xFD9
  9737                           status	equ	0xFD8
  9738                           
  9739 ;; *************** function _USBStdGetStatusHandler *****************
  9740 ;; Defined at:
  9741 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;		None
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;  p               2   30[BANK0 ] PTR struct __BDT
  9746 ;;		 -> NULL(0), BDT(48), 
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9757 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9758 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9759 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9760 ;;Total ram usage:        3 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:   11
  9763 ;; This function calls:
  9764 ;;		Nothing
  9765 ;; This function is called by:
  9766 ;;		_USBCheckStdRequest
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           	psect	text41
  9771  003EF6                     __ptext41:
  9772                           	opt stack 0
  9773  003EF6                     _USBStdGetStatusHandler:
  9774                           	opt stack 12
  9775                           
  9776                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;incstack = 0
  9780  003EF6  0E00               	movlw	0
  9781  003EF8  0104               	movlb	4	; () banked
  9782  003EFA  6F38               	movwf	56,b	;volatile
  9783                           
  9784                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  9785  003EFC  0E00               	movlw	0
  9786  003EFE  6F39               	movwf	57,b	;volatile
  9787                           
  9788                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  9789  003F00  D03D               	goto	l1725
  9790  003F02                     l1726:
  9791                           
  9792                           ; BSR set to: 4
  9793                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  9794  003F02  0100               	movlb	0	; () banked
  9795  003F04  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9796                           
  9797                           ;usb_device.c: 2163: }
  9798                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  9799                           
  9800                           ; BSR set to: 4
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;usb_device.c: 2161: {
  9804                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  9805                           
  9806                           ;usb_device.c: 2160: if(0 == 1)
  9807  003F06  0101               	movlb	1	; () banked
  9808  003F08  05E6               	decf	_RemoteWakeup& (0+255),w,b
  9809  003F0A  A4D8               	btfss	status,2,c
  9810  003F0C  D042               	goto	l1729
  9811                           
  9812                           ; BSR set to: 1
  9813                           ;usb_device.c: 2166: {
  9814                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  9815  003F0E  0104               	movlb	4	; () banked
  9816  003F10  8338               	bsf	56,1,b	;volatile
  9817                           
  9818                           ; BSR set to: 4
  9819                           ;usb_device.c: 2168: }
  9820                           ;usb_device.c: 2169: break;
  9821  003F12  D03F               	goto	l1729
  9822  003F14                     l1730:
  9823                           
  9824                           ; BSR set to: 4
  9825                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  9826  003F14  0100               	movlb	0	; () banked
  9827  003F16  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9828                           
  9829                           ;usb_device.c: 2172: break;
  9830  003F18  D03C               	goto	l1729
  9831  003F1A                     l1731:
  9832                           
  9833                           ; BSR set to: 4
  9834                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  9835  003F1A  0100               	movlb	0	; () banked
  9836  003F1C  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9837                           
  9838                           ;usb_device.c: 2178: {
  9839                           ;usb_device.c: 2179: BDT_ENTRY *p;
  9840                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  9841  003F1E  0104               	movlb	4	; () banked
  9842  003F20  BF34               	btfsc	52,7,b	;volatile
  9843  003F22  D00B               	goto	l1732
  9844                           
  9845                           ; BSR set to: 4
  9846                           ;usb_device.c: 2182: {
  9847                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9848  003F24  5134               	movf	52,w,b	;volatile
  9849  003F26  0B0F               	andlw	15
  9850  003F28  0100               	movlb	0	; () banked
  9851  003F2A  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
  9852  003F2C  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  9853  003F2E  0D02               	mullw	2
  9854  003F30  0E0E               	movlw	low _pBDTEntryOut
  9855  003F32  24F3               	addwf	prodl,w,c
  9856  003F34  6ED9               	movwf	fsr2l,c
  9857  003F36  0E03               	movlw	high _pBDTEntryOut
  9858  003F38  D00B               	goto	L5
  9859  003F3A                     l1732:
  9860                           
  9861                           ;usb_device.c: 2185: else
  9862                           ;usb_device.c: 2186: {
  9863                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9864                           
  9865                           ; BSR set to: 0
  9866  003F3A  0104               	movlb	4	; () banked
  9867  003F3C  5134               	movf	52,w,b	;volatile
  9868  003F3E  0B0F               	andlw	15
  9869  003F40  0100               	movlb	0	; () banked
  9870  003F42  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
  9871  003F44  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  9872  003F46  0D02               	mullw	2
  9873  003F48  0EB2               	movlw	low _pBDTEntryIn
  9874  003F4A  24F3               	addwf	prodl,w,c
  9875  003F4C  6ED9               	movwf	fsr2l,c
  9876  003F4E  0E00               	movlw	high _pBDTEntryIn
  9877  003F50                     L5:
  9878  003F50  20F4               	addwfc	prodh,w,c
  9879  003F52  6EDA               	movwf	fsr2h,c
  9880  003F54  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
  9881  003F58  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;usb_device.c: 2188: }
  9885                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  9886                           
  9887                           ; BSR set to: 0
  9888  003F5C  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  9889  003F60  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  9890  003F64  AEDF               	btfss	indf2,7,c
  9891  003F66  D015               	goto	l1729
  9892                           
  9893                           ; BSR set to: 0
  9894  003F68  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  9895  003F6C  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  9896  003F70  A4DF               	btfss	indf2,2,c
  9897  003F72  D00F               	goto	l1729
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  9901  003F74  0E01               	movlw	1
  9902  003F76  0104               	movlb	4	; () banked
  9903  003F78  6F38               	movwf	56,b	;volatile
  9904                           
  9905                           ; BSR set to: 4
  9906                           ;usb_device.c: 2193: }
  9907                           ;usb_device.c: 2194: }
  9908                           
  9909                           ; BSR set to: 4
  9910                           ;usb_device.c: 2192: break;
  9911  003F7A  D00B               	goto	l1729
  9912  003F7C                     l1725:
  9913                           
  9914                           ; BSR set to: 4
  9915                           
  9916                           ; BSR set to: 4
  9917  003F7C  5130               	movf	48,w,b	;volatile
  9918  003F7E  0B1F               	andlw	31
  9919                           
  9920                           ; Switch size 1, requested type "space"
  9921                           ; Number of cases is 3, Range of values is 0 to 2
  9922                           ; switch strategies available:
  9923                           ; Name         Instructions Cycles
  9924                           ; simple_byte           10     6 (average)
  9925                           ;	Chosen strategy is simple_byte
  9926  003F80  0A00               	xorlw	0	; case 0
  9927  003F82  B4D8               	btfsc	status,2,c
  9928  003F84  D7BE               	goto	l1726
  9929  003F86  0A01               	xorlw	1	; case 1
  9930  003F88  B4D8               	btfsc	status,2,c
  9931  003F8A  D7C4               	goto	l1730
  9932  003F8C  0A03               	xorlw	3	; case 2
  9933  003F8E  B4D8               	btfsc	status,2,c
  9934  003F90  D7C4               	goto	l1731
  9935  003F92                     l1729:
  9936                           
  9937                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  9938  003F92  0100               	movlb	0	; () banked
  9939  003F94  AFAF               	btfss	(_inPipes+3)& (0+255),7,b
  9940  003F96  0012               	return	
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;usb_device.c: 2197: {
  9944                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  9945  003F98  0E38               	movlw	56
  9946  003F9A  6FAC               	movwf	_inPipes& (0+255),b
  9947  003F9C  0E04               	movlw	4
  9948  003F9E  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9952  003FA0  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9953                           
  9954                           ; BSR set to: 0
  9955                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
  9956  003FA2  0E02               	movlw	2
  9957  003FA4  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9958  003FA6  0012               	return	
  9959  003FA8                     __end_of_USBStdGetStatusHandler:
  9960                           	opt stack 0
  9961                           tosu	equ	0xFFF
  9962                           tosh	equ	0xFFE
  9963                           tosl	equ	0xFFD
  9964                           pclath	equ	0xFFA
  9965                           tblptru	equ	0xFF8
  9966                           tblptrh	equ	0xFF7
  9967                           tblptrl	equ	0xFF6
  9968                           tablat	equ	0xFF5
  9969                           prodh	equ	0xFF4
  9970                           prodl	equ	0xFF3
  9971                           intcon	equ	0xFF2
  9972                           intcon2	equ	0xFF1
  9973                           intcon3	equ	0xFF0
  9974                           postinc0	equ	0xFEE
  9975                           plusw0	equ	0xFEB
  9976                           wreg	equ	0xFE8
  9977                           postinc1	equ	0xFE6
  9978                           postdec1	equ	0xFE5
  9979                           plusw1	equ	0xFE3
  9980                           fsr1h	equ	0xFE2
  9981                           fsr1l	equ	0xFE1
  9982                           indf2	equ	0xFDF
  9983                           postinc2	equ	0xFDE
  9984                           postdec2	equ	0xFDD
  9985                           plusw2	equ	0xFDB
  9986                           fsr2h	equ	0xFDA
  9987                           fsr2l	equ	0xFD9
  9988                           status	equ	0xFD8
  9989                           
  9990 ;; *************** function _USBStdGetDscHandler *****************
  9991 ;; Defined at:
  9992 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;		None
  9995 ;; Auto vars:     Size  Location     Type
  9996 ;;		None
  9997 ;; Return value:  Size  Location     Type
  9998 ;;                  1    wreg      void 
  9999 ;; Registers used:
 10000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10001 ;; Tracked objects:
 10002 ;;		On entry : 0/0
 10003 ;;		On exit  : 0/0
 10004 ;;		Unchanged: 0/0
 10005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10008 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10010 ;;Total ram usage:        2 bytes
 10011 ;; Hardware stack levels used:    1
 10012 ;; Hardware stack levels required when called:   11
 10013 ;; This function calls:
 10014 ;;		Nothing
 10015 ;; This function is called by:
 10016 ;;		_USBCheckStdRequest
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           	psect	text42
 10021  0027AE                     __ptext42:
 10022                           	opt stack 0
 10023  0027AE                     _USBStdGetDscHandler:
 10024                           	opt stack 12
 10025                           
 10026                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;incstack = 0
 10030  0027AE  0E80               	movlw	128
 10031  0027B0  0104               	movlb	4	; () banked
 10032  0027B2  1930               	xorwf	48,w,b	;volatile
 10033  0027B4  A4D8               	btfss	status,2,c
 10034  0027B6  0012               	return	
 10035                           
 10036                           ; BSR set to: 4
 10037                           ;usb_device.c: 2064: {
 10038                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10039  0027B8  0EC0               	movlw	192
 10040  0027BA  0100               	movlb	0	; () banked
 10041  0027BC  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10042                           
 10043                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10044  0027BE  D082               	goto	l1712
 10045  0027C0                     
 10046                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10047                           
 10048                           ; BSR set to: 0
 10049  0027C0  0E7A               	movlw	low _device_dsc
 10050  0027C2  0100               	movlb	0	; () banked
 10051  0027C4  6FAC               	movwf	_inPipes& (0+255),b
 10052  0027C6  0EFE               	movlw	high _device_dsc
 10053  0027C8  6FAD               	movwf	(_inPipes+1)& (0+255),b
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10057  0027CA  0E00               	movlw	0
 10058  0027CC  6FB1               	movwf	(_inPipes+5)& (0+255),b
 10059  0027CE  0E12               	movlw	18
 10060  0027D0  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10061                           
 10062                           ;usb_device.c: 2076: break;
 10063  0027D2  0012               	return	
 10064  0027D4                     
 10065                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10066                           
 10067                           ; BSR set to: 0
 10068  0027D4  0104               	movlb	4	; () banked
 10069  0027D6  5132               	movf	50,w,b	;volatile
 10070  0027D8  A4D8               	btfss	status,2,c
 10071  0027DA  D040               	goto	l1716
 10072                           
 10073                           ; BSR set to: 4
 10074                           ;usb_device.c: 2082: {
 10075                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10076  0027DC  5132               	movf	50,w,b	;volatile
 10077  0027DE  0D02               	mullw	2
 10078  0027E0  0E5F               	movlw	low _USB_CD_Ptr
 10079  0027E2  24F3               	addwf	prodl,w,c
 10080  0027E4  6EF6               	movwf	tblptrl,c
 10081  0027E6  0EFC               	movlw	high _USB_CD_Ptr
 10082  0027E8  20F4               	addwfc	prodh,w,c
 10083  0027EA  6EF7               	movwf	tblptrh,c
 10084  0027EC                     	if	0	;There are less than 3 active tblptr bytes
 10085  0027EC                     	endif
 10086  0027EC  0009               	tblrd		*+
 10087  0027EE  CFF5 F0AC          	movff	tablat,_inPipes
 10088  0027F2  000A               	tblrd		*-
 10089  0027F4  CFF5 F0AD          	movff	tablat,_inPipes+1
 10090                           
 10091                           ; BSR set to: 4
 10092                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10093  0027F8  0E02               	movlw	2
 10094  0027FA  0100               	movlb	0	; () banked
 10095  0027FC  25AC               	addwf	_inPipes& (0+255),w,b
 10096  0027FE  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10097  002800  0E00               	movlw	0
 10098  002802  21AD               	addwfc	(_inPipes+1)& (0+255),w,b
 10099  002804  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10100  002806  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10101  00280A  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10102  00280E  6AF8               	clrf	tblptru,c
 10103  002810  0E0E               	movlw	(high __ramtop+-1)
 10104  002812  64F7               	cpfsgt	tblptrh,c
 10105  002814  D003               	bra	u5287
 10106  002816  0008               	tblrd		*
 10107  002818  50F5               	movf	tablat,w,c
 10108  00281A  D005               	bra	u5280
 10109  00281C                     u5287:
 10110  00281C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10111  002820  CFF7 FFEA          	movff	tblptrh,fsr0h
 10112  002824  50EF               	movf	indf0,w,c
 10113  002826                     u5280:
 10114  002826  0100               	movlb	0	; () banked
 10115  002828  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10119  00282A  0E03               	movlw	3
 10120  00282C  25AC               	addwf	_inPipes& (0+255),w,b
 10121  00282E  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10122  002830  0E00               	movlw	0
 10123  002832  21AD               	addwfc	(_inPipes+1)& (0+255),w,b
 10124  002834  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10125  002836  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10126  00283A  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10127  00283E  6AF8               	clrf	tblptru,c
 10128  002840  0E0E               	movlw	(high __ramtop+-1)
 10129  002842  64F7               	cpfsgt	tblptrh,c
 10130  002844  D003               	bra	u5297
 10131  002846  0008               	tblrd		*
 10132  002848  50F5               	movf	tablat,w,c
 10133  00284A  D005               	bra	u5290
 10134  00284C                     u5297:
 10135  00284C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10136  002850  CFF7 FFEA          	movff	tblptrh,fsr0h
 10137  002854  50EF               	movf	indf0,w,c
 10138  002856                     u5290:
 10139  002856  0100               	movlb	0	; () banked
 10140  002858  6FB1               	movwf	(_inPipes+5)& (0+255),b
 10141                           
 10142                           ;usb_device.c: 2094: }
 10143  00285A  0012               	return	
 10144  00285C                     l1716:
 10145                           
 10146                           ;usb_device.c: 2095: else
 10147                           ;usb_device.c: 2096: {
 10148                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10149                           
 10150                           ; BSR set to: 0
 10151  00285C  0E00               	movlw	0
 10152  00285E  0100               	movlb	0	; () banked
 10153  002860  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;usb_device.c: 2098: }
 10157                           ;usb_device.c: 2099: break;
 10158  002862  0012               	return	
 10159  002864                     
 10160                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10161                           
 10162                           ; BSR set to: 0
 10163  002864  0E03               	movlw	3
 10164  002866  0104               	movlb	4	; () banked
 10165  002868  6132               	cpfslt	50,b	;volatile
 10166  00286A  D024               	goto	l1719
 10167                           
 10168                           ; BSR set to: 4
 10169                           ;usb_device.c: 2105: {
 10170                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10171  00286C  5132               	movf	50,w,b	;volatile
 10172  00286E  0D02               	mullw	2
 10173  002870  0E59               	movlw	low _USB_SD_Ptr
 10174  002872  24F3               	addwf	prodl,w,c
 10175  002874  6EF6               	movwf	tblptrl,c
 10176  002876  0EFC               	movlw	high _USB_SD_Ptr
 10177  002878  20F4               	addwfc	prodh,w,c
 10178  00287A  6EF7               	movwf	tblptrh,c
 10179  00287C                     	if	0	;There are less than 3 active tblptr bytes
 10180  00287C                     	endif
 10181  00287C  0009               	tblrd		*+
 10182  00287E  CFF5 F0AC          	movff	tablat,_inPipes
 10183  002882  000A               	tblrd		*-
 10184  002884  CFF5 F0AD          	movff	tablat,_inPipes+1
 10185                           
 10186                           ; BSR set to: 4
 10187                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10188  002888  C0AC  FFF6         	movff	_inPipes,tblptrl
 10189  00288C  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 10190  002890  6AF8               	clrf	tblptru,c
 10191  002892  0E0E               	movlw	(high __ramtop+-1)
 10192  002894  64F7               	cpfsgt	tblptrh,c
 10193  002896  D003               	bra	u5317
 10194  002898  0008               	tblrd		*
 10195  00289A  50F5               	movf	tablat,w,c
 10196  00289C  D005               	bra	u5310
 10197  00289E                     u5317:
 10198  00289E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10199  0028A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 10200  0028A6  50EF               	movf	indf0,w,c
 10201  0028A8                     u5310:
 10202  0028A8  0100               	movlb	0	; () banked
 10203  0028AA  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10204  0028AC  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10205  0028AE  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10206  0028B0  6BB1               	clrf	(_inPipes+5)& (0+255),b
 10207                           
 10208                           ;usb_device.c: 2110: }
 10209  0028B2  0012               	return	
 10210  0028B4                     l1719:
 10211                           
 10212                           ;usb_device.c: 2120: else
 10213                           ;usb_device.c: 2121: {
 10214                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10215                           
 10216                           ; BSR set to: 0
 10217  0028B4  0E00               	movlw	0
 10218  0028B6  0100               	movlb	0	; () banked
 10219  0028B8  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10220                           
 10221                           ; BSR set to: 0
 10222                           ;usb_device.c: 2123: }
 10223                           ;usb_device.c: 2124: break;
 10224  0028BA  0012               	return	
 10225  0028BC                     
 10226                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10227                           
 10228                           ; BSR set to: 0
 10229  0028BC  0E00               	movlw	0
 10230  0028BE  0100               	movlb	0	; () banked
 10231  0028C0  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;usb_device.c: 2128: }
 10235                           
 10236                           ;usb_device.c: 2127: break;
 10237  0028C2  0012               	return	
 10238  0028C4                     l1712:
 10239                           
 10240                           ; BSR set to: 0
 10241                           
 10242                           ; BSR set to: 0
 10243  0028C4  0104               	movlb	4	; () banked
 10244  0028C6  5133               	movf	51,w,b	;volatile
 10245                           
 10246                           ; Switch size 1, requested type "space"
 10247                           ; Number of cases is 3, Range of values is 1 to 3
 10248                           ; switch strategies available:
 10249                           ; Name         Instructions Cycles
 10250                           ; simple_byte           10     6 (average)
 10251                           ;	Chosen strategy is simple_byte
 10252  0028C8  0A01               	xorlw	1	; case 1
 10253  0028CA  B4D8               	btfsc	status,2,c
 10254  0028CC  D779               	goto	l1713
 10255  0028CE  0A03               	xorlw	3	; case 2
 10256  0028D0  B4D8               	btfsc	status,2,c
 10257  0028D2  D780               	goto	l1715
 10258  0028D4  0A01               	xorlw	1	; case 3
 10259  0028D6  B4D8               	btfsc	status,2,c
 10260  0028D8  D7C5               	goto	l1718
 10261  0028DA  D7F0               	goto	l1721
 10262  0028DC                     __end_of_USBStdGetDscHandler:
 10263                           	opt stack 0
 10264                           tosu	equ	0xFFF
 10265                           tosh	equ	0xFFE
 10266                           tosl	equ	0xFFD
 10267                           pclath	equ	0xFFA
 10268                           tblptru	equ	0xFF8
 10269                           tblptrh	equ	0xFF7
 10270                           tblptrl	equ	0xFF6
 10271                           tablat	equ	0xFF5
 10272                           prodh	equ	0xFF4
 10273                           prodl	equ	0xFF3
 10274                           intcon	equ	0xFF2
 10275                           intcon2	equ	0xFF1
 10276                           intcon3	equ	0xFF0
 10277                           indf0	equ	0xFEF
 10278                           postinc0	equ	0xFEE
 10279                           plusw0	equ	0xFEB
 10280                           fsr0h	equ	0xFEA
 10281                           fsr0l	equ	0xFE9
 10282                           wreg	equ	0xFE8
 10283                           postinc1	equ	0xFE6
 10284                           postdec1	equ	0xFE5
 10285                           plusw1	equ	0xFE3
 10286                           fsr1h	equ	0xFE2
 10287                           fsr1l	equ	0xFE1
 10288                           indf2	equ	0xFDF
 10289                           postinc2	equ	0xFDE
 10290                           postdec2	equ	0xFDD
 10291                           plusw2	equ	0xFDB
 10292                           fsr2h	equ	0xFDA
 10293                           fsr2l	equ	0xFD9
 10294                           status	equ	0xFD8
 10295                           
 10296 ;; *************** function _USBStdFeatureReqHandler *****************
 10297 ;; Defined at:
 10298 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;		None
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10303 ;;		 -> NULL(0), BDT(48), 
 10304 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10305 ;;		 -> UEP0(1), 
 10306 ;;  current_ep_d    1   52[BANK0 ] struct .
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  1    wreg      void 
 10309 ;; Registers used:
 10310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10317 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10318 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10319 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10320 ;;Total ram usage:        6 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; Hardware stack levels required when called:   15
 10323 ;; This function calls:
 10324 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10325 ;; This function is called by:
 10326 ;;		_USBCheckStdRequest
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           	psect	text43
 10331  00135A                     __ptext43:
 10332                           	opt stack 0
 10333  00135A                     _USBStdFeatureReqHandler:
 10334                           	opt stack 8
 10335                           
 10336                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10337                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10338                           ;usb_device.c: 2778: unsigned char* pUEP;
 10339                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10340                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10341                           
 10342                           ;incstack = 0
 10343  00135A  0104               	movlb	4	; () banked
 10344  00135C  0532               	decf	50,w,b	;volatile
 10345  00135E  A4D8               	btfss	status,2,c
 10346  001360  D011               	goto	l1805
 10347                           
 10348                           ; BSR set to: 4
 10349  001362  5130               	movf	48,w,b	;volatile
 10350  001364  0B1F               	andlw	31
 10351  001366  0900               	iorlw	0
 10352  001368  A4D8               	btfss	status,2,c
 10353  00136A  D00C               	goto	l1805
 10354                           
 10355                           ; BSR set to: 4
 10356                           ;usb_device.c: 2818: {
 10357                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10358  00136C  0100               	movlb	0	; () banked
 10359  00136E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 10360                           
 10361                           ; BSR set to: 0
 10362                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10363  001370  0E03               	movlw	3
 10364  001372  0104               	movlb	4	; () banked
 10365  001374  1931               	xorwf	49,w,b	;volatile
 10366  001376  A4D8               	btfss	status,2,c
 10367  001378  D002               	goto	l1804
 10368                           
 10369                           ; BSR set to: 4
 10370                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10371  00137A  0E01               	movlw	1
 10372  00137C  D001               	goto	L6
 10373  00137E                     l1804:
 10374                           
 10375                           ;usb_device.c: 2822: else
 10376                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10377                           
 10378                           ; BSR set to: 1
 10379  00137E  0E00               	movlw	0
 10380  001380                     L6:
 10381  001380  0101               	movlb	1	; () banked
 10382  001382  6FE6               	movwf	_RemoteWakeup& (0+255),b
 10383  001384                     l1805:
 10384                           
 10385                           ;usb_device.c: 2824: }
 10386                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10387                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10388                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10389                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10390                           
 10391                           ; BSR set to: 1
 10392  001384  0104               	movlb	4	; () banked
 10393  001386  5132               	movf	50,w,b	;volatile
 10394  001388  A4D8               	btfss	status,2,c
 10395  00138A  0012               	return	
 10396                           
 10397                           ; BSR set to: 4
 10398  00138C  5130               	movf	48,w,b	;volatile
 10399  00138E  0B1F               	andlw	31
 10400  001390  0A02               	xorlw	2
 10401  001392  A4D8               	btfss	status,2,c
 10402  001394  0012               	return	
 10403                           
 10404                           ; BSR set to: 4
 10405  001396  5134               	movf	52,w,b	;volatile
 10406  001398  0B0F               	andlw	15
 10407  00139A  0900               	iorlw	0
 10408  00139C  B4D8               	btfsc	status,2,c
 10409  00139E  0012               	return	
 10410                           
 10411                           ; BSR set to: 4
 10412  0013A0  5134               	movf	52,w,b	;volatile
 10413  0013A2  0B0F               	andlw	15
 10414  0013A4  0100               	movlb	0	; () banked
 10415  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10416  0013A8  0E03               	movlw	3
 10417  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10418  0013AC  0012               	return	
 10419                           
 10420                           ; BSR set to: 0
 10421  0013AE  0E20               	movlw	32
 10422  0013B0  19CB               	xorwf	_USBDeviceState& (0+255),w,b
 10423  0013B2  A4D8               	btfss	status,2,c
 10424  0013B4  0012               	return	
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;usb_device.c: 2831: {
 10428                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10429  0013B6  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 10430                           
 10431                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10432  0013B8  0104               	movlb	4	; () banked
 10433  0013BA  BF34               	btfsc	52,7,b	;volatile
 10434  0013BC  D01C               	goto	l1807
 10435                           
 10436                           ; BSR set to: 4
 10437                           ;usb_device.c: 2838: {
 10438                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10439  0013BE  5134               	movf	52,w,b	;volatile
 10440  0013C0  0B0F               	andlw	15
 10441  0013C2  0100               	movlb	0	; () banked
 10442  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10443  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10444  0013C8  0D02               	mullw	2
 10445  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10446  0013CC  24F3               	addwf	prodl,w,c
 10447  0013CE  6ED9               	movwf	fsr2l,c
 10448  0013D0  0E03               	movlw	high _pBDTEntryOut
 10449  0013D2  20F4               	addwfc	prodh,w,c
 10450  0013D4  6EDA               	movwf	fsr2h,c
 10451  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10452  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10453                           
 10454                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10455  0013DE  0104               	movlb	4	; () banked
 10456  0013E0  5134               	movf	52,w,b	;volatile
 10457  0013E2  0B0F               	andlw	15
 10458  0013E4  0100               	movlb	0	; () banked
 10459  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10460  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10461  0013EA  0D01               	mullw	1
 10462  0013EC  0ECE               	movlw	low _ep_data_out
 10463  0013EE  24F3               	addwf	prodl,w,c
 10464  0013F0  6ED9               	movwf	fsr2l,c
 10465  0013F2  0E02               	movlw	high _ep_data_out
 10466  0013F4  D01C               	goto	L7
 10467  0013F6                     l1807:
 10468                           
 10469                           ;usb_device.c: 2842: else
 10470                           ;usb_device.c: 2843: {
 10471                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10472                           
 10473                           ; BSR set to: 0
 10474  0013F6  0104               	movlb	4	; () banked
 10475  0013F8  5134               	movf	52,w,b	;volatile
 10476  0013FA  0B0F               	andlw	15
 10477  0013FC  0100               	movlb	0	; () banked
 10478  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10479  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10480  001402  0D02               	mullw	2
 10481  001404  0EB2               	movlw	low _pBDTEntryIn
 10482  001406  24F3               	addwf	prodl,w,c
 10483  001408  6ED9               	movwf	fsr2l,c
 10484  00140A  0E00               	movlw	high _pBDTEntryIn
 10485  00140C  20F4               	addwfc	prodh,w,c
 10486  00140E  6EDA               	movwf	fsr2h,c
 10487  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10488  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10489                           
 10490                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10491  001418  0104               	movlb	4	; () banked
 10492  00141A  5134               	movf	52,w,b	;volatile
 10493  00141C  0B0F               	andlw	15
 10494  00141E  0100               	movlb	0	; () banked
 10495  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10496  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10497  001424  0D01               	mullw	1
 10498  001426  0ED1               	movlw	low _ep_data_in
 10499  001428  24F3               	addwf	prodl,w,c
 10500  00142A  6ED9               	movwf	fsr2l,c
 10501  00142C  0E02               	movlw	high _ep_data_in
 10502  00142E                     L7:
 10503  00142E  20F4               	addwfc	prodh,w,c
 10504  001430  6EDA               	movwf	fsr2h,c
 10505  001432  50DF               	movf	indf2,w,c
 10506  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10507                           
 10508                           ; BSR set to: 0
 10509                           ;usb_device.c: 2846: }
 10510                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10511                           
 10512                           ; BSR set to: 0
 10513  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10514  001438  D002               	goto	l1809
 10515                           
 10516                           ; BSR set to: 0
 10517                           ;usb_device.c: 2853: {
 10518                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10519  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10520                           
 10521                           ;usb_device.c: 2855: }
 10522  00143C  D001               	goto	l1810
 10523  00143E                     l1809:
 10524                           
 10525                           ; BSR set to: 0
 10526                           ;usb_device.c: 2856: else
 10527                           ;usb_device.c: 2857: {
 10528                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10529                           
 10530                           ; BSR set to: 0
 10531  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10532  001440                     l1810:
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;usb_device.c: 2859: }
 10536                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10537                           
 10538                           ; BSR set to: 0
 10539  001440  0104               	movlb	4	; () banked
 10540  001442  BF34               	btfsc	52,7,b	;volatile
 10541  001444  D00B               	goto	l1811
 10542                           
 10543                           ; BSR set to: 4
 10544                           ;usb_device.c: 2865: {
 10545                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10546  001446  5134               	movf	52,w,b	;volatile
 10547  001448  0B0F               	andlw	15
 10548  00144A  0100               	movlb	0	; () banked
 10549  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10550  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10551  001450  0D02               	mullw	2
 10552  001452  0E0E               	movlw	low _pBDTEntryOut
 10553  001454  24F3               	addwf	prodl,w,c
 10554  001456  6ED9               	movwf	fsr2l,c
 10555  001458  0E03               	movlw	high _pBDTEntryOut
 10556  00145A  D00B               	goto	L8
 10557  00145C                     l1811:
 10558                           
 10559                           ;usb_device.c: 2868: else
 10560                           ;usb_device.c: 2869: {
 10561                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10562                           
 10563                           ; BSR set to: 0
 10564  00145C  0104               	movlb	4	; () banked
 10565  00145E  5134               	movf	52,w,b	;volatile
 10566  001460  0B0F               	andlw	15
 10567  001462  0100               	movlb	0	; () banked
 10568  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10569  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10570  001468  0D02               	mullw	2
 10571  00146A  0EB2               	movlw	low _pBDTEntryIn
 10572  00146C  24F3               	addwf	prodl,w,c
 10573  00146E  6ED9               	movwf	fsr2l,c
 10574  001470  0E00               	movlw	high _pBDTEntryIn
 10575  001472                     L8:
 10576  001472  20F4               	addwfc	prodh,w,c
 10577  001474  6EDA               	movwf	fsr2h,c
 10578  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10579  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10580                           
 10581                           ; BSR set to: 0
 10582                           ;usb_device.c: 2871: }
 10583                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10584                           
 10585                           ; BSR set to: 0
 10586  00147E  0E03               	movlw	3
 10587  001480  0104               	movlb	4	; () banked
 10588  001482  1931               	xorwf	49,w,b	;volatile
 10589  001484  A4D8               	btfss	status,2,c
 10590  001486  D031               	goto	l1813
 10591                           
 10592                           ; BSR set to: 4
 10593                           ;usb_device.c: 2875: {
 10594                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10595  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10596  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10597  001490  0100               	movlb	0	; () banked
 10598  001492  AEDF               	btfss	indf2,7,c
 10599  001494  D01D               	goto	l1816
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;usb_device.c: 2877: {
 10603                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10604  001496  0104               	movlb	4	; () banked
 10605  001498  BF34               	btfsc	52,7,b	;volatile
 10606  00149A  D00B               	goto	l1815
 10607                           
 10608                           ; BSR set to: 4
 10609                           ;usb_device.c: 2881: {
 10610                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10611  00149C  5134               	movf	52,w,b	;volatile
 10612  00149E  0B0F               	andlw	15
 10613  0014A0  0100               	movlb	0	; () banked
 10614  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10615  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10616  0014A6  0D01               	mullw	1
 10617  0014A8  0ECE               	movlw	low _ep_data_out
 10618  0014AA  24F3               	addwf	prodl,w,c
 10619  0014AC  6ED9               	movwf	fsr2l,c
 10620  0014AE  0E02               	movlw	high _ep_data_out
 10621  0014B0  D00B               	goto	L9
 10622  0014B2                     l1815:
 10623                           
 10624                           ;usb_device.c: 2884: else
 10625                           ;usb_device.c: 2885: {
 10626                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10627                           
 10628                           ; BSR set to: 2
 10629  0014B2  0104               	movlb	4	; () banked
 10630  0014B4  5134               	movf	52,w,b	;volatile
 10631  0014B6  0B0F               	andlw	15
 10632  0014B8  0100               	movlb	0	; () banked
 10633  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10634  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10635  0014BE  0D01               	mullw	1
 10636  0014C0  0ED1               	movlw	low _ep_data_in
 10637  0014C2  24F3               	addwf	prodl,w,c
 10638  0014C4  6ED9               	movwf	fsr2l,c
 10639  0014C6  0E02               	movlw	high _ep_data_in
 10640  0014C8                     L9:
 10641  0014C8  20F4               	addwfc	prodh,w,c
 10642  0014CA  6EDA               	movwf	fsr2h,c
 10643  0014CC  0102               	movlb	2	; () banked
 10644  0014CE  82DF               	bsf	indf2,1,c
 10645  0014D0                     l1816:
 10646                           
 10647                           ;usb_device.c: 2887: }
 10648                           ;usb_device.c: 2888: }
 10649                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10650                           
 10651                           ; BSR set to: 2
 10652                           
 10653                           ; BSR set to: 2
 10654  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10655  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10656  0014D8  0E00               	movlw	0
 10657  0014DA  84DB               	bsf	plusw2,2,c
 10658                           
 10659                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10660  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10661  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10662  0014E4  0E00               	movlw	0
 10663  0014E6  8EDB               	bsf	plusw2,7,c
 10664                           
 10665                           ;usb_device.c: 2893: }
 10666  0014E8  0012               	return	
 10667  0014EA                     l1813:
 10668                           
 10669                           ;usb_device.c: 2894: else
 10670                           ;usb_device.c: 2895: {
 10671                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10672  0014EA  0E04               	movlw	4
 10673  0014EC  0100               	movlb	0	; () banked
 10674  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10675                           
 10676                           ; BSR set to: 0
 10677                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10678  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10679  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10680  0014F8  AEDF               	btfss	indf2,7,c
 10681  0014FA  D01B               	goto	l1818
 10682                           
 10683                           ; BSR set to: 0
 10684                           ;usb_device.c: 2902: {
 10685                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10686  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10687  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10688  001504  0E7F               	movlw	127
 10689  001506  16DF               	andwf	indf2,f,c
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10693  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10694  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10695  001510  0E00               	movlw	0
 10696  001512  8CDB               	bsf	plusw2,6,c
 10697                           
 10698                           ; BSR set to: 0
 10699                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10700  001514  0E00               	movlw	0
 10701  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10702  001518  0E05               	movlw	5
 10703  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10704  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10705  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10706  001524  0E00               	movlw	0
 10707  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10708  001528  0E02               	movlw	2
 10709  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10710  00152C  EC0E  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10711                           
 10712                           ;usb_device.c: 2908: }
 10713  001530  D006               	goto	l1819
 10714  001532                     l1818:
 10715                           
 10716                           ;usb_device.c: 2909: else
 10717                           ;usb_device.c: 2910: {
 10718                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10719  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10720  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10721  00153A  0E00               	movlw	0
 10722  00153C  8CDB               	bsf	plusw2,6,c
 10723  00153E                     l1819:
 10724                           
 10725                           ;usb_device.c: 2913: }
 10726                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10727  00153E  0E04               	movlw	4
 10728  001540  0100               	movlb	0	; () banked
 10729  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10730                           
 10731                           ; BSR set to: 0
 10732                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10733  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10734  001546  D006               	goto	u10140
 10735                           
 10736                           ; BSR set to: 0
 10737  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10738  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10739  001550  AEDF               	btfss	indf2,7,c
 10740  001552  D033               	goto	l1820
 10741  001554                     u10140:
 10742                           
 10743                           ; BSR set to: 0
 10744                           ;usb_device.c: 2924: {
 10745                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 10746  001554  0104               	movlb	4	; () banked
 10747  001556  BF34               	btfsc	52,7,b	;volatile
 10748  001558  D00B               	goto	l1823
 10749                           
 10750                           ; BSR set to: 4
 10751                           ;usb_device.c: 2926: {
 10752                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10753  00155A  5134               	movf	52,w,b	;volatile
 10754  00155C  0B0F               	andlw	15
 10755  00155E  0100               	movlb	0	; () banked
 10756  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10757  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10758  001564  0D01               	mullw	1
 10759  001566  0ECE               	movlw	low _ep_data_out
 10760  001568  24F3               	addwf	prodl,w,c
 10761  00156A  6ED9               	movwf	fsr2l,c
 10762  00156C  0E02               	movlw	high _ep_data_out
 10763  00156E  D00B               	goto	L10
 10764  001570                     l1823:
 10765                           
 10766                           ;usb_device.c: 2929: else
 10767                           ;usb_device.c: 2930: {
 10768                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10769                           
 10770                           ; BSR set to: 2
 10771  001570  0104               	movlb	4	; () banked
 10772  001572  5134               	movf	52,w,b	;volatile
 10773  001574  0B0F               	andlw	15
 10774  001576  0100               	movlb	0	; () banked
 10775  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10776  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10777  00157C  0D01               	mullw	1
 10778  00157E  0ED1               	movlw	low _ep_data_in
 10779  001580  24F3               	addwf	prodl,w,c
 10780  001582  6ED9               	movwf	fsr2l,c
 10781  001584  0E02               	movlw	high _ep_data_in
 10782  001586                     L10:
 10783  001586  20F4               	addwfc	prodh,w,c
 10784  001588  6EDA               	movwf	fsr2h,c
 10785  00158A  0102               	movlb	2	; () banked
 10786  00158C  92DF               	bcf	indf2,1,c
 10787                           
 10788                           ; BSR set to: 2
 10789                           ;usb_device.c: 2932: }
 10790                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10791                           
 10792                           ; BSR set to: 2
 10793  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10794  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10795  001596  0E3B               	movlw	59
 10796  001598  16DF               	andwf	indf2,f,c
 10797                           
 10798                           ; BSR set to: 2
 10799                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10800  00159A  0E00               	movlw	0
 10801  00159C  0100               	movlb	0	; () banked
 10802  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10803  0015A0  0E05               	movlw	5
 10804  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10805  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10806  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10807  0015AC  0E00               	movlw	0
 10808  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10809  0015B0  0E02               	movlw	2
 10810  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10811  0015B4  EC0E  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10812                           
 10813                           ;usb_device.c: 2938: }
 10814  0015B8  D006               	goto	l1825
 10815  0015BA                     l1820:
 10816                           
 10817                           ;usb_device.c: 2939: else
 10818                           ;usb_device.c: 2940: {
 10819                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10820  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10821  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10822  0015C2  0E3B               	movlw	59
 10823  0015C4  16DF               	andwf	indf2,f,c
 10824  0015C6                     l1825:
 10825                           
 10826                           ;usb_device.c: 2943: }
 10827                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 10828  0015C6  0104               	movlb	4	; () banked
 10829  0015C8  5134               	movf	52,w,b	;volatile
 10830  0015CA  0B0F               	andlw	15
 10831  0015CC  0100               	movlb	0	; () banked
 10832  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10833  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10834  0015D2  0D01               	mullw	1
 10835  0015D4  0E26               	movlw	38
 10836  0015D6  24F3               	addwf	prodl,w,c
 10837  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 10838  0015DA  0E0F               	movlw	15
 10839  0015DC  20F4               	addwfc	prodh,w,c
 10840  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 10844  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 10845  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 10846  0015E8  0EFE               	movlw	254
 10847  0015EA  16DF               	andwf	indf2,f,c
 10848                           
 10849                           ; BSR set to: 0
 10850  0015EC  0012               	return	
 10851  0015EE                     __end_of_USBStdFeatureReqHandler:
 10852                           	opt stack 0
 10853                           tosu	equ	0xFFF
 10854                           tosh	equ	0xFFE
 10855                           tosl	equ	0xFFD
 10856                           pclath	equ	0xFFA
 10857                           tblptru	equ	0xFF8
 10858                           tblptrh	equ	0xFF7
 10859                           tblptrl	equ	0xFF6
 10860                           tablat	equ	0xFF5
 10861                           prodh	equ	0xFF4
 10862                           prodl	equ	0xFF3
 10863                           intcon	equ	0xFF2
 10864                           intcon2	equ	0xFF1
 10865                           intcon3	equ	0xFF0
 10866                           indf0	equ	0xFEF
 10867                           postinc0	equ	0xFEE
 10868                           plusw0	equ	0xFEB
 10869                           fsr0h	equ	0xFEA
 10870                           fsr0l	equ	0xFE9
 10871                           wreg	equ	0xFE8
 10872                           postinc1	equ	0xFE6
 10873                           postdec1	equ	0xFE5
 10874                           plusw1	equ	0xFE3
 10875                           fsr1h	equ	0xFE2
 10876                           fsr1l	equ	0xFE1
 10877                           indf2	equ	0xFDF
 10878                           postinc2	equ	0xFDE
 10879                           postdec2	equ	0xFDD
 10880                           plusw2	equ	0xFDB
 10881                           fsr2h	equ	0xFDA
 10882                           fsr2l	equ	0xFD9
 10883                           status	equ	0xFD8
 10884                           
 10885 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 10886 ;; Defined at:
 10887 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 10888 ;; Parameters:    Size  Location     Type
 10889 ;;  event           2   41[BANK0 ] enum E8346
 10890 ;;  pdata           2   43[BANK0 ] PTR void 
 10891 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 10892 ;;  size            2   45[BANK0 ] unsigned int 
 10893 ;; Auto vars:     Size  Location     Type
 10894 ;;		None
 10895 ;; Return value:  Size  Location     Type
 10896 ;;                  1    wreg      unsigned char 
 10897 ;; Registers used:
 10898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10899 ;; Tracked objects:
 10900 ;;		On entry : 0/0
 10901 ;;		On exit  : 0/0
 10902 ;;		Unchanged: 0/0
 10903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10904 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10907 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10908 ;;Total ram usage:        8 bytes
 10909 ;; Hardware stack levels used:    1
 10910 ;; Hardware stack levels required when called:   14
 10911 ;; This function calls:
 10912 ;;		_CDCInitEP
 10913 ;;		_USBCheckCDCRequest
 10914 ;; This function is called by:
 10915 ;;		_USBDeviceTasks
 10916 ;;		_USBStdSetCfgHandler
 10917 ;;		_USBSuspend
 10918 ;;		_USBWakeFromSuspend
 10919 ;;		_USBCtrlTrfSetupHandler
 10920 ;;		_USBCheckStdRequest
 10921 ;;		_USBStdFeatureReqHandler
 10922 ;; This function uses a non-reentrant model
 10923 ;;
 10924                           
 10925                           	psect	text44
 10926  004E1C                     __ptext44:
 10927                           	opt stack 0
 10928  004E1C                     _USER_USB_CALLBACK_EVENT_HANDLER:
 10929                           	opt stack 12
 10930                           
 10931                           ;usb_device_mgr.c: 106: switch( (int) event )
 10932                           
 10933                           ;incstack = 0
 10934  004E1C  D006               	goto	l1979
 10935  004E1E                     
 10936                           ;usb_device_mgr.c: 134: CDCInitEP();
 10937  004E1E  ECD9  F025         	call	_CDCInitEP	;wreg free
 10938                           
 10939                           ;usb_device_mgr.c: 142: break;
 10940                           
 10941                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 10942                           
 10943                           ;usb_device_mgr.c: 139: break;
 10944  004E22  0012               	return	
 10945  004E24                     
 10946                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 10947  004E24  ECD4  F01F         	call	_USBCheckCDCRequest	;wreg free
 10948                           
 10949                           ;usb_device_mgr.c: 163: }
 10950                           
 10951                           ;usb_device_mgr.c: 162: break;
 10952                           
 10953                           ;usb_device_mgr.c: 161: default:
 10954                           
 10955                           ;usb_device_mgr.c: 159: break;
 10956                           
 10957                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 10958                           
 10959                           ;usb_device_mgr.c: 156: break;
 10960                           
 10961                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 10962                           
 10963                           ;usb_device_mgr.c: 153: break;
 10964  004E28  0012               	return	
 10965  004E2A                     l1979:
 10966  004E2A  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 10967  004E2E  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 10968                           
 10969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10970                           ; Switch size 1, requested type "space"
 10971                           ; Number of cases is 2, Range of values is 0 to 127
 10972                           ; switch strategies available:
 10973                           ; Name         Instructions Cycles
 10974                           ; simple_byte            7     4 (average)
 10975                           ;	Chosen strategy is simple_byte
 10976  004E32  0100               	movlb	0	; () banked
 10977  004E34  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 10978  004E36  0A00               	xorlw	0	; case 0
 10979  004E38  B4D8               	btfsc	status,2,c
 10980  004E3A  D004               	goto	l14191
 10981  004E3C  0A7F               	xorlw	127	; case 127
 10982  004E3E  A4D8               	btfss	status,2,c
 10983  004E40  0012               	return	
 10984  004E42  D018               	goto	l14193
 10985  004E44                     l14191:
 10986                           
 10987                           ; BSR set to: 0
 10988                           ; Switch size 1, requested type "space"
 10989                           ; Number of cases is 8, Range of values is 1 to 117
 10990                           ; switch strategies available:
 10991                           ; Name         Instructions Cycles
 10992                           ; simple_byte           25    13 (average)
 10993                           ;	Chosen strategy is simple_byte
 10994  004E44  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 10995  004E46  0A01               	xorlw	1	; case 1
 10996  004E48  B4D8               	btfsc	status,2,c
 10997  004E4A  D7E9               	goto	l1985
 10998  004E4C  0A03               	xorlw	3	; case 2
 10999  004E4E  B4D8               	btfsc	status,2,c
 11000  004E50  0012               	return	
 11001  004E52  0A01               	xorlw	1	; case 3
 11002  004E54  B4D8               	btfsc	status,2,c
 11003  004E56  D7E6               	goto	l1987
 11004  004E58  0A06               	xorlw	6	; case 5
 11005  004E5A  B4D8               	btfsc	status,2,c
 11006  004E5C  0012               	return	
 11007  004E5E  0A77               	xorlw	119	; case 114
 11008  004E60  B4D8               	btfsc	status,2,c
 11009  004E62  0012               	return	
 11010  004E64  0A01               	xorlw	1	; case 115
 11011  004E66  B4D8               	btfsc	status,2,c
 11012  004E68  0012               	return	
 11013  004E6A  0A07               	xorlw	7	; case 116
 11014  004E6C  B4D8               	btfsc	status,2,c
 11015  004E6E  0012               	return	
 11016  004E70  0A01               	xorlw	1	; case 117
 11017  004E72  0012               	return	
 11018  004E74                     l14193:
 11019                           
 11020                           ; BSR set to: 0
 11021                           ; Switch size 1, requested type "space"
 11022                           ; Number of cases is 1, Range of values is 255 to 255
 11023                           ; switch strategies available:
 11024                           ; Name         Instructions Cycles
 11025                           ; simple_byte            4     3 (average)
 11026                           ;	Chosen strategy is simple_byte
 11027  004E74  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11028  004E76  0AFF               	xorlw	255	; case 255
 11029  004E78  0012               	return	
 11030  004E7A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11031                           	opt stack 0
 11032                           tosu	equ	0xFFF
 11033                           tosh	equ	0xFFE
 11034                           tosl	equ	0xFFD
 11035                           pclath	equ	0xFFA
 11036                           tblptru	equ	0xFF8
 11037                           tblptrh	equ	0xFF7
 11038                           tblptrl	equ	0xFF6
 11039                           tablat	equ	0xFF5
 11040                           prodh	equ	0xFF4
 11041                           prodl	equ	0xFF3
 11042                           intcon	equ	0xFF2
 11043                           intcon2	equ	0xFF1
 11044                           intcon3	equ	0xFF0
 11045                           indf0	equ	0xFEF
 11046                           postinc0	equ	0xFEE
 11047                           plusw0	equ	0xFEB
 11048                           fsr0h	equ	0xFEA
 11049                           fsr0l	equ	0xFE9
 11050                           wreg	equ	0xFE8
 11051                           postinc1	equ	0xFE6
 11052                           postdec1	equ	0xFE5
 11053                           plusw1	equ	0xFE3
 11054                           fsr1h	equ	0xFE2
 11055                           fsr1l	equ	0xFE1
 11056                           indf2	equ	0xFDF
 11057                           postinc2	equ	0xFDE
 11058                           postdec2	equ	0xFDD
 11059                           plusw2	equ	0xFDB
 11060                           fsr2h	equ	0xFDA
 11061                           fsr2l	equ	0xFD9
 11062                           status	equ	0xFD8
 11063                           
 11064 ;; *************** function _USBCheckCDCRequest *****************
 11065 ;; Defined at:
 11066 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;		None
 11069 ;; Auto vars:     Size  Location     Type
 11070 ;;		None
 11071 ;; Return value:  Size  Location     Type
 11072 ;;                  1    wreg      void 
 11073 ;; Registers used:
 11074 ;;		wreg, status,2, status,0
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11084 ;;Total ram usage:        0 bytes
 11085 ;; Hardware stack levels used:    1
 11086 ;; Hardware stack levels required when called:   11
 11087 ;; This function calls:
 11088 ;;		Nothing
 11089 ;; This function is called by:
 11090 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11091 ;; This function uses a non-reentrant model
 11092 ;;
 11093                           
 11094                           	psect	text45
 11095  003FA8                     __ptext45:
 11096                           	opt stack 0
 11097  003FA8                     _USBCheckCDCRequest:
 11098                           	opt stack 14
 11099                           
 11100                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11101                           
 11102                           ;incstack = 0
 11103  003FA8  0104               	movlb	4	; () banked
 11104  003FAA  5130               	movf	48,w,b	;volatile
 11105  003FAC  0B1F               	andlw	31
 11106  003FAE  06E8               	decf	wreg,f,c
 11107  003FB0  A4D8               	btfss	status,2,c
 11108  003FB2  0012               	return	
 11109                           
 11110                           ; BSR set to: 4
 11111                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11112                           
 11113                           ; BSR set to: 4
 11114                           
 11115                           ; BSR set to: 4
 11116  003FB4  3930               	swapf	48,w,b	;volatile
 11117  003FB6  32E8               	rrcf	wreg,f,c
 11118  003FB8  0B03               	andlw	3
 11119  003FBA  06E8               	decf	wreg,f,c
 11120  003FBC  A4D8               	btfss	status,2,c
 11121  003FBE  0012               	return	
 11122                           
 11123                           ; BSR set to: 4
 11124                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11125                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11126                           
 11127                           ; BSR set to: 4
 11128                           
 11129                           ; BSR set to: 4
 11130  003FC0  5134               	movf	52,w,b	;volatile
 11131  003FC2  B4D8               	btfsc	status,2,c
 11132  003FC4  D037               	goto	l1881
 11133                           
 11134                           ; BSR set to: 4
 11135  003FC6  0534               	decf	52,w,b	;volatile
 11136  003FC8  A4D8               	btfss	status,2,c
 11137  003FCA  0012               	return	
 11138  003FCC  D033               	goto	l1881
 11139  003FCE                     
 11140                           ; BSR set to: 4
 11141                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11142                           
 11143                           ; BSR set to: 4
 11144  003FCE  0E81               	movlw	low _dummy_encapsulated_cmd_response
 11145  003FD0  0100               	movlb	0	; () banked
 11146  003FD2  6FAC               	movwf	_inPipes& (0+255),b
 11147  003FD4  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11148  003FD6  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11149                           
 11150                           ; BSR set to: 0
 11151                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11152  003FD8  0E00               	movlw	0
 11153  003FDA  6FB1               	movwf	(_inPipes+5)& (0+255),b
 11154  003FDC  0E08               	movlw	8
 11155  003FDE  6FB0               	movwf	(_inPipes+4)& (0+255),b
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11159  003FE0  81AF               	bsf	(_inPipes+3)& (0+255),0,b
 11160                           
 11161                           ; BSR set to: 0
 11162                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11163  003FE2  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11164                           
 11165                           ;usb_device_cdc.c: 178: break;
 11166  003FE4  0012               	return	
 11167  003FE6                     
 11168                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11169                           
 11170                           ; BSR set to: 0
 11171  003FE6  0E81               	movlw	low _dummy_encapsulated_cmd_response
 11172  003FE8  0100               	movlb	0	; () banked
 11173  003FEA  6FAC               	movwf	_inPipes& (0+255),b
 11174  003FEC  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11175  003FEE  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11179  003FF0  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11180                           
 11181                           ;usb_device_cdc.c: 183: break;
 11182  003FF2  0012               	return	
 11183  003FF4                     l1885:
 11184                           
 11185                           ; BSR set to: 4
 11186                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11187  003FF4  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11188  003FF8  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11189                           
 11190                           ; BSR set to: 4
 11191                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11192  003FFC  0E89               	movlw	low _line_coding
 11193  003FFE  0101               	movlb	1	; () banked
 11194  004000  6FC9               	movwf	_outPipes& (0+255),b
 11195  004002  0E03               	movlw	high _line_coding
 11196  004004  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11197                           
 11198                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11199  004006  0E00               	movlw	0
 11200  004008  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11201  00400A  0E00               	movlw	0
 11202  00400C  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11203                           
 11204                           ; BSR set to: 1
 11205                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11206  00400E  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11207                           
 11208                           ;usb_device_cdc.c: 192: break;
 11209  004010  0012               	return	
 11210  004012                     
 11211                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11212                           
 11213                           ; BSR set to: 1
 11214  004012  0E89               	movlw	low _line_coding
 11215  004014  0100               	movlb	0	; () banked
 11216  004016  6FAC               	movwf	_inPipes& (0+255),b
 11217  004018  0E03               	movlw	high _line_coding
 11218  00401A  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11219                           
 11220                           ; BSR set to: 0
 11221  00401C  0E00               	movlw	0
 11222  00401E  6FB1               	movwf	(_inPipes+5)& (0+255),b
 11223  004020  0E07               	movlw	7
 11224  004022  6FB0               	movwf	(_inPipes+4)& (0+255),b
 11225                           
 11226                           ; BSR set to: 0
 11227  004024  0EC1               	movlw	193
 11228  004026  6FAF               	movwf	(_inPipes+3)& (0+255),b
 11229                           
 11230                           ;usb_device_cdc.c: 199: break;
 11231  004028  0012               	return	
 11232  00402A                     l1887:
 11233                           
 11234                           ; BSR set to: 4
 11235                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11236  00402A  C432 F1E1          	movff	1074,_control_signal_bitmap	;volatile
 11237                           
 11238                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11239  00402E  0100               	movlb	0	; () banked
 11240  004030  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11241                           
 11242                           ; BSR set to: 0
 11243                           ;usb_device_cdc.c: 261: }
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;usb_device_cdc.c: 260: break;
 11247                           
 11248                           ;usb_device_cdc.c: 259: default:
 11249                           
 11250                           ;usb_device_cdc.c: 235: break;
 11251  004032  0012               	return	
 11252  004034                     l1881:
 11253                           
 11254                           ; BSR set to: 0
 11255  004034  0104               	movlb	4	; () banked
 11256  004036  5131               	movf	49,w,b	;volatile
 11257                           
 11258                           ; Switch size 1, requested type "space"
 11259                           ; Number of cases is 5, Range of values is 0 to 34
 11260                           ; switch strategies available:
 11261                           ; Name         Instructions Cycles
 11262                           ; simple_byte           16     9 (average)
 11263                           ;	Chosen strategy is simple_byte
 11264  004038  0A00               	xorlw	0	; case 0
 11265  00403A  B4D8               	btfsc	status,2,c
 11266  00403C  D7C8               	goto	l1882
 11267  00403E  0A01               	xorlw	1	; case 1
 11268  004040  B4D8               	btfsc	status,2,c
 11269  004042  D7D1               	goto	l1884
 11270  004044  0A21               	xorlw	33	; case 32
 11271  004046  B4D8               	btfsc	status,2,c
 11272  004048  D7D5               	goto	l1885
 11273  00404A  0A01               	xorlw	1	; case 33
 11274  00404C  B4D8               	btfsc	status,2,c
 11275  00404E  D7E1               	goto	l1886
 11276  004050  0A03               	xorlw	3	; case 34
 11277  004052  A4D8               	btfss	status,2,c
 11278  004054  0012               	return	
 11279  004056  D7E9               	goto	l1887
 11280  004058                     __end_of_USBCheckCDCRequest:
 11281                           	opt stack 0
 11282                           tosu	equ	0xFFF
 11283                           tosh	equ	0xFFE
 11284                           tosl	equ	0xFFD
 11285                           pclath	equ	0xFFA
 11286                           tblptru	equ	0xFF8
 11287                           tblptrh	equ	0xFF7
 11288                           tblptrl	equ	0xFF6
 11289                           tablat	equ	0xFF5
 11290                           prodh	equ	0xFF4
 11291                           prodl	equ	0xFF3
 11292                           intcon	equ	0xFF2
 11293                           intcon2	equ	0xFF1
 11294                           intcon3	equ	0xFF0
 11295                           indf0	equ	0xFEF
 11296                           postinc0	equ	0xFEE
 11297                           plusw0	equ	0xFEB
 11298                           fsr0h	equ	0xFEA
 11299                           fsr0l	equ	0xFE9
 11300                           wreg	equ	0xFE8
 11301                           postinc1	equ	0xFE6
 11302                           postdec1	equ	0xFE5
 11303                           plusw1	equ	0xFE3
 11304                           fsr1h	equ	0xFE2
 11305                           fsr1l	equ	0xFE1
 11306                           indf2	equ	0xFDF
 11307                           postinc2	equ	0xFDE
 11308                           postdec2	equ	0xFDD
 11309                           plusw2	equ	0xFDB
 11310                           fsr2h	equ	0xFDA
 11311                           fsr2l	equ	0xFD9
 11312                           status	equ	0xFD8
 11313                           
 11314 ;; *************** function _CDCInitEP *****************
 11315 ;; Defined at:
 11316 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;		None
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;		None
 11321 ;; Return value:  Size  Location     Type
 11322 ;;                  1    wreg      void 
 11323 ;; Registers used:
 11324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11334 ;;Total ram usage:        0 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:   13
 11337 ;; This function calls:
 11338 ;;		_USBEnableEndpoint
 11339 ;;		_USBTransferOnePacket
 11340 ;; This function is called by:
 11341 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11342 ;; This function uses a non-reentrant model
 11343 ;;
 11344                           
 11345                           	psect	text46
 11346  004BB2                     __ptext46:
 11347                           	opt stack 0
 11348  004BB2                     _CDCInitEP:
 11349                           	opt stack 12
 11350                           
 11351                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11352                           
 11353                           ;incstack = 0
 11354  004BB2  0E80               	movlw	128
 11355  004BB4  0103               	movlb	3	; () banked
 11356  004BB6  6F89               	movwf	_line_coding& (0+255),b
 11357  004BB8  0E25               	movlw	37
 11358  004BBA  6F8A               	movwf	(_line_coding+1)& (0+255),b
 11359  004BBC  0E00               	movlw	0
 11360  004BBE  6F8B               	movwf	(_line_coding+2)& (0+255),b
 11361  004BC0  0E00               	movlw	0
 11362  004BC2  6F8C               	movwf	(_line_coding+3)& (0+255),b
 11363                           
 11364                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11365  004BC4  0E00               	movlw	0
 11366  004BC6  6F8D               	movwf	(_line_coding+4)& (0+255),b
 11367                           
 11368                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11369  004BC8  0E00               	movlw	0
 11370  004BCA  6F8E               	movwf	(_line_coding+5)& (0+255),b
 11371                           
 11372                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11373  004BCC  0E08               	movlw	8
 11374  004BCE  6F8F               	movwf	(_line_coding+6)& (0+255),b
 11375                           
 11376                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11377  004BD0  0E00               	movlw	0
 11378  004BD2  0100               	movlb	0	; () banked
 11379  004BD4  6FC2               	movwf	_cdc_rx_len& (0+255),b
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11383  004BD6  0E1A               	movlw	26
 11384  004BD8  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11385  004BDA  0E01               	movlw	1
 11386  004BDC  EC43  F02A         	call	_USBEnableEndpoint
 11387                           
 11388                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11389  004BE0  0E1E               	movlw	30
 11390  004BE2  0100               	movlb	0	; () banked
 11391  004BE4  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11392  004BE6  0E02               	movlw	2
 11393  004BE8  EC43  F02A         	call	_USBEnableEndpoint
 11394                           
 11395                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11396  004BEC  0E00               	movlw	0
 11397  004BEE  0100               	movlb	0	; () banked
 11398  004BF0  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11399  004BF2  0E50               	movlw	low _cdc_data_rx
 11400  004BF4  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11401  004BF6  0E05               	movlw	high _cdc_data_rx
 11402  004BF8  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11403  004BFA  0E40               	movlw	64
 11404  004BFC  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11405  004BFE  0E02               	movlw	2
 11406  004C00  EC1C  F01F         	call	_USBTransferOnePacket
 11407  004C04  C07D  F0B8         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11408  004C08  C07E  F0B9         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11409                           
 11410                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11411  004C0C  0E00               	movlw	0
 11412  004C0E  0101               	movlb	1	; () banked
 11413  004C10  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11414  004C12  0E00               	movlw	0
 11415  004C14  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11416                           
 11417                           ; BSR set to: 1
 11418                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11419  004C16  0E00               	movlw	0
 11420  004C18  0100               	movlb	0	; () banked
 11421  004C1A  6FC1               	movwf	_cdc_trf_state& (0+255),b
 11422                           
 11423                           ; BSR set to: 0
 11424  004C1C  0012               	return		;funcret
 11425  004C1E                     __end_of_CDCInitEP:
 11426                           	opt stack 0
 11427                           tosu	equ	0xFFF
 11428                           tosh	equ	0xFFE
 11429                           tosl	equ	0xFFD
 11430                           pclath	equ	0xFFA
 11431                           tblptru	equ	0xFF8
 11432                           tblptrh	equ	0xFF7
 11433                           tblptrl	equ	0xFF6
 11434                           tablat	equ	0xFF5
 11435                           prodh	equ	0xFF4
 11436                           prodl	equ	0xFF3
 11437                           intcon	equ	0xFF2
 11438                           intcon2	equ	0xFF1
 11439                           intcon3	equ	0xFF0
 11440                           indf0	equ	0xFEF
 11441                           postinc0	equ	0xFEE
 11442                           plusw0	equ	0xFEB
 11443                           fsr0h	equ	0xFEA
 11444                           fsr0l	equ	0xFE9
 11445                           wreg	equ	0xFE8
 11446                           postinc1	equ	0xFE6
 11447                           postdec1	equ	0xFE5
 11448                           plusw1	equ	0xFE3
 11449                           fsr1h	equ	0xFE2
 11450                           fsr1l	equ	0xFE1
 11451                           indf2	equ	0xFDF
 11452                           postinc2	equ	0xFDE
 11453                           postdec2	equ	0xFDD
 11454                           plusw2	equ	0xFDB
 11455                           fsr2h	equ	0xFDA
 11456                           fsr2l	equ	0xFD9
 11457                           status	equ	0xFD8
 11458                           
 11459 ;; *************** function _USBEnableEndpoint *****************
 11460 ;; Defined at:
 11461 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;  ep              1    wreg     unsigned char 
 11464 ;;  options         1   37[BANK0 ] unsigned char 
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;  ep              1   40[BANK0 ] unsigned char 
 11467 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11468 ;;		 -> UEP0(1), 
 11469 ;; Return value:  Size  Location     Type
 11470 ;;                  1    wreg      void 
 11471 ;; Registers used:
 11472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11473 ;; Tracked objects:
 11474 ;;		On entry : 0/0
 11475 ;;		On exit  : 0/0
 11476 ;;		Unchanged: 0/0
 11477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11478 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11479 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11481 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11482 ;;Total ram usage:        4 bytes
 11483 ;; Hardware stack levels used:    1
 11484 ;; Hardware stack levels required when called:   12
 11485 ;; This function calls:
 11486 ;;		_USBConfigureEndpoint
 11487 ;; This function is called by:
 11488 ;;		_CDCInitEP
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           
 11492                           	psect	text47
 11493  005486                     __ptext47:
 11494                           	opt stack 0
 11495  005486                     _USBEnableEndpoint:
 11496                           	opt stack 12
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;incstack = 0
 11500                           ;USBEnableEndpoint@ep stored from wreg
 11501  005486  0100               	movlb	0	; () banked
 11502  005488  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11503                           
 11504                           ;usb_device.c: 898: unsigned char* p;
 11505                           ;usb_device.c: 902: if(options & 0x04)
 11506  00548A  0100               	movlb	0	; () banked
 11507  00548C  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11508  00548E  D005               	goto	l1622
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;usb_device.c: 903: {
 11512                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11513  005490  0E00               	movlw	0
 11514  005492  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11515  005494  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11516  005496  EC1E  F022         	call	_USBConfigureEndpoint
 11517  00549A                     l1622:
 11518                           
 11519                           ;usb_device.c: 905: }
 11520                           ;usb_device.c: 906: if(options & 0x02)
 11521  00549A  0100               	movlb	0	; () banked
 11522  00549C  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11523  00549E  D005               	goto	l1623
 11524                           
 11525                           ; BSR set to: 0
 11526                           ;usb_device.c: 907: {
 11527                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11528  0054A0  0E01               	movlw	1
 11529  0054A2  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11530  0054A4  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11531  0054A6  EC1E  F022         	call	_USBConfigureEndpoint
 11532  0054AA                     l1623:
 11533                           
 11534                           ;usb_device.c: 909: }
 11535                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11536  0054AA  0100               	movlb	0	; () banked
 11537  0054AC  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11538  0054AE  0D01               	mullw	1
 11539  0054B0  0E26               	movlw	38
 11540  0054B2  24F3               	addwf	prodl,w,c
 11541  0054B4  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11542  0054B6  0E0F               	movlw	15
 11543  0054B8  20F4               	addwfc	prodh,w,c
 11544  0054BA  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11545                           
 11546                           ; BSR set to: 0
 11547                           ;usb_device.c: 919: *p = options;
 11548  0054BC  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11549  0054C0  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11550  0054C4  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11551                           
 11552                           ; BSR set to: 0
 11553  0054C8  0012               	return		;funcret
 11554  0054CA                     __end_of_USBEnableEndpoint:
 11555                           	opt stack 0
 11556                           tosu	equ	0xFFF
 11557                           tosh	equ	0xFFE
 11558                           tosl	equ	0xFFD
 11559                           pclath	equ	0xFFA
 11560                           tblptru	equ	0xFF8
 11561                           tblptrh	equ	0xFF7
 11562                           tblptrl	equ	0xFF6
 11563                           tablat	equ	0xFF5
 11564                           prodh	equ	0xFF4
 11565                           prodl	equ	0xFF3
 11566                           intcon	equ	0xFF2
 11567                           intcon2	equ	0xFF1
 11568                           intcon3	equ	0xFF0
 11569                           indf0	equ	0xFEF
 11570                           postinc0	equ	0xFEE
 11571                           plusw0	equ	0xFEB
 11572                           fsr0h	equ	0xFEA
 11573                           fsr0l	equ	0xFE9
 11574                           wreg	equ	0xFE8
 11575                           postinc1	equ	0xFE6
 11576                           postdec1	equ	0xFE5
 11577                           plusw1	equ	0xFE3
 11578                           fsr1h	equ	0xFE2
 11579                           fsr1l	equ	0xFE1
 11580                           indf2	equ	0xFDF
 11581                           postinc2	equ	0xFDE
 11582                           postdec2	equ	0xFDD
 11583                           plusw2	equ	0xFDB
 11584                           fsr2h	equ	0xFDA
 11585                           fsr2l	equ	0xFD9
 11586                           status	equ	0xFD8
 11587                           
 11588 ;; *************** function _USBConfigureEndpoint *****************
 11589 ;; Defined at:
 11590 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11591 ;; Parameters:    Size  Location     Type
 11592 ;;  EPNum           1    wreg     unsigned char 
 11593 ;;  direction       1   29[BANK0 ] unsigned char 
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11596 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11597 ;;		 -> BDT(48), 
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1    wreg      void 
 11600 ;; Registers used:
 11601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11602 ;; Tracked objects:
 11603 ;;		On entry : 0/0
 11604 ;;		On exit  : 0/0
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11607 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11608 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11609 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11610 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11611 ;;Total ram usage:        8 bytes
 11612 ;; Hardware stack levels used:    1
 11613 ;; Hardware stack levels required when called:   11
 11614 ;; This function calls:
 11615 ;;		Nothing
 11616 ;; This function is called by:
 11617 ;;		_USBEnableEndpoint
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text48
 11622  00443C                     __ptext48:
 11623                           	opt stack 0
 11624  00443C                     _USBConfigureEndpoint:
 11625                           	opt stack 12
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;incstack = 0
 11629                           ;USBConfigureEndpoint@EPNum stored from wreg
 11630  00443C  0100               	movlb	0	; () banked
 11631  00443E  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11632                           
 11633                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11634                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11635  004440  0E00               	movlw	0
 11636  004442  0100               	movlb	0	; () banked
 11637  004444  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11638  004446  0E04               	movlw	4
 11639  004448  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11640                           
 11641                           ; BSR set to: 0
 11642                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11643  00444A  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11644  00444C  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11645  00444E  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11646  004450  90D8               	bcf	status,0,c
 11647  004452  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11648  004454  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11649  004456  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11650  004458  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11651  00445A  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11652  00445C  90D8               	bcf	status,0,c
 11653  00445E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11654  004460  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11655  004462  90D8               	bcf	status,0,c
 11656  004464  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11657  004466  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11658  004468  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11659  00446A  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11660  00446C  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11661  00446E  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11662  004470  90D8               	bcf	status,0,c
 11663  004472  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11664  004474  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11665  004476  90D8               	bcf	status,0,c
 11666  004478  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11667  00447A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11668  00447C  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11669  00447E  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11670  004480  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11671  004482  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11672                           
 11673                           ; BSR set to: 0
 11674                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11675  004484  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11676  004488  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11677  00448C  9EDF               	bcf	indf2,7,c
 11678                           
 11679                           ; BSR set to: 0
 11680                           ;usb_device.c: 1575: if(direction == 0)
 11681  00448E  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11682  004490  A4D8               	btfss	status,2,c
 11683  004492  D007               	goto	l1658
 11684                           
 11685                           ; BSR set to: 0
 11686                           ;usb_device.c: 1576: {
 11687                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11688  004494  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11689  004496  0D02               	mullw	2
 11690  004498  0E0E               	movlw	low _pBDTEntryOut
 11691  00449A  24F3               	addwf	prodl,w,c
 11692  00449C  6ED9               	movwf	fsr2l,c
 11693  00449E  0E03               	movlw	high _pBDTEntryOut
 11694  0044A0  D006               	goto	L11
 11695  0044A2                     l1658:
 11696                           
 11697                           ; BSR set to: 0
 11698                           ;usb_device.c: 1579: else
 11699                           ;usb_device.c: 1580: {
 11700                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11701                           
 11702                           ; BSR set to: 0
 11703  0044A2  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11704  0044A4  0D02               	mullw	2
 11705  0044A6  0EB2               	movlw	low _pBDTEntryIn
 11706  0044A8  24F3               	addwf	prodl,w,c
 11707  0044AA  6ED9               	movwf	fsr2l,c
 11708  0044AC  0E00               	movlw	high _pBDTEntryIn
 11709  0044AE                     L11:
 11710  0044AE  20F4               	addwfc	prodh,w,c
 11711  0044B0  6EDA               	movwf	fsr2h,c
 11712  0044B2  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11713  0044B6  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;usb_device.c: 1582: }
 11717                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11718                           
 11719                           ; BSR set to: 0
 11720  0044BA  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11721  0044BE  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11722  0044C2  9CDF               	bcf	indf2,6,c
 11723                           
 11724                           ; BSR set to: 0
 11725                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11726  0044C4  EE20 F004          	lfsr	2,4
 11727  0044C8  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11728  0044CA  26D9               	addwf	fsr2l,f,c
 11729  0044CC  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11730  0044CE  22DA               	addwfc	fsr2h,f,c
 11731  0044D0  8CDF               	bsf	indf2,6,c
 11732                           
 11733                           ; BSR set to: 0
 11734  0044D2  0012               	return		;funcret
 11735  0044D4                     __end_of_USBConfigureEndpoint:
 11736                           	opt stack 0
 11737                           tosu	equ	0xFFF
 11738                           tosh	equ	0xFFE
 11739                           tosl	equ	0xFFD
 11740                           pclath	equ	0xFFA
 11741                           tblptru	equ	0xFF8
 11742                           tblptrh	equ	0xFF7
 11743                           tblptrl	equ	0xFF6
 11744                           tablat	equ	0xFF5
 11745                           prodh	equ	0xFF4
 11746                           prodl	equ	0xFF3
 11747                           intcon	equ	0xFF2
 11748                           intcon2	equ	0xFF1
 11749                           intcon3	equ	0xFF0
 11750                           indf0	equ	0xFEF
 11751                           postinc0	equ	0xFEE
 11752                           plusw0	equ	0xFEB
 11753                           fsr0h	equ	0xFEA
 11754                           fsr0l	equ	0xFE9
 11755                           wreg	equ	0xFE8
 11756                           postinc1	equ	0xFE6
 11757                           postdec1	equ	0xFE5
 11758                           plusw1	equ	0xFE3
 11759                           fsr1h	equ	0xFE2
 11760                           fsr1l	equ	0xFE1
 11761                           indf2	equ	0xFDF
 11762                           postinc2	equ	0xFDE
 11763                           postdec2	equ	0xFDD
 11764                           plusw2	equ	0xFDB
 11765                           fsr2h	equ	0xFDA
 11766                           fsr2l	equ	0xFD9
 11767                           status	equ	0xFD8
 11768                           
 11769 ;; *************** function _USBCtrlTrfOutHandler *****************
 11770 ;; Defined at:
 11771 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11772 ;; Parameters:    Size  Location     Type
 11773 ;;		None
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;		None
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  1    wreg      void 
 11778 ;; Registers used:
 11779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11780 ;; Tracked objects:
 11781 ;;		On entry : 0/0
 11782 ;;		On exit  : 0/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11789 ;;Total ram usage:        0 bytes
 11790 ;; Hardware stack levels used:    1
 11791 ;; Hardware stack levels required when called:   13
 11792 ;; This function calls:
 11793 ;;		_USBCtrlTrfRxService
 11794 ;; This function is called by:
 11795 ;;		_USBCtrlEPService
 11796 ;; This function uses a non-reentrant model
 11797 ;;
 11798                           
 11799                           	psect	text49
 11800  004C8A                     __ptext49:
 11801                           	opt stack 0
 11802  004C8A                     _USBCtrlTrfOutHandler:
 11803                           	opt stack 12
 11804                           
 11805                           ;usb_device.c: 2557: if(controlTransferState == 2)
 11806                           
 11807                           ; BSR set to: 0
 11808                           ;incstack = 0
 11809  004C8A  0E02               	movlw	2
 11810  004C8C  0100               	movlb	0	; () banked
 11811  004C8E  19C9               	xorwf	_controlTransferState& (0+255),w,b
 11812  004C90  A4D8               	btfss	status,2,c
 11813  004C92  D003               	goto	l1764
 11814                           
 11815                           ; BSR set to: 0
 11816                           ;usb_device.c: 2558: {
 11817                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 11818  004C94  EC6E  F014         	call	_USBCtrlTrfRxService	;wreg free
 11819                           
 11820                           ;usb_device.c: 2560: }
 11821  004C98  0012               	return	
 11822  004C9A                     l1764:
 11823                           
 11824                           ;usb_device.c: 2561: else
 11825                           ;usb_device.c: 2562: {
 11826                           ;usb_device.c: 2565: controlTransferState = 0;
 11827  004C9A  0E00               	movlw	0
 11828  004C9C  0100               	movlb	0	; () banked
 11829  004C9E  6FC9               	movwf	_controlTransferState& (0+255),b
 11830                           
 11831                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 11832  004CA0  0101               	movlb	1	; () banked
 11833  004CA2  51E4               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 11834  004CA4  A4D8               	btfss	status,2,c
 11835  004CA6  D020               	goto	l1766
 11836                           
 11837                           ; BSR set to: 1
 11838                           ;usb_device.c: 2573: {
 11839                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 11840  004CA8  0100               	movlb	0	; () banked
 11841  004CAA  EE20 F001          	lfsr	2,1
 11842  004CAE  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11843  004CB0  26D9               	addwf	fsr2l,f,c
 11844  004CB2  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11845  004CB4  22DA               	addwfc	fsr2h,f,c
 11846  004CB6  0E08               	movlw	8
 11847  004CB8  6EDF               	movwf	indf2,c
 11848                           
 11849                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 11850  004CBA  EE20 F002          	lfsr	2,2
 11851  004CBE  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11852  004CC0  26D9               	addwf	fsr2l,f,c
 11853  004CC2  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11854  004CC4  22DA               	addwfc	fsr2h,f,c
 11855  004CC6  0E30               	movlw	48
 11856  004CC8  6EDE               	movwf	postinc2,c
 11857  004CCA  0E04               	movlw	4
 11858  004CCC  6EDD               	movwf	postdec2,c
 11859                           
 11860                           ; BSR set to: 0
 11861                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11862  004CCE  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11863  004CD2  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11864  004CD6  0E0C               	movlw	12
 11865  004CD8  6EDF               	movwf	indf2,c
 11866                           
 11867                           ; BSR set to: 0
 11868                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11869  004CDA  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11870  004CDE  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11871  004CE2  0E00               	movlw	0
 11872  004CE4  8EDB               	bsf	plusw2,7,c
 11873                           
 11874                           ;usb_device.c: 2578: }
 11875  004CE6  0012               	return	
 11876  004CE8                     l1766:
 11877                           
 11878                           ;usb_device.c: 2579: else
 11879                           ;usb_device.c: 2580: {
 11880                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 11881                           
 11882                           ; BSR set to: 0
 11883  004CE8  0E00               	movlw	0
 11884  004CEA  0101               	movlb	1	; () banked
 11885  004CEC  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11886                           
 11887                           ; BSR set to: 1
 11888  004CEE  0012               	return	
 11889  004CF0                     __end_of_USBCtrlTrfOutHandler:
 11890                           	opt stack 0
 11891                           tosu	equ	0xFFF
 11892                           tosh	equ	0xFFE
 11893                           tosl	equ	0xFFD
 11894                           pclath	equ	0xFFA
 11895                           tblptru	equ	0xFF8
 11896                           tblptrh	equ	0xFF7
 11897                           tblptrl	equ	0xFF6
 11898                           tablat	equ	0xFF5
 11899                           prodh	equ	0xFF4
 11900                           prodl	equ	0xFF3
 11901                           intcon	equ	0xFF2
 11902                           intcon2	equ	0xFF1
 11903                           intcon3	equ	0xFF0
 11904                           indf0	equ	0xFEF
 11905                           postinc0	equ	0xFEE
 11906                           plusw0	equ	0xFEB
 11907                           fsr0h	equ	0xFEA
 11908                           fsr0l	equ	0xFE9
 11909                           wreg	equ	0xFE8
 11910                           postinc1	equ	0xFE6
 11911                           postdec1	equ	0xFE5
 11912                           plusw1	equ	0xFE3
 11913                           fsr1h	equ	0xFE2
 11914                           fsr1l	equ	0xFE1
 11915                           indf2	equ	0xFDF
 11916                           postinc2	equ	0xFDE
 11917                           postdec2	equ	0xFDD
 11918                           plusw2	equ	0xFDB
 11919                           fsr2h	equ	0xFDA
 11920                           fsr2l	equ	0xFD9
 11921                           status	equ	0xFD8
 11922                           
 11923 ;; *************** function _USBCtrlTrfRxService *****************
 11924 ;; Defined at:
 11925 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;		None
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 11930 ;;  i               1   29[BANK0 ] unsigned char 
 11931 ;; Return value:  Size  Location     Type
 11932 ;;                  1    wreg      void 
 11933 ;; Registers used:
 11934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11935 ;; Tracked objects:
 11936 ;;		On entry : 0/0
 11937 ;;		On exit  : 0/0
 11938 ;;		Unchanged: 0/0
 11939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11941 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11943 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11944 ;;Total ram usage:        2 bytes
 11945 ;; Hardware stack levels used:    1
 11946 ;; Hardware stack levels required when called:   12
 11947 ;; This function calls:
 11948 ;;		_USBCtrlEPAllowStatusStage
 11949 ;; This function is called by:
 11950 ;;		_USBCtrlTrfOutHandler
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           	psect	text50
 11955  0028DC                     __ptext50:
 11956                           	opt stack 0
 11957  0028DC                     _USBCtrlTrfRxService:
 11958                           	opt stack 12
 11959                           
 11960                           ;usb_device.c: 1872: uint8_t byteToRead;
 11961                           ;usb_device.c: 1873: uint8_t i;
 11962                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 11963                           
 11964                           ;incstack = 0
 11965  0028DC  0100               	movlb	0	; () banked
 11966  0028DE  EE20 F001          	lfsr	2,1
 11967  0028E2  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 11968  0028E4  26D9               	addwf	fsr2l,f,c
 11969  0028E6  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 11970  0028E8  22DA               	addwfc	fsr2h,f,c
 11971  0028EA  50DF               	movf	indf2,w,c
 11972  0028EC  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 11976  0028EE  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 11977  0028F0  0101               	movlb	1	; () banked
 11978  0028F2  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 11979  0028F4  0E00               	movlw	0
 11980  0028F6  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 11981  0028F8  A0D8               	btfss	status,0,c
 11982                           
 11983                           ; BSR set to: 1
 11984                           ;usb_device.c: 1884: {
 11985                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 11986  0028FA  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 11987                           
 11988                           ; BSR set to: 1
 11989                           ;usb_device.c: 1886: }
 11990                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 11991                           
 11992                           ; BSR set to: 1
 11993  0028FE  0100               	movlb	0	; () banked
 11994  002900  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 11995  002902  0101               	movlb	1	; () banked
 11996  002904  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 11997  002906  0E00               	movlw	0
 11998  002908  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 11999                           
 12000                           ; BSR set to: 1
 12001                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12002  00290A  0E00               	movlw	0
 12003  00290C  0100               	movlb	0	; () banked
 12004  00290E  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12005  002910  D013               	goto	l1692
 12006  002912                     
 12007                           ; BSR set to: 0
 12008                           ;usb_device.c: 1893: {
 12009                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12010                           
 12011                           ; BSR set to: 0
 12012  002912  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12013  002914  0D01               	mullw	1
 12014  002916  0E38               	movlw	56
 12015  002918  24F3               	addwf	prodl,w,c
 12016  00291A  6ED9               	movwf	fsr2l,c
 12017  00291C  0E04               	movlw	4
 12018  00291E  20F4               	addwfc	prodh,w,c
 12019  002920  6EDA               	movwf	fsr2h,c
 12020  002922  C1C9  FFE1         	movff	_outPipes,fsr1l
 12021  002926  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12022  00292A  CFDF FFE7          	movff	indf2,indf1
 12023                           
 12024                           ; BSR set to: 0
 12025  00292E  0101               	movlb	1	; () banked
 12026  002930  4BC9               	infsnz	_outPipes& (0+255),f,b
 12027  002932  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12028                           
 12029                           ; BSR set to: 1
 12030  002934  0100               	movlb	0	; () banked
 12031  002936  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12032  002938                     l1692:
 12033                           
 12034                           ; BSR set to: 0
 12035                           
 12036                           ; BSR set to: 0
 12037  002938  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12038  00293A  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12039  00293C  A0D8               	btfss	status,0,c
 12040  00293E  D7E9               	goto	l1693
 12041                           
 12042                           ; BSR set to: 0
 12043                           ;usb_device.c: 1895: }
 12044                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12045                           
 12046                           ; BSR set to: 0
 12047  002940  0101               	movlb	1	; () banked
 12048  002942  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12049  002944  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12050  002946  B4D8               	btfsc	status,2,c
 12051  002948  D033               	goto	l1695
 12052                           
 12053                           ; BSR set to: 1
 12054                           ;usb_device.c: 1900: {
 12055                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12056  00294A  0100               	movlb	0	; () banked
 12057  00294C  EE20 F001          	lfsr	2,1
 12058  002950  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12059  002952  26D9               	addwf	fsr2l,f,c
 12060  002954  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12061  002956  22DA               	addwfc	fsr2h,f,c
 12062  002958  0E08               	movlw	8
 12063  00295A  6EDF               	movwf	indf2,c
 12064                           
 12065                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12066  00295C  EE20 F002          	lfsr	2,2
 12067  002960  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12068  002962  26D9               	addwf	fsr2l,f,c
 12069  002964  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12070  002966  22DA               	addwfc	fsr2h,f,c
 12071  002968  0E38               	movlw	56
 12072  00296A  6EDE               	movwf	postinc2,c
 12073  00296C  0E04               	movlw	4
 12074  00296E  6EDD               	movwf	postdec2,c
 12075                           
 12076                           ; BSR set to: 0
 12077                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12078  002970  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12079  002974  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12080  002978  BCDF               	btfsc	indf2,6,c
 12081  00297A  D00D               	goto	l1696
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;usb_device.c: 1904: {
 12085                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12086  00297C  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12087  002980  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12088  002984  0E48               	movlw	72
 12089  002986  6EDF               	movwf	indf2,c
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12093  002988  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12094  00298C  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12095  002990  0E00               	movlw	0
 12096  002992  8EDB               	bsf	plusw2,7,c
 12097                           
 12098                           ;usb_device.c: 1907: }
 12099  002994  0012               	return	
 12100  002996                     l1696:
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;usb_device.c: 1908: else
 12104                           ;usb_device.c: 1909: {
 12105                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12106                           
 12107                           ; BSR set to: 0
 12108  002996  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12109  00299A  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12110  00299E  0E08               	movlw	8
 12111  0029A0  6EDF               	movwf	indf2,c
 12112                           
 12113                           ; BSR set to: 0
 12114                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12115  0029A2  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12116  0029A6  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12117  0029AA  0E00               	movlw	0
 12118  0029AC  8EDB               	bsf	plusw2,7,c
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;usb_device.c: 1912: }
 12122                           ;usb_device.c: 1913: }
 12123  0029AE  0012               	return	
 12124  0029B0                     l1695:
 12125                           
 12126                           ;usb_device.c: 1914: else
 12127                           ;usb_device.c: 1915: {
 12128                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12129                           
 12130                           ; BSR set to: 0
 12131  0029B0  0100               	movlb	0	; () banked
 12132  0029B2  EE20 F001          	lfsr	2,1
 12133  0029B6  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12134  0029B8  26D9               	addwf	fsr2l,f,c
 12135  0029BA  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12136  0029BC  22DA               	addwfc	fsr2h,f,c
 12137  0029BE  0E08               	movlw	8
 12138  0029C0  6EDF               	movwf	indf2,c
 12139                           
 12140                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12141  0029C2  EE20 F002          	lfsr	2,2
 12142  0029C6  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12143  0029C8  26D9               	addwf	fsr2l,f,c
 12144  0029CA  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12145  0029CC  22DA               	addwfc	fsr2h,f,c
 12146  0029CE  0E30               	movlw	48
 12147  0029D0  6EDE               	movwf	postinc2,c
 12148  0029D2  0E04               	movlw	4
 12149  0029D4  6EDD               	movwf	postdec2,c
 12150                           
 12151                           ; BSR set to: 0
 12152                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12153  0029D6  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12154  0029DA  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12155  0029DE  0E04               	movlw	4
 12156  0029E0  6EDF               	movwf	indf2,c
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12160  0029E2  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12161  0029E6  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12162  0029EA  0E00               	movlw	0
 12163  0029EC  8EDB               	bsf	plusw2,7,c
 12164                           
 12165                           ; BSR set to: 0
 12166                           ;usb_device.c: 1944: }
 12167                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12168                           
 12169                           ; BSR set to: 0
 12170  0029EE  0101               	movlb	1	; () banked
 12171  0029F0  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12172                           
 12173                           ; BSR set to: 1
 12174                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12175  0029F2  0100               	movlb	0	; () banked
 12176  0029F4  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12177  0029F6  A4D8               	btfss	status,2,c
 12178  0029F8  0012               	return	
 12179                           
 12180                           ; BSR set to: 0
 12181                           ;usb_device.c: 1960: {
 12182                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12183  0029FA  ECFD  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12184  0029FE  0012               	return	
 12185  002A00                     __end_of_USBCtrlTrfRxService:
 12186                           	opt stack 0
 12187                           tosu	equ	0xFFF
 12188                           tosh	equ	0xFFE
 12189                           tosl	equ	0xFFD
 12190                           pclath	equ	0xFFA
 12191                           tblptru	equ	0xFF8
 12192                           tblptrh	equ	0xFF7
 12193                           tblptrl	equ	0xFF6
 12194                           tablat	equ	0xFF5
 12195                           prodh	equ	0xFF4
 12196                           prodl	equ	0xFF3
 12197                           intcon	equ	0xFF2
 12198                           intcon2	equ	0xFF1
 12199                           intcon3	equ	0xFF0
 12200                           indf0	equ	0xFEF
 12201                           postinc0	equ	0xFEE
 12202                           plusw0	equ	0xFEB
 12203                           fsr0h	equ	0xFEA
 12204                           fsr0l	equ	0xFE9
 12205                           wreg	equ	0xFE8
 12206                           indf1	equ	0xFE7
 12207                           postinc1	equ	0xFE6
 12208                           postdec1	equ	0xFE5
 12209                           plusw1	equ	0xFE3
 12210                           fsr1h	equ	0xFE2
 12211                           fsr1l	equ	0xFE1
 12212                           indf2	equ	0xFDF
 12213                           postinc2	equ	0xFDE
 12214                           postdec2	equ	0xFDD
 12215                           plusw2	equ	0xFDB
 12216                           fsr2h	equ	0xFDA
 12217                           fsr2l	equ	0xFD9
 12218                           status	equ	0xFD8
 12219                           
 12220 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12221 ;; Defined at:
 12222 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;		None
 12225 ;; Auto vars:     Size  Location     Type
 12226 ;;		None
 12227 ;; Return value:  Size  Location     Type
 12228 ;;                  1    wreg      void 
 12229 ;; Registers used:
 12230 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12231 ;; Tracked objects:
 12232 ;;		On entry : 0/0
 12233 ;;		On exit  : 0/0
 12234 ;;		Unchanged: 0/0
 12235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12240 ;;Total ram usage:        0 bytes
 12241 ;; Hardware stack levels used:    1
 12242 ;; Hardware stack levels required when called:   11
 12243 ;; This function calls:
 12244 ;;		Nothing
 12245 ;; This function is called by:
 12246 ;;		_USBDeviceTasks
 12247 ;;		_USBCtrlEPServiceComplete
 12248 ;;		_USBCtrlTrfRxService
 12249 ;; This function uses a non-reentrant model
 12250 ;;
 12251                           
 12252                           	psect	text51
 12253  0037FA                     __ptext51:
 12254                           	opt stack 0
 12255  0037FA                     _USBCtrlEPAllowStatusStage:
 12256                           	opt stack 12
 12257                           
 12258                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12259                           
 12260                           ;incstack = 0
 12261  0037FA  0100               	movlb	0	; () banked
 12262  0037FC  51C5               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12263  0037FE  A4D8               	btfss	status,2,c
 12264  003800  0012               	return	
 12265                           
 12266                           ; BSR set to: 0
 12267                           ;usb_device.c: 1442: {
 12268                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12269  003802  0E01               	movlw	1
 12270  003804  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12271                           
 12272                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12273  003806  51C4               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 12274  003808  A4D8               	btfss	status,2,c
 12275  00380A  0012               	return	
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;usb_device.c: 1445: {
 12279                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12280  00380C  0E01               	movlw	1
 12281  00380E  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12282                           
 12283                           ; BSR set to: 0
 12284                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12285  003810  0E02               	movlw	2
 12286  003812  19C9               	xorwf	_controlTransferState& (0+255),w,b
 12287  003814  A4D8               	btfss	status,2,c
 12288  003816  D015               	goto	l1646
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;usb_device.c: 1451: {
 12292                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12293  003818  EE20 F001          	lfsr	2,1
 12294  00381C  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12295  00381E  26D9               	addwf	fsr2l,f,c
 12296  003820  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12297  003822  22DA               	addwfc	fsr2h,f,c
 12298  003824  0E00               	movlw	0
 12299  003826  6EDF               	movwf	indf2,c
 12300                           
 12301                           ; BSR set to: 0
 12302                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12303  003828  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12304  00382C  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12305  003830  0E48               	movlw	72
 12306  003832  6EDF               	movwf	indf2,c
 12307                           
 12308                           ; BSR set to: 0
 12309                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12310  003834  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12311  003838  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12312  00383C  0E00               	movlw	0
 12313  00383E  8EDB               	bsf	plusw2,7,c
 12314                           
 12315                           ;usb_device.c: 1455: }
 12316  003840  0012               	return	
 12317  003842                     l1646:
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12321                           
 12322                           ; BSR set to: 0
 12323  003842  05C9               	decf	_controlTransferState& (0+255),w,b
 12324  003844  A4D8               	btfss	status,2,c
 12325  003846  0012               	return	
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;usb_device.c: 1457: {
 12329                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12330  003848  0E00               	movlw	0
 12331  00384A  0101               	movlb	1	; () banked
 12332  00384C  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12333                           
 12334                           ; BSR set to: 1
 12335                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12336  00384E  0100               	movlb	0	; () banked
 12337  003850  EE20 F001          	lfsr	2,1
 12338  003854  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12339  003856  26D9               	addwf	fsr2l,f,c
 12340  003858  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12341  00385A  22DA               	addwfc	fsr2h,f,c
 12342  00385C  0E08               	movlw	8
 12343  00385E  6EDF               	movwf	indf2,c
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12347  003860  EE20 F002          	lfsr	2,2
 12348  003864  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12349  003866  26D9               	addwf	fsr2l,f,c
 12350  003868  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12351  00386A  22DA               	addwfc	fsr2h,f,c
 12352  00386C  0E30               	movlw	48
 12353  00386E  6EDE               	movwf	postinc2,c
 12354  003870  0E04               	movlw	4
 12355  003872  6EDD               	movwf	postdec2,c
 12356                           
 12357                           ; BSR set to: 0
 12358                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12359  003874  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12360  003878  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12361  00387C  0E04               	movlw	4
 12362  00387E  6EDF               	movwf	indf2,c
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12366  003880  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12367  003884  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12368  003888  0E00               	movlw	0
 12369  00388A  8EDB               	bsf	plusw2,7,c
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12373  00388C  0E01               	movlw	1
 12374  00388E  0101               	movlb	1	; () banked
 12375  003890  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12376                           
 12377                           ; BSR set to: 1
 12378                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12379  003892  0100               	movlb	0	; () banked
 12380  003894  EE20 F001          	lfsr	2,1
 12381  003898  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12382  00389A  26D9               	addwf	fsr2l,f,c
 12383  00389C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12384  00389E  22DA               	addwfc	fsr2h,f,c
 12385  0038A0  0E08               	movlw	8
 12386  0038A2  6EDF               	movwf	indf2,c
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12390  0038A4  EE20 F002          	lfsr	2,2
 12391  0038A8  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12392  0038AA  26D9               	addwf	fsr2l,f,c
 12393  0038AC  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12394  0038AE  22DA               	addwfc	fsr2h,f,c
 12395  0038B0  0E30               	movlw	48
 12396  0038B2  6EDE               	movwf	postinc2,c
 12397  0038B4  0E04               	movlw	4
 12398  0038B6  6EDD               	movwf	postdec2,c
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12402  0038B8  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12403  0038BC  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12404  0038C0  0E80               	movlw	128
 12405  0038C2  6EDF               	movwf	indf2,c
 12406                           
 12407                           ; BSR set to: 0
 12408                           
 12409                           ; BSR set to: 0
 12410                           
 12411                           ; BSR set to: 0
 12412  0038C4  0012               	return	
 12413  0038C6                     __end_of_USBCtrlEPAllowStatusStage:
 12414                           	opt stack 0
 12415                           tosu	equ	0xFFF
 12416                           tosh	equ	0xFFE
 12417                           tosl	equ	0xFFD
 12418                           pclath	equ	0xFFA
 12419                           tblptru	equ	0xFF8
 12420                           tblptrh	equ	0xFF7
 12421                           tblptrl	equ	0xFF6
 12422                           tablat	equ	0xFF5
 12423                           prodh	equ	0xFF4
 12424                           prodl	equ	0xFF3
 12425                           intcon	equ	0xFF2
 12426                           intcon2	equ	0xFF1
 12427                           intcon3	equ	0xFF0
 12428                           indf0	equ	0xFEF
 12429                           postinc0	equ	0xFEE
 12430                           plusw0	equ	0xFEB
 12431                           fsr0h	equ	0xFEA
 12432                           fsr0l	equ	0xFE9
 12433                           wreg	equ	0xFE8
 12434                           indf1	equ	0xFE7
 12435                           postinc1	equ	0xFE6
 12436                           postdec1	equ	0xFE5
 12437                           plusw1	equ	0xFE3
 12438                           fsr1h	equ	0xFE2
 12439                           fsr1l	equ	0xFE1
 12440                           indf2	equ	0xFDF
 12441                           postinc2	equ	0xFDE
 12442                           postdec2	equ	0xFDD
 12443                           plusw2	equ	0xFDB
 12444                           fsr2h	equ	0xFDA
 12445                           fsr2l	equ	0xFD9
 12446                           status	equ	0xFD8
 12447                           
 12448 ;; *************** function _USBCtrlTrfInHandler *****************
 12449 ;; Defined at:
 12450 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;		None
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12455 ;; Return value:  Size  Location     Type
 12456 ;;                  1    wreg      void 
 12457 ;; Registers used:
 12458 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12459 ;; Tracked objects:
 12460 ;;		On entry : 0/0
 12461 ;;		On exit  : 0/0
 12462 ;;		Unchanged: 0/0
 12463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12465 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12467 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12468 ;;Total ram usage:        1 bytes
 12469 ;; Hardware stack levels used:    1
 12470 ;; Hardware stack levels required when called:   12
 12471 ;; This function calls:
 12472 ;;		_USBCtrlTrfTxService
 12473 ;; This function is called by:
 12474 ;;		_USBCtrlEPService
 12475 ;; This function uses a non-reentrant model
 12476 ;;
 12477                           
 12478                           	psect	text52
 12479  003D76                     __ptext52:
 12480                           	opt stack 0
 12481  003D76                     _USBCtrlTrfInHandler:
 12482                           	opt stack 13
 12483                           
 12484                           ;usb_device.c: 2611: uint8_t lastDTS;
 12485                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12486                           
 12487                           ; BSR set to: 0
 12488                           ;incstack = 0
 12489  003D76  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12490  003D7A  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12491  003D7E  0100               	movlb	0	; () banked
 12492  003D80  0E00               	movlw	0
 12493  003D82  BCDF               	btfsc	indf2,6,c
 12494  003D84  0E01               	movlw	1
 12495  003D86  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12496                           
 12497                           ; BSR set to: 0
 12498                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12499  003D88  0E04               	movlw	4
 12500  003D8A  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12504  003D8C  0E08               	movlw	8
 12505  003D8E  19CB               	xorwf	_USBDeviceState& (0+255),w,b
 12506  003D90  A4D8               	btfss	status,2,c
 12507  003D92  D00D               	goto	l1773
 12508                           
 12509                           ; BSR set to: 0
 12510                           ;usb_device.c: 2622: {
 12511                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12512  003D94  0104               	movlb	4	; () banked
 12513  003D96  5132               	movf	50,w,b	;volatile
 12514  003D98  0B7F               	andlw	127
 12515  003D9A  010F               	movlb	15	; () banked
 12516  003D9C  6F38               	movwf	56,b	;volatile
 12517                           
 12518                           ; BSR set to: 15
 12519                           ;usb_device.c: 2624: if(UADDR != 0u)
 12520  003D9E  5138               	movf	56,w,b	;volatile
 12521  003DA0  B4D8               	btfsc	status,2,c
 12522  003DA2  D002               	goto	l1772
 12523                           
 12524                           ; BSR set to: 15
 12525                           ;usb_device.c: 2625: {
 12526                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12527  003DA4  0E10               	movlw	16
 12528  003DA6  D001               	goto	L12
 12529  003DA8                     l1772:
 12530                           
 12531                           ;usb_device.c: 2628: else
 12532                           ;usb_device.c: 2629: {
 12533                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12534                           
 12535                           ; BSR set to: 0
 12536  003DA8  0E04               	movlw	4
 12537  003DAA                     L12:
 12538  003DAA  0100               	movlb	0	; () banked
 12539  003DAC  6FCB               	movwf	_USBDeviceState& (0+255),b
 12540  003DAE                     l1773:
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;usb_device.c: 2631: }
 12544                           ;usb_device.c: 2632: }
 12545                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12546                           
 12547                           ; BSR set to: 0
 12548                           
 12549                           ; BSR set to: 0
 12550  003DAE  05C9               	decf	_controlTransferState& (0+255),w,b
 12551  003DB0  A4D8               	btfss	status,2,c
 12552  003DB2  D03B               	goto	l1774
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;usb_device.c: 2636: {
 12556                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12557  003DB4  EE20 F002          	lfsr	2,2
 12558  003DB8  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12559  003DBA  26D9               	addwf	fsr2l,f,c
 12560  003DBC  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12561  003DBE  22DA               	addwfc	fsr2h,f,c
 12562  003DC0  0E38               	movlw	56
 12563  003DC2  6EDE               	movwf	postinc2,c
 12564  003DC4  0E04               	movlw	4
 12565  003DC6  6EDD               	movwf	postdec2,c
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12569  003DC8  EC58  F01A         	call	_USBCtrlTrfTxService	;wreg free
 12570                           
 12571                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12572  003DCC  0E02               	movlw	2
 12573  003DCE  0100               	movlb	0	; () banked
 12574  003DD0  19CA               	xorwf	_shortPacketStatus& (0+255),w,b
 12575  003DD2  A4D8               	btfss	status,2,c
 12576  003DD4  D00D               	goto	l1775
 12577                           
 12578                           ; BSR set to: 0
 12579                           ;usb_device.c: 2645: {
 12580                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12581  003DD6  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12582  003DDA  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12583  003DDE  0E04               	movlw	4
 12584  003DE0  6EDF               	movwf	indf2,c
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12588  003DE2  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12589  003DE6  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12590  003DEA  0E00               	movlw	0
 12591  003DEC  8EDB               	bsf	plusw2,7,c
 12592                           
 12593                           ;usb_device.c: 2650: }
 12594  003DEE  0012               	return	
 12595  003DF0                     l1775:
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;usb_device.c: 2651: else
 12599                           ;usb_device.c: 2652: {
 12600                           ;usb_device.c: 2653: if(lastDTS == 0)
 12601                           
 12602                           ; BSR set to: 0
 12603  003DF0  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12604  003DF2  A4D8               	btfss	status,2,c
 12605  003DF4  D00D               	goto	l1777
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;usb_device.c: 2654: {
 12609                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12610  003DF6  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12611  003DFA  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12612  003DFE  0E48               	movlw	72
 12613  003E00  6EDF               	movwf	indf2,c
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12617  003E02  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12618  003E06  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12619  003E0A  0E00               	movlw	0
 12620  003E0C  8EDB               	bsf	plusw2,7,c
 12621                           
 12622                           ;usb_device.c: 2657: }
 12623  003E0E  0012               	return	
 12624  003E10                     l1777:
 12625                           
 12626                           ; BSR set to: 0
 12627                           ;usb_device.c: 2658: else
 12628                           ;usb_device.c: 2659: {
 12629                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12630                           
 12631                           ; BSR set to: 0
 12632  003E10  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12633  003E14  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12634  003E18  0E08               	movlw	8
 12635  003E1A  6EDF               	movwf	indf2,c
 12636                           
 12637                           ; BSR set to: 0
 12638                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12639  003E1C  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12640  003E20  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12641  003E24  0E00               	movlw	0
 12642  003E26  8EDB               	bsf	plusw2,7,c
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;usb_device.c: 2662: }
 12646                           ;usb_device.c: 2663: }
 12647                           ;usb_device.c: 2664: }
 12648                           
 12649                           ; BSR set to: 0
 12650  003E28  0012               	return	
 12651  003E2A                     l1774:
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;usb_device.c: 2665: else
 12655                           ;usb_device.c: 2666: {
 12656                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12657  003E2A  0101               	movlb	1	; () banked
 12658  003E2C  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12659                           
 12660                           ; BSR set to: 1
 12661                           ;usb_device.c: 2675: }
 12662                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12663                           
 12664                           ; BSR set to: 1
 12665  003E2E  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12666                           
 12667                           ; BSR set to: 1
 12668                           ;usb_device.c: 2677: }
 12669                           ;usb_device.c: 2679: controlTransferState = 0;
 12670                           
 12671                           ; BSR set to: 1
 12672  003E30  0E00               	movlw	0
 12673  003E32  0100               	movlb	0	; () banked
 12674  003E34  6FC9               	movwf	_controlTransferState& (0+255),b
 12675  003E36  0012               	return	
 12676  003E38                     __end_of_USBCtrlTrfInHandler:
 12677                           	opt stack 0
 12678                           tosu	equ	0xFFF
 12679                           tosh	equ	0xFFE
 12680                           tosl	equ	0xFFD
 12681                           pclath	equ	0xFFA
 12682                           tblptru	equ	0xFF8
 12683                           tblptrh	equ	0xFF7
 12684                           tblptrl	equ	0xFF6
 12685                           tablat	equ	0xFF5
 12686                           prodh	equ	0xFF4
 12687                           prodl	equ	0xFF3
 12688                           intcon	equ	0xFF2
 12689                           intcon2	equ	0xFF1
 12690                           intcon3	equ	0xFF0
 12691                           indf0	equ	0xFEF
 12692                           postinc0	equ	0xFEE
 12693                           plusw0	equ	0xFEB
 12694                           fsr0h	equ	0xFEA
 12695                           fsr0l	equ	0xFE9
 12696                           wreg	equ	0xFE8
 12697                           indf1	equ	0xFE7
 12698                           postinc1	equ	0xFE6
 12699                           postdec1	equ	0xFE5
 12700                           plusw1	equ	0xFE3
 12701                           fsr1h	equ	0xFE2
 12702                           fsr1l	equ	0xFE1
 12703                           indf2	equ	0xFDF
 12704                           postinc2	equ	0xFDE
 12705                           postdec2	equ	0xFDD
 12706                           plusw2	equ	0xFDB
 12707                           fsr2h	equ	0xFDA
 12708                           fsr2l	equ	0xFD9
 12709                           status	equ	0xFD8
 12710                           
 12711 ;; *************** function _USBCtrlTrfTxService *****************
 12712 ;; Defined at:
 12713 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12714 ;; Parameters:    Size  Location     Type
 12715 ;;		None
 12716 ;; Auto vars:     Size  Location     Type
 12717 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12718 ;; Return value:  Size  Location     Type
 12719 ;;                  1    wreg      void 
 12720 ;; Registers used:
 12721 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12722 ;; Tracked objects:
 12723 ;;		On entry : 0/0
 12724 ;;		On exit  : 0/0
 12725 ;;		Unchanged: 0/0
 12726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12730 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12731 ;;Total ram usage:        1 bytes
 12732 ;; Hardware stack levels used:    1
 12733 ;; Hardware stack levels required when called:   11
 12734 ;; This function calls:
 12735 ;;		Nothing
 12736 ;; This function is called by:
 12737 ;;		_USBCtrlEPAllowDataStage
 12738 ;;		_USBCtrlTrfInHandler
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text53
 12743  0034B0                     __ptext53:
 12744                           	opt stack 0
 12745  0034B0                     _USBCtrlTrfTxService:
 12746                           	opt stack 11
 12747                           
 12748                           ;usb_device.c: 1791: uint8_t byteToSend;
 12749                           ;usb_device.c: 1795: byteToSend = 8;
 12750                           
 12751                           ; BSR set to: 0
 12752                           ;incstack = 0
 12753  0034B0  0E08               	movlw	8
 12754  0034B2  0100               	movlb	0	; () banked
 12755  0034B4  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 12759  0034B6  51B1               	movf	(_inPipes+5)& (0+255),w,b
 12760  0034B8  E110               	bnz	l7567
 12761  0034BA  0E08               	movlw	8
 12762  0034BC  5DB0               	subwf	(_inPipes+4)& (0+255),w,b
 12763  0034BE  B0D8               	btfsc	status,0,c
 12764  0034C0  D00C               	goto	l1679
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;usb_device.c: 1797: {
 12768                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 12769  0034C2  C0B0  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 12773  0034C6  51CA               	movf	_shortPacketStatus& (0+255),w,b
 12774  0034C8  A4D8               	btfss	status,2,c
 12775  0034CA  D002               	goto	l1677
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;usb_device.c: 1806: {
 12779                           ;usb_device.c: 1807: shortPacketStatus = 1;
 12780  0034CC  0E01               	movlw	1
 12781  0034CE  D004               	goto	L13
 12782  0034D0                     l1677:
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 12786                           
 12787                           ; BSR set to: 0
 12788  0034D0  05CA               	decf	_shortPacketStatus& (0+255),w,b
 12789  0034D2  A4D8               	btfss	status,2,c
 12790  0034D4  D002               	goto	l1679
 12791                           
 12792                           ; BSR set to: 0
 12793                           ;usb_device.c: 1810: {
 12794                           ;usb_device.c: 1811: shortPacketStatus = 2;
 12795  0034D6  0E02               	movlw	2
 12796  0034D8                     L13:
 12797  0034D8  6FCA               	movwf	_shortPacketStatus& (0+255),b
 12798  0034DA                     l1679:
 12799  0034DA                     l7567:
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;usb_device.c: 1812: }
 12803                           ;usb_device.c: 1813: }
 12804                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 12805  0034DA  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12806  0034DC  5FB0               	subwf	(_inPipes+4)& (0+255),f,b
 12807  0034DE  0E00               	movlw	0
 12808  0034E0  5BB1               	subwfb	(_inPipes+5)& (0+255),f,b
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 12812  0034E2  EE20 F001          	lfsr	2,1
 12813  0034E6  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12814  0034E8  26D9               	addwf	fsr2l,f,c
 12815  0034EA  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12816  0034EC  22DA               	addwfc	fsr2h,f,c
 12817  0034EE  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 12818                           
 12819                           ; BSR set to: 0
 12820                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 12821  0034F2  0E38               	movlw	56
 12822  0034F4  0102               	movlb	2	; () banked
 12823  0034F6  6FD4               	movwf	_pDst& (0+255),b
 12824  0034F8  0E04               	movlw	4
 12825  0034FA  6FD5               	movwf	(_pDst+1)& (0+255),b
 12826                           
 12827                           ; BSR set to: 2
 12828                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 12829  0034FC  0100               	movlb	0	; () banked
 12830  0034FE  A1AF               	btfss	(_inPipes+3)& (0+255),0,b
 12831  003500  D01E               	goto	l1681
 12832  003502  D03E               	goto	l1685
 12833  003504                     
 12834                           ; BSR set to: 0
 12835                           ;usb_device.c: 1830: {
 12836                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 12837                           
 12838                           ; BSR set to: 0
 12839  003504  C0AC  FFF6         	movff	_inPipes,tblptrl
 12840  003508  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 12841  00350C  6AF8               	clrf	tblptru,c
 12842  00350E  C2D4  FFD9         	movff	_pDst,fsr2l
 12843  003512  C2D5  FFDA         	movff	_pDst+1,fsr2h
 12844  003516  0E0E               	movlw	(high __ramtop+-1)
 12845  003518  64F7               	cpfsgt	tblptrh,c
 12846  00351A  D003               	bra	u5127
 12847  00351C  0008               	tblrd		*
 12848  00351E  50F5               	movf	tablat,w,c
 12849  003520  D005               	bra	u5120
 12850  003522                     u5127:
 12851  003522  CFF6 FFE9          	movff	tblptrl,fsr0l
 12852  003526  CFF7 FFEA          	movff	tblptrh,fsr0h
 12853  00352A  50EF               	movf	indf0,w,c
 12854  00352C                     u5120:
 12855  00352C  6EDF               	movwf	indf2,c
 12856  00352E  0100               	movlb	0	; () banked
 12857  003530  4BAC               	infsnz	_inPipes& (0+255),f,b
 12858  003532  2BAD               	incf	(_inPipes+1)& (0+255),f,b
 12859                           
 12860                           ; BSR set to: 0
 12861  003534  0102               	movlb	2	; () banked
 12862  003536  4BD4               	infsnz	_pDst& (0+255),f,b
 12863  003538  2BD5               	incf	(_pDst+1)& (0+255),f,b
 12864                           
 12865                           ; BSR set to: 2
 12866                           ;usb_device.c: 1832: byteToSend--;
 12867  00353A  0100               	movlb	0	; () banked
 12868  00353C  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 12869  00353E                     l1681:
 12870                           
 12871                           ; BSR set to: 0
 12872                           
 12873                           ; BSR set to: 0
 12874  00353E  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12875  003540  B4D8               	btfsc	status,2,c
 12876  003542  0012               	return	
 12877  003544  D7DF               	goto	l1682
 12878  003546                     
 12879                           ; BSR set to: 0
 12880                           ;usb_device.c: 1838: {
 12881                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 12882                           
 12883                           ; BSR set to: 0
 12884  003546  C0AC  FFF6         	movff	_inPipes,tblptrl
 12885  00354A  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 12886  00354E  6AF8               	clrf	tblptru,c
 12887  003550  C2D4  FFD9         	movff	_pDst,fsr2l
 12888  003554  C2D5  FFDA         	movff	_pDst+1,fsr2h
 12889  003558  0E0E               	movlw	(high __ramtop+-1)
 12890  00355A  64F7               	cpfsgt	tblptrh,c
 12891  00355C  D003               	bra	u5147
 12892  00355E  0008               	tblrd		*
 12893  003560  50F5               	movf	tablat,w,c
 12894  003562  D005               	bra	u5140
 12895  003564                     u5147:
 12896  003564  CFF6 FFE9          	movff	tblptrl,fsr0l
 12897  003568  CFF7 FFEA          	movff	tblptrh,fsr0h
 12898  00356C  50EF               	movf	indf0,w,c
 12899  00356E                     u5140:
 12900  00356E  6EDF               	movwf	indf2,c
 12901  003570  0100               	movlb	0	; () banked
 12902  003572  4BAC               	infsnz	_inPipes& (0+255),f,b
 12903  003574  2BAD               	incf	(_inPipes+1)& (0+255),f,b
 12904                           
 12905                           ; BSR set to: 0
 12906  003576  0102               	movlb	2	; () banked
 12907  003578  4BD4               	infsnz	_pDst& (0+255),f,b
 12908  00357A  2BD5               	incf	(_pDst+1)& (0+255),f,b
 12909                           
 12910                           ; BSR set to: 2
 12911                           ;usb_device.c: 1840: byteToSend--;
 12912  00357C  0100               	movlb	0	; () banked
 12913  00357E  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 12914  003580                     l1685:
 12915                           
 12916                           ; BSR set to: 0
 12917                           
 12918                           ; BSR set to: 0
 12919  003580  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12920  003582  B4D8               	btfsc	status,2,c
 12921  003584  0012               	return	
 12922  003586  D7DF               	goto	l1686
 12923  003588                     __end_of_USBCtrlTrfTxService:
 12924                           	opt stack 0
 12925                           tosu	equ	0xFFF
 12926                           tosh	equ	0xFFE
 12927                           tosl	equ	0xFFD
 12928                           pclath	equ	0xFFA
 12929                           tblptru	equ	0xFF8
 12930                           tblptrh	equ	0xFF7
 12931                           tblptrl	equ	0xFF6
 12932                           tablat	equ	0xFF5
 12933                           prodh	equ	0xFF4
 12934                           prodl	equ	0xFF3
 12935                           intcon	equ	0xFF2
 12936                           intcon2	equ	0xFF1
 12937                           intcon3	equ	0xFF0
 12938                           indf0	equ	0xFEF
 12939                           postinc0	equ	0xFEE
 12940                           plusw0	equ	0xFEB
 12941                           fsr0h	equ	0xFEA
 12942                           fsr0l	equ	0xFE9
 12943                           wreg	equ	0xFE8
 12944                           indf1	equ	0xFE7
 12945                           postinc1	equ	0xFE6
 12946                           postdec1	equ	0xFE5
 12947                           plusw1	equ	0xFE3
 12948                           fsr1h	equ	0xFE2
 12949                           fsr1l	equ	0xFE1
 12950                           indf2	equ	0xFDF
 12951                           postinc2	equ	0xFDE
 12952                           postdec2	equ	0xFDD
 12953                           plusw2	equ	0xFDB
 12954                           fsr2h	equ	0xFDA
 12955                           fsr2l	equ	0xFD9
 12956                           status	equ	0xFD8
 12957                           
 12958 ;; *************** function _CDCTxService *****************
 12959 ;; Defined at:
 12960 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 12961 ;; Parameters:    Size  Location     Type
 12962 ;;		None
 12963 ;; Auto vars:     Size  Location     Type
 12964 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 12965 ;;  i               1   36[BANK0 ] unsigned char 
 12966 ;; Return value:  Size  Location     Type
 12967 ;;                  1    wreg      void 
 12968 ;; Registers used:
 12969 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12970 ;; Tracked objects:
 12971 ;;		On entry : 0/0
 12972 ;;		On exit  : 0/0
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12976 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12979 ;;Total ram usage:        2 bytes
 12980 ;; Hardware stack levels used:    1
 12981 ;; Hardware stack levels required when called:   12
 12982 ;; This function calls:
 12983 ;;		_USBTransferOnePacket
 12984 ;; This function is called by:
 12985 ;;		_UsbDevice_MainTask
 12986 ;; This function uses a non-reentrant model
 12987 ;;
 12988                           
 12989                           	psect	text54
 12990  0023F2                     __ptext54:
 12991                           	opt stack 0
 12992  0023F2                     _CDCTxService:
 12993                           	opt stack 15
 12994                           
 12995                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 12996                           ;usb_device_cdc.c: 842: uint8_t i;
 12997                           ;usb_device_cdc.c: 844: ;
 12998                           ;usb_device_cdc.c: 846: {};
 12999                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;incstack = 0
 13003  0023F2  0101               	movlb	1	; () banked
 13004  0023F4  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13005  0023F6  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13006  0023F8  B4D8               	btfsc	status,2,c
 13007  0023FA  D006               	goto	l1931
 13008                           
 13009                           ; BSR set to: 1
 13010  0023FC  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13011  002400  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13012  002404  BEDF               	btfsc	indf2,7,c
 13013  002406  0012               	return	
 13014  002408                     l1931:
 13015                           
 13016                           ; BSR set to: 1
 13017                           ;usb_device_cdc.c: 852: }
 13018                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13019                           
 13020                           ; BSR set to: 1
 13021  002408  0E03               	movlw	3
 13022  00240A  0100               	movlb	0	; () banked
 13023  00240C  19C1               	xorwf	_cdc_trf_state& (0+255),w,b
 13024  00240E  A4D8               	btfss	status,2,c
 13025  002410  D002               	goto	l1933
 13026                           
 13027                           ; BSR set to: 0
 13028                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13029  002412  0E00               	movlw	0
 13030  002414  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13031  002416                     l1933:
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13035  002416  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13036  002418  B4D8               	btfsc	status,2,c
 13037  00241A  0012               	return	
 13038                           
 13039                           ; BSR set to: 0
 13040                           ;usb_device_cdc.c: 869: }
 13041                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13042                           
 13043                           ; BSR set to: 0
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;usb_device_cdc.c: 866: {
 13047                           ;usb_device_cdc.c: 867: ;
 13048                           ;usb_device_cdc.c: 868: return;
 13049  00241C  0E02               	movlw	2
 13050  00241E  19C1               	xorwf	_cdc_trf_state& (0+255),w,b
 13051  002420  A4D8               	btfss	status,2,c
 13052  002422  D013               	goto	l1935
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;usb_device_cdc.c: 875: {
 13056                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13057  002424  0E01               	movlw	1
 13058  002426  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13059  002428  0E00               	movlw	0
 13060  00242A  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13061  00242C  0E00               	movlw	0
 13062  00242E  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13063  002430  0E00               	movlw	0
 13064  002432  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13065  002434  0E02               	movlw	2
 13066  002436  EC1C  F01F         	call	_USBTransferOnePacket
 13067  00243A  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13068  00243E  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13069                           
 13070                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13071  002442  0E03               	movlw	3
 13072  002444  0100               	movlb	0	; () banked
 13073  002446  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13074                           
 13075                           ;usb_device_cdc.c: 879: }
 13076  002448  0012               	return	
 13077  00244A                     l1935:
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13081                           
 13082                           ; BSR set to: 0
 13083  00244A  05C1               	decf	_cdc_trf_state& (0+255),w,b
 13084  00244C  A4D8               	btfss	status,2,c
 13085  00244E  0012               	return	
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;usb_device_cdc.c: 881: {
 13089                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13090  002450  0E40               	movlw	64
 13091  002452  65C0               	cpfsgt	_cdc_tx_len& (0+255),b
 13092  002454  D003               	goto	l1938
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13096  002456  0E40               	movlw	64
 13097  002458  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13098  00245A  D002               	goto	l1939
 13099  00245C                     l1938:
 13100                           
 13101                           ; BSR set to: 0
 13102                           ;usb_device_cdc.c: 887: else
 13103                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13104  00245C  C0C0  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13105  002460                     l1939:
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13109                           
 13110                           ; BSR set to: 0
 13111  002460  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13112  002462  0800               	sublw	0
 13113  002464  25C0               	addwf	_cdc_tx_len& (0+255),w,b
 13114  002466  6FC0               	movwf	_cdc_tx_len& (0+255),b
 13115                           
 13116                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13117  002468  0E84               	movlw	low _cdc_data_tx
 13118  00246A  0102               	movlb	2	; () banked
 13119  00246C  6FC8               	movwf	_pCDCDst& (0+255),b
 13120  00246E  0E07               	movlw	high _cdc_data_tx
 13121  002470  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13122                           
 13123                           ; BSR set to: 2
 13124                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13125  002472  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13126                           
 13127                           ; BSR set to: 2
 13128                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13129  002476  0101               	movlb	1	; () banked
 13130  002478  51E2               	movf	_cdc_mem_type& (0+255),w,b
 13131  00247A  B4D8               	btfsc	status,2,c
 13132  00247C  D01D               	goto	l1941
 13133  00247E  D03D               	goto	l1945
 13134  002480                     
 13135                           ;usb_device_cdc.c: 901: {
 13136                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13137                           
 13138                           ; BSR set to: 1
 13139  002480  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13140  002484  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13141  002488  6AF8               	clrf	tblptru,c
 13142  00248A  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13143  00248E  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13144  002492  0E0E               	movlw	(high __ramtop+-1)
 13145  002494  64F7               	cpfsgt	tblptrh,c
 13146  002496  D003               	bra	u12937
 13147  002498  0008               	tblrd		*
 13148  00249A  50F5               	movf	tablat,w,c
 13149  00249C  D005               	bra	u12930
 13150  00249E                     u12937:
 13151  00249E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13152  0024A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 13153  0024A6  50EF               	movf	indf0,w,c
 13154  0024A8                     u12930:
 13155  0024A8  6EDF               	movwf	indf2,c
 13156                           
 13157                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13158  0024AA  0102               	movlb	2	; () banked
 13159  0024AC  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13160  0024AE  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13161                           
 13162                           ; BSR set to: 2
 13163                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13164  0024B0  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13165  0024B2  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13166                           
 13167                           ; BSR set to: 2
 13168                           ;usb_device_cdc.c: 905: i--;
 13169  0024B4  0100               	movlb	0	; () banked
 13170  0024B6  0784               	decf	CDCTxService@i& (0+255),f,b
 13171  0024B8                     l1941:
 13172                           
 13173                           ; BSR set to: 0
 13174  0024B8  0100               	movlb	0	; () banked
 13175  0024BA  5184               	movf	CDCTxService@i& (0+255),w,b
 13176  0024BC  B4D8               	btfsc	status,2,c
 13177  0024BE  D021               	goto	u12960
 13178  0024C0  D7DF               	goto	l1942
 13179  0024C2                     
 13180                           ; BSR set to: 0
 13181                           ;usb_device_cdc.c: 911: {
 13182                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13183                           
 13184                           ; BSR set to: 0
 13185  0024C2  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13186  0024C6  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13187  0024CA  6AF8               	clrf	tblptru,c
 13188  0024CC  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13189  0024D0  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13190  0024D4  0E0E               	movlw	(high __ramtop+-1)
 13191  0024D6  64F7               	cpfsgt	tblptrh,c
 13192  0024D8  D003               	bra	u12957
 13193  0024DA  0008               	tblrd		*
 13194  0024DC  50F5               	movf	tablat,w,c
 13195  0024DE  D005               	bra	u12950
 13196  0024E0                     u12957:
 13197  0024E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13198  0024E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13199  0024E8  50EF               	movf	indf0,w,c
 13200  0024EA                     u12950:
 13201  0024EA  6EDF               	movwf	indf2,c
 13202                           
 13203                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13204  0024EC  0102               	movlb	2	; () banked
 13205  0024EE  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13206  0024F0  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13207                           
 13208                           ; BSR set to: 2
 13209                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13210  0024F2  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13211  0024F4  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13212                           
 13213                           ; BSR set to: 2
 13214                           ;usb_device_cdc.c: 915: i--;
 13215  0024F6  0100               	movlb	0	; () banked
 13216  0024F8  0784               	decf	CDCTxService@i& (0+255),f,b
 13217  0024FA                     l1945:
 13218                           
 13219                           ; BSR set to: 0
 13220  0024FA  0100               	movlb	0	; () banked
 13221  0024FC  5184               	movf	CDCTxService@i& (0+255),w,b
 13222  0024FE  A4D8               	btfss	status,2,c
 13223  002500  D7E0               	goto	l1946
 13224  002502                     u12960:
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;usb_device_cdc.c: 916: }
 13228                           ;usb_device_cdc.c: 917: }
 13229                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13230                           
 13231                           ; BSR set to: 0
 13232                           
 13233                           ; BSR set to: 0
 13234  002502  51C0               	movf	_cdc_tx_len& (0+255),w,b
 13235  002504  A4D8               	btfss	status,2,c
 13236  002506  D008               	goto	l1950
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;usb_device_cdc.c: 924: {
 13240                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13241  002508  0E40               	movlw	64
 13242  00250A  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13243  00250C  A4D8               	btfss	status,2,c
 13244  00250E  D002               	goto	l1949
 13245                           
 13246                           ; BSR set to: 0
 13247                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13248  002510  0E02               	movlw	2
 13249  002512  D001               	goto	L14
 13250  002514                     l1949:
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;usb_device_cdc.c: 927: else
 13254                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13255                           
 13256                           ; BSR set to: 0
 13257  002514  0E03               	movlw	3
 13258  002516                     L14:
 13259  002516  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13260  002518                     l1950:
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;usb_device_cdc.c: 929: }
 13264                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13265                           
 13266                           ; BSR set to: 0
 13267                           
 13268                           ; BSR set to: 0
 13269  002518  0E01               	movlw	1
 13270  00251A  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13271  00251C  0E84               	movlw	low _cdc_data_tx
 13272  00251E  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13273  002520  0E07               	movlw	high _cdc_data_tx
 13274  002522  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13275  002524  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13276  002528  0E02               	movlw	2
 13277  00252A  EC1C  F01F         	call	_USBTransferOnePacket
 13278  00252E  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13279  002532  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13280  002536  0012               	return	
 13281  002538                     __end_of_CDCTxService:
 13282                           	opt stack 0
 13283                           tosu	equ	0xFFF
 13284                           tosh	equ	0xFFE
 13285                           tosl	equ	0xFFD
 13286                           pclath	equ	0xFFA
 13287                           tblptru	equ	0xFF8
 13288                           tblptrh	equ	0xFF7
 13289                           tblptrl	equ	0xFF6
 13290                           tablat	equ	0xFF5
 13291                           prodh	equ	0xFF4
 13292                           prodl	equ	0xFF3
 13293                           intcon	equ	0xFF2
 13294                           intcon2	equ	0xFF1
 13295                           intcon3	equ	0xFF0
 13296                           indf0	equ	0xFEF
 13297                           postinc0	equ	0xFEE
 13298                           plusw0	equ	0xFEB
 13299                           fsr0h	equ	0xFEA
 13300                           fsr0l	equ	0xFE9
 13301                           wreg	equ	0xFE8
 13302                           indf1	equ	0xFE7
 13303                           postinc1	equ	0xFE6
 13304                           postdec1	equ	0xFE5
 13305                           plusw1	equ	0xFE3
 13306                           fsr1h	equ	0xFE2
 13307                           fsr1l	equ	0xFE1
 13308                           indf2	equ	0xFDF
 13309                           postinc2	equ	0xFDE
 13310                           postdec2	equ	0xFDD
 13311                           plusw2	equ	0xFDB
 13312                           fsr2h	equ	0xFDA
 13313                           fsr2l	equ	0xFD9
 13314                           status	equ	0xFD8
 13315                           
 13316 ;; *************** function _Term_MainSm *****************
 13317 ;; Defined at:
 13318 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13319 ;; Parameters:    Size  Location     Type
 13320 ;;		None
 13321 ;; Auto vars:     Size  Location     Type
 13322 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13323 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13324 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13325 ;;  FwkBuildYear    4    0        unsigned char [4]
 13326 ;;  FwkBuildMont    4    0        unsigned char [4]
 13327 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13328 ;; Return value:  Size  Location     Type
 13329 ;;                  1    wreg      void 
 13330 ;; Registers used:
 13331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13332 ;; Tracked objects:
 13333 ;;		On entry : 0/0
 13334 ;;		On exit  : 0/0
 13335 ;;		Unchanged: 0/0
 13336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13338 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13340 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13341 ;;Total ram usage:       12 bytes
 13342 ;; Hardware stack levels used:    1
 13343 ;; Hardware stack levels required when called:   16
 13344 ;; This function calls:
 13345 ;;		_OsTmr_GetTimerStatus
 13346 ;;		_OsTmr_StartTimer
 13347 ;;		_Terminal
 13348 ;;		_memset
 13349 ;;		_putUSBUSART
 13350 ;;		_sprintf
 13351 ;;		_strcat
 13352 ;;		_strcpy
 13353 ;;		_strlen
 13354 ;;		_utoa
 13355 ;; This function is called by:
 13356 ;;		_Term_MainTask
 13357 ;; This function uses a non-reentrant model
 13358 ;;
 13359                           
 13360                           	psect	text55
 13361  0010B6                     __ptext55:
 13362                           	opt stack 0
 13363  0010B6                     _Term_MainSm:
 13364                           	opt stack 11
 13365                           
 13366                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13367                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13368                           ;term.c: 711: static UINT8 Data[50];
 13369                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13370                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13371                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13372                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13373                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13374                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13375                           ;term.c: 719: switch (TermMainSmState)
 13376                           
 13377                           ;incstack = 0
 13378  0010B6  D133               	goto	l2409
 13379  0010B8                     
 13380                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13381  0010B8  0ED3               	movlw	low Term_MainSm@TermDelay
 13382  0010BA  0100               	movlb	0	; () banked
 13383  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13384  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13385  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13386  0010C2  0ED0               	movlw	208
 13387  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13388  0010C6  0E07               	movlw	7
 13389  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13390  0010CA  0E00               	movlw	0
 13391  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13392  0010CE  0E00               	movlw	0
 13393  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13394  0010D2  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 13395                           
 13396                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13397  0010D6  0E01               	movlw	1
 13398  0010D8  0102               	movlb	2	; () banked
 13399  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13400                           
 13401                           ;term.c: 726: break;
 13402  0010DC  0012               	return	
 13403  0010DE                     
 13404                           ; BSR set to: 2
 13405                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13406                           
 13407                           ; BSR set to: 2
 13408  0010DE  0ED3               	movlw	low Term_MainSm@TermDelay
 13409  0010E0  0100               	movlb	0	; () banked
 13410  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13411  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13412  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13413  0010E8  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 13414  0010EC  06E8               	decf	wreg,f,c
 13415  0010EE  A4D8               	btfss	status,2,c
 13416  0010F0  0012               	return	
 13417                           
 13418                           ;term.c: 731: {
 13419                           ;term.c: 733: TermMainSmState = Term_InitState;
 13420  0010F2  0E02               	movlw	2
 13421  0010F4  0102               	movlb	2	; () banked
 13422  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13423                           
 13424                           ; BSR set to: 2
 13425                           ;term.c: 734: }
 13426                           ;term.c: 735: break;
 13427  0010F8  0012               	return	
 13428  0010FA                     
 13429                           ; BSR set to: 2
 13430                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13431                           
 13432                           ; BSR set to: 2
 13433  0010FA  0E1F               	movlw	31
 13434  0010FC  0100               	movlb	0	; () banked
 13435  0010FE  65CB               	cpfsgt	_USBDeviceState& (0+255),b
 13436  001100  0012               	return	
 13437                           
 13438                           ; BSR set to: 0
 13439  001102  B265               	btfsc	3941,1,c	;volatile
 13440  001104  0012               	return	
 13441                           
 13442                           ; BSR set to: 0
 13443                           ;term.c: 743: else
 13444                           ;term.c: 744: {
 13445                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13446                           
 13447                           ; BSR set to: 0
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;term.c: 740: {
 13451                           ;term.c: 742: }
 13452  001106  0E03               	movlw	3
 13453  001108  0102               	movlb	2	; () banked
 13454  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13455                           
 13456                           ; BSR set to: 2
 13457                           ;term.c: 747: }
 13458                           ;term.c: 748: break;
 13459  00110C  0012               	return	
 13460  00110E                     
 13461                           ; BSR set to: 2
 13462                           ;term.c: 752: if((cdc_trf_state == 0))
 13463                           
 13464                           ; BSR set to: 2
 13465  00110E  0100               	movlb	0	; () banked
 13466  001110  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13467  001112  A4D8               	btfss	status,2,c
 13468  001114  0012               	return	
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;term.c: 753: {
 13472                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13473  001116  0E53               	movlw	low _Welcome
 13474  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13475  00111A  0EFD               	movlw	high _Welcome
 13476  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13477  00111E  0E88               	movlw	136
 13478  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13479  001122  ECBF  F02D         	call	_putUSBUSART	;wreg free
 13480                           
 13481                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13482  001126  0E04               	movlw	4
 13483  001128  0102               	movlb	2	; () banked
 13484  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13485                           
 13486                           ; BSR set to: 2
 13487                           ;term.c: 758: }
 13488                           ;term.c: 759: break;
 13489  00112C  0012               	return	
 13490  00112E                     
 13491                           ; BSR set to: 2
 13492                           ;term.c: 763: if((cdc_trf_state == 0))
 13493                           
 13494                           ; BSR set to: 2
 13495  00112E  0100               	movlb	0	; () banked
 13496  001130  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13497  001132  A4D8               	btfss	status,2,c
 13498  001134  0012               	return	
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;term.c: 764: {
 13502                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13503  001136  0E63               	movlw	low _MsgFormat
 13504  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13505  00113A  0EFC               	movlw	high _MsgFormat
 13506  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13507  00113E  0EEF               	movlw	239
 13508  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13509  001142  ECBF  F02D         	call	_putUSBUSART	;wreg free
 13510                           
 13511                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13512  001146  0E05               	movlw	5
 13513  001148  0102               	movlb	2	; () banked
 13514  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13515                           
 13516                           ; BSR set to: 2
 13517                           ;term.c: 769: }
 13518                           ;term.c: 770: break;
 13519  00114C  0012               	return	
 13520  00114E                     
 13521                           ; BSR set to: 2
 13522                           ;term.c: 774: if((cdc_trf_state == 0))
 13523                           
 13524                           ; BSR set to: 2
 13525  00114E  0100               	movlb	0	; () banked
 13526  001150  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13527  001152  A4D8               	btfss	status,2,c
 13528  001154  0012               	return	
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;term.c: 775: {
 13532                           ;term.c: 777: memset(Data,0,50);
 13533  001156  0EB8               	movlw	low Term_MainSm@Data
 13534  001158  6F7D               	movwf	memset@p1& (0+255),b
 13535  00115A  0E04               	movlw	high Term_MainSm@Data
 13536  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13537  00115E  0E00               	movlw	0
 13538  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13539  001162  0E00               	movlw	0
 13540  001164  6F7F               	movwf	memset@c& (0+255),b
 13541  001166  0E00               	movlw	0
 13542  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13543  00116A  0E32               	movlw	50
 13544  00116C  6F81               	movwf	memset@n& (0+255),b
 13545  00116E  EC79  F02C         	call	_memset	;wreg free
 13546                           
 13547                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13548  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13549  001174  0100               	movlb	0	; () banked
 13550  001176  6F84               	movwf	utoa@buf& (0+255),b
 13551  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13552  00117A  6F85               	movwf	(utoa@buf+1)& (0+255),b
 13553  00117C  0E00               	movlw	0
 13554  00117E  6F87               	movwf	(utoa@val+1)& (0+255),b
 13555  001180  0E01               	movlw	1
 13556  001182  6F86               	movwf	utoa@val& (0+255),b
 13557  001184  0E00               	movlw	0
 13558  001186  6F89               	movwf	(utoa@base+1)& (0+255),b
 13559  001188  0E0A               	movlw	10
 13560  00118A  6F88               	movwf	utoa@base& (0+255),b
 13561  00118C  EC82  F020         	call	_utoa	;wreg free
 13562                           
 13563                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13564  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13565  001192  0100               	movlb	0	; () banked
 13566  001194  6F84               	movwf	utoa@buf& (0+255),b
 13567  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13568  001198  6F85               	movwf	(utoa@buf+1)& (0+255),b
 13569  00119A  0E00               	movlw	0
 13570  00119C  6F87               	movwf	(utoa@val+1)& (0+255),b
 13571  00119E  0E02               	movlw	2
 13572  0011A0  6F86               	movwf	utoa@val& (0+255),b
 13573  0011A2  0E00               	movlw	0
 13574  0011A4  6F89               	movwf	(utoa@base+1)& (0+255),b
 13575  0011A6  0E0A               	movlw	10
 13576  0011A8  6F88               	movwf	utoa@base& (0+255),b
 13577  0011AA  EC82  F020         	call	_utoa	;wreg free
 13578                           
 13579                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13580  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13581  0011B0  0100               	movlb	0	; () banked
 13582  0011B2  6F84               	movwf	utoa@buf& (0+255),b
 13583  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13584  0011B6  6F85               	movwf	(utoa@buf+1)& (0+255),b
 13585  0011B8  0E00               	movlw	0
 13586  0011BA  6F87               	movwf	(utoa@val+1)& (0+255),b
 13587  0011BC  0E00               	movlw	0
 13588  0011BE  6F86               	movwf	utoa@val& (0+255),b
 13589  0011C0  0E00               	movlw	0
 13590  0011C2  6F89               	movwf	(utoa@base+1)& (0+255),b
 13591  0011C4  0E0A               	movlw	10
 13592  0011C6  6F88               	movwf	utoa@base& (0+255),b
 13593  0011C8  EC82  F020         	call	_utoa	;wreg free
 13594                           
 13595                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13596  0011CC  0EB8               	movlw	low Term_MainSm@Data
 13597  0011CE  0100               	movlb	0	; () banked
 13598  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13599  0011D2  0E04               	movlw	high Term_MainSm@Data
 13600  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13601  0011D6  0E03               	movlw	low STR_23
 13602  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13603  0011DA  0EFF               	movlw	high STR_23
 13604  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13605  0011DE  EC48  F02C         	call	_strcpy	;wreg free
 13606                           
 13607                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13608  0011E2  0EB8               	movlw	low Term_MainSm@Data
 13609  0011E4  0100               	movlb	0	; () banked
 13610  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13611  0011E8  0E04               	movlw	high Term_MainSm@Data
 13612  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13613  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13614  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13615  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13616  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13617  0011F4  EC6C  F027         	call	_strcat	;wreg free
 13618                           
 13619                           ;term.c: 784: strcat(Data,".");
 13620  0011F8  0EB8               	movlw	low Term_MainSm@Data
 13621  0011FA  0100               	movlb	0	; () banked
 13622  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13623  0011FE  0E04               	movlw	high Term_MainSm@Data
 13624  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13625  001202  0EF5               	movlw	low STR_24
 13626  001204  6F7F               	movwf	strcat@from& (0+255),b
 13627  001206  0EFF               	movlw	high STR_24
 13628  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13629  00120A  EC6C  F027         	call	_strcat	;wreg free
 13630                           
 13631                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13632  00120E  0EB8               	movlw	low Term_MainSm@Data
 13633  001210  0100               	movlb	0	; () banked
 13634  001212  6F7D               	movwf	strcat@to& (0+255),b
 13635  001214  0E04               	movlw	high Term_MainSm@Data
 13636  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13637  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13638  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13639  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13640  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13641  001220  EC6C  F027         	call	_strcat	;wreg free
 13642                           
 13643                           ;term.c: 786: strcat(Data,".");
 13644  001224  0EB8               	movlw	low Term_MainSm@Data
 13645  001226  0100               	movlb	0	; () banked
 13646  001228  6F7D               	movwf	strcat@to& (0+255),b
 13647  00122A  0E04               	movlw	high Term_MainSm@Data
 13648  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13649  00122E  0EF5               	movlw	low STR_24
 13650  001230  6F7F               	movwf	strcat@from& (0+255),b
 13651  001232  0EFF               	movlw	high STR_24
 13652  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13653  001236  EC6C  F027         	call	_strcat	;wreg free
 13654                           
 13655                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13656  00123A  0EB8               	movlw	low Term_MainSm@Data
 13657  00123C  0100               	movlb	0	; () banked
 13658  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13659  001240  0E04               	movlw	high Term_MainSm@Data
 13660  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13661  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13662  001246  6F7F               	movwf	strcat@from& (0+255),b
 13663  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13664  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13665  00124C  EC6C  F027         	call	_strcat	;wreg free
 13666                           
 13667                           ;term.c: 788: strcat(Data,"\r\n");
 13668  001250  0EB8               	movlw	low Term_MainSm@Data
 13669  001252  0100               	movlb	0	; () banked
 13670  001254  6F7D               	movwf	strcat@to& (0+255),b
 13671  001256  0E04               	movlw	high Term_MainSm@Data
 13672  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13673  00125A  0EB7               	movlw	low (STR_21+39)
 13674  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13675  00125E  0EFE               	movlw	high (STR_21+39)
 13676  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13677  001262  EC6C  F027         	call	_strcat	;wreg free
 13678                           
 13679                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13680  001266  0EB8               	movlw	low Term_MainSm@Data
 13681  001268  0100               	movlb	0	; () banked
 13682  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13683  00126C  0E04               	movlw	high Term_MainSm@Data
 13684  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13685  001270  0EB8               	movlw	low Term_MainSm@Data
 13686  001272  6F7D               	movwf	strlen@s& (0+255),b
 13687  001274  0E04               	movlw	high Term_MainSm@Data
 13688  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13689  001278  EC0B  F02B         	call	_strlen	;wreg free
 13690  00127C  0100               	movlb	0	; () banked
 13691  00127E  517D               	movf	?_strlen& (0+255),w,b
 13692  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13693  001282  ECBF  F02D         	call	_putUSBUSART	;wreg free
 13694                           
 13695                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13696  001286  0E06               	movlw	6
 13697  001288  0102               	movlb	2	; () banked
 13698  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13699                           
 13700                           ; BSR set to: 2
 13701                           ;term.c: 793: }
 13702                           ;term.c: 794: break;
 13703  00128C  0012               	return	
 13704  00128E                     
 13705                           ; BSR set to: 2
 13706                           ;term.c: 798: if((cdc_trf_state == 0))
 13707                           
 13708                           ; BSR set to: 2
 13709  00128E  0100               	movlb	0	; () banked
 13710  001290  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13711  001292  A4D8               	btfss	status,2,c
 13712  001294  0012               	return	
 13713                           
 13714                           ; BSR set to: 0
 13715                           ;term.c: 799: {
 13716                           ;term.c: 801: memset(Data,0,50);
 13717  001296  0EB8               	movlw	low Term_MainSm@Data
 13718  001298  6F7D               	movwf	memset@p1& (0+255),b
 13719  00129A  0E04               	movlw	high Term_MainSm@Data
 13720  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13721  00129E  0E00               	movlw	0
 13722  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13723  0012A2  0E00               	movlw	0
 13724  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13725  0012A6  0E00               	movlw	0
 13726  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13727  0012AA  0E32               	movlw	50
 13728  0012AC  6F81               	movwf	memset@n& (0+255),b
 13729  0012AE  EC79  F02C         	call	_memset	;wreg free
 13730                           
 13731                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 12 2022");
 13732  0012B2  0EB8               	movlw	low Term_MainSm@Data
 13733  0012B4  0100               	movlb	0	; () banked
 13734  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13735  0012B8  0E04               	movlw	high Term_MainSm@Data
 13736  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13737  0012BC  0E2B               	movlw	low STR_27
 13738  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13739  0012C0  0EFF               	movlw	high STR_27
 13740  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13741  0012C4  0EB9               	movlw	low STR_28
 13742  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13743  0012C8  0EFF               	movlw	high STR_28
 13744  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13745  0012CC  EC30  F01B         	call	_sprintf	;wreg free
 13746                           
 13747                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13748  0012D0  0EB8               	movlw	low Term_MainSm@Data
 13749  0012D2  0100               	movlb	0	; () banked
 13750  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13751  0012D6  0E04               	movlw	high Term_MainSm@Data
 13752  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13753  0012DA  0EB8               	movlw	low Term_MainSm@Data
 13754  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 13755  0012DE  0E04               	movlw	high Term_MainSm@Data
 13756  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13757  0012E2  EC0B  F02B         	call	_strlen	;wreg free
 13758  0012E6  0100               	movlb	0	; () banked
 13759  0012E8  517D               	movf	?_strlen& (0+255),w,b
 13760  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 13761  0012EC  ECBF  F02D         	call	_putUSBUSART	;wreg free
 13762                           
 13763                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 13764  0012F0  0E07               	movlw	7
 13765  0012F2  0102               	movlb	2	; () banked
 13766  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13767                           
 13768                           ; BSR set to: 2
 13769                           ;term.c: 808: }
 13770                           ;term.c: 809: break;
 13771  0012F6  0012               	return	
 13772  0012F8                     
 13773                           ; BSR set to: 2
 13774                           ;term.c: 813: if((cdc_trf_state == 0))
 13775                           
 13776                           ; BSR set to: 2
 13777  0012F8  0100               	movlb	0	; () banked
 13778  0012FA  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13779  0012FC  A4D8               	btfss	status,2,c
 13780  0012FE  0012               	return	
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;term.c: 814: {
 13784                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 13785  001300  0E63               	movlw	low _MsgReady
 13786  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 13787  001304  0EFE               	movlw	high _MsgReady
 13788  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13789  001308  0E16               	movlw	22
 13790  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 13791  00130C  ECBF  F02D         	call	_putUSBUSART	;wreg free
 13792                           
 13793                           ;term.c: 818: TermMainSmState = Term_FinalState;
 13794  001310  0E08               	movlw	8
 13795  001312  0102               	movlb	2	; () banked
 13796  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13797                           
 13798                           ; BSR set to: 2
 13799                           ;term.c: 819: }
 13800                           ;term.c: 820: break;
 13801  001316  0012               	return	
 13802  001318                     
 13803                           ; BSR set to: 2
 13804                           ;term.c: 824: Terminal();
 13805                           
 13806                           ; BSR set to: 2
 13807  001318  EC68  F000         	call	_Terminal	;wreg free
 13808                           
 13809                           ;term.c: 829: }
 13810                           
 13811                           ;term.c: 828: break;
 13812                           
 13813                           ;term.c: 827: default:
 13814                           
 13815                           ;term.c: 825: break;
 13816  00131C  0012               	return	
 13817  00131E                     l2409:
 13818  00131E  0102               	movlb	2	; () banked
 13819  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 13820                           
 13821                           ; Switch size 1, requested type "space"
 13822                           ; Number of cases is 9, Range of values is 0 to 8
 13823                           ; switch strategies available:
 13824                           ; Name         Instructions Cycles
 13825                           ; simple_byte           28    15 (average)
 13826                           ;	Chosen strategy is simple_byte
 13827  001322  0A00               	xorlw	0	; case 0
 13828  001324  B4D8               	btfsc	status,2,c
 13829  001326  D6C8               	goto	l2410
 13830  001328  0A01               	xorlw	1	; case 1
 13831  00132A  B4D8               	btfsc	status,2,c
 13832  00132C  D6D8               	goto	l2412
 13833  00132E  0A03               	xorlw	3	; case 2
 13834  001330  B4D8               	btfsc	status,2,c
 13835  001332  D6E3               	goto	l2414
 13836  001334  0A01               	xorlw	1	; case 3
 13837  001336  B4D8               	btfsc	status,2,c
 13838  001338  D6EA               	goto	l2419
 13839  00133A  0A07               	xorlw	7	; case 4
 13840  00133C  B4D8               	btfsc	status,2,c
 13841  00133E  D6F7               	goto	l2421
 13842  001340  0A01               	xorlw	1	; case 5
 13843  001342  B4D8               	btfsc	status,2,c
 13844  001344  D704               	goto	l2423
 13845  001346  0A03               	xorlw	3	; case 6
 13846  001348  B4D8               	btfsc	status,2,c
 13847  00134A  D7A1               	goto	l2425
 13848  00134C  0A01               	xorlw	1	; case 7
 13849  00134E  B4D8               	btfsc	status,2,c
 13850  001350  D7D3               	goto	l2427
 13851  001352  0A0F               	xorlw	15	; case 8
 13852  001354  A4D8               	btfss	status,2,c
 13853  001356  0012               	return	
 13854  001358  D7DF               	goto	l2429
 13855  00135A                     __end_of_Term_MainSm:
 13856                           	opt stack 0
 13857                           tosu	equ	0xFFF
 13858                           tosh	equ	0xFFE
 13859                           tosl	equ	0xFFD
 13860                           pclath	equ	0xFFA
 13861                           tblptru	equ	0xFF8
 13862                           tblptrh	equ	0xFF7
 13863                           tblptrl	equ	0xFF6
 13864                           tablat	equ	0xFF5
 13865                           prodh	equ	0xFF4
 13866                           prodl	equ	0xFF3
 13867                           intcon	equ	0xFF2
 13868                           intcon2	equ	0xFF1
 13869                           intcon3	equ	0xFF0
 13870                           indf0	equ	0xFEF
 13871                           postinc0	equ	0xFEE
 13872                           plusw0	equ	0xFEB
 13873                           fsr0h	equ	0xFEA
 13874                           fsr0l	equ	0xFE9
 13875                           wreg	equ	0xFE8
 13876                           indf1	equ	0xFE7
 13877                           postinc1	equ	0xFE6
 13878                           postdec1	equ	0xFE5
 13879                           plusw1	equ	0xFE3
 13880                           fsr1h	equ	0xFE2
 13881                           fsr1l	equ	0xFE1
 13882                           indf2	equ	0xFDF
 13883                           postinc2	equ	0xFDE
 13884                           postdec2	equ	0xFDD
 13885                           plusw2	equ	0xFDB
 13886                           fsr2h	equ	0xFDA
 13887                           fsr2l	equ	0xFD9
 13888                           status	equ	0xFD8
 13889                           
 13890 ;; *************** function _strlen *****************
 13891 ;; Defined at:
 13892 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 13893 ;; Parameters:    Size  Location     Type
 13894 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 13895 ;;		 -> Term_MainSm@Data(50), 
 13896 ;; Auto vars:     Size  Location     Type
 13897 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 13898 ;;		 -> Term_MainSm@Data(50), 
 13899 ;; Return value:  Size  Location     Type
 13900 ;;                  2   29[BANK0 ] unsigned int 
 13901 ;; Registers used:
 13902 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13903 ;; Tracked objects:
 13904 ;;		On entry : 0/0
 13905 ;;		On exit  : 0/0
 13906 ;;		Unchanged: 0/0
 13907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13909 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13911 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13912 ;;Total ram usage:        6 bytes
 13913 ;; Hardware stack levels used:    1
 13914 ;; Hardware stack levels required when called:   11
 13915 ;; This function calls:
 13916 ;;		Nothing
 13917 ;; This function is called by:
 13918 ;;		_Term_MainSm
 13919 ;; This function uses a non-reentrant model
 13920 ;;
 13921                           
 13922                           	psect	text56
 13923  005616                     __ptext56:
 13924                           	opt stack 0
 13925  005616                     _strlen:
 13926                           	opt stack 15
 13927                           
 13928                           ;incstack = 0
 13929  005616  C07D  F081         	movff	strlen@s,strlen@cp
 13930  00561A  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 13931  00561E  D003               	goto	l3163
 13932  005620  0100               	movlb	0	; () banked
 13933  005622  4B81               	infsnz	strlen@cp& (0+255),f,b
 13934  005624  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 13935  005626                     l3163:
 13936                           
 13937                           ; BSR set to: 0
 13938  005626  C081  FFD9         	movff	strlen@cp,fsr2l
 13939  00562A  C082  FFDA         	movff	strlen@cp+1,fsr2h
 13940  00562E  50DF               	movf	indf2,w,c
 13941  005630  A4D8               	btfss	status,2,c
 13942  005632  D7F6               	goto	l3164
 13943  005634  C07D  F07F         	movff	strlen@s,??_strlen
 13944  005638  C07E  F080         	movff	strlen@s+1,??_strlen+1
 13945  00563C  0100               	movlb	0	; () banked
 13946  00563E  1F7F               	comf	??_strlen& (0+255),f,b
 13947  005640  1F80               	comf	(??_strlen+1)& (0+255),f,b
 13948  005642  4B7F               	infsnz	??_strlen& (0+255),f,b
 13949  005644  2B80               	incf	(??_strlen+1)& (0+255),f,b
 13950  005646  5181               	movf	strlen@cp& (0+255),w,b
 13951  005648  257F               	addwf	??_strlen& (0+255),w,b
 13952  00564A  6F7D               	movwf	?_strlen& (0+255),b
 13953  00564C  5182               	movf	(strlen@cp+1)& (0+255),w,b
 13954  00564E  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 13955  005650  6F7E               	movwf	(?_strlen+1)& (0+255),b
 13956  005652  0012               	return	
 13957  005654                     __end_of_strlen:
 13958                           	opt stack 0
 13959                           tosu	equ	0xFFF
 13960                           tosh	equ	0xFFE
 13961                           tosl	equ	0xFFD
 13962                           pclath	equ	0xFFA
 13963                           tblptru	equ	0xFF8
 13964                           tblptrh	equ	0xFF7
 13965                           tblptrl	equ	0xFF6
 13966                           tablat	equ	0xFF5
 13967                           prodh	equ	0xFF4
 13968                           prodl	equ	0xFF3
 13969                           intcon	equ	0xFF2
 13970                           intcon2	equ	0xFF1
 13971                           intcon3	equ	0xFF0
 13972                           indf0	equ	0xFEF
 13973                           postinc0	equ	0xFEE
 13974                           plusw0	equ	0xFEB
 13975                           fsr0h	equ	0xFEA
 13976                           fsr0l	equ	0xFE9
 13977                           wreg	equ	0xFE8
 13978                           indf1	equ	0xFE7
 13979                           postinc1	equ	0xFE6
 13980                           postdec1	equ	0xFE5
 13981                           plusw1	equ	0xFE3
 13982                           fsr1h	equ	0xFE2
 13983                           fsr1l	equ	0xFE1
 13984                           indf2	equ	0xFDF
 13985                           postinc2	equ	0xFDE
 13986                           postdec2	equ	0xFDD
 13987                           plusw2	equ	0xFDB
 13988                           fsr2h	equ	0xFDA
 13989                           fsr2l	equ	0xFD9
 13990                           status	equ	0xFD8
 13991                           
 13992 ;; *************** function _strcat *****************
 13993 ;; Defined at:
 13994 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 13995 ;; Parameters:    Size  Location     Type
 13996 ;;  to              2   29[BANK0 ] PTR unsigned char 
 13997 ;;		 -> Term_MainSm@Data(50), 
 13998 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 13999 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14000 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14001 ;; Auto vars:     Size  Location     Type
 14002 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14003 ;;		 -> Term_MainSm@Data(50), 
 14004 ;; Return value:  Size  Location     Type
 14005 ;;                  2   29[BANK0 ] PTR unsigned char 
 14006 ;; Registers used:
 14007 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14008 ;; Tracked objects:
 14009 ;;		On entry : 0/0
 14010 ;;		On exit  : 0/0
 14011 ;;		Unchanged: 0/0
 14012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14013 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14014 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14016 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14017 ;;Total ram usage:        6 bytes
 14018 ;; Hardware stack levels used:    1
 14019 ;; Hardware stack levels required when called:   11
 14020 ;; This function calls:
 14021 ;;		Nothing
 14022 ;; This function is called by:
 14023 ;;		_Term_MainSm
 14024 ;; This function uses a non-reentrant model
 14025 ;;
 14026                           
 14027                           	psect	text57
 14028  004ED8                     __ptext57:
 14029                           	opt stack 0
 14030  004ED8                     _strcat:
 14031                           	opt stack 15
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;incstack = 0
 14035  004ED8  C07D  F081         	movff	strcat@to,strcat@cp
 14036  004EDC  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14037  004EE0  D003               	goto	l3148
 14038  004EE2  0100               	movlb	0	; () banked
 14039  004EE4  4B81               	infsnz	strcat@cp& (0+255),f,b
 14040  004EE6  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14041  004EE8                     l3148:
 14042                           
 14043                           ; BSR set to: 0
 14044  004EE8  C081  FFD9         	movff	strcat@cp,fsr2l
 14045  004EEC  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14046  004EF0  50DF               	movf	indf2,w,c
 14047  004EF2  B4D8               	btfsc	status,2,c
 14048  004EF4  D006               	goto	l3151
 14049  004EF6  D7F5               	goto	l3149
 14050  004EF8  0100               	movlb	0	; () banked
 14051  004EFA  4B81               	infsnz	strcat@cp& (0+255),f,b
 14052  004EFC  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14053  004EFE  4B7F               	infsnz	strcat@from& (0+255),f,b
 14054  004F00  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14055  004F02                     l3151:
 14056                           
 14057                           ; BSR set to: 0
 14058  004F02  C07F  FFF6         	movff	strcat@from,tblptrl
 14059  004F06  C080  FFF7         	movff	strcat@from+1,tblptrh
 14060  004F0A  6AF8               	clrf	tblptru,c
 14061  004F0C  C081  FFD9         	movff	strcat@cp,fsr2l
 14062  004F10  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14063  004F14  0E0E               	movlw	(high __ramtop+-1)
 14064  004F16  64F7               	cpfsgt	tblptrh,c
 14065  004F18  D003               	bra	u11897
 14066  004F1A  0008               	tblrd		*
 14067  004F1C  50F5               	movf	tablat,w,c
 14068  004F1E  D005               	bra	u11890
 14069  004F20                     u11897:
 14070  004F20  CFF6 FFE9          	movff	tblptrl,fsr0l
 14071  004F24  CFF7 FFEA          	movff	tblptrh,fsr0h
 14072  004F28  50EF               	movf	indf0,w,c
 14073  004F2A                     u11890:
 14074  004F2A  6EDF               	movwf	indf2,c
 14075  004F2C  50DF               	movf	indf2,w,c
 14076  004F2E  B4D8               	btfsc	status,2,c
 14077  004F30  0012               	return	
 14078  004F32  D7E2               	goto	l3152
 14079  004F34                     __end_of_strcat:
 14080                           	opt stack 0
 14081                           tosu	equ	0xFFF
 14082                           tosh	equ	0xFFE
 14083                           tosl	equ	0xFFD
 14084                           pclath	equ	0xFFA
 14085                           tblptru	equ	0xFF8
 14086                           tblptrh	equ	0xFF7
 14087                           tblptrl	equ	0xFF6
 14088                           tablat	equ	0xFF5
 14089                           prodh	equ	0xFF4
 14090                           prodl	equ	0xFF3
 14091                           intcon	equ	0xFF2
 14092                           intcon2	equ	0xFF1
 14093                           intcon3	equ	0xFF0
 14094                           indf0	equ	0xFEF
 14095                           postinc0	equ	0xFEE
 14096                           plusw0	equ	0xFEB
 14097                           fsr0h	equ	0xFEA
 14098                           fsr0l	equ	0xFE9
 14099                           wreg	equ	0xFE8
 14100                           indf1	equ	0xFE7
 14101                           postinc1	equ	0xFE6
 14102                           postdec1	equ	0xFE5
 14103                           plusw1	equ	0xFE3
 14104                           fsr1h	equ	0xFE2
 14105                           fsr1l	equ	0xFE1
 14106                           indf2	equ	0xFDF
 14107                           postinc2	equ	0xFDE
 14108                           postdec2	equ	0xFDD
 14109                           plusw2	equ	0xFDB
 14110                           fsr2h	equ	0xFDA
 14111                           fsr2l	equ	0xFD9
 14112                           status	equ	0xFD8
 14113                           
 14114 ;; *************** function _sprintf *****************
 14115 ;; Defined at:
 14116 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14119 ;;		 -> Term_MainSm@Data(50), 
 14120 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14121 ;;		 -> STR_27(17), 
 14122 ;; Auto vars:     Size  Location     Type
 14123 ;;  tmpval          4    0        struct .
 14124 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14125 ;;		 -> STR_29(7), STR_28(12), 
 14126 ;;  ap              2   36[BANK0 ] PTR void [1]
 14127 ;;		 -> ?_sprintf(2), 
 14128 ;;  len             2    0        unsigned int 
 14129 ;;  val             2    0        unsigned int 
 14130 ;;  c               1   38[BANK0 ] char 
 14131 ;;  flag            1   35[BANK0 ] unsigned char 
 14132 ;;  prec            1    0        char 
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  2   29[BANK0 ] int 
 14135 ;; Registers used:
 14136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14137 ;; Tracked objects:
 14138 ;;		On entry : 0/0
 14139 ;;		On exit  : 0/0
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14142 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14143 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14145 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14146 ;;Total ram usage:       12 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; Hardware stack levels required when called:   11
 14149 ;; This function calls:
 14150 ;;		Nothing
 14151 ;; This function is called by:
 14152 ;;		_Term_MainSm
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text58
 14157  003660                     __ptext58:
 14158                           	opt stack 0
 14159  003660                     _sprintf:
 14160                           	opt stack 15
 14161                           
 14162                           ;doprnt.c: 494: va_list ap;
 14163                           ;doprnt.c: 499: signed char c;
 14164                           ;doprnt.c: 506: signed char prec;
 14165                           ;doprnt.c: 508: unsigned char flag;
 14166                           ;doprnt.c: 523: union {
 14167                           ;doprnt.c: 524: unsigned long vd;
 14168                           ;doprnt.c: 525: double integ;
 14169                           ;doprnt.c: 526: } tmpval;
 14170                           ;doprnt.c: 528: unsigned int val;
 14171                           ;doprnt.c: 529: unsigned len;
 14172                           ;doprnt.c: 530: const char * cp;
 14173                           ;doprnt.c: 533: *ap = __va_start();
 14174                           
 14175                           ;incstack = 0
 14176  003660  0E81               	movlw	low (?_sprintf+4)
 14177  003662  0100               	movlb	0	; () banked
 14178  003664  6F84               	movwf	sprintf@ap& (0+255),b
 14179  003666  0E00               	movlw	high (?_sprintf+4)
 14180  003668  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14181                           
 14182                           ;doprnt.c: 536: while(c = *f++) {
 14183  00366A  D04E               	goto	l2552
 14184  00366C                     
 14185                           ; BSR set to: 0
 14186                           ;doprnt.c: 538: if(c != '%')
 14187                           
 14188                           ; BSR set to: 0
 14189  00366C  0E25               	movlw	37
 14190  00366E  1986               	xorwf	sprintf@c& (0+255),w,b
 14191  003670  B4D8               	btfsc	status,2,c
 14192  003672  D009               	goto	l2542
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;doprnt.c: 540: {
 14196                           ;doprnt.c: 541: ((*sp++ = (c)));
 14197  003674  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14198  003678  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14199  00367C  C086  FFDF         	movff	sprintf@c,indf2
 14200                           
 14201                           ; BSR set to: 0
 14202  003680  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14203  003682  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14204                           
 14205                           ;doprnt.c: 542: continue;
 14206  003684  D041               	goto	l2552
 14207  003686                     l2542:
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;doprnt.c: 543: }
 14211                           ;doprnt.c: 548: flag = 0;
 14212                           
 14213                           ; BSR set to: 0
 14214  003686  0E00               	movlw	0
 14215  003688  6F83               	movwf	sprintf@flag& (0+255),b
 14216                           
 14217                           ;doprnt.c: 635: switch(c = *f++) {
 14218  00368A  D02E               	goto	l2543
 14219  00368C                     
 14220                           ; BSR set to: 0
 14221                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14222                           
 14223                           ; BSR set to: 0
 14224  00368C  C084  FFD9         	movff	sprintf@ap,fsr2l
 14225  003690  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14226  003694  CFDE F087          	movff	postinc2,sprintf@cp
 14227  003698  CFDD F088          	movff	postdec2,sprintf@cp+1
 14228                           
 14229                           ; BSR set to: 0
 14230  00369C  0E02               	movlw	2
 14231  00369E  2784               	addwf	sprintf@ap& (0+255),f,b
 14232  0036A0  0E00               	movlw	0
 14233  0036A2  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14234                           
 14235                           ; BSR set to: 0
 14236                           ;doprnt.c: 740: if(!cp)
 14237  0036A4  5187               	movf	sprintf@cp& (0+255),w,b
 14238  0036A6  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14239  0036A8  A4D8               	btfss	status,2,c
 14240  0036AA  D014               	goto	l2548
 14241                           
 14242                           ; BSR set to: 0
 14243                           ;doprnt.c: 741: cp = "(null)";
 14244  0036AC  0EDA               	movlw	low STR_29
 14245  0036AE  6F87               	movwf	sprintf@cp& (0+255),b
 14246  0036B0  0EFF               	movlw	high STR_29
 14247  0036B2  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14248                           
 14249                           ; BSR set to: 0
 14250                           ;doprnt.c: 777: while(*cp)
 14251  0036B4  D00F               	goto	l2548
 14252  0036B6                     
 14253                           ; BSR set to: 0
 14254                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14255                           
 14256                           ; BSR set to: 0
 14257  0036B6  C087  FFF6         	movff	sprintf@cp,tblptrl
 14258  0036BA  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14259  0036BE                     	if	0	;tblptru may be non-zero
 14260  0036BE                     	endif
 14261  0036BE                     	if	0	;tblptru may be non-zero
 14262  0036BE                     	endif
 14263  0036BE  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14264  0036C2  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14265  0036C6  0008               	tblrd		*
 14266  0036C8  CFF5 FFDF          	movff	tablat,indf2
 14267                           
 14268                           ; BSR set to: 0
 14269  0036CC  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14270  0036CE  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14271                           
 14272                           ; BSR set to: 0
 14273  0036D0  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14274  0036D2  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14275  0036D4                     l2548:
 14276                           
 14277                           ; BSR set to: 0
 14278                           
 14279                           ; BSR set to: 0
 14280  0036D4  C087  FFF6         	movff	sprintf@cp,tblptrl
 14281  0036D8  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14282  0036DC                     	if	0	;tblptru may be non-zero
 14283  0036DC                     	endif
 14284  0036DC                     	if	0	;tblptru may be non-zero
 14285  0036DC                     	endif
 14286  0036DC  0008               	tblrd		*
 14287  0036DE  50F5               	movf	tablat,w,c
 14288  0036E0  0900               	iorlw	0
 14289  0036E2  B4D8               	btfsc	status,2,c
 14290  0036E4  D011               	goto	l2552
 14291  0036E6  D7E7               	goto	l2549
 14292  0036E8                     l2543:
 14293                           
 14294                           ; BSR set to: 0
 14295                           
 14296                           ; BSR set to: 0
 14297  0036E8  C07F  FFF6         	movff	sprintf@f,tblptrl
 14298  0036EC  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14299  0036F0  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14300  0036F2  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14301  0036F4                     	if	0	;tblptru may be non-zero
 14302  0036F4                     	endif
 14303  0036F4                     	if	0	;tblptru may be non-zero
 14304  0036F4                     	endif
 14305  0036F4  0008               	tblrd		*
 14306  0036F6  CFF5 F086          	movff	tablat,sprintf@c
 14307  0036FA  5186               	movf	sprintf@c& (0+255),w,b
 14308                           
 14309                           ; Switch size 1, requested type "space"
 14310                           ; Number of cases is 2, Range of values is 0 to 115
 14311                           ; switch strategies available:
 14312                           ; Name         Instructions Cycles
 14313                           ; simple_byte            7     4 (average)
 14314                           ;	Chosen strategy is simple_byte
 14315  0036FC  0A00               	xorlw	0	; case 0
 14316  0036FE  B4D8               	btfsc	status,2,c
 14317  003700  D00F               	goto	u11950
 14318  003702  0A73               	xorlw	115	; case 115
 14319  003704  B4D8               	btfsc	status,2,c
 14320  003706  D7C2               	goto	l2546
 14321  003708                     l2552:
 14322                           
 14323                           ; BSR set to: 0
 14324                           
 14325                           ; BSR set to: 0
 14326                           
 14327                           ;doprnt.c: 1422: {
 14328                           
 14329                           ; BSR set to: 0
 14330  003708  C07F  FFF6         	movff	sprintf@f,tblptrl
 14331  00370C  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14332  003710  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14333  003712  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14334  003714                     	if	0	;tblptru may be non-zero
 14335  003714                     	endif
 14336  003714                     	if	0	;tblptru may be non-zero
 14337  003714                     	endif
 14338  003714  0008               	tblrd		*
 14339  003716  CFF5 F086          	movff	tablat,sprintf@c
 14340  00371A  5186               	movf	sprintf@c& (0+255),w,b
 14341  00371C  A4D8               	btfss	status,2,c
 14342  00371E  D7A6               	goto	l2541
 14343  003720                     u11950:
 14344                           
 14345                           ; BSR set to: 0
 14346                           ;doprnt.c: 1538: *sp = 0;
 14347                           
 14348                           ; BSR set to: 0
 14349                           
 14350                           ;doprnt.c: 1469: }
 14351                           ;doprnt.c: 1533: }
 14352                           ;doprnt.c: 1535: alldone:
 14353                           
 14354                           ; BSR set to: 0
 14355  003720  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14356  003724  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14357  003728  0E00               	movlw	0
 14358  00372A  6EDF               	movwf	indf2,c
 14359  00372C  0012               	return	
 14360  00372E                     __end_of_sprintf:
 14361                           	opt stack 0
 14362                           tosu	equ	0xFFF
 14363                           tosh	equ	0xFFE
 14364                           tosl	equ	0xFFD
 14365                           pclath	equ	0xFFA
 14366                           tblptru	equ	0xFF8
 14367                           tblptrh	equ	0xFF7
 14368                           tblptrl	equ	0xFF6
 14369                           tablat	equ	0xFF5
 14370                           prodh	equ	0xFF4
 14371                           prodl	equ	0xFF3
 14372                           intcon	equ	0xFF2
 14373                           intcon2	equ	0xFF1
 14374                           intcon3	equ	0xFF0
 14375                           indf0	equ	0xFEF
 14376                           postinc0	equ	0xFEE
 14377                           plusw0	equ	0xFEB
 14378                           fsr0h	equ	0xFEA
 14379                           fsr0l	equ	0xFE9
 14380                           wreg	equ	0xFE8
 14381                           indf1	equ	0xFE7
 14382                           postinc1	equ	0xFE6
 14383                           postdec1	equ	0xFE5
 14384                           plusw1	equ	0xFE3
 14385                           fsr1h	equ	0xFE2
 14386                           fsr1l	equ	0xFE1
 14387                           indf2	equ	0xFDF
 14388                           postinc2	equ	0xFDE
 14389                           postdec2	equ	0xFDD
 14390                           plusw2	equ	0xFDB
 14391                           fsr2h	equ	0xFDA
 14392                           fsr2l	equ	0xFD9
 14393                           status	equ	0xFD8
 14394                           
 14395 ;; *************** function _memset *****************
 14396 ;; Defined at:
 14397 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14398 ;; Parameters:    Size  Location     Type
 14399 ;;  p1              2   29[BANK0 ] PTR void 
 14400 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14401 ;;  c               2   31[BANK0 ] int 
 14402 ;;  n               2   33[BANK0 ] unsigned int 
 14403 ;; Auto vars:     Size  Location     Type
 14404 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14405 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14406 ;; Return value:  Size  Location     Type
 14407 ;;                  2   29[BANK0 ] PTR void 
 14408 ;; Registers used:
 14409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14410 ;; Tracked objects:
 14411 ;;		On entry : 0/0
 14412 ;;		On exit  : 0/0
 14413 ;;		Unchanged: 0/0
 14414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14415 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14416 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14418 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14419 ;;Total ram usage:        8 bytes
 14420 ;; Hardware stack levels used:    1
 14421 ;; Hardware stack levels required when called:   11
 14422 ;; This function calls:
 14423 ;;		Nothing
 14424 ;; This function is called by:
 14425 ;;		_USBDeviceInit
 14426 ;;		_USBStdSetCfgHandler
 14427 ;;		_Term_MainSm
 14428 ;; This function uses a non-reentrant model
 14429 ;;
 14430                           
 14431                           	psect	text59
 14432  0058F2                     __ptext59:
 14433                           	opt stack 0
 14434  0058F2                     _memset:
 14435                           	opt stack 14
 14436                           
 14437                           ; BSR set to: 0
 14438                           ;incstack = 0
 14439  0058F2  C07D  F083         	movff	memset@p1,memset@p
 14440  0058F6  C07E  F084         	movff	memset@p1+1,memset@p+1
 14441  0058FA  D009               	goto	l3022
 14442  0058FC                     l11363:
 14443  0058FC  C083  FFD9         	movff	memset@p,fsr2l
 14444  005900  C084  FFDA         	movff	memset@p+1,fsr2h
 14445  005904  C07F  FFDF         	movff	memset@c,indf2
 14446  005908  0100               	movlb	0	; () banked
 14447  00590A  4B83               	infsnz	memset@p& (0+255),f,b
 14448  00590C  2B84               	incf	(memset@p+1)& (0+255),f,b
 14449  00590E                     l3022:
 14450                           
 14451                           ; BSR set to: 0
 14452  00590E  0100               	movlb	0	; () banked
 14453  005910  0781               	decf	memset@n& (0+255),f,b
 14454  005912  A0D8               	btfss	status,0,c
 14455  005914  0782               	decf	(memset@n+1)& (0+255),f,b
 14456  005916  2981               	incf	memset@n& (0+255),w,b
 14457  005918  E1F1               	bnz	l11363
 14458  00591A  2982               	incf	(memset@n+1)& (0+255),w,b
 14459  00591C  B4D8               	btfsc	status,2,c
 14460  00591E  0012               	return	
 14461  005920  D7ED               	goto	l3023
 14462  005922                     __end_of_memset:
 14463                           	opt stack 0
 14464                           tosu	equ	0xFFF
 14465                           tosh	equ	0xFFE
 14466                           tosl	equ	0xFFD
 14467                           pclath	equ	0xFFA
 14468                           tblptru	equ	0xFF8
 14469                           tblptrh	equ	0xFF7
 14470                           tblptrl	equ	0xFF6
 14471                           tablat	equ	0xFF5
 14472                           prodh	equ	0xFF4
 14473                           prodl	equ	0xFF3
 14474                           intcon	equ	0xFF2
 14475                           intcon2	equ	0xFF1
 14476                           intcon3	equ	0xFF0
 14477                           indf0	equ	0xFEF
 14478                           postinc0	equ	0xFEE
 14479                           plusw0	equ	0xFEB
 14480                           fsr0h	equ	0xFEA
 14481                           fsr0l	equ	0xFE9
 14482                           wreg	equ	0xFE8
 14483                           indf1	equ	0xFE7
 14484                           postinc1	equ	0xFE6
 14485                           postdec1	equ	0xFE5
 14486                           plusw1	equ	0xFE3
 14487                           fsr1h	equ	0xFE2
 14488                           fsr1l	equ	0xFE1
 14489                           indf2	equ	0xFDF
 14490                           postinc2	equ	0xFDE
 14491                           postdec2	equ	0xFDD
 14492                           plusw2	equ	0xFDB
 14493                           fsr2h	equ	0xFDA
 14494                           fsr2l	equ	0xFD9
 14495                           status	equ	0xFD8
 14496                           
 14497 ;; *************** function _Terminal *****************
 14498 ;; Defined at:
 14499 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14500 ;; Parameters:    Size  Location     Type
 14501 ;;		None
 14502 ;; Auto vars:     Size  Location     Type
 14503 ;;  i               1   68[BANK0 ] unsigned char 
 14504 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14505 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14506 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14507 ;;  Index           1   70[BANK0 ] unsigned char 
 14508 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14509 ;; Return value:  Size  Location     Type
 14510 ;;                  1    wreg      void 
 14511 ;; Registers used:
 14512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14513 ;; Tracked objects:
 14514 ;;		On entry : 0/0
 14515 ;;		On exit  : 0/0
 14516 ;;		Unchanged: 0/0
 14517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14519 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14520 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14521 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14522 ;;Total ram usage:      455 bytes
 14523 ;; Hardware stack levels used:    1
 14524 ;; Hardware stack levels required when called:   15
 14525 ;; This function calls:
 14526 ;;		_I2cSlv_I2cReadMsgSts
 14527 ;;		_I2cSlv_ReceiveI2cMsg
 14528 ;;		_I2cSlv_SendI2cMsg
 14529 ;;		_OsTmr_Wait
 14530 ;;		_atoi
 14531 ;;		_getsUSBUSART
 14532 ;;		_itoa
 14533 ;;		_putUSBUSART
 14534 ;;		_strcpy
 14535 ;;		_strtol
 14536 ;;		_xtoi
 14537 ;; This function is called by:
 14538 ;;		_Term_MainSm
 14539 ;; This function uses a non-reentrant model
 14540 ;;
 14541                           
 14542                           	psect	text60
 14543  0000D0                     __ptext60:
 14544                           	opt stack 0
 14545  0000D0                     _Terminal:
 14546                           	opt stack 11
 14547                           
 14548                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14549                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14550                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14551                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14552                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14553                           ;term.c: 435: UINT8 Index;
 14554                           ;term.c: 436: static UINT8 Len[4];
 14555                           ;term.c: 437: static UINT8 PackageLen;
 14556                           ;term.c: 438: static UINT8 Addr[4];
 14557                           ;term.c: 439: static UINT8 SlaveAddr;
 14558                           ;term.c: 440: static PayloadType Payload[20u];
 14559                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14560                           
 14561                           ; BSR set to: 0
 14562                           ;incstack = 0
 14563  0000D0  0E00               	movlw	0
 14564  0000D2  0100               	movlb	0	; () banked
 14565  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14566                           
 14567                           ; BSR set to: 0
 14568                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14569                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14570                           ;term.c: 445: static SwTimerType SwTimer;
 14571                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14572  0000D6  0E1F               	movlw	31
 14573  0000D8  65CB               	cpfsgt	_USBDeviceState& (0+255),b
 14574  0000DA  0012               	return	
 14575                           
 14576                           ; BSR set to: 0
 14577  0000DC  B265               	btfsc	3941,1,c	;volatile
 14578  0000DE  0012               	return	
 14579  0000E0  D278               	goto	l2349
 14580  0000E2                     
 14581                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14582                           
 14583                           ; BSR set to: 0
 14584  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14585  0000E4  0100               	movlb	0	; () banked
 14586  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14587  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14588  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14589  0000EC  0EC8               	movlw	200
 14590  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14591  0000F0  ECB5  F022         	call	_getsUSBUSART	;wreg free
 14592  0000F4  0100               	movlb	0	; () banked
 14593  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14594                           
 14595                           ; BSR set to: 0
 14596                           ;term.c: 458: if (ReceivedBytes > 0)
 14597  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14598  0000FA  B4D8               	btfsc	status,2,c
 14599  0000FC  0012               	return	
 14600                           
 14601                           ; BSR set to: 0
 14602                           ;term.c: 459: {
 14603                           ;term.c: 461: if (EchoOption == 1u)
 14604  0000FE  0102               	movlb	2	; () banked
 14605  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14606  000102  A4D8               	btfss	status,2,c
 14607  000104  D026               	goto	l2353
 14608                           
 14609                           ; BSR set to: 2
 14610                           ;term.c: 462: {
 14611                           ;term.c: 464: if((cdc_trf_state == 0))
 14612  000106  0100               	movlb	0	; () banked
 14613  000108  51C1               	movf	_cdc_trf_state& (0+255),w,b
 14614  00010A  A4D8               	btfss	status,2,c
 14615  00010C  D022               	goto	l2353
 14616                           
 14617                           ; BSR set to: 0
 14618                           ;term.c: 465: {
 14619                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14620  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14621  000110  0D01               	mullw	1
 14622  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14623  000114  24F3               	addwf	prodl,w,c
 14624  000116  6ED9               	movwf	fsr2l,c
 14625  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14626  00011A  20F4               	addwfc	prodh,w,c
 14627  00011C  6EDA               	movwf	fsr2h,c
 14628  00011E  0E0D               	movlw	13
 14629  000120  6EDF               	movwf	indf2,c
 14630                           
 14631                           ; BSR set to: 0
 14632                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14633  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14634  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14635  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14636  000128  0E01               	movlw	1
 14637  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14638  00012C  0E00               	movlw	0
 14639  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14640  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14641  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14642  000134  6ED9               	movwf	fsr2l,c
 14643  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14644  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14645  00013A  6EDA               	movwf	fsr2h,c
 14646  00013C  0E0A               	movlw	10
 14647  00013E  6EDF               	movwf	indf2,c
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14651  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14652  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14653  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14654  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14655  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14656  00014A  0F02               	addlw	2
 14657  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14658  00014E  ECBF  F02D         	call	_putUSBUSART	;wreg free
 14659  000152                     l2353:
 14660                           
 14661                           ;term.c: 469: }
 14662                           ;term.c: 470: }
 14663                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14664                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14665                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14666  000152  0E53               	movlw	83
 14667  000154  010A               	movlb	10	; () banked
 14668  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14669  000158  A4D8               	btfss	status,2,c
 14670  00015A  D043               	goto	l2354
 14671                           
 14672                           ; BSR set to: 10
 14673  00015C  0E4F               	movlw	79
 14674  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14675  000160  A4D8               	btfss	status,2,c
 14676  000162  D03F               	goto	l2354
 14677                           
 14678                           ; BSR set to: 10
 14679  000164  0E3A               	movlw	58
 14680  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14681  000168  A4D8               	btfss	status,2,c
 14682  00016A  D03B               	goto	l2354
 14683                           
 14684                           ; BSR set to: 10
 14685                           ;term.c: 476: {
 14686                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14687  00016C  0E47               	movlw	71
 14688  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14689  000170  A4D8               	btfss	status,2,c
 14690  000172  0012               	return	
 14691                           
 14692                           ; BSR set to: 10
 14693  000174  0E3A               	movlw	58
 14694  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14695  000178  A4D8               	btfss	status,2,c
 14696  00017A  0012               	return	
 14697                           
 14698                           ; BSR set to: 10
 14699                           ;term.c: 479: {
 14700                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14701  00017C  0E44               	movlw	68
 14702  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14703  000180  A4D8               	btfss	status,2,c
 14704  000182  D015               	goto	l2356
 14705                           
 14706                           ; BSR set to: 10
 14707  000184  0E46               	movlw	70
 14708  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14709  000188  A4D8               	btfss	status,2,c
 14710  00018A  D011               	goto	l2356
 14711                           
 14712                           ; BSR set to: 10
 14713                           ;term.c: 482: {
 14714                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14715  00018C  0E41               	movlw	65
 14716  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14717  000190  A4D8               	btfss	status,2,c
 14718  000192  D004               	goto	l2357
 14719                           
 14720                           ; BSR set to: 10
 14721                           ;term.c: 484: {
 14722                           ;term.c: 485: FormatOption = 1u;
 14723  000194  0E01               	movlw	1
 14724  000196  0102               	movlb	2	; () banked
 14725  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14726                           
 14727                           ;term.c: 486: }
 14728  00019A  0012               	return	
 14729  00019C                     l2357:
 14730                           
 14731                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14732                           
 14733                           ; BSR set to: 2
 14734  00019C  0E42               	movlw	66
 14735  00019E  010A               	movlb	10	; () banked
 14736  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14737  0001A2  A4D8               	btfss	status,2,c
 14738  0001A4  0012               	return	
 14739                           
 14740                           ; BSR set to: 10
 14741                           ;term.c: 488: {
 14742                           ;term.c: 489: FormatOption = 0u;
 14743  0001A6  0E00               	movlw	0
 14744  0001A8  0102               	movlb	2	; () banked
 14745  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14746                           
 14747                           ; BSR set to: 2
 14748                           ;term.c: 490: }
 14749                           ;term.c: 491: }
 14750                           
 14751                           ; BSR set to: 2
 14752  0001AC  0012               	return	
 14753  0001AE                     l2356:
 14754                           
 14755                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14756                           
 14757                           ; BSR set to: 2
 14758  0001AE  0E45               	movlw	69
 14759  0001B0  010A               	movlb	10	; () banked
 14760  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14761  0001B4  A4D8               	btfss	status,2,c
 14762  0001B6  0012               	return	
 14763                           
 14764                           ; BSR set to: 10
 14765  0001B8  0E4D               	movlw	77
 14766  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14767  0001BC  A4D8               	btfss	status,2,c
 14768  0001BE  0012               	return	
 14769                           
 14770                           ; BSR set to: 10
 14771                           ;term.c: 494: {
 14772                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 14773  0001C0  0E31               	movlw	49
 14774  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14775  0001C4  A4D8               	btfss	status,2,c
 14776  0001C6  D004               	goto	l2362
 14777                           
 14778                           ; BSR set to: 10
 14779                           ;term.c: 496: {
 14780                           ;term.c: 497: EchoOption = 1u;
 14781  0001C8  0E01               	movlw	1
 14782  0001CA  0102               	movlb	2	; () banked
 14783  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14784                           
 14785                           ;term.c: 498: }
 14786  0001CE  0012               	return	
 14787  0001D0                     l2362:
 14788                           
 14789                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 14790                           
 14791                           ; BSR set to: 2
 14792  0001D0  0E30               	movlw	48
 14793  0001D2  010A               	movlb	10	; () banked
 14794  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14795  0001D6  A4D8               	btfss	status,2,c
 14796  0001D8  0012               	return	
 14797                           
 14798                           ; BSR set to: 10
 14799                           ;term.c: 500: {
 14800                           ;term.c: 501: EchoOption = 0u;
 14801  0001DA  0E00               	movlw	0
 14802  0001DC  0102               	movlb	2	; () banked
 14803  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14804                           
 14805                           ; BSR set to: 2
 14806                           ;term.c: 507: }
 14807                           ;term.c: 508: }
 14808                           ;term.c: 509: }
 14809                           
 14810                           ; BSR set to: 2
 14811                           
 14812                           ; BSR set to: 2
 14813                           
 14814                           ;term.c: 504: else
 14815                           ;term.c: 505: {
 14816                           
 14817                           ; BSR set to: 2
 14818                           
 14819                           ; BSR set to: 2
 14820                           ;term.c: 502: }
 14821                           ;term.c: 503: }
 14822                           
 14823                           ; BSR set to: 2
 14824  0001E0  0012               	return	
 14825  0001E2                     l2354:
 14826                           
 14827                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 14828                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 14829                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14830                           
 14831                           ; BSR set to: 2
 14832  0001E2  0E53               	movlw	83
 14833  0001E4  010A               	movlb	10	; () banked
 14834  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14835  0001E8  A4D8               	btfss	status,2,c
 14836  0001EA  D0D3               	goto	l2367
 14837                           
 14838                           ; BSR set to: 10
 14839  0001EC  0E42               	movlw	66
 14840  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14841  0001F0  A4D8               	btfss	status,2,c
 14842  0001F2  D0CF               	goto	l2367
 14843                           
 14844                           ; BSR set to: 10
 14845  0001F4  0E3A               	movlw	58
 14846  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14847  0001F8  A4D8               	btfss	status,2,c
 14848  0001FA  D0CB               	goto	l2367
 14849                           
 14850                           ; BSR set to: 10
 14851                           ;term.c: 513: {
 14852                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14853  0001FC  0E57               	movlw	87
 14854  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14855  000200  A4D8               	btfss	status,2,c
 14856  000202  D091               	goto	l2368
 14857                           
 14858                           ; BSR set to: 10
 14859  000204  0E3A               	movlw	58
 14860  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14861  000208  A4D8               	btfss	status,2,c
 14862  00020A  D08D               	goto	l2368
 14863                           
 14864                           ; BSR set to: 10
 14865                           ;term.c: 515: {
 14866                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 14867  00020C  CA05  F3B6         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 14868                           
 14869                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 14870  000210  CA06  F3B7         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 14871                           
 14872                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 14873  000214  CA08  F3B2         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 14874                           
 14875                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 14876  000218  CA09  F3B3         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 14877                           
 14878                           ; BSR set to: 10
 14879                           ;term.c: 523: PackageLen = atoi((void*)Len);
 14880  00021C  0EB6               	movlw	low Terminal@Len
 14881  00021E  0100               	movlb	0	; () banked
 14882  000220  6F83               	movwf	atoi@s& (0+255),b
 14883  000222  0E03               	movlw	high Terminal@Len
 14884  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 14885  000226  ECC4  F01A         	call	_atoi	;wreg free
 14886  00022A  0100               	movlb	0	; () banked
 14887  00022C  5183               	movf	?_atoi& (0+255),w,b
 14888  00022E  0102               	movlb	2	; () banked
 14889  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 14890                           
 14891                           ; BSR set to: 2
 14892                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 14893  000232  0EB2               	movlw	low Terminal@Addr
 14894  000234  0100               	movlb	0	; () banked
 14895  000236  6F83               	movwf	xtoi@s& (0+255),b
 14896  000238  0E03               	movlw	high Terminal@Addr
 14897  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 14898  00023C  EC04  F019         	call	_xtoi	;wreg free
 14899  000240  0100               	movlb	0	; () banked
 14900  000242  5183               	movf	?_xtoi& (0+255),w,b
 14901  000244  0102               	movlb	2	; () banked
 14902  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 14903                           
 14904                           ; BSR set to: 2
 14905                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 14906  000248  0E00               	movlw	0
 14907  00024A  0100               	movlb	0	; () banked
 14908  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 14909  00024E  D032               	goto	l2369
 14910  000250                     
 14911                           ;term.c: 527: {
 14912                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 14913                           
 14914                           ; BSR set to: 0
 14915  000250  0100               	movlb	0	; () banked
 14916  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 14917  000254  0D02               	mullw	2
 14918  000256  0E0B               	movlw	11
 14919  000258  26F3               	addwf	prodl,f,c
 14920  00025A  0E00               	movlw	0
 14921  00025C  22F4               	addwfc	prodh,f,c
 14922  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 14923  000260  24F3               	addwf	prodl,w,c
 14924  000262  6ED9               	movwf	fsr2l,c
 14925  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 14926  000266  20F4               	addwfc	prodh,w,c
 14927  000268  6EDA               	movwf	fsr2h,c
 14928  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 14929  00026C  0D04               	mullw	4
 14930  00026E  0E00               	movlw	low Terminal@Payload
 14931  000270  24F3               	addwf	prodl,w,c
 14932  000272  6EE1               	movwf	fsr1l,c
 14933  000274  0E05               	movlw	high Terminal@Payload
 14934  000276  20F4               	addwfc	prodh,w,c
 14935  000278  6EE2               	movwf	fsr1h,c
 14936  00027A  CFDF FFE7          	movff	indf2,indf1
 14937                           
 14938                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 14939  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 14940  000280  0D02               	mullw	2
 14941  000282  0E0C               	movlw	12
 14942  000284  26F3               	addwf	prodl,f,c
 14943  000286  0E00               	movlw	0
 14944  000288  22F4               	addwfc	prodh,f,c
 14945  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 14946  00028C  24F3               	addwf	prodl,w,c
 14947  00028E  6ED9               	movwf	fsr2l,c
 14948  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 14949  000292  20F4               	addwfc	prodh,w,c
 14950  000294  6EDA               	movwf	fsr2h,c
 14951  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 14952  000298  0D04               	mullw	4
 14953  00029A  0E01               	movlw	1
 14954  00029C  26F3               	addwf	prodl,f,c
 14955  00029E  0E00               	movlw	0
 14956  0002A0  22F4               	addwfc	prodh,f,c
 14957  0002A2  0E00               	movlw	low Terminal@Payload
 14958  0002A4  24F3               	addwf	prodl,w,c
 14959  0002A6  6EE1               	movwf	fsr1l,c
 14960  0002A8  0E05               	movlw	high Terminal@Payload
 14961  0002AA  20F4               	addwfc	prodh,w,c
 14962  0002AC  6EE2               	movwf	fsr1h,c
 14963  0002AE  CFDF FFE7          	movff	indf2,indf1
 14964                           
 14965                           ; BSR set to: 0
 14966  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 14967  0002B4                     l2369:
 14968                           
 14969                           ; BSR set to: 0
 14970                           
 14971                           ; BSR set to: 0
 14972  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 14973  0002B6  0102               	movlb	2	; () banked
 14974  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 14975  0002BA  B0D8               	btfsc	status,0,c
 14976  0002BC  D7C9               	goto	l2370
 14977                           
 14978                           ; BSR set to: 2
 14979                           ;term.c: 530: }
 14980                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 14981                           
 14982                           ; BSR set to: 2
 14983  0002BE  0E00               	movlw	0
 14984  0002C0  0100               	movlb	0	; () banked
 14985  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 14986  0002C4  D01F               	goto	l2372
 14987  0002C6                     
 14988                           ;term.c: 533: {
 14989                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 14990                           
 14991                           ; BSR set to: 0
 14992  0002C6  0100               	movlb	0	; () banked
 14993  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 14994  0002CA  0D04               	mullw	4
 14995  0002CC  0E00               	movlw	low Terminal@Payload
 14996  0002CE  24F3               	addwf	prodl,w,c
 14997  0002D0  6F89               	movwf	strtol@s& (0+255),b
 14998  0002D2  0E05               	movlw	high Terminal@Payload
 14999  0002D4  20F4               	addwfc	prodh,w,c
 15000  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15001  0002D8  0E00               	movlw	0
 15002  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15003  0002DC  0E00               	movlw	0
 15004  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15005  0002E0  0E00               	movlw	0
 15006  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15007  0002E4  0E10               	movlw	16
 15008  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15009  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15010  0002EC  0100               	movlb	0	; () banked
 15011  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15012  0002F0  0D01               	mullw	1
 15013  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15014  0002F4  24F3               	addwf	prodl,w,c
 15015  0002F6  6ED9               	movwf	fsr2l,c
 15016  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15017  0002FA  20F4               	addwfc	prodh,w,c
 15018  0002FC  6EDA               	movwf	fsr2h,c
 15019  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15020                           
 15021                           ; BSR set to: 0
 15022  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15023  000304                     l2372:
 15024                           
 15025                           ; BSR set to: 0
 15026                           
 15027                           ; BSR set to: 0
 15028  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15029  000306  0102               	movlb	2	; () banked
 15030  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15031  00030A  B0D8               	btfsc	status,0,c
 15032  00030C  D7DC               	goto	l2373
 15033                           
 15034                           ; BSR set to: 2
 15035                           ;term.c: 539: }
 15036                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15037                           
 15038                           ; BSR set to: 2
 15039  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15040  000310  0100               	movlb	0	; () banked
 15041  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15042  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15043  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15044  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15045  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15046  000320  EC2A  F02B         	call	_I2cSlv_SendI2cMsg	;wreg free
 15047                           
 15048                           ;term.c: 543: }
 15049  000324  0012               	return	
 15050  000326                     l2368:
 15051                           
 15052                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15053  000326  0E52               	movlw	82
 15054  000328  010A               	movlb	10	; () banked
 15055  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15056  00032C  A4D8               	btfss	status,2,c
 15057  00032E  0012               	return	
 15058                           
 15059                           ; BSR set to: 10
 15060  000330  0E3A               	movlw	58
 15061  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15062  000334  A4D8               	btfss	status,2,c
 15063  000336  0012               	return	
 15064                           
 15065                           ; BSR set to: 10
 15066                           ;term.c: 545: {
 15067                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15068  000338  CA05  F3B6         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15069                           
 15070                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15071  00033C  CA06  F3B7         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15072                           
 15073                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15074  000340  CA08  F3B2         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15075                           
 15076                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15077  000344  CA09  F3B3         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15078                           
 15079                           ; BSR set to: 10
 15080                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15081  000348  0EB6               	movlw	low Terminal@Len
 15082  00034A  0100               	movlb	0	; () banked
 15083  00034C  6F83               	movwf	atoi@s& (0+255),b
 15084  00034E  0E03               	movlw	high Terminal@Len
 15085  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15086  000352  ECC4  F01A         	call	_atoi	;wreg free
 15087  000356  0100               	movlb	0	; () banked
 15088  000358  5183               	movf	?_atoi& (0+255),w,b
 15089  00035A  0102               	movlb	2	; () banked
 15090  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15091                           
 15092                           ; BSR set to: 2
 15093                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15094  00035E  0EB2               	movlw	low Terminal@Addr
 15095  000360  0100               	movlb	0	; () banked
 15096  000362  6F83               	movwf	xtoi@s& (0+255),b
 15097  000364  0E03               	movlw	high Terminal@Addr
 15098  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15099  000368  EC04  F019         	call	_xtoi	;wreg free
 15100  00036C  0100               	movlb	0	; () banked
 15101  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15102  000370  0102               	movlb	2	; () banked
 15103  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15104                           
 15105                           ; BSR set to: 2
 15106                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15107  000374  0E90               	movlw	low Terminal@TermRxBuffer
 15108  000376  0100               	movlb	0	; () banked
 15109  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15110  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15111  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15112  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15113  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15114  000386  ECCB  F02A         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15115                           
 15116                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15117  00038A  0E01               	movlw	1
 15118  00038C  0102               	movlb	2	; () banked
 15119  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15120                           
 15121                           ; BSR set to: 2
 15122                           ;term.c: 561: }
 15123                           ;term.c: 562: }
 15124                           
 15125                           ; BSR set to: 2
 15126  000390  0012               	return	
 15127  000392                     l2367:
 15128                           
 15129                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15130                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15131                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15132                           
 15133                           ; BSR set to: 2
 15134  000392  0E54               	movlw	84
 15135  000394  010A               	movlb	10	; () banked
 15136  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15137  000398  A4D8               	btfss	status,2,c
 15138  00039A  0012               	return	
 15139                           
 15140                           ; BSR set to: 10
 15141  00039C  0E45               	movlw	69
 15142  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15143  0003A0  A4D8               	btfss	status,2,c
 15144  0003A2  0012               	return	
 15145                           
 15146                           ; BSR set to: 10
 15147  0003A4  0E4C               	movlw	76
 15148  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15149  0003A8  A4D8               	btfss	status,2,c
 15150  0003AA  0012               	return	
 15151                           
 15152                           ; BSR set to: 10
 15153                           ;term.c: 566: {
 15154                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15155  0003AC  CA03  F3B6         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15156                           
 15157                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15158  0003B0  CA04  F3B7         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15159                           
 15160                           ; BSR set to: 10
 15161                           ;term.c: 570: PhoneNumberLen = atoi(Len);
 15162  0003B4  0EB6               	movlw	low Terminal@Len
 15163  0003B6  0100               	movlb	0	; () banked
 15164  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15165  0003BA  0E03               	movlw	high Terminal@Len
 15166  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15167  0003BE  ECC4  F01A         	call	_atoi	;wreg free
 15168  0003C2  C083  F324         	movff	?_atoi,_PhoneNumberLen
 15169  0003C6  C084  F325         	movff	?_atoi+1,_PhoneNumberLen+1
 15170                           
 15171                           ;term.c: 572: for (UINT8 i = 0; i < PhoneNumberLen; i++)
 15172  0003CA  0E00               	movlw	0
 15173  0003CC  0100               	movlb	0	; () banked
 15174  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15175  0003D0  D018               	goto	l2379
 15176  0003D2                     
 15177                           ; BSR set to: 0
 15178                           ;term.c: 573: {
 15179                           ;term.c: 574: PhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15180                           
 15181                           ; BSR set to: 0
 15182  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15183  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15184  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15185  0003D8  0E05               	movlw	5
 15186  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15187  0003DC  0E00               	movlw	0
 15188  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15189  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15190  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15191  0003E4  6ED9               	movwf	fsr2l,c
 15192  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15193  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15194  0003EA  6EDA               	movwf	fsr2h,c
 15195  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15196  0003EE  0D01               	mullw	1
 15197  0003F0  0EEA               	movlw	low _PhoneNumber
 15198  0003F2  24F3               	addwf	prodl,w,c
 15199  0003F4  6EE1               	movwf	fsr1l,c
 15200  0003F6  0E04               	movlw	high _PhoneNumber
 15201  0003F8  20F4               	addwfc	prodh,w,c
 15202  0003FA  6EE2               	movwf	fsr1h,c
 15203  0003FC  CFDF FFE7          	movff	indf2,indf1
 15204                           
 15205                           ; BSR set to: 0
 15206  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15207  000402                     l2379:
 15208                           
 15209                           ; BSR set to: 0
 15210                           
 15211                           ; BSR set to: 0
 15212  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15213  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15214  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15215  000408  0103               	movlb	3	; () banked
 15216  00040A  5124               	movf	_PhoneNumberLen& (0+255),w,b
 15217  00040C  0100               	movlb	0	; () banked
 15218  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15219  000410  0103               	movlb	3	; () banked
 15220  000412  5125               	movf	(_PhoneNumberLen+1)& (0+255),w,b
 15221  000414  0100               	movlb	0	; () banked
 15222  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15223  000418  B0D8               	btfsc	status,0,c
 15224  00041A  0012               	return	
 15225  00041C  D7DA               	goto	l2380
 15226  00041E                     
 15227                           ;term.c: 619: if((cdc_trf_state == 0))
 15228                           
 15229                           ; BSR set to: 0
 15230  00041E  0100               	movlb	0	; () banked
 15231  000420  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15232  000422  A4D8               	btfss	status,2,c
 15233  000424  0012               	return	
 15234                           
 15235                           ; BSR set to: 0
 15236                           ;term.c: 620: {
 15237                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15238  000426  0E53               	movlw	83
 15239  000428  0102               	movlb	2	; () banked
 15240  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15241                           
 15242                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15243  00042C  0E42               	movlw	66
 15244  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15245                           
 15246                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15247  000430  0E5B               	movlw	91
 15248  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15249                           
 15250                           ; BSR set to: 2
 15251                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15252  000434  C3B2  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15253                           
 15254                           ; BSR set to: 2
 15255                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15256  000438  C3B3  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15257                           
 15258                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15259  00043C  0E5D               	movlw	93
 15260  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15261                           
 15262                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15263  000440  0E3A               	movlw	58
 15264  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15265                           
 15266                           ; BSR set to: 2
 15267                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15268  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15269  000446  0100               	movlb	0	; () banked
 15270  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15271  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15272  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15273  00044E  0E07               	movlw	7
 15274  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15275  000452  ECBF  F02D         	call	_putUSBUSART	;wreg free
 15276                           
 15277                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15278  000456  0E02               	movlw	2
 15279  000458  0102               	movlb	2	; () banked
 15280  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15281                           
 15282                           ; BSR set to: 2
 15283                           ;term.c: 632: }
 15284                           ;term.c: 633: break;
 15285  00045C  0012               	return	
 15286  00045E                     
 15287                           ; BSR set to: 2
 15288                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15289                           
 15290                           ; BSR set to: 2
 15291  00045E  ECE1  F02D         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15292  000462  06E8               	decf	wreg,f,c
 15293  000464  A4D8               	btfss	status,2,c
 15294  000466  D088               	goto	l2388
 15295                           
 15296                           ;term.c: 638: {
 15297                           ;term.c: 640: if (FormatOption == 1u)
 15298  000468  0102               	movlb	2	; () banked
 15299  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15300  00046C  A4D8               	btfss	status,2,c
 15301  00046E  D027               	goto	u11830
 15302                           
 15303                           ; BSR set to: 2
 15304                           ;term.c: 641: {
 15305                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15306  000470  0E00               	movlw	0
 15307  000472  0100               	movlb	0	; () banked
 15308  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15309  000476  D01E               	goto	l2390
 15310  000478                     
 15311                           ;term.c: 644: {
 15312                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15313                           
 15314                           ; BSR set to: 0
 15315  000478  0100               	movlb	0	; () banked
 15316  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15317  00047C  0D04               	mullw	4
 15318  00047E  0E00               	movlw	low Terminal@Payload
 15319  000480  24F3               	addwf	prodl,w,c
 15320  000482  6F8D               	movwf	itoa@buf& (0+255),b
 15321  000484  0E05               	movlw	high Terminal@Payload
 15322  000486  20F4               	addwfc	prodh,w,c
 15323  000488  6F8E               	movwf	(itoa@buf+1)& (0+255),b
 15324  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15325  00048C  0D01               	mullw	1
 15326  00048E  0E90               	movlw	low Terminal@TermRxBuffer
 15327  000490  24F3               	addwf	prodl,w,c
 15328  000492  6ED9               	movwf	fsr2l,c
 15329  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15330  000496  20F4               	addwfc	prodh,w,c
 15331  000498  6EDA               	movwf	fsr2h,c
 15332  00049A  50DF               	movf	indf2,w,c
 15333  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15334  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15335  0004A0  6F8F               	movwf	itoa@val& (0+255),b
 15336  0004A2  6B90               	clrf	(itoa@val+1)& (0+255),b
 15337  0004A4  0E00               	movlw	0
 15338  0004A6  6F92               	movwf	(itoa@base+1)& (0+255),b
 15339  0004A8  0E0A               	movlw	10
 15340  0004AA  6F91               	movwf	itoa@base& (0+255),b
 15341  0004AC  EC65  F02A         	call	_itoa	;wreg free
 15342  0004B0  0100               	movlb	0	; () banked
 15343  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15344  0004B4                     l2390:
 15345                           
 15346                           ; BSR set to: 0
 15347                           
 15348                           ; BSR set to: 0
 15349  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15350  0004B6  0102               	movlb	2	; () banked
 15351  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15352  0004BA  B0D8               	btfsc	status,0,c
 15353  0004BC  D7DD               	goto	l2391
 15354  0004BE                     u11830:
 15355                           
 15356                           ; BSR set to: 2
 15357                           ;term.c: 646: }
 15358                           ;term.c: 647: }
 15359                           ;term.c: 650: if((cdc_trf_state == 0))
 15360                           
 15361                           ; BSR set to: 2
 15362                           
 15363                           ; BSR set to: 2
 15364  0004BE  0100               	movlb	0	; () banked
 15365  0004C0  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15366  0004C2  A4D8               	btfss	status,2,c
 15367  0004C4  0012               	return	
 15368                           
 15369                           ; BSR set to: 0
 15370                           ;term.c: 651: {
 15371                           ;term.c: 653: if (FormatOption == 1u)
 15372  0004C6  0102               	movlb	2	; () banked
 15373  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15374  0004CA  A4D8               	btfss	status,2,c
 15375  0004CC  D02B               	goto	l2394
 15376                           
 15377                           ; BSR set to: 2
 15378                           ;term.c: 654: {
 15379                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15380  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15381  0004D0  0D08               	mullw	8
 15382  0004D2  0E03               	movlw	3
 15383  0004D4  26F3               	addwf	prodl,f,c
 15384  0004D6  0E00               	movlw	0
 15385  0004D8  22F4               	addwfc	prodh,f,c
 15386  0004DA  0E00               	movlw	low Terminal@Payload
 15387  0004DC  24F3               	addwf	prodl,w,c
 15388  0004DE  6ED9               	movwf	fsr2l,c
 15389  0004E0  0E05               	movlw	high Terminal@Payload
 15390  0004E2  20F4               	addwfc	prodh,w,c
 15391  0004E4  6EDA               	movwf	fsr2h,c
 15392  0004E6  0E0D               	movlw	13
 15393  0004E8  6EDF               	movwf	indf2,c
 15394                           
 15395                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15396  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15397  0004EC  0D08               	mullw	8
 15398  0004EE  0E02               	movlw	2
 15399  0004F0  26F3               	addwf	prodl,f,c
 15400  0004F2  0E00               	movlw	0
 15401  0004F4  22F4               	addwfc	prodh,f,c
 15402  0004F6  0E00               	movlw	low Terminal@Payload
 15403  0004F8  24F3               	addwf	prodl,w,c
 15404  0004FA  6ED9               	movwf	fsr2l,c
 15405  0004FC  0E05               	movlw	high Terminal@Payload
 15406  0004FE  20F4               	addwfc	prodh,w,c
 15407  000500  6EDA               	movwf	fsr2h,c
 15408  000502  0E0A               	movlw	10
 15409  000504  6EDF               	movwf	indf2,c
 15410                           
 15411                           ; BSR set to: 2
 15412                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15413  000506  0E00               	movlw	low Terminal@Payload
 15414  000508  0100               	movlb	0	; () banked
 15415  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15416  00050C  0E05               	movlw	high Terminal@Payload
 15417  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15418  000510  0102               	movlb	2	; () banked
 15419  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15420  000514  0D02               	mullw	2
 15421  000516  50F3               	movf	prodl,w,c
 15422  000518  0F04               	addlw	4
 15423  00051A  0100               	movlb	0	; () banked
 15424  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15425  00051E  ECBF  F02D         	call	_putUSBUSART	;wreg free
 15426                           
 15427                           ;term.c: 659: }
 15428  000522  D026               	goto	l2395
 15429  000524                     l2394:
 15430                           
 15431                           ;term.c: 660: else
 15432                           ;term.c: 661: {
 15433                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15434  000524  0102               	movlb	2	; () banked
 15435  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15436  000528  0D01               	mullw	1
 15437  00052A  0E90               	movlw	low Terminal@TermRxBuffer
 15438  00052C  24F3               	addwf	prodl,w,c
 15439  00052E  6ED9               	movwf	fsr2l,c
 15440  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15441  000532  20F4               	addwfc	prodh,w,c
 15442  000534  6EDA               	movwf	fsr2h,c
 15443  000536  0E0D               	movlw	13
 15444  000538  6EDF               	movwf	indf2,c
 15445                           
 15446                           ; BSR set to: 2
 15447                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15448  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15449  00053C  0100               	movlb	0	; () banked
 15450  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15451  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15452  000542  0E01               	movlw	1
 15453  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15454  000546  0E00               	movlw	0
 15455  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15456  00054A  0E90               	movlw	low Terminal@TermRxBuffer
 15457  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15458  00054E  6ED9               	movwf	fsr2l,c
 15459  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15460  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15461  000554  6EDA               	movwf	fsr2h,c
 15462  000556  0E0A               	movlw	10
 15463  000558  6EDF               	movwf	indf2,c
 15464                           
 15465                           ; BSR set to: 0
 15466                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15467  00055A  0E90               	movlw	low Terminal@TermRxBuffer
 15468  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15469  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15470  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15471  000562  0102               	movlb	2	; () banked
 15472  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15473  000566  0F02               	addlw	2
 15474  000568  0100               	movlb	0	; () banked
 15475  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15476  00056C  ECBF  F02D         	call	_putUSBUSART	;wreg free
 15477  000570                     l2395:
 15478                           
 15479                           ;term.c: 666: }
 15480                           ;term.c: 668: TermState = Term_GetData;
 15481  000570  0E00               	movlw	0
 15482  000572  0102               	movlb	2	; () banked
 15483  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15484                           
 15485                           ; BSR set to: 2
 15486                           ;term.c: 669: }
 15487                           ;term.c: 670: }
 15488  000576  0012               	return	
 15489  000578                     l2388:
 15490                           
 15491                           ;term.c: 671: else
 15492                           ;term.c: 672: {
 15493                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15494                           
 15495                           ; BSR set to: 2
 15496  000578  0E3B               	movlw	low Terminal@SwTimer
 15497  00057A  0100               	movlb	0	; () banked
 15498  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15499  00057E  0E03               	movlw	high Terminal@SwTimer
 15500  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15501  000582  0EB8               	movlw	184
 15502  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15503  000586  0E0B               	movlw	11
 15504  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15505  00058A  0E00               	movlw	0
 15506  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15507  00058E  0E00               	movlw	0
 15508  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15509  000592  ECEE  F024         	call	_OsTmr_Wait	;wreg free
 15510  000596  06E8               	decf	wreg,f,c
 15511  000598  A4D8               	btfss	status,2,c
 15512  00059A  0012               	return	
 15513                           
 15514                           ;term.c: 675: {
 15515                           ;term.c: 677: if((cdc_trf_state == 0))
 15516  00059C  0100               	movlb	0	; () banked
 15517  00059E  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15518  0005A0  A4D8               	btfss	status,2,c
 15519  0005A2  0012               	return	
 15520                           
 15521                           ; BSR set to: 0
 15522                           ;term.c: 678: {
 15523                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15524  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15525  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15526  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15527  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15528  0005AC  0E90               	movlw	low STR_21
 15529  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15530  0005B0  0EFE               	movlw	high STR_21
 15531  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15532  0005B4  EC48  F02C         	call	_strcpy	;wreg free
 15533                           
 15534                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15535  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15536  0005BA  0100               	movlb	0	; () banked
 15537  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15538  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15539  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15540  0005C2  0E29               	movlw	41
 15541  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15542  0005C6  ECBF  F02D         	call	_putUSBUSART	;wreg free
 15543                           
 15544                           ;term.c: 682: TermState = Term_GetData;
 15545  0005CA  0E00               	movlw	0
 15546  0005CC  0102               	movlb	2	; () banked
 15547  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15548                           
 15549                           ; BSR set to: 2
 15550                           ;term.c: 693: }
 15551                           
 15552                           ; BSR set to: 2
 15553                           ;term.c: 692: break;
 15554                           
 15555                           ;term.c: 691: default:
 15556                           
 15557                           ; BSR set to: 2
 15558                           ;term.c: 689: break;
 15559                           
 15560                           ;term.c: 688: case Term_ReadSlvUartData:
 15561                           
 15562                           ; BSR set to: 2
 15563                           ;term.c: 683: }
 15564                           ;term.c: 684: }
 15565                           ;term.c: 685: }
 15566                           ;term.c: 686: break;
 15567                           
 15568                           ; BSR set to: 2
 15569                           
 15570                           ; BSR set to: 2
 15571  0005D0  0012               	return	
 15572  0005D2                     l2349:
 15573                           
 15574                           ; BSR set to: 2
 15575  0005D2  0102               	movlb	2	; () banked
 15576  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15577                           
 15578                           ; Switch size 1, requested type "space"
 15579                           ; Number of cases is 4, Range of values is 0 to 3
 15580                           ; switch strategies available:
 15581                           ; Name         Instructions Cycles
 15582                           ; simple_byte           13     7 (average)
 15583                           ;	Chosen strategy is simple_byte
 15584  0005D6  0A00               	xorlw	0	; case 0
 15585  0005D8  B4D8               	btfsc	status,2,c
 15586  0005DA  D583               	goto	l2350
 15587  0005DC  0A01               	xorlw	1	; case 1
 15588  0005DE  B4D8               	btfsc	status,2,c
 15589  0005E0  D71E               	goto	l2385
 15590  0005E2  0A03               	xorlw	3	; case 2
 15591  0005E4  B4D8               	btfsc	status,2,c
 15592  0005E6  D73B               	goto	l2387
 15593  0005E8  0A01               	xorlw	1	; case 3
 15594  0005EA  0012               	return	
 15595  0005EC                     __end_of_Terminal:
 15596                           	opt stack 0
 15597                           tosu	equ	0xFFF
 15598                           tosh	equ	0xFFE
 15599                           tosl	equ	0xFFD
 15600                           pclath	equ	0xFFA
 15601                           tblptru	equ	0xFF8
 15602                           tblptrh	equ	0xFF7
 15603                           tblptrl	equ	0xFF6
 15604                           tablat	equ	0xFF5
 15605                           prodh	equ	0xFF4
 15606                           prodl	equ	0xFF3
 15607                           intcon	equ	0xFF2
 15608                           intcon2	equ	0xFF1
 15609                           intcon3	equ	0xFF0
 15610                           indf0	equ	0xFEF
 15611                           postinc0	equ	0xFEE
 15612                           plusw0	equ	0xFEB
 15613                           fsr0h	equ	0xFEA
 15614                           fsr0l	equ	0xFE9
 15615                           wreg	equ	0xFE8
 15616                           indf1	equ	0xFE7
 15617                           postinc1	equ	0xFE6
 15618                           postdec1	equ	0xFE5
 15619                           plusw1	equ	0xFE3
 15620                           fsr1h	equ	0xFE2
 15621                           fsr1l	equ	0xFE1
 15622                           indf2	equ	0xFDF
 15623                           postinc2	equ	0xFDE
 15624                           postdec2	equ	0xFDD
 15625                           plusw2	equ	0xFDB
 15626                           fsr2h	equ	0xFDA
 15627                           fsr2l	equ	0xFD9
 15628                           status	equ	0xFD8
 15629                           
 15630 ;; *************** function _xtoi *****************
 15631 ;; Defined at:
 15632 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15633 ;; Parameters:    Size  Location     Type
 15634 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15635 ;;		 -> Terminal@Addr(4), 
 15636 ;; Auto vars:     Size  Location     Type
 15637 ;;  val             2   40[BANK0 ] unsigned int 
 15638 ;;  c               1   42[BANK0 ] unsigned char 
 15639 ;;  sign            1   39[BANK0 ] unsigned char 
 15640 ;; Return value:  Size  Location     Type
 15641 ;;                  2   35[BANK0 ] unsigned int 
 15642 ;; Registers used:
 15643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15644 ;; Tracked objects:
 15645 ;;		On entry : 0/0
 15646 ;;		On exit  : 0/0
 15647 ;;		Unchanged: 0/0
 15648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15650 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15652 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15653 ;;Total ram usage:        8 bytes
 15654 ;; Hardware stack levels used:    1
 15655 ;; Hardware stack levels required when called:   13
 15656 ;; This function calls:
 15657 ;;		_isdigit
 15658 ;;		_isspace
 15659 ;;		_isupper
 15660 ;;		_isxdigit
 15661 ;;		_tolower
 15662 ;; This function is called by:
 15663 ;;		_Terminal
 15664 ;; This function uses a non-reentrant model
 15665 ;;
 15666                           
 15667                           	psect	text61
 15668  003208                     __ptext61:
 15669                           	opt stack 0
 15670  003208                     _xtoi:
 15671                           	opt stack 12
 15672                           
 15673                           ;incstack = 0
 15674  003208  0E00               	movlw	0
 15675  00320A  0100               	movlb	0	; () banked
 15676  00320C  6F87               	movwf	xtoi@sign& (0+255),b
 15677  00320E  0E00               	movlw	0
 15678  003210  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15679  003212  0E00               	movlw	0
 15680  003214  6F88               	movwf	xtoi@val& (0+255),b
 15681  003216  D003               	goto	l3217
 15682  003218                     
 15683                           ; BSR set to: 0
 15684  003218  0100               	movlb	0	; () banked
 15685  00321A  4B83               	infsnz	xtoi@s& (0+255),f,b
 15686  00321C  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15687  00321E                     l3217:
 15688                           
 15689                           ; BSR set to: 0
 15690                           
 15691                           ; BSR set to: 0
 15692  00321E  C083  FFD9         	movff	xtoi@s,fsr2l
 15693  003222  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15694  003226  50DF               	movf	indf2,w,c
 15695  003228  EC1A  F02D         	call	_isspace
 15696  00322C  B0D8               	btfsc	status,0,c
 15697  00322E  D7F4               	goto	l3218
 15698  003230  C083  FFD9         	movff	xtoi@s,fsr2l
 15699  003234  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15700  003238  0E2D               	movlw	45
 15701  00323A  18DE               	xorwf	postinc2,w,c
 15702  00323C  A4D8               	btfss	status,2,c
 15703  00323E  D003               	goto	l3220
 15704  003240  0100               	movlb	0	; () banked
 15705  003242  2B87               	incf	xtoi@sign& (0+255),f,b
 15706  003244  D009               	goto	L16
 15707  003246                     l3220:
 15708                           
 15709                           ; BSR set to: 0
 15710  003246  C083  FFD9         	movff	xtoi@s,fsr2l
 15711  00324A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15712  00324E  0E2B               	movlw	43
 15713  003250  18DE               	xorwf	postinc2,w,c
 15714  003252  A4D8               	btfss	status,2,c
 15715  003254  D028               	goto	l3223
 15716  003256  0100               	movlb	0	; () banked
 15717  003258                     L16:
 15718  003258  4B83               	infsnz	xtoi@s& (0+255),f,b
 15719  00325A  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15720                           
 15721                           ; BSR set to: 0
 15722                           
 15723                           ; BSR set to: 0
 15724  00325C  D024               	goto	l3223
 15725  00325E                     
 15726                           ; BSR set to: 0
 15727  00325E  0100               	movlb	0	; () banked
 15728  003260  518A               	movf	xtoi@c& (0+255),w,b
 15729  003262  ECAE  F02D         	call	_isupper
 15730  003266  A0D8               	btfss	status,0,c
 15731  003268  D006               	goto	l3225
 15732  00326A  0100               	movlb	0	; () banked
 15733  00326C  518A               	movf	xtoi@c& (0+255),w,b
 15734  00326E  EC66  F02E         	call	_tolower
 15735  003272  0100               	movlb	0	; () banked
 15736  003274  6F8A               	movwf	xtoi@c& (0+255),b
 15737  003276                     l3225:
 15738  003276  0100               	movlb	0	; () banked
 15739  003278  518A               	movf	xtoi@c& (0+255),w,b
 15740  00327A  ECD0  F02D         	call	_isdigit
 15741  00327E  A0D8               	btfss	status,0,c
 15742  003280  D002               	goto	l3226
 15743  003282  0E30               	movlw	48
 15744  003284  D001               	goto	L15
 15745  003286                     l3226:
 15746                           
 15747                           ; BSR set to: 0
 15748  003286  0E57               	movlw	87
 15749  003288                     L15:
 15750  003288  0100               	movlb	0	; () banked
 15751  00328A  5F8A               	subwf	xtoi@c& (0+255),f,b
 15752                           
 15753                           ; BSR set to: 0
 15754  00328C  3B88               	swapf	xtoi@val& (0+255),f,b
 15755  00328E  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15756  003290  0EF0               	movlw	240
 15757  003292  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15758  003294  5188               	movf	xtoi@val& (0+255),w,b
 15759  003296  0B0F               	andlw	15
 15760  003298  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 15761  00329A  0EF0               	movlw	240
 15762  00329C  1788               	andwf	xtoi@val& (0+255),f,b
 15763  00329E  518A               	movf	xtoi@c& (0+255),w,b
 15764  0032A0  2788               	addwf	xtoi@val& (0+255),f,b
 15765  0032A2  0E00               	movlw	0
 15766  0032A4  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 15767  0032A6                     l3223:
 15768                           
 15769                           ; BSR set to: 0
 15770  0032A6  C083  FFD9         	movff	xtoi@s,fsr2l
 15771  0032AA  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15772  0032AE  0100               	movlb	0	; () banked
 15773  0032B0  4B83               	infsnz	xtoi@s& (0+255),f,b
 15774  0032B2  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15775  0032B4  50DF               	movf	indf2,w,c
 15776  0032B6  6F8A               	movwf	xtoi@c& (0+255),b
 15777  0032B8  518A               	movf	xtoi@c& (0+255),w,b
 15778  0032BA  EC87  F02B         	call	_isxdigit
 15779  0032BE  B0D8               	btfsc	status,0,c
 15780  0032C0  D7CE               	goto	l3224
 15781  0032C2  0100               	movlb	0	; () banked
 15782  0032C4  5187               	movf	xtoi@sign& (0+255),w,b
 15783  0032C6  B4D8               	btfsc	status,2,c
 15784  0032C8  D00D               	goto	l3229
 15785                           
 15786                           ; BSR set to: 0
 15787  0032CA  C088  F085         	movff	xtoi@val,??_xtoi
 15788  0032CE  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 15789  0032D2  1F85               	comf	??_xtoi& (0+255),f,b
 15790  0032D4  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 15791  0032D6  4B85               	infsnz	??_xtoi& (0+255),f,b
 15792  0032D8  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 15793  0032DA  C085  F083         	movff	??_xtoi,?_xtoi
 15794  0032DE  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 15795  0032E2  0012               	return	
 15796  0032E4                     l3229:
 15797                           
 15798                           ; BSR set to: 0
 15799  0032E4  C088  F083         	movff	xtoi@val,?_xtoi
 15800  0032E8  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 15801                           
 15802                           ; BSR set to: 0
 15803  0032EC  0012               	return		;funcret
 15804  0032EE                     __end_of_xtoi:
 15805                           	opt stack 0
 15806                           tosu	equ	0xFFF
 15807                           tosh	equ	0xFFE
 15808                           tosl	equ	0xFFD
 15809                           pclath	equ	0xFFA
 15810                           tblptru	equ	0xFF8
 15811                           tblptrh	equ	0xFF7
 15812                           tblptrl	equ	0xFF6
 15813                           tablat	equ	0xFF5
 15814                           prodh	equ	0xFF4
 15815                           prodl	equ	0xFF3
 15816                           intcon	equ	0xFF2
 15817                           intcon2	equ	0xFF1
 15818                           intcon3	equ	0xFF0
 15819                           indf0	equ	0xFEF
 15820                           postinc0	equ	0xFEE
 15821                           plusw0	equ	0xFEB
 15822                           fsr0h	equ	0xFEA
 15823                           fsr0l	equ	0xFE9
 15824                           wreg	equ	0xFE8
 15825                           indf1	equ	0xFE7
 15826                           postinc1	equ	0xFE6
 15827                           postdec1	equ	0xFE5
 15828                           plusw1	equ	0xFE3
 15829                           fsr1h	equ	0xFE2
 15830                           fsr1l	equ	0xFE1
 15831                           indf2	equ	0xFDF
 15832                           postinc2	equ	0xFDE
 15833                           postdec2	equ	0xFDD
 15834                           plusw2	equ	0xFDB
 15835                           fsr2h	equ	0xFDA
 15836                           fsr2l	equ	0xFD9
 15837                           status	equ	0xFD8
 15838                           
 15839 ;; *************** function _tolower *****************
 15840 ;; Defined at:
 15841 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 15842 ;; Parameters:    Size  Location     Type
 15843 ;;  c               1    wreg     unsigned char 
 15844 ;; Auto vars:     Size  Location     Type
 15845 ;;  c               1   29[BANK0 ] unsigned char 
 15846 ;; Return value:  Size  Location     Type
 15847 ;;                  1    wreg      unsigned char 
 15848 ;; Registers used:
 15849 ;;		wreg, status,2, status,0
 15850 ;; Tracked objects:
 15851 ;;		On entry : 0/0
 15852 ;;		On exit  : 0/0
 15853 ;;		Unchanged: 0/0
 15854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15858 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15859 ;;Total ram usage:        1 bytes
 15860 ;; Hardware stack levels used:    1
 15861 ;; Hardware stack levels required when called:   11
 15862 ;; This function calls:
 15863 ;;		Nothing
 15864 ;; This function is called by:
 15865 ;;		_xtoi
 15866 ;; This function uses a non-reentrant model
 15867 ;;
 15868                           
 15869                           	psect	text62
 15870  005CCC                     __ptext62:
 15871                           	opt stack 0
 15872  005CCC                     _tolower:
 15873                           	opt stack 13
 15874                           
 15875                           ; BSR set to: 0
 15876                           ;incstack = 0
 15877                           ;tolower@c stored from wreg
 15878  005CCC  0100               	movlb	0	; () banked
 15879  005CCE  6F7D               	movwf	tolower@c& (0+255),b
 15880  005CD0  0E5B               	movlw	91
 15881  005CD2  0100               	movlb	0	; () banked
 15882  005CD4  617D               	cpfslt	tolower@c& (0+255),b
 15883  005CD6  D004               	goto	l3276
 15884                           
 15885                           ; BSR set to: 0
 15886  005CD8  0E40               	movlw	64
 15887  005CDA  657D               	cpfsgt	tolower@c& (0+255),b
 15888  005CDC  D001               	goto	l3276
 15889                           
 15890                           ; BSR set to: 0
 15891  005CDE  8B7D               	bsf	tolower@c& (0+255),5,b
 15892  005CE0                     l3276:
 15893                           
 15894                           ; BSR set to: 0
 15895                           
 15896                           ; BSR set to: 0
 15897  005CE0  517D               	movf	tolower@c& (0+255),w,b
 15898  005CE2  0012               	return	
 15899  005CE4                     __end_of_tolower:
 15900                           	opt stack 0
 15901                           tosu	equ	0xFFF
 15902                           tosh	equ	0xFFE
 15903                           tosl	equ	0xFFD
 15904                           pclath	equ	0xFFA
 15905                           tblptru	equ	0xFF8
 15906                           tblptrh	equ	0xFF7
 15907                           tblptrl	equ	0xFF6
 15908                           tablat	equ	0xFF5
 15909                           prodh	equ	0xFF4
 15910                           prodl	equ	0xFF3
 15911                           intcon	equ	0xFF2
 15912                           intcon2	equ	0xFF1
 15913                           intcon3	equ	0xFF0
 15914                           indf0	equ	0xFEF
 15915                           postinc0	equ	0xFEE
 15916                           plusw0	equ	0xFEB
 15917                           fsr0h	equ	0xFEA
 15918                           fsr0l	equ	0xFE9
 15919                           wreg	equ	0xFE8
 15920                           indf1	equ	0xFE7
 15921                           postinc1	equ	0xFE6
 15922                           postdec1	equ	0xFE5
 15923                           plusw1	equ	0xFE3
 15924                           fsr1h	equ	0xFE2
 15925                           fsr1l	equ	0xFE1
 15926                           indf2	equ	0xFDF
 15927                           postinc2	equ	0xFDE
 15928                           postdec2	equ	0xFDD
 15929                           plusw2	equ	0xFDB
 15930                           fsr2h	equ	0xFDA
 15931                           fsr2l	equ	0xFD9
 15932                           status	equ	0xFD8
 15933                           
 15934 ;; *************** function _isxdigit *****************
 15935 ;; Defined at:
 15936 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 15937 ;; Parameters:    Size  Location     Type
 15938 ;;  c               1    wreg     unsigned char 
 15939 ;; Auto vars:     Size  Location     Type
 15940 ;;  c               1   34[BANK0 ] unsigned char 
 15941 ;; Return value:  Size  Location     Type
 15942 ;;		None               void
 15943 ;; Registers used:
 15944 ;;		wreg, status,2, status,0, cstack
 15945 ;; Tracked objects:
 15946 ;;		On entry : 0/0
 15947 ;;		On exit  : 0/0
 15948 ;;		Unchanged: 0/0
 15949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15951 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15952 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15953 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15954 ;;Total ram usage:        3 bytes
 15955 ;; Hardware stack levels used:    1
 15956 ;; Hardware stack levels required when called:   12
 15957 ;; This function calls:
 15958 ;;		_isdigit
 15959 ;; This function is called by:
 15960 ;;		_xtoi
 15961 ;; This function uses a non-reentrant model
 15962 ;;
 15963                           
 15964                           	psect	text63
 15965  00570E                     __ptext63:
 15966                           	opt stack 0
 15967  00570E                     _isxdigit:
 15968                           	opt stack 12
 15969                           
 15970                           ; BSR set to: 0
 15971                           ;incstack = 0
 15972                           ;isxdigit@c stored from wreg
 15973  00570E  0100               	movlb	0	; () banked
 15974  005710  6F82               	movwf	isxdigit@c& (0+255),b
 15975  005712  0E01               	movlw	1
 15976  005714  0100               	movlb	0	; () banked
 15977  005716  6F81               	movwf	_isxdigit$6377& (0+255),b
 15978                           
 15979                           ; BSR set to: 0
 15980  005718  0E67               	movlw	103
 15981  00571A  6182               	cpfslt	isxdigit@c& (0+255),b
 15982  00571C  D003               	goto	u10460
 15983                           
 15984                           ; BSR set to: 0
 15985  00571E  0E61               	movlw	97
 15986  005720  6182               	cpfslt	isxdigit@c& (0+255),b
 15987  005722  D00E               	goto	l3272
 15988  005724                     u10460:
 15989                           
 15990                           ; BSR set to: 0
 15991                           
 15992                           ; BSR set to: 0
 15993  005724  0E47               	movlw	71
 15994  005726  6182               	cpfslt	isxdigit@c& (0+255),b
 15995  005728  D003               	goto	u10480
 15996                           
 15997                           ; BSR set to: 0
 15998  00572A  0E41               	movlw	65
 15999  00572C  6182               	cpfslt	isxdigit@c& (0+255),b
 16000  00572E  D008               	goto	l3272
 16001  005730                     u10480:
 16002                           
 16003                           ; BSR set to: 0
 16004                           
 16005                           ; BSR set to: 0
 16006  005730  5182               	movf	isxdigit@c& (0+255),w,b
 16007  005732  ECD0  F02D         	call	_isdigit
 16008  005736  B0D8               	btfsc	status,0,c
 16009  005738  D003               	goto	l3272
 16010  00573A  0E00               	movlw	0
 16011  00573C  0100               	movlb	0	; () banked
 16012  00573E  6F81               	movwf	_isxdigit$6377& (0+255),b
 16013  005740                     l3272:
 16014                           
 16015                           ; BSR set to: 0
 16016  005740  C081  F080         	movff	_isxdigit$6377,??_isxdigit
 16017  005744  0100               	movlb	0	; () banked
 16018  005746  3180               	rrcf	??_isxdigit& (0+255),w,b
 16019  005748  0012               	return	
 16020  00574A                     __end_of_isxdigit:
 16021                           	opt stack 0
 16022                           tosu	equ	0xFFF
 16023                           tosh	equ	0xFFE
 16024                           tosl	equ	0xFFD
 16025                           pclath	equ	0xFFA
 16026                           tblptru	equ	0xFF8
 16027                           tblptrh	equ	0xFF7
 16028                           tblptrl	equ	0xFF6
 16029                           tablat	equ	0xFF5
 16030                           prodh	equ	0xFF4
 16031                           prodl	equ	0xFF3
 16032                           intcon	equ	0xFF2
 16033                           intcon2	equ	0xFF1
 16034                           intcon3	equ	0xFF0
 16035                           indf0	equ	0xFEF
 16036                           postinc0	equ	0xFEE
 16037                           plusw0	equ	0xFEB
 16038                           fsr0h	equ	0xFEA
 16039                           fsr0l	equ	0xFE9
 16040                           wreg	equ	0xFE8
 16041                           indf1	equ	0xFE7
 16042                           postinc1	equ	0xFE6
 16043                           postdec1	equ	0xFE5
 16044                           plusw1	equ	0xFE3
 16045                           fsr1h	equ	0xFE2
 16046                           fsr1l	equ	0xFE1
 16047                           indf2	equ	0xFDF
 16048                           postinc2	equ	0xFDE
 16049                           postdec2	equ	0xFDD
 16050                           plusw2	equ	0xFDB
 16051                           fsr2h	equ	0xFDA
 16052                           fsr2l	equ	0xFD9
 16053                           status	equ	0xFD8
 16054                           
 16055 ;; *************** function _strtol *****************
 16056 ;; Defined at:
 16057 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16058 ;; Parameters:    Size  Location     Type
 16059 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16060 ;;		 -> Terminal@Payload(80), 
 16061 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16062 ;;		 -> NULL(0), 
 16063 ;;  base            2   45[BANK0 ] int 
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;  a               4   52[BANK0 ] long 
 16066 ;;  c               1   56[BANK0 ] unsigned char 
 16067 ;;  sign            1   51[BANK0 ] unsigned char 
 16068 ;; Return value:  Size  Location     Type
 16069 ;;                  4   41[BANK0 ] long 
 16070 ;; Registers used:
 16071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16072 ;; Tracked objects:
 16073 ;;		On entry : 0/0
 16074 ;;		On exit  : 0/0
 16075 ;;		Unchanged: 0/0
 16076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16077 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16078 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16079 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16080 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16081 ;;Total ram usage:       16 bytes
 16082 ;; Hardware stack levels used:    1
 16083 ;; Hardware stack levels required when called:   13
 16084 ;; This function calls:
 16085 ;;		___lmul
 16086 ;;		_isalpha
 16087 ;;		_isdigit
 16088 ;;		_isspace
 16089 ;;		_toupper
 16090 ;; This function is called by:
 16091 ;;		_Terminal
 16092 ;; This function uses a non-reentrant model
 16093 ;;
 16094                           
 16095                           	psect	text64
 16096  00181C                     __ptext64:
 16097                           	opt stack 0
 16098  00181C                     _strtol:
 16099                           	opt stack 12
 16100                           
 16101                           ; BSR set to: 0
 16102                           ;incstack = 0
 16103  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16104  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16105  001824  50DF               	movf	indf2,w,c
 16106  001826  0100               	movlb	0	; () banked
 16107  001828  6F98               	movwf	strtol@c& (0+255),b
 16108                           
 16109                           ; BSR set to: 0
 16110  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16111  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16112                           
 16113                           ; BSR set to: 0
 16114  00182E  5198               	movf	strtol@c& (0+255),w,b
 16115  001830  EC1A  F02D         	call	_isspace
 16116  001834  B0D8               	btfsc	status,0,c
 16117  001836  D7F2               	goto	_strtol
 16118  001838  0E00               	movlw	0
 16119  00183A  0100               	movlb	0	; () banked
 16120  00183C  6F94               	movwf	strtol@a& (0+255),b
 16121  00183E  0E00               	movlw	0
 16122  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16123  001842  0E00               	movlw	0
 16124  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16125  001846  0E00               	movlw	0
 16126  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16127  00184A  0E00               	movlw	0
 16128  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16129                           
 16130                           ; BSR set to: 0
 16131  00184E  0E2D               	movlw	45
 16132  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16133  001852  A4D8               	btfss	status,2,c
 16134  001854  D003               	goto	l3179
 16135                           
 16136                           ; BSR set to: 0
 16137  001856  0E01               	movlw	1
 16138  001858  6F93               	movwf	strtol@sign& (0+255),b
 16139  00185A  D004               	goto	u10920
 16140  00185C                     l3179:
 16141                           
 16142                           ; BSR set to: 0
 16143                           
 16144                           ; BSR set to: 0
 16145  00185C  0E2B               	movlw	43
 16146  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16147  001860  A4D8               	btfss	status,2,c
 16148  001862  D008               	goto	l3181
 16149  001864                     u10920:
 16150                           
 16151                           ; BSR set to: 0
 16152  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16153  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16154  00186C  50DF               	movf	indf2,w,c
 16155  00186E  6F98               	movwf	strtol@c& (0+255),b
 16156                           
 16157                           ; BSR set to: 0
 16158  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16159  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16160  001874                     l3181:
 16161                           
 16162                           ; BSR set to: 0
 16163                           
 16164                           ; BSR set to: 0
 16165                           
 16166                           ; BSR set to: 0
 16167  001874  0E30               	movlw	48
 16168  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16169  001878  A4D8               	btfss	status,2,c
 16170  00187A  D02E               	goto	l3189
 16171                           
 16172                           ; BSR set to: 0
 16173  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16174  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16175  001884  50DF               	movf	indf2,w,c
 16176  001886  6F98               	movwf	strtol@c& (0+255),b
 16177                           
 16178                           ; BSR set to: 0
 16179  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16180  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16181                           
 16182                           ; BSR set to: 0
 16183  00188C  518D               	movf	strtol@base& (0+255),w,b
 16184  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16185  001890  B4D8               	btfsc	status,2,c
 16186  001892  D005               	goto	u10950
 16187                           
 16188                           ; BSR set to: 0
 16189  001894  0E10               	movlw	16
 16190  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16191  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16192  00189A  A4D8               	btfss	status,2,c
 16193  00189C  D015               	goto	l3183
 16194  00189E                     u10950:
 16195                           
 16196                           ; BSR set to: 0
 16197                           
 16198                           ; BSR set to: 0
 16199  00189E  0E78               	movlw	120
 16200  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16201  0018A2  B4D8               	btfsc	status,2,c
 16202  0018A4  D004               	goto	u10970
 16203                           
 16204                           ; BSR set to: 0
 16205  0018A6  0E58               	movlw	88
 16206  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16207  0018AA  A4D8               	btfss	status,2,c
 16208  0018AC  D00D               	goto	l3183
 16209  0018AE                     u10970:
 16210                           
 16211                           ; BSR set to: 0
 16212                           
 16213                           ; BSR set to: 0
 16214  0018AE  0E00               	movlw	0
 16215  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16216  0018B2  0E10               	movlw	16
 16217  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16218                           
 16219                           ; BSR set to: 0
 16220  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16221  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16222  0018BE  50DF               	movf	indf2,w,c
 16223  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16224                           
 16225                           ; BSR set to: 0
 16226  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16227  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16228  0018C6  D008               	goto	l3189
 16229  0018C8                     l3183:
 16230                           
 16231                           ; BSR set to: 0
 16232                           
 16233                           ; BSR set to: 0
 16234  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16235  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16236  0018CC  A4D8               	btfss	status,2,c
 16237  0018CE  D004               	goto	l3189
 16238                           
 16239                           ; BSR set to: 0
 16240  0018D0  0E00               	movlw	0
 16241  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16242  0018D4  0E08               	movlw	8
 16243  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16244  0018D8                     l3189:
 16245                           
 16246                           ; BSR set to: 0
 16247                           
 16248                           ; BSR set to: 0
 16249                           
 16250                           ; BSR set to: 0
 16251                           
 16252                           ; BSR set to: 0
 16253  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16254  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16255  0018DC  A4D8               	btfss	status,2,c
 16256  0018DE  D004               	goto	l3190
 16257                           
 16258                           ; BSR set to: 0
 16259  0018E0  0E00               	movlw	0
 16260  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16261  0018E4  0E0A               	movlw	10
 16262  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16263  0018E8                     l3190:
 16264                           
 16265                           ; BSR set to: 0
 16266                           
 16267                           ; BSR set to: 0
 16268                           
 16269                           ; BSR set to: 0
 16270  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16271  0018EA  EC91  F02C         	call	_isalpha
 16272  0018EE  A0D8               	btfss	status,0,c
 16273  0018F0  D008               	goto	l3192
 16274  0018F2  0100               	movlb	0	; () banked
 16275  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16276  0018F6  EC72  F02E         	call	_toupper
 16277  0018FA  0FC9               	addlw	201
 16278  0018FC  0100               	movlb	0	; () banked
 16279  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16280  001900  D009               	goto	l3195
 16281  001902                     l3192:
 16282                           
 16283                           ; BSR set to: 0
 16284  001902  0100               	movlb	0	; () banked
 16285  001904  5198               	movf	strtol@c& (0+255),w,b
 16286  001906  ECD0  F02D         	call	_isdigit
 16287  00190A  A0D8               	btfss	status,0,c
 16288  00190C  D039               	goto	l3196
 16289  00190E  0E30               	movlw	48
 16290  001910  0100               	movlb	0	; () banked
 16291  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16292  001914                     l3195:
 16293                           
 16294                           ; BSR set to: 0
 16295                           
 16296                           ; BSR set to: 0
 16297                           
 16298                           ; BSR set to: 0
 16299  001914  5198               	movf	strtol@c& (0+255),w,b
 16300  001916  6F8F               	movwf	??_strtol& (0+255),b
 16301  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16302  00191A  518D               	movf	strtol@base& (0+255),w,b
 16303  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16304  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16305  001920  0A80               	xorlw	128
 16306  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16307  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16308  001926  0A80               	xorlw	128
 16309  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16310  00192A  B0D8               	btfsc	status,0,c
 16311  00192C  D029               	goto	l3196
 16312                           
 16313                           ; BSR set to: 0
 16314                           
 16315                           ; BSR set to: 0
 16316                           
 16317                           ; BSR set to: 0
 16318  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16319  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16320  001936  0E00               	movlw	0
 16321  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16322  00193A  0EFF               	movlw	-1
 16323  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16324  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16325  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16326  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16327  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16328  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16329  001950  ECC6  F027         	call	___lmul	;wreg free
 16330  001954  0100               	movlb	0	; () banked
 16331  001956  5198               	movf	strtol@c& (0+255),w,b
 16332  001958  257D               	addwf	?___lmul& (0+255),w,b
 16333  00195A  6F94               	movwf	strtol@a& (0+255),b
 16334  00195C  0E00               	movlw	0
 16335  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16336  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16337  001962  0E00               	movlw	0
 16338  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16339  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16340  001968  0E00               	movlw	0
 16341  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16342  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16343                           
 16344                           ; BSR set to: 0
 16345  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16346  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16347  001976  50DF               	movf	indf2,w,c
 16348  001978  6F98               	movwf	strtol@c& (0+255),b
 16349                           
 16350                           ; BSR set to: 0
 16351  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16352  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16353  00197E  D7B4               	goto	l3190
 16354  001980                     l3196:
 16355                           
 16356                           ; BSR set to: 0
 16357  001980  0100               	movlb	0	; () banked
 16358  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16359  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16360  001986  B4D8               	btfsc	status,2,c
 16361  001988  D00E               	goto	l3198
 16362                           
 16363                           ; BSR set to: 0
 16364  00198A  0EFF               	movlw	255
 16365  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16366  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16367  001990  0EFF               	movlw	255
 16368  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16369  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16370  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16371  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16372  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16373  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16374  0019A6                     l3198:
 16375                           
 16376                           ; BSR set to: 0
 16377                           
 16378                           ; BSR set to: 0
 16379  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16380  0019A8  B4D8               	btfsc	status,2,c
 16381  0019AA  D01A               	goto	l3199
 16382                           
 16383                           ; BSR set to: 0
 16384  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16385  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16386  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16387  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16388  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16389  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16390  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16391  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16392  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16393  0019C6  0E00               	movlw	0
 16394  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16395  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16396  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16397  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16398  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16399  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16400  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16401                           
 16402                           ; BSR set to: 0
 16403  0019DE  0012               	return	
 16404  0019E0                     l3199:
 16405                           
 16406                           ; BSR set to: 0
 16407  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16408  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16409  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16410  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16411                           
 16412                           ; BSR set to: 0
 16413  0019F0  0012               	return		;funcret
 16414  0019F2                     __end_of_strtol:
 16415                           	opt stack 0
 16416                           tosu	equ	0xFFF
 16417                           tosh	equ	0xFFE
 16418                           tosl	equ	0xFFD
 16419                           pclath	equ	0xFFA
 16420                           tblptru	equ	0xFF8
 16421                           tblptrh	equ	0xFF7
 16422                           tblptrl	equ	0xFF6
 16423                           tablat	equ	0xFF5
 16424                           prodh	equ	0xFF4
 16425                           prodl	equ	0xFF3
 16426                           intcon	equ	0xFF2
 16427                           intcon2	equ	0xFF1
 16428                           intcon3	equ	0xFF0
 16429                           indf0	equ	0xFEF
 16430                           postinc0	equ	0xFEE
 16431                           plusw0	equ	0xFEB
 16432                           fsr0h	equ	0xFEA
 16433                           fsr0l	equ	0xFE9
 16434                           wreg	equ	0xFE8
 16435                           indf1	equ	0xFE7
 16436                           postinc1	equ	0xFE6
 16437                           postdec1	equ	0xFE5
 16438                           plusw1	equ	0xFE3
 16439                           fsr1h	equ	0xFE2
 16440                           fsr1l	equ	0xFE1
 16441                           indf2	equ	0xFDF
 16442                           postinc2	equ	0xFDE
 16443                           postdec2	equ	0xFDD
 16444                           plusw2	equ	0xFDB
 16445                           fsr2h	equ	0xFDA
 16446                           fsr2l	equ	0xFD9
 16447                           status	equ	0xFD8
 16448                           
 16449 ;; *************** function _toupper *****************
 16450 ;; Defined at:
 16451 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16452 ;; Parameters:    Size  Location     Type
 16453 ;;  c               1    wreg     unsigned char 
 16454 ;; Auto vars:     Size  Location     Type
 16455 ;;  c               1   29[BANK0 ] unsigned char 
 16456 ;; Return value:  Size  Location     Type
 16457 ;;                  1    wreg      unsigned char 
 16458 ;; Registers used:
 16459 ;;		wreg, status,2, status,0
 16460 ;; Tracked objects:
 16461 ;;		On entry : 0/0
 16462 ;;		On exit  : 0/0
 16463 ;;		Unchanged: 0/0
 16464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16468 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16469 ;;Total ram usage:        1 bytes
 16470 ;; Hardware stack levels used:    1
 16471 ;; Hardware stack levels required when called:   11
 16472 ;; This function calls:
 16473 ;;		Nothing
 16474 ;; This function is called by:
 16475 ;;		_strtol
 16476 ;; This function uses a non-reentrant model
 16477 ;;
 16478                           
 16479                           	psect	text65
 16480  005CE4                     __ptext65:
 16481                           	opt stack 0
 16482  005CE4                     _toupper:
 16483                           	opt stack 13
 16484                           
 16485                           ; BSR set to: 0
 16486                           ;incstack = 0
 16487                           ;toupper@c stored from wreg
 16488  005CE4  0100               	movlb	0	; () banked
 16489  005CE6  6F7D               	movwf	toupper@c& (0+255),b
 16490  005CE8  0E7B               	movlw	123
 16491  005CEA  0100               	movlb	0	; () banked
 16492  005CEC  617D               	cpfslt	toupper@c& (0+255),b
 16493  005CEE  D004               	goto	l3203
 16494                           
 16495                           ; BSR set to: 0
 16496  005CF0  0E60               	movlw	96
 16497  005CF2  657D               	cpfsgt	toupper@c& (0+255),b
 16498  005CF4  D001               	goto	l3203
 16499                           
 16500                           ; BSR set to: 0
 16501  005CF6  9B7D               	bcf	toupper@c& (0+255),5,b
 16502  005CF8                     l3203:
 16503                           
 16504                           ; BSR set to: 0
 16505                           
 16506                           ; BSR set to: 0
 16507  005CF8  517D               	movf	toupper@c& (0+255),w,b
 16508  005CFA  0012               	return	
 16509  005CFC                     __end_of_toupper:
 16510                           	opt stack 0
 16511                           tosu	equ	0xFFF
 16512                           tosh	equ	0xFFE
 16513                           tosl	equ	0xFFD
 16514                           pclath	equ	0xFFA
 16515                           tblptru	equ	0xFF8
 16516                           tblptrh	equ	0xFF7
 16517                           tblptrl	equ	0xFF6
 16518                           tablat	equ	0xFF5
 16519                           prodh	equ	0xFF4
 16520                           prodl	equ	0xFF3
 16521                           intcon	equ	0xFF2
 16522                           intcon2	equ	0xFF1
 16523                           intcon3	equ	0xFF0
 16524                           indf0	equ	0xFEF
 16525                           postinc0	equ	0xFEE
 16526                           plusw0	equ	0xFEB
 16527                           fsr0h	equ	0xFEA
 16528                           fsr0l	equ	0xFE9
 16529                           wreg	equ	0xFE8
 16530                           indf1	equ	0xFE7
 16531                           postinc1	equ	0xFE6
 16532                           postdec1	equ	0xFE5
 16533                           plusw1	equ	0xFE3
 16534                           fsr1h	equ	0xFE2
 16535                           fsr1l	equ	0xFE1
 16536                           indf2	equ	0xFDF
 16537                           postinc2	equ	0xFDE
 16538                           postdec2	equ	0xFDD
 16539                           plusw2	equ	0xFDB
 16540                           fsr2h	equ	0xFDA
 16541                           fsr2l	equ	0xFD9
 16542                           status	equ	0xFD8
 16543                           
 16544 ;; *************** function _isspace *****************
 16545 ;; Defined at:
 16546 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16547 ;; Parameters:    Size  Location     Type
 16548 ;;  c               1    wreg     unsigned char 
 16549 ;; Auto vars:     Size  Location     Type
 16550 ;;  c               1   31[BANK0 ] unsigned char 
 16551 ;; Return value:  Size  Location     Type
 16552 ;;		None               void
 16553 ;; Registers used:
 16554 ;;		wreg, status,2, status,0
 16555 ;; Tracked objects:
 16556 ;;		On entry : 0/0
 16557 ;;		On exit  : 0/0
 16558 ;;		Unchanged: 0/0
 16559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16561 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16563 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16564 ;;Total ram usage:        3 bytes
 16565 ;; Hardware stack levels used:    1
 16566 ;; Hardware stack levels required when called:   11
 16567 ;; This function calls:
 16568 ;;		Nothing
 16569 ;; This function is called by:
 16570 ;;		_strtol
 16571 ;;		_xtoi
 16572 ;; This function uses a non-reentrant model
 16573 ;;
 16574                           
 16575                           	psect	text66
 16576  005A34                     __ptext66:
 16577                           	opt stack 0
 16578  005A34                     _isspace:
 16579                           	opt stack 13
 16580                           
 16581                           ; BSR set to: 0
 16582                           ;incstack = 0
 16583                           ;isspace@c stored from wreg
 16584  005A34  0100               	movlb	0	; () banked
 16585  005A36  6F7F               	movwf	isspace@c& (0+255),b
 16586  005A38  0E01               	movlw	1
 16587  005A3A  0100               	movlb	0	; () banked
 16588  005A3C  6F7E               	movwf	_isspace$6370& (0+255),b
 16589                           
 16590                           ; BSR set to: 0
 16591  005A3E  0E20               	movlw	32
 16592  005A40  197F               	xorwf	isspace@c& (0+255),w,b
 16593  005A42  B4D8               	btfsc	status,2,c
 16594  005A44  D008               	goto	l3260
 16595                           
 16596                           ; BSR set to: 0
 16597  005A46  0E0E               	movlw	14
 16598  005A48  617F               	cpfslt	isspace@c& (0+255),b
 16599  005A4A  D003               	goto	u10370
 16600                           
 16601                           ; BSR set to: 0
 16602  005A4C  0E09               	movlw	9
 16603  005A4E  617F               	cpfslt	isspace@c& (0+255),b
 16604  005A50  D002               	goto	l3260
 16605  005A52                     u10370:
 16606                           
 16607                           ; BSR set to: 0
 16608                           
 16609                           ; BSR set to: 0
 16610  005A52  0E00               	movlw	0
 16611  005A54  6F7E               	movwf	_isspace$6370& (0+255),b
 16612  005A56                     l3260:
 16613                           
 16614                           ; BSR set to: 0
 16615                           
 16616                           ; BSR set to: 0
 16617  005A56  C07E  F07D         	movff	_isspace$6370,??_isspace
 16618  005A5A  317D               	rrcf	??_isspace& (0+255),w,b
 16619  005A5C  0012               	return	
 16620  005A5E                     __end_of_isspace:
 16621                           	opt stack 0
 16622                           tosu	equ	0xFFF
 16623                           tosh	equ	0xFFE
 16624                           tosl	equ	0xFFD
 16625                           pclath	equ	0xFFA
 16626                           tblptru	equ	0xFF8
 16627                           tblptrh	equ	0xFF7
 16628                           tblptrl	equ	0xFF6
 16629                           tablat	equ	0xFF5
 16630                           prodh	equ	0xFF4
 16631                           prodl	equ	0xFF3
 16632                           intcon	equ	0xFF2
 16633                           intcon2	equ	0xFF1
 16634                           intcon3	equ	0xFF0
 16635                           indf0	equ	0xFEF
 16636                           postinc0	equ	0xFEE
 16637                           plusw0	equ	0xFEB
 16638                           fsr0h	equ	0xFEA
 16639                           fsr0l	equ	0xFE9
 16640                           wreg	equ	0xFE8
 16641                           indf1	equ	0xFE7
 16642                           postinc1	equ	0xFE6
 16643                           postdec1	equ	0xFE5
 16644                           plusw1	equ	0xFE3
 16645                           fsr1h	equ	0xFE2
 16646                           fsr1l	equ	0xFE1
 16647                           indf2	equ	0xFDF
 16648                           postinc2	equ	0xFDE
 16649                           postdec2	equ	0xFDD
 16650                           plusw2	equ	0xFDB
 16651                           fsr2h	equ	0xFDA
 16652                           fsr2l	equ	0xFD9
 16653                           status	equ	0xFD8
 16654                           
 16655 ;; *************** function _isalpha *****************
 16656 ;; Defined at:
 16657 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16658 ;; Parameters:    Size  Location     Type
 16659 ;;  c               1    wreg     unsigned char 
 16660 ;; Auto vars:     Size  Location     Type
 16661 ;;  c               1   34[BANK0 ] unsigned char 
 16662 ;; Return value:  Size  Location     Type
 16663 ;;		None               void
 16664 ;; Registers used:
 16665 ;;		wreg, status,2, status,0, cstack
 16666 ;; Tracked objects:
 16667 ;;		On entry : 0/0
 16668 ;;		On exit  : 0/0
 16669 ;;		Unchanged: 0/0
 16670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16672 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16673 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16674 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16675 ;;Total ram usage:        3 bytes
 16676 ;; Hardware stack levels used:    1
 16677 ;; Hardware stack levels required when called:   12
 16678 ;; This function calls:
 16679 ;;		_isupper
 16680 ;; This function is called by:
 16681 ;;		_strtol
 16682 ;; This function uses a non-reentrant model
 16683 ;;
 16684                           
 16685                           	psect	text67
 16686  005922                     __ptext67:
 16687                           	opt stack 0
 16688  005922                     _isalpha:
 16689                           	opt stack 12
 16690                           
 16691                           ; BSR set to: 0
 16692                           ;incstack = 0
 16693                           ;isalpha@c stored from wreg
 16694  005922  0100               	movlb	0	; () banked
 16695  005924  6F82               	movwf	isalpha@c& (0+255),b
 16696  005926  0E01               	movlw	1
 16697  005928  0100               	movlb	0	; () banked
 16698  00592A  6F81               	movwf	_isalpha$6367& (0+255),b
 16699                           
 16700                           ; BSR set to: 0
 16701  00592C  0E7B               	movlw	123
 16702  00592E  6182               	cpfslt	isalpha@c& (0+255),b
 16703  005930  D003               	goto	u10390
 16704                           
 16705                           ; BSR set to: 0
 16706  005932  0E61               	movlw	97
 16707  005934  6182               	cpfslt	isalpha@c& (0+255),b
 16708  005936  D008               	goto	l3255
 16709  005938                     u10390:
 16710                           
 16711                           ; BSR set to: 0
 16712                           
 16713                           ; BSR set to: 0
 16714  005938  5182               	movf	isalpha@c& (0+255),w,b
 16715  00593A  ECAE  F02D         	call	_isupper
 16716  00593E  B0D8               	btfsc	status,0,c
 16717  005940  D003               	goto	l3255
 16718  005942  0E00               	movlw	0
 16719  005944  0100               	movlb	0	; () banked
 16720  005946  6F81               	movwf	_isalpha$6367& (0+255),b
 16721  005948                     l3255:
 16722                           
 16723                           ; BSR set to: 0
 16724  005948  C081  F080         	movff	_isalpha$6367,??_isalpha
 16725  00594C  0100               	movlb	0	; () banked
 16726  00594E  3180               	rrcf	??_isalpha& (0+255),w,b
 16727  005950  0012               	return	
 16728  005952                     __end_of_isalpha:
 16729                           	opt stack 0
 16730                           tosu	equ	0xFFF
 16731                           tosh	equ	0xFFE
 16732                           tosl	equ	0xFFD
 16733                           pclath	equ	0xFFA
 16734                           tblptru	equ	0xFF8
 16735                           tblptrh	equ	0xFF7
 16736                           tblptrl	equ	0xFF6
 16737                           tablat	equ	0xFF5
 16738                           prodh	equ	0xFF4
 16739                           prodl	equ	0xFF3
 16740                           intcon	equ	0xFF2
 16741                           intcon2	equ	0xFF1
 16742                           intcon3	equ	0xFF0
 16743                           indf0	equ	0xFEF
 16744                           postinc0	equ	0xFEE
 16745                           plusw0	equ	0xFEB
 16746                           fsr0h	equ	0xFEA
 16747                           fsr0l	equ	0xFE9
 16748                           wreg	equ	0xFE8
 16749                           indf1	equ	0xFE7
 16750                           postinc1	equ	0xFE6
 16751                           postdec1	equ	0xFE5
 16752                           plusw1	equ	0xFE3
 16753                           fsr1h	equ	0xFE2
 16754                           fsr1l	equ	0xFE1
 16755                           indf2	equ	0xFDF
 16756                           postinc2	equ	0xFDE
 16757                           postdec2	equ	0xFDD
 16758                           plusw2	equ	0xFDB
 16759                           fsr2h	equ	0xFDA
 16760                           fsr2l	equ	0xFD9
 16761                           status	equ	0xFD8
 16762                           
 16763 ;; *************** function _isupper *****************
 16764 ;; Defined at:
 16765 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 16766 ;; Parameters:    Size  Location     Type
 16767 ;;  c               1    wreg     unsigned char 
 16768 ;; Auto vars:     Size  Location     Type
 16769 ;;  c               1   31[BANK0 ] unsigned char 
 16770 ;; Return value:  Size  Location     Type
 16771 ;;		None               void
 16772 ;; Registers used:
 16773 ;;		wreg, status,2, status,0
 16774 ;; Tracked objects:
 16775 ;;		On entry : 0/0
 16776 ;;		On exit  : 0/0
 16777 ;;		Unchanged: 0/0
 16778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16780 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16781 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16782 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16783 ;;Total ram usage:        3 bytes
 16784 ;; Hardware stack levels used:    1
 16785 ;; Hardware stack levels required when called:   11
 16786 ;; This function calls:
 16787 ;;		Nothing
 16788 ;; This function is called by:
 16789 ;;		_xtoi
 16790 ;;		_isalpha
 16791 ;; This function uses a non-reentrant model
 16792 ;;
 16793                           
 16794                           	psect	text68
 16795  005B5C                     __ptext68:
 16796                           	opt stack 0
 16797  005B5C                     _isupper:
 16798                           	opt stack 13
 16799                           
 16800                           ; BSR set to: 0
 16801                           ;incstack = 0
 16802                           ;isupper@c stored from wreg
 16803  005B5C  0100               	movlb	0	; () banked
 16804  005B5E  6F7F               	movwf	isupper@c& (0+255),b
 16805  005B60  0E00               	movlw	0
 16806  005B62  0100               	movlb	0	; () banked
 16807  005B64  6F7E               	movwf	_isupper$6373& (0+255),b
 16808                           
 16809                           ; BSR set to: 0
 16810  005B66  0E5B               	movlw	91
 16811  005B68  617F               	cpfslt	isupper@c& (0+255),b
 16812  005B6A  D005               	goto	l3265
 16813                           
 16814                           ; BSR set to: 0
 16815  005B6C  0E40               	movlw	64
 16816  005B6E  657F               	cpfsgt	isupper@c& (0+255),b
 16817  005B70  D002               	goto	l3265
 16818                           
 16819                           ; BSR set to: 0
 16820  005B72  0E01               	movlw	1
 16821  005B74  6F7E               	movwf	_isupper$6373& (0+255),b
 16822  005B76                     l3265:
 16823                           
 16824                           ; BSR set to: 0
 16825                           
 16826                           ; BSR set to: 0
 16827  005B76  C07E  F07D         	movff	_isupper$6373,??_isupper
 16828  005B7A  317D               	rrcf	??_isupper& (0+255),w,b
 16829  005B7C  0012               	return	
 16830  005B7E                     __end_of_isupper:
 16831                           	opt stack 0
 16832                           tosu	equ	0xFFF
 16833                           tosh	equ	0xFFE
 16834                           tosl	equ	0xFFD
 16835                           pclath	equ	0xFFA
 16836                           tblptru	equ	0xFF8
 16837                           tblptrh	equ	0xFF7
 16838                           tblptrl	equ	0xFF6
 16839                           tablat	equ	0xFF5
 16840                           prodh	equ	0xFF4
 16841                           prodl	equ	0xFF3
 16842                           intcon	equ	0xFF2
 16843                           intcon2	equ	0xFF1
 16844                           intcon3	equ	0xFF0
 16845                           indf0	equ	0xFEF
 16846                           postinc0	equ	0xFEE
 16847                           plusw0	equ	0xFEB
 16848                           fsr0h	equ	0xFEA
 16849                           fsr0l	equ	0xFE9
 16850                           wreg	equ	0xFE8
 16851                           indf1	equ	0xFE7
 16852                           postinc1	equ	0xFE6
 16853                           postdec1	equ	0xFE5
 16854                           plusw1	equ	0xFE3
 16855                           fsr1h	equ	0xFE2
 16856                           fsr1l	equ	0xFE1
 16857                           indf2	equ	0xFDF
 16858                           postinc2	equ	0xFDE
 16859                           postdec2	equ	0xFDD
 16860                           plusw2	equ	0xFDB
 16861                           fsr2h	equ	0xFDA
 16862                           fsr2l	equ	0xFD9
 16863                           status	equ	0xFD8
 16864                           
 16865 ;; *************** function _strcpy *****************
 16866 ;; Defined at:
 16867 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 16868 ;; Parameters:    Size  Location     Type
 16869 ;;  to              2   29[BANK0 ] PTR unsigned char 
 16870 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 16871 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 16872 ;;		 -> STR_23(20), STR_21(42), 
 16873 ;; Auto vars:     Size  Location     Type
 16874 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 16875 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 16876 ;; Return value:  Size  Location     Type
 16877 ;;                  2   29[BANK0 ] PTR unsigned char 
 16878 ;; Registers used:
 16879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16880 ;; Tracked objects:
 16881 ;;		On entry : 0/0
 16882 ;;		On exit  : 0/0
 16883 ;;		Unchanged: 0/0
 16884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16885 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16888 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16889 ;;Total ram usage:        6 bytes
 16890 ;; Hardware stack levels used:    1
 16891 ;; Hardware stack levels required when called:   11
 16892 ;; This function calls:
 16893 ;;		Nothing
 16894 ;; This function is called by:
 16895 ;;		_Terminal
 16896 ;;		_Term_MainSm
 16897 ;; This function uses a non-reentrant model
 16898 ;;
 16899                           
 16900                           	psect	text69
 16901  005890                     __ptext69:
 16902                           	opt stack 0
 16903  005890                     _strcpy:
 16904                           	opt stack 15
 16905                           
 16906                           ; BSR set to: 0
 16907                           ;incstack = 0
 16908  005890  C07D  F081         	movff	strcpy@to,strcpy@cp
 16909  005894  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 16910  005898  D005               	goto	l3157
 16911  00589A  0100               	movlb	0	; () banked
 16912  00589C  4B81               	infsnz	strcpy@cp& (0+255),f,b
 16913  00589E  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 16914  0058A0  4B7F               	infsnz	strcpy@from& (0+255),f,b
 16915  0058A2  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 16916  0058A4                     l3157:
 16917                           
 16918                           ; BSR set to: 0
 16919  0058A4  C07F  FFF6         	movff	strcpy@from,tblptrl
 16920  0058A8  C080  FFF7         	movff	strcpy@from+1,tblptrh
 16921  0058AC                     	if	0	;tblptru may be non-zero
 16922  0058AC                     	endif
 16923  0058AC                     	if	0	;tblptru may be non-zero
 16924  0058AC                     	endif
 16925  0058AC  C081  FFD9         	movff	strcpy@cp,fsr2l
 16926  0058B0  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 16927  0058B4  0008               	tblrd		*
 16928  0058B6  CFF5 FFDF          	movff	tablat,indf2
 16929  0058BA  50DF               	movf	indf2,w,c
 16930  0058BC  B4D8               	btfsc	status,2,c
 16931  0058BE  0012               	return	
 16932  0058C0  D7EC               	goto	l3158
 16933  0058C2                     __end_of_strcpy:
 16934                           	opt stack 0
 16935                           tosu	equ	0xFFF
 16936                           tosh	equ	0xFFE
 16937                           tosl	equ	0xFFD
 16938                           pclath	equ	0xFFA
 16939                           tblptru	equ	0xFF8
 16940                           tblptrh	equ	0xFF7
 16941                           tblptrl	equ	0xFF6
 16942                           tablat	equ	0xFF5
 16943                           prodh	equ	0xFF4
 16944                           prodl	equ	0xFF3
 16945                           intcon	equ	0xFF2
 16946                           intcon2	equ	0xFF1
 16947                           intcon3	equ	0xFF0
 16948                           indf0	equ	0xFEF
 16949                           postinc0	equ	0xFEE
 16950                           plusw0	equ	0xFEB
 16951                           fsr0h	equ	0xFEA
 16952                           fsr0l	equ	0xFE9
 16953                           wreg	equ	0xFE8
 16954                           indf1	equ	0xFE7
 16955                           postinc1	equ	0xFE6
 16956                           postdec1	equ	0xFE5
 16957                           plusw1	equ	0xFE3
 16958                           fsr1h	equ	0xFE2
 16959                           fsr1l	equ	0xFE1
 16960                           indf2	equ	0xFDF
 16961                           postinc2	equ	0xFDE
 16962                           postdec2	equ	0xFDD
 16963                           plusw2	equ	0xFDB
 16964                           fsr2h	equ	0xFDA
 16965                           fsr2l	equ	0xFD9
 16966                           status	equ	0xFD8
 16967                           
 16968 ;; *************** function _putUSBUSART *****************
 16969 ;; Defined at:
 16970 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 16971 ;; Parameters:    Size  Location     Type
 16972 ;;  data            2   35[BANK0 ] PTR unsigned char 
 16973 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 16974 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 16975 ;;		 -> RxBuffer(400), 
 16976 ;;  length          1   37[BANK0 ] unsigned char 
 16977 ;; Auto vars:     Size  Location     Type
 16978 ;;		None
 16979 ;; Return value:  Size  Location     Type
 16980 ;;                  1    wreg      void 
 16981 ;; Registers used:
 16982 ;;		wreg, status,2, status,0
 16983 ;; Tracked objects:
 16984 ;;		On entry : 0/0
 16985 ;;		On exit  : 0/0
 16986 ;;		Unchanged: 0/0
 16987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16988 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16991 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16992 ;;Total ram usage:        3 bytes
 16993 ;; Hardware stack levels used:    1
 16994 ;; Hardware stack levels required when called:   11
 16995 ;; This function calls:
 16996 ;;		Nothing
 16997 ;; This function is called by:
 16998 ;;		_Terminal
 16999 ;;		_Term_MainSm
 17000 ;;		_GsmGprsTerminal
 17001 ;; This function uses a non-reentrant model
 17002 ;;
 17003                           
 17004                           	psect	text70
 17005  005B7E                     __ptext70:
 17006                           	opt stack 0
 17007  005B7E                     _putUSBUSART:
 17008                           	opt stack 15
 17009                           
 17010                           ;usb_device_cdc.c: 584: ;
 17011                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17012                           
 17013                           ;incstack = 0
 17014  005B7E  0100               	movlb	0	; () banked
 17015  005B80  51C1               	movf	_cdc_trf_state& (0+255),w,b
 17016  005B82  A4D8               	btfss	status,2,c
 17017  005B84  0012               	return	
 17018                           
 17019                           ; BSR set to: 0
 17020                           ;usb_device_cdc.c: 586: {
 17021                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17022  005B86  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17023  005B8A  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17024                           
 17025                           ; BSR set to: 0
 17026  005B8E  C085  F0C0         	movff	putUSBUSART@length,_cdc_tx_len
 17027                           
 17028                           ; BSR set to: 0
 17029  005B92  0E01               	movlw	1
 17030  005B94  0101               	movlb	1	; () banked
 17031  005B96  6FE2               	movwf	_cdc_mem_type& (0+255),b
 17032                           
 17033                           ; BSR set to: 1
 17034  005B98  0E01               	movlw	1
 17035  005B9A  0100               	movlb	0	; () banked
 17036  005B9C  6FC1               	movwf	_cdc_trf_state& (0+255),b
 17037  005B9E  0012               	return	
 17038  005BA0                     __end_of_putUSBUSART:
 17039                           	opt stack 0
 17040                           tosu	equ	0xFFF
 17041                           tosh	equ	0xFFE
 17042                           tosl	equ	0xFFD
 17043                           pclath	equ	0xFFA
 17044                           tblptru	equ	0xFF8
 17045                           tblptrh	equ	0xFF7
 17046                           tblptrl	equ	0xFF6
 17047                           tablat	equ	0xFF5
 17048                           prodh	equ	0xFF4
 17049                           prodl	equ	0xFF3
 17050                           intcon	equ	0xFF2
 17051                           intcon2	equ	0xFF1
 17052                           intcon3	equ	0xFF0
 17053                           indf0	equ	0xFEF
 17054                           postinc0	equ	0xFEE
 17055                           plusw0	equ	0xFEB
 17056                           fsr0h	equ	0xFEA
 17057                           fsr0l	equ	0xFE9
 17058                           wreg	equ	0xFE8
 17059                           indf1	equ	0xFE7
 17060                           postinc1	equ	0xFE6
 17061                           postdec1	equ	0xFE5
 17062                           plusw1	equ	0xFE3
 17063                           fsr1h	equ	0xFE2
 17064                           fsr1l	equ	0xFE1
 17065                           indf2	equ	0xFDF
 17066                           postinc2	equ	0xFDE
 17067                           postdec2	equ	0xFDD
 17068                           plusw2	equ	0xFDB
 17069                           fsr2h	equ	0xFDA
 17070                           fsr2l	equ	0xFD9
 17071                           status	equ	0xFD8
 17072                           
 17073 ;; *************** function _itoa *****************
 17074 ;; Defined at:
 17075 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17076 ;; Parameters:    Size  Location     Type
 17077 ;;  buf             2   45[BANK0 ] PTR unsigned char 
 17078 ;;		 -> Terminal@Payload(80), 
 17079 ;;  val             2   47[BANK0 ] int 
 17080 ;;  base            2   49[BANK0 ] int 
 17081 ;; Auto vars:     Size  Location     Type
 17082 ;;  cp              2   51[BANK0 ] PTR unsigned char 
 17083 ;;		 -> Terminal@Payload(80), 
 17084 ;; Return value:  Size  Location     Type
 17085 ;;                  2   45[BANK0 ] PTR unsigned char 
 17086 ;; Registers used:
 17087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17088 ;; Tracked objects:
 17089 ;;		On entry : 0/0
 17090 ;;		On exit  : 0/0
 17091 ;;		Unchanged: 0/0
 17092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17093 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17094 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17096 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17097 ;;Total ram usage:        8 bytes
 17098 ;; Hardware stack levels used:    1
 17099 ;; Hardware stack levels required when called:   13
 17100 ;; This function calls:
 17101 ;;		_utoa
 17102 ;; This function is called by:
 17103 ;;		_Terminal
 17104 ;; This function uses a non-reentrant model
 17105 ;;
 17106                           
 17107                           	psect	text71
 17108  0054CA                     __ptext71:
 17109                           	opt stack 0
 17110  0054CA                     _itoa:
 17111                           	opt stack 12
 17112                           
 17113                           ; BSR set to: 0
 17114                           ;incstack = 0
 17115  0054CA  C08D  F093         	movff	itoa@buf,itoa@cp
 17116  0054CE  C08E  F094         	movff	itoa@buf+1,itoa@cp+1
 17117  0054D2  0100               	movlb	0	; () banked
 17118  0054D4  AF90               	btfss	(itoa@val+1)& (0+255),7,b
 17119  0054D6  D00C               	goto	l2905
 17120                           
 17121                           ; BSR set to: 0
 17122  0054D8  C08D  FFD9         	movff	itoa@buf,fsr2l
 17123  0054DC  C08E  FFDA         	movff	itoa@buf+1,fsr2h
 17124  0054E0  0E2D               	movlw	45
 17125  0054E2  6EDF               	movwf	indf2,c
 17126                           
 17127                           ; BSR set to: 0
 17128  0054E4  4B8D               	infsnz	itoa@buf& (0+255),f,b
 17129  0054E6  2B8E               	incf	(itoa@buf+1)& (0+255),f,b
 17130                           
 17131                           ; BSR set to: 0
 17132  0054E8  6D8F               	negf	itoa@val& (0+255),b
 17133  0054EA  1F90               	comf	(itoa@val+1)& (0+255),f,b
 17134  0054EC  B0D8               	btfsc	status,0,c
 17135  0054EE  2B90               	incf	(itoa@val+1)& (0+255),f,b
 17136  0054F0                     l2905:
 17137                           
 17138                           ; BSR set to: 0
 17139                           
 17140                           ; BSR set to: 0
 17141  0054F0  C08D  F084         	movff	itoa@buf,utoa@buf
 17142  0054F4  C08E  F085         	movff	itoa@buf+1,utoa@buf+1
 17143  0054F8  C08F  F086         	movff	itoa@val,utoa@val
 17144  0054FC  C090  F087         	movff	itoa@val+1,utoa@val+1
 17145  005500  C091  F088         	movff	itoa@base,utoa@base
 17146  005504  C092  F089         	movff	itoa@base+1,utoa@base+1
 17147  005508  EC82  F020         	call	_utoa	;wreg free
 17148  00550C  0012               	return	
 17149  00550E                     __end_of_itoa:
 17150                           	opt stack 0
 17151                           tosu	equ	0xFFF
 17152                           tosh	equ	0xFFE
 17153                           tosl	equ	0xFFD
 17154                           pclath	equ	0xFFA
 17155                           tblptru	equ	0xFF8
 17156                           tblptrh	equ	0xFF7
 17157                           tblptrl	equ	0xFF6
 17158                           tablat	equ	0xFF5
 17159                           prodh	equ	0xFF4
 17160                           prodl	equ	0xFF3
 17161                           intcon	equ	0xFF2
 17162                           intcon2	equ	0xFF1
 17163                           intcon3	equ	0xFF0
 17164                           indf0	equ	0xFEF
 17165                           postinc0	equ	0xFEE
 17166                           plusw0	equ	0xFEB
 17167                           fsr0h	equ	0xFEA
 17168                           fsr0l	equ	0xFE9
 17169                           wreg	equ	0xFE8
 17170                           indf1	equ	0xFE7
 17171                           postinc1	equ	0xFE6
 17172                           postdec1	equ	0xFE5
 17173                           plusw1	equ	0xFE3
 17174                           fsr1h	equ	0xFE2
 17175                           fsr1l	equ	0xFE1
 17176                           indf2	equ	0xFDF
 17177                           postinc2	equ	0xFDE
 17178                           postdec2	equ	0xFDD
 17179                           plusw2	equ	0xFDB
 17180                           fsr2h	equ	0xFDA
 17181                           fsr2l	equ	0xFD9
 17182                           status	equ	0xFD8
 17183                           
 17184 ;; *************** function _utoa *****************
 17185 ;; Defined at:
 17186 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17187 ;; Parameters:    Size  Location     Type
 17188 ;;  buf             2   36[BANK0 ] PTR unsigned char 
 17189 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17190 ;;  val             2   38[BANK0 ] unsigned int 
 17191 ;;  base            2   40[BANK0 ] int 
 17192 ;; Auto vars:     Size  Location     Type
 17193 ;;  v               2   42[BANK0 ] unsigned int 
 17194 ;;  c               1   44[BANK0 ] unsigned char 
 17195 ;; Return value:  Size  Location     Type
 17196 ;;                  2   36[BANK0 ] PTR unsigned char 
 17197 ;; Registers used:
 17198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17199 ;; Tracked objects:
 17200 ;;		On entry : 0/0
 17201 ;;		On exit  : 0/0
 17202 ;;		Unchanged: 0/0
 17203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17204 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17205 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17207 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17208 ;;Total ram usage:        9 bytes
 17209 ;; Hardware stack levels used:    1
 17210 ;; Hardware stack levels required when called:   12
 17211 ;; This function calls:
 17212 ;;		___lwdiv
 17213 ;;		___lwmod
 17214 ;; This function is called by:
 17215 ;;		_Term_MainSm
 17216 ;;		_itoa
 17217 ;; This function uses a non-reentrant model
 17218 ;;
 17219                           
 17220                           	psect	text72
 17221  004104                     __ptext72:
 17222                           	opt stack 0
 17223  004104                     _utoa:
 17224                           	opt stack 14
 17225                           
 17226                           ;incstack = 0
 17227  004104  C086  F08A         	movff	utoa@val,utoa@v
 17228  004108  C087  F08B         	movff	utoa@val+1,utoa@v+1
 17229  00410C  C08A  F07D         	movff	utoa@v,___lwdiv@dividend
 17230  004110  C08B  F07E         	movff	utoa@v+1,___lwdiv@dividend+1
 17231  004114  C088  F07F         	movff	utoa@base,___lwdiv@divisor
 17232  004118  C089  F080         	movff	utoa@base+1,___lwdiv@divisor+1
 17233  00411C  ECC8  F028         	call	___lwdiv	;wreg free
 17234  004120  C07D  F08A         	movff	?___lwdiv,utoa@v
 17235  004124  C07E  F08B         	movff	?___lwdiv+1,utoa@v+1
 17236  004128  0100               	movlb	0	; () banked
 17237  00412A  4B84               	infsnz	utoa@buf& (0+255),f,b
 17238  00412C  2B85               	incf	(utoa@buf+1)& (0+255),f,b
 17239                           
 17240                           ; BSR set to: 0
 17241  00412E  518A               	movf	utoa@v& (0+255),w,b
 17242  004130  118B               	iorwf	(utoa@v+1)& (0+255),w,b
 17243  004132  A4D8               	btfss	status,2,c
 17244  004134  D7EB               	goto	l2909
 17245                           
 17246                           ; BSR set to: 0
 17247                           
 17248                           ; BSR set to: 0
 17249  004136  C084  FFD9         	movff	utoa@buf,fsr2l
 17250  00413A  C085  FFDA         	movff	utoa@buf+1,fsr2h
 17251  00413E  0E00               	movlw	0
 17252  004140  6EDF               	movwf	indf2,c
 17253                           
 17254                           ; BSR set to: 0
 17255  004142  0784               	decf	utoa@buf& (0+255),f,b
 17256  004144  A0D8               	btfss	status,0,c
 17257  004146  0785               	decf	(utoa@buf+1)& (0+255),f,b
 17258  004148                     
 17259                           ; BSR set to: 0
 17260                           
 17261                           ; BSR set to: 0
 17262  004148  C086  F07D         	movff	utoa@val,___lwmod@dividend
 17263  00414C  C087  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17264  004150  C088  F07F         	movff	utoa@base,___lwmod@divisor
 17265  004154  C089  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17266  004158  EC87  F02A         	call	___lwmod	;wreg free
 17267  00415C  0100               	movlb	0	; () banked
 17268  00415E  517D               	movf	?___lwmod& (0+255),w,b
 17269  004160  6F8C               	movwf	utoa@c& (0+255),b
 17270                           
 17271                           ; BSR set to: 0
 17272  004162  C086  F07D         	movff	utoa@val,___lwdiv@dividend
 17273  004166  C087  F07E         	movff	utoa@val+1,___lwdiv@dividend+1
 17274  00416A  C088  F07F         	movff	utoa@base,___lwdiv@divisor
 17275  00416E  C089  F080         	movff	utoa@base+1,___lwdiv@divisor+1
 17276  004172  ECC8  F028         	call	___lwdiv	;wreg free
 17277  004176  C07D  F086         	movff	?___lwdiv,utoa@val
 17278  00417A  C07E  F087         	movff	?___lwdiv+1,utoa@val+1
 17279  00417E  0E09               	movlw	9
 17280  004180  0100               	movlb	0	; () banked
 17281  004182  658C               	cpfsgt	utoa@c& (0+255),b
 17282  004184  D002               	goto	l2912
 17283                           
 17284                           ; BSR set to: 0
 17285  004186  0E07               	movlw	7
 17286  004188  278C               	addwf	utoa@c& (0+255),f,b
 17287  00418A                     l2912:
 17288                           
 17289                           ; BSR set to: 0
 17290  00418A  0E30               	movlw	48
 17291  00418C  278C               	addwf	utoa@c& (0+255),f,b
 17292                           
 17293                           ; BSR set to: 0
 17294  00418E  C084  FFD9         	movff	utoa@buf,fsr2l
 17295  004192  C085  FFDA         	movff	utoa@buf+1,fsr2h
 17296  004196  C08C  FFDF         	movff	utoa@c,indf2
 17297                           
 17298                           ; BSR set to: 0
 17299  00419A  0784               	decf	utoa@buf& (0+255),f,b
 17300  00419C  A0D8               	btfss	status,0,c
 17301  00419E  0785               	decf	(utoa@buf+1)& (0+255),f,b
 17302                           
 17303                           ; BSR set to: 0
 17304  0041A0  5186               	movf	utoa@val& (0+255),w,b
 17305  0041A2  1187               	iorwf	(utoa@val+1)& (0+255),w,b
 17306  0041A4  A4D8               	btfss	status,2,c
 17307  0041A6  D7D0               	goto	l2911
 17308                           
 17309                           ; BSR set to: 0
 17310                           ;	Return value of _utoa is never used
 17311                           
 17312                           ; BSR set to: 0
 17313  0041A8  4B84               	infsnz	utoa@buf& (0+255),f,b
 17314  0041AA  2B85               	incf	(utoa@buf+1)& (0+255),f,b
 17315  0041AC  0012               	return	
 17316  0041AE                     __end_of_utoa:
 17317                           	opt stack 0
 17318                           tosu	equ	0xFFF
 17319                           tosh	equ	0xFFE
 17320                           tosl	equ	0xFFD
 17321                           pclath	equ	0xFFA
 17322                           tblptru	equ	0xFF8
 17323                           tblptrh	equ	0xFF7
 17324                           tblptrl	equ	0xFF6
 17325                           tablat	equ	0xFF5
 17326                           prodh	equ	0xFF4
 17327                           prodl	equ	0xFF3
 17328                           intcon	equ	0xFF2
 17329                           intcon2	equ	0xFF1
 17330                           intcon3	equ	0xFF0
 17331                           indf0	equ	0xFEF
 17332                           postinc0	equ	0xFEE
 17333                           plusw0	equ	0xFEB
 17334                           fsr0h	equ	0xFEA
 17335                           fsr0l	equ	0xFE9
 17336                           wreg	equ	0xFE8
 17337                           indf1	equ	0xFE7
 17338                           postinc1	equ	0xFE6
 17339                           postdec1	equ	0xFE5
 17340                           plusw1	equ	0xFE3
 17341                           fsr1h	equ	0xFE2
 17342                           fsr1l	equ	0xFE1
 17343                           indf2	equ	0xFDF
 17344                           postinc2	equ	0xFDE
 17345                           postdec2	equ	0xFDD
 17346                           plusw2	equ	0xFDB
 17347                           fsr2h	equ	0xFDA
 17348                           fsr2l	equ	0xFD9
 17349                           status	equ	0xFD8
 17350                           
 17351 ;; *************** function ___lwmod *****************
 17352 ;; Defined at:
 17353 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17354 ;; Parameters:    Size  Location     Type
 17355 ;;  dividend        2   29[BANK0 ] unsigned int 
 17356 ;;  divisor         2   31[BANK0 ] unsigned int 
 17357 ;; Auto vars:     Size  Location     Type
 17358 ;;  counter         1   33[BANK0 ] unsigned char 
 17359 ;; Return value:  Size  Location     Type
 17360 ;;                  2   29[BANK0 ] unsigned int 
 17361 ;; Registers used:
 17362 ;;		wreg, status,2, status,0
 17363 ;; Tracked objects:
 17364 ;;		On entry : 0/0
 17365 ;;		On exit  : 0/0
 17366 ;;		Unchanged: 0/0
 17367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17368 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17371 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17372 ;;Total ram usage:        5 bytes
 17373 ;; Hardware stack levels used:    1
 17374 ;; Hardware stack levels required when called:   11
 17375 ;; This function calls:
 17376 ;;		Nothing
 17377 ;; This function is called by:
 17378 ;;		_utoa
 17379 ;; This function uses a non-reentrant model
 17380 ;;
 17381                           
 17382                           	psect	text73
 17383  00550E                     __ptext73:
 17384                           	opt stack 0
 17385  00550E                     ___lwmod:
 17386                           	opt stack 14
 17387                           
 17388                           ; BSR set to: 0
 17389                           ;incstack = 0
 17390  00550E  0100               	movlb	0	; () banked
 17391  005510  517F               	movf	___lwmod@divisor& (0+255),w,b
 17392  005512  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17393  005514  B4D8               	btfsc	status,2,c
 17394  005516  D018               	goto	l3007
 17395                           
 17396                           ; BSR set to: 0
 17397  005518  0E01               	movlw	1
 17398  00551A  6F81               	movwf	___lwmod@counter& (0+255),b
 17399  00551C  D004               	goto	l3002
 17400  00551E                     
 17401                           ; BSR set to: 0
 17402                           
 17403                           ; BSR set to: 0
 17404  00551E  90D8               	bcf	status,0,c
 17405  005520  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17406  005522  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17407  005524  2B81               	incf	___lwmod@counter& (0+255),f,b
 17408  005526                     l3002:
 17409                           
 17410                           ; BSR set to: 0
 17411                           
 17412                           ; BSR set to: 0
 17413  005526  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17414  005528  D7FA               	goto	l3003
 17415  00552A                     u10220:
 17416                           
 17417                           ; BSR set to: 0
 17418                           
 17419                           ; BSR set to: 0
 17420                           
 17421                           ; BSR set to: 0
 17422  00552A  517F               	movf	___lwmod@divisor& (0+255),w,b
 17423  00552C  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17424  00552E  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17425  005530  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17426  005532  A0D8               	btfss	status,0,c
 17427  005534  D004               	goto	l3006
 17428                           
 17429                           ; BSR set to: 0
 17430  005536  517F               	movf	___lwmod@divisor& (0+255),w,b
 17431  005538  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17432  00553A  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17433  00553C  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17434  00553E                     l3006:
 17435                           
 17436                           ; BSR set to: 0
 17437                           
 17438                           ; BSR set to: 0
 17439  00553E  90D8               	bcf	status,0,c
 17440  005540  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17441  005542  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17442                           
 17443                           ; BSR set to: 0
 17444  005544  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17445  005546  D7F1               	goto	u10220
 17446  005548                     l3007:
 17447                           
 17448                           ; BSR set to: 0
 17449                           
 17450                           ; BSR set to: 0
 17451  005548  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17452  00554C  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17453                           
 17454                           ; BSR set to: 0
 17455  005550  0012               	return		;funcret
 17456  005552                     __end_of___lwmod:
 17457                           	opt stack 0
 17458                           tosu	equ	0xFFF
 17459                           tosh	equ	0xFFE
 17460                           tosl	equ	0xFFD
 17461                           pclath	equ	0xFFA
 17462                           tblptru	equ	0xFF8
 17463                           tblptrh	equ	0xFF7
 17464                           tblptrl	equ	0xFF6
 17465                           tablat	equ	0xFF5
 17466                           prodh	equ	0xFF4
 17467                           prodl	equ	0xFF3
 17468                           intcon	equ	0xFF2
 17469                           intcon2	equ	0xFF1
 17470                           intcon3	equ	0xFF0
 17471                           indf0	equ	0xFEF
 17472                           postinc0	equ	0xFEE
 17473                           plusw0	equ	0xFEB
 17474                           fsr0h	equ	0xFEA
 17475                           fsr0l	equ	0xFE9
 17476                           wreg	equ	0xFE8
 17477                           indf1	equ	0xFE7
 17478                           postinc1	equ	0xFE6
 17479                           postdec1	equ	0xFE5
 17480                           plusw1	equ	0xFE3
 17481                           fsr1h	equ	0xFE2
 17482                           fsr1l	equ	0xFE1
 17483                           indf2	equ	0xFDF
 17484                           postinc2	equ	0xFDE
 17485                           postdec2	equ	0xFDD
 17486                           plusw2	equ	0xFDB
 17487                           fsr2h	equ	0xFDA
 17488                           fsr2l	equ	0xFD9
 17489                           status	equ	0xFD8
 17490                           
 17491 ;; *************** function _getsUSBUSART *****************
 17492 ;; Defined at:
 17493 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17494 ;; Parameters:    Size  Location     Type
 17495 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17496 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17497 ;;  len             1   38[BANK0 ] unsigned char 
 17498 ;; Auto vars:     Size  Location     Type
 17499 ;;		None
 17500 ;; Return value:  Size  Location     Type
 17501 ;;                  1    wreg      unsigned char 
 17502 ;; Registers used:
 17503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17504 ;; Tracked objects:
 17505 ;;		On entry : 0/0
 17506 ;;		On exit  : 0/0
 17507 ;;		Unchanged: 0/0
 17508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17509 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17512 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17513 ;;Total ram usage:        4 bytes
 17514 ;; Hardware stack levels used:    1
 17515 ;; Hardware stack levels required when called:   12
 17516 ;; This function calls:
 17517 ;;		_USBTransferOnePacket
 17518 ;; This function is called by:
 17519 ;;		_Terminal
 17520 ;;		_GsmGprsTerminal
 17521 ;; This function uses a non-reentrant model
 17522 ;;
 17523                           
 17524                           	psect	text74
 17525  00456A                     __ptext74:
 17526                           	opt stack 0
 17527  00456A                     _getsUSBUSART:
 17528                           	opt stack 13
 17529                           
 17530                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17531                           
 17532                           ; BSR set to: 0
 17533                           ;incstack = 0
 17534  00456A  0E00               	movlw	0
 17535  00456C  0100               	movlb	0	; () banked
 17536  00456E  6FC2               	movwf	_cdc_rx_len& (0+255),b
 17537                           
 17538                           ; BSR set to: 0
 17539                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17540  004570  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17541  004572  11B9               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17542  004574  B4D8               	btfsc	status,2,c
 17543  004576  D006               	goto	u10730
 17544                           
 17545                           ; BSR set to: 0
 17546  004578  C0B8  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17547  00457C  C0B9  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17548  004580  BEDF               	btfsc	indf2,7,c
 17549  004582  D03B               	goto	l1903
 17550  004584                     u10730:
 17551                           
 17552                           ; BSR set to: 0
 17553                           ;usb_device_cdc.c: 493: {
 17554                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17555                           
 17556                           ; BSR set to: 0
 17557  004584  EE20 F001          	lfsr	2,1
 17558  004588  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17559  00458A  26D9               	addwf	fsr2l,f,c
 17560  00458C  51B9               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17561  00458E  22DA               	addwfc	fsr2h,f,c
 17562  004590  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17563  004592  5CDE               	subwf	postinc2,w,c
 17564  004594  B0D8               	btfsc	status,0,c
 17565  004596  D008               	goto	l1906
 17566                           
 17567                           ; BSR set to: 0
 17568                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17569  004598  EE20 F001          	lfsr	2,1
 17570  00459C  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17571  00459E  26D9               	addwf	fsr2l,f,c
 17572  0045A0  51B9               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17573  0045A2  22DA               	addwfc	fsr2h,f,c
 17574  0045A4  50DF               	movf	indf2,w,c
 17575  0045A6  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17576  0045A8                     l1906:
 17577                           
 17578                           ; BSR set to: 0
 17579                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17580                           
 17581                           ; BSR set to: 0
 17582  0045A8  0E00               	movlw	0
 17583  0045AA  6FC2               	movwf	_cdc_rx_len& (0+255),b
 17584  0045AC  D013               	goto	l1907
 17585  0045AE                     
 17586                           ; BSR set to: 0
 17587                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17588                           
 17589                           ; BSR set to: 0
 17590  0045AE  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17591  0045B0  0D01               	mullw	1
 17592  0045B2  0E50               	movlw	low _cdc_data_rx
 17593  0045B4  24F3               	addwf	prodl,w,c
 17594  0045B6  6ED9               	movwf	fsr2l,c
 17595  0045B8  0E05               	movlw	high _cdc_data_rx
 17596  0045BA  20F4               	addwfc	prodh,w,c
 17597  0045BC  6EDA               	movwf	fsr2h,c
 17598  0045BE  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17599  0045C0  0D01               	mullw	1
 17600  0045C2  50F3               	movf	prodl,w,c
 17601  0045C4  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17602  0045C6  6EE1               	movwf	fsr1l,c
 17603  0045C8  50F4               	movf	prodh,w,c
 17604  0045CA  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17605  0045CC  6EE2               	movwf	fsr1h,c
 17606  0045CE  CFDF FFE7          	movff	indf2,indf1
 17607                           
 17608                           ; BSR set to: 0
 17609  0045D2  2BC2               	incf	_cdc_rx_len& (0+255),f,b
 17610  0045D4                     l1907:
 17611                           
 17612                           ; BSR set to: 0
 17613                           
 17614                           ; BSR set to: 0
 17615  0045D4  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17616  0045D6  5DC2               	subwf	_cdc_rx_len& (0+255),w,b
 17617  0045D8  A0D8               	btfss	status,0,c
 17618  0045DA  D7E9               	goto	l1908
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17622                           
 17623                           ; BSR set to: 0
 17624  0045DC  0E00               	movlw	0
 17625  0045DE  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17626  0045E0  0E50               	movlw	low _cdc_data_rx
 17627  0045E2  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17628  0045E4  0E05               	movlw	high _cdc_data_rx
 17629  0045E6  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17630  0045E8  0E40               	movlw	64
 17631  0045EA  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17632  0045EC  0E02               	movlw	2
 17633  0045EE  EC1C  F01F         	call	_USBTransferOnePacket
 17634  0045F2  C07D  F0B8         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17635  0045F6  C07E  F0B9         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17636  0045FA                     l1903:
 17637                           
 17638                           ;usb_device_cdc.c: 513: }
 17639                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17640  0045FA  0100               	movlb	0	; () banked
 17641  0045FC  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17642  0045FE  0012               	return	
 17643  004600                     __end_of_getsUSBUSART:
 17644                           	opt stack 0
 17645                           tosu	equ	0xFFF
 17646                           tosh	equ	0xFFE
 17647                           tosl	equ	0xFFD
 17648                           pclath	equ	0xFFA
 17649                           tblptru	equ	0xFF8
 17650                           tblptrh	equ	0xFF7
 17651                           tblptrl	equ	0xFF6
 17652                           tablat	equ	0xFF5
 17653                           prodh	equ	0xFF4
 17654                           prodl	equ	0xFF3
 17655                           intcon	equ	0xFF2
 17656                           intcon2	equ	0xFF1
 17657                           intcon3	equ	0xFF0
 17658                           indf0	equ	0xFEF
 17659                           postinc0	equ	0xFEE
 17660                           plusw0	equ	0xFEB
 17661                           fsr0h	equ	0xFEA
 17662                           fsr0l	equ	0xFE9
 17663                           wreg	equ	0xFE8
 17664                           indf1	equ	0xFE7
 17665                           postinc1	equ	0xFE6
 17666                           postdec1	equ	0xFE5
 17667                           plusw1	equ	0xFE3
 17668                           fsr1h	equ	0xFE2
 17669                           fsr1l	equ	0xFE1
 17670                           indf2	equ	0xFDF
 17671                           postinc2	equ	0xFDE
 17672                           postdec2	equ	0xFDD
 17673                           plusw2	equ	0xFDB
 17674                           fsr2h	equ	0xFDA
 17675                           fsr2l	equ	0xFD9
 17676                           status	equ	0xFD8
 17677                           
 17678 ;; *************** function _USBTransferOnePacket *****************
 17679 ;; Defined at:
 17680 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;  ep              1    wreg     unsigned char 
 17683 ;;  dir             1   29[BANK0 ] unsigned char 
 17684 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17685 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17686 ;;  len             1   32[BANK0 ] unsigned char 
 17687 ;; Auto vars:     Size  Location     Type
 17688 ;;  ep              1   33[BANK0 ] unsigned char 
 17689 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17690 ;;		 -> NULL(0), BDT(48), 
 17691 ;; Return value:  Size  Location     Type
 17692 ;;                  2   29[BANK0 ] PTR void 
 17693 ;; Registers used:
 17694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17695 ;; Tracked objects:
 17696 ;;		On entry : 0/0
 17697 ;;		On exit  : 0/0
 17698 ;;		Unchanged: 0/0
 17699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17700 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17701 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17703 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17704 ;;Total ram usage:        7 bytes
 17705 ;; Hardware stack levels used:    1
 17706 ;; Hardware stack levels required when called:   11
 17707 ;; This function calls:
 17708 ;;		Nothing
 17709 ;; This function is called by:
 17710 ;;		_CDCInitEP
 17711 ;;		_getsUSBUSART
 17712 ;;		_CDCTxService
 17713 ;;		_USBCDCEventHandler
 17714 ;; This function uses a non-reentrant model
 17715 ;;
 17716                           
 17717                           	psect	text75
 17718  003E38                     __ptext75:
 17719                           	opt stack 0
 17720  003E38                     _USBTransferOnePacket:
 17721                           	opt stack 13
 17722                           
 17723                           ; BSR set to: 0
 17724                           ;incstack = 0
 17725                           ;USBTransferOnePacket@ep stored from wreg
 17726  003E38  0100               	movlb	0	; () banked
 17727  003E3A  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17728                           
 17729                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17730                           ;usb_device.c: 1018: if(dir != 0)
 17731  003E3C  0100               	movlb	0	; () banked
 17732  003E3E  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17733  003E40  B4D8               	btfsc	status,2,c
 17734  003E42  D007               	goto	l1627
 17735                           
 17736                           ; BSR set to: 0
 17737                           ;usb_device.c: 1019: {
 17738                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17739  003E44  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17740  003E46  0D02               	mullw	2
 17741  003E48  0EB2               	movlw	low _pBDTEntryIn
 17742  003E4A  24F3               	addwf	prodl,w,c
 17743  003E4C  6ED9               	movwf	fsr2l,c
 17744  003E4E  0E00               	movlw	high _pBDTEntryIn
 17745  003E50  D006               	goto	L17
 17746  003E52                     l1627:
 17747                           
 17748                           ; BSR set to: 0
 17749                           ;usb_device.c: 1023: else
 17750                           ;usb_device.c: 1024: {
 17751                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17752                           
 17753                           ; BSR set to: 0
 17754  003E52  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17755  003E54  0D02               	mullw	2
 17756  003E56  0E0E               	movlw	low _pBDTEntryOut
 17757  003E58  24F3               	addwf	prodl,w,c
 17758  003E5A  6ED9               	movwf	fsr2l,c
 17759  003E5C  0E03               	movlw	high _pBDTEntryOut
 17760  003E5E                     L17:
 17761  003E5E  20F4               	addwfc	prodh,w,c
 17762  003E60  6EDA               	movwf	fsr2h,c
 17763  003E62  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17764  003E66  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17765                           
 17766                           ; BSR set to: 0
 17767                           ;usb_device.c: 1027: }
 17768                           ;usb_device.c: 1031: if(handle == 0)
 17769                           
 17770                           ; BSR set to: 0
 17771  003E6A  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17772  003E6C  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17773  003E6E  A4D8               	btfss	status,2,c
 17774  003E70  D005               	goto	l1629
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;usb_device.c: 1032: {
 17778                           ;usb_device.c: 1033: return 0;
 17779  003E72  0E00               	movlw	0
 17780  003E74  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 17781  003E76  0E00               	movlw	0
 17782  003E78  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 17783                           
 17784                           ; BSR set to: 0
 17785  003E7A  0012               	return	
 17786  003E7C                     l1629:
 17787                           
 17788                           ; BSR set to: 0
 17789                           ;usb_device.c: 1034: }
 17790                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 17791                           
 17792                           ; BSR set to: 0
 17793  003E7C  EE20 F002          	lfsr	2,2
 17794  003E80  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17795  003E82  26D9               	addwf	fsr2l,f,c
 17796  003E84  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17797  003E86  22DA               	addwfc	fsr2h,f,c
 17798  003E88  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 17799  003E8C  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 17800                           
 17801                           ;usb_device.c: 1048: handle->CNT = len;
 17802  003E90  EE20 F001          	lfsr	2,1
 17803  003E94  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17804  003E96  26D9               	addwf	fsr2l,f,c
 17805  003E98  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17806  003E9A  22DA               	addwfc	fsr2h,f,c
 17807  003E9C  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 17808                           
 17809                           ; BSR set to: 0
 17810                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 17811  003EA0  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17812  003EA4  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17813  003EA8  0E40               	movlw	64
 17814  003EAA  16DF               	andwf	indf2,f,c
 17815                           
 17816                           ; BSR set to: 0
 17817                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 17818  003EAC  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17819  003EB0  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17820  003EB4  0E00               	movlw	0
 17821  003EB6  86DB               	bsf	plusw2,3,c
 17822                           
 17823                           ; BSR set to: 0
 17824                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 17825  003EB8  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17826  003EBC  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17827  003EC0  0E00               	movlw	0
 17828  003EC2  8EDB               	bsf	plusw2,7,c
 17829                           
 17830                           ; BSR set to: 0
 17831                           ;usb_device.c: 1054: if(dir != 0)
 17832  003EC4  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17833  003EC6  B4D8               	btfsc	status,2,c
 17834  003EC8  D007               	goto	l1631
 17835                           
 17836                           ; BSR set to: 0
 17837                           ;usb_device.c: 1055: {
 17838                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 17839  003ECA  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17840  003ECC  0D02               	mullw	2
 17841  003ECE  0EB2               	movlw	low _pBDTEntryIn
 17842  003ED0  24F3               	addwf	prodl,w,c
 17843  003ED2  6ED9               	movwf	fsr2l,c
 17844  003ED4  0E00               	movlw	high _pBDTEntryIn
 17845  003ED6  D006               	goto	L18
 17846  003ED8                     l1631:
 17847                           
 17848                           ; BSR set to: 0
 17849                           ;usb_device.c: 1059: else
 17850                           ;usb_device.c: 1060: {
 17851                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 17852                           
 17853                           ; BSR set to: 0
 17854  003ED8  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17855  003EDA  0D02               	mullw	2
 17856  003EDC  0E0E               	movlw	low _pBDTEntryOut
 17857  003EDE  24F3               	addwf	prodl,w,c
 17858  003EE0  6ED9               	movwf	fsr2l,c
 17859  003EE2  0E03               	movlw	high _pBDTEntryOut
 17860  003EE4                     L18:
 17861  003EE4  20F4               	addwfc	prodh,w,c
 17862  003EE6  6EDA               	movwf	fsr2h,c
 17863  003EE8  0E04               	movlw	4
 17864  003EEA  1ADF               	xorwf	indf2,f,c
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;usb_device.c: 1063: }
 17868                           ;usb_device.c: 1064: return (void*)handle;
 17869                           
 17870                           ; BSR set to: 0
 17871  003EEC  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 17872  003EF0  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 17873  003EF4  0012               	return	
 17874  003EF6                     __end_of_USBTransferOnePacket:
 17875                           	opt stack 0
 17876                           tosu	equ	0xFFF
 17877                           tosh	equ	0xFFE
 17878                           tosl	equ	0xFFD
 17879                           pclath	equ	0xFFA
 17880                           tblptru	equ	0xFF8
 17881                           tblptrh	equ	0xFF7
 17882                           tblptrl	equ	0xFF6
 17883                           tablat	equ	0xFF5
 17884                           prodh	equ	0xFF4
 17885                           prodl	equ	0xFF3
 17886                           intcon	equ	0xFF2
 17887                           intcon2	equ	0xFF1
 17888                           intcon3	equ	0xFF0
 17889                           indf0	equ	0xFEF
 17890                           postinc0	equ	0xFEE
 17891                           plusw0	equ	0xFEB
 17892                           fsr0h	equ	0xFEA
 17893                           fsr0l	equ	0xFE9
 17894                           wreg	equ	0xFE8
 17895                           indf1	equ	0xFE7
 17896                           postinc1	equ	0xFE6
 17897                           postdec1	equ	0xFE5
 17898                           plusw1	equ	0xFE3
 17899                           fsr1h	equ	0xFE2
 17900                           fsr1l	equ	0xFE1
 17901                           indf2	equ	0xFDF
 17902                           postinc2	equ	0xFDE
 17903                           postdec2	equ	0xFDD
 17904                           plusw2	equ	0xFDB
 17905                           fsr2h	equ	0xFDA
 17906                           fsr2l	equ	0xFD9
 17907                           status	equ	0xFD8
 17908                           
 17909 ;; *************** function _atoi *****************
 17910 ;; Defined at:
 17911 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 17912 ;; Parameters:    Size  Location     Type
 17913 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 17914 ;;		 -> Terminal@Len(4), 
 17915 ;; Auto vars:     Size  Location     Type
 17916 ;;  a               2   40[BANK0 ] int 
 17917 ;;  sign            1   39[BANK0 ] unsigned char 
 17918 ;; Return value:  Size  Location     Type
 17919 ;;                  2   35[BANK0 ] int 
 17920 ;; Registers used:
 17921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17922 ;; Tracked objects:
 17923 ;;		On entry : 0/0
 17924 ;;		On exit  : 0/0
 17925 ;;		Unchanged: 0/0
 17926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17927 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17928 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17930 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17931 ;;Total ram usage:        7 bytes
 17932 ;; Hardware stack levels used:    1
 17933 ;; Hardware stack levels required when called:   12
 17934 ;; This function calls:
 17935 ;;		___wmul
 17936 ;;		_isdigit
 17937 ;; This function is called by:
 17938 ;;		_Terminal
 17939 ;; This function uses a non-reentrant model
 17940 ;;
 17941                           
 17942                           	psect	text76
 17943  003588                     __ptext76:
 17944                           	opt stack 0
 17945  003588                     _atoi:
 17946                           	opt stack 13
 17947                           
 17948                           ; BSR set to: 0
 17949                           ;incstack = 0
 17950  003588  D003               	goto	l2718
 17951  00358A  0100               	movlb	0	; () banked
 17952  00358C  4B83               	infsnz	atoi@s& (0+255),f,b
 17953  00358E  2B84               	incf	(atoi@s+1)& (0+255),f,b
 17954  003590                     l2718:
 17955                           
 17956                           ; BSR set to: 0
 17957  003590  C083  FFD9         	movff	atoi@s,fsr2l
 17958  003594  C084  FFDA         	movff	atoi@s+1,fsr2h
 17959  003598  0E20               	movlw	32
 17960  00359A  18DE               	xorwf	postinc2,w,c
 17961  00359C  B4D8               	btfsc	status,2,c
 17962  00359E  D7F5               	goto	l2719
 17963  0035A0  C083  FFD9         	movff	atoi@s,fsr2l
 17964  0035A4  C084  FFDA         	movff	atoi@s+1,fsr2h
 17965  0035A8  0E09               	movlw	9
 17966  0035AA  18DE               	xorwf	postinc2,w,c
 17967  0035AC  B4D8               	btfsc	status,2,c
 17968  0035AE  D7ED               	goto	l2719
 17969  0035B0  0E00               	movlw	0
 17970  0035B2  0100               	movlb	0	; () banked
 17971  0035B4  6F89               	movwf	(atoi@a+1)& (0+255),b
 17972  0035B6  0E00               	movlw	0
 17973  0035B8  6F88               	movwf	atoi@a& (0+255),b
 17974  0035BA  0E00               	movlw	0
 17975  0035BC  6F87               	movwf	atoi@sign& (0+255),b
 17976                           
 17977                           ; BSR set to: 0
 17978  0035BE  C083  FFD9         	movff	atoi@s,fsr2l
 17979  0035C2  C084  FFDA         	movff	atoi@s+1,fsr2h
 17980  0035C6  0E2D               	movlw	45
 17981  0035C8  18DE               	xorwf	postinc2,w,c
 17982  0035CA  A4D8               	btfss	status,2,c
 17983  0035CC  D002               	goto	l2721
 17984                           
 17985                           ; BSR set to: 0
 17986  0035CE  2B87               	incf	atoi@sign& (0+255),f,b
 17987  0035D0  D026               	goto	l12009
 17988  0035D2                     l2721:
 17989                           
 17990                           ; BSR set to: 0
 17991                           
 17992                           ; BSR set to: 0
 17993  0035D2  C083  FFD9         	movff	atoi@s,fsr2l
 17994  0035D6  C084  FFDA         	movff	atoi@s+1,fsr2h
 17995  0035DA  0E2B               	movlw	43
 17996  0035DC  18DE               	xorwf	postinc2,w,c
 17997  0035DE  A4D8               	btfss	status,2,c
 17998  0035E0  D020               	goto	l2724
 17999  0035E2  D01D               	goto	l12009
 18000  0035E4                     
 18001                           ; BSR set to: 0
 18002  0035E4  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18003  0035E8  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18004  0035EC  0E00               	movlw	0
 18005  0035EE  0100               	movlb	0	; () banked
 18006  0035F0  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18007  0035F2  0E0A               	movlw	10
 18008  0035F4  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18009  0035F6  EC2F  F02D         	call	___wmul	;wreg free
 18010  0035FA  C083  FFD9         	movff	atoi@s,fsr2l
 18011  0035FE  C084  FFDA         	movff	atoi@s+1,fsr2h
 18012  003602  50DF               	movf	indf2,w,c
 18013  003604  0100               	movlb	0	; () banked
 18014  003606  6F85               	movwf	??_atoi& (0+255),b
 18015  003608  6B86               	clrf	(??_atoi+1)& (0+255),b
 18016  00360A  517D               	movf	?___wmul& (0+255),w,b
 18017  00360C  2785               	addwf	??_atoi& (0+255),f,b
 18018  00360E  517E               	movf	(?___wmul+1)& (0+255),w,b
 18019  003610  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18020  003612  0ED0               	movlw	208
 18021  003614  2585               	addwf	??_atoi& (0+255),w,b
 18022  003616  6F88               	movwf	atoi@a& (0+255),b
 18023  003618  0EFF               	movlw	255
 18024  00361A  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18025  00361C  6F89               	movwf	(atoi@a+1)& (0+255),b
 18026  00361E                     l12009:
 18027                           
 18028                           ; BSR set to: 0
 18029  00361E  4B83               	infsnz	atoi@s& (0+255),f,b
 18030  003620  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18031  003622                     l2724:
 18032                           
 18033                           ; BSR set to: 0
 18034                           
 18035                           ; BSR set to: 0
 18036  003622  C083  FFD9         	movff	atoi@s,fsr2l
 18037  003626  C084  FFDA         	movff	atoi@s+1,fsr2h
 18038  00362A  50DF               	movf	indf2,w,c
 18039  00362C  ECD0  F02D         	call	_isdigit
 18040  003630  B0D8               	btfsc	status,0,c
 18041  003632  D7D8               	goto	l2725
 18042  003634  0100               	movlb	0	; () banked
 18043  003636  5187               	movf	atoi@sign& (0+255),w,b
 18044  003638  B4D8               	btfsc	status,2,c
 18045  00363A  D00D               	goto	l2727
 18046                           
 18047                           ; BSR set to: 0
 18048  00363C  C088  F085         	movff	atoi@a,??_atoi
 18049  003640  C089  F086         	movff	atoi@a+1,??_atoi+1
 18050  003644  1F85               	comf	??_atoi& (0+255),f,b
 18051  003646  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18052  003648  4B85               	infsnz	??_atoi& (0+255),f,b
 18053  00364A  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18054  00364C  C085  F083         	movff	??_atoi,?_atoi
 18055  003650  C086  F084         	movff	??_atoi+1,?_atoi+1
 18056  003654  0012               	return	
 18057  003656                     l2727:
 18058                           
 18059                           ; BSR set to: 0
 18060  003656  C088  F083         	movff	atoi@a,?_atoi
 18061  00365A  C089  F084         	movff	atoi@a+1,?_atoi+1
 18062                           
 18063                           ; BSR set to: 0
 18064  00365E  0012               	return		;funcret
 18065  003660                     __end_of_atoi:
 18066                           	opt stack 0
 18067                           tosu	equ	0xFFF
 18068                           tosh	equ	0xFFE
 18069                           tosl	equ	0xFFD
 18070                           pclath	equ	0xFFA
 18071                           tblptru	equ	0xFF8
 18072                           tblptrh	equ	0xFF7
 18073                           tblptrl	equ	0xFF6
 18074                           tablat	equ	0xFF5
 18075                           prodh	equ	0xFF4
 18076                           prodl	equ	0xFF3
 18077                           intcon	equ	0xFF2
 18078                           intcon2	equ	0xFF1
 18079                           intcon3	equ	0xFF0
 18080                           indf0	equ	0xFEF
 18081                           postinc0	equ	0xFEE
 18082                           plusw0	equ	0xFEB
 18083                           fsr0h	equ	0xFEA
 18084                           fsr0l	equ	0xFE9
 18085                           wreg	equ	0xFE8
 18086                           indf1	equ	0xFE7
 18087                           postinc1	equ	0xFE6
 18088                           postdec1	equ	0xFE5
 18089                           plusw1	equ	0xFE3
 18090                           fsr1h	equ	0xFE2
 18091                           fsr1l	equ	0xFE1
 18092                           indf2	equ	0xFDF
 18093                           postinc2	equ	0xFDE
 18094                           postdec2	equ	0xFDD
 18095                           plusw2	equ	0xFDB
 18096                           fsr2h	equ	0xFDA
 18097                           fsr2l	equ	0xFD9
 18098                           status	equ	0xFD8
 18099                           
 18100 ;; *************** function _isdigit *****************
 18101 ;; Defined at:
 18102 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18103 ;; Parameters:    Size  Location     Type
 18104 ;;  c               1    wreg     unsigned char 
 18105 ;; Auto vars:     Size  Location     Type
 18106 ;;  c               1   31[BANK0 ] unsigned char 
 18107 ;; Return value:  Size  Location     Type
 18108 ;;		None               void
 18109 ;; Registers used:
 18110 ;;		wreg, status,2, status,0
 18111 ;; Tracked objects:
 18112 ;;		On entry : 0/0
 18113 ;;		On exit  : 0/0
 18114 ;;		Unchanged: 0/0
 18115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18117 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18118 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18119 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18120 ;;Total ram usage:        3 bytes
 18121 ;; Hardware stack levels used:    1
 18122 ;; Hardware stack levels required when called:   11
 18123 ;; This function calls:
 18124 ;;		Nothing
 18125 ;; This function is called by:
 18126 ;;		_atoi
 18127 ;;		_strtol
 18128 ;;		_xtoi
 18129 ;;		_isxdigit
 18130 ;; This function uses a non-reentrant model
 18131 ;;
 18132                           
 18133                           	psect	text77
 18134  005BA0                     __ptext77:
 18135                           	opt stack 0
 18136  005BA0                     _isdigit:
 18137                           	opt stack 12
 18138                           
 18139                           ; BSR set to: 0
 18140                           ;incstack = 0
 18141                           ;isdigit@c stored from wreg
 18142  005BA0  0100               	movlb	0	; () banked
 18143  005BA2  6F7F               	movwf	isdigit@c& (0+255),b
 18144  005BA4  0E00               	movlw	0
 18145  005BA6  0100               	movlb	0	; () banked
 18146  005BA8  6F7E               	movwf	_isdigit$6101& (0+255),b
 18147                           
 18148                           ; BSR set to: 0
 18149  005BAA  0E3A               	movlw	58
 18150  005BAC  617F               	cpfslt	isdigit@c& (0+255),b
 18151  005BAE  D005               	goto	l2899
 18152                           
 18153                           ; BSR set to: 0
 18154  005BB0  0E2F               	movlw	47
 18155  005BB2  657F               	cpfsgt	isdigit@c& (0+255),b
 18156  005BB4  D002               	goto	l2899
 18157                           
 18158                           ; BSR set to: 0
 18159  005BB6  0E01               	movlw	1
 18160  005BB8  6F7E               	movwf	_isdigit$6101& (0+255),b
 18161  005BBA                     l2899:
 18162                           
 18163                           ; BSR set to: 0
 18164                           
 18165                           ; BSR set to: 0
 18166  005BBA  C07E  F07D         	movff	_isdigit$6101,??_isdigit
 18167  005BBE  317D               	rrcf	??_isdigit& (0+255),w,b
 18168  005BC0  0012               	return	
 18169  005BC2                     __end_of_isdigit:
 18170                           	opt stack 0
 18171                           tosu	equ	0xFFF
 18172                           tosh	equ	0xFFE
 18173                           tosl	equ	0xFFD
 18174                           pclath	equ	0xFFA
 18175                           tblptru	equ	0xFF8
 18176                           tblptrh	equ	0xFF7
 18177                           tblptrl	equ	0xFF6
 18178                           tablat	equ	0xFF5
 18179                           prodh	equ	0xFF4
 18180                           prodl	equ	0xFF3
 18181                           intcon	equ	0xFF2
 18182                           intcon2	equ	0xFF1
 18183                           intcon3	equ	0xFF0
 18184                           indf0	equ	0xFEF
 18185                           postinc0	equ	0xFEE
 18186                           plusw0	equ	0xFEB
 18187                           fsr0h	equ	0xFEA
 18188                           fsr0l	equ	0xFE9
 18189                           wreg	equ	0xFE8
 18190                           indf1	equ	0xFE7
 18191                           postinc1	equ	0xFE6
 18192                           postdec1	equ	0xFE5
 18193                           plusw1	equ	0xFE3
 18194                           fsr1h	equ	0xFE2
 18195                           fsr1l	equ	0xFE1
 18196                           indf2	equ	0xFDF
 18197                           postinc2	equ	0xFDE
 18198                           postdec2	equ	0xFDD
 18199                           plusw2	equ	0xFDB
 18200                           fsr2h	equ	0xFDA
 18201                           fsr2l	equ	0xFD9
 18202                           status	equ	0xFD8
 18203                           
 18204 ;; *************** function _OsTmr_Wait *****************
 18205 ;; Defined at:
 18206 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 18207 ;; Parameters:    Size  Location     Type
 18208 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 18209 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 18210 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 18211 ;; Auto vars:     Size  Location     Type
 18212 ;;  Ret             1   65[BANK0 ] enum E7749
 18213 ;; Return value:  Size  Location     Type
 18214 ;;                  1    wreg      enum E7749
 18215 ;; Registers used:
 18216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18217 ;; Tracked objects:
 18218 ;;		On entry : 0/0
 18219 ;;		On exit  : 0/0
 18220 ;;		Unchanged: 0/0
 18221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18222 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18223 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18225 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18226 ;;Total ram usage:        7 bytes
 18227 ;; Hardware stack levels used:    1
 18228 ;; Hardware stack levels required when called:   14
 18229 ;; This function calls:
 18230 ;;		_OsTmr_GetTimerStatus
 18231 ;;		_OsTmr_StartTimer
 18232 ;; This function is called by:
 18233 ;;		_Terminal
 18234 ;;		_I2cSlv_QueryI2cData
 18235 ;; This function uses a non-reentrant model
 18236 ;;
 18237                           
 18238                           	psect	text78
 18239  0049DC                     __ptext78:
 18240                           	opt stack 0
 18241  0049DC                     _OsTmr_Wait:
 18242                           	opt stack 11
 18243                           
 18244                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 18245                           
 18246                           ; BSR set to: 0
 18247                           ;incstack = 0
 18248  0049DC  0E00               	movlw	0
 18249  0049DE  0100               	movlb	0	; () banked
 18250  0049E0  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18251                           
 18252                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 18253  0049E2  D02D               	goto	l855
 18254  0049E4                     
 18255                           ; BSR set to: 0
 18256                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 18257                           
 18258                           ; BSR set to: 0
 18259  0049E4  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 18260  0049E8  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 18261  0049EC  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 18262  0049F0  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 18263  0049F4  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 18264  0049F8  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 18265  0049FC  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 18266                           
 18267                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 18268  004A00  0100               	movlb	0	; () banked
 18269  004A02  EE20 F00A          	lfsr	2,10
 18270  004A06  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18271  004A08  26D9               	addwf	fsr2l,f,c
 18272  004A0A  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18273  004A0C  22DA               	addwfc	fsr2h,f,c
 18274  004A0E  0E01               	movlw	1
 18275  004A10  6EDF               	movwf	indf2,c
 18276                           
 18277                           ;os_timers.c: 165: break;
 18278  004A12  D022               	goto	l857
 18279  004A14                     
 18280                           ; BSR set to: 0
 18281                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 18282                           
 18283                           ; BSR set to: 0
 18284  004A14  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 18285  004A18  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 18286  004A1C  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 18287  004A20  06E8               	decf	wreg,f,c
 18288  004A22  A4D8               	btfss	status,2,c
 18289  004A24  D019               	goto	l857
 18290                           
 18291                           ;os_timers.c: 170: {
 18292                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 18293  004A26  0100               	movlb	0	; () banked
 18294  004A28  EE20 F00A          	lfsr	2,10
 18295  004A2C  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18296  004A2E  26D9               	addwf	fsr2l,f,c
 18297  004A30  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18298  004A32  22DA               	addwfc	fsr2h,f,c
 18299  004A34  0E00               	movlw	0
 18300  004A36  6EDF               	movwf	indf2,c
 18301                           
 18302                           ; BSR set to: 0
 18303                           ;os_timers.c: 174: Ret = DelayExpired;
 18304  004A38  0E01               	movlw	1
 18305  004A3A  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18306                           
 18307                           ; BSR set to: 0
 18308                           ;os_timers.c: 180: }
 18309                           
 18310                           ; BSR set to: 0
 18311                           ;os_timers.c: 179: break;
 18312                           
 18313                           ;os_timers.c: 178: default:
 18314                           
 18315                           ; BSR set to: 0
 18316                           ;os_timers.c: 175: }
 18317                           ;os_timers.c: 176: break;
 18318  004A3C  D00D               	goto	l857
 18319  004A3E                     l855:
 18320                           
 18321                           ; BSR set to: 0
 18322                           
 18323                           ; BSR set to: 0
 18324  004A3E  EE20 F00A          	lfsr	2,10
 18325  004A42  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18326  004A44  26D9               	addwf	fsr2l,f,c
 18327  004A46  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18328  004A48  22DA               	addwfc	fsr2h,f,c
 18329  004A4A  50DF               	movf	indf2,w,c
 18330                           
 18331                           ; Switch size 1, requested type "space"
 18332                           ; Number of cases is 2, Range of values is 0 to 1
 18333                           ; switch strategies available:
 18334                           ; Name         Instructions Cycles
 18335                           ; simple_byte            7     4 (average)
 18336                           ;	Chosen strategy is simple_byte
 18337  004A4C  0A00               	xorlw	0	; case 0
 18338  004A4E  B4D8               	btfsc	status,2,c
 18339  004A50  D7C9               	goto	l856
 18340  004A52  0A01               	xorlw	1	; case 1
 18341  004A54  B4D8               	btfsc	status,2,c
 18342  004A56  D7DE               	goto	l858
 18343  004A58                     l857:
 18344                           
 18345                           ;os_timers.c: 182: return Ret;
 18346                           
 18347                           ; BSR set to: 0
 18348  004A58  0100               	movlb	0	; () banked
 18349  004A5A  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 18350  004A5C  0012               	return	
 18351  004A5E                     __end_of_OsTmr_Wait:
 18352                           	opt stack 0
 18353                           tosu	equ	0xFFF
 18354                           tosh	equ	0xFFE
 18355                           tosl	equ	0xFFD
 18356                           pclath	equ	0xFFA
 18357                           tblptru	equ	0xFF8
 18358                           tblptrh	equ	0xFF7
 18359                           tblptrl	equ	0xFF6
 18360                           tablat	equ	0xFF5
 18361                           prodh	equ	0xFF4
 18362                           prodl	equ	0xFF3
 18363                           intcon	equ	0xFF2
 18364                           intcon2	equ	0xFF1
 18365                           intcon3	equ	0xFF0
 18366                           indf0	equ	0xFEF
 18367                           postinc0	equ	0xFEE
 18368                           plusw0	equ	0xFEB
 18369                           fsr0h	equ	0xFEA
 18370                           fsr0l	equ	0xFE9
 18371                           wreg	equ	0xFE8
 18372                           indf1	equ	0xFE7
 18373                           postinc1	equ	0xFE6
 18374                           postdec1	equ	0xFE5
 18375                           plusw1	equ	0xFE3
 18376                           fsr1h	equ	0xFE2
 18377                           fsr1l	equ	0xFE1
 18378                           indf2	equ	0xFDF
 18379                           postinc2	equ	0xFDE
 18380                           postdec2	equ	0xFDD
 18381                           plusw2	equ	0xFDB
 18382                           fsr2h	equ	0xFDA
 18383                           fsr2l	equ	0xFD9
 18384                           status	equ	0xFD8
 18385                           
 18386 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 18387 ;; Defined at:
 18388 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18389 ;; Parameters:    Size  Location     Type
 18390 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 18391 ;;		 -> Terminal@TermRxBuffer(50), 
 18392 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18393 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18394 ;; Auto vars:     Size  Location     Type
 18395 ;;  RxSts           1   36[BANK0 ] unsigned char 
 18396 ;; Return value:  Size  Location     Type
 18397 ;;                  1    wreg      unsigned char 
 18398 ;; Registers used:
 18399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18400 ;; Tracked objects:
 18401 ;;		On entry : 0/0
 18402 ;;		On exit  : 0/0
 18403 ;;		Unchanged: 0/0
 18404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18405 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18406 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18408 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18409 ;;Total ram usage:        5 bytes
 18410 ;; Hardware stack levels used:    1
 18411 ;; Hardware stack levels required when called:   12
 18412 ;; This function calls:
 18413 ;;		_GenerateEvt
 18414 ;; This function is called by:
 18415 ;;		_Terminal
 18416 ;;		_I2cSlv_QueryI2cData
 18417 ;; This function uses a non-reentrant model
 18418 ;;
 18419                           
 18420                           	psect	text79
 18421  005596                     __ptext79:
 18422                           	opt stack 0
 18423  005596                     _I2cSlv_ReceiveI2cMsg:
 18424                           	opt stack 13
 18425                           
 18426                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 18427                           
 18428                           ; BSR set to: 0
 18429                           ;incstack = 0
 18430  005596  0E00               	movlw	0
 18431  005598  0100               	movlb	0	; () banked
 18432  00559A  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18433                           
 18434                           ; BSR set to: 0
 18435                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 18436  00559C  0E02               	movlw	2
 18437  00559E  19CC               	xorwf	_I2cComSts& (0+255),w,b
 18438  0055A0  B4D8               	btfsc	status,2,c
 18439  0055A2  D016               	goto	l1396
 18440                           
 18441                           ; BSR set to: 0
 18442                           ;i2c_slv.c: 294: {
 18443                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 18444  0055A4  C082  F3A2         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 18445                           
 18446                           ; BSR set to: 0
 18447                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 18448  0055A8  0E01               	movlw	1
 18449  0055AA  0103               	movlb	3	; () banked
 18450  0055AC  6FA3               	movwf	(_I2cRxPacket+1)& (0+255),b
 18451                           
 18452                           ; BSR set to: 3
 18453                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 18454  0055AE  C083  F3A6         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 18455                           
 18456                           ; BSR set to: 3
 18457                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 18458  0055B2  C080  F3A4         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 18459  0055B6  C081  F3A5         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 18460                           
 18461                           ; BSR set to: 3
 18462                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 18463  0055BA  0ED5               	movlw	low _I2cReadDataEvt
 18464  0055BC  0100               	movlb	0	; () banked
 18465  0055BE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18466  0055C0  0E00               	movlw	high _I2cReadDataEvt
 18467  0055C2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18468  0055C4  EC7E  F02E         	call	_GenerateEvt	;wreg free
 18469                           
 18470                           ;i2c_slv.c: 304: RxSts = 1u;
 18471  0055C8  0E01               	movlw	1
 18472  0055CA  0100               	movlb	0	; () banked
 18473  0055CC  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18474                           
 18475                           ;i2c_slv.c: 305: }
 18476  0055CE  0012               	return	
 18477  0055D0                     l1396:
 18478                           
 18479                           ; BSR set to: 0
 18480                           ;i2c_slv.c: 306: else
 18481                           ;i2c_slv.c: 307: {
 18482                           ;i2c_slv.c: 309: RxSts = 0u;
 18483                           
 18484                           ; BSR set to: 0
 18485  0055D0  0E00               	movlw	0
 18486  0055D2  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18487                           
 18488                           ; BSR set to: 0
 18489  0055D4  0012               	return	
 18490  0055D6                     __end_of_I2cSlv_ReceiveI2cMsg:
 18491                           	opt stack 0
 18492                           tosu	equ	0xFFF
 18493                           tosh	equ	0xFFE
 18494                           tosl	equ	0xFFD
 18495                           pclath	equ	0xFFA
 18496                           tblptru	equ	0xFF8
 18497                           tblptrh	equ	0xFF7
 18498                           tblptrl	equ	0xFF6
 18499                           tablat	equ	0xFF5
 18500                           prodh	equ	0xFF4
 18501                           prodl	equ	0xFF3
 18502                           intcon	equ	0xFF2
 18503                           intcon2	equ	0xFF1
 18504                           intcon3	equ	0xFF0
 18505                           indf0	equ	0xFEF
 18506                           postinc0	equ	0xFEE
 18507                           plusw0	equ	0xFEB
 18508                           fsr0h	equ	0xFEA
 18509                           fsr0l	equ	0xFE9
 18510                           wreg	equ	0xFE8
 18511                           indf1	equ	0xFE7
 18512                           postinc1	equ	0xFE6
 18513                           postdec1	equ	0xFE5
 18514                           plusw1	equ	0xFE3
 18515                           fsr1h	equ	0xFE2
 18516                           fsr1l	equ	0xFE1
 18517                           indf2	equ	0xFDF
 18518                           postinc2	equ	0xFDE
 18519                           postdec2	equ	0xFDD
 18520                           plusw2	equ	0xFDB
 18521                           fsr2h	equ	0xFDA
 18522                           fsr2l	equ	0xFD9
 18523                           status	equ	0xFD8
 18524                           
 18525 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 18526 ;; Defined at:
 18527 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18528 ;; Parameters:    Size  Location     Type
 18529 ;;		None
 18530 ;; Auto vars:     Size  Location     Type
 18531 ;;  Result          1   33[BANK0 ] enum E8915
 18532 ;; Return value:  Size  Location     Type
 18533 ;;                  1    wreg      enum E8915
 18534 ;; Registers used:
 18535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18536 ;; Tracked objects:
 18537 ;;		On entry : 0/0
 18538 ;;		On exit  : 0/0
 18539 ;;		Unchanged: 0/0
 18540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18542 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18544 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18545 ;;Total ram usage:        1 bytes
 18546 ;; Hardware stack levels used:    1
 18547 ;; Hardware stack levels required when called:   12
 18548 ;; This function calls:
 18549 ;;		_ReceiveEvt
 18550 ;; This function is called by:
 18551 ;;		_Terminal
 18552 ;;		_I2cSlv_QueryI2cData
 18553 ;; This function uses a non-reentrant model
 18554 ;;
 18555                           
 18556                           	psect	text80
 18557  005BC2                     __ptext80:
 18558                           	opt stack 0
 18559  005BC2                     _I2cSlv_I2cReadMsgSts:
 18560                           	opt stack 13
 18561                           
 18562                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 18563                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 18564                           
 18565                           ; BSR set to: 0
 18566                           ;incstack = 0
 18567  005BC2  0EA7               	movlw	low (_I2cRxPacket+5)
 18568  005BC4  0100               	movlb	0	; () banked
 18569  005BC6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 18570  005BC8  0E03               	movlw	high (_I2cRxPacket+5)
 18571  005BCA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 18572  005BCC  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 18573  005BD0  0900               	iorlw	0
 18574  005BD2  B4D8               	btfsc	status,2,c
 18575  005BD4  D002               	goto	l1401
 18576                           
 18577                           ;i2c_slv.c: 331: {
 18578                           ;i2c_slv.c: 332: Result = MessageReceived;
 18579  005BD6  0E01               	movlw	1
 18580  005BD8  D001               	goto	L19
 18581  005BDA                     l1401:
 18582                           
 18583                           ;i2c_slv.c: 334: else
 18584                           ;i2c_slv.c: 335: {
 18585                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 18586                           
 18587                           ; BSR set to: 0
 18588  005BDA  0E00               	movlw	0
 18589  005BDC                     L19:
 18590  005BDC  0100               	movlb	0	; () banked
 18591  005BDE  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 18592                           
 18593                           ; BSR set to: 0
 18594                           ;i2c_slv.c: 337: }
 18595                           ;i2c_slv.c: 339: return Result;
 18596  005BE0  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 18597  005BE2  0012               	return	
 18598  005BE4                     __end_of_I2cSlv_I2cReadMsgSts:
 18599                           	opt stack 0
 18600                           tosu	equ	0xFFF
 18601                           tosh	equ	0xFFE
 18602                           tosl	equ	0xFFD
 18603                           pclath	equ	0xFFA
 18604                           tblptru	equ	0xFF8
 18605                           tblptrh	equ	0xFF7
 18606                           tblptrl	equ	0xFF6
 18607                           tablat	equ	0xFF5
 18608                           prodh	equ	0xFF4
 18609                           prodl	equ	0xFF3
 18610                           intcon	equ	0xFF2
 18611                           intcon2	equ	0xFF1
 18612                           intcon3	equ	0xFF0
 18613                           indf0	equ	0xFEF
 18614                           postinc0	equ	0xFEE
 18615                           plusw0	equ	0xFEB
 18616                           fsr0h	equ	0xFEA
 18617                           fsr0l	equ	0xFE9
 18618                           wreg	equ	0xFE8
 18619                           indf1	equ	0xFE7
 18620                           postinc1	equ	0xFE6
 18621                           postdec1	equ	0xFE5
 18622                           plusw1	equ	0xFE3
 18623                           fsr1h	equ	0xFE2
 18624                           fsr1l	equ	0xFE1
 18625                           indf2	equ	0xFDF
 18626                           postinc2	equ	0xFDE
 18627                           postdec2	equ	0xFDD
 18628                           plusw2	equ	0xFDB
 18629                           fsr2h	equ	0xFDA
 18630                           fsr2l	equ	0xFD9
 18631                           status	equ	0xFD8
 18632                           
 18633 ;; *************** function _Rtcm_SetRtccDate *****************
 18634 ;; Defined at:
 18635 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18636 ;; Parameters:    Size  Location     Type
 18637 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18638 ;; Auto vars:     Size  Location     Type
 18639 ;;		None
 18640 ;; Return value:  Size  Location     Type
 18641 ;;                  1    wreg      void 
 18642 ;; Registers used:
 18643 ;;		wreg, status,2, status,0, cstack
 18644 ;; Tracked objects:
 18645 ;;		On entry : 0/0
 18646 ;;		On exit  : 0/0
 18647 ;;		Unchanged: 0/0
 18648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18649 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18652 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18653 ;;Total ram usage:        8 bytes
 18654 ;; Hardware stack levels used:    1
 18655 ;; Hardware stack levels required when called:   13
 18656 ;; This function calls:
 18657 ;;		_Rtcc_LockRtc
 18658 ;;		_Rtcc_SetRtccValue
 18659 ;;		_Rtcc_UnlockRtc
 18660 ;; This function is called by:
 18661 ;;		_Rtcm_MainTask
 18662 ;; This function uses a non-reentrant model
 18663 ;;
 18664                           
 18665                           	psect	text81
 18666  0050E8                     __ptext81:
 18667                           	opt stack 0
 18668  0050E8                     _Rtcm_SetRtccDate:
 18669                           	opt stack 14
 18670                           
 18671                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18672                           
 18673                           ; BSR set to: 0
 18674                           ;incstack = 0
 18675  0050E8  ECD2  F02E         	call	_Rtcc_UnlockRtc	;wreg free
 18676                           
 18677                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18678  0050EC  0100               	movlb	0	; () banked
 18679  0050EE  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18680  0050F0  0F30               	addlw	48
 18681  0050F2  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18682  0050F4  0E00               	movlw	0
 18683  0050F6  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18684                           
 18685                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18686  0050FA  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18687  0050FE  0E01               	movlw	1
 18688  005100  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18689                           
 18690                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18691  005104  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18692  005108  0E02               	movlw	2
 18693  00510A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18694                           
 18695                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18696  00510E  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18697  005112  0E03               	movlw	3
 18698  005114  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18699                           
 18700                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18701  005118  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18702  00511C  0E04               	movlw	4
 18703  00511E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18704                           
 18705                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18706  005122  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18707  005126  0E05               	movlw	5
 18708  005128  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18709                           
 18710                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18711  00512C  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18712  005130  0E06               	movlw	6
 18713  005132  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18714                           
 18715                           ;rtcm.c: 191: Rtcc_LockRtc();
 18716  005136  ECDA  F02E         	call	_Rtcc_LockRtc	;wreg free
 18717  00513A  0012               	return		;funcret
 18718  00513C                     __end_of_Rtcm_SetRtccDate:
 18719                           	opt stack 0
 18720                           tosu	equ	0xFFF
 18721                           tosh	equ	0xFFE
 18722                           tosl	equ	0xFFD
 18723                           pclath	equ	0xFFA
 18724                           tblptru	equ	0xFF8
 18725                           tblptrh	equ	0xFF7
 18726                           tblptrl	equ	0xFF6
 18727                           tablat	equ	0xFF5
 18728                           prodh	equ	0xFF4
 18729                           prodl	equ	0xFF3
 18730                           intcon	equ	0xFF2
 18731                           intcon2	equ	0xFF1
 18732                           intcon3	equ	0xFF0
 18733                           indf0	equ	0xFEF
 18734                           postinc0	equ	0xFEE
 18735                           plusw0	equ	0xFEB
 18736                           fsr0h	equ	0xFEA
 18737                           fsr0l	equ	0xFE9
 18738                           wreg	equ	0xFE8
 18739                           indf1	equ	0xFE7
 18740                           postinc1	equ	0xFE6
 18741                           postdec1	equ	0xFE5
 18742                           plusw1	equ	0xFE3
 18743                           fsr1h	equ	0xFE2
 18744                           fsr1l	equ	0xFE1
 18745                           indf2	equ	0xFDF
 18746                           postinc2	equ	0xFDE
 18747                           postdec2	equ	0xFDD
 18748                           plusw2	equ	0xFDB
 18749                           fsr2h	equ	0xFDA
 18750                           fsr2l	equ	0xFD9
 18751                           status	equ	0xFD8
 18752                           
 18753 ;; *************** function _Rtcc_UnlockRtc *****************
 18754 ;; Defined at:
 18755 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18756 ;; Parameters:    Size  Location     Type
 18757 ;;		None
 18758 ;; Auto vars:     Size  Location     Type
 18759 ;;		None
 18760 ;; Return value:  Size  Location     Type
 18761 ;;                  1    wreg      void 
 18762 ;; Registers used:
 18763 ;;		None
 18764 ;; Tracked objects:
 18765 ;;		On entry : 0/0
 18766 ;;		On exit  : 0/0
 18767 ;;		Unchanged: 0/0
 18768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18773 ;;Total ram usage:        0 bytes
 18774 ;; Hardware stack levels used:    1
 18775 ;; Hardware stack levels required when called:   11
 18776 ;; This function calls:
 18777 ;;		Nothing
 18778 ;; This function is called by:
 18779 ;;		_Rtcm_MainTask
 18780 ;;		_Rtcm_SetRtccDate
 18781 ;;		_Rtcm_SetRtccAlarm
 18782 ;; This function uses a non-reentrant model
 18783 ;;
 18784                           
 18785                           	psect	text82
 18786  005DA4                     __ptext82:
 18787                           	opt stack 0
 18788  005DA4                     _Rtcc_UnlockRtc:
 18789                           	opt stack 15
 18790                           
 18791                           ;incstack = 0
 18792  005DA4  010F               	movlb	15	;# 
 18793  005DA6  0E55               	movlw	85	;# 
 18794  005DA8  6EA7               	movwf	4007,c	;# 
 18795  005DAA  0EAA               	movlw	170	;# 
 18796  005DAC  6EA7               	movwf	4007,c	;# 
 18797                           
 18798                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18799  005DAE  010F               	movlb	15	; () banked
 18800  005DB0  8B3F               	bsf	63,5,b	;volatile
 18801                           
 18802                           ; BSR set to: 15
 18803  005DB2  0012               	return		;funcret
 18804  005DB4                     __end_of_Rtcc_UnlockRtc:
 18805                           	opt stack 0
 18806                           tosu	equ	0xFFF
 18807                           tosh	equ	0xFFE
 18808                           tosl	equ	0xFFD
 18809                           pclath	equ	0xFFA
 18810                           tblptru	equ	0xFF8
 18811                           tblptrh	equ	0xFF7
 18812                           tblptrl	equ	0xFF6
 18813                           tablat	equ	0xFF5
 18814                           prodh	equ	0xFF4
 18815                           prodl	equ	0xFF3
 18816                           intcon	equ	0xFF2
 18817                           intcon2	equ	0xFF1
 18818                           intcon3	equ	0xFF0
 18819                           indf0	equ	0xFEF
 18820                           postinc0	equ	0xFEE
 18821                           plusw0	equ	0xFEB
 18822                           fsr0h	equ	0xFEA
 18823                           fsr0l	equ	0xFE9
 18824                           wreg	equ	0xFE8
 18825                           indf1	equ	0xFE7
 18826                           postinc1	equ	0xFE6
 18827                           postdec1	equ	0xFE5
 18828                           plusw1	equ	0xFE3
 18829                           fsr1h	equ	0xFE2
 18830                           fsr1l	equ	0xFE1
 18831                           indf2	equ	0xFDF
 18832                           postinc2	equ	0xFDE
 18833                           postdec2	equ	0xFDD
 18834                           plusw2	equ	0xFDB
 18835                           fsr2h	equ	0xFDA
 18836                           fsr2l	equ	0xFD9
 18837                           status	equ	0xFD8
 18838                           
 18839 ;; *************** function _Rtcc_SetRtccValue *****************
 18840 ;; Defined at:
 18841 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18842 ;; Parameters:    Size  Location     Type
 18843 ;;  RtccPtrVal      1    wreg     enum E7757
 18844 ;;  Value           1   37[BANK0 ] unsigned char 
 18845 ;; Auto vars:     Size  Location     Type
 18846 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18847 ;; Return value:  Size  Location     Type
 18848 ;;                  1    wreg      void 
 18849 ;; Registers used:
 18850 ;;		wreg, status,2, status,0, cstack
 18851 ;; Tracked objects:
 18852 ;;		On entry : 0/0
 18853 ;;		On exit  : 0/0
 18854 ;;		Unchanged: 0/0
 18855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18856 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18858 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18859 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18860 ;;Total ram usage:        4 bytes
 18861 ;; Hardware stack levels used:    1
 18862 ;; Hardware stack levels required when called:   12
 18863 ;; This function calls:
 18864 ;;		___awdiv
 18865 ;;		___awmod
 18866 ;; This function is called by:
 18867 ;;		_Rtcm_SetRtccDate
 18868 ;; This function uses a non-reentrant model
 18869 ;;
 18870                           
 18871                           	psect	text83
 18872  0015EE                     __ptext83:
 18873                           	opt stack 0
 18874  0015EE                     _Rtcc_SetRtccValue:
 18875                           	opt stack 14
 18876                           
 18877                           ; BSR set to: 15
 18878                           ;incstack = 0
 18879                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18880  0015EE  0100               	movlb	0	; () banked
 18881  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18882                           
 18883                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18884  0015F2  D0FC               	goto	l441
 18885  0015F4                     l442:
 18886                           
 18887                           ; BSR set to: 0
 18888                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18889  0015F4  010F               	movlb	15	; () banked
 18890  0015F6  833F               	bsf	63,1,b	;volatile
 18891                           
 18892                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18893  0015F8  813F               	bsf	63,0,b	;volatile
 18894                           
 18895                           ; BSR set to: 15
 18896                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18897  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18898  0015FE  0100               	movlb	0	; () banked
 18899  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18900  001602  0E00               	movlw	0
 18901  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18902  001606  0E0A               	movlw	10
 18903  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18904  00160A  EC2F  F025         	call	___awmod	;wreg free
 18905  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18906  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18907  001616  0E0F               	movlw	15
 18908  001618  0100               	movlb	0	; () banked
 18909  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18910  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18911  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18912  001622  0E00               	movlw	0
 18913  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18914  001626  0E0A               	movlw	10
 18915  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18916  00162A  EC69  F024         	call	___awdiv	;wreg free
 18917  00162E  0100               	movlb	0	; () banked
 18918  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18919  001632  0BF0               	andlw	240
 18920  001634  0BF0               	andlw	240
 18921  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18922  001638  6E98               	movwf	3992,c	;volatile
 18923                           
 18924                           ;rtcc_drv.c: 393: break;
 18925  00163A  0012               	return	
 18926  00163C                     l444:
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18930  00163C  010F               	movlb	15	; () banked
 18931  00163E  833F               	bsf	63,1,b	;volatile
 18932                           
 18933                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18934  001640  913F               	bcf	63,0,b	;volatile
 18935                           
 18936                           ; BSR set to: 15
 18937                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18938  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18939  001646  0100               	movlb	0	; () banked
 18940  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18941  00164A  0E00               	movlw	0
 18942  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18943  00164E  0E0A               	movlw	10
 18944  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18945  001652  EC2F  F025         	call	___awmod	;wreg free
 18946  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18947  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18948  00165E  0E0F               	movlw	15
 18949  001660  0100               	movlb	0	; () banked
 18950  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18951  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18952  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18953  00166A  0E00               	movlw	0
 18954  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18955  00166E  0E0A               	movlw	10
 18956  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18957  001672  EC69  F024         	call	___awdiv	;wreg free
 18958  001676  0100               	movlb	0	; () banked
 18959  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18960  00167A  0BF0               	andlw	240
 18961  00167C  0BF0               	andlw	240
 18962  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18963  001680  6E99               	movwf	3993,c	;volatile
 18964                           
 18965                           ;rtcc_drv.c: 401: break;
 18966  001682  0012               	return	
 18967  001684                     l445:
 18968                           
 18969                           ; BSR set to: 0
 18970                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18971  001684  010F               	movlb	15	; () banked
 18972  001686  833F               	bsf	63,1,b	;volatile
 18973                           
 18974                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18975  001688  913F               	bcf	63,0,b	;volatile
 18976                           
 18977                           ; BSR set to: 15
 18978                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18979  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18980  00168E  0100               	movlb	0	; () banked
 18981  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18982  001692  0E00               	movlw	0
 18983  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18984  001696  0E0A               	movlw	10
 18985  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18986  00169A  EC2F  F025         	call	___awmod	;wreg free
 18987  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18988  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18989  0016A6  0E0F               	movlw	15
 18990  0016A8  0100               	movlb	0	; () banked
 18991  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18992  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18993  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18994  0016B2  0E00               	movlw	0
 18995  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18996  0016B6  0E0A               	movlw	10
 18997  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18998  0016BA  EC69  F024         	call	___awdiv	;wreg free
 18999  0016BE  0100               	movlb	0	; () banked
 19000  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 19001  0016C2  0BF0               	andlw	240
 19002  0016C4  0BF0               	andlw	240
 19003  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19004  0016C8  6E98               	movwf	3992,c	;volatile
 19005                           
 19006                           ;rtcc_drv.c: 409: break;
 19007  0016CA  0012               	return	
 19008  0016CC                     l446:
 19009                           
 19010                           ; BSR set to: 0
 19011                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19012  0016CC  010F               	movlb	15	; () banked
 19013  0016CE  933F               	bcf	63,1,b	;volatile
 19014                           
 19015                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19016  0016D0  813F               	bsf	63,0,b	;volatile
 19017                           
 19018                           ; BSR set to: 15
 19019                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19020  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19021  0016D6  0100               	movlb	0	; () banked
 19022  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19023  0016DA  0E00               	movlw	0
 19024  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19025  0016DE  0E0A               	movlw	10
 19026  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19027  0016E2  EC2F  F025         	call	___awmod	;wreg free
 19028  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19029  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19030  0016EE  0E0F               	movlw	15
 19031  0016F0  0100               	movlb	0	; () banked
 19032  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19033  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19034  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19035  0016FA  0E00               	movlw	0
 19036  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19037  0016FE  0E0A               	movlw	10
 19038  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19039  001702  EC69  F024         	call	___awdiv	;wreg free
 19040  001706  0100               	movlb	0	; () banked
 19041  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19042  00170A  0BF0               	andlw	240
 19043  00170C  0BF0               	andlw	240
 19044  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19045  001710  6E99               	movwf	3993,c	;volatile
 19046                           
 19047                           ;rtcc_drv.c: 417: break;
 19048  001712  0012               	return	
 19049  001714                     l447:
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19053  001714  010F               	movlb	15	; () banked
 19054  001716  933F               	bcf	63,1,b	;volatile
 19055                           
 19056                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19057  001718  813F               	bsf	63,0,b	;volatile
 19058                           
 19059                           ; BSR set to: 15
 19060                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19061  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19062  00171E  0100               	movlb	0	; () banked
 19063  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19064  001722  0E00               	movlw	0
 19065  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19066  001726  0E0A               	movlw	10
 19067  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19068  00172A  EC2F  F025         	call	___awmod	;wreg free
 19069  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19070  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19071  001736  0E0F               	movlw	15
 19072  001738  0100               	movlb	0	; () banked
 19073  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19074  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19075  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19076  001742  0E00               	movlw	0
 19077  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19078  001746  0E0A               	movlw	10
 19079  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19080  00174A  EC69  F024         	call	___awdiv	;wreg free
 19081  00174E  0100               	movlb	0	; () banked
 19082  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19083  001752  0BF0               	andlw	240
 19084  001754  0BF0               	andlw	240
 19085  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19086  001758  6E98               	movwf	3992,c	;volatile
 19087                           
 19088                           ;rtcc_drv.c: 425: break;
 19089  00175A  0012               	return	
 19090  00175C                     l448:
 19091                           
 19092                           ; BSR set to: 0
 19093                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19094  00175C  010F               	movlb	15	; () banked
 19095  00175E  933F               	bcf	63,1,b	;volatile
 19096                           
 19097                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19098  001760  913F               	bcf	63,0,b	;volatile
 19099                           
 19100                           ; BSR set to: 15
 19101                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19102  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19103  001766  0100               	movlb	0	; () banked
 19104  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19105  00176A  0E00               	movlw	0
 19106  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19107  00176E  0E0A               	movlw	10
 19108  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19109  001772  EC2F  F025         	call	___awmod	;wreg free
 19110  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19111  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19112  00177E  0E0F               	movlw	15
 19113  001780  0100               	movlb	0	; () banked
 19114  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19115  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19116  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19117  00178A  0E00               	movlw	0
 19118  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19119  00178E  0E0A               	movlw	10
 19120  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19121  001792  EC69  F024         	call	___awdiv	;wreg free
 19122  001796  0100               	movlb	0	; () banked
 19123  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19124  00179A  0BF0               	andlw	240
 19125  00179C  0BF0               	andlw	240
 19126  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19127  0017A0  6E99               	movwf	3993,c	;volatile
 19128                           
 19129                           ;rtcc_drv.c: 433: break;
 19130  0017A2  0012               	return	
 19131  0017A4                     l449:
 19132                           
 19133                           ; BSR set to: 0
 19134                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19135  0017A4  010F               	movlb	15	; () banked
 19136  0017A6  933F               	bcf	63,1,b	;volatile
 19137                           
 19138                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19139  0017A8  913F               	bcf	63,0,b	;volatile
 19140                           
 19141                           ; BSR set to: 15
 19142                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19143  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19144  0017AE  0100               	movlb	0	; () banked
 19145  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19146  0017B2  0E00               	movlw	0
 19147  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19148  0017B6  0E0A               	movlw	10
 19149  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19150  0017BA  EC2F  F025         	call	___awmod	;wreg free
 19151  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19152  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19153  0017C6  0E0F               	movlw	15
 19154  0017C8  0100               	movlb	0	; () banked
 19155  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19156  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19157  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19158  0017D2  0E00               	movlw	0
 19159  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19160  0017D6  0E0A               	movlw	10
 19161  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19162  0017DA  EC69  F024         	call	___awdiv	;wreg free
 19163  0017DE  0100               	movlb	0	; () banked
 19164  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19165  0017E2  0BF0               	andlw	240
 19166  0017E4  0BF0               	andlw	240
 19167  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19168  0017E8  6E98               	movwf	3992,c	;volatile
 19169                           
 19170                           ; BSR set to: 0
 19171                           ;rtcc_drv.c: 445: }
 19172                           
 19173                           ; BSR set to: 0
 19174                           ;rtcc_drv.c: 444: break;
 19175                           
 19176                           ;rtcc_drv.c: 443: default:
 19177                           
 19178                           ;rtcc_drv.c: 441: break;
 19179  0017EA  0012               	return	
 19180  0017EC                     l441:
 19181                           
 19182                           ; BSR set to: 0
 19183  0017EC  0100               	movlb	0	; () banked
 19184  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19185                           
 19186                           ; Switch size 1, requested type "space"
 19187                           ; Number of cases is 7, Range of values is 0 to 6
 19188                           ; switch strategies available:
 19189                           ; Name         Instructions Cycles
 19190                           ; simple_byte           22    12 (average)
 19191                           ;	Chosen strategy is simple_byte
 19192  0017F0  0A00               	xorlw	0	; case 0
 19193  0017F2  B4D8               	btfsc	status,2,c
 19194  0017F4  D6FF               	goto	l442
 19195  0017F6  0A01               	xorlw	1	; case 1
 19196  0017F8  B4D8               	btfsc	status,2,c
 19197  0017FA  D720               	goto	l444
 19198  0017FC  0A03               	xorlw	3	; case 2
 19199  0017FE  B4D8               	btfsc	status,2,c
 19200  001800  D741               	goto	l445
 19201  001802  0A01               	xorlw	1	; case 3
 19202  001804  B4D8               	btfsc	status,2,c
 19203  001806  D762               	goto	l446
 19204  001808  0A07               	xorlw	7	; case 4
 19205  00180A  B4D8               	btfsc	status,2,c
 19206  00180C  D783               	goto	l447
 19207  00180E  0A01               	xorlw	1	; case 5
 19208  001810  B4D8               	btfsc	status,2,c
 19209  001812  D7A4               	goto	l448
 19210  001814  0A03               	xorlw	3	; case 6
 19211  001816  A4D8               	btfss	status,2,c
 19212  001818  0012               	return	
 19213  00181A  D7C4               	goto	l449
 19214  00181C                     __end_of_Rtcc_SetRtccValue:
 19215                           	opt stack 0
 19216                           tosu	equ	0xFFF
 19217                           tosh	equ	0xFFE
 19218                           tosl	equ	0xFFD
 19219                           pclath	equ	0xFFA
 19220                           tblptru	equ	0xFF8
 19221                           tblptrh	equ	0xFF7
 19222                           tblptrl	equ	0xFF6
 19223                           tablat	equ	0xFF5
 19224                           prodh	equ	0xFF4
 19225                           prodl	equ	0xFF3
 19226                           intcon	equ	0xFF2
 19227                           intcon2	equ	0xFF1
 19228                           intcon3	equ	0xFF0
 19229                           indf0	equ	0xFEF
 19230                           postinc0	equ	0xFEE
 19231                           plusw0	equ	0xFEB
 19232                           fsr0h	equ	0xFEA
 19233                           fsr0l	equ	0xFE9
 19234                           wreg	equ	0xFE8
 19235                           indf1	equ	0xFE7
 19236                           postinc1	equ	0xFE6
 19237                           postdec1	equ	0xFE5
 19238                           plusw1	equ	0xFE3
 19239                           fsr1h	equ	0xFE2
 19240                           fsr1l	equ	0xFE1
 19241                           indf2	equ	0xFDF
 19242                           postinc2	equ	0xFDE
 19243                           postdec2	equ	0xFDD
 19244                           plusw2	equ	0xFDB
 19245                           fsr2h	equ	0xFDA
 19246                           fsr2l	equ	0xFD9
 19247                           status	equ	0xFD8
 19248                           
 19249 ;; *************** function ___awmod *****************
 19250 ;; Defined at:
 19251 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19252 ;; Parameters:    Size  Location     Type
 19253 ;;  dividend        2   29[BANK0 ] int 
 19254 ;;  divisor         2   31[BANK0 ] int 
 19255 ;; Auto vars:     Size  Location     Type
 19256 ;;  sign            1   34[BANK0 ] unsigned char 
 19257 ;;  counter         1   33[BANK0 ] unsigned char 
 19258 ;; Return value:  Size  Location     Type
 19259 ;;                  2   29[BANK0 ] int 
 19260 ;; Registers used:
 19261 ;;		wreg, status,2, status,0
 19262 ;; Tracked objects:
 19263 ;;		On entry : 0/0
 19264 ;;		On exit  : 0/0
 19265 ;;		Unchanged: 0/0
 19266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19268 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19270 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19271 ;;Total ram usage:        6 bytes
 19272 ;; Hardware stack levels used:    1
 19273 ;; Hardware stack levels required when called:   11
 19274 ;; This function calls:
 19275 ;;		Nothing
 19276 ;; This function is called by:
 19277 ;;		_Rtcc_SetRtccValue
 19278 ;;		_Rtcc_SetRtccAlarm
 19279 ;; This function uses a non-reentrant model
 19280 ;;
 19281                           
 19282                           	psect	text84
 19283  004A5E                     __ptext84:
 19284                           	opt stack 0
 19285  004A5E                     ___awmod:
 19286                           	opt stack 14
 19287                           
 19288                           ; BSR set to: 0
 19289                           ;incstack = 0
 19290  004A5E  0E00               	movlw	0
 19291  004A60  0100               	movlb	0	; () banked
 19292  004A62  6F82               	movwf	___awmod@sign& (0+255),b
 19293                           
 19294                           ; BSR set to: 0
 19295  004A64  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19296  004A66  D006               	goto	l2750
 19297                           
 19298                           ; BSR set to: 0
 19299  004A68  6D7D               	negf	___awmod@dividend& (0+255),b
 19300  004A6A  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19301  004A6C  B0D8               	btfsc	status,0,c
 19302  004A6E  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19303                           
 19304                           ; BSR set to: 0
 19305  004A70  0E01               	movlw	1
 19306  004A72  6F82               	movwf	___awmod@sign& (0+255),b
 19307  004A74                     l2750:
 19308                           
 19309                           ; BSR set to: 0
 19310                           
 19311                           ; BSR set to: 0
 19312  004A74  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19313  004A76  D004               	goto	l2751
 19314                           
 19315                           ; BSR set to: 0
 19316  004A78  6D7F               	negf	___awmod@divisor& (0+255),b
 19317  004A7A  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19318  004A7C  B0D8               	btfsc	status,0,c
 19319  004A7E  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19320  004A80                     l2751:
 19321                           
 19322                           ; BSR set to: 0
 19323                           
 19324                           ; BSR set to: 0
 19325  004A80  517F               	movf	___awmod@divisor& (0+255),w,b
 19326  004A82  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19327  004A84  B4D8               	btfsc	status,2,c
 19328  004A86  D018               	goto	l2758
 19329                           
 19330                           ; BSR set to: 0
 19331  004A88  0E01               	movlw	1
 19332  004A8A  6F81               	movwf	___awmod@counter& (0+255),b
 19333  004A8C  D004               	goto	l2753
 19334  004A8E                     
 19335                           ; BSR set to: 0
 19336                           
 19337                           ; BSR set to: 0
 19338  004A8E  90D8               	bcf	status,0,c
 19339  004A90  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19340  004A92  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19341  004A94  2B81               	incf	___awmod@counter& (0+255),f,b
 19342  004A96                     l2753:
 19343                           
 19344                           ; BSR set to: 0
 19345                           
 19346                           ; BSR set to: 0
 19347  004A96  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19348  004A98  D7FA               	goto	l2754
 19349  004A9A                     u6800:
 19350                           
 19351                           ; BSR set to: 0
 19352                           
 19353                           ; BSR set to: 0
 19354                           
 19355                           ; BSR set to: 0
 19356  004A9A  517F               	movf	___awmod@divisor& (0+255),w,b
 19357  004A9C  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19358  004A9E  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19359  004AA0  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19360  004AA2  A0D8               	btfss	status,0,c
 19361  004AA4  D004               	goto	l2757
 19362                           
 19363                           ; BSR set to: 0
 19364  004AA6  517F               	movf	___awmod@divisor& (0+255),w,b
 19365  004AA8  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19366  004AAA  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19367  004AAC  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19368  004AAE                     l2757:
 19369                           
 19370                           ; BSR set to: 0
 19371                           
 19372                           ; BSR set to: 0
 19373  004AAE  90D8               	bcf	status,0,c
 19374  004AB0  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19375  004AB2  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19376                           
 19377                           ; BSR set to: 0
 19378  004AB4  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19379  004AB6  D7F1               	goto	u6800
 19380  004AB8                     l2758:
 19381                           
 19382                           ; BSR set to: 0
 19383                           
 19384                           ; BSR set to: 0
 19385                           
 19386                           ; BSR set to: 0
 19387  004AB8  5182               	movf	___awmod@sign& (0+255),w,b
 19388  004ABA  B4D8               	btfsc	status,2,c
 19389  004ABC  D004               	goto	l2759
 19390                           
 19391                           ; BSR set to: 0
 19392  004ABE  6D7D               	negf	___awmod@dividend& (0+255),b
 19393  004AC0  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19394  004AC2  B0D8               	btfsc	status,0,c
 19395  004AC4  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19396  004AC6                     l2759:
 19397                           
 19398                           ; BSR set to: 0
 19399                           
 19400                           ; BSR set to: 0
 19401  004AC6  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19402  004ACA  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19403  004ACE  0012               	return	
 19404  004AD0                     __end_of___awmod:
 19405                           	opt stack 0
 19406                           tosu	equ	0xFFF
 19407                           tosh	equ	0xFFE
 19408                           tosl	equ	0xFFD
 19409                           pclath	equ	0xFFA
 19410                           tblptru	equ	0xFF8
 19411                           tblptrh	equ	0xFF7
 19412                           tblptrl	equ	0xFF6
 19413                           tablat	equ	0xFF5
 19414                           prodh	equ	0xFF4
 19415                           prodl	equ	0xFF3
 19416                           intcon	equ	0xFF2
 19417                           intcon2	equ	0xFF1
 19418                           intcon3	equ	0xFF0
 19419                           indf0	equ	0xFEF
 19420                           postinc0	equ	0xFEE
 19421                           plusw0	equ	0xFEB
 19422                           fsr0h	equ	0xFEA
 19423                           fsr0l	equ	0xFE9
 19424                           wreg	equ	0xFE8
 19425                           indf1	equ	0xFE7
 19426                           postinc1	equ	0xFE6
 19427                           postdec1	equ	0xFE5
 19428                           plusw1	equ	0xFE3
 19429                           fsr1h	equ	0xFE2
 19430                           fsr1l	equ	0xFE1
 19431                           indf2	equ	0xFDF
 19432                           postinc2	equ	0xFDE
 19433                           postdec2	equ	0xFDD
 19434                           plusw2	equ	0xFDB
 19435                           fsr2h	equ	0xFDA
 19436                           fsr2l	equ	0xFD9
 19437                           status	equ	0xFD8
 19438                           
 19439 ;; *************** function ___awdiv *****************
 19440 ;; Defined at:
 19441 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19442 ;; Parameters:    Size  Location     Type
 19443 ;;  dividend        2   29[BANK0 ] int 
 19444 ;;  divisor         2   31[BANK0 ] int 
 19445 ;; Auto vars:     Size  Location     Type
 19446 ;;  quotient        2   35[BANK0 ] int 
 19447 ;;  sign            1   34[BANK0 ] unsigned char 
 19448 ;;  counter         1   33[BANK0 ] unsigned char 
 19449 ;; Return value:  Size  Location     Type
 19450 ;;                  2   29[BANK0 ] int 
 19451 ;; Registers used:
 19452 ;;		wreg, status,2, status,0
 19453 ;; Tracked objects:
 19454 ;;		On entry : 0/0
 19455 ;;		On exit  : 0/0
 19456 ;;		Unchanged: 0/0
 19457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19459 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19461 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19462 ;;Total ram usage:        8 bytes
 19463 ;; Hardware stack levels used:    1
 19464 ;; Hardware stack levels required when called:   11
 19465 ;; This function calls:
 19466 ;;		Nothing
 19467 ;; This function is called by:
 19468 ;;		_Rtcc_SetRtccValue
 19469 ;;		_Rtcc_SetRtccAlarm
 19470 ;; This function uses a non-reentrant model
 19471 ;;
 19472                           
 19473                           	psect	text85
 19474  0048D2                     __ptext85:
 19475                           	opt stack 0
 19476  0048D2                     ___awdiv:
 19477                           	opt stack 14
 19478                           
 19479                           ; BSR set to: 0
 19480                           ;incstack = 0
 19481  0048D2  0E00               	movlw	0
 19482  0048D4  0100               	movlb	0	; () banked
 19483  0048D6  6F82               	movwf	___awdiv@sign& (0+255),b
 19484                           
 19485                           ; BSR set to: 0
 19486  0048D8  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19487  0048DA  D006               	goto	l2737
 19488                           
 19489                           ; BSR set to: 0
 19490  0048DC  6D7F               	negf	___awdiv@divisor& (0+255),b
 19491  0048DE  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19492  0048E0  B0D8               	btfsc	status,0,c
 19493  0048E2  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19494                           
 19495                           ; BSR set to: 0
 19496  0048E4  0E01               	movlw	1
 19497  0048E6  6F82               	movwf	___awdiv@sign& (0+255),b
 19498  0048E8                     l2737:
 19499                           
 19500                           ; BSR set to: 0
 19501                           
 19502                           ; BSR set to: 0
 19503  0048E8  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19504  0048EA  D006               	goto	l2738
 19505                           
 19506                           ; BSR set to: 0
 19507  0048EC  6D7D               	negf	___awdiv@dividend& (0+255),b
 19508  0048EE  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19509  0048F0  B0D8               	btfsc	status,0,c
 19510  0048F2  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19511                           
 19512                           ; BSR set to: 0
 19513  0048F4  0E01               	movlw	1
 19514  0048F6  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19515  0048F8                     l2738:
 19516                           
 19517                           ; BSR set to: 0
 19518                           
 19519                           ; BSR set to: 0
 19520  0048F8  0E00               	movlw	0
 19521  0048FA  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19522  0048FC  0E00               	movlw	0
 19523  0048FE  6F83               	movwf	___awdiv@quotient& (0+255),b
 19524                           
 19525                           ; BSR set to: 0
 19526  004900  517F               	movf	___awdiv@divisor& (0+255),w,b
 19527  004902  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19528  004904  B4D8               	btfsc	status,2,c
 19529  004906  D01C               	goto	l2745
 19530                           
 19531                           ; BSR set to: 0
 19532  004908  0E01               	movlw	1
 19533  00490A  6F81               	movwf	___awdiv@counter& (0+255),b
 19534  00490C  D004               	goto	l2740
 19535  00490E                     
 19536                           ; BSR set to: 0
 19537                           
 19538                           ; BSR set to: 0
 19539  00490E  90D8               	bcf	status,0,c
 19540  004910  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19541  004912  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19542  004914  2B81               	incf	___awdiv@counter& (0+255),f,b
 19543  004916                     l2740:
 19544                           
 19545                           ; BSR set to: 0
 19546                           
 19547                           ; BSR set to: 0
 19548  004916  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19549  004918  D7FA               	goto	l2741
 19550  00491A                     u6740:
 19551                           
 19552                           ; BSR set to: 0
 19553                           
 19554                           ; BSR set to: 0
 19555                           
 19556                           ; BSR set to: 0
 19557  00491A  90D8               	bcf	status,0,c
 19558  00491C  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19559  00491E  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19560                           
 19561                           ; BSR set to: 0
 19562  004920  517F               	movf	___awdiv@divisor& (0+255),w,b
 19563  004922  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19564  004924  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19565  004926  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19566  004928  A0D8               	btfss	status,0,c
 19567  00492A  D005               	goto	l2744
 19568                           
 19569                           ; BSR set to: 0
 19570  00492C  517F               	movf	___awdiv@divisor& (0+255),w,b
 19571  00492E  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19572  004930  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19573  004932  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19574                           
 19575                           ; BSR set to: 0
 19576  004934  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19577  004936                     l2744:
 19578                           
 19579                           ; BSR set to: 0
 19580                           
 19581                           ; BSR set to: 0
 19582  004936  90D8               	bcf	status,0,c
 19583  004938  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19584  00493A  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19585                           
 19586                           ; BSR set to: 0
 19587  00493C  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19588  00493E  D7ED               	goto	u6740
 19589  004940                     l2745:
 19590                           
 19591                           ; BSR set to: 0
 19592                           
 19593                           ; BSR set to: 0
 19594                           
 19595                           ; BSR set to: 0
 19596  004940  5182               	movf	___awdiv@sign& (0+255),w,b
 19597  004942  B4D8               	btfsc	status,2,c
 19598  004944  D004               	goto	l2746
 19599                           
 19600                           ; BSR set to: 0
 19601  004946  6D83               	negf	___awdiv@quotient& (0+255),b
 19602  004948  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19603  00494A  B0D8               	btfsc	status,0,c
 19604  00494C  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19605  00494E                     l2746:
 19606                           
 19607                           ; BSR set to: 0
 19608                           
 19609                           ; BSR set to: 0
 19610  00494E  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19611  004952  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19612  004956  0012               	return	
 19613  004958                     __end_of___awdiv:
 19614                           	opt stack 0
 19615                           tosu	equ	0xFFF
 19616                           tosh	equ	0xFFE
 19617                           tosl	equ	0xFFD
 19618                           pclath	equ	0xFFA
 19619                           tblptru	equ	0xFF8
 19620                           tblptrh	equ	0xFF7
 19621                           tblptrl	equ	0xFF6
 19622                           tablat	equ	0xFF5
 19623                           prodh	equ	0xFF4
 19624                           prodl	equ	0xFF3
 19625                           intcon	equ	0xFF2
 19626                           intcon2	equ	0xFF1
 19627                           intcon3	equ	0xFF0
 19628                           indf0	equ	0xFEF
 19629                           postinc0	equ	0xFEE
 19630                           plusw0	equ	0xFEB
 19631                           fsr0h	equ	0xFEA
 19632                           fsr0l	equ	0xFE9
 19633                           wreg	equ	0xFE8
 19634                           indf1	equ	0xFE7
 19635                           postinc1	equ	0xFE6
 19636                           postdec1	equ	0xFE5
 19637                           plusw1	equ	0xFE3
 19638                           fsr1h	equ	0xFE2
 19639                           fsr1l	equ	0xFE1
 19640                           indf2	equ	0xFDF
 19641                           postinc2	equ	0xFDE
 19642                           postdec2	equ	0xFDD
 19643                           plusw2	equ	0xFDB
 19644                           fsr2h	equ	0xFDA
 19645                           fsr2l	equ	0xFD9
 19646                           status	equ	0xFD8
 19647                           
 19648 ;; *************** function _Rtcc_LockRtc *****************
 19649 ;; Defined at:
 19650 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19651 ;; Parameters:    Size  Location     Type
 19652 ;;		None
 19653 ;; Auto vars:     Size  Location     Type
 19654 ;;		None
 19655 ;; Return value:  Size  Location     Type
 19656 ;;                  1    wreg      void 
 19657 ;; Registers used:
 19658 ;;		None
 19659 ;; Tracked objects:
 19660 ;;		On entry : 0/0
 19661 ;;		On exit  : 0/0
 19662 ;;		Unchanged: 0/0
 19663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19668 ;;Total ram usage:        0 bytes
 19669 ;; Hardware stack levels used:    1
 19670 ;; Hardware stack levels required when called:   11
 19671 ;; This function calls:
 19672 ;;		Nothing
 19673 ;; This function is called by:
 19674 ;;		_Rtcm_MainTask
 19675 ;;		_Rtcm_SetRtccDate
 19676 ;;		_Rtcm_SetRtccAlarm
 19677 ;; This function uses a non-reentrant model
 19678 ;;
 19679                           
 19680                           	psect	text86
 19681  005DB4                     __ptext86:
 19682                           	opt stack 0
 19683  005DB4                     _Rtcc_LockRtc:
 19684                           	opt stack 15
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;incstack = 0
 19688  005DB4  010F               	movlb	15	;# 
 19689  005DB6  0E55               	movlw	85	;# 
 19690  005DB8  6EA7               	movwf	4007,c	;# 
 19691  005DBA  0EAA               	movlw	170	;# 
 19692  005DBC  6EA7               	movwf	4007,c	;# 
 19693                           
 19694                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19695  005DBE  010F               	movlb	15	; () banked
 19696  005DC0  9B3F               	bcf	63,5,b	;volatile
 19697                           
 19698                           ; BSR set to: 15
 19699  005DC2  0012               	return		;funcret
 19700  005DC4                     __end_of_Rtcc_LockRtc:
 19701                           	opt stack 0
 19702                           tosu	equ	0xFFF
 19703                           tosh	equ	0xFFE
 19704                           tosl	equ	0xFFD
 19705                           pclath	equ	0xFFA
 19706                           tblptru	equ	0xFF8
 19707                           tblptrh	equ	0xFF7
 19708                           tblptrl	equ	0xFF6
 19709                           tablat	equ	0xFF5
 19710                           prodh	equ	0xFF4
 19711                           prodl	equ	0xFF3
 19712                           intcon	equ	0xFF2
 19713                           intcon2	equ	0xFF1
 19714                           intcon3	equ	0xFF0
 19715                           indf0	equ	0xFEF
 19716                           postinc0	equ	0xFEE
 19717                           plusw0	equ	0xFEB
 19718                           fsr0h	equ	0xFEA
 19719                           fsr0l	equ	0xFE9
 19720                           wreg	equ	0xFE8
 19721                           indf1	equ	0xFE7
 19722                           postinc1	equ	0xFE6
 19723                           postdec1	equ	0xFE5
 19724                           plusw1	equ	0xFE3
 19725                           fsr1h	equ	0xFE2
 19726                           fsr1l	equ	0xFE1
 19727                           indf2	equ	0xFDF
 19728                           postinc2	equ	0xFDE
 19729                           postdec2	equ	0xFDD
 19730                           plusw2	equ	0xFDB
 19731                           fsr2h	equ	0xFDA
 19732                           fsr2l	equ	0xFD9
 19733                           status	equ	0xFD8
 19734                           
 19735 ;; *************** function _Rtcm_GetRtccDate *****************
 19736 ;; Defined at:
 19737 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19738 ;; Parameters:    Size  Location     Type
 19739 ;;		None
 19740 ;; Auto vars:     Size  Location     Type
 19741 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19742 ;; Return value:  Size  Location     Type
 19743 ;;                  8   33[BANK0 ] struct _RtccDateType
 19744 ;; Registers used:
 19745 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19746 ;; Tracked objects:
 19747 ;;		On entry : 0/0
 19748 ;;		On exit  : 0/0
 19749 ;;		Unchanged: 0/0
 19750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19751 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19752 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19753 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19754 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19755 ;;Total ram usage:       17 bytes
 19756 ;; Hardware stack levels used:    1
 19757 ;; Hardware stack levels required when called:   12
 19758 ;; This function calls:
 19759 ;;		_Rtcc_GetRtccValue
 19760 ;; This function is called by:
 19761 ;;		_Rtcm_MainTask
 19762 ;; This function uses a non-reentrant model
 19763 ;;
 19764                           
 19765                           	psect	text87
 19766  004CF0                     __ptext87:
 19767                           	opt stack 0
 19768  004CF0                     _Rtcm_GetRtccDate:
 19769                           	opt stack 15
 19770                           
 19771                           ;rtcm.c: 204: RtccDateType LocalDate;
 19772                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19773                           
 19774                           ; BSR set to: 15
 19775                           ;incstack = 0
 19776  004CF0  0E00               	movlw	0
 19777  004CF2  EC4A  F023         	call	_Rtcc_GetRtccValue
 19778  004CF6  0100               	movlb	0	; () banked
 19779  004CF8  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19780  004CFA  0ED0               	movlw	208
 19781  004CFC  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19782  004CFE  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19783  004D00  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19784  004D02  0E07               	movlw	7
 19785  004D04  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19786                           
 19787                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19788  004D06  0E01               	movlw	1
 19789  004D08  EC4A  F023         	call	_Rtcc_GetRtccValue
 19790  004D0C  0100               	movlb	0	; () banked
 19791  004D0E  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19792                           
 19793                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19794  004D10  0E02               	movlw	2
 19795  004D12  EC4A  F023         	call	_Rtcc_GetRtccValue
 19796  004D16  0100               	movlb	0	; () banked
 19797  004D18  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19798                           
 19799                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19800  004D1A  0E03               	movlw	3
 19801  004D1C  EC4A  F023         	call	_Rtcc_GetRtccValue
 19802  004D20  0100               	movlb	0	; () banked
 19803  004D22  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19804                           
 19805                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19806  004D24  0E04               	movlw	4
 19807  004D26  EC4A  F023         	call	_Rtcc_GetRtccValue
 19808  004D2A  0100               	movlb	0	; () banked
 19809  004D2C  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19810                           
 19811                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19812  004D2E  0E05               	movlw	5
 19813  004D30  EC4A  F023         	call	_Rtcc_GetRtccValue
 19814  004D34  0100               	movlb	0	; () banked
 19815  004D36  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19816                           
 19817                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19818  004D38  0E06               	movlw	6
 19819  004D3A  EC4A  F023         	call	_Rtcc_GetRtccValue
 19820  004D3E  0100               	movlb	0	; () banked
 19821  004D40  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19822                           
 19823                           ; BSR set to: 0
 19824                           ;rtcm.c: 216: return LocalDate;
 19825  004D42  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19826  004D46  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19827  004D4A  0E07               	movlw	7
 19828  004D4C                     u8961:
 19829  004D4C  CFDB FFEB          	movff	plusw2,plusw0
 19830  004D50  06E8               	decf	wreg,f,c
 19831  004D52  E2FC               	bc	u8961
 19832  004D54  0012               	return	
 19833  004D56                     __end_of_Rtcm_GetRtccDate:
 19834                           	opt stack 0
 19835                           tosu	equ	0xFFF
 19836                           tosh	equ	0xFFE
 19837                           tosl	equ	0xFFD
 19838                           pclath	equ	0xFFA
 19839                           tblptru	equ	0xFF8
 19840                           tblptrh	equ	0xFF7
 19841                           tblptrl	equ	0xFF6
 19842                           tablat	equ	0xFF5
 19843                           prodh	equ	0xFF4
 19844                           prodl	equ	0xFF3
 19845                           intcon	equ	0xFF2
 19846                           intcon2	equ	0xFF1
 19847                           intcon3	equ	0xFF0
 19848                           indf0	equ	0xFEF
 19849                           postinc0	equ	0xFEE
 19850                           plusw0	equ	0xFEB
 19851                           fsr0h	equ	0xFEA
 19852                           fsr0l	equ	0xFE9
 19853                           wreg	equ	0xFE8
 19854                           indf1	equ	0xFE7
 19855                           postinc1	equ	0xFE6
 19856                           postdec1	equ	0xFE5
 19857                           plusw1	equ	0xFE3
 19858                           fsr1h	equ	0xFE2
 19859                           fsr1l	equ	0xFE1
 19860                           indf2	equ	0xFDF
 19861                           postinc2	equ	0xFDE
 19862                           postdec2	equ	0xFDD
 19863                           plusw2	equ	0xFDB
 19864                           fsr2h	equ	0xFDA
 19865                           fsr2l	equ	0xFD9
 19866                           status	equ	0xFD8
 19867                           
 19868 ;; *************** function _Rtcc_GetRtccValue *****************
 19869 ;; Defined at:
 19870 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19871 ;; Parameters:    Size  Location     Type
 19872 ;;  RtccPtrVal      1    wreg     enum E7757
 19873 ;; Auto vars:     Size  Location     Type
 19874 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19875 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19876 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19877 ;; Return value:  Size  Location     Type
 19878 ;;                  1    wreg      unsigned char 
 19879 ;; Registers used:
 19880 ;;		wreg, status,2, status,0, prodl, prodh
 19881 ;; Tracked objects:
 19882 ;;		On entry : 0/0
 19883 ;;		On exit  : 0/0
 19884 ;;		Unchanged: 0/0
 19885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19887 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19888 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19889 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19890 ;;Total ram usage:        4 bytes
 19891 ;; Hardware stack levels used:    1
 19892 ;; Hardware stack levels required when called:   11
 19893 ;; This function calls:
 19894 ;;		Nothing
 19895 ;; This function is called by:
 19896 ;;		_Rtcm_GetRtccDate
 19897 ;; This function uses a non-reentrant model
 19898 ;;
 19899                           
 19900                           	psect	text88
 19901  004694                     __ptext88:
 19902                           	opt stack 0
 19903  004694                     _Rtcc_GetRtccValue:
 19904                           	opt stack 15
 19905                           
 19906                           ; BSR set to: 0
 19907                           ;incstack = 0
 19908                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19909  004694  0100               	movlb	0	; () banked
 19910  004696  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19911                           
 19912                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19913                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19914                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19915  004698  D02D               	goto	l416
 19916  00469A                     l417:
 19917                           
 19918                           ; BSR set to: 0
 19919                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19920  00469A  010F               	movlb	15	; () banked
 19921  00469C  833F               	bsf	63,1,b	;volatile
 19922  00469E                     
 19923                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19924  00469E  813F               	bsf	63,0,b	;volatile
 19925  0046A0  D01C               	goto	L20
 19926  0046A2                     l419:
 19927                           
 19928                           ; BSR set to: 0
 19929                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19930  0046A2  010F               	movlb	15	; () banked
 19931  0046A4  833F               	bsf	63,1,b	;volatile
 19932  0046A6  D01E               	goto	L21
 19933  0046A8                     l420:
 19934                           
 19935                           ; BSR set to: 0
 19936                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19937  0046A8  010F               	movlb	15	; () banked
 19938  0046AA  833F               	bsf	63,1,b	;volatile
 19939  0046AC  D021               	goto	L24
 19940  0046AE                     l8909:
 19941                           
 19942                           ; BSR set to: 15
 19943                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19944  0046AE  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19945  0046B2  0E0F               	movlw	15
 19946  0046B4  0100               	movlb	0	; () banked
 19947  0046B6  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19948  0046B8  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19949  0046BA  0B0F               	andlw	15
 19950  0046BC  0B0F               	andlw	15
 19951  0046BE  0D0A               	mullw	10
 19952  0046C0  50F3               	movf	prodl,w,c
 19953  0046C2  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19954  0046C4  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19955                           
 19956                           ;rtcc_drv.c: 241: break;
 19957  0046C6  D02D               	goto	l418
 19958  0046C8                     l421:
 19959                           
 19960                           ; BSR set to: 0
 19961                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19962  0046C8  010F               	movlb	15	; () banked
 19963  0046CA  933F               	bcf	63,1,b	;volatile
 19964                           
 19965                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19966  0046CC  813F               	bsf	63,0,b	;volatile
 19967                           
 19968                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19969  0046CE  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19970                           
 19971                           ;rtcc_drv.c: 249: break;
 19972  0046D2  D027               	goto	l418
 19973  0046D4                     l422:
 19974                           
 19975                           ; BSR set to: 0
 19976                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19977  0046D4  010F               	movlb	15	; () banked
 19978  0046D6  933F               	bcf	63,1,b	;volatile
 19979  0046D8  D7E2               	goto	L22
 19980  0046DA                     L20:
 19981                           
 19982                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19983  0046DA  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19984  0046DE  D7E7               	goto	l8909
 19985  0046E0                     l423:
 19986                           
 19987                           ; BSR set to: 0
 19988                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19989  0046E0  010F               	movlb	15	; () banked
 19990  0046E2  933F               	bcf	63,1,b	;volatile
 19991  0046E4                     L21:
 19992                           
 19993                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19994  0046E4  913F               	bcf	63,0,b	;volatile
 19995                           
 19996                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19997  0046E6  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19998  0046EA  D7E1               	goto	l8909
 19999  0046EC                     l424:
 20000                           
 20001                           ; BSR set to: 0
 20002                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20003  0046EC  010F               	movlb	15	; () banked
 20004  0046EE  933F               	bcf	63,1,b	;volatile
 20005  0046F0                     L24:
 20006                           
 20007                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20008  0046F0  913F               	bcf	63,0,b	;volatile
 20009  0046F2  D7F3               	goto	L20
 20010  0046F4                     l416:
 20011                           
 20012                           ; BSR set to: 0
 20013  0046F4  0100               	movlb	0	; () banked
 20014  0046F6  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20015                           
 20016                           ; Switch size 1, requested type "space"
 20017                           ; Number of cases is 7, Range of values is 0 to 6
 20018                           ; switch strategies available:
 20019                           ; Name         Instructions Cycles
 20020                           ; simple_byte           22    12 (average)
 20021                           ;	Chosen strategy is simple_byte
 20022  0046F8  0A00               	xorlw	0	; case 0
 20023  0046FA  B4D8               	btfsc	status,2,c
 20024  0046FC  D7CE               	goto	l417
 20025  0046FE  0A01               	xorlw	1	; case 1
 20026  004700  B4D8               	btfsc	status,2,c
 20027  004702  D7CF               	goto	l419
 20028  004704  0A03               	xorlw	3	; case 2
 20029  004706  B4D8               	btfsc	status,2,c
 20030  004708  D7CF               	goto	l420
 20031  00470A  0A01               	xorlw	1	; case 3
 20032  00470C  B4D8               	btfsc	status,2,c
 20033  00470E  D7DC               	goto	l421
 20034  004710  0A07               	xorlw	7	; case 4
 20035  004712  B4D8               	btfsc	status,2,c
 20036  004714  D7DF               	goto	l422
 20037  004716  0A01               	xorlw	1	; case 5
 20038  004718  B4D8               	btfsc	status,2,c
 20039  00471A  D7E2               	goto	l423
 20040  00471C  0A03               	xorlw	3	; case 6
 20041  00471E  B4D8               	btfsc	status,2,c
 20042  004720  D7E5               	goto	l424
 20043  004722                     l418:
 20044                           
 20045                           ;rtcc_drv.c: 286: return RetValue;
 20046                           
 20047                           ; BSR set to: 0
 20048  004722  0100               	movlb	0	; () banked
 20049  004724  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20050  004726  0012               	return	
 20051  004728                     __end_of_Rtcc_GetRtccValue:
 20052                           	opt stack 0
 20053                           tosu	equ	0xFFF
 20054                           tosh	equ	0xFFE
 20055                           tosl	equ	0xFFD
 20056                           pclath	equ	0xFFA
 20057                           tblptru	equ	0xFF8
 20058                           tblptrh	equ	0xFF7
 20059                           tblptrl	equ	0xFF6
 20060                           tablat	equ	0xFF5
 20061                           prodh	equ	0xFF4
 20062                           prodl	equ	0xFF3
 20063                           intcon	equ	0xFF2
 20064                           intcon2	equ	0xFF1
 20065                           intcon3	equ	0xFF0
 20066                           indf0	equ	0xFEF
 20067                           postinc0	equ	0xFEE
 20068                           plusw0	equ	0xFEB
 20069                           fsr0h	equ	0xFEA
 20070                           fsr0l	equ	0xFE9
 20071                           wreg	equ	0xFE8
 20072                           indf1	equ	0xFE7
 20073                           postinc1	equ	0xFE6
 20074                           postdec1	equ	0xFE5
 20075                           plusw1	equ	0xFE3
 20076                           fsr1h	equ	0xFE2
 20077                           fsr1l	equ	0xFE1
 20078                           indf2	equ	0xFDF
 20079                           postinc2	equ	0xFDE
 20080                           postdec2	equ	0xFDD
 20081                           plusw2	equ	0xFDB
 20082                           fsr2h	equ	0xFDA
 20083                           fsr2l	equ	0xFD9
 20084                           status	equ	0xFD8
 20085                           
 20086 ;; *************** function _Rtcc_SetRtcStatus *****************
 20087 ;; Defined at:
 20088 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20089 ;; Parameters:    Size  Location     Type
 20090 ;;  Status          1    wreg     unsigned char 
 20091 ;; Auto vars:     Size  Location     Type
 20092 ;;  Status          1   29[BANK0 ] unsigned char 
 20093 ;; Return value:  Size  Location     Type
 20094 ;;                  1    wreg      void 
 20095 ;; Registers used:
 20096 ;;		wreg
 20097 ;; Tracked objects:
 20098 ;;		On entry : 0/0
 20099 ;;		On exit  : 0/0
 20100 ;;		Unchanged: 0/0
 20101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20105 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20106 ;;Total ram usage:        1 bytes
 20107 ;; Hardware stack levels used:    1
 20108 ;; Hardware stack levels required when called:   11
 20109 ;; This function calls:
 20110 ;;		Nothing
 20111 ;; This function is called by:
 20112 ;;		_Rtcm_MainTask
 20113 ;; This function uses a non-reentrant model
 20114 ;;
 20115                           
 20116                           	psect	text89
 20117  005D14                     __ptext89:
 20118                           	opt stack 0
 20119  005D14                     _Rtcc_SetRtcStatus:
 20120                           	opt stack 16
 20121                           
 20122                           ; BSR set to: 0
 20123                           ;incstack = 0
 20124                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20125  005D14  0100               	movlb	0	; () banked
 20126  005D16  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20127                           
 20128                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20129  005D18  0100               	movlb	0	; () banked
 20130  005D1A  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20131  005D1C  D003               	bra	u7915
 20132  005D1E  010F               	movlb	15	; () banked
 20133  005D20  9F3F               	bcf	63,7,b	;volatile
 20134  005D22  D002               	bra	u7916
 20135  005D24                     u7915:
 20136  005D24  010F               	movlb	15	; () banked
 20137  005D26  8F3F               	bsf	63,7,b	;volatile
 20138  005D28                     u7916:
 20139                           
 20140                           ; BSR set to: 15
 20141  005D28  0012               	return		;funcret
 20142  005D2A                     __end_of_Rtcc_SetRtcStatus:
 20143                           	opt stack 0
 20144                           tosu	equ	0xFFF
 20145                           tosh	equ	0xFFE
 20146                           tosl	equ	0xFFD
 20147                           pclath	equ	0xFFA
 20148                           tblptru	equ	0xFF8
 20149                           tblptrh	equ	0xFF7
 20150                           tblptrl	equ	0xFF6
 20151                           tablat	equ	0xFF5
 20152                           prodh	equ	0xFF4
 20153                           prodl	equ	0xFF3
 20154                           intcon	equ	0xFF2
 20155                           intcon2	equ	0xFF1
 20156                           intcon3	equ	0xFF0
 20157                           indf0	equ	0xFEF
 20158                           postinc0	equ	0xFEE
 20159                           plusw0	equ	0xFEB
 20160                           fsr0h	equ	0xFEA
 20161                           fsr0l	equ	0xFE9
 20162                           wreg	equ	0xFE8
 20163                           indf1	equ	0xFE7
 20164                           postinc1	equ	0xFE6
 20165                           postdec1	equ	0xFE5
 20166                           plusw1	equ	0xFE3
 20167                           fsr1h	equ	0xFE2
 20168                           fsr1l	equ	0xFE1
 20169                           indf2	equ	0xFDF
 20170                           postinc2	equ	0xFDE
 20171                           postdec2	equ	0xFDD
 20172                           plusw2	equ	0xFDB
 20173                           fsr2h	equ	0xFDA
 20174                           fsr2l	equ	0xFD9
 20175                           status	equ	0xFD8
 20176                           
 20177 ;; *************** function _Rtcc_RtcConfig *****************
 20178 ;; Defined at:
 20179 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20180 ;; Parameters:    Size  Location     Type
 20181 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20182 ;;		 -> RtcConfig(4), 
 20183 ;; Auto vars:     Size  Location     Type
 20184 ;;		None
 20185 ;; Return value:  Size  Location     Type
 20186 ;;                  1    wreg      void 
 20187 ;; Registers used:
 20188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20189 ;; Tracked objects:
 20190 ;;		On entry : 0/0
 20191 ;;		On exit  : 0/0
 20192 ;;		Unchanged: 0/0
 20193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20196 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20197 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20198 ;;Total ram usage:        3 bytes
 20199 ;; Hardware stack levels used:    1
 20200 ;; Hardware stack levels required when called:   12
 20201 ;; This function calls:
 20202 ;;		_RtccIrqInit
 20203 ;; This function is called by:
 20204 ;;		_Rtcm_MainTask
 20205 ;; This function uses a non-reentrant model
 20206 ;;
 20207                           
 20208                           	psect	text90
 20209  0042FE                     __ptext90:
 20210                           	opt stack 0
 20211  0042FE                     _Rtcc_RtcConfig:
 20212                           	opt stack 15
 20213                           
 20214                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20215                           
 20216                           ; BSR set to: 15
 20217                           ;incstack = 0
 20218  0042FE  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20219  004302  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20220  004306  50DF               	movf	indf2,w,c
 20221  004308  0100               	movlb	0	; () banked
 20222  00430A  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20223  00430C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20224  00430E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20225  004310  010F               	movlb	15	; () banked
 20226  004312  513F               	movf	63,w,b	;volatile
 20227  004314  0100               	movlb	0	; () banked
 20228  004316  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20229  004318  0BFB               	andlw	-5
 20230  00431A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20231  00431C  010F               	movlb	15	; () banked
 20232  00431E  6F3F               	movwf	63,b	;volatile
 20233                           
 20234                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20235  004320  0100               	movlb	0	; () banked
 20236  004322  EE20 F001          	lfsr	2,1
 20237  004326  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20238  004328  26D9               	addwf	fsr2l,f,c
 20239  00432A  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20240  00432C  22DA               	addwfc	fsr2h,f,c
 20241  00432E  50DF               	movf	indf2,w,c
 20242  004330  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20243  004332  0E01               	movlw	1
 20244  004334  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20245  004336  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20246  004338  010F               	movlb	15	; () banked
 20247  00433A  513C               	movf	60,w,b	;volatile
 20248  00433C  0100               	movlb	0	; () banked
 20249  00433E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20250  004340  0BFD               	andlw	-3
 20251  004342  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20252  004344  010F               	movlb	15	; () banked
 20253  004346  6F3C               	movwf	60,b	;volatile
 20254                           
 20255                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20256  004348  0100               	movlb	0	; () banked
 20257  00434A  EE20 F001          	lfsr	2,1
 20258  00434E  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20259  004350  26D9               	addwf	fsr2l,f,c
 20260  004352  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20261  004354  22DA               	addwfc	fsr2h,f,c
 20262  004356  50DF               	movf	indf2,w,c
 20263  004358  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20264  00435A  90D8               	bcf	status,0,c
 20265  00435C  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20266  00435E  0E01               	movlw	1
 20267  004360  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20268  004362  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20269  004364  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20270  004366  010F               	movlb	15	; () banked
 20271  004368  513C               	movf	60,w,b	;volatile
 20272  00436A  0100               	movlb	0	; () banked
 20273  00436C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20274  00436E  0BFB               	andlw	-5
 20275  004370  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20276  004372  010F               	movlb	15	; () banked
 20277  004374  6F3C               	movwf	60,b	;volatile
 20278                           
 20279                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20280  004376  0100               	movlb	0	; () banked
 20281  004378  EE20 F002          	lfsr	2,2
 20282  00437C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20283  00437E  26D9               	addwf	fsr2l,f,c
 20284  004380  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20285  004382  22DA               	addwfc	fsr2h,f,c
 20286  004384  04DE               	decf	postinc2,w,c
 20287  004386  A4D8               	btfss	status,2,c
 20288  004388  0012               	return	
 20289                           
 20290                           ; BSR set to: 0
 20291                           ;rtcc_drv.c: 115: {
 20292                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20293  00438A  EE20 F003          	lfsr	2,3
 20294  00438E  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20295  004390  26D9               	addwf	fsr2l,f,c
 20296  004392  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20297  004394  22DA               	addwfc	fsr2h,f,c
 20298  004396  50DF               	movf	indf2,w,c
 20299  004398  EC95  F02E         	call	_RtccIrqInit
 20300  00439C  0012               	return	
 20301  00439E                     __end_of_Rtcc_RtcConfig:
 20302                           	opt stack 0
 20303                           tosu	equ	0xFFF
 20304                           tosh	equ	0xFFE
 20305                           tosl	equ	0xFFD
 20306                           pclath	equ	0xFFA
 20307                           tblptru	equ	0xFF8
 20308                           tblptrh	equ	0xFF7
 20309                           tblptrl	equ	0xFF6
 20310                           tablat	equ	0xFF5
 20311                           prodh	equ	0xFF4
 20312                           prodl	equ	0xFF3
 20313                           intcon	equ	0xFF2
 20314                           intcon2	equ	0xFF1
 20315                           intcon3	equ	0xFF0
 20316                           indf0	equ	0xFEF
 20317                           postinc0	equ	0xFEE
 20318                           plusw0	equ	0xFEB
 20319                           fsr0h	equ	0xFEA
 20320                           fsr0l	equ	0xFE9
 20321                           wreg	equ	0xFE8
 20322                           indf1	equ	0xFE7
 20323                           postinc1	equ	0xFE6
 20324                           postdec1	equ	0xFE5
 20325                           plusw1	equ	0xFE3
 20326                           fsr1h	equ	0xFE2
 20327                           fsr1l	equ	0xFE1
 20328                           indf2	equ	0xFDF
 20329                           postinc2	equ	0xFDE
 20330                           postdec2	equ	0xFDD
 20331                           plusw2	equ	0xFDB
 20332                           fsr2h	equ	0xFDA
 20333                           fsr2l	equ	0xFD9
 20334                           status	equ	0xFD8
 20335                           
 20336 ;; *************** function _RtccIrqInit *****************
 20337 ;; Defined at:
 20338 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20339 ;; Parameters:    Size  Location     Type
 20340 ;;  Priority        1    wreg     enum E7716
 20341 ;; Auto vars:     Size  Location     Type
 20342 ;;  Priority        1   29[BANK0 ] enum E7716
 20343 ;; Return value:  Size  Location     Type
 20344 ;;                  1    wreg      void 
 20345 ;; Registers used:
 20346 ;;		wreg
 20347 ;; Tracked objects:
 20348 ;;		On entry : 0/0
 20349 ;;		On exit  : 0/0
 20350 ;;		Unchanged: 0/0
 20351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20355 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20356 ;;Total ram usage:        1 bytes
 20357 ;; Hardware stack levels used:    1
 20358 ;; Hardware stack levels required when called:   11
 20359 ;; This function calls:
 20360 ;;		Nothing
 20361 ;; This function is called by:
 20362 ;;		_Rtcc_RtcConfig
 20363 ;; This function uses a non-reentrant model
 20364 ;;
 20365                           
 20366                           	psect	text91
 20367  005D2A                     __ptext91:
 20368                           	opt stack 0
 20369  005D2A                     _RtccIrqInit:
 20370                           	opt stack 15
 20371                           
 20372                           ;incstack = 0
 20373                           ;RtccIrqInit@Priority stored from wreg
 20374  005D2A  0100               	movlb	0	; () banked
 20375  005D2C  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20376                           
 20377                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20378  005D2E  90A4               	bcf	4004,0,c	;volatile
 20379                           
 20380                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20381  005D30  0100               	movlb	0	; () banked
 20382  005D32  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20383  005D34  D002               	bra	u6955
 20384  005D36  90A5               	bcf	4005,0,c	;volatile
 20385  005D38  D001               	bra	u6956
 20386  005D3A                     u6955:
 20387  005D3A  80A5               	bsf	4005,0,c	;volatile
 20388  005D3C                     u6956:
 20389                           
 20390                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20391  005D3C  80A3               	bsf	4003,0,c	;volatile
 20392  005D3E  0012               	return		;funcret
 20393  005D40                     __end_of_RtccIrqInit:
 20394                           	opt stack 0
 20395                           tosu	equ	0xFFF
 20396                           tosh	equ	0xFFE
 20397                           tosl	equ	0xFFD
 20398                           pclath	equ	0xFFA
 20399                           tblptru	equ	0xFF8
 20400                           tblptrh	equ	0xFF7
 20401                           tblptrl	equ	0xFF6
 20402                           tablat	equ	0xFF5
 20403                           prodh	equ	0xFF4
 20404                           prodl	equ	0xFF3
 20405                           intcon	equ	0xFF2
 20406                           intcon2	equ	0xFF1
 20407                           intcon3	equ	0xFF0
 20408                           indf0	equ	0xFEF
 20409                           postinc0	equ	0xFEE
 20410                           plusw0	equ	0xFEB
 20411                           fsr0h	equ	0xFEA
 20412                           fsr0l	equ	0xFE9
 20413                           wreg	equ	0xFE8
 20414                           indf1	equ	0xFE7
 20415                           postinc1	equ	0xFE6
 20416                           postdec1	equ	0xFE5
 20417                           plusw1	equ	0xFE3
 20418                           fsr1h	equ	0xFE2
 20419                           fsr1l	equ	0xFE1
 20420                           indf2	equ	0xFDF
 20421                           postinc2	equ	0xFDE
 20422                           postdec2	equ	0xFDD
 20423                           plusw2	equ	0xFDB
 20424                           fsr2h	equ	0xFDA
 20425                           fsr2l	equ	0xFD9
 20426                           status	equ	0xFD8
 20427                           
 20428 ;; *************** function _Rtcc_AlarmConfig *****************
 20429 ;; Defined at:
 20430 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20431 ;; Parameters:    Size  Location     Type
 20432 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20433 ;;		 -> AlCfg(4), 
 20434 ;; Auto vars:     Size  Location     Type
 20435 ;;		None
 20436 ;; Return value:  Size  Location     Type
 20437 ;;                  1    wreg      void 
 20438 ;; Registers used:
 20439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20440 ;; Tracked objects:
 20441 ;;		On entry : 0/0
 20442 ;;		On exit  : 0/0
 20443 ;;		Unchanged: 0/0
 20444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20448 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20449 ;;Total ram usage:        3 bytes
 20450 ;; Hardware stack levels used:    1
 20451 ;; Hardware stack levels required when called:   11
 20452 ;; This function calls:
 20453 ;;		Nothing
 20454 ;; This function is called by:
 20455 ;;		_Rtcm_MainTask
 20456 ;; This function uses a non-reentrant model
 20457 ;;
 20458                           
 20459                           	psect	text92
 20460  004C1E                     __ptext92:
 20461                           	opt stack 0
 20462  004C1E                     _Rtcc_AlarmConfig:
 20463                           	opt stack 16
 20464                           
 20465                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20466                           
 20467                           ;incstack = 0
 20468  004C1E  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20469  004C22  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20470  004C26  50DF               	movf	indf2,w,c
 20471  004C28  0100               	movlb	0	; () banked
 20472  004C2A  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20473  004C2C  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20474  004C2E  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20475  004C30  5091               	movf	3985,w,c	;volatile
 20476  004C32  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20477  004C34  0B7F               	andlw	-129
 20478  004C36  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20479  004C38  6E91               	movwf	3985,c	;volatile
 20480                           
 20481                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20482  004C3A  EE20 F001          	lfsr	2,1
 20483  004C3E  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20484  004C40  26D9               	addwf	fsr2l,f,c
 20485  004C42  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20486  004C44  22DA               	addwfc	fsr2h,f,c
 20487  004C46  50DF               	movf	indf2,w,c
 20488  004C48  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20489  004C4A  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20490  004C4C  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20491  004C4E  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20492  004C50  5091               	movf	3985,w,c	;volatile
 20493  004C52  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20494  004C54  0BBF               	andlw	-65
 20495  004C56  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20496  004C58  6E91               	movwf	3985,c	;volatile
 20497                           
 20498                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20499  004C5A  EE20 F002          	lfsr	2,2
 20500  004C5E  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20501  004C60  26D9               	addwf	fsr2l,f,c
 20502  004C62  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20503  004C64  22DA               	addwfc	fsr2h,f,c
 20504  004C66  50DF               	movf	indf2,w,c
 20505  004C68  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20506  004C6A  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20507  004C6C  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20508  004C6E  5091               	movf	3985,w,c	;volatile
 20509  004C70  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20510  004C72  0BC3               	andlw	-61
 20511  004C74  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20512  004C76  6E91               	movwf	3985,c	;volatile
 20513                           
 20514                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20515  004C78  EE20 F003          	lfsr	2,3
 20516  004C7C  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20517  004C7E  26D9               	addwf	fsr2l,f,c
 20518  004C80  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20519  004C82  22DA               	addwfc	fsr2h,f,c
 20520  004C84  50DF               	movf	indf2,w,c
 20521  004C86  6E90               	movwf	3984,c	;volatile
 20522                           
 20523                           ; BSR set to: 0
 20524  004C88  0012               	return		;funcret
 20525  004C8A                     __end_of_Rtcc_AlarmConfig:
 20526                           	opt stack 0
 20527                           tosu	equ	0xFFF
 20528                           tosh	equ	0xFFE
 20529                           tosl	equ	0xFFD
 20530                           pclath	equ	0xFFA
 20531                           tblptru	equ	0xFF8
 20532                           tblptrh	equ	0xFF7
 20533                           tblptrl	equ	0xFF6
 20534                           tablat	equ	0xFF5
 20535                           prodh	equ	0xFF4
 20536                           prodl	equ	0xFF3
 20537                           intcon	equ	0xFF2
 20538                           intcon2	equ	0xFF1
 20539                           intcon3	equ	0xFF0
 20540                           indf0	equ	0xFEF
 20541                           postinc0	equ	0xFEE
 20542                           plusw0	equ	0xFEB
 20543                           fsr0h	equ	0xFEA
 20544                           fsr0l	equ	0xFE9
 20545                           wreg	equ	0xFE8
 20546                           indf1	equ	0xFE7
 20547                           postinc1	equ	0xFE6
 20548                           postdec1	equ	0xFE5
 20549                           plusw1	equ	0xFE3
 20550                           fsr1h	equ	0xFE2
 20551                           fsr1l	equ	0xFE1
 20552                           indf2	equ	0xFDF
 20553                           postinc2	equ	0xFDE
 20554                           postdec2	equ	0xFDD
 20555                           plusw2	equ	0xFDB
 20556                           fsr2h	equ	0xFDA
 20557                           fsr2l	equ	0xFD9
 20558                           status	equ	0xFD8
 20559                           
 20560 ;; *************** function _triggerRelay *****************
 20561 ;; Defined at:
 20562 ;;		line 71 in file "../Source/c/04_App/app.c"
 20563 ;; Parameters:    Size  Location     Type
 20564 ;;  realyId         1    wreg     unsigned char 
 20565 ;;  isRelayOn       1   37[BANK0 ] unsigned char 
 20566 ;; Auto vars:     Size  Location     Type
 20567 ;;  realyId         1   39[BANK0 ] unsigned char 
 20568 ;;  txBuffer        2   40[BANK0 ] unsigned char [2]
 20569 ;;  res             1   38[BANK0 ] unsigned char 
 20570 ;; Return value:  Size  Location     Type
 20571 ;;                  1    wreg      unsigned char 
 20572 ;; Registers used:
 20573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20574 ;; Tracked objects:
 20575 ;;		On entry : 0/0
 20576 ;;		On exit  : 0/0
 20577 ;;		Unchanged: 0/0
 20578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20579 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20580 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20582 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20583 ;;Total ram usage:        5 bytes
 20584 ;; Hardware stack levels used:    1
 20585 ;; Hardware stack levels required when called:   13
 20586 ;; This function calls:
 20587 ;;		_I2cSlv_SendI2cMsg
 20588 ;; This function is called by:
 20589 ;;		_MyApp_Task
 20590 ;; This function uses a non-reentrant model
 20591 ;;
 20592                           
 20593                           	psect	text93
 20594  0057BE                     __ptext93:
 20595                           	opt stack 0
 20596  0057BE                     _triggerRelay:
 20597                           	opt stack 14
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;incstack = 0
 20601                           ;triggerRelay@realyId stored from wreg
 20602  0057BE  0100               	movlb	0	; () banked
 20603  0057C0  6F87               	movwf	triggerRelay@realyId& (0+255),b
 20604                           
 20605                           ;app.c: 73: uint8_t txBuffer[2] = {((UINT8)(0x50)), 0x00};
 20606  0057C2  C3D1  F088         	movff	triggerRelay@F8966,triggerRelay@txBuffer
 20607  0057C6  C3D2  F089         	movff	triggerRelay@F8966+1,triggerRelay@txBuffer+1
 20608                           
 20609                           ;app.c: 74: uint8_t res = 0u;
 20610  0057CA  0E00               	movlw	0
 20611  0057CC  0100               	movlb	0	; () banked
 20612  0057CE  6F86               	movwf	triggerRelay@res& (0+255),b
 20613                           
 20614                           ; BSR set to: 0
 20615                           ;app.c: 75: if (isRelayOn)
 20616  0057D0  5185               	movf	triggerRelay@isRelayOn& (0+255),w,b
 20617  0057D2  B4D8               	btfsc	status,2,c
 20618  0057D4  D002               	goto	l2498
 20619                           
 20620                           ; BSR set to: 0
 20621                           ;app.c: 76: {
 20622                           ;app.c: 77: txBuffer[1] = 0x01;
 20623  0057D6  0E01               	movlw	1
 20624  0057D8  6F89               	movwf	(triggerRelay@txBuffer+1)& (0+255),b
 20625  0057DA                     l2498:
 20626                           
 20627                           ; BSR set to: 0
 20628                           ;app.c: 78: }
 20629                           ;app.c: 79: res = I2cSlv_SendI2cMsg(txBuffer, realyId, 2);
 20630                           
 20631                           ; BSR set to: 0
 20632  0057DA  0E88               	movlw	low triggerRelay@txBuffer
 20633  0057DC  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 20634  0057DE  0E00               	movlw	high triggerRelay@txBuffer
 20635  0057E0  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 20636  0057E2  C087  F082         	movff	triggerRelay@realyId,I2cSlv_SendI2cMsg@SlaveAddr
 20637  0057E6  0E02               	movlw	2
 20638  0057E8  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 20639  0057EA  EC2A  F02B         	call	_I2cSlv_SendI2cMsg	;wreg free
 20640  0057EE  0100               	movlb	0	; () banked
 20641  0057F0  6F86               	movwf	triggerRelay@res& (0+255),b
 20642  0057F2  0012               	return	
 20643  0057F4                     __end_of_triggerRelay:
 20644                           	opt stack 0
 20645                           tosu	equ	0xFFF
 20646                           tosh	equ	0xFFE
 20647                           tosl	equ	0xFFD
 20648                           pclath	equ	0xFFA
 20649                           tblptru	equ	0xFF8
 20650                           tblptrh	equ	0xFF7
 20651                           tblptrl	equ	0xFF6
 20652                           tablat	equ	0xFF5
 20653                           prodh	equ	0xFF4
 20654                           prodl	equ	0xFF3
 20655                           intcon	equ	0xFF2
 20656                           intcon2	equ	0xFF1
 20657                           intcon3	equ	0xFF0
 20658                           indf0	equ	0xFEF
 20659                           postinc0	equ	0xFEE
 20660                           plusw0	equ	0xFEB
 20661                           fsr0h	equ	0xFEA
 20662                           fsr0l	equ	0xFE9
 20663                           wreg	equ	0xFE8
 20664                           indf1	equ	0xFE7
 20665                           postinc1	equ	0xFE6
 20666                           postdec1	equ	0xFE5
 20667                           plusw1	equ	0xFE3
 20668                           fsr1h	equ	0xFE2
 20669                           fsr1l	equ	0xFE1
 20670                           indf2	equ	0xFDF
 20671                           postinc2	equ	0xFDE
 20672                           postdec2	equ	0xFDD
 20673                           plusw2	equ	0xFDB
 20674                           fsr2h	equ	0xFDA
 20675                           fsr2l	equ	0xFD9
 20676                           status	equ	0xFD8
 20677                           
 20678 ;; *************** function _I2cSlv_SendI2cMsg *****************
 20679 ;; Defined at:
 20680 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 20681 ;; Parameters:    Size  Location     Type
 20682 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 20683 ;;		 -> MyApp_Task@on(2), MyApp_Task@off(2), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 20684 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 20685 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 20686 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 20687 ;; Auto vars:     Size  Location     Type
 20688 ;;  TxSts           1   36[BANK0 ] unsigned char 
 20689 ;; Return value:  Size  Location     Type
 20690 ;;                  1    wreg      unsigned char 
 20691 ;; Registers used:
 20692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20693 ;; Tracked objects:
 20694 ;;		On entry : 0/0
 20695 ;;		On exit  : 0/0
 20696 ;;		Unchanged: 0/0
 20697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20701 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20702 ;;Total ram usage:        5 bytes
 20703 ;; Hardware stack levels used:    1
 20704 ;; Hardware stack levels required when called:   12
 20705 ;; This function calls:
 20706 ;;		_GenerateEvt
 20707 ;; This function is called by:
 20708 ;;		_Terminal
 20709 ;;		_triggerRelay
 20710 ;;		_MyApp_Task
 20711 ;;		_I2cSlv_QueryI2cData
 20712 ;; This function uses a non-reentrant model
 20713 ;;
 20714                           
 20715                           	psect	text94
 20716  005654                     __ptext94:
 20717                           	opt stack 0
 20718  005654                     _I2cSlv_SendI2cMsg:
 20719                           	opt stack 13
 20720                           
 20721                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 20722                           
 20723                           ; BSR set to: 0
 20724                           ;incstack = 0
 20725  005654  0E00               	movlw	0
 20726  005656  0100               	movlb	0	; () banked
 20727  005658  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 20728                           
 20729                           ; BSR set to: 0
 20730                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 20731  00565A  05CC               	decf	_I2cComSts& (0+255),w,b
 20732  00565C  B4D8               	btfsc	status,2,c
 20733  00565E  D015               	goto	l1391
 20734                           
 20735                           ; BSR set to: 0
 20736                           ;i2c_slv.c: 257: {
 20737                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 20738  005660  C082  F3A8         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 20739                           
 20740                           ; BSR set to: 0
 20741                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 20742  005664  0E00               	movlw	0
 20743  005666  0103               	movlb	3	; () banked
 20744  005668  6FA9               	movwf	(_I2cTxPacket+1)& (0+255),b
 20745                           
 20746                           ; BSR set to: 3
 20747                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 20748  00566A  C083  F3AC         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 20749                           
 20750                           ; BSR set to: 3
 20751                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 20752  00566E  C080  F3AA         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 20753  005672  C081  F3AB         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 20754                           
 20755                           ; BSR set to: 3
 20756                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 20757  005676  0ED6               	movlw	low _I2cWriteDataEvt
 20758  005678  0100               	movlb	0	; () banked
 20759  00567A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 20760  00567C  0E00               	movlw	high _I2cWriteDataEvt
 20761  00567E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 20762  005680  EC7E  F02E         	call	_GenerateEvt	;wreg free
 20763                           
 20764                           ;i2c_slv.c: 267: TxSts = 1u;
 20765  005684  0E01               	movlw	1
 20766  005686  0100               	movlb	0	; () banked
 20767  005688  D001               	goto	L25
 20768  00568A                     l1391:
 20769                           
 20770                           ; BSR set to: 0
 20771                           ;i2c_slv.c: 269: else
 20772                           ;i2c_slv.c: 270: {
 20773                           ;i2c_slv.c: 272: TxSts = 0u;
 20774                           
 20775                           ; BSR set to: 0
 20776  00568A  0E00               	movlw	0
 20777  00568C                     L25:
 20778  00568C  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 20779                           
 20780                           ; BSR set to: 0
 20781                           ;i2c_slv.c: 273: }
 20782                           ;i2c_slv.c: 275: return TxSts;
 20783  00568E  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 20784  005690  0012               	return	
 20785  005692                     __end_of_I2cSlv_SendI2cMsg:
 20786                           	opt stack 0
 20787                           tosu	equ	0xFFF
 20788                           tosh	equ	0xFFE
 20789                           tosl	equ	0xFFD
 20790                           pclath	equ	0xFFA
 20791                           tblptru	equ	0xFF8
 20792                           tblptrh	equ	0xFF7
 20793                           tblptrl	equ	0xFF6
 20794                           tablat	equ	0xFF5
 20795                           prodh	equ	0xFF4
 20796                           prodl	equ	0xFF3
 20797                           intcon	equ	0xFF2
 20798                           intcon2	equ	0xFF1
 20799                           intcon3	equ	0xFF0
 20800                           indf0	equ	0xFEF
 20801                           postinc0	equ	0xFEE
 20802                           plusw0	equ	0xFEB
 20803                           fsr0h	equ	0xFEA
 20804                           fsr0l	equ	0xFE9
 20805                           wreg	equ	0xFE8
 20806                           indf1	equ	0xFE7
 20807                           postinc1	equ	0xFE6
 20808                           postdec1	equ	0xFE5
 20809                           plusw1	equ	0xFE3
 20810                           fsr1h	equ	0xFE2
 20811                           fsr1l	equ	0xFE1
 20812                           indf2	equ	0xFDF
 20813                           postinc2	equ	0xFDE
 20814                           postdec2	equ	0xFDD
 20815                           plusw2	equ	0xFDB
 20816                           fsr2h	equ	0xFDA
 20817                           fsr2l	equ	0xFD9
 20818                           status	equ	0xFD8
 20819                           
 20820 ;; *************** function _Mdm_IsRinging *****************
 20821 ;; Defined at:
 20822 ;;		line 1003 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 20823 ;; Parameters:    Size  Location     Type
 20824 ;;		None
 20825 ;; Auto vars:     Size  Location     Type
 20826 ;;  Ret             1   33[BANK0 ] enum E8910
 20827 ;; Return value:  Size  Location     Type
 20828 ;;                  1    wreg      enum E8910
 20829 ;; Registers used:
 20830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20831 ;; Tracked objects:
 20832 ;;		On entry : 0/0
 20833 ;;		On exit  : 0/0
 20834 ;;		Unchanged: 0/0
 20835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20837 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20839 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20840 ;;Total ram usage:        1 bytes
 20841 ;; Hardware stack levels used:    1
 20842 ;; Hardware stack levels required when called:   12
 20843 ;; This function calls:
 20844 ;;		_ReceiveEvt
 20845 ;; This function is called by:
 20846 ;;		_MyApp_Task
 20847 ;; This function uses a non-reentrant model
 20848 ;;
 20849                           
 20850                           	psect	text95
 20851  005AD0                     __ptext95:
 20852                           	opt stack 0
 20853  005AD0                     _Mdm_IsRinging:
 20854                           	opt stack 15
 20855                           
 20856                           ;mdm_gsm_gprs.c: 1005: RingStsType Ret = PhoneNotRinging;
 20857                           
 20858                           ; BSR set to: 0
 20859                           ;incstack = 0
 20860  005AD0  0E00               	movlw	0
 20861  005AD2  0100               	movlb	0	; () banked
 20862  005AD4  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 20863                           
 20864                           ; BSR set to: 0
 20865                           ;mdm_gsm_gprs.c: 1008: if (ReceiveEvt(&RingEvent))
 20866  005AD6  0EDC               	movlw	low _RingEvent
 20867  005AD8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 20868  005ADA  0E00               	movlw	high _RingEvent
 20869  005ADC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 20870  005ADE  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 20871  005AE2  0900               	iorlw	0
 20872  005AE4  B4D8               	btfsc	status,2,c
 20873  005AE6  D003               	goto	l1138
 20874                           
 20875                           ;mdm_gsm_gprs.c: 1009: {
 20876                           ;mdm_gsm_gprs.c: 1010: Ret = PhoneRinging;
 20877  005AE8  0E01               	movlw	1
 20878  005AEA  0100               	movlb	0	; () banked
 20879  005AEC  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 20880  005AEE                     l1138:
 20881                           
 20882                           ;mdm_gsm_gprs.c: 1011: }
 20883                           ;mdm_gsm_gprs.c: 1013: return Ret;
 20884  005AEE  0100               	movlb	0	; () banked
 20885  005AF0  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 20886  005AF2  0012               	return	
 20887  005AF4                     __end_of_Mdm_IsRinging:
 20888                           	opt stack 0
 20889                           tosu	equ	0xFFF
 20890                           tosh	equ	0xFFE
 20891                           tosl	equ	0xFFD
 20892                           pclath	equ	0xFFA
 20893                           tblptru	equ	0xFF8
 20894                           tblptrh	equ	0xFF7
 20895                           tblptrl	equ	0xFF6
 20896                           tablat	equ	0xFF5
 20897                           prodh	equ	0xFF4
 20898                           prodl	equ	0xFF3
 20899                           intcon	equ	0xFF2
 20900                           intcon2	equ	0xFF1
 20901                           intcon3	equ	0xFF0
 20902                           indf0	equ	0xFEF
 20903                           postinc0	equ	0xFEE
 20904                           plusw0	equ	0xFEB
 20905                           fsr0h	equ	0xFEA
 20906                           fsr0l	equ	0xFE9
 20907                           wreg	equ	0xFE8
 20908                           indf1	equ	0xFE7
 20909                           postinc1	equ	0xFE6
 20910                           postdec1	equ	0xFE5
 20911                           plusw1	equ	0xFE3
 20912                           fsr1h	equ	0xFE2
 20913                           fsr1l	equ	0xFE1
 20914                           indf2	equ	0xFDF
 20915                           postinc2	equ	0xFDE
 20916                           postdec2	equ	0xFDD
 20917                           plusw2	equ	0xFDB
 20918                           fsr2h	equ	0xFDA
 20919                           fsr2l	equ	0xFD9
 20920                           status	equ	0xFD8
 20921                           
 20922 ;; *************** function _Led_SetLedBlinkTime *****************
 20923 ;; Defined at:
 20924 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 20925 ;; Parameters:    Size  Location     Type
 20926 ;;  Led             1    wreg     unsigned char 
 20927 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 20928 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 20929 ;; Auto vars:     Size  Location     Type
 20930 ;;  Led             1   33[BANK0 ] unsigned char 
 20931 ;; Return value:  Size  Location     Type
 20932 ;;                  1    wreg      void 
 20933 ;; Registers used:
 20934 ;;		wreg, status,2, status,0
 20935 ;; Tracked objects:
 20936 ;;		On entry : 0/0
 20937 ;;		On exit  : 0/0
 20938 ;;		Unchanged: 0/0
 20939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20940 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20943 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20944 ;;Total ram usage:        5 bytes
 20945 ;; Hardware stack levels used:    1
 20946 ;; Hardware stack levels required when called:   11
 20947 ;; This function calls:
 20948 ;;		Nothing
 20949 ;; This function is called by:
 20950 ;;		_MyApp_Task
 20951 ;; This function uses a non-reentrant model
 20952 ;;
 20953                           
 20954                           	psect	text96
 20955  00513C                     __ptext96:
 20956                           	opt stack 0
 20957  00513C                     _Led_SetLedBlinkTime:
 20958                           	opt stack 16
 20959                           
 20960                           ; BSR set to: 0
 20961                           ;incstack = 0
 20962                           ;Led_SetLedBlinkTime@Led stored from wreg
 20963  00513C  0100               	movlb	0	; () banked
 20964  00513E  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 20965                           
 20966                           ;led.c: 374: switch (Led)
 20967  005140  D01B               	goto	l2095
 20968  005142                     l2096:
 20969                           
 20970                           ; BSR set to: 0
 20971                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 20972  005142  C07D  F37C         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 20973  005146  C07E  F37D         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 20974                           
 20975                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 20976  00514A  C07F  F37E         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 20977  00514E  C080  F37F         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 20978                           
 20979                           ;led.c: 379: break;
 20980  005152  0012               	return	
 20981  005154                     l2098:
 20982                           
 20983                           ; BSR set to: 0
 20984                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 20985  005154  C07D  F373         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 20986  005158  C07E  F374         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 20987                           
 20988                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 20989  00515C  C07F  F375         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 20990  005160  C080  F376         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 20991                           
 20992                           ;led.c: 384: break;
 20993  005164  0012               	return	
 20994  005166                     l2099:
 20995                           
 20996                           ; BSR set to: 0
 20997                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 20998  005166  C07D  F373         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 20999  00516A  C07E  F374         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21000                           
 21001                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 21002  00516E  C07F  F375         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21003  005172  C080  F376         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21004                           
 21005                           ; BSR set to: 0
 21006                           ;led.c: 393: }
 21007                           
 21008                           ; BSR set to: 0
 21009                           ;led.c: 392: break;
 21010                           
 21011                           ;led.c: 391: default:
 21012                           
 21013                           ;led.c: 389: break;
 21014  005176  0012               	return	
 21015  005178                     l2095:
 21016                           
 21017                           ; BSR set to: 0
 21018  005178  0100               	movlb	0	; () banked
 21019  00517A  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 21020                           
 21021                           ; Switch size 1, requested type "space"
 21022                           ; Number of cases is 3, Range of values is 1 to 3
 21023                           ; switch strategies available:
 21024                           ; Name         Instructions Cycles
 21025                           ; simple_byte           10     6 (average)
 21026                           ;	Chosen strategy is simple_byte
 21027  00517C  0A01               	xorlw	1	; case 1
 21028  00517E  B4D8               	btfsc	status,2,c
 21029  005180  D7E0               	goto	l2096
 21030  005182  0A03               	xorlw	3	; case 2
 21031  005184  B4D8               	btfsc	status,2,c
 21032  005186  D7E6               	goto	l2098
 21033  005188  0A01               	xorlw	1	; case 3
 21034  00518A  A4D8               	btfss	status,2,c
 21035  00518C  0012               	return	
 21036  00518E  D7EB               	goto	l2099
 21037  005190                     __end_of_Led_SetLedBlinkTime:
 21038                           	opt stack 0
 21039                           tosu	equ	0xFFF
 21040                           tosh	equ	0xFFE
 21041                           tosl	equ	0xFFD
 21042                           pclath	equ	0xFFA
 21043                           tblptru	equ	0xFF8
 21044                           tblptrh	equ	0xFF7
 21045                           tblptrl	equ	0xFF6
 21046                           tablat	equ	0xFF5
 21047                           prodh	equ	0xFF4
 21048                           prodl	equ	0xFF3
 21049                           intcon	equ	0xFF2
 21050                           intcon2	equ	0xFF1
 21051                           intcon3	equ	0xFF0
 21052                           indf0	equ	0xFEF
 21053                           postinc0	equ	0xFEE
 21054                           plusw0	equ	0xFEB
 21055                           fsr0h	equ	0xFEA
 21056                           fsr0l	equ	0xFE9
 21057                           wreg	equ	0xFE8
 21058                           indf1	equ	0xFE7
 21059                           postinc1	equ	0xFE6
 21060                           postdec1	equ	0xFE5
 21061                           plusw1	equ	0xFE3
 21062                           fsr1h	equ	0xFE2
 21063                           fsr1l	equ	0xFE1
 21064                           indf2	equ	0xFDF
 21065                           postinc2	equ	0xFDE
 21066                           postdec2	equ	0xFDD
 21067                           plusw2	equ	0xFDB
 21068                           fsr2h	equ	0xFDA
 21069                           fsr2l	equ	0xFD9
 21070                           status	equ	0xFD8
 21071                           
 21072 ;; *************** function _UartSetConfig *****************
 21073 ;; Defined at:
 21074 ;;		line 185 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21075 ;; Parameters:    Size  Location     Type
 21076 ;;		None
 21077 ;; Auto vars:     Size  Location     Type
 21078 ;;		None
 21079 ;; Return value:  Size  Location     Type
 21080 ;;                  1    wreg      void 
 21081 ;; Registers used:
 21082 ;;		wreg, status,2
 21083 ;; Tracked objects:
 21084 ;;		On entry : 0/0
 21085 ;;		On exit  : 0/0
 21086 ;;		Unchanged: 0/0
 21087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21092 ;;Total ram usage:        0 bytes
 21093 ;; Hardware stack levels used:    1
 21094 ;; Hardware stack levels required when called:   11
 21095 ;; This function calls:
 21096 ;;		Nothing
 21097 ;; This function is called by:
 21098 ;;		_Mdm_MainTask
 21099 ;; This function uses a non-reentrant model
 21100 ;;
 21101                           
 21102                           	psect	text97
 21103  004F34                     __ptext97:
 21104                           	opt stack 0
 21105  004F34                     _UartSetConfig:
 21106                           	opt stack 16
 21107                           
 21108                           ;mdm_gsm_gprs.c: 187: UartConfig.UartEnable = ((UINT8)(1));
 21109                           
 21110                           ; BSR set to: 0
 21111                           ;incstack = 0
 21112  004F34  0E01               	movlw	1
 21113  004F36  0103               	movlb	3	; () banked
 21114  004F38  6F26               	movwf	_UartConfig& (0+255),b
 21115                           
 21116                           ;mdm_gsm_gprs.c: 188: UartConfig.UartMode = ((UINT8)(0));
 21117  004F3A  0E00               	movlw	0
 21118  004F3C  6F27               	movwf	(_UartConfig+1)& (0+255),b
 21119                           
 21120                           ;mdm_gsm_gprs.c: 190: UartConfig.BaudRateMode = ((UINT8)(0));
 21121  004F3E  0E00               	movlw	0
 21122  004F40  6F28               	movwf	(_UartConfig+2)& (0+255),b
 21123                           
 21124                           ;mdm_gsm_gprs.c: 195: UartConfig.HighBaudMode = ((UINT8)(0));
 21125  004F42  0E00               	movlw	0
 21126  004F44  6F29               	movwf	(_UartConfig+3)& (0+255),b
 21127                           
 21128                           ;mdm_gsm_gprs.c: 199: UartConfig.Tx9bitMode = ((UINT8)(0));
 21129  004F46  0E00               	movlw	0
 21130  004F48  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 21131                           
 21132                           ;mdm_gsm_gprs.c: 200: UartConfig.Rx9bitMode = ((UINT8)(0));
 21133  004F4A  0E00               	movlw	0
 21134  004F4C  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 21135                           
 21136                           ;mdm_gsm_gprs.c: 201: UartConfig.TxEnable = ((UINT8)(1));
 21137  004F4E  0E01               	movlw	1
 21138  004F50  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 21139                           
 21140                           ;mdm_gsm_gprs.c: 202: UartConfig.RxEnable = ((UINT8)(1));
 21141  004F52  0E01               	movlw	1
 21142  004F54  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 21143                           
 21144                           ;mdm_gsm_gprs.c: 203: UartConfig.SendBreakEnable = ((UINT8)(0));
 21145  004F56  0E00               	movlw	0
 21146  004F58  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 21147                           
 21148                           ;mdm_gsm_gprs.c: 204: UartConfig.AutobaudEnable = ((UINT8)(0));
 21149  004F5A  0E00               	movlw	0
 21150  004F5C  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 21151                           
 21152                           ;mdm_gsm_gprs.c: 205: UartConfig.WakeUpEnable = ((UINT8)(0));
 21153  004F5E  0E00               	movlw	0
 21154  004F60  6F30               	movwf	(_UartConfig+10)& (0+255),b
 21155                           
 21156                           ;mdm_gsm_gprs.c: 206: UartConfig.TxInterruptEnable = ((UINT8)(0));
 21157  004F62  0E00               	movlw	0
 21158  004F64  6F31               	movwf	(_UartConfig+11)& (0+255),b
 21159                           
 21160                           ;mdm_gsm_gprs.c: 207: UartConfig.RxInterruptEnable = ((UINT8)(1));
 21161  004F66  0E01               	movlw	1
 21162  004F68  6F32               	movwf	(_UartConfig+12)& (0+255),b
 21163                           
 21164                           ;mdm_gsm_gprs.c: 208: UartConfig.McuBusClock = ((UINT32)(48000000));
 21165  004F6A  0E00               	movlw	0
 21166  004F6C  6F33               	movwf	(_UartConfig+13)& (0+255),b
 21167  004F6E  0E6C               	movlw	108
 21168  004F70  6F34               	movwf	(_UartConfig+14)& (0+255),b
 21169  004F72  0EDC               	movlw	220
 21170  004F74  6F35               	movwf	(_UartConfig+15)& (0+255),b
 21171  004F76  0E02               	movlw	2
 21172  004F78  6F36               	movwf	(_UartConfig+16)& (0+255),b
 21173                           
 21174                           ;mdm_gsm_gprs.c: 210: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 21175  004F7A  0E80               	movlw	128
 21176  004F7C  6F37               	movwf	(_UartConfig+17)& (0+255),b
 21177  004F7E  0E25               	movlw	37
 21178  004F80  6F38               	movwf	(_UartConfig+18)& (0+255),b
 21179  004F82  0E00               	movlw	0
 21180  004F84  6F39               	movwf	(_UartConfig+19)& (0+255),b
 21181  004F86  0E00               	movlw	0
 21182  004F88  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 21183                           
 21184                           ; BSR set to: 3
 21185  004F8A  0012               	return		;funcret
 21186  004F8C                     __end_of_UartSetConfig:
 21187                           	opt stack 0
 21188                           tosu	equ	0xFFF
 21189                           tosh	equ	0xFFE
 21190                           tosl	equ	0xFFD
 21191                           pclath	equ	0xFFA
 21192                           tblptru	equ	0xFF8
 21193                           tblptrh	equ	0xFF7
 21194                           tblptrl	equ	0xFF6
 21195                           tablat	equ	0xFF5
 21196                           prodh	equ	0xFF4
 21197                           prodl	equ	0xFF3
 21198                           intcon	equ	0xFF2
 21199                           intcon2	equ	0xFF1
 21200                           intcon3	equ	0xFF0
 21201                           indf0	equ	0xFEF
 21202                           postinc0	equ	0xFEE
 21203                           plusw0	equ	0xFEB
 21204                           fsr0h	equ	0xFEA
 21205                           fsr0l	equ	0xFE9
 21206                           wreg	equ	0xFE8
 21207                           indf1	equ	0xFE7
 21208                           postinc1	equ	0xFE6
 21209                           postdec1	equ	0xFE5
 21210                           plusw1	equ	0xFE3
 21211                           fsr1h	equ	0xFE2
 21212                           fsr1l	equ	0xFE1
 21213                           indf2	equ	0xFDF
 21214                           postinc2	equ	0xFDE
 21215                           postdec2	equ	0xFDD
 21216                           plusw2	equ	0xFDB
 21217                           fsr2h	equ	0xFDA
 21218                           fsr2l	equ	0xFD9
 21219                           status	equ	0xFD8
 21220                           
 21221 ;; *************** function _TurnOnModem *****************
 21222 ;; Defined at:
 21223 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21224 ;; Parameters:    Size  Location     Type
 21225 ;;		None
 21226 ;; Auto vars:     Size  Location     Type
 21227 ;;		None
 21228 ;; Return value:  Size  Location     Type
 21229 ;;                  1    wreg      void 
 21230 ;; Registers used:
 21231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21232 ;; Tracked objects:
 21233 ;;		On entry : 0/0
 21234 ;;		On exit  : 0/0
 21235 ;;		Unchanged: 0/0
 21236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21241 ;;Total ram usage:        0 bytes
 21242 ;; Hardware stack levels used:    1
 21243 ;; Hardware stack levels required when called:   12
 21244 ;; This function calls:
 21245 ;;		_GenerateEvt
 21246 ;; This function is called by:
 21247 ;;		_Mdm_MainTask
 21248 ;; This function uses a non-reentrant model
 21249 ;;
 21250                           
 21251                           	psect	text98
 21252  0053FC                     __ptext98:
 21253                           	opt stack 0
 21254  0053FC                     _TurnOnModem:
 21255                           	opt stack 15
 21256                           
 21257                           ;mdm_gsm_gprs.c: 373: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 21258                           ;mdm_gsm_gprs.c: 374: static UINT16 Counter = 0;
 21259                           ;mdm_gsm_gprs.c: 376: switch (TurnOnMdmState)
 21260                           
 21261                           ; BSR set to: 3
 21262                           ;incstack = 0
 21263  0053FC  D019               	goto	l999
 21264  0053FE                     
 21265                           ;mdm_gsm_gprs.c: 380: Counter++;
 21266  0053FE  0102               	movlb	2	; () banked
 21267  005400  4BDC               	infsnz	TurnOnModem@Counter& (0+255),f,b
 21268  005402  2BDD               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 21269                           
 21270                           ; BSR set to: 2
 21271                           ;mdm_gsm_gprs.c: 382: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 21272  005404  0EB8               	movlw	184
 21273  005406  5DDC               	subwf	TurnOnModem@Counter& (0+255),w,b
 21274  005408  0E0B               	movlw	11
 21275  00540A  59DD               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 21276  00540C  A0D8               	btfss	status,0,c
 21277  00540E  0012               	return	
 21278                           
 21279                           ; BSR set to: 2
 21280                           ;mdm_gsm_gprs.c: 383: {
 21281                           ;mdm_gsm_gprs.c: 385: TurnOnMdmState = TurnOnModuleReq;
 21282  005410  0E01               	movlw	1
 21283  005412  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 21284                           
 21285                           ; BSR set to: 2
 21286                           ;mdm_gsm_gprs.c: 386: }
 21287                           ;mdm_gsm_gprs.c: 387: break;
 21288  005414  0012               	return	
 21289  005416                     
 21290                           ;mdm_gsm_gprs.c: 391: GenerateEvt(&MdmOnOffPulseRequest);
 21291                           
 21292                           ; BSR set to: 2
 21293  005416  0EDE               	movlw	low _MdmOnOffPulseRequest
 21294  005418  0100               	movlb	0	; () banked
 21295  00541A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21296  00541C  0E00               	movlw	high _MdmOnOffPulseRequest
 21297  00541E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21298  005420  EC7E  F02E         	call	_GenerateEvt	;wreg free
 21299                           
 21300                           ;mdm_gsm_gprs.c: 393: MdmStatus = ModemOn;
 21301  005424  0E01               	movlw	1
 21302  005426  0100               	movlb	0	; () banked
 21303  005428  6FCF               	movwf	_MdmStatus& (0+255),b
 21304                           
 21305                           ; BSR set to: 0
 21306                           ;mdm_gsm_gprs.c: 395: TurnOnMdmState = Stop;
 21307  00542A  0E02               	movlw	2
 21308  00542C  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 21309                           
 21310                           ; BSR set to: 0
 21311                           ;mdm_gsm_gprs.c: 403: }
 21312                           
 21313                           ; BSR set to: 0
 21314                           ;mdm_gsm_gprs.c: 402: break;
 21315                           
 21316                           ;mdm_gsm_gprs.c: 401: default:
 21317                           
 21318                           ; BSR set to: 0
 21319                           ;mdm_gsm_gprs.c: 399: break;
 21320                           
 21321                           ;mdm_gsm_gprs.c: 398: case Stop:
 21322                           
 21323                           ;mdm_gsm_gprs.c: 396: break;
 21324  00542E  0012               	return	
 21325  005430                     l999:
 21326                           
 21327                           ; BSR set to: 0
 21328  005430  5029               	movf	TurnOnModem@TurnOnMdmState,w,c
 21329                           
 21330                           ; Switch size 1, requested type "space"
 21331                           ; Number of cases is 3, Range of values is 0 to 2
 21332                           ; switch strategies available:
 21333                           ; Name         Instructions Cycles
 21334                           ; simple_byte           10     6 (average)
 21335                           ;	Chosen strategy is simple_byte
 21336  005432  0A00               	xorlw	0	; case 0
 21337  005434  B4D8               	btfsc	status,2,c
 21338  005436  D7E3               	goto	l1000
 21339  005438  0A01               	xorlw	1	; case 1
 21340  00543A  B4D8               	btfsc	status,2,c
 21341  00543C  D7EC               	goto	l1003
 21342  00543E  0A03               	xorlw	3	; case 2
 21343  005440  0012               	return	
 21344  005442                     __end_of_TurnOnModem:
 21345                           	opt stack 0
 21346                           tosu	equ	0xFFF
 21347                           tosh	equ	0xFFE
 21348                           tosl	equ	0xFFD
 21349                           pclath	equ	0xFFA
 21350                           tblptru	equ	0xFF8
 21351                           tblptrh	equ	0xFF7
 21352                           tblptrl	equ	0xFF6
 21353                           tablat	equ	0xFF5
 21354                           prodh	equ	0xFF4
 21355                           prodl	equ	0xFF3
 21356                           intcon	equ	0xFF2
 21357                           intcon2	equ	0xFF1
 21358                           intcon3	equ	0xFF0
 21359                           indf0	equ	0xFEF
 21360                           postinc0	equ	0xFEE
 21361                           plusw0	equ	0xFEB
 21362                           fsr0h	equ	0xFEA
 21363                           fsr0l	equ	0xFE9
 21364                           wreg	equ	0xFE8
 21365                           indf1	equ	0xFE7
 21366                           postinc1	equ	0xFE6
 21367                           postdec1	equ	0xFE5
 21368                           plusw1	equ	0xFE3
 21369                           fsr1h	equ	0xFE2
 21370                           fsr1l	equ	0xFE1
 21371                           indf2	equ	0xFDF
 21372                           postinc2	equ	0xFDE
 21373                           postdec2	equ	0xFDD
 21374                           plusw2	equ	0xFDB
 21375                           fsr2h	equ	0xFDA
 21376                           fsr2l	equ	0xFD9
 21377                           status	equ	0xFD8
 21378                           
 21379 ;; *************** function _SendSmsSm *****************
 21380 ;; Defined at:
 21381 ;;		line 636 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21382 ;; Parameters:    Size  Location     Type
 21383 ;;		None
 21384 ;; Auto vars:     Size  Location     Type
 21385 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 21386 ;; Return value:  Size  Location     Type
 21387 ;;                  1    wreg      void 
 21388 ;; Registers used:
 21389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21390 ;; Tracked objects:
 21391 ;;		On entry : 0/0
 21392 ;;		On exit  : 0/0
 21393 ;;		Unchanged: 0/0
 21394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21396 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21397 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21398 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21399 ;;Total ram usage:       52 bytes
 21400 ;; Hardware stack levels used:    1
 21401 ;; Hardware stack levels required when called:   14
 21402 ;; This function calls:
 21403 ;;		_OsTmr_GetTimerStatus
 21404 ;;		_OsTmr_StartTimer
 21405 ;;		_ReceiveEvt
 21406 ;;		_StringCopy
 21407 ;;		_Uart_WriteStringLen
 21408 ;; This function is called by:
 21409 ;;		_Mdm_MainTask
 21410 ;; This function uses a non-reentrant model
 21411 ;;
 21412                           
 21413                           	psect	text99
 21414  0019F2                     __ptext99:
 21415                           	opt stack 0
 21416  0019F2                     _SendSmsSm:
 21417                           	opt stack 13
 21418                           
 21419                           ;mdm_gsm_gprs.c: 638: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 21420                           ;mdm_gsm_gprs.c: 639: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 21421                           ;mdm_gsm_gprs.c: 640: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 21422                           ;mdm_gsm_gprs.c: 641: UINT8 UartMessage[50];
 21423                           ;mdm_gsm_gprs.c: 644: if (MdmStatus == ModemConfigured)
 21424                           
 21425                           ;incstack = 0
 21426  0019F2  0E03               	movlw	3
 21427  0019F4  0100               	movlb	0	; () banked
 21428  0019F6  19CF               	xorwf	_MdmStatus& (0+255),w,b
 21429  0019F8  A4D8               	btfss	status,2,c
 21430  0019FA  0012               	return	
 21431  0019FC  D0C1               	goto	l1077
 21432  0019FE                     
 21433                           ;mdm_gsm_gprs.c: 650: if (ReceiveEvt(&SendSmsEvent))
 21434                           
 21435                           ; BSR set to: 0
 21436  0019FE  0EDD               	movlw	low _SendSmsEvent
 21437  001A00  0100               	movlb	0	; () banked
 21438  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21439  001A04  0E00               	movlw	high _SendSmsEvent
 21440  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21441  001A08  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 21442  001A0C  0900               	iorlw	0
 21443  001A0E  B4D8               	btfsc	status,2,c
 21444  001A10  0012               	return	
 21445                           
 21446                           ;mdm_gsm_gprs.c: 651: {
 21447                           ;mdm_gsm_gprs.c: 653: SendSms_State = SendSms_CmgsCmd;
 21448  001A12  0E01               	movlw	1
 21449  001A14  0101               	movlb	1	; () banked
 21450  001A16  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21451                           
 21452                           ; BSR set to: 1
 21453                           ;mdm_gsm_gprs.c: 654: }
 21454                           ;mdm_gsm_gprs.c: 655: break;
 21455  001A18  0012               	return	
 21456  001A1A                     
 21457                           ; BSR set to: 1
 21458                           ;mdm_gsm_gprs.c: 659: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 21459                           
 21460                           ; BSR set to: 1
 21461  001A1A  0ED0               	movlw	low STR_5
 21462  001A1C  0100               	movlb	0	; () banked
 21463  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21464  001A20  0EFF               	movlw	high STR_5
 21465  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21466  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 21467  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 21468  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 21469  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 21470  001A2C  0E00               	movlw	0
 21471  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 21472  001A30  0E09               	movlw	9
 21473  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 21474  001A34  ECDD  F026         	call	_StringCopy	;wreg free
 21475                           
 21476                           ;mdm_gsm_gprs.c: 661: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 21477  001A38  0EEA               	movlw	low _PhoneNumber
 21478  001A3A  0100               	movlb	0	; () banked
 21479  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21480  001A3E  0E04               	movlw	high _PhoneNumber
 21481  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21482  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 21483  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 21484  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 21485  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 21486  001A4A  C0D0  F081         	movff	_PhoneNumbLen,StringCopy@Len
 21487  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21488  001A50  ECDD  F026         	call	_StringCopy	;wreg free
 21489                           
 21490                           ;mdm_gsm_gprs.c: 663: UartMessage[PhoneNumbLen + 9] = '"';
 21491  001A54  0100               	movlb	0	; () banked
 21492  001A56  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 21493  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 21494  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 21495  001A5C  0E09               	movlw	9
 21496  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 21497  001A60  0E00               	movlw	0
 21498  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 21499  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 21500  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 21501  001A68  6ED9               	movwf	fsr2l,c
 21502  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 21503  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 21504  001A6E  6EDA               	movwf	fsr2h,c
 21505  001A70  0E22               	movlw	34
 21506  001A72  6EDF               	movwf	indf2,c
 21507                           
 21508                           ; BSR set to: 0
 21509                           ;mdm_gsm_gprs.c: 664: UartMessage[PhoneNumbLen + 10] = '\r';
 21510  001A74  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 21511  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 21512  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 21513  001A7A  0E0A               	movlw	10
 21514  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 21515  001A7E  0E00               	movlw	0
 21516  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 21517  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 21518  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 21519  001A86  6ED9               	movwf	fsr2l,c
 21520  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 21521  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 21522  001A8C  6EDA               	movwf	fsr2h,c
 21523  001A8E  0E0D               	movlw	13
 21524  001A90  6EDF               	movwf	indf2,c
 21525                           
 21526                           ; BSR set to: 0
 21527                           ;mdm_gsm_gprs.c: 666: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 21528  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 21529  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 21530  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 21531  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 21532  001A9A  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 21533  001A9C  0F0B               	addlw	11
 21534  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 21535  001AA0  0E01               	movlw	1
 21536  001AA2  ECEB  F02A         	call	_Uart_WriteStringLen
 21537                           
 21538                           ;mdm_gsm_gprs.c: 668: OsTmr_StartTimer(&SwTimer,2500);
 21539  001AA6  0EE9               	movlw	low SendSmsSm@SwTimer
 21540  001AA8  0100               	movlb	0	; () banked
 21541  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 21542  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 21543  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 21544  001AB0  0EC4               	movlw	196
 21545  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 21546  001AB4  0E09               	movlw	9
 21547  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 21548  001AB8  0E00               	movlw	0
 21549  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 21550  001ABC  0E00               	movlw	0
 21551  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 21552  001AC0  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 21553                           
 21554                           ;mdm_gsm_gprs.c: 669: SendSms_State = SendSms_Delay;
 21555  001AC4  0E05               	movlw	5
 21556  001AC6  0101               	movlb	1	; () banked
 21557  001AC8  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21558                           
 21559                           ; BSR set to: 1
 21560                           ;mdm_gsm_gprs.c: 670: SendSms_NextState = SendSms_EnterCmd;
 21561  001ACA  0E02               	movlw	2
 21562  001ACC  6FF2               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 21563                           
 21564                           ;mdm_gsm_gprs.c: 671: break;
 21565  001ACE  0012               	return	
 21566  001AD0                     
 21567                           ; BSR set to: 1
 21568                           ;mdm_gsm_gprs.c: 675: UartMessage[0] = '\n';
 21569                           
 21570                           ; BSR set to: 1
 21571  001AD0  0E0A               	movlw	10
 21572  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 21573                           
 21574                           ;mdm_gsm_gprs.c: 676: UartMessage[1] = '\r';
 21575  001AD4  0E0D               	movlw	13
 21576  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 21577                           
 21578                           ; BSR set to: 1
 21579                           ;mdm_gsm_gprs.c: 678: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 21580  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 21581  001ADA  0100               	movlb	0	; () banked
 21582  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 21583  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 21584  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 21585  001AE2  0E02               	movlw	2
 21586  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 21587  001AE6  0E01               	movlw	1
 21588  001AE8  ECEB  F02A         	call	_Uart_WriteStringLen
 21589                           
 21590                           ;mdm_gsm_gprs.c: 680: SendSms_State = SendSms_WaitConf;
 21591  001AEC  0E03               	movlw	3
 21592  001AEE  0101               	movlb	1	; () banked
 21593  001AF0  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21594                           
 21595                           ;mdm_gsm_gprs.c: 681: break;
 21596  001AF2  0012               	return	
 21597  001AF4                     
 21598                           ; BSR set to: 1
 21599                           ;mdm_gsm_gprs.c: 685: if (ReceiveEvt(&NewStringReceived))
 21600                           
 21601                           ; BSR set to: 1
 21602  001AF4  0E3C               	movlw	low _NewStringReceived
 21603  001AF6  0100               	movlb	0	; () banked
 21604  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21605  001AFA  0E00               	movlw	high _NewStringReceived
 21606  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21607  001AFE  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 21608  001B02  0900               	iorlw	0
 21609  001B04  B4D8               	btfsc	status,2,c
 21610  001B06  0012               	return	
 21611                           
 21612                           ;mdm_gsm_gprs.c: 686: {
 21613                           ;mdm_gsm_gprs.c: 688: if (RxBuffer[0] == '>')
 21614  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 21615  001B0C  0A3E               	xorlw	62
 21616  001B0E  A4D8               	btfss	status,2,c
 21617  001B10  0012               	return	
 21618                           
 21619                           ;mdm_gsm_gprs.c: 689: {
 21620                           ;mdm_gsm_gprs.c: 691: SendSms_State = SendSms_SendSmsText;
 21621  001B12  0E04               	movlw	4
 21622  001B14  0101               	movlb	1	; () banked
 21623  001B16  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21624                           
 21625                           ; BSR set to: 1
 21626                           ;mdm_gsm_gprs.c: 692: }
 21627                           ;mdm_gsm_gprs.c: 693: }
 21628                           ;mdm_gsm_gprs.c: 694: break;
 21629                           
 21630                           ; BSR set to: 1
 21631  001B18  0012               	return	
 21632  001B1A                     
 21633                           ; BSR set to: 1
 21634                           ;mdm_gsm_gprs.c: 698: StringCopy(MessageText,UartMessage,SmsLen);
 21635                           
 21636                           ; BSR set to: 1
 21637  001B1A  0EC2               	movlw	low _MessageText
 21638  001B1C  0100               	movlb	0	; () banked
 21639  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21640  001B20  0E05               	movlw	high _MessageText
 21641  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21642  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 21643  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 21644  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 21645  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 21646  001B2C  C0D1  F081         	movff	_SmsLen,StringCopy@Len
 21647  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21648  001B32  ECDD  F026         	call	_StringCopy	;wreg free
 21649                           
 21650                           ;mdm_gsm_gprs.c: 700: UartMessage[SmsLen] = 0x1A;
 21651  001B36  0100               	movlb	0	; () banked
 21652  001B38  51D1               	movf	_SmsLen& (0+255),w,b
 21653  001B3A  0D01               	mullw	1
 21654  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 21655  001B3E  24F3               	addwf	prodl,w,c
 21656  001B40  6ED9               	movwf	fsr2l,c
 21657  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 21658  001B44  20F4               	addwfc	prodh,w,c
 21659  001B46  6EDA               	movwf	fsr2h,c
 21660  001B48  0E1A               	movlw	26
 21661  001B4A  6EDF               	movwf	indf2,c
 21662                           
 21663                           ; BSR set to: 0
 21664                           ;mdm_gsm_gprs.c: 702: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 21665  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 21666  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 21667  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 21668  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 21669  001B54  29D1               	incf	_SmsLen& (0+255),w,b
 21670  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 21671  001B58  0E01               	movlw	1
 21672  001B5A  ECEB  F02A         	call	_Uart_WriteStringLen
 21673                           
 21674                           ;mdm_gsm_gprs.c: 704: SendSms_State = SendSms_WaitEvt;
 21675  001B5E  0E00               	movlw	0
 21676  001B60  0101               	movlb	1	; () banked
 21677  001B62  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21678                           
 21679                           ;mdm_gsm_gprs.c: 705: break;
 21680  001B64  0012               	return	
 21681  001B66                     
 21682                           ; BSR set to: 1
 21683                           ;mdm_gsm_gprs.c: 709: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 21684                           
 21685                           ; BSR set to: 1
 21686  001B66  0EE9               	movlw	low SendSmsSm@SwTimer
 21687  001B68  0100               	movlb	0	; () banked
 21688  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 21689  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 21690  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 21691  001B70  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 21692  001B74  06E8               	decf	wreg,f,c
 21693  001B76  A4D8               	btfss	status,2,c
 21694  001B78  0012               	return	
 21695                           
 21696                           ;mdm_gsm_gprs.c: 710: {
 21697                           ;mdm_gsm_gprs.c: 712: SendSms_State = SendSms_NextState;
 21698  001B7A  C1F2  F1F3         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 21699                           
 21700                           ;mdm_gsm_gprs.c: 718: }
 21701                           
 21702                           ;mdm_gsm_gprs.c: 717: break;
 21703                           
 21704                           ;mdm_gsm_gprs.c: 716: default:
 21705                           
 21706                           ;mdm_gsm_gprs.c: 713: }
 21707                           ;mdm_gsm_gprs.c: 714: break;
 21708  001B7E  0012               	return	
 21709  001B80                     l1077:
 21710  001B80  0101               	movlb	1	; () banked
 21711  001B82  51F3               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 21712                           
 21713                           ; Switch size 1, requested type "space"
 21714                           ; Number of cases is 6, Range of values is 0 to 5
 21715                           ; switch strategies available:
 21716                           ; Name         Instructions Cycles
 21717                           ; simple_byte           19    10 (average)
 21718                           ;	Chosen strategy is simple_byte
 21719  001B84  0A00               	xorlw	0	; case 0
 21720  001B86  B4D8               	btfsc	status,2,c
 21721  001B88  D73A               	goto	l1078
 21722  001B8A  0A01               	xorlw	1	; case 1
 21723  001B8C  B4D8               	btfsc	status,2,c
 21724  001B8E  D745               	goto	l1081
 21725  001B90  0A03               	xorlw	3	; case 2
 21726  001B92  B4D8               	btfsc	status,2,c
 21727  001B94  D79D               	goto	l1082
 21728  001B96  0A01               	xorlw	1	; case 3
 21729  001B98  B4D8               	btfsc	status,2,c
 21730  001B9A  D7AC               	goto	l1083
 21731  001B9C  0A07               	xorlw	7	; case 4
 21732  001B9E  B4D8               	btfsc	status,2,c
 21733  001BA0  D7BC               	goto	l1086
 21734  001BA2  0A01               	xorlw	1	; case 5
 21735  001BA4  A4D8               	btfss	status,2,c
 21736                           
 21737                           ; BSR set to: 1
 21738  001BA6  0012               	return	
 21739  001BA8  D7DE               	goto	l1087
 21740  001BAA                     __end_of_SendSmsSm:
 21741                           	opt stack 0
 21742                           tosu	equ	0xFFF
 21743                           tosh	equ	0xFFE
 21744                           tosl	equ	0xFFD
 21745                           pclath	equ	0xFFA
 21746                           tblptru	equ	0xFF8
 21747                           tblptrh	equ	0xFF7
 21748                           tblptrl	equ	0xFF6
 21749                           tablat	equ	0xFF5
 21750                           prodh	equ	0xFF4
 21751                           prodl	equ	0xFF3
 21752                           intcon	equ	0xFF2
 21753                           intcon2	equ	0xFF1
 21754                           intcon3	equ	0xFF0
 21755                           indf0	equ	0xFEF
 21756                           postinc0	equ	0xFEE
 21757                           plusw0	equ	0xFEB
 21758                           fsr0h	equ	0xFEA
 21759                           fsr0l	equ	0xFE9
 21760                           wreg	equ	0xFE8
 21761                           indf1	equ	0xFE7
 21762                           postinc1	equ	0xFE6
 21763                           postdec1	equ	0xFE5
 21764                           plusw1	equ	0xFE3
 21765                           fsr1h	equ	0xFE2
 21766                           fsr1l	equ	0xFE1
 21767                           indf2	equ	0xFDF
 21768                           postinc2	equ	0xFDE
 21769                           postdec2	equ	0xFDD
 21770                           plusw2	equ	0xFDB
 21771                           fsr2h	equ	0xFDA
 21772                           fsr2l	equ	0xFD9
 21773                           status	equ	0xFD8
 21774                           
 21775 ;; *************** function _Uart_WriteStringLen *****************
 21776 ;; Defined at:
 21777 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 21778 ;; Parameters:    Size  Location     Type
 21779 ;;  Module          1    wreg     unsigned char 
 21780 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 21781 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 21782 ;;  Len             1   34[BANK0 ] unsigned char 
 21783 ;; Auto vars:     Size  Location     Type
 21784 ;;  Module          1   36[BANK0 ] unsigned char 
 21785 ;;  Index           1   35[BANK0 ] unsigned char 
 21786 ;; Return value:  Size  Location     Type
 21787 ;;                  1    wreg      void 
 21788 ;; Registers used:
 21789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21790 ;; Tracked objects:
 21791 ;;		On entry : 0/0
 21792 ;;		On exit  : 0/0
 21793 ;;		Unchanged: 0/0
 21794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21795 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21796 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21798 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21799 ;;Total ram usage:        5 bytes
 21800 ;; Hardware stack levels used:    1
 21801 ;; Hardware stack levels required when called:   12
 21802 ;; This function calls:
 21803 ;;		_UartTxBufferStatus
 21804 ;;		_UartWriteByte
 21805 ;; This function is called by:
 21806 ;;		_SendSmsSm
 21807 ;;		_GsmGprsTerminal
 21808 ;; This function uses a non-reentrant model
 21809 ;;
 21810                           
 21811                           	psect	text100
 21812  0055D6                     __ptext100:
 21813                           	opt stack 0
 21814  0055D6                     _Uart_WriteStringLen:
 21815                           	opt stack 14
 21816                           
 21817                           ;incstack = 0
 21818                           ;Uart_WriteStringLen@Module stored from wreg
 21819  0055D6  0100               	movlb	0	; () banked
 21820  0055D8  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 21821                           
 21822                           ;uart_drv.c: 544: UINT8 Index;
 21823                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 21824  0055DA  0E00               	movlw	0
 21825  0055DC  0100               	movlb	0	; () banked
 21826  0055DE  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 21827  0055E0  D015               	goto	l715
 21828  0055E2                     
 21829                           ; BSR set to: 0
 21830                           ;uart_drv.c: 547: {
 21831                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 21832                           
 21833                           ; BSR set to: 0
 21834  0055E2  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 21835  0055E6  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 21836  0055EA  50DF               	movf	indf2,w,c
 21837  0055EC  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 21838  0055EE  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 21839  0055F0  EC02  F02E         	call	_UartWriteByte
 21840                           
 21841                           ;uart_drv.c: 551: StringToWrite++;
 21842  0055F4  0100               	movlb	0	; () banked
 21843  0055F6  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 21844  0055F8  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 21845  0055FA                     
 21846                           ; BSR set to: 0
 21847                           
 21848                           ; BSR set to: 0
 21849  0055FA  0100               	movlb	0	; () banked
 21850  0055FC  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 21851  0055FE  EC43  F029         	call	_UartTxBufferStatus
 21852  005602  06E8               	decf	wreg,f,c
 21853  005604  B4D8               	btfsc	status,2,c
 21854  005606  D7F9               	goto	l718
 21855  005608  0100               	movlb	0	; () banked
 21856  00560A  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 21857  00560C                     l715:
 21858                           
 21859                           ; BSR set to: 0
 21860                           
 21861                           ; BSR set to: 0
 21862  00560C  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 21863  00560E  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 21864  005610  B0D8               	btfsc	status,0,c
 21865  005612  0012               	return	
 21866  005614  D7E6               	goto	l716
 21867  005616                     __end_of_Uart_WriteStringLen:
 21868                           	opt stack 0
 21869                           tosu	equ	0xFFF
 21870                           tosh	equ	0xFFE
 21871                           tosl	equ	0xFFD
 21872                           pclath	equ	0xFFA
 21873                           tblptru	equ	0xFF8
 21874                           tblptrh	equ	0xFF7
 21875                           tblptrl	equ	0xFF6
 21876                           tablat	equ	0xFF5
 21877                           prodh	equ	0xFF4
 21878                           prodl	equ	0xFF3
 21879                           intcon	equ	0xFF2
 21880                           intcon2	equ	0xFF1
 21881                           intcon3	equ	0xFF0
 21882                           indf0	equ	0xFEF
 21883                           postinc0	equ	0xFEE
 21884                           plusw0	equ	0xFEB
 21885                           fsr0h	equ	0xFEA
 21886                           fsr0l	equ	0xFE9
 21887                           wreg	equ	0xFE8
 21888                           indf1	equ	0xFE7
 21889                           postinc1	equ	0xFE6
 21890                           postdec1	equ	0xFE5
 21891                           plusw1	equ	0xFE3
 21892                           fsr1h	equ	0xFE2
 21893                           fsr1l	equ	0xFE1
 21894                           indf2	equ	0xFDF
 21895                           postinc2	equ	0xFDE
 21896                           postdec2	equ	0xFDD
 21897                           plusw2	equ	0xFDB
 21898                           fsr2h	equ	0xFDA
 21899                           fsr2l	equ	0xFD9
 21900                           status	equ	0xFD8
 21901                           
 21902 ;; *************** function _ModemEvtParser *****************
 21903 ;; Defined at:
 21904 ;;		line 494 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21905 ;; Parameters:    Size  Location     Type
 21906 ;;		None
 21907 ;; Auto vars:     Size  Location     Type
 21908 ;;  CallReadyStr   10   40[BANK0 ] unsigned char [10]
 21909 ;;  SmsString       5   50[BANK0 ] unsigned char [5]
 21910 ;;  RingString      4   55[BANK0 ] unsigned char [4]
 21911 ;;  CompareIdx      1   60[BANK0 ] unsigned char 
 21912 ;;  Match           1   59[BANK0 ] unsigned char 
 21913 ;; Return value:  Size  Location     Type
 21914 ;;                  1    wreg      void 
 21915 ;; Registers used:
 21916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21917 ;; Tracked objects:
 21918 ;;		On entry : 0/0
 21919 ;;		On exit  : 0/0
 21920 ;;		Unchanged: 0/0
 21921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21923 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21925 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21926 ;;Total ram usage:       21 bytes
 21927 ;; Hardware stack levels used:    1
 21928 ;; Hardware stack levels required when called:   12
 21929 ;; This function calls:
 21930 ;;		_GenerateEvt
 21931 ;;		_ReceiveEvt
 21932 ;;		_StringCompare
 21933 ;;		_Uart_ClearRxBuffer
 21934 ;; This function is called by:
 21935 ;;		_Mdm_MainTask
 21936 ;; This function uses a non-reentrant model
 21937 ;;
 21938                           
 21939                           	psect	text101
 21940  002C40                     __ptext101:
 21941                           	opt stack 0
 21942  002C40                     _ModemEvtParser:
 21943                           	opt stack 15
 21944                           
 21945                           ;mdm_gsm_gprs.c: 496: UINT8 RingString[] = {'R','I','N','G'};
 21946                           
 21947                           ; BSR set to: 0
 21948                           ;incstack = 0
 21949  002C40  C3C7  F097         	movff	ModemEvtParser@F9086,ModemEvtParser@RingString
 21950  002C44  C3C8  F098         	movff	ModemEvtParser@F9086+1,ModemEvtParser@RingString+1
 21951  002C48  C3C9  F099         	movff	ModemEvtParser@F9086+2,ModemEvtParser@RingString+2
 21952  002C4C  C3CA  F09A         	movff	ModemEvtParser@F9086+3,ModemEvtParser@RingString+3
 21953                           
 21954                           ;mdm_gsm_gprs.c: 497: UINT8 SmsString[] = {'+','C','M','T','I'};
 21955  002C50  EE23  F0C2         	lfsr	2,ModemEvtParser@F9088
 21956  002C54  EE10  F092         	lfsr	1,ModemEvtParser@SmsString
 21957  002C58  0E04               	movlw	4
 21958  002C5A                     u12101:
 21959  002C5A  CFDB FFE3          	movff	plusw2,plusw1
 21960  002C5E  06E8               	decf	wreg,f,c
 21961  002C60  E2FC               	bc	u12101
 21962                           
 21963                           ;mdm_gsm_gprs.c: 498: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 21964  002C62  EE24  F04A         	lfsr	2,ModemEvtParser@F9090
 21965  002C66  EE10  F088         	lfsr	1,ModemEvtParser@CallReadyString
 21966  002C6A  0E09               	movlw	9
 21967  002C6C                     u12111:
 21968  002C6C  CFDB FFE3          	movff	plusw2,plusw1
 21969  002C70  06E8               	decf	wreg,f,c
 21970  002C72  E2FC               	bc	u12111
 21971                           
 21972                           ;mdm_gsm_gprs.c: 499: UINT8 CompareIdx = 0;
 21973  002C74  0E00               	movlw	0
 21974  002C76  0100               	movlb	0	; () banked
 21975  002C78  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 21976                           
 21977                           ; BSR set to: 0
 21978                           ;mdm_gsm_gprs.c: 500: UINT8 Match = 0;
 21979  002C7A  0E00               	movlw	0
 21980  002C7C  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 21981                           
 21982                           ; BSR set to: 0
 21983                           ;mdm_gsm_gprs.c: 503: if (ReceiveEvt(&NewMdmEvtParserRequest))
 21984  002C7E  0E3B               	movlw	low _NewMdmEvtParserRequest
 21985  002C80  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21986  002C82  0E00               	movlw	high _NewMdmEvtParserRequest
 21987  002C84  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21988  002C86  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 21989  002C8A  0900               	iorlw	0
 21990  002C8C  B4D8               	btfsc	status,2,c
 21991  002C8E  0012               	return	
 21992                           
 21993                           ;mdm_gsm_gprs.c: 504: {
 21994                           ;mdm_gsm_gprs.c: 505: for (CompareIdx = 0; CompareIdx < ((UINT8)(3)); CompareIdx++)
 21995  002C90  0E00               	movlw	0
 21996  002C92  0100               	movlb	0	; () banked
 21997  002C94  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 21998  002C96                     l12985:
 21999                           
 22000                           ; BSR set to: 0
 22001  002C96  0E02               	movlw	2
 22002  002C98  659C               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 22003  002C9A  D04C               	goto	l1040
 22004  002C9C  D058               	goto	u12170
 22005  002C9E                     
 22006                           ; BSR set to: 0
 22007                           ;mdm_gsm_gprs.c: 511: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 22008                           
 22009                           ; BSR set to: 0
 22010  002C9E  0E97               	movlw	low ModemEvtParser@RingString
 22011  002CA0  6F7D               	movwf	StringCompare@String1& (0+255),b
 22012  002CA2  0E00               	movlw	high ModemEvtParser@RingString
 22013  002CA4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22014  002CA6  0E58               	movlw	low _RxBuffer
 22015  002CA8  6F7F               	movwf	StringCompare@String2& (0+255),b
 22016  002CAA  0E0C               	movlw	high _RxBuffer
 22017  002CAC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22018  002CAE  0E00               	movlw	0
 22019  002CB0  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22020  002CB2  0E04               	movlw	4
 22021  002CB4  6F81               	movwf	StringCompare@Len& (0+255),b
 22022  002CB6  ECF2  F028         	call	_StringCompare	;wreg free
 22023  002CBA  0900               	iorlw	0
 22024  002CBC  B4D8               	btfsc	status,2,c
 22025  002CBE  D044               	goto	l1043
 22026                           
 22027                           ;mdm_gsm_gprs.c: 512: {
 22028                           ;mdm_gsm_gprs.c: 514: GenerateEvt(&RingEvent);
 22029  002CC0  0EDC               	movlw	low _RingEvent
 22030  002CC2  0100               	movlb	0	; () banked
 22031  002CC4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22032  002CC6  0E00               	movlw	high _RingEvent
 22033  002CC8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22034  002CCA  EC7E  F02E         	call	_GenerateEvt	;wreg free
 22035  002CCE  D018               	goto	l12999
 22036  002CD0                     
 22037                           ; BSR set to: 0
 22038                           ;mdm_gsm_gprs.c: 522: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 22039                           
 22040                           ; BSR set to: 0
 22041  002CD0  0E92               	movlw	low ModemEvtParser@SmsString
 22042  002CD2  6F7D               	movwf	StringCompare@String1& (0+255),b
 22043  002CD4  0E00               	movlw	high ModemEvtParser@SmsString
 22044  002CD6  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22045  002CD8  0E58               	movlw	low _RxBuffer
 22046  002CDA  6F7F               	movwf	StringCompare@String2& (0+255),b
 22047  002CDC  0E0C               	movlw	high _RxBuffer
 22048  002CDE  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22049  002CE0  0E00               	movlw	0
 22050  002CE2  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22051  002CE4  0E05               	movlw	5
 22052  002CE6  6F81               	movwf	StringCompare@Len& (0+255),b
 22053  002CE8  ECF2  F028         	call	_StringCompare	;wreg free
 22054  002CEC  0900               	iorlw	0
 22055  002CEE  B4D8               	btfsc	status,2,c
 22056  002CF0  D02B               	goto	l1043
 22057                           
 22058                           ;mdm_gsm_gprs.c: 523: {
 22059                           ;mdm_gsm_gprs.c: 525: GenerateEvt(&SmsEvent);
 22060  002CF2  0EDB               	movlw	low _SmsEvent
 22061  002CF4  0100               	movlb	0	; () banked
 22062  002CF6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22063  002CF8  0E00               	movlw	high _SmsEvent
 22064  002CFA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22065  002CFC  EC7E  F02E         	call	_GenerateEvt	;wreg free
 22066  002D00                     l12999:
 22067                           
 22068                           ;mdm_gsm_gprs.c: 527: Match = 1;
 22069  002D00  0E01               	movlw	1
 22070  002D02  0100               	movlb	0	; () banked
 22071  002D04  D015               	goto	L26
 22072  002D06                     
 22073                           ; BSR set to: 0
 22074                           ;mdm_gsm_gprs.c: 533: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 22075                           
 22076                           ; BSR set to: 0
 22077  002D06  0E88               	movlw	low ModemEvtParser@CallReadyString
 22078  002D08  6F7D               	movwf	StringCompare@String1& (0+255),b
 22079  002D0A  0E00               	movlw	high ModemEvtParser@CallReadyString
 22080  002D0C  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22081  002D0E  0E58               	movlw	low _RxBuffer
 22082  002D10  6F7F               	movwf	StringCompare@String2& (0+255),b
 22083  002D12  0E0C               	movlw	high _RxBuffer
 22084  002D14  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22085  002D16  0E00               	movlw	0
 22086  002D18  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22087  002D1A  0E0A               	movlw	10
 22088  002D1C  6F81               	movwf	StringCompare@Len& (0+255),b
 22089  002D1E  ECF2  F028         	call	_StringCompare	;wreg free
 22090  002D22  0900               	iorlw	0
 22091  002D24  B4D8               	btfsc	status,2,c
 22092  002D26  D010               	goto	l1043
 22093                           
 22094                           ;mdm_gsm_gprs.c: 534: {
 22095                           ;mdm_gsm_gprs.c: 536: MdmStatus = ModemReady;
 22096  002D28  0E02               	movlw	2
 22097  002D2A  0100               	movlb	0	; () banked
 22098  002D2C  6FCF               	movwf	_MdmStatus& (0+255),b
 22099                           
 22100                           ;mdm_gsm_gprs.c: 538: Match = 1;
 22101  002D2E  0E01               	movlw	1
 22102  002D30                     L26:
 22103  002D30  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 22104                           
 22105                           ; BSR set to: 0
 22106                           ;mdm_gsm_gprs.c: 544: }
 22107                           
 22108                           ; BSR set to: 0
 22109                           ;mdm_gsm_gprs.c: 543: break;
 22110                           
 22111                           ;mdm_gsm_gprs.c: 542: default:
 22112                           
 22113                           ; BSR set to: 0
 22114                           ;mdm_gsm_gprs.c: 539: }
 22115                           ;mdm_gsm_gprs.c: 540: break;
 22116  002D32  D00A               	goto	l1043
 22117  002D34                     l1040:
 22118                           
 22119                           ; BSR set to: 0
 22120                           
 22121                           ; BSR set to: 0
 22122  002D34  519C               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 22123                           
 22124                           ; Switch size 1, requested type "space"
 22125                           ; Number of cases is 3, Range of values is 0 to 2
 22126                           ; switch strategies available:
 22127                           ; Name         Instructions Cycles
 22128                           ; simple_byte           10     6 (average)
 22129                           ;	Chosen strategy is simple_byte
 22130  002D36  0A00               	xorlw	0	; case 0
 22131  002D38  B4D8               	btfsc	status,2,c
 22132  002D3A  D7B1               	goto	l1041
 22133  002D3C  0A01               	xorlw	1	; case 1
 22134  002D3E  B4D8               	btfsc	status,2,c
 22135  002D40  D7C7               	goto	l1044
 22136  002D42  0A03               	xorlw	3	; case 2
 22137  002D44  B4D8               	btfsc	status,2,c
 22138  002D46  D7DF               	goto	l1046
 22139  002D48                     l1043:
 22140                           
 22141                           ; BSR set to: 0
 22142  002D48  0100               	movlb	0	; () banked
 22143  002D4A  2B9C               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 22144  002D4C  D7A4               	goto	l12985
 22145  002D4E                     u12170:
 22146                           
 22147                           ; BSR set to: 0
 22148                           ;mdm_gsm_gprs.c: 545: }
 22149                           ;mdm_gsm_gprs.c: 548: if (Match == 1)
 22150                           
 22151                           ; BSR set to: 0
 22152  002D4E  059B               	decf	ModemEvtParser@Match& (0+255),w,b
 22153  002D50  A4D8               	btfss	status,2,c
 22154  002D52  0012               	return	
 22155                           
 22156                           ; BSR set to: 0
 22157                           ;mdm_gsm_gprs.c: 549: {
 22158                           ;mdm_gsm_gprs.c: 552: Uart_ClearRxBuffer();
 22159  002D54  EC15  F02C         	call	_Uart_ClearRxBuffer	;wreg free
 22160  002D58  0012               	return	
 22161  002D5A                     __end_of_ModemEvtParser:
 22162                           	opt stack 0
 22163                           tosu	equ	0xFFF
 22164                           tosh	equ	0xFFE
 22165                           tosl	equ	0xFFD
 22166                           pclath	equ	0xFFA
 22167                           tblptru	equ	0xFF8
 22168                           tblptrh	equ	0xFF7
 22169                           tblptrl	equ	0xFF6
 22170                           tablat	equ	0xFF5
 22171                           prodh	equ	0xFF4
 22172                           prodl	equ	0xFF3
 22173                           intcon	equ	0xFF2
 22174                           intcon2	equ	0xFF1
 22175                           intcon3	equ	0xFF0
 22176                           indf0	equ	0xFEF
 22177                           postinc0	equ	0xFEE
 22178                           plusw0	equ	0xFEB
 22179                           fsr0h	equ	0xFEA
 22180                           fsr0l	equ	0xFE9
 22181                           wreg	equ	0xFE8
 22182                           indf1	equ	0xFE7
 22183                           postinc1	equ	0xFE6
 22184                           postdec1	equ	0xFE5
 22185                           plusw1	equ	0xFE3
 22186                           fsr1h	equ	0xFE2
 22187                           fsr1l	equ	0xFE1
 22188                           indf2	equ	0xFDF
 22189                           postinc2	equ	0xFDE
 22190                           postdec2	equ	0xFDD
 22191                           plusw2	equ	0xFDB
 22192                           fsr2h	equ	0xFDA
 22193                           fsr2l	equ	0xFD9
 22194                           status	equ	0xFD8
 22195                           
 22196 ;; *************** function _Uart_ClearRxBuffer *****************
 22197 ;; Defined at:
 22198 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 22199 ;; Parameters:    Size  Location     Type
 22200 ;;		None
 22201 ;; Auto vars:     Size  Location     Type
 22202 ;;  Index           2   29[BANK0 ] unsigned short 
 22203 ;; Return value:  Size  Location     Type
 22204 ;;                  1    wreg      void 
 22205 ;; Registers used:
 22206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22207 ;; Tracked objects:
 22208 ;;		On entry : 0/0
 22209 ;;		On exit  : 0/0
 22210 ;;		Unchanged: 0/0
 22211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22213 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22215 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22216 ;;Total ram usage:        2 bytes
 22217 ;; Hardware stack levels used:    1
 22218 ;; Hardware stack levels required when called:   11
 22219 ;; This function calls:
 22220 ;;		Nothing
 22221 ;; This function is called by:
 22222 ;;		_ModemEvtParser
 22223 ;; This function uses a non-reentrant model
 22224 ;;
 22225                           
 22226                           	psect	text102
 22227  00582A                     __ptext102:
 22228                           	opt stack 0
 22229  00582A                     _Uart_ClearRxBuffer:
 22230                           	opt stack 15
 22231                           
 22232                           ;uart_drv.c: 567: UINT16 Index = 0;
 22233                           
 22234                           ;incstack = 0
 22235  00582A  0E00               	movlw	0
 22236  00582C  0100               	movlb	0	; () banked
 22237  00582E  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 22238  005830  0E00               	movlw	0
 22239  005832  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 22240                           
 22241                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 22242  005834  0E00               	movlw	0
 22243  005836  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 22244  005838  0E00               	movlw	0
 22245  00583A  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 22246  00583C                     l9055:
 22247                           
 22248                           ; BSR set to: 0
 22249  00583C  0E90               	movlw	144
 22250  00583E  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 22251  005840  0E01               	movlw	1
 22252  005842  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 22253  005844  B0D8               	btfsc	status,0,c
 22254  005846  0012               	return	
 22255                           
 22256                           ; BSR set to: 0
 22257                           ;uart_drv.c: 571: {
 22258                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 22259                           
 22260                           ; BSR set to: 0
 22261                           
 22262                           ; BSR set to: 0
 22263  005848  0E58               	movlw	low _RxBuffer
 22264  00584A  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 22265  00584C  6ED9               	movwf	fsr2l,c
 22266  00584E  0E0C               	movlw	high _RxBuffer
 22267  005850  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 22268  005852  6EDA               	movwf	fsr2h,c
 22269  005854  0E00               	movlw	0
 22270  005856  6EDF               	movwf	indf2,c
 22271                           
 22272                           ; BSR set to: 0
 22273  005858  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 22274  00585A  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 22275  00585C  D7EF               	goto	l9055
 22276  00585E                     __end_of_Uart_ClearRxBuffer:
 22277                           	opt stack 0
 22278                           tosu	equ	0xFFF
 22279                           tosh	equ	0xFFE
 22280                           tosl	equ	0xFFD
 22281                           pclath	equ	0xFFA
 22282                           tblptru	equ	0xFF8
 22283                           tblptrh	equ	0xFF7
 22284                           tblptrl	equ	0xFF6
 22285                           tablat	equ	0xFF5
 22286                           prodh	equ	0xFF4
 22287                           prodl	equ	0xFF3
 22288                           intcon	equ	0xFF2
 22289                           intcon2	equ	0xFF1
 22290                           intcon3	equ	0xFF0
 22291                           indf0	equ	0xFEF
 22292                           postinc0	equ	0xFEE
 22293                           plusw0	equ	0xFEB
 22294                           fsr0h	equ	0xFEA
 22295                           fsr0l	equ	0xFE9
 22296                           wreg	equ	0xFE8
 22297                           indf1	equ	0xFE7
 22298                           postinc1	equ	0xFE6
 22299                           postdec1	equ	0xFE5
 22300                           plusw1	equ	0xFE3
 22301                           fsr1h	equ	0xFE2
 22302                           fsr1l	equ	0xFE1
 22303                           indf2	equ	0xFDF
 22304                           postinc2	equ	0xFDE
 22305                           postdec2	equ	0xFDD
 22306                           plusw2	equ	0xFDB
 22307                           fsr2h	equ	0xFDA
 22308                           fsr2l	equ	0xFD9
 22309                           status	equ	0xFD8
 22310                           
 22311 ;; *************** function _StringCompare *****************
 22312 ;; Defined at:
 22313 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 22314 ;; Parameters:    Size  Location     Type
 22315 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 22316 ;;		 -> ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), ModemEvtParser@RingString(4), 
 22317 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 22318 ;;		 -> RxBuffer(400), 
 22319 ;;  Len             2   33[BANK0 ] unsigned short 
 22320 ;; Auto vars:     Size  Location     Type
 22321 ;;  Index           2   38[BANK0 ] unsigned short 
 22322 ;;  Result          1   37[BANK0 ] unsigned char 
 22323 ;; Return value:  Size  Location     Type
 22324 ;;                  1    wreg      unsigned char 
 22325 ;; Registers used:
 22326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22327 ;; Tracked objects:
 22328 ;;		On entry : 0/0
 22329 ;;		On exit  : 0/0
 22330 ;;		Unchanged: 0/0
 22331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22332 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22333 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22334 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22335 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22336 ;;Total ram usage:       11 bytes
 22337 ;; Hardware stack levels used:    1
 22338 ;; Hardware stack levels required when called:   11
 22339 ;; This function calls:
 22340 ;;		Nothing
 22341 ;; This function is called by:
 22342 ;;		_ModemEvtParser
 22343 ;; This function uses a non-reentrant model
 22344 ;;
 22345                           
 22346                           	psect	text103
 22347  0051E4                     __ptext103:
 22348                           	opt stack 0
 22349  0051E4                     _StringCompare:
 22350                           	opt stack 15
 22351                           
 22352                           ;sf.c: 77: UINT16 Index = 0;
 22353                           
 22354                           ; BSR set to: 0
 22355                           ;incstack = 0
 22356  0051E4  0E00               	movlw	0
 22357  0051E6  0100               	movlb	0	; () banked
 22358  0051E8  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 22359  0051EA  0E00               	movlw	0
 22360  0051EC  6F86               	movwf	StringCompare@Index& (0+255),b
 22361                           
 22362                           ;sf.c: 78: UINT8 Result = 1;
 22363  0051EE  0E01               	movlw	1
 22364  0051F0  6F85               	movwf	StringCompare@Result& (0+255),b
 22365                           
 22366                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 22367  0051F2  0E00               	movlw	0
 22368  0051F4  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 22369  0051F6  0E00               	movlw	0
 22370  0051F8  6F86               	movwf	StringCompare@Index& (0+255),b
 22371  0051FA  D015               	goto	l2193
 22372  0051FC                     
 22373                           ; BSR set to: 0
 22374                           ;sf.c: 82: {
 22375                           ;sf.c: 83: if (String1[Index] != String2[Index])
 22376                           
 22377                           ; BSR set to: 0
 22378  0051FC  5186               	movf	StringCompare@Index& (0+255),w,b
 22379  0051FE  257F               	addwf	StringCompare@String2& (0+255),w,b
 22380  005200  6ED9               	movwf	fsr2l,c
 22381  005202  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 22382  005204  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 22383  005206  6EDA               	movwf	fsr2h,c
 22384  005208  5186               	movf	StringCompare@Index& (0+255),w,b
 22385  00520A  257D               	addwf	StringCompare@String1& (0+255),w,b
 22386  00520C  6EE1               	movwf	fsr1l,c
 22387  00520E  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 22388  005210  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 22389  005212  6EE2               	movwf	fsr1h,c
 22390  005214  50DE               	movf	postinc2,w,c
 22391  005216  18E6               	xorwf	postinc1,w,c
 22392  005218  B4D8               	btfsc	status,2,c
 22393  00521A  D003               	goto	l2195
 22394                           
 22395                           ; BSR set to: 0
 22396                           ;sf.c: 84: {
 22397                           ;sf.c: 85: Result = 0;
 22398  00521C  0E00               	movlw	0
 22399  00521E  6F85               	movwf	StringCompare@Result& (0+255),b
 22400                           
 22401                           ;sf.c: 86: break;
 22402  005220  D008               	goto	u7130
 22403  005222                     l2195:
 22404                           
 22405                           ; BSR set to: 0
 22406                           
 22407                           ; BSR set to: 0
 22408  005222  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 22409  005224  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 22410  005226                     l2193:
 22411                           
 22412                           ; BSR set to: 0
 22413                           
 22414                           ; BSR set to: 0
 22415  005226  5181               	movf	StringCompare@Len& (0+255),w,b
 22416  005228  5D86               	subwf	StringCompare@Index& (0+255),w,b
 22417  00522A  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 22418  00522C  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 22419  00522E  A0D8               	btfss	status,0,c
 22420  005230  D7E5               	goto	l2194
 22421  005232                     u7130:
 22422                           
 22423                           ; BSR set to: 0
 22424                           ;sf.c: 87: }
 22425                           ;sf.c: 88: }
 22426                           ;sf.c: 91: return Result;
 22427                           
 22428                           ; BSR set to: 0
 22429  005232  5185               	movf	StringCompare@Result& (0+255),w,b
 22430  005234  0012               	return	
 22431  005236                     __end_of_StringCompare:
 22432                           	opt stack 0
 22433                           tosu	equ	0xFFF
 22434                           tosh	equ	0xFFE
 22435                           tosl	equ	0xFFD
 22436                           pclath	equ	0xFFA
 22437                           tblptru	equ	0xFF8
 22438                           tblptrh	equ	0xFF7
 22439                           tblptrl	equ	0xFF6
 22440                           tablat	equ	0xFF5
 22441                           prodh	equ	0xFF4
 22442                           prodl	equ	0xFF3
 22443                           intcon	equ	0xFF2
 22444                           intcon2	equ	0xFF1
 22445                           intcon3	equ	0xFF0
 22446                           indf0	equ	0xFEF
 22447                           postinc0	equ	0xFEE
 22448                           plusw0	equ	0xFEB
 22449                           fsr0h	equ	0xFEA
 22450                           fsr0l	equ	0xFE9
 22451                           wreg	equ	0xFE8
 22452                           indf1	equ	0xFE7
 22453                           postinc1	equ	0xFE6
 22454                           postdec1	equ	0xFE5
 22455                           plusw1	equ	0xFE3
 22456                           fsr1h	equ	0xFE2
 22457                           fsr1l	equ	0xFE1
 22458                           indf2	equ	0xFDF
 22459                           postinc2	equ	0xFDE
 22460                           postdec2	equ	0xFDD
 22461                           plusw2	equ	0xFDB
 22462                           fsr2h	equ	0xFDA
 22463                           fsr2l	equ	0xFD9
 22464                           status	equ	0xFD8
 22465                           
 22466 ;; *************** function _GetSmsSm *****************
 22467 ;; Defined at:
 22468 ;;		line 566 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22469 ;; Parameters:    Size  Location     Type
 22470 ;;		None
 22471 ;; Auto vars:     Size  Location     Type
 22472 ;;		None
 22473 ;; Return value:  Size  Location     Type
 22474 ;;                  1    wreg      void 
 22475 ;; Registers used:
 22476 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22477 ;; Tracked objects:
 22478 ;;		On entry : 0/0
 22479 ;;		On exit  : 0/0
 22480 ;;		Unchanged: 0/0
 22481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22486 ;;Total ram usage:        0 bytes
 22487 ;; Hardware stack levels used:    1
 22488 ;; Hardware stack levels required when called:   13
 22489 ;; This function calls:
 22490 ;;		_GenerateEvt
 22491 ;;		_ReceiveEvt
 22492 ;;		_StringCopy
 22493 ;;		_Uart_WriteConstString
 22494 ;; This function is called by:
 22495 ;;		_Mdm_MainTask
 22496 ;; This function uses a non-reentrant model
 22497 ;;
 22498                           
 22499                           	psect	text104
 22500  002E5A                     __ptext104:
 22501                           	opt stack 0
 22502  002E5A                     _GetSmsSm:
 22503                           	opt stack 14
 22504                           
 22505                           ;mdm_gsm_gprs.c: 568: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 22506                           ;mdm_gsm_gprs.c: 571: if (MdmStatus == ModemConfigured)
 22507                           
 22508                           ; BSR set to: 0
 22509                           ;incstack = 0
 22510  002E5A  0E03               	movlw	3
 22511  002E5C  0100               	movlb	0	; () banked
 22512  002E5E  19CF               	xorwf	_MdmStatus& (0+255),w,b
 22513  002E60  A4D8               	btfss	status,2,c
 22514  002E62  0012               	return	
 22515  002E64  D064               	goto	l1056
 22516  002E66                     
 22517                           ;mdm_gsm_gprs.c: 577: if (ReceiveEvt(&GetSmsText))
 22518                           
 22519                           ; BSR set to: 0
 22520  002E66  0EDA               	movlw	low _GetSmsText
 22521  002E68  0100               	movlb	0	; () banked
 22522  002E6A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22523  002E6C  0E00               	movlw	high _GetSmsText
 22524  002E6E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22525  002E70  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 22526  002E74  0900               	iorlw	0
 22527  002E76  B4D8               	btfsc	status,2,c
 22528  002E78  0012               	return	
 22529                           
 22530                           ;mdm_gsm_gprs.c: 578: {
 22531                           ;mdm_gsm_gprs.c: 580: GetSmsState = GetSms_SendAtCmd;
 22532  002E7A  0E01               	movlw	1
 22533  002E7C  0101               	movlb	1	; () banked
 22534  002E7E  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 22535                           
 22536                           ; BSR set to: 1
 22537                           ;mdm_gsm_gprs.c: 581: }
 22538                           ;mdm_gsm_gprs.c: 582: break;
 22539  002E80  0012               	return	
 22540  002E82                     
 22541                           ; BSR set to: 1
 22542                           ;mdm_gsm_gprs.c: 586: Uart_WriteConstString(1,"AT+CMGR=1\r");
 22543                           
 22544                           ; BSR set to: 1
 22545  002E82  0EC5               	movlw	low STR_4
 22546  002E84  0100               	movlb	0	; () banked
 22547  002E86  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22548  002E88  0EFF               	movlw	high STR_4
 22549  002E8A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22550  002E8C  0E01               	movlw	1
 22551  002E8E  ECA9  F02A         	call	_Uart_WriteConstString
 22552                           
 22553                           ;mdm_gsm_gprs.c: 588: GetSmsState = GetSms_StoreHeader;
 22554  002E92  0E02               	movlw	2
 22555  002E94  0101               	movlb	1	; () banked
 22556  002E96  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 22557                           
 22558                           ;mdm_gsm_gprs.c: 589: break;
 22559  002E98  0012               	return	
 22560  002E9A                     
 22561                           ; BSR set to: 1
 22562                           ;mdm_gsm_gprs.c: 593: if (ReceiveEvt(&NewStringReceived))
 22563                           
 22564                           ; BSR set to: 1
 22565  002E9A  0E3C               	movlw	low _NewStringReceived
 22566  002E9C  0100               	movlb	0	; () banked
 22567  002E9E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22568  002EA0  0E00               	movlw	high _NewStringReceived
 22569  002EA2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22570  002EA4  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 22571  002EA8  0900               	iorlw	0
 22572  002EAA  B4D8               	btfsc	status,2,c
 22573  002EAC  0012               	return	
 22574                           
 22575                           ;mdm_gsm_gprs.c: 594: {
 22576                           ;mdm_gsm_gprs.c: 595: if (RxBuffer[0] != 0)
 22577  002EAE  EE2C  F058         	lfsr	2,_RxBuffer
 22578  002EB2  50DF               	movf	indf2,w,c
 22579  002EB4  B4D8               	btfsc	status,2,c
 22580  002EB6  0012               	return	
 22581                           
 22582                           ;mdm_gsm_gprs.c: 596: {
 22583                           ;mdm_gsm_gprs.c: 598: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 22584  002EB8  0E58               	movlw	low _RxBuffer
 22585  002EBA  0100               	movlb	0	; () banked
 22586  002EBC  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22587  002EBE  0E0C               	movlw	high _RxBuffer
 22588  002EC0  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22589  002EC2  0E00               	movlw	low _Mdm_SmsRx
 22590  002EC4  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22591  002EC6  0E07               	movlw	high _Mdm_SmsRx
 22592  002EC8  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22593  002ECA  C0BE  F081         	movff	_RxLen,StringCopy@Len
 22594  002ECE  C0BF  F082         	movff	_RxLen+1,StringCopy@Len+1
 22595  002ED2  ECDD  F026         	call	_StringCopy	;wreg free
 22596                           
 22597                           ;mdm_gsm_gprs.c: 600: Mdm_SmsRx.HeadLen = RxLen;
 22598  002ED6  C0BE  F782         	movff	_RxLen,_Mdm_SmsRx+130
 22599                           
 22600                           ;mdm_gsm_gprs.c: 602: GetSmsState = GetSms_StoreText;
 22601  002EDA  0E03               	movlw	3
 22602  002EDC  0101               	movlb	1	; () banked
 22603  002EDE  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 22604                           
 22605                           ; BSR set to: 1
 22606                           ;mdm_gsm_gprs.c: 603: }
 22607                           ;mdm_gsm_gprs.c: 604: }
 22608                           ;mdm_gsm_gprs.c: 605: break;
 22609                           
 22610                           ; BSR set to: 1
 22611  002EE0  0012               	return	
 22612  002EE2                     
 22613                           ; BSR set to: 1
 22614                           ;mdm_gsm_gprs.c: 609: if (ReceiveEvt(&NewStringReceived))
 22615                           
 22616                           ; BSR set to: 1
 22617  002EE2  0E3C               	movlw	low _NewStringReceived
 22618  002EE4  0100               	movlb	0	; () banked
 22619  002EE6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22620  002EE8  0E00               	movlw	high _NewStringReceived
 22621  002EEA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22622  002EEC  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 22623  002EF0  0900               	iorlw	0
 22624  002EF2  B4D8               	btfsc	status,2,c
 22625  002EF4  0012               	return	
 22626                           
 22627                           ;mdm_gsm_gprs.c: 610: {
 22628                           ;mdm_gsm_gprs.c: 612: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 22629  002EF6  0E58               	movlw	low _RxBuffer
 22630  002EF8  0100               	movlb	0	; () banked
 22631  002EFA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22632  002EFC  0E0C               	movlw	high _RxBuffer
 22633  002EFE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22634  002F00  0E50               	movlw	low (_Mdm_SmsRx+80)
 22635  002F02  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22636  002F04  0E07               	movlw	high (_Mdm_SmsRx+80)
 22637  002F06  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22638  002F08  C0BE  F081         	movff	_RxLen,StringCopy@Len
 22639  002F0C  C0BF  F082         	movff	_RxLen+1,StringCopy@Len+1
 22640  002F10  ECDD  F026         	call	_StringCopy	;wreg free
 22641                           
 22642                           ;mdm_gsm_gprs.c: 614: Mdm_SmsRx.TextLen = RxLen;
 22643  002F14  C0BE  F783         	movff	_RxLen,_Mdm_SmsRx+131
 22644                           
 22645                           ;mdm_gsm_gprs.c: 616: GetSmsState = GetSms_CheckReq;
 22646  002F18  0E00               	movlw	0
 22647  002F1A  0101               	movlb	1	; () banked
 22648  002F1C  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 22649                           
 22650                           ; BSR set to: 1
 22651                           ;mdm_gsm_gprs.c: 618: GenerateEvt(&SmsTxtReady);
 22652  002F1E  0ED9               	movlw	low _SmsTxtReady
 22653  002F20  0100               	movlb	0	; () banked
 22654  002F22  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22655  002F24  0E00               	movlw	high _SmsTxtReady
 22656  002F26  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22657  002F28  EC7E  F02E         	call	_GenerateEvt	;wreg free
 22658                           
 22659                           ;mdm_gsm_gprs.c: 624: }
 22660                           
 22661                           ;mdm_gsm_gprs.c: 623: break;
 22662                           
 22663                           ;mdm_gsm_gprs.c: 622: default:
 22664                           
 22665                           ;mdm_gsm_gprs.c: 619: }
 22666                           ;mdm_gsm_gprs.c: 620: break;
 22667  002F2C  0012               	return	
 22668  002F2E                     l1056:
 22669  002F2E  0101               	movlb	1	; () banked
 22670  002F30  51F4               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 22671                           
 22672                           ; Switch size 1, requested type "space"
 22673                           ; Number of cases is 4, Range of values is 0 to 3
 22674                           ; switch strategies available:
 22675                           ; Name         Instructions Cycles
 22676                           ; simple_byte           13     7 (average)
 22677                           ;	Chosen strategy is simple_byte
 22678  002F32  0A00               	xorlw	0	; case 0
 22679  002F34  B4D8               	btfsc	status,2,c
 22680  002F36  D797               	goto	l1057
 22681  002F38  0A01               	xorlw	1	; case 1
 22682  002F3A  B4D8               	btfsc	status,2,c
 22683  002F3C  D7A2               	goto	l1060
 22684  002F3E  0A03               	xorlw	3	; case 2
 22685  002F40  B4D8               	btfsc	status,2,c
 22686  002F42  D7AB               	goto	l1061
 22687  002F44  0A01               	xorlw	1	; case 3
 22688  002F46  A4D8               	btfss	status,2,c
 22689                           
 22690                           ; BSR set to: 1
 22691  002F48  0012               	return	
 22692  002F4A  D7CB               	goto	l1064
 22693  002F4C                     __end_of_GetSmsSm:
 22694                           	opt stack 0
 22695                           tosu	equ	0xFFF
 22696                           tosh	equ	0xFFE
 22697                           tosl	equ	0xFFD
 22698                           pclath	equ	0xFFA
 22699                           tblptru	equ	0xFF8
 22700                           tblptrh	equ	0xFF7
 22701                           tblptrl	equ	0xFF6
 22702                           tablat	equ	0xFF5
 22703                           prodh	equ	0xFF4
 22704                           prodl	equ	0xFF3
 22705                           intcon	equ	0xFF2
 22706                           intcon2	equ	0xFF1
 22707                           intcon3	equ	0xFF0
 22708                           indf0	equ	0xFEF
 22709                           postinc0	equ	0xFEE
 22710                           plusw0	equ	0xFEB
 22711                           fsr0h	equ	0xFEA
 22712                           fsr0l	equ	0xFE9
 22713                           wreg	equ	0xFE8
 22714                           indf1	equ	0xFE7
 22715                           postinc1	equ	0xFE6
 22716                           postdec1	equ	0xFE5
 22717                           plusw1	equ	0xFE3
 22718                           fsr1h	equ	0xFE2
 22719                           fsr1l	equ	0xFE1
 22720                           indf2	equ	0xFDF
 22721                           postinc2	equ	0xFDE
 22722                           postdec2	equ	0xFDD
 22723                           plusw2	equ	0xFDB
 22724                           fsr2h	equ	0xFDA
 22725                           fsr2l	equ	0xFD9
 22726                           status	equ	0xFD8
 22727                           
 22728 ;; *************** function _ConfigureModem *****************
 22729 ;; Defined at:
 22730 ;;		line 414 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22731 ;; Parameters:    Size  Location     Type
 22732 ;;		None
 22733 ;; Auto vars:     Size  Location     Type
 22734 ;;		None
 22735 ;; Return value:  Size  Location     Type
 22736 ;;                  1    wreg      void 
 22737 ;; Registers used:
 22738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22739 ;; Tracked objects:
 22740 ;;		On entry : 0/0
 22741 ;;		On exit  : 0/0
 22742 ;;		Unchanged: 0/0
 22743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22748 ;;Total ram usage:        0 bytes
 22749 ;; Hardware stack levels used:    1
 22750 ;; Hardware stack levels required when called:   14
 22751 ;; This function calls:
 22752 ;;		_GenerateEvt
 22753 ;;		_UartSetConfigLow
 22754 ;;		_Uart_InitUartModule
 22755 ;;		_Uart_WriteConstString
 22756 ;; This function is called by:
 22757 ;;		_Mdm_MainTask
 22758 ;; This function uses a non-reentrant model
 22759 ;;
 22760                           
 22761                           	psect	text105
 22762  0038C6                     __ptext105:
 22763                           	opt stack 0
 22764  0038C6                     _ConfigureModem:
 22765                           	opt stack 13
 22766                           
 22767                           ;mdm_gsm_gprs.c: 416: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 22768                           ;mdm_gsm_gprs.c: 417: static MdmConfigStateType NextState = MdmCfg_Init;
 22769                           ;mdm_gsm_gprs.c: 418: static UINT16 DelayValueMs = 0;
 22770                           ;mdm_gsm_gprs.c: 419: static UINT16 DelayCounter = 0;
 22771                           ;mdm_gsm_gprs.c: 421: switch (MdmConfigState)
 22772                           
 22773                           ;incstack = 0
 22774  0038C6  D052               	goto	l1017
 22775  0038C8                     
 22776                           ;mdm_gsm_gprs.c: 425: if (MdmStatus == ModemReady)
 22777  0038C8  0E02               	movlw	2
 22778  0038CA  0100               	movlb	0	; () banked
 22779  0038CC  19CF               	xorwf	_MdmStatus& (0+255),w,b
 22780  0038CE  A4D8               	btfss	status,2,c
 22781  0038D0  0012               	return	
 22782                           
 22783                           ; BSR set to: 0
 22784                           ;mdm_gsm_gprs.c: 426: {
 22785                           ;mdm_gsm_gprs.c: 428: MdmConfigState = MdmCfg_ChangeBaud;
 22786  0038D2  0E01               	movlw	1
 22787  0038D4  6E28               	movwf	ConfigureModem@MdmConfigState,c
 22788                           
 22789                           ; BSR set to: 0
 22790                           ;mdm_gsm_gprs.c: 429: }
 22791                           ;mdm_gsm_gprs.c: 430: break;
 22792  0038D6  0012               	return	
 22793  0038D8                     
 22794                           ;mdm_gsm_gprs.c: 434: Uart_WriteConstString(1,"AT+IPR=9600\r");
 22795                           
 22796                           ; BSR set to: 0
 22797  0038D8  0EAC               	movlw	low STR_2
 22798  0038DA  0100               	movlb	0	; () banked
 22799  0038DC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22800  0038DE  0EFF               	movlw	high STR_2
 22801  0038E0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22802  0038E2  0E01               	movlw	1
 22803  0038E4  ECA9  F02A         	call	_Uart_WriteConstString
 22804                           
 22805                           ;mdm_gsm_gprs.c: 436: UartSetConfigLow();
 22806  0038E8  ECF2  F027         	call	_UartSetConfigLow	;wreg free
 22807                           
 22808                           ;mdm_gsm_gprs.c: 438: Uart_InitUartModule(1,&UartConfig);
 22809  0038EC  0E26               	movlw	low _UartConfig
 22810  0038EE  0100               	movlb	0	; () banked
 22811  0038F0  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 22812  0038F2  0E03               	movlw	high _UartConfig
 22813  0038F4  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 22814  0038F6  0E01               	movlw	1
 22815  0038F8  EC5E  F005         	call	_Uart_InitUartModule
 22816                           
 22817                           ;mdm_gsm_gprs.c: 440: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 22818  0038FC  0E03               	movlw	3
 22819  0038FE  0102               	movlb	2	; () banked
 22820  003900  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 22821  003902  0EE8               	movlw	232
 22822  003904  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 22823                           
 22824                           ; BSR set to: 2
 22825                           ;mdm_gsm_gprs.c: 442: NextState = MdmCfg_SetMdmEchoMode;
 22826  003906  0E02               	movlw	2
 22827  003908  6E27               	movwf	ConfigureModem@NextState,c
 22828                           
 22829                           ; BSR set to: 2
 22830                           ;mdm_gsm_gprs.c: 443: MdmConfigState = MdmCfg_Delay;
 22831  00390A  0E04               	movlw	4
 22832  00390C  6E28               	movwf	ConfigureModem@MdmConfigState,c
 22833                           
 22834                           ;mdm_gsm_gprs.c: 444: break;
 22835  00390E  0012               	return	
 22836  003910                     
 22837                           ;mdm_gsm_gprs.c: 448: Uart_WriteConstString(1,"ATE0\r");
 22838                           
 22839                           ; BSR set to: 2
 22840  003910  0EE1               	movlw	low STR_3
 22841  003912  0100               	movlb	0	; () banked
 22842  003914  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22843  003916  0EFF               	movlw	high STR_3
 22844  003918  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22845  00391A  0E01               	movlw	1
 22846  00391C  ECA9  F02A         	call	_Uart_WriteConstString
 22847                           
 22848                           ;mdm_gsm_gprs.c: 450: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 22849  003920  0E03               	movlw	3
 22850  003922  0102               	movlb	2	; () banked
 22851  003924  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 22852  003926  0EE8               	movlw	232
 22853  003928  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 22854                           
 22855                           ; BSR set to: 2
 22856                           ;mdm_gsm_gprs.c: 452: NextState = MdmCfg_UpdateMdmSts;
 22857  00392A  0E05               	movlw	5
 22858  00392C  6E27               	movwf	ConfigureModem@NextState,c
 22859                           
 22860                           ; BSR set to: 2
 22861                           ;mdm_gsm_gprs.c: 453: MdmConfigState = MdmCfg_Delay;
 22862  00392E  0E04               	movlw	4
 22863  003930  6E28               	movwf	ConfigureModem@MdmConfigState,c
 22864                           
 22865                           ;mdm_gsm_gprs.c: 454: break;
 22866  003932  0012               	return	
 22867  003934                     
 22868                           ;mdm_gsm_gprs.c: 458: DelayCounter++;
 22869                           
 22870                           ; BSR set to: 2
 22871  003934  0102               	movlb	2	; () banked
 22872  003936  4BD8               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 22873  003938  2BD9               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 22874                           
 22875                           ; BSR set to: 2
 22876                           ;mdm_gsm_gprs.c: 460: if (DelayCounter >= DelayValueMs)
 22877  00393A  51DA               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 22878  00393C  5DD8               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 22879  00393E  51DB               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 22880  003940  59D9               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 22881  003942  A0D8               	btfss	status,0,c
 22882  003944  0012               	return	
 22883                           
 22884                           ; BSR set to: 2
 22885                           ;mdm_gsm_gprs.c: 461: {
 22886                           ;mdm_gsm_gprs.c: 463: DelayCounter = 0;
 22887  003946  0E00               	movlw	0
 22888  003948  6FD9               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 22889  00394A  0E00               	movlw	0
 22890  00394C  6FD8               	movwf	ConfigureModem@DelayCounter& (0+255),b
 22891                           
 22892                           ; BSR set to: 2
 22893                           ;mdm_gsm_gprs.c: 465: MdmConfigState = NextState;
 22894  00394E  C027  F028         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 22895                           
 22896                           ; BSR set to: 2
 22897                           ;mdm_gsm_gprs.c: 466: }
 22898                           ;mdm_gsm_gprs.c: 467: break;
 22899  003952  0012               	return	
 22900  003954                     
 22901                           ;mdm_gsm_gprs.c: 471: MdmStatus = ModemConfigured;
 22902                           
 22903                           ; BSR set to: 2
 22904  003954  0E03               	movlw	3
 22905  003956  0100               	movlb	0	; () banked
 22906  003958  6FCF               	movwf	_MdmStatus& (0+255),b
 22907                           
 22908                           ; BSR set to: 0
 22909                           ;mdm_gsm_gprs.c: 473: GenerateEvt(&MdmStsReady);
 22910  00395A  0E39               	movlw	low _MdmStsReady
 22911  00395C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22912  00395E  0E00               	movlw	high _MdmStsReady
 22913  003960  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22914  003962  EC7E  F02E         	call	_GenerateEvt	;wreg free
 22915                           
 22916                           ;mdm_gsm_gprs.c: 475: MdmConfigState = MdmCfg_Stop;
 22917  003966  0E06               	movlw	6
 22918  003968  6E28               	movwf	ConfigureModem@MdmConfigState,c
 22919                           
 22920                           ;mdm_gsm_gprs.c: 483: }
 22921                           
 22922                           ;mdm_gsm_gprs.c: 482: break;
 22923                           
 22924                           ;mdm_gsm_gprs.c: 481: default:
 22925                           
 22926                           ;mdm_gsm_gprs.c: 479: break;
 22927                           
 22928                           ;mdm_gsm_gprs.c: 478: case MdmCfg_Stop:
 22929                           
 22930                           ;mdm_gsm_gprs.c: 476: break;
 22931  00396A  0012               	return	
 22932  00396C                     l1017:
 22933  00396C  5028               	movf	ConfigureModem@MdmConfigState,w,c
 22934                           
 22935                           ; Switch size 1, requested type "space"
 22936                           ; Number of cases is 6, Range of values is 0 to 6
 22937                           ; switch strategies available:
 22938                           ; Name         Instructions Cycles
 22939                           ; simple_byte           19    10 (average)
 22940                           ;	Chosen strategy is simple_byte
 22941  00396E  0A00               	xorlw	0	; case 0
 22942  003970  B4D8               	btfsc	status,2,c
 22943  003972  D7AA               	goto	l1018
 22944  003974  0A01               	xorlw	1	; case 1
 22945  003976  B4D8               	btfsc	status,2,c
 22946  003978  D7AF               	goto	l1021
 22947  00397A  0A03               	xorlw	3	; case 2
 22948  00397C  B4D8               	btfsc	status,2,c
 22949  00397E  D7C8               	goto	l1022
 22950  003980  0A06               	xorlw	6	; case 4
 22951  003982  B4D8               	btfsc	status,2,c
 22952  003984  D7D7               	goto	l1023
 22953  003986  0A01               	xorlw	1	; case 5
 22954  003988  B4D8               	btfsc	status,2,c
 22955  00398A  D7E4               	goto	l1025
 22956  00398C  0A03               	xorlw	3	; case 6
 22957  00398E  0012               	return	
 22958  003990                     __end_of_ConfigureModem:
 22959                           	opt stack 0
 22960                           tosu	equ	0xFFF
 22961                           tosh	equ	0xFFE
 22962                           tosl	equ	0xFFD
 22963                           pclath	equ	0xFFA
 22964                           tblptru	equ	0xFF8
 22965                           tblptrh	equ	0xFF7
 22966                           tblptrl	equ	0xFF6
 22967                           tablat	equ	0xFF5
 22968                           prodh	equ	0xFF4
 22969                           prodl	equ	0xFF3
 22970                           intcon	equ	0xFF2
 22971                           intcon2	equ	0xFF1
 22972                           intcon3	equ	0xFF0
 22973                           indf0	equ	0xFEF
 22974                           postinc0	equ	0xFEE
 22975                           plusw0	equ	0xFEB
 22976                           fsr0h	equ	0xFEA
 22977                           fsr0l	equ	0xFE9
 22978                           wreg	equ	0xFE8
 22979                           indf1	equ	0xFE7
 22980                           postinc1	equ	0xFE6
 22981                           postdec1	equ	0xFE5
 22982                           plusw1	equ	0xFE3
 22983                           fsr1h	equ	0xFE2
 22984                           fsr1l	equ	0xFE1
 22985                           indf2	equ	0xFDF
 22986                           postinc2	equ	0xFDE
 22987                           postdec2	equ	0xFDD
 22988                           plusw2	equ	0xFDB
 22989                           fsr2h	equ	0xFDA
 22990                           fsr2l	equ	0xFD9
 22991                           status	equ	0xFD8
 22992                           
 22993 ;; *************** function _Uart_InitUartModule *****************
 22994 ;; Defined at:
 22995 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 22996 ;; Parameters:    Size  Location     Type
 22997 ;;  Module          1    wreg     unsigned char 
 22998 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 22999 ;;		 -> UartConfig(21), 
 23000 ;; Auto vars:     Size  Location     Type
 23001 ;;  Module          1   65[BANK0 ] unsigned char 
 23002 ;; Return value:  Size  Location     Type
 23003 ;;                  1    wreg      void 
 23004 ;; Registers used:
 23005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23006 ;; Tracked objects:
 23007 ;;		On entry : 0/0
 23008 ;;		On exit  : 0/0
 23009 ;;		Unchanged: 0/0
 23010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23011 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23013 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23014 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23015 ;;Total ram usage:        5 bytes
 23016 ;; Hardware stack levels used:    1
 23017 ;; Hardware stack levels required when called:   13
 23018 ;; This function calls:
 23019 ;;		_SetUartBaudRate
 23020 ;; This function is called by:
 23021 ;;		_ConfigureModem
 23022 ;;		_Mdm_MainTask
 23023 ;; This function uses a non-reentrant model
 23024 ;;
 23025                           
 23026                           	psect	text106
 23027  000ABC                     __ptext106:
 23028                           	opt stack 0
 23029  000ABC                     _Uart_InitUartModule:
 23030                           	opt stack 14
 23031                           
 23032                           ;incstack = 0
 23033                           ;Uart_InitUartModule@Module stored from wreg
 23034  000ABC  0100               	movlb	0	; () banked
 23035  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 23036                           
 23037                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 23038  000AC0  0100               	movlb	0	; () banked
 23039  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 23040  000AC4  A4D8               	btfss	status,2,c
 23041  000AC6  D0BE               	goto	l668
 23042                           
 23043                           ; BSR set to: 0
 23044                           ;uart_drv.c: 291: {
 23045                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 23046  000AC8  9C94               	bcf	3988,6,c	;volatile
 23047                           
 23048                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 23049  000ACA  8E94               	bsf	3988,7,c	;volatile
 23050                           
 23051                           ; BSR set to: 0
 23052                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 23053  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 23054  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 23055  000AD4  0E01               	movlw	1
 23056  000AD6  EC3B  F013         	call	_SetUartBaudRate
 23057                           
 23058                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 23059  000ADA  0E00               	movlw	0
 23060  000ADC  6EAD               	movwf	4013,c	;volatile
 23061                           
 23062                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 23063  000ADE  0100               	movlb	0	; () banked
 23064  000AE0  EE20 F004          	lfsr	2,4
 23065  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23066  000AE6  26D9               	addwf	fsr2l,f,c
 23067  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23068  000AEA  22DA               	addwfc	fsr2h,f,c
 23069  000AEC  50DF               	movf	indf2,w,c
 23070  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23071  000AF0  0E06               	movlw	6
 23072  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23073  000AF4                     u11195:
 23074  000AF4  90D8               	bcf	status,0,c
 23075  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23076  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23077  000AFA  D7FC               	goto	u11195
 23078  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23079  000AFE  12AD               	iorwf	4013,f,c	;volatile
 23080                           
 23081                           ; BSR set to: 0
 23082                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 23083  000B00  EE20 F006          	lfsr	2,6
 23084  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23085  000B06  26D9               	addwf	fsr2l,f,c
 23086  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23087  000B0A  22DA               	addwfc	fsr2h,f,c
 23088  000B0C  50DF               	movf	indf2,w,c
 23089  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23090  000B10  0E05               	movlw	5
 23091  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23092  000B14                     u11205:
 23093  000B14  90D8               	bcf	status,0,c
 23094  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23095  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23096  000B1A  D7FC               	goto	u11205
 23097  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23098  000B1E  12AD               	iorwf	4013,f,c	;volatile
 23099                           
 23100                           ; BSR set to: 0
 23101                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 23102  000B20  EE20 F001          	lfsr	2,1
 23103  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23104  000B26  26D9               	addwf	fsr2l,f,c
 23105  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23106  000B2A  22DA               	addwfc	fsr2h,f,c
 23107  000B2C  50DF               	movf	indf2,w,c
 23108  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23109  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23110  000B32  0BF0               	andlw	240
 23111  000B34  12AD               	iorwf	4013,f,c	;volatile
 23112                           
 23113                           ; BSR set to: 0
 23114                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 23115  000B36  EE20 F008          	lfsr	2,8
 23116  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23117  000B3C  26D9               	addwf	fsr2l,f,c
 23118  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23119  000B40  22DA               	addwfc	fsr2h,f,c
 23120  000B42  50DF               	movf	indf2,w,c
 23121  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23122  000B46  90D8               	bcf	status,0,c
 23123  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23124  000B4A  90D8               	bcf	status,0,c
 23125  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23126  000B4E  90D8               	bcf	status,0,c
 23127  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23128  000B52  12AD               	iorwf	4013,f,c	;volatile
 23129                           
 23130                           ; BSR set to: 0
 23131                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 23132  000B54  EE20 F003          	lfsr	2,3
 23133  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23134  000B5A  26D9               	addwf	fsr2l,f,c
 23135  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23136  000B5E  22DA               	addwfc	fsr2h,f,c
 23137  000B60  50DF               	movf	indf2,w,c
 23138  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23139  000B64  90D8               	bcf	status,0,c
 23140  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23141  000B68  90D8               	bcf	status,0,c
 23142  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23143  000B6C  12AD               	iorwf	4013,f,c	;volatile
 23144                           
 23145                           ; BSR set to: 0
 23146                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 23147  000B6E  0E00               	movlw	0
 23148  000B70  6EAC               	movwf	4012,c	;volatile
 23149                           
 23150                           ; BSR set to: 0
 23151                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 23152  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 23153  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 23154  000B7A  50DF               	movf	indf2,w,c
 23155  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23156  000B7E  0E00               	movlw	0
 23157  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 23158  000B82  0E80               	movlw	128
 23159  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23160  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23161  000B88  12AC               	iorwf	4012,f,c	;volatile
 23162                           
 23163                           ; BSR set to: 0
 23164                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 23165  000B8A  EE20 F005          	lfsr	2,5
 23166  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23167  000B90  26D9               	addwf	fsr2l,f,c
 23168  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23169  000B94  22DA               	addwfc	fsr2h,f,c
 23170  000B96  50DF               	movf	indf2,w,c
 23171  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23172  000B9A  0E06               	movlw	6
 23173  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23174  000B9E                     u11215:
 23175  000B9E  90D8               	bcf	status,0,c
 23176  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23177  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23178  000BA4  D7FC               	goto	u11215
 23179  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23180  000BA8  12AC               	iorwf	4012,f,c	;volatile
 23181                           
 23182                           ; BSR set to: 0
 23183                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 23184  000BAA  EE20 F007          	lfsr	2,7
 23185  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23186  000BB0  26D9               	addwf	fsr2l,f,c
 23187  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23188  000BB4  22DA               	addwfc	fsr2h,f,c
 23189  000BB6  50DF               	movf	indf2,w,c
 23190  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23191  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23192  000BBC  0BF0               	andlw	240
 23193  000BBE  12AC               	iorwf	4012,f,c	;volatile
 23194                           
 23195                           ; BSR set to: 0
 23196                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 23197  000BC0  0E00               	movlw	0
 23198  000BC2  6E7E               	movwf	3966,c	;volatile
 23199                           
 23200                           ; BSR set to: 0
 23201                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 23202  000BC4  EE20 F002          	lfsr	2,2
 23203  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23204  000BCA  26D9               	addwf	fsr2l,f,c
 23205  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23206  000BCE  22DA               	addwfc	fsr2h,f,c
 23207  000BD0  50DF               	movf	indf2,w,c
 23208  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23209  000BD4  90D8               	bcf	status,0,c
 23210  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23211  000BD8  90D8               	bcf	status,0,c
 23212  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23213  000BDC  90D8               	bcf	status,0,c
 23214  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23215  000BE0  127E               	iorwf	3966,f,c	;volatile
 23216                           
 23217                           ; BSR set to: 0
 23218                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 23219  000BE2  EE20 F00A          	lfsr	2,10
 23220  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23221  000BE8  26D9               	addwf	fsr2l,f,c
 23222  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23223  000BEC  22DA               	addwfc	fsr2h,f,c
 23224  000BEE  50DF               	movf	indf2,w,c
 23225  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23226  000BF2  90D8               	bcf	status,0,c
 23227  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23228  000BF6  127E               	iorwf	3966,f,c	;volatile
 23229                           
 23230                           ; BSR set to: 0
 23231                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 23232  000BF8  EE20 F009          	lfsr	2,9
 23233  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23234  000BFE  26D9               	addwf	fsr2l,f,c
 23235  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23236  000C02  22DA               	addwfc	fsr2h,f,c
 23237  000C04  50DF               	movf	indf2,w,c
 23238  000C06  127E               	iorwf	3966,f,c	;volatile
 23239                           
 23240                           ; BSR set to: 0
 23241                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 23242  000C08  EE20 F00B          	lfsr	2,11
 23243  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23244  000C0E  26D9               	addwf	fsr2l,f,c
 23245  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23246  000C12  22DA               	addwfc	fsr2h,f,c
 23247  000C14  50DF               	movf	indf2,w,c
 23248  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23249  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23250  000C1A  509D               	movf	3997,w,c	;volatile
 23251  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23252  000C1E  0BEF               	andlw	-17
 23253  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23254  000C22  6E9D               	movwf	3997,c	;volatile
 23255                           
 23256                           ; BSR set to: 0
 23257                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 23258  000C24  EE20 F00C          	lfsr	2,12
 23259  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23260  000C2A  26D9               	addwf	fsr2l,f,c
 23261  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23262  000C2E  22DA               	addwfc	fsr2h,f,c
 23263  000C30  50DF               	movf	indf2,w,c
 23264  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23265  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23266  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 23267  000C38  509D               	movf	3997,w,c	;volatile
 23268  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23269  000C3C  0BDF               	andlw	-33
 23270  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23271  000C40  6E9D               	movwf	3997,c	;volatile
 23272                           
 23273                           ;uart_drv.c: 326: }
 23274  000C42  0012               	return	
 23275  000C44                     l668:
 23276                           
 23277                           ; BSR set to: 0
 23278                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 23279                           
 23280                           ; BSR set to: 0
 23281  000C44  0E02               	movlw	2
 23282  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 23283  000C48  A4D8               	btfss	status,2,c
 23284  000C4A  0012               	return	
 23285                           
 23286                           ; BSR set to: 0
 23287                           ;uart_drv.c: 328: {
 23288                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 23289  000C4C  9094               	bcf	3988,0,c	;volatile
 23290                           
 23291                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 23292  000C4E  8294               	bsf	3988,1,c	;volatile
 23293                           
 23294                           ; BSR set to: 0
 23295                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 23296  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 23297  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 23298  000C58  0E02               	movlw	2
 23299  000C5A  EC3B  F013         	call	_SetUartBaudRate
 23300                           
 23301                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 23302  000C5E  0E00               	movlw	0
 23303  000C60  6EA8               	movwf	4008,c	;volatile
 23304                           
 23305                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 23306  000C62  0100               	movlb	0	; () banked
 23307  000C64  EE20 F004          	lfsr	2,4
 23308  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23309  000C6A  26D9               	addwf	fsr2l,f,c
 23310  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23311  000C6E  22DA               	addwfc	fsr2h,f,c
 23312  000C70  50DF               	movf	indf2,w,c
 23313  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23314  000C74  0E06               	movlw	6
 23315  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23316  000C78                     u11235:
 23317  000C78  90D8               	bcf	status,0,c
 23318  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23319  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23320  000C7E  D7FC               	goto	u11235
 23321  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23322  000C82  12A8               	iorwf	4008,f,c	;volatile
 23323                           
 23324                           ; BSR set to: 0
 23325                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 23326  000C84  EE20 F006          	lfsr	2,6
 23327  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23328  000C8A  26D9               	addwf	fsr2l,f,c
 23329  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23330  000C8E  22DA               	addwfc	fsr2h,f,c
 23331  000C90  50DF               	movf	indf2,w,c
 23332  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23333  000C94  0E05               	movlw	5
 23334  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23335  000C98                     u11245:
 23336  000C98  90D8               	bcf	status,0,c
 23337  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23338  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23339  000C9E  D7FC               	goto	u11245
 23340  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23341  000CA2  12A8               	iorwf	4008,f,c	;volatile
 23342                           
 23343                           ; BSR set to: 0
 23344                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 23345  000CA4  EE20 F001          	lfsr	2,1
 23346  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23347  000CAA  26D9               	addwf	fsr2l,f,c
 23348  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23349  000CAE  22DA               	addwfc	fsr2h,f,c
 23350  000CB0  50DF               	movf	indf2,w,c
 23351  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23352  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23353  000CB6  0BF0               	andlw	240
 23354  000CB8  12A8               	iorwf	4008,f,c	;volatile
 23355                           
 23356                           ; BSR set to: 0
 23357                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 23358  000CBA  EE20 F008          	lfsr	2,8
 23359  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23360  000CC0  26D9               	addwf	fsr2l,f,c
 23361  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23362  000CC4  22DA               	addwfc	fsr2h,f,c
 23363  000CC6  50DF               	movf	indf2,w,c
 23364  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23365  000CCA  90D8               	bcf	status,0,c
 23366  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23367  000CCE  90D8               	bcf	status,0,c
 23368  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23369  000CD2  90D8               	bcf	status,0,c
 23370  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23371  000CD6  12A8               	iorwf	4008,f,c	;volatile
 23372                           
 23373                           ; BSR set to: 0
 23374                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 23375  000CD8  EE20 F003          	lfsr	2,3
 23376  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23377  000CDE  26D9               	addwf	fsr2l,f,c
 23378  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23379  000CE2  22DA               	addwfc	fsr2h,f,c
 23380  000CE4  50DF               	movf	indf2,w,c
 23381  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23382  000CE8  90D8               	bcf	status,0,c
 23383  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23384  000CEC  90D8               	bcf	status,0,c
 23385  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23386  000CF0  12A8               	iorwf	4008,f,c	;volatile
 23387                           
 23388                           ; BSR set to: 0
 23389                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 23390  000CF2  0E00               	movlw	0
 23391  000CF4  6E9C               	movwf	3996,c	;volatile
 23392                           
 23393                           ; BSR set to: 0
 23394                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 23395  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 23396  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 23397  000CFE  50DF               	movf	indf2,w,c
 23398  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23399  000D02  0E00               	movlw	0
 23400  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 23401  000D06  0E80               	movlw	128
 23402  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23403  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23404  000D0C  129C               	iorwf	3996,f,c	;volatile
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 23408  000D0E  EE20 F005          	lfsr	2,5
 23409  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23410  000D14  26D9               	addwf	fsr2l,f,c
 23411  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23412  000D18  22DA               	addwfc	fsr2h,f,c
 23413  000D1A  50DF               	movf	indf2,w,c
 23414  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23415  000D1E  0E06               	movlw	6
 23416  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23417  000D22                     u11255:
 23418  000D22  90D8               	bcf	status,0,c
 23419  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23420  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23421  000D28  D7FC               	goto	u11255
 23422  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23423  000D2C  129C               	iorwf	3996,f,c	;volatile
 23424                           
 23425                           ; BSR set to: 0
 23426                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 23427  000D2E  EE20 F007          	lfsr	2,7
 23428  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23429  000D34  26D9               	addwf	fsr2l,f,c
 23430  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23431  000D38  22DA               	addwfc	fsr2h,f,c
 23432  000D3A  50DF               	movf	indf2,w,c
 23433  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23434  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23435  000D40  0BF0               	andlw	240
 23436  000D42  129C               	iorwf	3996,f,c	;volatile
 23437                           
 23438                           ; BSR set to: 0
 23439                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 23440  000D44  0E00               	movlw	0
 23441  000D46  6E7C               	movwf	3964,c	;volatile
 23442                           
 23443                           ; BSR set to: 0
 23444                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 23445  000D48  EE20 F002          	lfsr	2,2
 23446  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23447  000D4E  26D9               	addwf	fsr2l,f,c
 23448  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23449  000D52  22DA               	addwfc	fsr2h,f,c
 23450  000D54  50DF               	movf	indf2,w,c
 23451  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23452  000D58  90D8               	bcf	status,0,c
 23453  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23454  000D5C  90D8               	bcf	status,0,c
 23455  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23456  000D60  90D8               	bcf	status,0,c
 23457  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23458  000D64  127C               	iorwf	3964,f,c	;volatile
 23459                           
 23460                           ; BSR set to: 0
 23461                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 23462  000D66  EE20 F00A          	lfsr	2,10
 23463  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23464  000D6C  26D9               	addwf	fsr2l,f,c
 23465  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23466  000D70  22DA               	addwfc	fsr2h,f,c
 23467  000D72  50DF               	movf	indf2,w,c
 23468  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23469  000D76  90D8               	bcf	status,0,c
 23470  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23471  000D7A  127C               	iorwf	3964,f,c	;volatile
 23472                           
 23473                           ; BSR set to: 0
 23474                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 23475  000D7C  EE20 F009          	lfsr	2,9
 23476  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23477  000D82  26D9               	addwf	fsr2l,f,c
 23478  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23479  000D86  22DA               	addwfc	fsr2h,f,c
 23480  000D88  50DF               	movf	indf2,w,c
 23481  000D8A  127C               	iorwf	3964,f,c	;volatile
 23482                           
 23483                           ; BSR set to: 0
 23484                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 23485  000D8C  EE20 F00B          	lfsr	2,11
 23486  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23487  000D92  26D9               	addwf	fsr2l,f,c
 23488  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23489  000D96  22DA               	addwfc	fsr2h,f,c
 23490  000D98  50DF               	movf	indf2,w,c
 23491  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23492  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23493  000D9E  50A3               	movf	4003,w,c	;volatile
 23494  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23495  000DA2  0BEF               	andlw	-17
 23496  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23497  000DA6  6EA3               	movwf	4003,c	;volatile
 23498                           
 23499                           ; BSR set to: 0
 23500                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 23501  000DA8  EE20 F00C          	lfsr	2,12
 23502  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23503  000DAE  26D9               	addwf	fsr2l,f,c
 23504  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23505  000DB2  22DA               	addwfc	fsr2h,f,c
 23506  000DB4  50DF               	movf	indf2,w,c
 23507  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23508  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23509  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 23510  000DBC  50A3               	movf	4003,w,c	;volatile
 23511  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23512  000DC0  0BDF               	andlw	-33
 23513  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23514  000DC4  6EA3               	movwf	4003,c	;volatile
 23515                           
 23516                           ; BSR set to: 0
 23517  000DC6  0012               	return	
 23518  000DC8                     __end_of_Uart_InitUartModule:
 23519                           	opt stack 0
 23520                           tosu	equ	0xFFF
 23521                           tosh	equ	0xFFE
 23522                           tosl	equ	0xFFD
 23523                           pclath	equ	0xFFA
 23524                           tblptru	equ	0xFF8
 23525                           tblptrh	equ	0xFF7
 23526                           tblptrl	equ	0xFF6
 23527                           tablat	equ	0xFF5
 23528                           prodh	equ	0xFF4
 23529                           prodl	equ	0xFF3
 23530                           intcon	equ	0xFF2
 23531                           intcon2	equ	0xFF1
 23532                           intcon3	equ	0xFF0
 23533                           indf0	equ	0xFEF
 23534                           postinc0	equ	0xFEE
 23535                           plusw0	equ	0xFEB
 23536                           fsr0h	equ	0xFEA
 23537                           fsr0l	equ	0xFE9
 23538                           wreg	equ	0xFE8
 23539                           indf1	equ	0xFE7
 23540                           postinc1	equ	0xFE6
 23541                           postdec1	equ	0xFE5
 23542                           plusw1	equ	0xFE3
 23543                           fsr1h	equ	0xFE2
 23544                           fsr1l	equ	0xFE1
 23545                           indf2	equ	0xFDF
 23546                           postinc2	equ	0xFDE
 23547                           postdec2	equ	0xFDD
 23548                           plusw2	equ	0xFDB
 23549                           fsr2h	equ	0xFDA
 23550                           fsr2l	equ	0xFD9
 23551                           status	equ	0xFD8
 23552                           
 23553 ;; *************** function _SetUartBaudRate *****************
 23554 ;; Defined at:
 23555 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23556 ;; Parameters:    Size  Location     Type
 23557 ;;  Module          1    wreg     unsigned char 
 23558 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 23559 ;;		 -> UartConfig(21), 
 23560 ;; Auto vars:     Size  Location     Type
 23561 ;;  Module          1   57[BANK0 ] unsigned char 
 23562 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 23563 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 23564 ;; Return value:  Size  Location     Type
 23565 ;;                  1    wreg      void 
 23566 ;; Registers used:
 23567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23568 ;; Tracked objects:
 23569 ;;		On entry : 0/0
 23570 ;;		On exit  : 0/0
 23571 ;;		Unchanged: 0/0
 23572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23573 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23574 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23575 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23576 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23577 ;;Total ram usage:        7 bytes
 23578 ;; Hardware stack levels used:    1
 23579 ;; Hardware stack levels required when called:   12
 23580 ;; This function calls:
 23581 ;;		___lldiv
 23582 ;;		___lmul
 23583 ;; This function is called by:
 23584 ;;		_Uart_InitUartModule
 23585 ;; This function uses a non-reentrant model
 23586 ;;
 23587                           
 23588                           	psect	text107
 23589  002676                     __ptext107:
 23590                           	opt stack 0
 23591  002676                     _SetUartBaudRate:
 23592                           	opt stack 14
 23593                           
 23594                           ; BSR set to: 0
 23595                           ;incstack = 0
 23596                           ;SetUartBaudRate@Module stored from wreg
 23597  002676  0100               	movlb	0	; () banked
 23598  002678  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 23599                           
 23600                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 23601  00267A  0E00               	movlw	0
 23602  00267C  0100               	movlb	0	; () banked
 23603  00267E  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 23604  002680  0E00               	movlw	0
 23605  002682  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 23606                           
 23607                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 23608  002684  0E00               	movlw	0
 23609  002686  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 23610                           
 23611                           ; BSR set to: 0
 23612                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 23613  002688  EE20 F002          	lfsr	2,2
 23614  00268C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23615  00268E  26D9               	addwf	fsr2l,f,c
 23616  002690  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23617  002692  22DA               	addwfc	fsr2h,f,c
 23618  002694  50DF               	movf	indf2,w,c
 23619  002696  A4D8               	btfss	status,2,c
 23620  002698  D00B               	goto	l625
 23621                           
 23622                           ; BSR set to: 0
 23623  00269A  EE20 F002          	lfsr	2,2
 23624  00269E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23625  0026A0  26D9               	addwf	fsr2l,f,c
 23626  0026A2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23627  0026A4  22DA               	addwfc	fsr2h,f,c
 23628  0026A6  50DF               	movf	indf2,w,c
 23629  0026A8  A4D8               	btfss	status,2,c
 23630  0026AA  D002               	goto	l625
 23631                           
 23632                           ; BSR set to: 0
 23633                           ;uart_drv.c: 128: {
 23634                           ;uart_drv.c: 129: DivisionFactor = 64;
 23635  0026AC  0E40               	movlw	64
 23636  0026AE  D039               	goto	L28
 23637  0026B0                     l625:
 23638                           
 23639                           ; BSR set to: 0
 23640                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 23641                           
 23642                           ; BSR set to: 0
 23643  0026B0  EE20 F002          	lfsr	2,2
 23644  0026B4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23645  0026B6  26D9               	addwf	fsr2l,f,c
 23646  0026B8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23647  0026BA  22DA               	addwfc	fsr2h,f,c
 23648  0026BC  04DE               	decf	postinc2,w,c
 23649  0026BE  A4D8               	btfss	status,2,c
 23650  0026C0  D009               	goto	l627
 23651                           
 23652                           ; BSR set to: 0
 23653  0026C2  EE20 F002          	lfsr	2,2
 23654  0026C6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23655  0026C8  26D9               	addwf	fsr2l,f,c
 23656  0026CA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23657  0026CC  22DA               	addwfc	fsr2h,f,c
 23658  0026CE  50DF               	movf	indf2,w,c
 23659  0026D0  B4D8               	btfsc	status,2,c
 23660  0026D2  D012               	goto	u10550
 23661  0026D4                     l627:
 23662                           
 23663                           ; BSR set to: 0
 23664                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 23665                           
 23666                           ; BSR set to: 0
 23667  0026D4  EE20 F002          	lfsr	2,2
 23668  0026D8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23669  0026DA  26D9               	addwf	fsr2l,f,c
 23670  0026DC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23671  0026DE  22DA               	addwfc	fsr2h,f,c
 23672  0026E0  50DF               	movf	indf2,w,c
 23673  0026E2  A4D8               	btfss	status,2,c
 23674  0026E4  D00B               	goto	l629
 23675                           
 23676                           ; BSR set to: 0
 23677  0026E6  EE20 F002          	lfsr	2,2
 23678  0026EA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23679  0026EC  26D9               	addwf	fsr2l,f,c
 23680  0026EE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23681  0026F0  22DA               	addwfc	fsr2h,f,c
 23682  0026F2  04DE               	decf	postinc2,w,c
 23683  0026F4  A4D8               	btfss	status,2,c
 23684  0026F6  D002               	goto	l629
 23685  0026F8                     u10550:
 23686                           
 23687                           ; BSR set to: 0
 23688                           ;uart_drv.c: 136: {
 23689                           ;uart_drv.c: 137: DivisionFactor = 16;
 23690  0026F8  0E10               	movlw	16
 23691  0026FA  D013               	goto	L28
 23692  0026FC                     l629:
 23693                           
 23694                           ; BSR set to: 0
 23695                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 23696                           
 23697                           ; BSR set to: 0
 23698  0026FC  EE20 F002          	lfsr	2,2
 23699  002700  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23700  002702  26D9               	addwf	fsr2l,f,c
 23701  002704  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23702  002706  22DA               	addwfc	fsr2h,f,c
 23703  002708  04DE               	decf	postinc2,w,c
 23704  00270A  A4D8               	btfss	status,2,c
 23705  00270C  D00B               	goto	l631
 23706                           
 23707                           ; BSR set to: 0
 23708  00270E  EE20 F002          	lfsr	2,2
 23709  002712  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23710  002714  26D9               	addwf	fsr2l,f,c
 23711  002716  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23712  002718  22DA               	addwfc	fsr2h,f,c
 23713  00271A  04DE               	decf	postinc2,w,c
 23714  00271C  A4D8               	btfss	status,2,c
 23715  00271E  D002               	goto	l631
 23716                           
 23717                           ; BSR set to: 0
 23718                           ;uart_drv.c: 140: {
 23719                           ;uart_drv.c: 141: DivisionFactor = 4;
 23720  002720  0E04               	movlw	4
 23721  002722                     L28:
 23722  002722  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 23723  002724                     l631:
 23724                           
 23725                           ; BSR set to: 0
 23726                           ;uart_drv.c: 146: }
 23727                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 23728                           
 23729                           ; BSR set to: 0
 23730                           
 23731                           ; BSR set to: 0
 23732                           
 23733                           ; BSR set to: 0
 23734                           
 23735                           ; BSR set to: 0
 23736                           
 23737                           ;uart_drv.c: 143: else
 23738                           ;uart_drv.c: 144: {
 23739                           
 23740                           ; BSR set to: 0
 23741  002724  EE20 F00D          	lfsr	2,13
 23742  002728  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23743  00272A  26D9               	addwf	fsr2l,f,c
 23744  00272C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23745  00272E  22DA               	addwfc	fsr2h,f,c
 23746  002730  CFDE F089          	movff	postinc2,___lldiv@dividend
 23747  002734  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 23748  002738  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 23749  00273C  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 23750  002740  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 23751  002742  6F7D               	movwf	___lmul@multiplier& (0+255),b
 23752  002744  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23753  002746  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23754  002748  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 23755  00274A  EE20 F011          	lfsr	2,17
 23756  00274E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23757  002750  26D9               	addwf	fsr2l,f,c
 23758  002752  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23759  002754  22DA               	addwfc	fsr2h,f,c
 23760  002756  CFDE F081          	movff	postinc2,___lmul@multiplicand
 23761  00275A  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 23762  00275E  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 23763  002762  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 23764  002766  ECC6  F027         	call	___lmul	;wreg free
 23765  00276A  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 23766  00276E  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 23767  002772  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 23768  002776  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 23769  00277A  ECAC  F024         	call	___lldiv	;wreg free
 23770  00277E  0EFF               	movlw	255
 23771  002780  0100               	movlb	0	; () banked
 23772  002782  2589               	addwf	?___lldiv& (0+255),w,b
 23773  002784  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 23774  002786  0EFF               	movlw	255
 23775  002788  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 23776  00278A  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 23777                           
 23778                           ; BSR set to: 0
 23779                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 23780  00278C  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 23781  00278E  A4D8               	btfss	status,2,c
 23782  002790  D005               	goto	l633
 23783                           
 23784                           ; BSR set to: 0
 23785                           ;uart_drv.c: 152: {
 23786                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 23787  002792  0E00               	movlw	0
 23788  002794  6E7F               	movwf	3967,c	;volatile
 23789                           
 23790                           ; BSR set to: 0
 23791                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 23792  002796  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 23793                           
 23794                           ;uart_drv.c: 156: }
 23795  00279A  0012               	return	
 23796  00279C                     l633:
 23797                           
 23798                           ; BSR set to: 0
 23799                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 23800                           
 23801                           ; BSR set to: 0
 23802  00279C  0E02               	movlw	2
 23803  00279E  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 23804  0027A0  A4D8               	btfss	status,2,c
 23805  0027A2  0012               	return	
 23806                           
 23807                           ; BSR set to: 0
 23808                           ;uart_drv.c: 158: {
 23809                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 23810  0027A4  0E00               	movlw	0
 23811  0027A6  6E7D               	movwf	3965,c	;volatile
 23812                           
 23813                           ; BSR set to: 0
 23814                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 23815  0027A8  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 23816                           
 23817                           ; BSR set to: 0
 23818  0027AC  0012               	return	
 23819  0027AE                     __end_of_SetUartBaudRate:
 23820                           	opt stack 0
 23821                           tosu	equ	0xFFF
 23822                           tosh	equ	0xFFE
 23823                           tosl	equ	0xFFD
 23824                           pclath	equ	0xFFA
 23825                           tblptru	equ	0xFF8
 23826                           tblptrh	equ	0xFF7
 23827                           tblptrl	equ	0xFF6
 23828                           tablat	equ	0xFF5
 23829                           prodh	equ	0xFF4
 23830                           prodl	equ	0xFF3
 23831                           intcon	equ	0xFF2
 23832                           intcon2	equ	0xFF1
 23833                           intcon3	equ	0xFF0
 23834                           indf0	equ	0xFEF
 23835                           postinc0	equ	0xFEE
 23836                           plusw0	equ	0xFEB
 23837                           fsr0h	equ	0xFEA
 23838                           fsr0l	equ	0xFE9
 23839                           wreg	equ	0xFE8
 23840                           indf1	equ	0xFE7
 23841                           postinc1	equ	0xFE6
 23842                           postdec1	equ	0xFE5
 23843                           plusw1	equ	0xFE3
 23844                           fsr1h	equ	0xFE2
 23845                           fsr1l	equ	0xFE1
 23846                           indf2	equ	0xFDF
 23847                           postinc2	equ	0xFDE
 23848                           postdec2	equ	0xFDD
 23849                           plusw2	equ	0xFDB
 23850                           fsr2h	equ	0xFDA
 23851                           fsr2l	equ	0xFD9
 23852                           status	equ	0xFD8
 23853                           
 23854 ;; *************** function ___lmul *****************
 23855 ;; Defined at:
 23856 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 23857 ;; Parameters:    Size  Location     Type
 23858 ;;  multiplier      4   29[BANK0 ] unsigned long 
 23859 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 23860 ;; Auto vars:     Size  Location     Type
 23861 ;;  product         4   37[BANK0 ] unsigned long 
 23862 ;; Return value:  Size  Location     Type
 23863 ;;                  4   29[BANK0 ] unsigned long 
 23864 ;; Registers used:
 23865 ;;		wreg, status,2, status,0
 23866 ;; Tracked objects:
 23867 ;;		On entry : 0/0
 23868 ;;		On exit  : 0/0
 23869 ;;		Unchanged: 0/0
 23870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23871 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23872 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23874 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23875 ;;Total ram usage:       12 bytes
 23876 ;; Hardware stack levels used:    1
 23877 ;; Hardware stack levels required when called:   11
 23878 ;; This function calls:
 23879 ;;		Nothing
 23880 ;; This function is called by:
 23881 ;;		_Tmr_TmrBPrSet
 23882 ;;		_SetUartBaudRate
 23883 ;;		_strtol
 23884 ;; This function uses a non-reentrant model
 23885 ;;
 23886                           
 23887                           	psect	text108
 23888  004F8C                     __ptext108:
 23889                           	opt stack 0
 23890  004F8C                     ___lmul:
 23891                           	opt stack 15
 23892                           
 23893                           ; BSR set to: 0
 23894                           ;incstack = 0
 23895  004F8C  0E00               	movlw	0
 23896  004F8E  0100               	movlb	0	; () banked
 23897  004F90  6F85               	movwf	___lmul@product& (0+255),b
 23898  004F92  0E00               	movlw	0
 23899  004F94  6F86               	movwf	(___lmul@product+1)& (0+255),b
 23900  004F96  0E00               	movlw	0
 23901  004F98  6F87               	movwf	(___lmul@product+2)& (0+255),b
 23902  004F9A  0E00               	movlw	0
 23903  004F9C  6F88               	movwf	(___lmul@product+3)& (0+255),b
 23904  004F9E                     
 23905                           ; BSR set to: 0
 23906                           
 23907                           ; BSR set to: 0
 23908  004F9E  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 23909  004FA0  D008               	goto	l2567
 23910                           
 23911                           ; BSR set to: 0
 23912  004FA2  5181               	movf	___lmul@multiplicand& (0+255),w,b
 23913  004FA4  2785               	addwf	___lmul@product& (0+255),f,b
 23914  004FA6  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23915  004FA8  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 23916  004FAA  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23917  004FAC  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 23918  004FAE  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23919  004FB0  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 23920  004FB2                     l2567:
 23921                           
 23922                           ; BSR set to: 0
 23923                           
 23924                           ; BSR set to: 0
 23925  004FB2  90D8               	bcf	status,0,c
 23926  004FB4  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 23927  004FB6  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23928  004FB8  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23929  004FBA  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23930                           
 23931                           ; BSR set to: 0
 23932  004FBC  90D8               	bcf	status,0,c
 23933  004FBE  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23934  004FC0  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23935  004FC2  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23936  004FC4  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 23937  004FC6  517D               	movf	___lmul@multiplier& (0+255),w,b
 23938  004FC8  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23939  004FCA  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23940  004FCC  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23941  004FCE  A4D8               	btfss	status,2,c
 23942  004FD0  D7E6               	goto	l2566
 23943                           
 23944                           ; BSR set to: 0
 23945  004FD2  C085  F07D         	movff	___lmul@product,?___lmul
 23946  004FD6  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 23947  004FDA  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 23948  004FDE  C088  F080         	movff	___lmul@product+3,?___lmul+3
 23949                           
 23950                           ; BSR set to: 0
 23951  004FE2  0012               	return		;funcret
 23952  004FE4                     __end_of___lmul:
 23953                           	opt stack 0
 23954                           tosu	equ	0xFFF
 23955                           tosh	equ	0xFFE
 23956                           tosl	equ	0xFFD
 23957                           pclath	equ	0xFFA
 23958                           tblptru	equ	0xFF8
 23959                           tblptrh	equ	0xFF7
 23960                           tblptrl	equ	0xFF6
 23961                           tablat	equ	0xFF5
 23962                           prodh	equ	0xFF4
 23963                           prodl	equ	0xFF3
 23964                           intcon	equ	0xFF2
 23965                           intcon2	equ	0xFF1
 23966                           intcon3	equ	0xFF0
 23967                           indf0	equ	0xFEF
 23968                           postinc0	equ	0xFEE
 23969                           plusw0	equ	0xFEB
 23970                           fsr0h	equ	0xFEA
 23971                           fsr0l	equ	0xFE9
 23972                           wreg	equ	0xFE8
 23973                           indf1	equ	0xFE7
 23974                           postinc1	equ	0xFE6
 23975                           postdec1	equ	0xFE5
 23976                           plusw1	equ	0xFE3
 23977                           fsr1h	equ	0xFE2
 23978                           fsr1l	equ	0xFE1
 23979                           indf2	equ	0xFDF
 23980                           postinc2	equ	0xFDE
 23981                           postdec2	equ	0xFDD
 23982                           plusw2	equ	0xFDB
 23983                           fsr2h	equ	0xFDA
 23984                           fsr2l	equ	0xFD9
 23985                           status	equ	0xFD8
 23986                           
 23987 ;; *************** function _UartSetConfigLow *****************
 23988 ;; Defined at:
 23989 ;;		line 224 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23990 ;; Parameters:    Size  Location     Type
 23991 ;;		None
 23992 ;; Auto vars:     Size  Location     Type
 23993 ;;		None
 23994 ;; Return value:  Size  Location     Type
 23995 ;;                  1    wreg      void 
 23996 ;; Registers used:
 23997 ;;		wreg, status,2
 23998 ;; Tracked objects:
 23999 ;;		On entry : 0/0
 24000 ;;		On exit  : 0/0
 24001 ;;		Unchanged: 0/0
 24002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24007 ;;Total ram usage:        0 bytes
 24008 ;; Hardware stack levels used:    1
 24009 ;; Hardware stack levels required when called:   11
 24010 ;; This function calls:
 24011 ;;		Nothing
 24012 ;; This function is called by:
 24013 ;;		_ConfigureModem
 24014 ;; This function uses a non-reentrant model
 24015 ;;
 24016                           
 24017                           	psect	text109
 24018  004FE4                     __ptext109:
 24019                           	opt stack 0
 24020  004FE4                     _UartSetConfigLow:
 24021                           	opt stack 15
 24022                           
 24023                           ;mdm_gsm_gprs.c: 226: UartConfig.UartEnable = ((UINT8)(1));
 24024                           
 24025                           ; BSR set to: 0
 24026                           ;incstack = 0
 24027  004FE4  0E01               	movlw	1
 24028  004FE6  0103               	movlb	3	; () banked
 24029  004FE8  6F26               	movwf	_UartConfig& (0+255),b
 24030                           
 24031                           ;mdm_gsm_gprs.c: 227: UartConfig.UartMode = ((UINT8)(0));
 24032  004FEA  0E00               	movlw	0
 24033  004FEC  6F27               	movwf	(_UartConfig+1)& (0+255),b
 24034                           
 24035                           ;mdm_gsm_gprs.c: 228: UartConfig.BaudRateMode = ((UINT8)(0));
 24036  004FEE  0E00               	movlw	0
 24037  004FF0  6F28               	movwf	(_UartConfig+2)& (0+255),b
 24038                           
 24039                           ;mdm_gsm_gprs.c: 229: UartConfig.HighBaudMode = ((UINT8)(0));
 24040  004FF2  0E00               	movlw	0
 24041  004FF4  6F29               	movwf	(_UartConfig+3)& (0+255),b
 24042                           
 24043                           ;mdm_gsm_gprs.c: 230: UartConfig.Tx9bitMode = ((UINT8)(0));
 24044  004FF6  0E00               	movlw	0
 24045  004FF8  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 24046                           
 24047                           ;mdm_gsm_gprs.c: 231: UartConfig.Rx9bitMode = ((UINT8)(0));
 24048  004FFA  0E00               	movlw	0
 24049  004FFC  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 24050                           
 24051                           ;mdm_gsm_gprs.c: 232: UartConfig.TxEnable = ((UINT8)(1));
 24052  004FFE  0E01               	movlw	1
 24053  005000  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 24054                           
 24055                           ;mdm_gsm_gprs.c: 233: UartConfig.RxEnable = ((UINT8)(1));
 24056  005002  0E01               	movlw	1
 24057  005004  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 24058                           
 24059                           ;mdm_gsm_gprs.c: 234: UartConfig.SendBreakEnable = ((UINT8)(0));
 24060  005006  0E00               	movlw	0
 24061  005008  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 24062                           
 24063                           ;mdm_gsm_gprs.c: 235: UartConfig.AutobaudEnable = ((UINT8)(0));
 24064  00500A  0E00               	movlw	0
 24065  00500C  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 24066                           
 24067                           ;mdm_gsm_gprs.c: 236: UartConfig.WakeUpEnable = ((UINT8)(0));
 24068  00500E  0E00               	movlw	0
 24069  005010  6F30               	movwf	(_UartConfig+10)& (0+255),b
 24070                           
 24071                           ;mdm_gsm_gprs.c: 237: UartConfig.TxInterruptEnable = ((UINT8)(0));
 24072  005012  0E00               	movlw	0
 24073  005014  6F31               	movwf	(_UartConfig+11)& (0+255),b
 24074                           
 24075                           ;mdm_gsm_gprs.c: 238: UartConfig.RxInterruptEnable = ((UINT8)(1));
 24076  005016  0E01               	movlw	1
 24077  005018  6F32               	movwf	(_UartConfig+12)& (0+255),b
 24078                           
 24079                           ;mdm_gsm_gprs.c: 239: UartConfig.McuBusClock = ((UINT32)(48000000));
 24080  00501A  0E00               	movlw	0
 24081  00501C  6F33               	movwf	(_UartConfig+13)& (0+255),b
 24082  00501E  0E6C               	movlw	108
 24083  005020  6F34               	movwf	(_UartConfig+14)& (0+255),b
 24084  005022  0EDC               	movlw	220
 24085  005024  6F35               	movwf	(_UartConfig+15)& (0+255),b
 24086  005026  0E02               	movlw	2
 24087  005028  6F36               	movwf	(_UartConfig+16)& (0+255),b
 24088                           
 24089                           ;mdm_gsm_gprs.c: 240: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 24090  00502A  0E80               	movlw	128
 24091  00502C  6F37               	movwf	(_UartConfig+17)& (0+255),b
 24092  00502E  0E25               	movlw	37
 24093  005030  6F38               	movwf	(_UartConfig+18)& (0+255),b
 24094  005032  0E00               	movlw	0
 24095  005034  6F39               	movwf	(_UartConfig+19)& (0+255),b
 24096  005036  0E00               	movlw	0
 24097  005038  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 24098                           
 24099                           ; BSR set to: 3
 24100  00503A  0012               	return		;funcret
 24101  00503C                     __end_of_UartSetConfigLow:
 24102                           	opt stack 0
 24103                           tosu	equ	0xFFF
 24104                           tosh	equ	0xFFE
 24105                           tosl	equ	0xFFD
 24106                           pclath	equ	0xFFA
 24107                           tblptru	equ	0xFF8
 24108                           tblptrh	equ	0xFF7
 24109                           tblptrl	equ	0xFF6
 24110                           tablat	equ	0xFF5
 24111                           prodh	equ	0xFF4
 24112                           prodl	equ	0xFF3
 24113                           intcon	equ	0xFF2
 24114                           intcon2	equ	0xFF1
 24115                           intcon3	equ	0xFF0
 24116                           indf0	equ	0xFEF
 24117                           postinc0	equ	0xFEE
 24118                           plusw0	equ	0xFEB
 24119                           fsr0h	equ	0xFEA
 24120                           fsr0l	equ	0xFE9
 24121                           wreg	equ	0xFE8
 24122                           indf1	equ	0xFE7
 24123                           postinc1	equ	0xFE6
 24124                           postdec1	equ	0xFE5
 24125                           plusw1	equ	0xFE3
 24126                           fsr1h	equ	0xFE2
 24127                           fsr1l	equ	0xFE1
 24128                           indf2	equ	0xFDF
 24129                           postinc2	equ	0xFDE
 24130                           postdec2	equ	0xFDD
 24131                           plusw2	equ	0xFDB
 24132                           fsr2h	equ	0xFDA
 24133                           fsr2l	equ	0xFD9
 24134                           status	equ	0xFD8
 24135                           
 24136 ;; *************** function _CheckModem *****************
 24137 ;; Defined at:
 24138 ;;		line 278 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24139 ;; Parameters:    Size  Location     Type
 24140 ;;		None
 24141 ;; Auto vars:     Size  Location     Type
 24142 ;;		None
 24143 ;; Return value:  Size  Location     Type
 24144 ;;                  1    wreg      void 
 24145 ;; Registers used:
 24146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24147 ;; Tracked objects:
 24148 ;;		On entry : 0/0
 24149 ;;		On exit  : 0/0
 24150 ;;		Unchanged: 0/0
 24151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24156 ;;Total ram usage:        0 bytes
 24157 ;; Hardware stack levels used:    1
 24158 ;; Hardware stack levels required when called:   14
 24159 ;; This function calls:
 24160 ;;		_GenerateEvt
 24161 ;;		_OsTmr_GetTimerStatus
 24162 ;;		_OsTmr_StartTimer
 24163 ;;		_ReceiveEvt
 24164 ;;		_Uart_WriteConstString
 24165 ;; This function is called by:
 24166 ;;		_Mdm_MainTask
 24167 ;; This function uses a non-reentrant model
 24168 ;;
 24169                           
 24170                           	psect	text110
 24171  002538                     __ptext110:
 24172                           	opt stack 0
 24173  002538                     _CheckModem:
 24174                           	opt stack 13
 24175                           
 24176                           ;mdm_gsm_gprs.c: 280: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 24177                           ;mdm_gsm_gprs.c: 281: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 24178                           ;mdm_gsm_gprs.c: 283: switch (CheckMdmSts)
 24179                           
 24180                           ; BSR set to: 3
 24181                           ;incstack = 0
 24182  002538  D08C               	goto	l976
 24183  00253A                     
 24184                           ;mdm_gsm_gprs.c: 287: OsTmr_StartTimer(&Timeout,2000);
 24185  00253A  0EF4               	movlw	low CheckModem@Timeout
 24186  00253C  0100               	movlb	0	; () banked
 24187  00253E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24188  002540  0E03               	movlw	high CheckModem@Timeout
 24189  002542  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24190  002544  0ED0               	movlw	208
 24191  002546  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24192  002548  0E07               	movlw	7
 24193  00254A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24194  00254C  0E00               	movlw	0
 24195  00254E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24196  002550  0E00               	movlw	0
 24197  002552  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24198  002554  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 24199                           
 24200                           ;mdm_gsm_gprs.c: 289: CheckMdmSts = MdmCh_InitialDelay;
 24201  002558  0E01               	movlw	1
 24202  00255A  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24203                           
 24204                           ;mdm_gsm_gprs.c: 290: break;
 24205  00255C  0012               	return	
 24206  00255E                     
 24207                           ;mdm_gsm_gprs.c: 294: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 24208  00255E  0EF4               	movlw	low CheckModem@Timeout
 24209  002560  0100               	movlb	0	; () banked
 24210  002562  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24211  002564  0E03               	movlw	high CheckModem@Timeout
 24212  002566  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24213  002568  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 24214  00256C  06E8               	decf	wreg,f,c
 24215  00256E  A4D8               	btfss	status,2,c
 24216  002570  0012               	return	
 24217                           
 24218                           ;mdm_gsm_gprs.c: 295: {
 24219                           ;mdm_gsm_gprs.c: 297: CheckMdmSts = MdmCh_SendATE1;
 24220  002572  0E02               	movlw	2
 24221  002574  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24222                           
 24223                           ;mdm_gsm_gprs.c: 298: }
 24224                           ;mdm_gsm_gprs.c: 299: break;
 24225  002576  0012               	return	
 24226  002578                     
 24227                           ;mdm_gsm_gprs.c: 303: Uart_WriteConstString(1,"AT\r");
 24228  002578  0EF1               	movlw	low STR_1
 24229  00257A  0100               	movlb	0	; () banked
 24230  00257C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24231  00257E  0EFF               	movlw	high STR_1
 24232  002580  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24233  002582  0E01               	movlw	1
 24234  002584  ECA9  F02A         	call	_Uart_WriteConstString
 24235                           
 24236                           ;mdm_gsm_gprs.c: 305: OsTmr_StartTimer(&Timeout,2000u);
 24237  002588  0EF4               	movlw	low CheckModem@Timeout
 24238  00258A  0100               	movlb	0	; () banked
 24239  00258C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24240  00258E  0E03               	movlw	high CheckModem@Timeout
 24241  002590  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24242  002592  0ED0               	movlw	208
 24243  002594  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24244  002596  0E07               	movlw	7
 24245  002598  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24246  00259A  0E00               	movlw	0
 24247  00259C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24248  00259E  0E00               	movlw	0
 24249  0025A0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24250  0025A2  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 24251                           
 24252                           ;mdm_gsm_gprs.c: 307: CheckMdmSts = MdmCh_WaitEcho;
 24253  0025A6  0E03               	movlw	3
 24254  0025A8  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24255                           
 24256                           ;mdm_gsm_gprs.c: 308: break;
 24257  0025AA  0012               	return	
 24258  0025AC                     
 24259                           ;mdm_gsm_gprs.c: 312: if (ReceiveEvt(&NewStringReceived))
 24260  0025AC  0E3C               	movlw	low _NewStringReceived
 24261  0025AE  0100               	movlb	0	; () banked
 24262  0025B0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24263  0025B2  0E00               	movlw	high _NewStringReceived
 24264  0025B4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24265  0025B6  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 24266  0025BA  0900               	iorlw	0
 24267  0025BC  B4D8               	btfsc	status,2,c
 24268  0025BE  D025               	goto	l983
 24269                           
 24270                           ;mdm_gsm_gprs.c: 313: {
 24271                           ;mdm_gsm_gprs.c: 315: if ((RxBuffer[1] == 'O') && (RxBuffer[2] == 'K'))
 24272  0025C0  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24273  0025C4  0A4F               	xorlw	79
 24274  0025C6  A4D8               	btfss	status,2,c
 24275  0025C8  0012               	return	
 24276  0025CA  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 24277  0025CE  0A4B               	xorlw	75
 24278  0025D0  A4D8               	btfss	status,2,c
 24279  0025D2  0012               	return	
 24280                           
 24281                           ;mdm_gsm_gprs.c: 316: {
 24282                           ;mdm_gsm_gprs.c: 317: MdmStatus = ModemReady;
 24283  0025D4  0E02               	movlw	2
 24284  0025D6  0100               	movlb	0	; () banked
 24285  0025D8  6FCF               	movwf	_MdmStatus& (0+255),b
 24286                           
 24287                           ; BSR set to: 0
 24288                           ;mdm_gsm_gprs.c: 319: GenerateEvt(&MdmOnOffPulseRequest);
 24289  0025DA  0EDE               	movlw	low _MdmOnOffPulseRequest
 24290  0025DC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24291  0025DE  0E00               	movlw	high _MdmOnOffPulseRequest
 24292  0025E0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24293  0025E2  EC7E  F02E         	call	_GenerateEvt	;wreg free
 24294                           
 24295                           ;mdm_gsm_gprs.c: 321: OsTmr_StartTimer(&Timeout,1000u);
 24296  0025E6  0EF4               	movlw	low CheckModem@Timeout
 24297  0025E8  0100               	movlb	0	; () banked
 24298  0025EA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24299  0025EC  0E03               	movlw	high CheckModem@Timeout
 24300  0025EE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24301  0025F0  0EE8               	movlw	232
 24302  0025F2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24303  0025F4  0E03               	movlw	3
 24304  0025F6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24305  0025F8  0E00               	movlw	0
 24306  0025FA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24307  0025FC  0E00               	movlw	0
 24308  0025FE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24309  002600  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 24310                           
 24311                           ;mdm_gsm_gprs.c: 323: CheckMdmSts = MdmCh_Delay;
 24312  002604  0E04               	movlw	4
 24313  002606  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24314                           
 24315                           ;mdm_gsm_gprs.c: 324: }
 24316                           ;mdm_gsm_gprs.c: 325: }
 24317  002608  0012               	return	
 24318  00260A                     l983:
 24319                           
 24320                           ;mdm_gsm_gprs.c: 326: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 24321  00260A  0EF4               	movlw	low CheckModem@Timeout
 24322  00260C  0100               	movlb	0	; () banked
 24323  00260E  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24324  002610  0E03               	movlw	high CheckModem@Timeout
 24325  002612  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24326  002614  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 24327  002618  06E8               	decf	wreg,f,c
 24328  00261A  A4D8               	btfss	status,2,c
 24329  00261C  0012               	return	
 24330                           
 24331                           ;mdm_gsm_gprs.c: 327: {
 24332                           ;mdm_gsm_gprs.c: 329: MdmStatus = ModemOff;
 24333  00261E  0E00               	movlw	0
 24334  002620  0100               	movlb	0	; () banked
 24335  002622  6FCF               	movwf	_MdmStatus& (0+255),b
 24336                           
 24337                           ;mdm_gsm_gprs.c: 331: ComChecCompleted = 1u;
 24338  002624  0E01               	movlw	1
 24339  002626  6E2B               	movwf	_ComChecCompleted,c
 24340                           
 24341                           ;mdm_gsm_gprs.c: 333: CheckMdmSts = MdmCh_Done;
 24342  002628  0E05               	movlw	5
 24343  00262A  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24344                           
 24345                           ; BSR set to: 0
 24346                           ;mdm_gsm_gprs.c: 338: }
 24347                           ;mdm_gsm_gprs.c: 339: break;
 24348                           
 24349                           ; BSR set to: 0
 24350                           
 24351                           ;mdm_gsm_gprs.c: 335: else
 24352                           ;mdm_gsm_gprs.c: 336: {
 24353                           
 24354                           ; BSR set to: 0
 24355                           
 24356                           ;mdm_gsm_gprs.c: 334: }
 24357  00262C  0012               	return	
 24358  00262E                     
 24359                           ;mdm_gsm_gprs.c: 343: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 24360                           
 24361                           ; BSR set to: 0
 24362  00262E  0EF4               	movlw	low CheckModem@Timeout
 24363  002630  0100               	movlb	0	; () banked
 24364  002632  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24365  002634  0E03               	movlw	high CheckModem@Timeout
 24366  002636  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24367  002638  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 24368  00263C  06E8               	decf	wreg,f,c
 24369  00263E  A4D8               	btfss	status,2,c
 24370  002640  0012               	return	
 24371                           
 24372                           ;mdm_gsm_gprs.c: 344: {
 24373                           ;mdm_gsm_gprs.c: 346: MdmStatus = ModemOff;
 24374  002642  0E00               	movlw	0
 24375  002644  0100               	movlb	0	; () banked
 24376  002646  6FCF               	movwf	_MdmStatus& (0+255),b
 24377                           
 24378                           ;mdm_gsm_gprs.c: 348: ComChecCompleted = 1u;
 24379  002648  0E01               	movlw	1
 24380  00264A  6E2B               	movwf	_ComChecCompleted,c
 24381                           
 24382                           ;mdm_gsm_gprs.c: 350: CheckMdmSts = MdmCh_Done;
 24383  00264C  0E05               	movlw	5
 24384  00264E  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24385                           
 24386                           ; BSR set to: 0
 24387                           ;mdm_gsm_gprs.c: 360: }
 24388                           
 24389                           ; BSR set to: 0
 24390                           ;mdm_gsm_gprs.c: 359: break;
 24391                           
 24392                           ;mdm_gsm_gprs.c: 358: default:
 24393                           
 24394                           ; BSR set to: 0
 24395                           ;mdm_gsm_gprs.c: 356: break;
 24396                           
 24397                           ;mdm_gsm_gprs.c: 354: case MdmCh_Done:
 24398                           
 24399                           ; BSR set to: 0
 24400                           ;mdm_gsm_gprs.c: 351: }
 24401                           ;mdm_gsm_gprs.c: 352: break;
 24402  002650  0012               	return	
 24403  002652                     l976:
 24404                           
 24405                           ; BSR set to: 0
 24406  002652  502A               	movf	CheckModem@CheckMdmSts,w,c
 24407                           
 24408                           ; Switch size 1, requested type "space"
 24409                           ; Number of cases is 6, Range of values is 0 to 5
 24410                           ; switch strategies available:
 24411                           ; Name         Instructions Cycles
 24412                           ; simple_byte           19    10 (average)
 24413                           ;	Chosen strategy is simple_byte
 24414  002654  0A00               	xorlw	0	; case 0
 24415  002656  B4D8               	btfsc	status,2,c
 24416  002658  D770               	goto	l977
 24417  00265A  0A01               	xorlw	1	; case 1
 24418  00265C  B4D8               	btfsc	status,2,c
 24419  00265E  D77F               	goto	l979
 24420  002660  0A03               	xorlw	3	; case 2
 24421  002662  B4D8               	btfsc	status,2,c
 24422  002664  D789               	goto	l981
 24423  002666  0A01               	xorlw	1	; case 3
 24424  002668  B4D8               	btfsc	status,2,c
 24425  00266A  D7A0               	goto	l982
 24426  00266C  0A07               	xorlw	7	; case 4
 24427  00266E  B4D8               	btfsc	status,2,c
 24428  002670  D7DE               	goto	l988
 24429  002672  0A01               	xorlw	1	; case 5
 24430  002674  0012               	return	
 24431  002676                     __end_of_CheckModem:
 24432                           	opt stack 0
 24433                           tosu	equ	0xFFF
 24434                           tosh	equ	0xFFE
 24435                           tosl	equ	0xFFD
 24436                           pclath	equ	0xFFA
 24437                           tblptru	equ	0xFF8
 24438                           tblptrh	equ	0xFF7
 24439                           tblptrl	equ	0xFF6
 24440                           tablat	equ	0xFF5
 24441                           prodh	equ	0xFF4
 24442                           prodl	equ	0xFF3
 24443                           intcon	equ	0xFF2
 24444                           intcon2	equ	0xFF1
 24445                           intcon3	equ	0xFF0
 24446                           indf0	equ	0xFEF
 24447                           postinc0	equ	0xFEE
 24448                           plusw0	equ	0xFEB
 24449                           fsr0h	equ	0xFEA
 24450                           fsr0l	equ	0xFE9
 24451                           wreg	equ	0xFE8
 24452                           indf1	equ	0xFE7
 24453                           postinc1	equ	0xFE6
 24454                           postdec1	equ	0xFE5
 24455                           plusw1	equ	0xFE3
 24456                           fsr1h	equ	0xFE2
 24457                           fsr1l	equ	0xFE1
 24458                           indf2	equ	0xFDF
 24459                           postinc2	equ	0xFDE
 24460                           postdec2	equ	0xFDD
 24461                           plusw2	equ	0xFDB
 24462                           fsr2h	equ	0xFDA
 24463                           fsr2l	equ	0xFD9
 24464                           status	equ	0xFD8
 24465                           
 24466 ;; *************** function _MdmCntSm *****************
 24467 ;; Defined at:
 24468 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 24469 ;; Parameters:    Size  Location     Type
 24470 ;;		None
 24471 ;; Auto vars:     Size  Location     Type
 24472 ;;		None
 24473 ;; Return value:  Size  Location     Type
 24474 ;;                  1    wreg      void 
 24475 ;; Registers used:
 24476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24477 ;; Tracked objects:
 24478 ;;		On entry : 0/0
 24479 ;;		On exit  : 0/0
 24480 ;;		Unchanged: 0/0
 24481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24486 ;;Total ram usage:        0 bytes
 24487 ;; Hardware stack levels used:    1
 24488 ;; Hardware stack levels required when called:   12
 24489 ;; This function calls:
 24490 ;;		_InitModemInterface
 24491 ;;		_ReceiveEvt
 24492 ;; This function is called by:
 24493 ;;		_Mdm_DrvMainFn
 24494 ;; This function uses a non-reentrant model
 24495 ;;
 24496                           
 24497                           	psect	text111
 24498  0041AE                     __ptext111:
 24499                           	opt stack 0
 24500  0041AE                     _MdmCntSm:
 24501                           	opt stack 15
 24502                           
 24503                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 24504                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 24505                           ;mdm_drv.c: 204: switch (MdmCntState)
 24506                           
 24507                           ;incstack = 0
 24508  0041AE  D045               	goto	l315
 24509  0041B0                     
 24510                           ;mdm_drv.c: 208: InitModemInterface();
 24511  0041B0  EC1F  F02F         	call	_InitModemInterface	;wreg free
 24512                           
 24513                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 24514  0041B4  0E01               	movlw	1
 24515  0041B6  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24516                           
 24517                           ;mdm_drv.c: 211: break;
 24518  0041B8  0012               	return	
 24519  0041BA                     
 24520                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 24521  0041BA  0EDE               	movlw	low _MdmOnOffPulseRequest
 24522  0041BC  0100               	movlb	0	; () banked
 24523  0041BE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24524  0041C0  0E00               	movlw	high _MdmOnOffPulseRequest
 24525  0041C2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24526  0041C4  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 24527  0041C8  0900               	iorlw	0
 24528  0041CA  B4D8               	btfsc	status,2,c
 24529  0041CC  D009               	goto	l319
 24530                           
 24531                           ;mdm_drv.c: 216: {
 24532                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 24533  0041CE  0E02               	movlw	2
 24534  0041D0  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24535                           
 24536                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 24537  0041D2  8284               	bsf	3972,1,c	;volatile
 24538                           
 24539                           ;mdm_drv.c: 222: Counter = 0;
 24540  0041D4  0E00               	movlw	0
 24541  0041D6  0102               	movlb	2	; () banked
 24542  0041D8  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 24543  0041DA  0E00               	movlw	0
 24544  0041DC  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 24545                           
 24546                           ;mdm_drv.c: 223: }
 24547  0041DE  0012               	return	
 24548  0041E0                     l319:
 24549                           
 24550                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 24551                           
 24552                           ; BSR set to: 2
 24553  0041E0  0E3D               	movlw	low _MdmResetRequest
 24554  0041E2  0100               	movlb	0	; () banked
 24555  0041E4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24556  0041E6  0E00               	movlw	high _MdmResetRequest
 24557  0041E8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24558  0041EA  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 24559  0041EE  0900               	iorlw	0
 24560  0041F0  B4D8               	btfsc	status,2,c
 24561  0041F2  0012               	return	
 24562                           
 24563                           ;mdm_drv.c: 225: {
 24564                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 24565  0041F4  0E03               	movlw	3
 24566  0041F6  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24567                           
 24568                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 24569  0041F8  8084               	bsf	3972,0,c	;volatile
 24570                           
 24571                           ;mdm_drv.c: 231: Counter = 0;
 24572  0041FA  0E00               	movlw	0
 24573  0041FC  0102               	movlb	2	; () banked
 24574  0041FE  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 24575  004200  0E00               	movlw	0
 24576  004202  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 24577                           
 24578                           ; BSR set to: 2
 24579                           ;mdm_drv.c: 236: }
 24580                           ;mdm_drv.c: 237: break;
 24581                           
 24582                           ; BSR set to: 2
 24583                           
 24584                           ;mdm_drv.c: 233: else
 24585                           ;mdm_drv.c: 234: {
 24586                           
 24587                           ; BSR set to: 2
 24588                           
 24589                           ;mdm_drv.c: 232: }
 24590  004204  0012               	return	
 24591  004206                     
 24592                           ;mdm_drv.c: 241: Counter++;
 24593                           
 24594                           ; BSR set to: 2
 24595  004206  0102               	movlb	2	; () banked
 24596  004208  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 24597  00420A  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 24598                           
 24599                           ; BSR set to: 2
 24600                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 24601  00420C  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 24602  00420E  E104               	bnz	u11980
 24603  004210  0E96               	movlw	150
 24604  004212  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 24605  004214  A0D8               	btfss	status,0,c
 24606  004216  0012               	return	
 24607  004218                     u11980:
 24608                           
 24609                           ; BSR set to: 2
 24610                           ;mdm_drv.c: 244: {
 24611                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 24612  004218  9284               	bcf	3972,1,c	;volatile
 24613                           
 24614                           ; BSR set to: 2
 24615                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 24616  00421A  0E01               	movlw	1
 24617  00421C  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24618                           
 24619                           ; BSR set to: 2
 24620                           ;mdm_drv.c: 249: }
 24621                           ;mdm_drv.c: 250: break;
 24622  00421E  0012               	return	
 24623  004220                     
 24624                           ;mdm_drv.c: 254: Counter++;
 24625                           
 24626                           ; BSR set to: 2
 24627  004220  0102               	movlb	2	; () banked
 24628  004222  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 24629  004224  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 24630                           
 24631                           ; BSR set to: 2
 24632                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 24633  004226  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 24634  004228  E104               	bnz	u11990
 24635  00422A  0E0A               	movlw	10
 24636  00422C  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 24637  00422E  A0D8               	btfss	status,0,c
 24638  004230  0012               	return	
 24639  004232                     u11990:
 24640                           
 24641                           ; BSR set to: 2
 24642                           ;mdm_drv.c: 257: {
 24643                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 24644  004232  9084               	bcf	3972,0,c	;volatile
 24645                           
 24646                           ; BSR set to: 2
 24647                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 24648  004234  0E01               	movlw	1
 24649  004236  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24650                           
 24651                           ; BSR set to: 2
 24652                           ;mdm_drv.c: 267: }
 24653                           
 24654                           ; BSR set to: 2
 24655                           ;mdm_drv.c: 266: break;
 24656                           
 24657                           ;mdm_drv.c: 265: default:
 24658                           
 24659                           ; BSR set to: 2
 24660                           ;mdm_drv.c: 262: }
 24661                           ;mdm_drv.c: 263: break;
 24662  004238  0012               	return	
 24663  00423A                     l315:
 24664                           
 24665                           ; BSR set to: 2
 24666  00423A  502E               	movf	MdmCntSm@MdmCntState,w,c
 24667                           
 24668                           ; Switch size 1, requested type "space"
 24669                           ; Number of cases is 4, Range of values is 0 to 3
 24670                           ; switch strategies available:
 24671                           ; Name         Instructions Cycles
 24672                           ; simple_byte           13     7 (average)
 24673                           ;	Chosen strategy is simple_byte
 24674  00423C  0A00               	xorlw	0	; case 0
 24675  00423E  B4D8               	btfsc	status,2,c
 24676  004240  D7B7               	goto	l316
 24677  004242  0A01               	xorlw	1	; case 1
 24678  004244  B4D8               	btfsc	status,2,c
 24679  004246  D7B9               	goto	l318
 24680  004248  0A03               	xorlw	3	; case 2
 24681  00424A  B4D8               	btfsc	status,2,c
 24682  00424C  D7DC               	goto	l323
 24683  00424E  0A01               	xorlw	1	; case 3
 24684  004250  A4D8               	btfss	status,2,c
 24685  004252  0012               	return	
 24686  004254  D7E5               	goto	l325
 24687  004256                     __end_of_MdmCntSm:
 24688                           	opt stack 0
 24689                           tosu	equ	0xFFF
 24690                           tosh	equ	0xFFE
 24691                           tosl	equ	0xFFD
 24692                           pclath	equ	0xFFA
 24693                           tblptru	equ	0xFF8
 24694                           tblptrh	equ	0xFF7
 24695                           tblptrl	equ	0xFF6
 24696                           tablat	equ	0xFF5
 24697                           prodh	equ	0xFF4
 24698                           prodl	equ	0xFF3
 24699                           intcon	equ	0xFF2
 24700                           intcon2	equ	0xFF1
 24701                           intcon3	equ	0xFF0
 24702                           indf0	equ	0xFEF
 24703                           postinc0	equ	0xFEE
 24704                           plusw0	equ	0xFEB
 24705                           fsr0h	equ	0xFEA
 24706                           fsr0l	equ	0xFE9
 24707                           wreg	equ	0xFE8
 24708                           indf1	equ	0xFE7
 24709                           postinc1	equ	0xFE6
 24710                           postdec1	equ	0xFE5
 24711                           plusw1	equ	0xFE3
 24712                           fsr1h	equ	0xFE2
 24713                           fsr1l	equ	0xFE1
 24714                           indf2	equ	0xFDF
 24715                           postinc2	equ	0xFDE
 24716                           postdec2	equ	0xFDD
 24717                           plusw2	equ	0xFDB
 24718                           fsr2h	equ	0xFDA
 24719                           fsr2l	equ	0xFD9
 24720                           status	equ	0xFD8
 24721                           
 24722 ;; *************** function _InitModemInterface *****************
 24723 ;; Defined at:
 24724 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 24725 ;; Parameters:    Size  Location     Type
 24726 ;;		None
 24727 ;; Auto vars:     Size  Location     Type
 24728 ;;		None
 24729 ;; Return value:  Size  Location     Type
 24730 ;;                  1    wreg      void 
 24731 ;; Registers used:
 24732 ;;		None
 24733 ;; Tracked objects:
 24734 ;;		On entry : 0/0
 24735 ;;		On exit  : 0/0
 24736 ;;		Unchanged: 0/0
 24737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24742 ;;Total ram usage:        0 bytes
 24743 ;; Hardware stack levels used:    1
 24744 ;; Hardware stack levels required when called:   11
 24745 ;; This function calls:
 24746 ;;		Nothing
 24747 ;; This function is called by:
 24748 ;;		_MdmCntSm
 24749 ;; This function uses a non-reentrant model
 24750 ;;
 24751                           
 24752                           	psect	text112
 24753  005E3E                     __ptext112:
 24754                           	opt stack 0
 24755  005E3E                     _InitModemInterface:
 24756                           	opt stack 15
 24757                           
 24758                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 24759                           
 24760                           ;incstack = 0
 24761  005E3E  9096               	bcf	3990,0,c	;volatile
 24762                           
 24763                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 24764  005E40  9296               	bcf	3990,1,c	;volatile
 24765                           
 24766                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 24767  005E42  8496               	bsf	3990,2,c	;volatile
 24768  005E44  0012               	return		;funcret
 24769  005E46                     __end_of_InitModemInterface:
 24770                           	opt stack 0
 24771                           tosu	equ	0xFFF
 24772                           tosh	equ	0xFFE
 24773                           tosl	equ	0xFFD
 24774                           pclath	equ	0xFFA
 24775                           tblptru	equ	0xFF8
 24776                           tblptrh	equ	0xFF7
 24777                           tblptrl	equ	0xFF6
 24778                           tablat	equ	0xFF5
 24779                           prodh	equ	0xFF4
 24780                           prodl	equ	0xFF3
 24781                           intcon	equ	0xFF2
 24782                           intcon2	equ	0xFF1
 24783                           intcon3	equ	0xFF0
 24784                           indf0	equ	0xFEF
 24785                           postinc0	equ	0xFEE
 24786                           plusw0	equ	0xFEB
 24787                           fsr0h	equ	0xFEA
 24788                           fsr0l	equ	0xFE9
 24789                           wreg	equ	0xFE8
 24790                           indf1	equ	0xFE7
 24791                           postinc1	equ	0xFE6
 24792                           postdec1	equ	0xFE5
 24793                           plusw1	equ	0xFE3
 24794                           fsr1h	equ	0xFE2
 24795                           fsr1l	equ	0xFE1
 24796                           indf2	equ	0xFDF
 24797                           postinc2	equ	0xFDE
 24798                           postdec2	equ	0xFDD
 24799                           plusw2	equ	0xFDB
 24800                           fsr2h	equ	0xFDA
 24801                           fsr2l	equ	0xFD9
 24802                           status	equ	0xFD8
 24803                           
 24804 ;; *************** function _InitGprsNetwork *****************
 24805 ;; Defined at:
 24806 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 24807 ;; Parameters:    Size  Location     Type
 24808 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 24809 ;;		 -> NULL(0), 
 24810 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 24811 ;; Auto vars:     Size  Location     Type
 24812 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 24813 ;;  Index           1   50[BANK1 ] unsigned char 
 24814 ;; Return value:  Size  Location     Type
 24815 ;;                  1    wreg      enum E8905
 24816 ;; Registers used:
 24817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24818 ;; Tracked objects:
 24819 ;;		On entry : 0/0
 24820 ;;		On exit  : 0/0
 24821 ;;		Unchanged: 0/0
 24822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24823 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24824 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24825 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24826 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24827 ;;Total ram usage:       56 bytes
 24828 ;; Hardware stack levels used:    1
 24829 ;; Hardware stack levels required when called:   14
 24830 ;; This function calls:
 24831 ;;		_ClearBuffer
 24832 ;;		_OsTmr_GetTimerStatus
 24833 ;;		_OsTmr_StartTimer
 24834 ;;		_ReceiveEvt
 24835 ;;		_StringCopy
 24836 ;;		_Uart_WriteConstString
 24837 ;;		_Uart_WriteString
 24838 ;; This function is called by:
 24839 ;;		_MdmHttp_MainTask
 24840 ;; This function uses a non-reentrant model
 24841 ;;
 24842                           
 24843                           	psect	text113
 24844  000DC8                     __ptext113:
 24845                           	opt stack 0
 24846  000DC8                     _InitGprsNetwork:
 24847                           	opt stack 13
 24848                           
 24849                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 24850                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 24851                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 24852                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 24853                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 24854                           
 24855                           ;incstack = 0
 24856  000DC8  0E00               	movlw	0
 24857  000DCA  0101               	movlb	1	; () banked
 24858  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 24859                           
 24860                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 24861  000DCE  D154               	goto	l1198
 24862  000DD0                     
 24863                           ; BSR set to: 1
 24864                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 24865                           
 24866                           ; BSR set to: 1
 24867  000DD0  0ED8               	movlw	low _InitNetwork
 24868  000DD2  0100               	movlb	0	; () banked
 24869  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24870  000DD6  0E00               	movlw	high _InitNetwork
 24871  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24872  000DDA  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 24873  000DDE  0900               	iorlw	0
 24874  000DE0  B4D8               	btfsc	status,2,c
 24875  000DE2  D166               	goto	l1201
 24876                           
 24877                           ;mdm_gsm_gprs_http.c: 137: {
 24878                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 24879  000DE4  0E01               	movlw	1
 24880  000DE6  D141               	goto	L68
 24881  000DE8                     
 24882                           ; BSR set to: 1
 24883                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 24884                           
 24885                           ; BSR set to: 1
 24886  000DE8  0EBA               	movlw	low STR_8
 24887  000DEA  0100               	movlb	0	; () banked
 24888  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24889  000DEE  0EFE               	movlw	high STR_8
 24890  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24891  000DF2  0E01               	movlw	1
 24892  000DF4  ECA9  F02A         	call	_Uart_WriteConstString
 24893                           
 24894                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 24895  000DF8  0E07               	movlw	7
 24896  000DFA  0101               	movlb	1	; () banked
 24897  000DFC  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 24898                           
 24899                           ; BSR set to: 1
 24900                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 24901  000DFE  0E02               	movlw	2
 24902  000E00  0100               	movlb	0	; () banked
 24903  000E02  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 24904                           
 24905                           ; BSR set to: 0
 24906                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 24907  000E04  0EF5               	movlw	low _ConnTimeout
 24908  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24909  000E08  0E02               	movlw	high _ConnTimeout
 24910  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24911  000E0C  0E20               	movlw	32
 24912  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24913  000E10  0E4E               	movlw	78
 24914  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24915  000E14  0E00               	movlw	0
 24916  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24917  000E18  0E00               	movlw	0
 24918  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24919  000E1C  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 24920  000E20  D0C7               	goto	l13169
 24921  000E22                     
 24922                           ; BSR set to: 1
 24923                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 24924                           
 24925                           ; BSR set to: 1
 24926  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 24927  000E24  0100               	movlb	0	; () banked
 24928  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24929  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 24930  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24931  000E2C  0E00               	movlw	0
 24932  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24933  000E30  0E32               	movlw	50
 24934  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24935  000E34  ECFA  F02B         	call	_ClearBuffer	;wreg free
 24936                           
 24937                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 24938  000E38  0EEE               	movlw	low STR_9
 24939  000E3A  0100               	movlb	0	; () banked
 24940  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24941  000E3E  0EFE               	movlw	high STR_9
 24942  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24943  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 24944  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24945  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 24946  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24947  000E4A  0E00               	movlw	0
 24948  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 24949  000E4E  0E14               	movlw	20
 24950  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 24951  000E52  ECDD  F026         	call	_StringCopy	;wreg free
 24952                           
 24953                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 24954  000E56  0E00               	movlw	0
 24955  000E58  0101               	movlb	1	; () banked
 24956  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 24957  000E5C  D01C               	goto	l1204
 24958  000E5E                     
 24959                           ; BSR set to: 1
 24960                           ;mdm_gsm_gprs_http.c: 161: {
 24961                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 24962                           
 24963                           ; BSR set to: 1
 24964  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 24965  000E60  0D01               	mullw	1
 24966  000E62  50F3               	movf	prodl,w,c
 24967  000E64  0100               	movlb	0	; () banked
 24968  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 24969  000E68  6ED9               	movwf	fsr2l,c
 24970  000E6A  50F4               	movf	prodh,w,c
 24971  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 24972  000E6E  6EDA               	movwf	fsr2h,c
 24973  000E70  0101               	movlb	1	; () banked
 24974  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 24975  000E74  0100               	movlb	0	; () banked
 24976  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 24977  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 24978  000E7A  0E14               	movlw	20
 24979  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 24980  000E7E  0E00               	movlw	0
 24981  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 24982  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 24983  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 24984  000E86  6EE1               	movwf	fsr1l,c
 24985  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 24986  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 24987  000E8C  6EE2               	movwf	fsr1h,c
 24988  000E8E  CFDF FFE7          	movff	indf2,indf1
 24989                           
 24990                           ; BSR set to: 0
 24991  000E92  0101               	movlb	1	; () banked
 24992  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 24993  000E96                     l1204:
 24994                           
 24995                           ; BSR set to: 1
 24996                           
 24997                           ; BSR set to: 1
 24998  000E96  0100               	movlb	0	; () banked
 24999  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 25000  000E9A  0101               	movlb	1	; () banked
 25001  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 25002  000E9E  A0D8               	btfss	status,0,c
 25003  000EA0  D7DE               	goto	l1205
 25004                           
 25005                           ; BSR set to: 1
 25006                           ;mdm_gsm_gprs_http.c: 163: }
 25007                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 25008                           
 25009                           ; BSR set to: 1
 25010  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25011  000EA4  0100               	movlb	0	; () banked
 25012  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25013  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25014  000EAA  0E14               	movlw	20
 25015  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25016  000EAE  0E00               	movlw	0
 25017  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25018  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 25019  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25020  000EB6  6ED9               	movwf	fsr2l,c
 25021  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 25022  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25023  000EBC  6EDA               	movwf	fsr2h,c
 25024  000EBE  0E22               	movlw	34
 25025  000EC0  6EDF               	movwf	indf2,c
 25026                           
 25027                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 25028  000EC2  0101               	movlb	1	; () banked
 25029  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25030  000EC6  0100               	movlb	0	; () banked
 25031  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25032  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25033  000ECC  0E15               	movlw	21
 25034  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25035  000ED0  0E00               	movlw	0
 25036  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25037  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 25038  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25039  000ED8  6ED9               	movwf	fsr2l,c
 25040  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 25041  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25042  000EDE  6EDA               	movwf	fsr2h,c
 25043  000EE0  0E0D               	movlw	13
 25044  000EE2  6EDF               	movwf	indf2,c
 25045                           
 25046                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 25047  000EE4  0101               	movlb	1	; () banked
 25048  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25049  000EE8  0100               	movlb	0	; () banked
 25050  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25051  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25052  000EEE  0E16               	movlw	22
 25053  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25054  000EF2  0E00               	movlw	0
 25055  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25056  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 25057  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25058  000EFA  6ED9               	movwf	fsr2l,c
 25059  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 25060  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25061  000F00  6EDA               	movwf	fsr2h,c
 25062  000F02  0E00               	movlw	0
 25063  000F04  6EDF               	movwf	indf2,c
 25064                           
 25065                           ; BSR set to: 0
 25066                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 25067  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 25068  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 25069  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 25070  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 25071  000F0E  0E01               	movlw	1
 25072  000F10  EC49  F02B         	call	_Uart_WriteString
 25073                           
 25074                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 25075  000F14  0E07               	movlw	7
 25076  000F16  0101               	movlb	1	; () banked
 25077  000F18  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25078                           
 25079                           ; BSR set to: 1
 25080                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 25081  000F1A  0E03               	movlw	3
 25082  000F1C  0100               	movlb	0	; () banked
 25083  000F1E  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25084                           
 25085                           ; BSR set to: 0
 25086                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 25087  000F20  0EF5               	movlw	low _ConnTimeout
 25088  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25089  000F24  0E02               	movlw	high _ConnTimeout
 25090  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25091  000F28  0E20               	movlw	32
 25092  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25093  000F2C  0E4E               	movlw	78
 25094  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25095  000F30  0E00               	movlw	0
 25096  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25097  000F34  0E00               	movlw	0
 25098  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25099  000F38  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 25100  000F3C  D039               	goto	l13169
 25101  000F3E                     
 25102                           ; BSR set to: 1
 25103                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 25104                           
 25105                           ; BSR set to: 1
 25106  000F3E  0E5B               	movlw	low STR_10
 25107  000F40  0100               	movlb	0	; () banked
 25108  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25109  000F44  0EFF               	movlw	high STR_10
 25110  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25111  000F48  0E01               	movlw	1
 25112  000F4A  ECA9  F02A         	call	_Uart_WriteConstString
 25113                           
 25114                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 25115  000F4E  0E07               	movlw	7
 25116  000F50  0101               	movlb	1	; () banked
 25117  000F52  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25118                           
 25119                           ; BSR set to: 1
 25120                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 25121  000F54  0E05               	movlw	5
 25122  000F56  0100               	movlb	0	; () banked
 25123  000F58  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25124                           
 25125                           ; BSR set to: 0
 25126                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 25127  000F5A  0EF5               	movlw	low _ConnTimeout
 25128  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25129  000F5E  0E02               	movlw	high _ConnTimeout
 25130  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25131  000F62  0E20               	movlw	32
 25132  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25133  000F66  0E4E               	movlw	78
 25134  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25135  000F6A  0E00               	movlw	0
 25136  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25137  000F6E  0E00               	movlw	0
 25138  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25139  000F72  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 25140  000F76  D01C               	goto	l13169
 25141  000F78                     
 25142                           ; BSR set to: 1
 25143                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 25144                           
 25145                           ; BSR set to: 1
 25146  000F78  0E69               	movlw	low STR_11
 25147  000F7A  0100               	movlb	0	; () banked
 25148  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25149  000F7E  0EFF               	movlw	high STR_11
 25150  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25151  000F82  0E01               	movlw	1
 25152  000F84  ECA9  F02A         	call	_Uart_WriteConstString
 25153                           
 25154                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 25155  000F88  0E08               	movlw	8
 25156  000F8A  0101               	movlb	1	; () banked
 25157  000F8C  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25158                           
 25159                           ; BSR set to: 1
 25160                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 25161  000F8E  0E05               	movlw	5
 25162  000F90  0100               	movlb	0	; () banked
 25163  000F92  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25164                           
 25165                           ; BSR set to: 0
 25166                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 25167  000F94  0EF5               	movlw	low _ConnTimeout
 25168  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25169  000F98  0E02               	movlw	high _ConnTimeout
 25170  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25171  000F9C  0E20               	movlw	32
 25172  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25173  000FA0  0E4E               	movlw	78
 25174  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25175  000FA4  0E00               	movlw	0
 25176  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25177  000FA8  0E00               	movlw	0
 25178  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25179  000FAC  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 25180  000FB0                     l13169:
 25181                           
 25182                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 25183  000FB0  0E01               	movlw	1
 25184  000FB2  0101               	movlb	1	; () banked
 25185  000FB4  6FFE               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 25186                           
 25187                           ;mdm_gsm_gprs_http.c: 201: break;
 25188  000FB6  D07C               	goto	l1201
 25189  000FB8                     
 25190                           ; BSR set to: 1
 25191                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 25192                           
 25193                           ; BSR set to: 1
 25194  000FB8  0E02               	movlw	2
 25195  000FBA  D05A               	goto	L67
 25196  000FBC                     
 25197                           ; BSR set to: 1
 25198                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 25199                           
 25200                           ; BSR set to: 1
 25201  000FBC  0E3C               	movlw	low _NewStringReceived
 25202  000FBE  0100               	movlb	0	; () banked
 25203  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25204  000FC2  0E00               	movlw	high _NewStringReceived
 25205  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25206  000FC6  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 25207  000FCA  0900               	iorlw	0
 25208  000FCC  B4D8               	btfsc	status,2,c
 25209  000FCE  D018               	goto	l1211
 25210                           
 25211                           ;mdm_gsm_gprs_http.c: 212: {
 25212                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 25213  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 25214  000FD4  0A4F               	xorlw	79
 25215  000FD6  A4D8               	btfss	status,2,c
 25216  000FD8  D06B               	goto	l1201
 25217  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25218  000FDE  0A4B               	xorlw	75
 25219  000FE0  A4D8               	btfss	status,2,c
 25220  000FE2  D066               	goto	l1201
 25221                           
 25222                           ;mdm_gsm_gprs_http.c: 215: {
 25223                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 25224  000FE4  C0CE  F1ED         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 25225                           
 25226                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 25227  000FE8  0E58               	movlw	low _RxBuffer
 25228  000FEA  0100               	movlb	0	; () banked
 25229  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25230  000FEE  0E0C               	movlw	high _RxBuffer
 25231  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25232  000FF2  0E01               	movlw	1
 25233  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25234  000FF6  0E90               	movlw	144
 25235  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25236  000FFA  ECFA  F02B         	call	_ClearBuffer	;wreg free
 25237                           
 25238                           ;mdm_gsm_gprs_http.c: 220: }
 25239                           ;mdm_gsm_gprs_http.c: 221: }
 25240  000FFE  D058               	goto	l1201
 25241  001000                     l1211:
 25242                           
 25243                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 25244  001000  0EF5               	movlw	low _ConnTimeout
 25245  001002  0100               	movlb	0	; () banked
 25246  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25247  001006  0E02               	movlw	high _ConnTimeout
 25248  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25249  00100A  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25250  00100E  D029               	goto	L32
 25251  001010                     
 25252                           ; BSR set to: 1
 25253                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 25254                           
 25255                           ; BSR set to: 1
 25256  001010  0E3C               	movlw	low _NewStringReceived
 25257  001012  0100               	movlb	0	; () banked
 25258  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25259  001016  0E00               	movlw	high _NewStringReceived
 25260  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25261  00101A  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 25262  00101E  0900               	iorlw	0
 25263  001020  B4D8               	btfsc	status,2,c
 25264  001022  D018               	goto	l1216
 25265                           
 25266                           ;mdm_gsm_gprs_http.c: 232: {
 25267                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 25268  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 25269  001028  0A2B               	xorlw	43
 25270  00102A  A4D8               	btfss	status,2,c
 25271  00102C  D041               	goto	l1201
 25272  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25273  001032  0A53               	xorlw	83
 25274  001034  A4D8               	btfss	status,2,c
 25275  001036  D03C               	goto	l1201
 25276                           
 25277                           ;mdm_gsm_gprs_http.c: 235: {
 25278                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 25279  001038  C0CE  F1ED         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 25280                           
 25281                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 25282  00103C  0E58               	movlw	low _RxBuffer
 25283  00103E  0100               	movlb	0	; () banked
 25284  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25285  001042  0E0C               	movlw	high _RxBuffer
 25286  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25287  001046  0E01               	movlw	1
 25288  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25289  00104A  0E90               	movlw	144
 25290  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25291  00104E  ECFA  F02B         	call	_ClearBuffer	;wreg free
 25292                           
 25293                           ;mdm_gsm_gprs_http.c: 240: }
 25294                           ;mdm_gsm_gprs_http.c: 241: }
 25295  001052  D02E               	goto	l1201
 25296  001054                     l1216:
 25297                           
 25298                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 25299  001054  0EF5               	movlw	low _ConnTimeout
 25300  001056  0100               	movlb	0	; () banked
 25301  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25302  00105A  0E02               	movlw	high _ConnTimeout
 25303  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25304  00105E  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25305  001062                     L32:
 25306  001062  06E8               	decf	wreg,f,c
 25307  001064  A4D8               	btfss	status,2,c
 25308  001066  D024               	goto	l1201
 25309                           
 25310                           ;mdm_gsm_gprs_http.c: 243: {
 25311                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 25312  001068  0E06               	movlw	6
 25313  00106A                     L68:
 25314  00106A  0101               	movlb	1	; () banked
 25315  00106C  D003               	goto	L31
 25316  00106E                     
 25317                           ; BSR set to: 1
 25318                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 25319                           
 25320                           ; BSR set to: 1
 25321  00106E  0E03               	movlw	3
 25322  001070                     L67:
 25323  001070  6FFE               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 25324                           
 25325                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 25326  001072  0E00               	movlw	0
 25327  001074                     L31:
 25328  001074  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25329                           
 25330                           ; BSR set to: 1
 25331                           ;mdm_gsm_gprs_http.c: 257: }
 25332                           
 25333                           ; BSR set to: 1
 25334                           ;mdm_gsm_gprs_http.c: 256: break;
 25335                           
 25336                           ;mdm_gsm_gprs_http.c: 255: default:
 25337                           
 25338                           ;mdm_gsm_gprs_http.c: 253: break;
 25339  001076  D01C               	goto	l1201
 25340  001078                     l1198:
 25341                           
 25342                           ; BSR set to: 1
 25343                           
 25344                           ; BSR set to: 1
 25345  001078  51ED               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 25346                           
 25347                           ; Switch size 1, requested type "space"
 25348                           ; Number of cases is 9, Range of values is 0 to 8
 25349                           ; switch strategies available:
 25350                           ; Name         Instructions Cycles
 25351                           ; simple_byte           28    15 (average)
 25352                           ;	Chosen strategy is simple_byte
 25353  00107A  0A00               	xorlw	0	; case 0
 25354  00107C  B4D8               	btfsc	status,2,c
 25355  00107E  D6A8               	goto	l1199
 25356  001080  0A01               	xorlw	1	; case 1
 25357  001082  B4D8               	btfsc	status,2,c
 25358  001084  D6B1               	goto	l1202
 25359  001086  0A03               	xorlw	3	; case 2
 25360  001088  B4D8               	btfsc	status,2,c
 25361  00108A  D6CB               	goto	l1203
 25362  00108C  0A01               	xorlw	1	; case 3
 25363  00108E  B4D8               	btfsc	status,2,c
 25364  001090  D756               	goto	l1207
 25365  001092  0A07               	xorlw	7	; case 4
 25366  001094  B4D8               	btfsc	status,2,c
 25367  001096  D770               	goto	l1208
 25368  001098  0A01               	xorlw	1	; case 5
 25369  00109A  B4D8               	btfsc	status,2,c
 25370  00109C  D78D               	goto	l1209
 25371  00109E  0A03               	xorlw	3	; case 6
 25372  0010A0  B4D8               	btfsc	status,2,c
 25373  0010A2  D7E5               	goto	l1220
 25374  0010A4  0A01               	xorlw	1	; case 7
 25375  0010A6  B4D8               	btfsc	status,2,c
 25376  0010A8  D789               	goto	l1210
 25377  0010AA  0A0F               	xorlw	15	; case 8
 25378  0010AC  B4D8               	btfsc	status,2,c
 25379  0010AE  D7B0               	goto	l1215
 25380  0010B0                     l1201:
 25381                           
 25382                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 25383                           
 25384                           ; BSR set to: 1
 25385  0010B0  0101               	movlb	1	; () banked
 25386  0010B2  51FE               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 25387  0010B4  0012               	return	
 25388  0010B6                     __end_of_InitGprsNetwork:
 25389                           	opt stack 0
 25390                           tosu	equ	0xFFF
 25391                           tosh	equ	0xFFE
 25392                           tosl	equ	0xFFD
 25393                           pclath	equ	0xFFA
 25394                           tblptru	equ	0xFF8
 25395                           tblptrh	equ	0xFF7
 25396                           tblptrl	equ	0xFF6
 25397                           tablat	equ	0xFF5
 25398                           prodh	equ	0xFF4
 25399                           prodl	equ	0xFF3
 25400                           intcon	equ	0xFF2
 25401                           intcon2	equ	0xFF1
 25402                           intcon3	equ	0xFF0
 25403                           indf0	equ	0xFEF
 25404                           postinc0	equ	0xFEE
 25405                           plusw0	equ	0xFEB
 25406                           fsr0h	equ	0xFEA
 25407                           fsr0l	equ	0xFE9
 25408                           wreg	equ	0xFE8
 25409                           indf1	equ	0xFE7
 25410                           postinc1	equ	0xFE6
 25411                           postdec1	equ	0xFE5
 25412                           plusw1	equ	0xFE3
 25413                           fsr1h	equ	0xFE2
 25414                           fsr1l	equ	0xFE1
 25415                           indf2	equ	0xFDF
 25416                           postinc2	equ	0xFDE
 25417                           postdec2	equ	0xFDD
 25418                           plusw2	equ	0xFDB
 25419                           fsr2h	equ	0xFDA
 25420                           fsr2l	equ	0xFD9
 25421                           status	equ	0xFD8
 25422                           
 25423 ;; *************** function _HttpGetMethod *****************
 25424 ;; Defined at:
 25425 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 25426 ;; Parameters:    Size  Location     Type
 25427 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 25428 ;;		 -> HttpGetDataLocal(5), 
 25429 ;; Auto vars:     Size  Location     Type
 25430 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 25431 ;;  Index           1  200[BANK1 ] unsigned char 
 25432 ;; Return value:  Size  Location     Type
 25433 ;;                  1    wreg      enum E8905
 25434 ;; Registers used:
 25435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25436 ;; Tracked objects:
 25437 ;;		On entry : 0/0
 25438 ;;		On exit  : 0/0
 25439 ;;		Unchanged: 0/0
 25440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25441 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25442 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25443 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25444 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25445 ;;Total ram usage:      207 bytes
 25446 ;; Hardware stack levels used:    1
 25447 ;; Hardware stack levels required when called:   14
 25448 ;; This function calls:
 25449 ;;		_ClearBuffer
 25450 ;;		_OsTmr_GetTimerStatus
 25451 ;;		_OsTmr_StartTimer
 25452 ;;		_ReceiveEvt
 25453 ;;		_StringCopy
 25454 ;;		_Uart_WriteConstString
 25455 ;;		_Uart_WriteString
 25456 ;; This function is called by:
 25457 ;;		_MdmHttp_MainTask
 25458 ;; This function uses a non-reentrant model
 25459 ;;
 25460                           
 25461                           	psect	text114
 25462  0005EC                     __ptext114:
 25463                           	opt stack 0
 25464  0005EC                     _HttpGetMethod:
 25465                           	opt stack 13
 25466                           
 25467                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 25468                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 25469                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 25470                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 25471                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 25472                           
 25473                           ; BSR set to: 1
 25474                           ;incstack = 0
 25475  0005EC  0E00               	movlw	0
 25476  0005EE  0101               	movlb	1	; () banked
 25477  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 25478                           
 25479                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 25480  0005F2  D230               	goto	l1231
 25481  0005F4                     
 25482                           ; BSR set to: 1
 25483                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 25484                           
 25485                           ; BSR set to: 1
 25486  0005F4  0ED7               	movlw	low _GetMethod
 25487  0005F6  0100               	movlb	0	; () banked
 25488  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25489  0005FA  0E00               	movlw	high _GetMethod
 25490  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25491  0005FE  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 25492  000602  0900               	iorlw	0
 25493  000604  B4D8               	btfsc	status,2,c
 25494  000606  D257               	goto	l1234
 25495                           
 25496                           ;mdm_gsm_gprs_http.c: 284: {
 25497                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 25498  000608  0E01               	movlw	1
 25499  00060A  D18C               	goto	L34
 25500  00060C                     
 25501                           ; BSR set to: 1
 25502                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 25503                           
 25504                           ; BSR set to: 1
 25505  00060C  0E9F               	movlw	low STR_12
 25506  00060E  0100               	movlb	0	; () banked
 25507  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25508  000612  0EFF               	movlw	high STR_12
 25509  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25510  000616  0E01               	movlw	1
 25511  000618  ECA9  F02A         	call	_Uart_WriteConstString
 25512                           
 25513                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 25514  00061C  0E0A               	movlw	10
 25515  00061E  0101               	movlb	1	; () banked
 25516  000620  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25517                           
 25518                           ; BSR set to: 1
 25519                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 25520  000622  0E02               	movlw	2
 25521  000624  0100               	movlb	0	; () banked
 25522  000626  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25523                           
 25524                           ; BSR set to: 0
 25525                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 25526  000628  0EF5               	movlw	low _ConnTimeout
 25527  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25528  00062C  0E02               	movlw	high _ConnTimeout
 25529  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25530  000630  0E20               	movlw	32
 25531  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25532  000634  0E4E               	movlw	78
 25533  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25534  000638  0E00               	movlw	0
 25535  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25536  00063C  0E00               	movlw	0
 25537  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25538  000640  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 25539  000644  D1AF               	goto	l13335
 25540  000646                     
 25541                           ; BSR set to: 1
 25542                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 25543                           
 25544                           ; BSR set to: 1
 25545  000646  0E77               	movlw	low STR_13
 25546  000648  0100               	movlb	0	; () banked
 25547  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25548  00064C  0EFF               	movlw	high STR_13
 25549  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25550  000650  0E01               	movlw	1
 25551  000652  ECA9  F02A         	call	_Uart_WriteConstString
 25552                           
 25553                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 25554  000656  0E0A               	movlw	10
 25555  000658  0101               	movlb	1	; () banked
 25556  00065A  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25557                           
 25558                           ; BSR set to: 1
 25559                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 25560  00065C  0E03               	movlw	3
 25561  00065E  0100               	movlb	0	; () banked
 25562  000660  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25563                           
 25564                           ; BSR set to: 0
 25565                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 25566  000662  0EF5               	movlw	low _ConnTimeout
 25567  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25568  000666  0E02               	movlw	high _ConnTimeout
 25569  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25570  00066A  0E20               	movlw	32
 25571  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25572  00066E  0E4E               	movlw	78
 25573  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25574  000672  0E00               	movlw	0
 25575  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25576  000676  0E00               	movlw	0
 25577  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25578  00067A  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 25579  00067E  D192               	goto	l13335
 25580  000680                     
 25581                           ; BSR set to: 1
 25582                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 25583                           
 25584                           ; BSR set to: 1
 25585  000680  0ED9               	movlw	low STR_14
 25586  000682  0100               	movlb	0	; () banked
 25587  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25588  000686  0EFE               	movlw	high STR_14
 25589  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25590  00068A  0E01               	movlw	1
 25591  00068C  ECA9  F02A         	call	_Uart_WriteConstString
 25592                           
 25593                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 25594  000690  0E0A               	movlw	10
 25595  000692  0101               	movlb	1	; () banked
 25596  000694  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25597                           
 25598                           ; BSR set to: 1
 25599                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 25600  000696  0E04               	movlw	4
 25601  000698  0100               	movlb	0	; () banked
 25602  00069A  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25603                           
 25604                           ; BSR set to: 0
 25605                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 25606  00069C  0EF5               	movlw	low _ConnTimeout
 25607  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25608  0006A0  0E02               	movlw	high _ConnTimeout
 25609  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25610  0006A4  0E20               	movlw	32
 25611  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25612  0006A8  0E4E               	movlw	78
 25613  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25614  0006AC  0E00               	movlw	0
 25615  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25616  0006B0  0E00               	movlw	0
 25617  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25618  0006B4  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 25619  0006B8  D175               	goto	l13335
 25620  0006BA                     
 25621                           ; BSR set to: 1
 25622                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 25623                           
 25624                           ; BSR set to: 1
 25625  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 25626  0006BC  0100               	movlb	0	; () banked
 25627  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25628  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 25629  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25630  0006C4  0E00               	movlw	0
 25631  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25632  0006C8  0EC8               	movlw	200
 25633  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25634  0006CC  ECFA  F02B         	call	_ClearBuffer	;wreg free
 25635                           
 25636                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 25637  0006D0  0E17               	movlw	low STR_15
 25638  0006D2  0100               	movlb	0	; () banked
 25639  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25640  0006D6  0EFF               	movlw	high STR_15
 25641  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25642  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 25643  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25644  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 25645  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25646  0006E2  0E00               	movlw	0
 25647  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 25648  0006E6  0E13               	movlw	19
 25649  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 25650  0006EA  ECDD  F026         	call	_StringCopy	;wreg free
 25651                           
 25652                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 25653  0006EE  0E00               	movlw	0
 25654  0006F0  0101               	movlb	1	; () banked
 25655  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 25656  0006F4  D024               	goto	l1239
 25657  0006F6                     
 25658                           ; BSR set to: 1
 25659                           ;mdm_gsm_gprs_http.c: 332: {
 25660                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 25661                           
 25662                           ; BSR set to: 1
 25663  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25664  0006F8  0D01               	mullw	1
 25665  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 25666  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 25667  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 25668  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 25669  00070A  50F3               	movf	prodl,w,c
 25670  00070C  0100               	movlb	0	; () banked
 25671  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 25672  000710  6ED9               	movwf	fsr2l,c
 25673  000712  50F4               	movf	prodh,w,c
 25674  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 25675  000716  6EDA               	movwf	fsr2h,c
 25676  000718  0101               	movlb	1	; () banked
 25677  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25678  00071C  0100               	movlb	0	; () banked
 25679  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 25680  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 25681  000722  0E13               	movlw	19
 25682  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 25683  000726  0E00               	movlw	0
 25684  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 25685  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 25686  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 25687  00072E  6EE1               	movwf	fsr1l,c
 25688  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 25689  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 25690  000734  6EE2               	movwf	fsr1h,c
 25691  000736  CFDF FFE7          	movff	indf2,indf1
 25692                           
 25693                           ; BSR set to: 0
 25694  00073A  0101               	movlb	1	; () banked
 25695  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 25696  00073E                     l1239:
 25697                           
 25698                           ; BSR set to: 1
 25699                           
 25700                           ; BSR set to: 1
 25701  00073E  0100               	movlb	0	; () banked
 25702  000740  EE20 F002          	lfsr	2,2
 25703  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 25704  000746  26D9               	addwf	fsr2l,f,c
 25705  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 25706  00074A  22DA               	addwfc	fsr2h,f,c
 25707  00074C  50DE               	movf	postinc2,w,c
 25708  00074E  0101               	movlb	1	; () banked
 25709  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 25710  000752  A0D8               	btfss	status,0,c
 25711  000754  D7D0               	goto	l1240
 25712                           
 25713                           ; BSR set to: 1
 25714                           ;mdm_gsm_gprs_http.c: 334: }
 25715                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 25716                           
 25717                           ; BSR set to: 1
 25718  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25719  000758  0100               	movlb	0	; () banked
 25720  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 25721  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 25722  00075E  0E13               	movlw	19
 25723  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 25724  000762  0E00               	movlw	0
 25725  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 25726  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 25727  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 25728  00076A  6ED9               	movwf	fsr2l,c
 25729  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 25730  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 25731  000770  6EDA               	movwf	fsr2h,c
 25732  000772  0E22               	movlw	34
 25733  000774  6EDF               	movwf	indf2,c
 25734                           
 25735                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 25736  000776  0101               	movlb	1	; () banked
 25737  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25738  00077A  0100               	movlb	0	; () banked
 25739  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 25740  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 25741  000780  0E14               	movlw	20
 25742  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 25743  000784  0E00               	movlw	0
 25744  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 25745  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 25746  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 25747  00078C  6ED9               	movwf	fsr2l,c
 25748  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 25749  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 25750  000792  6EDA               	movwf	fsr2h,c
 25751  000794  0E0D               	movlw	13
 25752  000796  6EDF               	movwf	indf2,c
 25753                           
 25754                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 25755  000798  0101               	movlb	1	; () banked
 25756  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25757  00079C  0100               	movlb	0	; () banked
 25758  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 25759  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 25760  0007A2  0E15               	movlw	21
 25761  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 25762  0007A6  0E00               	movlw	0
 25763  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 25764  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 25765  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 25766  0007AE  6ED9               	movwf	fsr2l,c
 25767  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 25768  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 25769  0007B4  6EDA               	movwf	fsr2h,c
 25770  0007B6  0E00               	movlw	0
 25771  0007B8  6EDF               	movwf	indf2,c
 25772                           
 25773                           ; BSR set to: 0
 25774                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 25775  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 25776  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 25777  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 25778  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 25779  0007C2  0E01               	movlw	1
 25780  0007C4  EC49  F02B         	call	_Uart_WriteString
 25781                           
 25782                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 25783  0007C8  0E0A               	movlw	10
 25784  0007CA  0101               	movlb	1	; () banked
 25785  0007CC  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25786                           
 25787                           ; BSR set to: 1
 25788                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 25789  0007CE  0E05               	movlw	5
 25790  0007D0  0100               	movlb	0	; () banked
 25791  0007D2  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25792                           
 25793                           ; BSR set to: 0
 25794                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 25795  0007D4  0EF5               	movlw	low _ConnTimeout
 25796  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25797  0007D8  0E02               	movlw	high _ConnTimeout
 25798  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25799  0007DC  0E20               	movlw	32
 25800  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25801  0007E0  0E4E               	movlw	78
 25802  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25803  0007E4  0E00               	movlw	0
 25804  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25805  0007E8  0E00               	movlw	0
 25806  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25807  0007EC  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 25808  0007F0  D0D9               	goto	l13335
 25809  0007F2                     
 25810                           ; BSR set to: 1
 25811                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 25812                           
 25813                           ; BSR set to: 1
 25814  0007F2  0E3C               	movlw	low STR_16
 25815  0007F4  0100               	movlb	0	; () banked
 25816  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25817  0007F8  0EFF               	movlw	high STR_16
 25818  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25819  0007FC  0E01               	movlw	1
 25820  0007FE  ECA9  F02A         	call	_Uart_WriteConstString
 25821                           
 25822                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 25823  000802  0E0A               	movlw	10
 25824  000804  0101               	movlb	1	; () banked
 25825  000806  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25826                           
 25827                           ; BSR set to: 1
 25828                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 25829  000808  0E06               	movlw	6
 25830  00080A  0100               	movlb	0	; () banked
 25831  00080C  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25832                           
 25833                           ; BSR set to: 0
 25834                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 25835  00080E  0EF5               	movlw	low _ConnTimeout
 25836  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25837  000812  0E02               	movlw	high _ConnTimeout
 25838  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25839  000816  0E20               	movlw	32
 25840  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25841  00081A  0E4E               	movlw	78
 25842  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25843  00081E  0E00               	movlw	0
 25844  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25845  000822  0E00               	movlw	0
 25846  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25847  000826  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 25848                           
 25849                           ;mdm_gsm_gprs_http.c: 358: break;
 25850  00082A  D145               	goto	l1234
 25851  00082C                     
 25852                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 25853  00082C  0E07               	movlw	7
 25854  00082E  0101               	movlb	1	; () banked
 25855  000830  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25856                           
 25857                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 25858  000832  0E09               	movlw	9
 25859  000834  0100               	movlb	0	; () banked
 25860  000836  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25861                           
 25862                           ; BSR set to: 0
 25863                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 25864  000838  0EF5               	movlw	low _ConnTimeout
 25865  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25866  00083C  0E02               	movlw	high _ConnTimeout
 25867  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25868  000840  0E20               	movlw	32
 25869  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25870  000844  0E4E               	movlw	78
 25871  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25872  000848  0E00               	movlw	0
 25873  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25874  00084C  0E00               	movlw	0
 25875  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25876  000850  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 25877                           
 25878                           ;mdm_gsm_gprs_http.c: 371: break;
 25879  000854  D130               	goto	l1234
 25880  000856                     
 25881                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 25882  000856  0E85               	movlw	low STR_17
 25883  000858  0100               	movlb	0	; () banked
 25884  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25885  00085C  0EFF               	movlw	high STR_17
 25886  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25887  000860  0E01               	movlw	1
 25888  000862  ECA9  F02A         	call	_Uart_WriteConstString
 25889                           
 25890                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 25891  000866  0E0D               	movlw	13
 25892  000868  0101               	movlb	1	; () banked
 25893  00086A  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25894                           
 25895                           ; BSR set to: 1
 25896                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 25897  00086C  0E09               	movlw	9
 25898  00086E  0100               	movlb	0	; () banked
 25899  000870  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25900                           
 25901                           ; BSR set to: 0
 25902                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 25903  000872  0EF5               	movlw	low _ConnTimeout
 25904  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25905  000876  0E02               	movlw	high _ConnTimeout
 25906  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25907  00087A  0E20               	movlw	32
 25908  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25909  00087E  0E4E               	movlw	78
 25910  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25911  000882  0E00               	movlw	0
 25912  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25913  000886  0E00               	movlw	0
 25914  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25915  00088A  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 25916  00088E  D08A               	goto	l13335
 25917  000890                     
 25918                           ; BSR set to: 1
 25919                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 25920                           
 25921                           ; BSR set to: 1
 25922  000890  0E92               	movlw	low STR_18
 25923  000892  0100               	movlb	0	; () banked
 25924  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25925  000896  0EFF               	movlw	high STR_18
 25926  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25927  00089A  0E01               	movlw	1
 25928  00089C  ECA9  F02A         	call	_Uart_WriteConstString
 25929                           
 25930                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 25931  0008A0  0E0A               	movlw	10
 25932  0008A2  0101               	movlb	1	; () banked
 25933  0008A4  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25934                           
 25935                           ; BSR set to: 1
 25936                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 25937  0008A6  0E0E               	movlw	14
 25938  0008A8  0100               	movlb	0	; () banked
 25939  0008AA  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25940                           
 25941                           ; BSR set to: 0
 25942                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 25943  0008AC  0EF5               	movlw	low _ConnTimeout
 25944  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25945  0008B0  0E02               	movlw	high _ConnTimeout
 25946  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25947  0008B4  0E20               	movlw	32
 25948  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25949  0008B8  0E4E               	movlw	78
 25950  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25951  0008BC  0E00               	movlw	0
 25952  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25953  0008C0  0E00               	movlw	0
 25954  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25955  0008C4  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 25956  0008C8  D06D               	goto	l13335
 25957  0008CA                     
 25958                           ; BSR set to: 1
 25959                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 25960                           
 25961                           ; BSR set to: 1
 25962  0008CA  0E3C               	movlw	low _NewStringReceived
 25963  0008CC  0100               	movlb	0	; () banked
 25964  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25965  0008D0  0E00               	movlw	high _NewStringReceived
 25966  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25967  0008D4  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 25968  0008D8  0900               	iorlw	0
 25969  0008DA  B4D8               	btfsc	status,2,c
 25970  0008DC  D018               	goto	l1247
 25971                           
 25972                           ;mdm_gsm_gprs_http.c: 400: {
 25973                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 25974  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 25975  0008E2  0A4F               	xorlw	79
 25976  0008E4  A4D8               	btfss	status,2,c
 25977  0008E6  D0E7               	goto	l1234
 25978  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25979  0008EC  0A4B               	xorlw	75
 25980  0008EE  A4D8               	btfss	status,2,c
 25981  0008F0  D0E2               	goto	l1234
 25982                           
 25983                           ;mdm_gsm_gprs_http.c: 403: {
 25984                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 25985  0008F2  C0CD  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 25986                           
 25987                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 25988  0008F6  0E58               	movlw	low _RxBuffer
 25989  0008F8  0100               	movlb	0	; () banked
 25990  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25991  0008FC  0E0C               	movlw	high _RxBuffer
 25992  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25993  000900  0E01               	movlw	1
 25994  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25995  000904  0E90               	movlw	144
 25996  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25997  000908  ECFA  F02B         	call	_ClearBuffer	;wreg free
 25998                           
 25999                           ;mdm_gsm_gprs_http.c: 408: }
 26000                           ;mdm_gsm_gprs_http.c: 409: }
 26001  00090C  D0D4               	goto	l1234
 26002  00090E                     l1247:
 26003                           
 26004                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26005  00090E  0EF5               	movlw	low _ConnTimeout
 26006  000910  0100               	movlb	0	; () banked
 26007  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26008  000914  0E02               	movlw	high _ConnTimeout
 26009  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26010  000918  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26011  00091C                     L35:
 26012  00091C  06E8               	decf	wreg,f,c
 26013  00091E  A4D8               	btfss	status,2,c
 26014  000920  D0CA               	goto	l1234
 26015                           
 26016                           ;mdm_gsm_gprs_http.c: 411: {
 26017                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 26018  000922  0E0F               	movlw	15
 26019  000924                     L34:
 26020  000924  0101               	movlb	1	; () banked
 26021  000926  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26022                           
 26023                           ; BSR set to: 1
 26024                           ;mdm_gsm_gprs_http.c: 414: }
 26025                           ;mdm_gsm_gprs_http.c: 415: break;
 26026                           
 26027                           ; BSR set to: 1
 26028  000928  D0C6               	goto	l1234
 26029  00092A                     
 26030                           ; BSR set to: 1
 26031                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 26032                           
 26033                           ; BSR set to: 1
 26034  00092A  0E3C               	movlw	low _NewStringReceived
 26035  00092C  0100               	movlb	0	; () banked
 26036  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26037  000930  0E00               	movlw	high _NewStringReceived
 26038  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26039  000934  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 26040  000938  0900               	iorlw	0
 26041  00093A  B4D8               	btfsc	status,2,c
 26042  00093C  D018               	goto	l1252
 26043                           
 26044                           ;mdm_gsm_gprs_http.c: 420: {
 26045                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 26046  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 26047  000942  0A2B               	xorlw	43
 26048  000944  A4D8               	btfss	status,2,c
 26049  000946  D0B7               	goto	l1234
 26050  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26051  00094C  0A48               	xorlw	72
 26052  00094E  A4D8               	btfss	status,2,c
 26053  000950  D0B2               	goto	l1234
 26054                           
 26055                           ;mdm_gsm_gprs_http.c: 423: {
 26056                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 26057  000952  C0CD  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26058                           
 26059                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 26060  000956  0E58               	movlw	low _RxBuffer
 26061  000958  0100               	movlb	0	; () banked
 26062  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26063  00095C  0E0C               	movlw	high _RxBuffer
 26064  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26065  000960  0E01               	movlw	1
 26066  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26067  000964  0E90               	movlw	144
 26068  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26069  000968  ECFA  F02B         	call	_ClearBuffer	;wreg free
 26070                           
 26071                           ;mdm_gsm_gprs_http.c: 428: }
 26072                           ;mdm_gsm_gprs_http.c: 429: }
 26073  00096C  D0A4               	goto	l1234
 26074  00096E                     l1252:
 26075                           
 26076                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26077  00096E  0EF5               	movlw	low _ConnTimeout
 26078  000970  0100               	movlb	0	; () banked
 26079  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26080  000974  0E02               	movlw	high _ConnTimeout
 26081  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26082  000978  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26083  00097C  D7CF               	goto	L35
 26084  00097E                     
 26085                           ; BSR set to: 1
 26086                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 26087                           
 26088                           ; BSR set to: 1
 26089  00097E  0E0C               	movlw	12
 26090  000980  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26091                           
 26092                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 26093  000982  0E05               	movlw	5
 26094  000984  0100               	movlb	0	; () banked
 26095  000986  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26096                           
 26097                           ; BSR set to: 0
 26098                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 26099  000988  0EDE               	movlw	low _ConnWait
 26100  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26101  00098C  0E03               	movlw	high _ConnWait
 26102  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26103  000990  0EE8               	movlw	232
 26104  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26105  000994  0E03               	movlw	3
 26106  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26107  000998  0E00               	movlw	0
 26108  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26109  00099C  0E00               	movlw	0
 26110  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26111  0009A0  EC3D  F027         	call	_OsTmr_StartTimer	;wreg free
 26112  0009A4                     l13335:
 26113                           
 26114                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 26115  0009A4  0E01               	movlw	1
 26116  0009A6  0101               	movlb	1	; () banked
 26117  0009A8  D053               	goto	L37
 26118  0009AA                     
 26119                           ; BSR set to: 1
 26120                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 26121                           
 26122                           ; BSR set to: 1
 26123  0009AA  0EDE               	movlw	low _ConnWait
 26124  0009AC  0100               	movlb	0	; () banked
 26125  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26126  0009B0  0E03               	movlw	high _ConnWait
 26127  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26128  0009B4  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26129  0009B8  06E8               	decf	wreg,f,c
 26130  0009BA  A4D8               	btfss	status,2,c
 26131  0009BC  D07C               	goto	l1234
 26132                           
 26133                           ;mdm_gsm_gprs_http.c: 450: {
 26134                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 26135  0009BE  C0CD  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26136                           
 26137                           ;mdm_gsm_gprs_http.c: 453: }
 26138                           ;mdm_gsm_gprs_http.c: 454: break;
 26139  0009C2  D079               	goto	l1234
 26140  0009C4                     
 26141                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 26142  0009C4  0E3C               	movlw	low _NewStringReceived
 26143  0009C6  0100               	movlb	0	; () banked
 26144  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26145  0009CA  0E00               	movlw	high _NewStringReceived
 26146  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26147  0009CE  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 26148  0009D2  0900               	iorlw	0
 26149  0009D4  B4D8               	btfsc	status,2,c
 26150  0009D6  D02D               	goto	l1260
 26151                           
 26152                           ;mdm_gsm_gprs_http.c: 459: {
 26153                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 26154  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 26155  0009DC  0A2B               	xorlw	43
 26156  0009DE  A4D8               	btfss	status,2,c
 26157  0009E0  D06A               	goto	l1234
 26158  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26159  0009E6  0A48               	xorlw	72
 26160  0009E8  A4D8               	btfss	status,2,c
 26161  0009EA  D065               	goto	l1234
 26162                           
 26163                           ;mdm_gsm_gprs_http.c: 462: {
 26164                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 26165  0009EC  C0CD  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26166                           
 26167                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 26168  0009F0  0E58               	movlw	low _RxBuffer
 26169  0009F2  0100               	movlb	0	; () banked
 26170  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26171  0009F6  0E0C               	movlw	high _RxBuffer
 26172  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26173  0009FA  EE20 F003          	lfsr	2,3
 26174  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 26175  000A00  26D9               	addwf	fsr2l,f,c
 26176  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 26177  000A04  22DA               	addwfc	fsr2h,f,c
 26178  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 26179  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 26180  000A0E  0E01               	movlw	1
 26181  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26182  000A12  0E90               	movlw	144
 26183  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 26184  000A16  ECDD  F026         	call	_StringCopy	;wreg free
 26185                           
 26186                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 26187  000A1A  0E58               	movlw	low _RxBuffer
 26188  000A1C  0100               	movlb	0	; () banked
 26189  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26190  000A20  0E0C               	movlw	high _RxBuffer
 26191  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26192  000A24  0E01               	movlw	1
 26193  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26194  000A28  0E90               	movlw	144
 26195  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26196  000A2C  ECFA  F02B         	call	_ClearBuffer	;wreg free
 26197                           
 26198                           ;mdm_gsm_gprs_http.c: 469: }
 26199                           ;mdm_gsm_gprs_http.c: 470: }
 26200  000A30  D042               	goto	l1234
 26201  000A32                     l1260:
 26202                           
 26203                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26204  000A32  0EF5               	movlw	low _ConnTimeout
 26205  000A34  0100               	movlb	0	; () banked
 26206  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26207  000A38  0E02               	movlw	high _ConnTimeout
 26208  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26209  000A3C  EC94  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26210  000A40  D76D               	goto	L35
 26211  000A42                     
 26212                           ; BSR set to: 1
 26213                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 26214                           
 26215                           ; BSR set to: 1
 26216  000A42  0E00               	movlw	0
 26217  000A44  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26218                           
 26219                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 26220  000A46  0E02               	movlw	2
 26221  000A48  D003               	goto	L37
 26222  000A4A                     
 26223                           ; BSR set to: 1
 26224                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 26225                           
 26226                           ; BSR set to: 1
 26227  000A4A  0E00               	movlw	0
 26228  000A4C  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26229                           
 26230                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 26231  000A4E  0E03               	movlw	3
 26232  000A50                     L37:
 26233  000A50  6FEB               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 26234                           
 26235                           ; BSR set to: 1
 26236                           ;mdm_gsm_gprs_http.c: 494: }
 26237                           
 26238                           ; BSR set to: 1
 26239                           ;mdm_gsm_gprs_http.c: 493: break;
 26240                           
 26241                           ;mdm_gsm_gprs_http.c: 492: default:
 26242                           
 26243                           ;mdm_gsm_gprs_http.c: 490: break;
 26244  000A52  D031               	goto	l1234
 26245  000A54                     l1231:
 26246                           
 26247                           ; BSR set to: 1
 26248                           
 26249                           ; BSR set to: 1
 26250  000A54  51EC               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 26251                           
 26252                           ; Switch size 1, requested type "space"
 26253                           ; Number of cases is 16, Range of values is 0 to 15
 26254                           ; switch strategies available:
 26255                           ; Name         Instructions Cycles
 26256                           ; simple_byte           49    25 (average)
 26257                           ;	Chosen strategy is simple_byte
 26258  000A56  0A00               	xorlw	0	; case 0
 26259  000A58  B4D8               	btfsc	status,2,c
 26260  000A5A  D5CC               	goto	l1232
 26261  000A5C  0A01               	xorlw	1	; case 1
 26262  000A5E  B4D8               	btfsc	status,2,c
 26263  000A60  D5D5               	goto	l1235
 26264  000A62  0A03               	xorlw	3	; case 2
 26265  000A64  B4D8               	btfsc	status,2,c
 26266  000A66  D5EF               	goto	l1236
 26267  000A68  0A01               	xorlw	1	; case 3
 26268  000A6A  B4D8               	btfsc	status,2,c
 26269  000A6C  D609               	goto	l1237
 26270  000A6E  0A07               	xorlw	7	; case 4
 26271  000A70  B4D8               	btfsc	status,2,c
 26272  000A72  D623               	goto	l1238
 26273  000A74  0A01               	xorlw	1	; case 5
 26274  000A76  B4D8               	btfsc	status,2,c
 26275  000A78  D6BC               	goto	l1242
 26276  000A7A  0A03               	xorlw	3	; case 6
 26277  000A7C  B4D8               	btfsc	status,2,c
 26278  000A7E  D6D6               	goto	l1243
 26279  000A80  0A01               	xorlw	1	; case 7
 26280  000A82  B4D8               	btfsc	status,2,c
 26281  000A84  D752               	goto	l1251
 26282  000A86  0A0F               	xorlw	15	; case 8
 26283  000A88  B4D8               	btfsc	status,2,c
 26284  000A8A  D6E5               	goto	l1244
 26285  000A8C  0A01               	xorlw	1	; case 9
 26286  000A8E  B4D8               	btfsc	status,2,c
 26287  000A90  D6FF               	goto	l1245
 26288  000A92  0A03               	xorlw	3	; case 10
 26289  000A94  B4D8               	btfsc	status,2,c
 26290  000A96  D719               	goto	l1246
 26291  000A98  0A01               	xorlw	1	; case 11
 26292  000A9A  B4D8               	btfsc	status,2,c
 26293  000A9C  D770               	goto	l1256
 26294  000A9E  0A07               	xorlw	7	; case 12
 26295  000AA0  B4D8               	btfsc	status,2,c
 26296  000AA2  D783               	goto	l1257
 26297  000AA4  0A01               	xorlw	1	; case 13
 26298  000AA6  B4D8               	btfsc	status,2,c
 26299  000AA8  D78D               	goto	l1259
 26300  000AAA  0A03               	xorlw	3	; case 14
 26301  000AAC  B4D8               	btfsc	status,2,c
 26302  000AAE  D7C9               	goto	l1264
 26303  000AB0  0A01               	xorlw	1	; case 15
 26304  000AB2  B4D8               	btfsc	status,2,c
 26305  000AB4  D7CA               	goto	l1265
 26306  000AB6                     l1234:
 26307                           
 26308                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 26309                           
 26310                           ; BSR set to: 1
 26311  000AB6  0101               	movlb	1	; () banked
 26312  000AB8  51EB               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 26313  000ABA  0012               	return	
 26314  000ABC                     __end_of_HttpGetMethod:
 26315                           	opt stack 0
 26316                           tosu	equ	0xFFF
 26317                           tosh	equ	0xFFE
 26318                           tosl	equ	0xFFD
 26319                           pclath	equ	0xFFA
 26320                           tblptru	equ	0xFF8
 26321                           tblptrh	equ	0xFF7
 26322                           tblptrl	equ	0xFF6
 26323                           tablat	equ	0xFF5
 26324                           prodh	equ	0xFF4
 26325                           prodl	equ	0xFF3
 26326                           intcon	equ	0xFF2
 26327                           intcon2	equ	0xFF1
 26328                           intcon3	equ	0xFF0
 26329                           indf0	equ	0xFEF
 26330                           postinc0	equ	0xFEE
 26331                           plusw0	equ	0xFEB
 26332                           fsr0h	equ	0xFEA
 26333                           fsr0l	equ	0xFE9
 26334                           wreg	equ	0xFE8
 26335                           indf1	equ	0xFE7
 26336                           postinc1	equ	0xFE6
 26337                           postdec1	equ	0xFE5
 26338                           plusw1	equ	0xFE3
 26339                           fsr1h	equ	0xFE2
 26340                           fsr1l	equ	0xFE1
 26341                           indf2	equ	0xFDF
 26342                           postinc2	equ	0xFDE
 26343                           postdec2	equ	0xFDD
 26344                           plusw2	equ	0xFDB
 26345                           fsr2h	equ	0xFDA
 26346                           fsr2l	equ	0xFD9
 26347                           status	equ	0xFD8
 26348                           
 26349 ;; *************** function _Uart_WriteString *****************
 26350 ;; Defined at:
 26351 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26352 ;; Parameters:    Size  Location     Type
 26353 ;;  Module          1    wreg     unsigned char 
 26354 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 26355 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 26356 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 26357 ;; Auto vars:     Size  Location     Type
 26358 ;;  Module          1   34[BANK0 ] unsigned char 
 26359 ;; Return value:  Size  Location     Type
 26360 ;;                  1    wreg      void 
 26361 ;; Registers used:
 26362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26363 ;; Tracked objects:
 26364 ;;		On entry : 0/0
 26365 ;;		On exit  : 0/0
 26366 ;;		Unchanged: 0/0
 26367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26368 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26371 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26372 ;;Total ram usage:        3 bytes
 26373 ;; Hardware stack levels used:    1
 26374 ;; Hardware stack levels required when called:   12
 26375 ;; This function calls:
 26376 ;;		_UartTxBufferStatus
 26377 ;;		_UartWriteByte
 26378 ;; This function is called by:
 26379 ;;		_InitGprsNetwork
 26380 ;;		_HttpGetMethod
 26381 ;;		_Mdm_PinUnlock
 26382 ;;		_Mdm_SetSmsFormat
 26383 ;;		_Mdm_MakePhoneCall
 26384 ;; This function uses a non-reentrant model
 26385 ;;
 26386                           
 26387                           	psect	text115
 26388  005692                     __ptext115:
 26389                           	opt stack 0
 26390  005692                     _Uart_WriteString:
 26391                           	opt stack 14
 26392                           
 26393                           ; BSR set to: 1
 26394                           ;incstack = 0
 26395                           ;Uart_WriteString@Module stored from wreg
 26396  005692  0100               	movlb	0	; () banked
 26397  005694  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 26398                           
 26399                           ;uart_drv.c: 521: while (*StringToWrite)
 26400  005696  D014               	goto	u11280
 26401  005698                     
 26402                           ;uart_drv.c: 522: {
 26403                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 26404  005698  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 26405  00569C  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 26406  0056A0  50DF               	movf	indf2,w,c
 26407  0056A2  0100               	movlb	0	; () banked
 26408  0056A4  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 26409  0056A6  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 26410  0056A8  EC02  F02E         	call	_UartWriteByte
 26411                           
 26412                           ;uart_drv.c: 526: StringToWrite++;
 26413  0056AC  0100               	movlb	0	; () banked
 26414  0056AE  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 26415  0056B0  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 26416  0056B2                     
 26417                           ; BSR set to: 0
 26418                           
 26419                           ; BSR set to: 0
 26420  0056B2  0100               	movlb	0	; () banked
 26421  0056B4  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 26422  0056B6  EC43  F029         	call	_UartTxBufferStatus
 26423  0056BA  06E8               	decf	wreg,f,c
 26424  0056BC  B4D8               	btfsc	status,2,c
 26425  0056BE  D7F9               	goto	l709
 26426  0056C0                     u11280:
 26427  0056C0  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 26428  0056C4  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 26429  0056C8  50DF               	movf	indf2,w,c
 26430  0056CA  B4D8               	btfsc	status,2,c
 26431  0056CC  0012               	return	
 26432  0056CE  D7E4               	goto	l707
 26433  0056D0                     __end_of_Uart_WriteString:
 26434                           	opt stack 0
 26435                           tosu	equ	0xFFF
 26436                           tosh	equ	0xFFE
 26437                           tosl	equ	0xFFD
 26438                           pclath	equ	0xFFA
 26439                           tblptru	equ	0xFF8
 26440                           tblptrh	equ	0xFF7
 26441                           tblptrl	equ	0xFF6
 26442                           tablat	equ	0xFF5
 26443                           prodh	equ	0xFF4
 26444                           prodl	equ	0xFF3
 26445                           intcon	equ	0xFF2
 26446                           intcon2	equ	0xFF1
 26447                           intcon3	equ	0xFF0
 26448                           indf0	equ	0xFEF
 26449                           postinc0	equ	0xFEE
 26450                           plusw0	equ	0xFEB
 26451                           fsr0h	equ	0xFEA
 26452                           fsr0l	equ	0xFE9
 26453                           wreg	equ	0xFE8
 26454                           indf1	equ	0xFE7
 26455                           postinc1	equ	0xFE6
 26456                           postdec1	equ	0xFE5
 26457                           plusw1	equ	0xFE3
 26458                           fsr1h	equ	0xFE2
 26459                           fsr1l	equ	0xFE1
 26460                           indf2	equ	0xFDF
 26461                           postinc2	equ	0xFDE
 26462                           postdec2	equ	0xFDD
 26463                           plusw2	equ	0xFDB
 26464                           fsr2h	equ	0xFDA
 26465                           fsr2l	equ	0xFD9
 26466                           status	equ	0xFD8
 26467                           
 26468 ;; *************** function _Uart_WriteConstString *****************
 26469 ;; Defined at:
 26470 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26471 ;; Parameters:    Size  Location     Type
 26472 ;;  Module          1    wreg     unsigned char 
 26473 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 26474 ;;		 -> STR_20(14), STR_19(14), STR_18(13), STR_17(13), 
 26475 ;;		 -> STR_16(17), STR_14(21), STR_13(14), STR_12(13), 
 26476 ;;		 -> STR_11(14), STR_10(14), STR_8(31), STR_7(5), 
 26477 ;;		 -> STR_6(5), STR_4(11), STR_3(6), STR_2(13), 
 26478 ;;		 -> STR_1(4), 
 26479 ;; Auto vars:     Size  Location     Type
 26480 ;;  Module          1   34[BANK0 ] unsigned char 
 26481 ;; Return value:  Size  Location     Type
 26482 ;;                  1    wreg      void 
 26483 ;; Registers used:
 26484 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26485 ;; Tracked objects:
 26486 ;;		On entry : 0/0
 26487 ;;		On exit  : 0/0
 26488 ;;		Unchanged: 0/0
 26489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26493 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26494 ;;Total ram usage:        3 bytes
 26495 ;; Hardware stack levels used:    1
 26496 ;; Hardware stack levels required when called:   12
 26497 ;; This function calls:
 26498 ;;		_UartTxBufferStatus
 26499 ;;		_UartWriteByte
 26500 ;; This function is called by:
 26501 ;;		_CheckModem
 26502 ;;		_ConfigureModem
 26503 ;;		_GetSmsSm
 26504 ;;		_InitGprsNetwork
 26505 ;;		_HttpGetMethod
 26506 ;;		_Mdm_HangPhoneCall
 26507 ;;		_Mdm_GetPhoneCall
 26508 ;;		_MdmHttp_SetSsl
 26509 ;; This function uses a non-reentrant model
 26510 ;;
 26511                           
 26512                           	psect	text116
 26513  005552                     __ptext116:
 26514                           	opt stack 0
 26515  005552                     _Uart_WriteConstString:
 26516                           	opt stack 14
 26517                           
 26518                           ;incstack = 0
 26519                           ;Uart_WriteConstString@Module stored from wreg
 26520  005552  0100               	movlb	0	; () banked
 26521  005554  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 26522                           
 26523                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 26524  005556  D015               	goto	u11260
 26525  005558                     
 26526                           ;uart_drv.c: 500: {
 26527                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 26528  005558  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 26529  00555C  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 26530  005560                     	if	0	;tblptru may be non-zero
 26531  005560                     	endif
 26532  005560                     	if	0	;tblptru may be non-zero
 26533  005560                     	endif
 26534  005560  0008               	tblrd		*
 26535  005562  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 26536  005566  0100               	movlb	0	; () banked
 26537  005568  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 26538  00556A  EC02  F02E         	call	_UartWriteByte
 26539                           
 26540                           ;uart_drv.c: 504: ConstStringToWrite++;
 26541  00556E  0100               	movlb	0	; () banked
 26542  005570  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 26543  005572  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 26544  005574                     
 26545                           ; BSR set to: 0
 26546                           
 26547                           ; BSR set to: 0
 26548  005574  0100               	movlb	0	; () banked
 26549  005576  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 26550  005578  EC43  F029         	call	_UartTxBufferStatus
 26551  00557C  06E8               	decf	wreg,f,c
 26552  00557E  B4D8               	btfsc	status,2,c
 26553  005580  D7F9               	goto	l700
 26554  005582                     u11260:
 26555  005582  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 26556  005586  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 26557  00558A                     	if	0	;tblptru may be non-zero
 26558  00558A                     	endif
 26559  00558A                     	if	0	;tblptru may be non-zero
 26560  00558A                     	endif
 26561  00558A  0008               	tblrd		*
 26562  00558C  50F5               	movf	tablat,w,c
 26563  00558E  0900               	iorlw	0
 26564  005590  B4D8               	btfsc	status,2,c
 26565  005592  0012               	return	
 26566  005594  D7E1               	goto	l698
 26567  005596                     __end_of_Uart_WriteConstString:
 26568                           	opt stack 0
 26569                           tosu	equ	0xFFF
 26570                           tosh	equ	0xFFE
 26571                           tosl	equ	0xFFD
 26572                           pclath	equ	0xFFA
 26573                           tblptru	equ	0xFF8
 26574                           tblptrh	equ	0xFF7
 26575                           tblptrl	equ	0xFF6
 26576                           tablat	equ	0xFF5
 26577                           prodh	equ	0xFF4
 26578                           prodl	equ	0xFF3
 26579                           intcon	equ	0xFF2
 26580                           intcon2	equ	0xFF1
 26581                           intcon3	equ	0xFF0
 26582                           indf0	equ	0xFEF
 26583                           postinc0	equ	0xFEE
 26584                           plusw0	equ	0xFEB
 26585                           fsr0h	equ	0xFEA
 26586                           fsr0l	equ	0xFE9
 26587                           wreg	equ	0xFE8
 26588                           indf1	equ	0xFE7
 26589                           postinc1	equ	0xFE6
 26590                           postdec1	equ	0xFE5
 26591                           plusw1	equ	0xFE3
 26592                           fsr1h	equ	0xFE2
 26593                           fsr1l	equ	0xFE1
 26594                           indf2	equ	0xFDF
 26595                           postinc2	equ	0xFDE
 26596                           postdec2	equ	0xFDD
 26597                           plusw2	equ	0xFDB
 26598                           fsr2h	equ	0xFDA
 26599                           fsr2l	equ	0xFD9
 26600                           status	equ	0xFD8
 26601                           
 26602 ;; *************** function _UartWriteByte *****************
 26603 ;; Defined at:
 26604 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26605 ;; Parameters:    Size  Location     Type
 26606 ;;  Module          1    wreg     unsigned char 
 26607 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 26608 ;; Auto vars:     Size  Location     Type
 26609 ;;  Module          1   30[BANK0 ] unsigned char 
 26610 ;; Return value:  Size  Location     Type
 26611 ;;                  1    wreg      void 
 26612 ;; Registers used:
 26613 ;;		wreg, status,2, status,0
 26614 ;; Tracked objects:
 26615 ;;		On entry : 0/0
 26616 ;;		On exit  : 0/0
 26617 ;;		Unchanged: 0/0
 26618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26619 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26622 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26623 ;;Total ram usage:        2 bytes
 26624 ;; Hardware stack levels used:    1
 26625 ;; Hardware stack levels required when called:   11
 26626 ;; This function calls:
 26627 ;;		Nothing
 26628 ;; This function is called by:
 26629 ;;		_Uart_WriteConstString
 26630 ;;		_Uart_WriteString
 26631 ;;		_Uart_WriteStringLen
 26632 ;; This function uses a non-reentrant model
 26633 ;;
 26634                           
 26635                           	psect	text117
 26636  005C04                     __ptext117:
 26637                           	opt stack 0
 26638  005C04                     _UartWriteByte:
 26639                           	opt stack 14
 26640                           
 26641                           ;incstack = 0
 26642                           ;UartWriteByte@Module stored from wreg
 26643  005C04  0100               	movlb	0	; () banked
 26644  005C06  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 26645                           
 26646                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 26647  005C08  0100               	movlb	0	; () banked
 26648  005C0A  057E               	decf	UartWriteByte@Module& (0+255),w,b
 26649  005C0C  A4D8               	btfss	status,2,c
 26650  005C0E  D003               	goto	l639
 26651                           
 26652                           ; BSR set to: 0
 26653                           ;uart_drv.c: 176: {
 26654                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 26655  005C10  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 26656                           
 26657                           ;uart_drv.c: 179: }
 26658  005C14  0012               	return	
 26659  005C16                     l639:
 26660                           
 26661                           ; BSR set to: 0
 26662                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 26663                           
 26664                           ; BSR set to: 0
 26665  005C16  0E02               	movlw	2
 26666  005C18  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 26667  005C1A  A4D8               	btfss	status,2,c
 26668  005C1C  0012               	return	
 26669                           
 26670                           ; BSR set to: 0
 26671                           ;uart_drv.c: 181: {
 26672                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 26673  005C1E  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 26674                           
 26675                           ; BSR set to: 0
 26676  005C22  0012               	return	
 26677  005C24                     __end_of_UartWriteByte:
 26678                           	opt stack 0
 26679                           tosu	equ	0xFFF
 26680                           tosh	equ	0xFFE
 26681                           tosl	equ	0xFFD
 26682                           pclath	equ	0xFFA
 26683                           tblptru	equ	0xFF8
 26684                           tblptrh	equ	0xFF7
 26685                           tblptrl	equ	0xFF6
 26686                           tablat	equ	0xFF5
 26687                           prodh	equ	0xFF4
 26688                           prodl	equ	0xFF3
 26689                           intcon	equ	0xFF2
 26690                           intcon2	equ	0xFF1
 26691                           intcon3	equ	0xFF0
 26692                           indf0	equ	0xFEF
 26693                           postinc0	equ	0xFEE
 26694                           plusw0	equ	0xFEB
 26695                           fsr0h	equ	0xFEA
 26696                           fsr0l	equ	0xFE9
 26697                           wreg	equ	0xFE8
 26698                           indf1	equ	0xFE7
 26699                           postinc1	equ	0xFE6
 26700                           postdec1	equ	0xFE5
 26701                           plusw1	equ	0xFE3
 26702                           fsr1h	equ	0xFE2
 26703                           fsr1l	equ	0xFE1
 26704                           indf2	equ	0xFDF
 26705                           postinc2	equ	0xFDE
 26706                           postdec2	equ	0xFDD
 26707                           plusw2	equ	0xFDB
 26708                           fsr2h	equ	0xFDA
 26709                           fsr2l	equ	0xFD9
 26710                           status	equ	0xFD8
 26711                           
 26712 ;; *************** function _UartTxBufferStatus *****************
 26713 ;; Defined at:
 26714 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26715 ;; Parameters:    Size  Location     Type
 26716 ;;  Module          1    wreg     unsigned char 
 26717 ;; Auto vars:     Size  Location     Type
 26718 ;;  Module          1   30[BANK0 ] unsigned char 
 26719 ;;  TxBufferStat    1   31[BANK0 ] enum E9017
 26720 ;; Return value:  Size  Location     Type
 26721 ;;                  1    wreg      enum E9017
 26722 ;; Registers used:
 26723 ;;		wreg, status,2, status,0
 26724 ;; Tracked objects:
 26725 ;;		On entry : 0/0
 26726 ;;		On exit  : 0/0
 26727 ;;		Unchanged: 0/0
 26728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26730 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26731 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26732 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26733 ;;Total ram usage:        3 bytes
 26734 ;; Hardware stack levels used:    1
 26735 ;; Hardware stack levels required when called:   11
 26736 ;; This function calls:
 26737 ;;		Nothing
 26738 ;; This function is called by:
 26739 ;;		_Uart_WriteConstString
 26740 ;;		_Uart_WriteString
 26741 ;;		_Uart_WriteStringLen
 26742 ;; This function uses a non-reentrant model
 26743 ;;
 26744                           
 26745                           	psect	text118
 26746  005286                     __ptext118:
 26747                           	opt stack 0
 26748  005286                     _UartTxBufferStatus:
 26749                           	opt stack 14
 26750                           
 26751                           ; BSR set to: 0
 26752                           ;incstack = 0
 26753                           ;UartTxBufferStatus@Module stored from wreg
 26754  005286  0100               	movlb	0	; () banked
 26755  005288  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 26756                           
 26757                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 26758  00528A  0E00               	movlw	0
 26759  00528C  0100               	movlb	0	; () banked
 26760  00528E  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 26761                           
 26762                           ; BSR set to: 0
 26763                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 26764  005290  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 26765  005292  A4D8               	btfss	status,2,c
 26766  005294  D00B               	goto	l651
 26767                           
 26768                           ; BSR set to: 0
 26769                           ;uart_drv.c: 228: {
 26770                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 26771  005296  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 26772  00529A  90D8               	bcf	status,0,c
 26773  00529C  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 26774  00529E  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 26775  0052A0  D002               	goto	l652
 26776  0052A2                     u10630:
 26777                           
 26778                           ; BSR set to: 0
 26779                           ;uart_drv.c: 231: {
 26780                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 26781  0052A2  0E01               	movlw	1
 26782  0052A4  D014               	goto	L40
 26783  0052A6                     l652:
 26784                           
 26785                           ; BSR set to: 0
 26786                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 26787                           
 26788                           ; BSR set to: 0
 26789  0052A6  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 26790  0052AA  D00C               	goto	L69
 26791  0052AC                     l651:
 26792                           
 26793                           ; BSR set to: 0
 26794                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 26795                           
 26796                           ; BSR set to: 0
 26797  0052AC  0E02               	movlw	2
 26798  0052AE  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 26799  0052B0  A4D8               	btfss	status,2,c
 26800  0052B2  D00E               	goto	l660
 26801                           
 26802                           ; BSR set to: 0
 26803                           ;uart_drv.c: 244: {
 26804                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 26805  0052B4  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 26806  0052B8  90D8               	bcf	status,0,c
 26807  0052BA  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 26808  0052BC  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 26809  0052BE  D7F1               	goto	u10630
 26810                           
 26811                           ; BSR set to: 0
 26812                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 26813                           
 26814                           ; BSR set to: 0
 26815                           
 26816                           ;uart_drv.c: 249: }
 26817                           
 26818                           ; BSR set to: 0
 26819                           ;uart_drv.c: 247: {
 26820                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 26821  0052C0  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 26822  0052C4                     L69:
 26823  0052C4  90D8               	bcf	status,0,c
 26824  0052C6  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 26825  0052C8  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 26826  0052CA  D002               	goto	l660
 26827                           
 26828                           ; BSR set to: 0
 26829                           ;uart_drv.c: 251: {
 26830                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 26831  0052CC  0E02               	movlw	2
 26832  0052CE                     L40:
 26833  0052CE  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 26834  0052D0                     l660:
 26835                           
 26836                           ; BSR set to: 0
 26837                           ;uart_drv.c: 257: }
 26838                           ;uart_drv.c: 258: }
 26839                           ;uart_drv.c: 260: return TxBufferStatus;
 26840                           
 26841                           ; BSR set to: 0
 26842                           
 26843                           ; BSR set to: 0
 26844                           
 26845                           ; BSR set to: 0
 26846                           
 26847                           ; BSR set to: 0
 26848                           
 26849                           ;uart_drv.c: 254: else
 26850                           ;uart_drv.c: 255: {
 26851                           
 26852                           ; BSR set to: 0
 26853  0052D0  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 26854  0052D2  0012               	return	
 26855  0052D4                     __end_of_UartTxBufferStatus:
 26856                           	opt stack 0
 26857                           tosu	equ	0xFFF
 26858                           tosh	equ	0xFFE
 26859                           tosl	equ	0xFFD
 26860                           pclath	equ	0xFFA
 26861                           tblptru	equ	0xFF8
 26862                           tblptrh	equ	0xFF7
 26863                           tblptrl	equ	0xFF6
 26864                           tablat	equ	0xFF5
 26865                           prodh	equ	0xFF4
 26866                           prodl	equ	0xFF3
 26867                           intcon	equ	0xFF2
 26868                           intcon2	equ	0xFF1
 26869                           intcon3	equ	0xFF0
 26870                           indf0	equ	0xFEF
 26871                           postinc0	equ	0xFEE
 26872                           plusw0	equ	0xFEB
 26873                           fsr0h	equ	0xFEA
 26874                           fsr0l	equ	0xFE9
 26875                           wreg	equ	0xFE8
 26876                           indf1	equ	0xFE7
 26877                           postinc1	equ	0xFE6
 26878                           postdec1	equ	0xFE5
 26879                           plusw1	equ	0xFE3
 26880                           fsr1h	equ	0xFE2
 26881                           fsr1l	equ	0xFE1
 26882                           indf2	equ	0xFDF
 26883                           postinc2	equ	0xFDE
 26884                           postdec2	equ	0xFDD
 26885                           plusw2	equ	0xFDB
 26886                           fsr2h	equ	0xFDA
 26887                           fsr2l	equ	0xFD9
 26888                           status	equ	0xFD8
 26889                           
 26890 ;; *************** function _StringCopy *****************
 26891 ;; Defined at:
 26892 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 26893 ;; Parameters:    Size  Location     Type
 26894 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 26895 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 26896 ;;		 -> STR_5(10), Mdm_SmsRx(132), RxBuffer(400), 
 26897 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 26898 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), 
 26899 ;;		 -> SendSmsSm@UartMessage(50), Mdm_SmsRx(132), 
 26900 ;;  Len             2   33[BANK0 ] unsigned short 
 26901 ;; Auto vars:     Size  Location     Type
 26902 ;;  Index           2   37[BANK0 ] unsigned short 
 26903 ;; Return value:  Size  Location     Type
 26904 ;;                  1    wreg      void 
 26905 ;; Registers used:
 26906 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26907 ;; Tracked objects:
 26908 ;;		On entry : 0/0
 26909 ;;		On exit  : 0/0
 26910 ;;		Unchanged: 0/0
 26911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26912 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26913 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26914 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26915 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26916 ;;Total ram usage:       10 bytes
 26917 ;; Hardware stack levels used:    1
 26918 ;; Hardware stack levels required when called:   11
 26919 ;; This function calls:
 26920 ;;		Nothing
 26921 ;; This function is called by:
 26922 ;;		_GetSmsSm
 26923 ;;		_SendSmsSm
 26924 ;;		_InitGprsNetwork
 26925 ;;		_HttpGetMethod
 26926 ;;		_Mdm_GetSmsData
 26927 ;;		_Mdm_SendSmsData
 26928 ;; This function uses a non-reentrant model
 26929 ;;
 26930                           
 26931                           	psect	text119
 26932  004DBA                     __ptext119:
 26933                           	opt stack 0
 26934  004DBA                     _StringCopy:
 26935                           	opt stack 15
 26936                           
 26937                           ;sf.c: 106: UINT16 Index = 0;
 26938                           
 26939                           ; BSR set to: 0
 26940                           ;incstack = 0
 26941  004DBA  0E00               	movlw	0
 26942  004DBC  0100               	movlb	0	; () banked
 26943  004DBE  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 26944  004DC0  0E00               	movlw	0
 26945  004DC2  6F85               	movwf	StringCopy@Index& (0+255),b
 26946                           
 26947                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 26948  004DC4  0E00               	movlw	0
 26949  004DC6  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 26950  004DC8  0E00               	movlw	0
 26951  004DCA  6F85               	movwf	StringCopy@Index& (0+255),b
 26952  004DCC  D020               	goto	l2200
 26953  004DCE                     
 26954                           ; BSR set to: 0
 26955                           ;sf.c: 110: {
 26956                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 26957                           
 26958                           ; BSR set to: 0
 26959  004DCE  5185               	movf	StringCopy@Index& (0+255),w,b
 26960  004DD0  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 26961  004DD2  6F83               	movwf	??_StringCopy& (0+255),b
 26962  004DD4  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 26963  004DD6  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 26964  004DD8  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 26965  004DDA  C083  FFF6         	movff	??_StringCopy,tblptrl
 26966  004DDE  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 26967  004DE2  6AF8               	clrf	tblptru,c
 26968  004DE4  5185               	movf	StringCopy@Index& (0+255),w,b
 26969  004DE6  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 26970  004DE8  6ED9               	movwf	fsr2l,c
 26971  004DEA  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 26972  004DEC  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 26973  004DEE  6EDA               	movwf	fsr2h,c
 26974  004DF0  0E0E               	movlw	(high __ramtop+-1)
 26975  004DF2  64F7               	cpfsgt	tblptrh,c
 26976  004DF4  D003               	bra	u11327
 26977  004DF6  0008               	tblrd		*
 26978  004DF8  50F5               	movf	tablat,w,c
 26979  004DFA  D005               	bra	u11320
 26980  004DFC                     u11327:
 26981  004DFC  CFF6 FFE9          	movff	tblptrl,fsr0l
 26982  004E00  CFF7 FFEA          	movff	tblptrh,fsr0h
 26983  004E04  50EF               	movf	indf0,w,c
 26984  004E06                     u11320:
 26985  004E06  6EDF               	movwf	indf2,c
 26986  004E08  0100               	movlb	0	; () banked
 26987  004E0A  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 26988  004E0C  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 26989  004E0E                     l2200:
 26990                           
 26991                           ; BSR set to: 0
 26992                           
 26993                           ; BSR set to: 0
 26994  004E0E  5181               	movf	StringCopy@Len& (0+255),w,b
 26995  004E10  5D85               	subwf	StringCopy@Index& (0+255),w,b
 26996  004E12  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 26997  004E14  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 26998  004E16  B0D8               	btfsc	status,0,c
 26999  004E18  0012               	return	
 27000  004E1A  D7D9               	goto	l2201
 27001  004E1C                     __end_of_StringCopy:
 27002                           	opt stack 0
 27003                           tosu	equ	0xFFF
 27004                           tosh	equ	0xFFE
 27005                           tosl	equ	0xFFD
 27006                           pclath	equ	0xFFA
 27007                           tblptru	equ	0xFF8
 27008                           tblptrh	equ	0xFF7
 27009                           tblptrl	equ	0xFF6
 27010                           tablat	equ	0xFF5
 27011                           prodh	equ	0xFF4
 27012                           prodl	equ	0xFF3
 27013                           intcon	equ	0xFF2
 27014                           intcon2	equ	0xFF1
 27015                           intcon3	equ	0xFF0
 27016                           indf0	equ	0xFEF
 27017                           postinc0	equ	0xFEE
 27018                           plusw0	equ	0xFEB
 27019                           fsr0h	equ	0xFEA
 27020                           fsr0l	equ	0xFE9
 27021                           wreg	equ	0xFE8
 27022                           indf1	equ	0xFE7
 27023                           postinc1	equ	0xFE6
 27024                           postdec1	equ	0xFE5
 27025                           plusw1	equ	0xFE3
 27026                           fsr1h	equ	0xFE2
 27027                           fsr1l	equ	0xFE1
 27028                           indf2	equ	0xFDF
 27029                           postinc2	equ	0xFDE
 27030                           postdec2	equ	0xFDD
 27031                           plusw2	equ	0xFDB
 27032                           fsr2h	equ	0xFDA
 27033                           fsr2l	equ	0xFD9
 27034                           status	equ	0xFD8
 27035                           
 27036 ;; *************** function _OsTmr_StartTimer *****************
 27037 ;; Defined at:
 27038 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27039 ;; Parameters:    Size  Location     Type
 27040 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 27041 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 27042 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 27043 ;;  Timeout         4   35[BANK0 ] unsigned long 
 27044 ;; Auto vars:     Size  Location     Type
 27045 ;;		None
 27046 ;; Return value:  Size  Location     Type
 27047 ;;                  1    wreg      void 
 27048 ;; Registers used:
 27049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27050 ;; Tracked objects:
 27051 ;;		On entry : 0/0
 27052 ;;		On exit  : 0/0
 27053 ;;		Unchanged: 0/0
 27054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27055 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27058 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27059 ;;Total ram usage:        6 bytes
 27060 ;; Hardware stack levels used:    1
 27061 ;; Hardware stack levels required when called:   12
 27062 ;; This function calls:
 27063 ;;		_GetOsTickCounter
 27064 ;; This function is called by:
 27065 ;;		_OsTmr_Wait
 27066 ;;		_CheckModem
 27067 ;;		_SendSmsSm
 27068 ;;		_InitGprsNetwork
 27069 ;;		_HttpGetMethod
 27070 ;;		_Term_MainSm
 27071 ;;		_I2cSlv_QueryI2cData
 27072 ;; This function uses a non-reentrant model
 27073 ;;
 27074                           
 27075                           	psect	text120
 27076  004E7A                     __ptext120:
 27077                           	opt stack 0
 27078  004E7A                     _OsTmr_StartTimer:
 27079                           	opt stack 12
 27080                           
 27081                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 27082                           
 27083                           ; BSR set to: 0
 27084                           ;incstack = 0
 27085  004E7A  0100               	movlb	0	; () banked
 27086  004E7C  EE20 F001          	lfsr	2,1
 27087  004E80  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27088  004E82  26D9               	addwf	fsr2l,f,c
 27089  004E84  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27090  004E86  22DA               	addwfc	fsr2h,f,c
 27091  004E88  0E00               	movlw	0
 27092  004E8A  6EDF               	movwf	indf2,c
 27093                           
 27094                           ; BSR set to: 0
 27095                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 27096  004E8C  ECC9  F02E         	call	_GetOsTickCounter	;wreg free
 27097  004E90  0100               	movlb	0	; () banked
 27098  004E92  EE20 F002          	lfsr	2,2
 27099  004E96  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27100  004E98  26D9               	addwf	fsr2l,f,c
 27101  004E9A  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27102  004E9C  22DA               	addwfc	fsr2h,f,c
 27103  004E9E  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 27104  004EA2  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 27105  004EA6  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 27106  004EAA  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 27107                           
 27108                           ; BSR set to: 0
 27109                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 27110  004EAE  EE20 F006          	lfsr	2,6
 27111  004EB2  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27112  004EB4  26D9               	addwf	fsr2l,f,c
 27113  004EB6  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27114  004EB8  22DA               	addwfc	fsr2h,f,c
 27115  004EBA  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 27116  004EBE  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 27117  004EC2  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 27118  004EC6  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 27119                           
 27120                           ; BSR set to: 0
 27121                           ;os_timers.c: 127: Timer->Enabled = 1u;
 27122  004ECA  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 27123  004ECE  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 27124  004ED2  0E01               	movlw	1
 27125  004ED4  6EDF               	movwf	indf2,c
 27126                           
 27127                           ; BSR set to: 0
 27128  004ED6  0012               	return		;funcret
 27129  004ED8                     __end_of_OsTmr_StartTimer:
 27130                           	opt stack 0
 27131                           tosu	equ	0xFFF
 27132                           tosh	equ	0xFFE
 27133                           tosl	equ	0xFFD
 27134                           pclath	equ	0xFFA
 27135                           tblptru	equ	0xFF8
 27136                           tblptrh	equ	0xFF7
 27137                           tblptrl	equ	0xFF6
 27138                           tablat	equ	0xFF5
 27139                           prodh	equ	0xFF4
 27140                           prodl	equ	0xFF3
 27141                           intcon	equ	0xFF2
 27142                           intcon2	equ	0xFF1
 27143                           intcon3	equ	0xFF0
 27144                           indf0	equ	0xFEF
 27145                           postinc0	equ	0xFEE
 27146                           plusw0	equ	0xFEB
 27147                           fsr0h	equ	0xFEA
 27148                           fsr0l	equ	0xFE9
 27149                           wreg	equ	0xFE8
 27150                           indf1	equ	0xFE7
 27151                           postinc1	equ	0xFE6
 27152                           postdec1	equ	0xFE5
 27153                           plusw1	equ	0xFE3
 27154                           fsr1h	equ	0xFE2
 27155                           fsr1l	equ	0xFE1
 27156                           indf2	equ	0xFDF
 27157                           postinc2	equ	0xFDE
 27158                           postdec2	equ	0xFDD
 27159                           plusw2	equ	0xFDB
 27160                           fsr2h	equ	0xFDA
 27161                           fsr2l	equ	0xFD9
 27162                           status	equ	0xFD8
 27163                           
 27164 ;; *************** function _OsTmr_GetTimerStatus *****************
 27165 ;; Defined at:
 27166 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27167 ;; Parameters:    Size  Location     Type
 27168 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 27169 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 27170 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 27171 ;; Auto vars:     Size  Location     Type
 27172 ;;		None
 27173 ;; Return value:  Size  Location     Type
 27174 ;;                  1    wreg      enum E7740
 27175 ;; Registers used:
 27176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27177 ;; Tracked objects:
 27178 ;;		On entry : 0/0
 27179 ;;		On exit  : 0/0
 27180 ;;		Unchanged: 0/0
 27181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27184 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27185 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27186 ;;Total ram usage:        6 bytes
 27187 ;; Hardware stack levels used:    1
 27188 ;; Hardware stack levels required when called:   13
 27189 ;; This function calls:
 27190 ;;		_GetElapsedTime
 27191 ;; This function is called by:
 27192 ;;		_OsTmr_Wait
 27193 ;;		_CheckModem
 27194 ;;		_SendSmsSm
 27195 ;;		_InitGprsNetwork
 27196 ;;		_HttpGetMethod
 27197 ;;		_Term_MainSm
 27198 ;;		_I2cSlv_QueryI2cData
 27199 ;; This function uses a non-reentrant model
 27200 ;;
 27201                           
 27202                           	psect	text121
 27203  004728                     __ptext121:
 27204                           	opt stack 0
 27205  004728                     _OsTmr_GetTimerStatus:
 27206                           	opt stack 11
 27207                           
 27208                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 27209                           
 27210                           ; BSR set to: 0
 27211                           ;incstack = 0
 27212  004728  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 27213  00472C  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 27214  004730  04DE               	decf	postinc2,w,c
 27215  004732  A4D8               	btfss	status,2,c
 27216  004734  D030               	goto	l864
 27217                           
 27218                           ;os_timers.c: 197: {
 27219                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 27220  004736  0100               	movlb	0	; () banked
 27221  004738  EE20 F006          	lfsr	2,6
 27222  00473C  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27223  00473E  26D9               	addwf	fsr2l,f,c
 27224  004740  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27225  004742  22DA               	addwfc	fsr2h,f,c
 27226  004744  EE10 F002          	lfsr	1,2
 27227  004748  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27228  00474A  26E1               	addwf	fsr1l,f,c
 27229  00474C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27230  00474E  22E2               	addwfc	fsr1h,f,c
 27231  004750  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 27232  004754  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 27233  004758  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 27234  00475C  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 27235  004760  EC91  F01D         	call	_GetElapsedTime	;wreg free
 27236  004764  50DE               	movf	postinc2,w,c
 27237  004766  0100               	movlb	0	; () banked
 27238  004768  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 27239  00476A  50DE               	movf	postinc2,w,c
 27240  00476C  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 27241  00476E  50DE               	movf	postinc2,w,c
 27242  004770  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 27243  004772  50DE               	movf	postinc2,w,c
 27244  004774  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 27245  004776  A0D8               	btfss	status,0,c
 27246  004778  D017               	goto	l867
 27247                           
 27248                           ; BSR set to: 0
 27249                           ;os_timers.c: 200: {
 27250                           ;os_timers.c: 202: Timer->Enabled = 0u;
 27251  00477A  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 27252  00477E  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 27253  004782  0E00               	movlw	0
 27254  004784  6EDF               	movwf	indf2,c
 27255                           
 27256                           ; BSR set to: 0
 27257                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 27258  004786  EE20 F001          	lfsr	2,1
 27259  00478A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27260  00478C  26D9               	addwf	fsr2l,f,c
 27261  00478E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27262  004790  22DA               	addwfc	fsr2h,f,c
 27263  004792  0E01               	movlw	1
 27264  004794  D008               	goto	L70
 27265  004796                     l864:
 27266                           
 27267                           ;os_timers.c: 211: else
 27268                           ;os_timers.c: 212: {
 27269                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 27270                           
 27271                           ; BSR set to: 0
 27272  004796  0100               	movlb	0	; () banked
 27273  004798  EE20 F001          	lfsr	2,1
 27274  00479C  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27275  00479E  26D9               	addwf	fsr2l,f,c
 27276  0047A0  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27277  0047A2  22DA               	addwfc	fsr2h,f,c
 27278  0047A4  0E02               	movlw	2
 27279  0047A6                     L70:
 27280  0047A6  6EDF               	movwf	indf2,c
 27281  0047A8                     l867:
 27282                           
 27283                           ; BSR set to: 0
 27284                           ;os_timers.c: 215: }
 27285                           ;os_timers.c: 218: return Timer->Status;
 27286  0047A8  EE20 F001          	lfsr	2,1
 27287  0047AC  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27288  0047AE  26D9               	addwf	fsr2l,f,c
 27289  0047B0  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27290  0047B2  22DA               	addwfc	fsr2h,f,c
 27291  0047B4  50DF               	movf	indf2,w,c
 27292  0047B6  0012               	return	
 27293  0047B8                     __end_of_OsTmr_GetTimerStatus:
 27294                           	opt stack 0
 27295                           tosu	equ	0xFFF
 27296                           tosh	equ	0xFFE
 27297                           tosl	equ	0xFFD
 27298                           pclath	equ	0xFFA
 27299                           tblptru	equ	0xFF8
 27300                           tblptrh	equ	0xFF7
 27301                           tblptrl	equ	0xFF6
 27302                           tablat	equ	0xFF5
 27303                           prodh	equ	0xFF4
 27304                           prodl	equ	0xFF3
 27305                           intcon	equ	0xFF2
 27306                           intcon2	equ	0xFF1
 27307                           intcon3	equ	0xFF0
 27308                           indf0	equ	0xFEF
 27309                           postinc0	equ	0xFEE
 27310                           plusw0	equ	0xFEB
 27311                           fsr0h	equ	0xFEA
 27312                           fsr0l	equ	0xFE9
 27313                           wreg	equ	0xFE8
 27314                           indf1	equ	0xFE7
 27315                           postinc1	equ	0xFE6
 27316                           postdec1	equ	0xFE5
 27317                           plusw1	equ	0xFE3
 27318                           fsr1h	equ	0xFE2
 27319                           fsr1l	equ	0xFE1
 27320                           indf2	equ	0xFDF
 27321                           postinc2	equ	0xFDE
 27322                           postdec2	equ	0xFDD
 27323                           plusw2	equ	0xFDB
 27324                           fsr2h	equ	0xFDA
 27325                           fsr2l	equ	0xFD9
 27326                           status	equ	0xFD8
 27327                           
 27328 ;; *************** function _GetElapsedTime *****************
 27329 ;; Defined at:
 27330 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27331 ;; Parameters:    Size  Location     Type
 27332 ;;  StartTime       4   33[BANK0 ] unsigned long 
 27333 ;; Auto vars:     Size  Location     Type
 27334 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 27335 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 27336 ;; Return value:  Size  Location     Type
 27337 ;;                  4   33[BANK0 ] unsigned long 
 27338 ;; Registers used:
 27339 ;;		wreg, status,2, status,0, cstack
 27340 ;; Tracked objects:
 27341 ;;		On entry : 0/0
 27342 ;;		On exit  : 0/0
 27343 ;;		Unchanged: 0/0
 27344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27345 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27346 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27347 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27348 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27349 ;;Total ram usage:       20 bytes
 27350 ;; Hardware stack levels used:    1
 27351 ;; Hardware stack levels required when called:   12
 27352 ;; This function calls:
 27353 ;;		_GetOsTickCounter
 27354 ;; This function is called by:
 27355 ;;		_OsTmr_GetTimerStatus
 27356 ;;		_OsTmr_GetRemainingTime
 27357 ;; This function uses a non-reentrant model
 27358 ;;
 27359                           
 27360                           	psect	text122
 27361  003B22                     __ptext122:
 27362                           	opt stack 0
 27363  003B22                     _GetElapsedTime:
 27364                           	opt stack 11
 27365                           
 27366                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 27367                           ;os_timers.c: 87: UINT32 TimeValue;
 27368                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 27369                           
 27370                           ; BSR set to: 0
 27371                           ;incstack = 0
 27372  003B22  ECC9  F02E         	call	_GetOsTickCounter	;wreg free
 27373  003B26  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 27374  003B2A  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 27375  003B2E  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 27376  003B32  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 27377                           
 27378                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 27379  003B36  0100               	movlb	0	; () banked
 27380  003B38  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 27381  003B3A  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 27382  003B3C  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 27383  003B3E  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 27384  003B40  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 27385  003B42  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 27386  003B44  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 27387  003B46  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 27388  003B48  A0D8               	btfss	status,0,c
 27389  003B4A  D01D               	goto	l844
 27390                           
 27391                           ; BSR set to: 0
 27392                           ;os_timers.c: 94: {
 27393                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 27394  003B4C  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 27395  003B50  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 27396  003B54  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 27397  003B58  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 27398  003B5C  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 27399  003B5E  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 27400  003B60  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 27401  003B62  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 27402  003B64  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 27403  003B66  0E00               	movlw	0
 27404  003B68  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 27405  003B6A  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 27406  003B6C  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 27407  003B6E  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 27408  003B70  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 27409  003B72  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 27410  003B74  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 27411  003B76  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 27412  003B78  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 27413  003B7A  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 27414  003B7C  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 27415  003B7E  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 27416  003B80  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 27417  003B82  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 27418  003B84  D028               	goto	L41
 27419  003B86                     l844:
 27420                           
 27421                           ; BSR set to: 0
 27422                           ;os_timers.c: 97: else
 27423                           ;os_timers.c: 98: {
 27424                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 27425                           
 27426                           ; BSR set to: 0
 27427  003B86  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 27428  003B8A  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 27429  003B8E  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 27430  003B92  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 27431  003B96  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 27432  003B98  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 27433  003B9A  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 27434  003B9C  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 27435  003B9E  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 27436  003BA0  0E00               	movlw	0
 27437  003BA2  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 27438  003BA4  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 27439  003BA6  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 27440  003BA8  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 27441  003BAA  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 27442  003BAC  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 27443  003BAE  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 27444  003BB0  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 27445  003BB2  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 27446  003BB4  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 27447  003BB6  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 27448  003BB8  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 27449  003BBA  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 27450  003BBC  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 27451  003BBE  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 27452  003BC0  0EFF               	movlw	255
 27453  003BC2  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 27454  003BC4  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 27455  003BC6  0EFF               	movlw	255
 27456  003BC8  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 27457  003BCA  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 27458  003BCC  0EFF               	movlw	255
 27459  003BCE  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 27460  003BD0  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 27461  003BD2  0EFF               	movlw	255
 27462  003BD4  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 27463  003BD6                     L41:
 27464  003BD6  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 27465                           
 27466                           ; BSR set to: 0
 27467                           ;os_timers.c: 100: }
 27468                           ;os_timers.c: 102: return TimeValue;
 27469                           
 27470                           ; BSR set to: 0
 27471  003BD8  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 27472  003BDC  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 27473  003BE0  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 27474  003BE4  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 27475  003BE8  0012               	return	
 27476  003BEA                     __end_of_GetElapsedTime:
 27477                           	opt stack 0
 27478                           tosu	equ	0xFFF
 27479                           tosh	equ	0xFFE
 27480                           tosl	equ	0xFFD
 27481                           pclath	equ	0xFFA
 27482                           tblptru	equ	0xFF8
 27483                           tblptrh	equ	0xFF7
 27484                           tblptrl	equ	0xFF6
 27485                           tablat	equ	0xFF5
 27486                           prodh	equ	0xFF4
 27487                           prodl	equ	0xFF3
 27488                           intcon	equ	0xFF2
 27489                           intcon2	equ	0xFF1
 27490                           intcon3	equ	0xFF0
 27491                           indf0	equ	0xFEF
 27492                           postinc0	equ	0xFEE
 27493                           plusw0	equ	0xFEB
 27494                           fsr0h	equ	0xFEA
 27495                           fsr0l	equ	0xFE9
 27496                           wreg	equ	0xFE8
 27497                           indf1	equ	0xFE7
 27498                           postinc1	equ	0xFE6
 27499                           postdec1	equ	0xFE5
 27500                           plusw1	equ	0xFE3
 27501                           fsr1h	equ	0xFE2
 27502                           fsr1l	equ	0xFE1
 27503                           indf2	equ	0xFDF
 27504                           postinc2	equ	0xFDE
 27505                           postdec2	equ	0xFDD
 27506                           plusw2	equ	0xFDB
 27507                           fsr2h	equ	0xFDA
 27508                           fsr2l	equ	0xFD9
 27509                           status	equ	0xFD8
 27510                           
 27511 ;; *************** function _GetOsTickCounter *****************
 27512 ;; Defined at:
 27513 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27514 ;; Parameters:    Size  Location     Type
 27515 ;;		None
 27516 ;; Auto vars:     Size  Location     Type
 27517 ;;		None
 27518 ;; Return value:  Size  Location     Type
 27519 ;;                  4   29[BANK0 ] unsigned long 
 27520 ;; Registers used:
 27521 ;;		None
 27522 ;; Tracked objects:
 27523 ;;		On entry : 0/0
 27524 ;;		On exit  : 0/0
 27525 ;;		Unchanged: 0/0
 27526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27527 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27530 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27531 ;;Total ram usage:        4 bytes
 27532 ;; Hardware stack levels used:    1
 27533 ;; Hardware stack levels required when called:   11
 27534 ;; This function calls:
 27535 ;;		Nothing
 27536 ;; This function is called by:
 27537 ;;		_GetElapsedTime
 27538 ;;		_OsTmr_StartTimer
 27539 ;;		_OsTmr_GetElapsedTime
 27540 ;; This function uses a non-reentrant model
 27541 ;;
 27542                           
 27543                           	psect	text123
 27544  005D92                     __ptext123:
 27545                           	opt stack 0
 27546  005D92                     _GetOsTickCounter:
 27547                           	opt stack 12
 27548                           
 27549                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 27550                           
 27551                           ; BSR set to: 0
 27552                           ;incstack = 0
 27553  005D92  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 27554  005D96  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 27555  005D9A  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 27556  005D9E  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 27557  005DA2  0012               	return		;funcret
 27558  005DA4                     __end_of_GetOsTickCounter:
 27559                           	opt stack 0
 27560                           tosu	equ	0xFFF
 27561                           tosh	equ	0xFFE
 27562                           tosl	equ	0xFFD
 27563                           pclath	equ	0xFFA
 27564                           tblptru	equ	0xFF8
 27565                           tblptrh	equ	0xFF7
 27566                           tblptrl	equ	0xFF6
 27567                           tablat	equ	0xFF5
 27568                           prodh	equ	0xFF4
 27569                           prodl	equ	0xFF3
 27570                           intcon	equ	0xFF2
 27571                           intcon2	equ	0xFF1
 27572                           intcon3	equ	0xFF0
 27573                           indf0	equ	0xFEF
 27574                           postinc0	equ	0xFEE
 27575                           plusw0	equ	0xFEB
 27576                           fsr0h	equ	0xFEA
 27577                           fsr0l	equ	0xFE9
 27578                           wreg	equ	0xFE8
 27579                           indf1	equ	0xFE7
 27580                           postinc1	equ	0xFE6
 27581                           postdec1	equ	0xFE5
 27582                           plusw1	equ	0xFE3
 27583                           fsr1h	equ	0xFE2
 27584                           fsr1l	equ	0xFE1
 27585                           indf2	equ	0xFDF
 27586                           postinc2	equ	0xFDE
 27587                           postdec2	equ	0xFDD
 27588                           plusw2	equ	0xFDB
 27589                           fsr2h	equ	0xFDA
 27590                           fsr2l	equ	0xFD9
 27591                           status	equ	0xFD8
 27592                           
 27593 ;; *************** function _ClearBuffer *****************
 27594 ;; Defined at:
 27595 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27596 ;; Parameters:    Size  Location     Type
 27597 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 27598 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), RxBuffer(400),
      + 
 27599 ;;  Len             2   31[BANK0 ] unsigned short 
 27600 ;; Auto vars:     Size  Location     Type
 27601 ;;  Index           2   33[BANK0 ] unsigned short 
 27602 ;; Return value:  Size  Location     Type
 27603 ;;                  1    wreg      void 
 27604 ;; Registers used:
 27605 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27606 ;; Tracked objects:
 27607 ;;		On entry : 0/0
 27608 ;;		On exit  : 0/0
 27609 ;;		Unchanged: 0/0
 27610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27612 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27614 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27615 ;;Total ram usage:        6 bytes
 27616 ;; Hardware stack levels used:    1
 27617 ;; Hardware stack levels required when called:   11
 27618 ;; This function calls:
 27619 ;;		Nothing
 27620 ;; This function is called by:
 27621 ;;		_InitGprsNetwork
 27622 ;;		_HttpGetMethod
 27623 ;;		_GsmGprsTerminal
 27624 ;; This function uses a non-reentrant model
 27625 ;;
 27626                           
 27627                           	psect	text124
 27628  0057F4                     __ptext124:
 27629                           	opt stack 0
 27630  0057F4                     _ClearBuffer:
 27631                           	opt stack 15
 27632                           
 27633                           ;sf.c: 126: UINT16 Index = 0;
 27634                           
 27635                           ;incstack = 0
 27636  0057F4  0E00               	movlw	0
 27637  0057F6  0100               	movlb	0	; () banked
 27638  0057F8  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 27639  0057FA  0E00               	movlw	0
 27640  0057FC  6F81               	movwf	ClearBuffer@Index& (0+255),b
 27641                           
 27642                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 27643  0057FE  0E00               	movlw	0
 27644  005800  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 27645  005802  0E00               	movlw	0
 27646  005804  6F81               	movwf	ClearBuffer@Index& (0+255),b
 27647  005806  D00A               	goto	l2206
 27648  005808                     
 27649                           ; BSR set to: 0
 27650                           ;sf.c: 130: {
 27651                           ;sf.c: 131: *(Buffer + Index) = 0;
 27652                           
 27653                           ; BSR set to: 0
 27654  005808  5181               	movf	ClearBuffer@Index& (0+255),w,b
 27655  00580A  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 27656  00580C  6ED9               	movwf	fsr2l,c
 27657  00580E  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 27658  005810  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 27659  005812  6EDA               	movwf	fsr2h,c
 27660  005814  0E00               	movlw	0
 27661  005816  6EDF               	movwf	indf2,c
 27662                           
 27663                           ; BSR set to: 0
 27664  005818  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 27665  00581A  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 27666  00581C                     l2206:
 27667                           
 27668                           ; BSR set to: 0
 27669                           
 27670                           ; BSR set to: 0
 27671  00581C  5181               	movf	ClearBuffer@Index& (0+255),w,b
 27672  00581E  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 27673  005820  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 27674  005822  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 27675  005824  A0D8               	btfss	status,0,c
 27676  005826  0012               	return	
 27677  005828  D7EF               	goto	l2207
 27678  00582A                     __end_of_ClearBuffer:
 27679                           	opt stack 0
 27680                           tosu	equ	0xFFF
 27681                           tosh	equ	0xFFE
 27682                           tosl	equ	0xFFD
 27683                           pclath	equ	0xFFA
 27684                           tblptru	equ	0xFF8
 27685                           tblptrh	equ	0xFF7
 27686                           tblptrl	equ	0xFF6
 27687                           tablat	equ	0xFF5
 27688                           prodh	equ	0xFF4
 27689                           prodl	equ	0xFF3
 27690                           intcon	equ	0xFF2
 27691                           intcon2	equ	0xFF1
 27692                           intcon3	equ	0xFF0
 27693                           indf0	equ	0xFEF
 27694                           postinc0	equ	0xFEE
 27695                           plusw0	equ	0xFEB
 27696                           fsr0h	equ	0xFEA
 27697                           fsr0l	equ	0xFE9
 27698                           wreg	equ	0xFE8
 27699                           indf1	equ	0xFE7
 27700                           postinc1	equ	0xFE6
 27701                           postdec1	equ	0xFE5
 27702                           plusw1	equ	0xFE3
 27703                           fsr1h	equ	0xFE2
 27704                           fsr1l	equ	0xFE1
 27705                           indf2	equ	0xFDF
 27706                           postinc2	equ	0xFDE
 27707                           postdec2	equ	0xFDD
 27708                           plusw2	equ	0xFDB
 27709                           fsr2h	equ	0xFDA
 27710                           fsr2l	equ	0xFD9
 27711                           status	equ	0xFD8
 27712                           
 27713 ;; *************** function _LedStateMachine *****************
 27714 ;; Defined at:
 27715 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 27716 ;; Parameters:    Size  Location     Type
 27717 ;;  Led             1    wreg     unsigned char 
 27718 ;;  LedSts          2   41[BANK0 ] PTR enum E8934
 27719 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 27720 ;;  LedOut          2   43[BANK0 ] PTR unsigned char 
 27721 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 27722 ;;  LedBlink        2   45[BANK0 ] PTR struct _LedBlinkType
 27723 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 27724 ;;  LedPulse        2   47[BANK0 ] PTR struct _LedPulseType
 27725 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 27726 ;; Auto vars:     Size  Location     Type
 27727 ;;  Led             1   51[BANK0 ] unsigned char 
 27728 ;;  LedOutSts       1   50[BANK0 ] unsigned char 
 27729 ;; Return value:  Size  Location     Type
 27730 ;;                  1    wreg      unsigned char 
 27731 ;; Registers used:
 27732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27733 ;; Tracked objects:
 27734 ;;		On entry : 0/0
 27735 ;;		On exit  : 0/0
 27736 ;;		Unchanged: 0/0
 27737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27738 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27739 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27741 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27742 ;;Total ram usage:       11 bytes
 27743 ;; Hardware stack levels used:    1
 27744 ;; Hardware stack levels required when called:   13
 27745 ;; This function calls:
 27746 ;;		_LedBlinkStateMachine
 27747 ;;		_LedPulseStateMachine
 27748 ;;		_Led_SetLedStatus
 27749 ;; This function is called by:
 27750 ;;		_Led_MainTask
 27751 ;; This function uses a non-reentrant model
 27752 ;;
 27753                           
 27754                           	psect	text125
 27755  004256                     __ptext125:
 27756                           	opt stack 0
 27757  004256                     _LedStateMachine:
 27758                           	opt stack 14
 27759                           
 27760                           ; BSR set to: 0
 27761                           ;incstack = 0
 27762                           ;LedStateMachine@Led stored from wreg
 27763  004256  0100               	movlb	0	; () banked
 27764  004258  6F93               	movwf	LedStateMachine@Led& (0+255),b
 27765                           
 27766                           ;led.c: 238: UINT8 LedOutSts = 0u;
 27767  00425A  0E00               	movlw	0
 27768  00425C  0100               	movlb	0	; () banked
 27769  00425E  6F92               	movwf	LedStateMachine@LedOutSts& (0+255),b
 27770                           
 27771                           ;led.c: 241: switch (*LedSts)
 27772  004260  D037               	goto	l2065
 27773  004262                     
 27774                           ; BSR set to: 0
 27775                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 27776                           
 27777                           ; BSR set to: 0
 27778  004262  0E00               	movlw	0
 27779  004264  6F92               	movwf	LedStateMachine@LedOutSts& (0+255),b
 27780                           
 27781                           ; BSR set to: 0
 27782                           ;led.c: 246: *LedOut = ((UINT8)(0));
 27783  004266  C08B  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 27784  00426A  C08C  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 27785  00426E  0E00               	movlw	0
 27786  004270  D007               	goto	L42
 27787  004272                     
 27788                           ; BSR set to: 0
 27789                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 27790                           
 27791                           ; BSR set to: 0
 27792  004272  0E01               	movlw	1
 27793  004274  6F92               	movwf	LedStateMachine@LedOutSts& (0+255),b
 27794                           
 27795                           ; BSR set to: 0
 27796                           ;led.c: 252: *LedOut = ((UINT8)(1));
 27797  004276  C08B  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 27798  00427A  C08C  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 27799  00427E  0E01               	movlw	1
 27800  004280                     L42:
 27801  004280  6EDF               	movwf	indf2,c
 27802                           
 27803                           ;led.c: 253: break;
 27804  004282  D03A               	goto	l2067
 27805  004284                     
 27806                           ; BSR set to: 0
 27807                           ;led.c: 257: if (*LedOut == 1)
 27808                           
 27809                           ; BSR set to: 0
 27810  004284  C08B  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 27811  004288  C08C  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 27812  00428C  04DE               	decf	postinc2,w,c
 27813  00428E  A4D8               	btfss	status,2,c
 27814  004290  D006               	goto	l2070
 27815                           
 27816                           ; BSR set to: 0
 27817                           ;led.c: 258: {
 27818                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 27819  004292  0E00               	movlw	0
 27820  004294  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 27821  004296  5193               	movf	LedStateMachine@Led& (0+255),w,b
 27822  004298  ECA9  F02C         	call	_Led_SetLedStatus
 27823                           
 27824                           ;led.c: 261: }
 27825  00429C  D02D               	goto	l2067
 27826  00429E                     l2070:
 27827                           
 27828                           ;led.c: 262: else
 27829                           ;led.c: 263: {
 27830                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 27831  00429E  0E01               	movlw	1
 27832  0042A0  0100               	movlb	0	; () banked
 27833  0042A2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 27834  0042A4  5193               	movf	LedStateMachine@Led& (0+255),w,b
 27835  0042A6  ECA9  F02C         	call	_Led_SetLedStatus
 27836                           
 27837                           ;led.c: 266: }
 27838                           ;led.c: 267: break;
 27839  0042AA  D026               	goto	l2067
 27840  0042AC                     
 27841                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 27842  0042AC  C08D  F084         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 27843  0042B0  C08E  F085         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 27844  0042B4  EC55  F011         	call	_LedBlinkStateMachine	;wreg free
 27845  0042B8  D008               	goto	L43
 27846  0042BA                     
 27847                           ; BSR set to: 0
 27848                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 27849                           
 27850                           ; BSR set to: 0
 27851  0042BA  C08F  F084         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 27852  0042BE  C090  F085         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 27853  0042C2  C093  F086         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 27854  0042C6  EC1D  F018         	call	_LedPulseStateMachine	;wreg free
 27855  0042CA                     L43:
 27856  0042CA  0100               	movlb	0	; () banked
 27857  0042CC  6F92               	movwf	LedStateMachine@LedOutSts& (0+255),b
 27858                           
 27859                           ; BSR set to: 0
 27860                           ;led.c: 281: }
 27861                           
 27862                           ; BSR set to: 0
 27863                           ;led.c: 280: break;
 27864                           
 27865                           ;led.c: 279: default:
 27866                           
 27867                           ;led.c: 277: break;
 27868  0042CE  D014               	goto	l2067
 27869  0042D0                     l2065:
 27870                           
 27871                           ; BSR set to: 0
 27872                           
 27873                           ; BSR set to: 0
 27874  0042D0  C089  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 27875  0042D4  C08A  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 27876  0042D8  50DF               	movf	indf2,w,c
 27877                           
 27878                           ; Switch size 1, requested type "space"
 27879                           ; Number of cases is 5, Range of values is 0 to 4
 27880                           ; switch strategies available:
 27881                           ; Name         Instructions Cycles
 27882                           ; simple_byte           16     9 (average)
 27883                           ;	Chosen strategy is simple_byte
 27884  0042DA  0A00               	xorlw	0	; case 0
 27885  0042DC  B4D8               	btfsc	status,2,c
 27886  0042DE  D7C1               	goto	l2066
 27887  0042E0  0A01               	xorlw	1	; case 1
 27888  0042E2  B4D8               	btfsc	status,2,c
 27889  0042E4  D7C6               	goto	l2068
 27890  0042E6  0A03               	xorlw	3	; case 2
 27891  0042E8  B4D8               	btfsc	status,2,c
 27892  0042EA  D7CC               	goto	l2069
 27893  0042EC  0A01               	xorlw	1	; case 3
 27894  0042EE  B4D8               	btfsc	status,2,c
 27895  0042F0  D7DD               	goto	l2072
 27896  0042F2  0A07               	xorlw	7	; case 4
 27897  0042F4  B4D8               	btfsc	status,2,c
 27898  0042F6  D7E1               	goto	l2073
 27899  0042F8                     l2067:
 27900                           
 27901                           ;led.c: 283: return LedOutSts;
 27902                           
 27903                           ; BSR set to: 0
 27904  0042F8  0100               	movlb	0	; () banked
 27905  0042FA  5192               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 27906  0042FC  0012               	return	
 27907  0042FE                     __end_of_LedStateMachine:
 27908                           	opt stack 0
 27909                           tosu	equ	0xFFF
 27910                           tosh	equ	0xFFE
 27911                           tosl	equ	0xFFD
 27912                           pclath	equ	0xFFA
 27913                           tblptru	equ	0xFF8
 27914                           tblptrh	equ	0xFF7
 27915                           tblptrl	equ	0xFF6
 27916                           tablat	equ	0xFF5
 27917                           prodh	equ	0xFF4
 27918                           prodl	equ	0xFF3
 27919                           intcon	equ	0xFF2
 27920                           intcon2	equ	0xFF1
 27921                           intcon3	equ	0xFF0
 27922                           indf0	equ	0xFEF
 27923                           postinc0	equ	0xFEE
 27924                           plusw0	equ	0xFEB
 27925                           fsr0h	equ	0xFEA
 27926                           fsr0l	equ	0xFE9
 27927                           wreg	equ	0xFE8
 27928                           indf1	equ	0xFE7
 27929                           postinc1	equ	0xFE6
 27930                           postdec1	equ	0xFE5
 27931                           plusw1	equ	0xFE3
 27932                           fsr1h	equ	0xFE2
 27933                           fsr1l	equ	0xFE1
 27934                           indf2	equ	0xFDF
 27935                           postinc2	equ	0xFDE
 27936                           postdec2	equ	0xFDD
 27937                           plusw2	equ	0xFDB
 27938                           fsr2h	equ	0xFDA
 27939                           fsr2l	equ	0xFD9
 27940                           status	equ	0xFD8
 27941                           
 27942 ;; *************** function _LedPulseStateMachine *****************
 27943 ;; Defined at:
 27944 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 27945 ;; Parameters:    Size  Location     Type
 27946 ;;  LedPulse        2   36[BANK0 ] PTR struct _LedPulseType
 27947 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 27948 ;;  Led             1   38[BANK0 ] unsigned char 
 27949 ;; Auto vars:     Size  Location     Type
 27950 ;;		None
 27951 ;; Return value:  Size  Location     Type
 27952 ;;                  1    wreg      unsigned char 
 27953 ;; Registers used:
 27954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27955 ;; Tracked objects:
 27956 ;;		On entry : 0/0
 27957 ;;		On exit  : 0/0
 27958 ;;		Unchanged: 0/0
 27959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27960 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27962 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27963 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27964 ;;Total ram usage:        5 bytes
 27965 ;; Hardware stack levels used:    1
 27966 ;; Hardware stack levels required when called:   12
 27967 ;; This function calls:
 27968 ;;		_Led_SetLedStatus
 27969 ;;		___lwdiv
 27970 ;; This function is called by:
 27971 ;;		_LedStateMachine
 27972 ;; This function uses a non-reentrant model
 27973 ;;
 27974                           
 27975                           	psect	text126
 27976  00303A                     __ptext126:
 27977                           	opt stack 0
 27978  00303A                     _LedPulseStateMachine:
 27979                           	opt stack 14
 27980                           
 27981                           ;led.c: 185: switch (LedPulse->LedPulseState)
 27982                           
 27983                           ; BSR set to: 0
 27984                           ;incstack = 0
 27985  00303A  D05C               	goto	l2055
 27986  00303C                     
 27987                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 27988  00303C  0100               	movlb	0	; () banked
 27989  00303E  EE20 F001          	lfsr	2,1
 27990  003042  5184               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 27991  003044  26D9               	addwf	fsr2l,f,c
 27992  003046  5185               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 27993  003048  22DA               	addwfc	fsr2h,f,c
 27994  00304A  0E01               	movlw	1
 27995  00304C  6EDF               	movwf	indf2,c
 27996                           
 27997                           ; BSR set to: 0
 27998                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 27999  00304E  C084  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28000  003052  C085  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28001  003056  0E01               	movlw	1
 28002  003058  D036               	goto	L44
 28003  00305A                     
 28004                           ;led.c: 196: LedPulse->LedPulseCounter++;
 28005                           
 28006                           ; BSR set to: 0
 28007  00305A  0100               	movlb	0	; () banked
 28008  00305C  EE20 F002          	lfsr	2,2
 28009  003060  5184               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28010  003062  26D9               	addwf	fsr2l,f,c
 28011  003064  5185               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28012  003066  22DA               	addwfc	fsr2h,f,c
 28013  003068  2ADE               	incf	postinc2,f,c
 28014  00306A  0E00               	movlw	0
 28015  00306C  22DD               	addwfc	postdec2,f,c
 28016                           
 28017                           ; BSR set to: 0
 28018                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 28019  00306E  EE20 F004          	lfsr	2,4
 28020  003072  5184               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28021  003074  26D9               	addwf	fsr2l,f,c
 28022  003076  5185               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28023  003078  22DA               	addwfc	fsr2h,f,c
 28024  00307A  CFDE F07D          	movff	postinc2,___lwdiv@dividend
 28025  00307E  CFDD F07E          	movff	postdec2,___lwdiv@dividend+1
 28026  003082  0E00               	movlw	0
 28027  003084  6F80               	movwf	(___lwdiv@divisor+1)& (0+255),b
 28028  003086  0E32               	movlw	50
 28029  003088  6F7F               	movwf	___lwdiv@divisor& (0+255),b
 28030  00308A  ECC8  F028         	call	___lwdiv	;wreg free
 28031  00308E  0100               	movlb	0	; () banked
 28032  003090  EE20 F002          	lfsr	2,2
 28033  003094  5184               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28034  003096  26D9               	addwf	fsr2l,f,c
 28035  003098  5185               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28036  00309A  22DA               	addwfc	fsr2h,f,c
 28037  00309C  517D               	movf	?___lwdiv& (0+255),w,b
 28038  00309E  5CDE               	subwf	postinc2,w,c
 28039  0030A0  517E               	movf	(?___lwdiv+1)& (0+255),w,b
 28040  0030A2  58DE               	subwfb	postinc2,w,c
 28041  0030A4  A0D8               	btfss	status,0,c
 28042  0030A6  D034               	goto	l2057
 28043                           
 28044                           ; BSR set to: 0
 28045                           ;led.c: 199: {
 28046                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 28047  0030A8  EE20 F002          	lfsr	2,2
 28048  0030AC  5184               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28049  0030AE  26D9               	addwf	fsr2l,f,c
 28050  0030B0  5185               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28051  0030B2  22DA               	addwfc	fsr2h,f,c
 28052  0030B4  0E00               	movlw	0
 28053  0030B6  6EDE               	movwf	postinc2,c
 28054  0030B8  0E00               	movlw	0
 28055  0030BA  6EDD               	movwf	postdec2,c
 28056                           
 28057                           ; BSR set to: 0
 28058                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 28059  0030BC  C084  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28060  0030C0  C085  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28061  0030C4  0E02               	movlw	2
 28062  0030C6                     L44:
 28063  0030C6  6EDF               	movwf	indf2,c
 28064                           
 28065                           ; BSR set to: 0
 28066                           ;led.c: 204: }
 28067                           ;led.c: 205: break;
 28068  0030C8  D023               	goto	l2057
 28069  0030CA                     
 28070                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 28071                           
 28072                           ; BSR set to: 0
 28073  0030CA  0100               	movlb	0	; () banked
 28074  0030CC  EE20 F001          	lfsr	2,1
 28075  0030D0  5184               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28076  0030D2  26D9               	addwf	fsr2l,f,c
 28077  0030D4  5185               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28078  0030D6  22DA               	addwfc	fsr2h,f,c
 28079  0030D8  0E00               	movlw	0
 28080  0030DA  6EDF               	movwf	indf2,c
 28081                           
 28082                           ; BSR set to: 0
 28083                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 28084  0030DC  C084  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28085  0030E0  C085  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28086  0030E4  0E00               	movlw	0
 28087  0030E6  6EDF               	movwf	indf2,c
 28088                           
 28089                           ; BSR set to: 0
 28090                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 28091  0030E8  0E00               	movlw	0
 28092  0030EA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28093  0030EC  5186               	movf	LedPulseStateMachine@Led& (0+255),w,b
 28094  0030EE  ECA9  F02C         	call	_Led_SetLedStatus
 28095                           
 28096                           ;led.c: 218: }
 28097                           
 28098                           ;led.c: 217: break;
 28099                           
 28100                           ;led.c: 216: default:
 28101                           
 28102                           ;led.c: 214: break;
 28103  0030F2  D00E               	goto	l2057
 28104  0030F4                     l2055:
 28105  0030F4  C084  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28106  0030F8  C085  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28107  0030FC  50DF               	movf	indf2,w,c
 28108                           
 28109                           ; Switch size 1, requested type "space"
 28110                           ; Number of cases is 3, Range of values is 0 to 2
 28111                           ; switch strategies available:
 28112                           ; Name         Instructions Cycles
 28113                           ; simple_byte           10     6 (average)
 28114                           ;	Chosen strategy is simple_byte
 28115  0030FE  0A00               	xorlw	0	; case 0
 28116  003100  B4D8               	btfsc	status,2,c
 28117  003102  D79C               	goto	l2056
 28118  003104  0A01               	xorlw	1	; case 1
 28119  003106  B4D8               	btfsc	status,2,c
 28120  003108  D7A8               	goto	l2058
 28121  00310A  0A03               	xorlw	3	; case 2
 28122  00310C  B4D8               	btfsc	status,2,c
 28123  00310E  D7DD               	goto	l2060
 28124  003110                     l2057:
 28125                           
 28126                           ;led.c: 221: return (LedPulse->LedOutState);
 28127  003110  0100               	movlb	0	; () banked
 28128  003112  EE20 F001          	lfsr	2,1
 28129  003116  5184               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28130  003118  26D9               	addwf	fsr2l,f,c
 28131  00311A  5185               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28132  00311C  22DA               	addwfc	fsr2h,f,c
 28133  00311E  50DF               	movf	indf2,w,c
 28134  003120  0012               	return	
 28135  003122                     __end_of_LedPulseStateMachine:
 28136                           	opt stack 0
 28137                           tosu	equ	0xFFF
 28138                           tosh	equ	0xFFE
 28139                           tosl	equ	0xFFD
 28140                           pclath	equ	0xFFA
 28141                           tblptru	equ	0xFF8
 28142                           tblptrh	equ	0xFF7
 28143                           tblptrl	equ	0xFF6
 28144                           tablat	equ	0xFF5
 28145                           prodh	equ	0xFF4
 28146                           prodl	equ	0xFF3
 28147                           intcon	equ	0xFF2
 28148                           intcon2	equ	0xFF1
 28149                           intcon3	equ	0xFF0
 28150                           indf0	equ	0xFEF
 28151                           postinc0	equ	0xFEE
 28152                           plusw0	equ	0xFEB
 28153                           fsr0h	equ	0xFEA
 28154                           fsr0l	equ	0xFE9
 28155                           wreg	equ	0xFE8
 28156                           indf1	equ	0xFE7
 28157                           postinc1	equ	0xFE6
 28158                           postdec1	equ	0xFE5
 28159                           plusw1	equ	0xFE3
 28160                           fsr1h	equ	0xFE2
 28161                           fsr1l	equ	0xFE1
 28162                           indf2	equ	0xFDF
 28163                           postinc2	equ	0xFDE
 28164                           postdec2	equ	0xFDD
 28165                           plusw2	equ	0xFDB
 28166                           fsr2h	equ	0xFDA
 28167                           fsr2l	equ	0xFD9
 28168                           status	equ	0xFD8
 28169                           
 28170 ;; *************** function _Led_SetLedStatus *****************
 28171 ;; Defined at:
 28172 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28173 ;; Parameters:    Size  Location     Type
 28174 ;;  Led             1    wreg     unsigned char 
 28175 ;;  LedSts          1   29[BANK0 ] enum E8934
 28176 ;; Auto vars:     Size  Location     Type
 28177 ;;  Led             1   30[BANK0 ] unsigned char 
 28178 ;; Return value:  Size  Location     Type
 28179 ;;                  1    wreg      void 
 28180 ;; Registers used:
 28181 ;;		wreg, status,2, status,0
 28182 ;; Tracked objects:
 28183 ;;		On entry : 0/0
 28184 ;;		On exit  : 0/0
 28185 ;;		Unchanged: 0/0
 28186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28187 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28188 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28190 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28191 ;;Total ram usage:        2 bytes
 28192 ;; Hardware stack levels used:    1
 28193 ;; Hardware stack levels required when called:   11
 28194 ;; This function calls:
 28195 ;;		Nothing
 28196 ;; This function is called by:
 28197 ;;		_LedPulseStateMachine
 28198 ;;		_LedStateMachine
 28199 ;;		_MyApp_Task
 28200 ;; This function uses a non-reentrant model
 28201 ;;
 28202                           
 28203                           	psect	text127
 28204  005952                     __ptext127:
 28205                           	opt stack 0
 28206  005952                     _Led_SetLedStatus:
 28207                           	opt stack 16
 28208                           
 28209                           ; BSR set to: 0
 28210                           ;incstack = 0
 28211                           ;Led_SetLedStatus@Led stored from wreg
 28212  005952  0100               	movlb	0	; () banked
 28213  005954  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 28214                           
 28215                           ;led.c: 341: switch (Led)
 28216  005956  D009               	goto	l2086
 28217  005958                     l2087:
 28218                           
 28219                           ; BSR set to: 0
 28220                           ;led.c: 344: Led1Sts = LedSts;
 28221  005958  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 28222                           
 28223                           ;led.c: 345: break;
 28224  00595C  0012               	return	
 28225  00595E                     l2089:
 28226                           
 28227                           ; BSR set to: 0
 28228                           ;led.c: 348: Led2Sts = LedSts;
 28229  00595E  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 28230                           
 28231                           ;led.c: 349: break;
 28232  005962  0012               	return	
 28233  005964                     l2090:
 28234                           
 28235                           ; BSR set to: 0
 28236                           ;led.c: 352: Led3Sts = LedSts;
 28237  005964  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 28238                           
 28239                           ; BSR set to: 0
 28240                           ;led.c: 357: }
 28241                           
 28242                           ; BSR set to: 0
 28243                           ;led.c: 356: break;
 28244                           
 28245                           ;led.c: 355: default:
 28246                           
 28247                           ;led.c: 353: break;
 28248  005968  0012               	return	
 28249  00596A                     l2086:
 28250                           
 28251                           ; BSR set to: 0
 28252  00596A  0100               	movlb	0	; () banked
 28253  00596C  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 28254                           
 28255                           ; Switch size 1, requested type "space"
 28256                           ; Number of cases is 3, Range of values is 1 to 3
 28257                           ; switch strategies available:
 28258                           ; Name         Instructions Cycles
 28259                           ; simple_byte           10     6 (average)
 28260                           ;	Chosen strategy is simple_byte
 28261  00596E  0A01               	xorlw	1	; case 1
 28262  005970  B4D8               	btfsc	status,2,c
 28263  005972  D7F2               	goto	l2087
 28264  005974  0A03               	xorlw	3	; case 2
 28265  005976  B4D8               	btfsc	status,2,c
 28266  005978  D7F2               	goto	l2089
 28267  00597A  0A01               	xorlw	1	; case 3
 28268  00597C  A4D8               	btfss	status,2,c
 28269  00597E  0012               	return	
 28270  005980  D7F1               	goto	l2090
 28271  005982                     __end_of_Led_SetLedStatus:
 28272                           	opt stack 0
 28273                           tosu	equ	0xFFF
 28274                           tosh	equ	0xFFE
 28275                           tosl	equ	0xFFD
 28276                           pclath	equ	0xFFA
 28277                           tblptru	equ	0xFF8
 28278                           tblptrh	equ	0xFF7
 28279                           tblptrl	equ	0xFF6
 28280                           tablat	equ	0xFF5
 28281                           prodh	equ	0xFF4
 28282                           prodl	equ	0xFF3
 28283                           intcon	equ	0xFF2
 28284                           intcon2	equ	0xFF1
 28285                           intcon3	equ	0xFF0
 28286                           indf0	equ	0xFEF
 28287                           postinc0	equ	0xFEE
 28288                           plusw0	equ	0xFEB
 28289                           fsr0h	equ	0xFEA
 28290                           fsr0l	equ	0xFE9
 28291                           wreg	equ	0xFE8
 28292                           indf1	equ	0xFE7
 28293                           postinc1	equ	0xFE6
 28294                           postdec1	equ	0xFE5
 28295                           plusw1	equ	0xFE3
 28296                           fsr1h	equ	0xFE2
 28297                           fsr1l	equ	0xFE1
 28298                           indf2	equ	0xFDF
 28299                           postinc2	equ	0xFDE
 28300                           postdec2	equ	0xFDD
 28301                           plusw2	equ	0xFDB
 28302                           fsr2h	equ	0xFDA
 28303                           fsr2l	equ	0xFD9
 28304                           status	equ	0xFD8
 28305                           
 28306 ;; *************** function _LedBlinkStateMachine *****************
 28307 ;; Defined at:
 28308 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28309 ;; Parameters:    Size  Location     Type
 28310 ;;  LedBlink        2   36[BANK0 ] PTR struct _LedBlinkType
 28311 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 28312 ;; Auto vars:     Size  Location     Type
 28313 ;;		None
 28314 ;; Return value:  Size  Location     Type
 28315 ;;                  1    wreg      unsigned char 
 28316 ;; Registers used:
 28317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28318 ;; Tracked objects:
 28319 ;;		On entry : 0/0
 28320 ;;		On exit  : 0/0
 28321 ;;		Unchanged: 0/0
 28322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28323 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28325 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28326 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28327 ;;Total ram usage:        4 bytes
 28328 ;; Hardware stack levels used:    1
 28329 ;; Hardware stack levels required when called:   12
 28330 ;; This function calls:
 28331 ;;		___lwdiv
 28332 ;; This function is called by:
 28333 ;;		_LedStateMachine
 28334 ;; This function uses a non-reentrant model
 28335 ;;
 28336                           
 28337                           	psect	text128
 28338  0022AA                     __ptext128:
 28339                           	opt stack 0
 28340  0022AA                     _LedBlinkStateMachine:
 28341                           	opt stack 14
 28342                           
 28343                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 28344                           
 28345                           ; BSR set to: 0
 28346                           ;incstack = 0
 28347  0022AA  D08F               	goto	l2042
 28348  0022AC                     
 28349                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 28350  0022AC  0100               	movlb	0	; () banked
 28351  0022AE  EE20 F008          	lfsr	2,8
 28352  0022B2  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28353  0022B4  26D9               	addwf	fsr2l,f,c
 28354  0022B6  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28355  0022B8  22DA               	addwfc	fsr2h,f,c
 28356  0022BA  EE10 F001          	lfsr	1,1
 28357  0022BE  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28358  0022C0  26E1               	addwf	fsr1l,f,c
 28359  0022C2  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28360  0022C4  22E2               	addwfc	fsr1h,f,c
 28361  0022C6  CFDF FFE7          	movff	indf2,indf1
 28362                           
 28363                           ; BSR set to: 0
 28364                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 28365  0022CA  C084  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 28366  0022CE  C085  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 28367  0022D2  D040               	goto	L45
 28368  0022D4                     
 28369                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 28370                           
 28371                           ; BSR set to: 0
 28372  0022D4  0100               	movlb	0	; () banked
 28373  0022D6  EE20 F002          	lfsr	2,2
 28374  0022DA  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28375  0022DC  26D9               	addwf	fsr2l,f,c
 28376  0022DE  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28377  0022E0  22DA               	addwfc	fsr2h,f,c
 28378  0022E2  2ADE               	incf	postinc2,f,c
 28379  0022E4  0E00               	movlw	0
 28380  0022E6  22DD               	addwfc	postdec2,f,c
 28381                           
 28382                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 28383  0022E8  EE20 F001          	lfsr	2,1
 28384  0022EC  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28385  0022EE  26D9               	addwf	fsr2l,f,c
 28386  0022F0  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28387  0022F2  22DA               	addwfc	fsr2h,f,c
 28388  0022F4  50DF               	movf	indf2,w,c
 28389  0022F6  A4D8               	btfss	status,2,c
 28390  0022F8  D02F               	goto	l2046
 28391                           
 28392                           ; BSR set to: 0
 28393                           ;led.c: 142: {
 28394                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 28395  0022FA  EE20 F006          	lfsr	2,6
 28396  0022FE  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28397  002300  26D9               	addwf	fsr2l,f,c
 28398  002302  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28399  002304  22DA               	addwfc	fsr2h,f,c
 28400  002306  CFDE F07D          	movff	postinc2,___lwdiv@dividend
 28401  00230A  CFDD F07E          	movff	postdec2,___lwdiv@dividend+1
 28402  00230E  0E00               	movlw	0
 28403  002310  6F80               	movwf	(___lwdiv@divisor+1)& (0+255),b
 28404  002312  0E32               	movlw	50
 28405  002314  6F7F               	movwf	___lwdiv@divisor& (0+255),b
 28406  002316  ECC8  F028         	call	___lwdiv	;wreg free
 28407  00231A  0100               	movlb	0	; () banked
 28408  00231C  EE20 F002          	lfsr	2,2
 28409  002320  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28410  002322  26D9               	addwf	fsr2l,f,c
 28411  002324  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28412  002326  22DA               	addwfc	fsr2h,f,c
 28413  002328  517D               	movf	?___lwdiv& (0+255),w,b
 28414  00232A  5CDE               	subwf	postinc2,w,c
 28415  00232C  517E               	movf	(?___lwdiv+1)& (0+255),w,b
 28416  00232E  58DE               	subwfb	postinc2,w,c
 28417  002330  A0D8               	btfss	status,0,c
 28418  002332  D056               	goto	l2044
 28419                           
 28420                           ; BSR set to: 0
 28421                           ;led.c: 145: {
 28422                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 28423  002334  EE20 F002          	lfsr	2,2
 28424  002338  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28425  00233A  26D9               	addwf	fsr2l,f,c
 28426  00233C  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28427  00233E  22DA               	addwfc	fsr2h,f,c
 28428  002340  0E00               	movlw	0
 28429  002342  6EDE               	movwf	postinc2,c
 28430  002344  0E00               	movlw	0
 28431  002346  6EDD               	movwf	postdec2,c
 28432                           
 28433                           ;led.c: 149: LedBlink->LedOutState = OnState;
 28434  002348  EE20 F001          	lfsr	2,1
 28435  00234C  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28436  00234E  26D9               	addwf	fsr2l,f,c
 28437  002350  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28438  002352  22DA               	addwfc	fsr2h,f,c
 28439  002354                     L45:
 28440  002354  0E01               	movlw	1
 28441  002356  D037               	goto	L46
 28442  002358                     l2046:
 28443                           
 28444                           ; BSR set to: 0
 28445                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 28446                           
 28447                           ; BSR set to: 0
 28448  002358  EE20 F001          	lfsr	2,1
 28449  00235C  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28450  00235E  26D9               	addwf	fsr2l,f,c
 28451  002360  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28452  002362  22DA               	addwfc	fsr2h,f,c
 28453  002364  04DE               	decf	postinc2,w,c
 28454  002366  A4D8               	btfss	status,2,c
 28455  002368  D03B               	goto	l2044
 28456                           
 28457                           ; BSR set to: 0
 28458                           ;led.c: 153: {
 28459                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 28460  00236A  EE20 F004          	lfsr	2,4
 28461  00236E  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28462  002370  26D9               	addwf	fsr2l,f,c
 28463  002372  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28464  002374  22DA               	addwfc	fsr2h,f,c
 28465  002376  CFDE F07D          	movff	postinc2,___lwdiv@dividend
 28466  00237A  CFDD F07E          	movff	postdec2,___lwdiv@dividend+1
 28467  00237E  0E00               	movlw	0
 28468  002380  6F80               	movwf	(___lwdiv@divisor+1)& (0+255),b
 28469  002382  0E32               	movlw	50
 28470  002384  6F7F               	movwf	___lwdiv@divisor& (0+255),b
 28471  002386  ECC8  F028         	call	___lwdiv	;wreg free
 28472  00238A  0100               	movlb	0	; () banked
 28473  00238C  EE20 F002          	lfsr	2,2
 28474  002390  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28475  002392  26D9               	addwf	fsr2l,f,c
 28476  002394  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28477  002396  22DA               	addwfc	fsr2h,f,c
 28478  002398  517D               	movf	?___lwdiv& (0+255),w,b
 28479  00239A  5CDE               	subwf	postinc2,w,c
 28480  00239C  517E               	movf	(?___lwdiv+1)& (0+255),w,b
 28481  00239E  58DE               	subwfb	postinc2,w,c
 28482  0023A0  A0D8               	btfss	status,0,c
 28483  0023A2  D01E               	goto	l2044
 28484                           
 28485                           ; BSR set to: 0
 28486                           ;led.c: 156: {
 28487                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 28488  0023A4  EE20 F002          	lfsr	2,2
 28489  0023A8  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28490  0023AA  26D9               	addwf	fsr2l,f,c
 28491  0023AC  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28492  0023AE  22DA               	addwfc	fsr2h,f,c
 28493  0023B0  0E00               	movlw	0
 28494  0023B2  6EDE               	movwf	postinc2,c
 28495  0023B4  0E00               	movlw	0
 28496  0023B6  6EDD               	movwf	postdec2,c
 28497                           
 28498                           ;led.c: 160: LedBlink->LedOutState = OffState;
 28499  0023B8  EE20 F001          	lfsr	2,1
 28500  0023BC  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28501  0023BE  26D9               	addwf	fsr2l,f,c
 28502  0023C0  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28503  0023C2  22DA               	addwfc	fsr2h,f,c
 28504  0023C4  0E00               	movlw	0
 28505  0023C6                     L46:
 28506  0023C6  6EDF               	movwf	indf2,c
 28507                           
 28508                           ; BSR set to: 0
 28509                           ;led.c: 167: }
 28510                           
 28511                           ; BSR set to: 0
 28512                           ;led.c: 166: break;
 28513                           
 28514                           ;led.c: 165: default:
 28515                           
 28516                           ; BSR set to: 0
 28517                           ;led.c: 161: }
 28518                           ;led.c: 162: }
 28519                           ;led.c: 163: break;
 28520                           
 28521                           ; BSR set to: 0
 28522                           
 28523                           ; BSR set to: 0
 28524  0023C8  D00B               	goto	l2044
 28525  0023CA                     l2042:
 28526                           
 28527                           ; BSR set to: 0
 28528  0023CA  C084  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 28529  0023CE  C085  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 28530  0023D2  50DF               	movf	indf2,w,c
 28531                           
 28532                           ; Switch size 1, requested type "space"
 28533                           ; Number of cases is 2, Range of values is 0 to 1
 28534                           ; switch strategies available:
 28535                           ; Name         Instructions Cycles
 28536                           ; simple_byte            7     4 (average)
 28537                           ;	Chosen strategy is simple_byte
 28538  0023D4  0A00               	xorlw	0	; case 0
 28539  0023D6  B4D8               	btfsc	status,2,c
 28540  0023D8  D769               	goto	l2043
 28541  0023DA  0A01               	xorlw	1	; case 1
 28542  0023DC  B4D8               	btfsc	status,2,c
 28543  0023DE  D77A               	goto	l2045
 28544  0023E0                     l2044:
 28545                           
 28546                           ;led.c: 170: return (LedBlink->LedOutState);
 28547  0023E0  0100               	movlb	0	; () banked
 28548  0023E2  EE20 F001          	lfsr	2,1
 28549  0023E6  5184               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28550  0023E8  26D9               	addwf	fsr2l,f,c
 28551  0023EA  5185               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28552  0023EC  22DA               	addwfc	fsr2h,f,c
 28553  0023EE  50DF               	movf	indf2,w,c
 28554  0023F0  0012               	return	
 28555  0023F2                     __end_of_LedBlinkStateMachine:
 28556                           	opt stack 0
 28557                           tosu	equ	0xFFF
 28558                           tosh	equ	0xFFE
 28559                           tosl	equ	0xFFD
 28560                           pclath	equ	0xFFA
 28561                           tblptru	equ	0xFF8
 28562                           tblptrh	equ	0xFF7
 28563                           tblptrl	equ	0xFF6
 28564                           tablat	equ	0xFF5
 28565                           prodh	equ	0xFF4
 28566                           prodl	equ	0xFF3
 28567                           intcon	equ	0xFF2
 28568                           intcon2	equ	0xFF1
 28569                           intcon3	equ	0xFF0
 28570                           indf0	equ	0xFEF
 28571                           postinc0	equ	0xFEE
 28572                           plusw0	equ	0xFEB
 28573                           fsr0h	equ	0xFEA
 28574                           fsr0l	equ	0xFE9
 28575                           wreg	equ	0xFE8
 28576                           indf1	equ	0xFE7
 28577                           postinc1	equ	0xFE6
 28578                           postdec1	equ	0xFE5
 28579                           plusw1	equ	0xFE3
 28580                           fsr1h	equ	0xFE2
 28581                           fsr1l	equ	0xFE1
 28582                           indf2	equ	0xFDF
 28583                           postinc2	equ	0xFDE
 28584                           postdec2	equ	0xFDD
 28585                           plusw2	equ	0xFDB
 28586                           fsr2h	equ	0xFDA
 28587                           fsr2l	equ	0xFD9
 28588                           status	equ	0xFD8
 28589                           
 28590 ;; *************** function ___lwdiv *****************
 28591 ;; Defined at:
 28592 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 28593 ;; Parameters:    Size  Location     Type
 28594 ;;  dividend        2   29[BANK0 ] unsigned int 
 28595 ;;  divisor         2   31[BANK0 ] unsigned int 
 28596 ;; Auto vars:     Size  Location     Type
 28597 ;;  quotient        2   34[BANK0 ] unsigned int 
 28598 ;;  counter         1   33[BANK0 ] unsigned char 
 28599 ;; Return value:  Size  Location     Type
 28600 ;;                  2   29[BANK0 ] unsigned int 
 28601 ;; Registers used:
 28602 ;;		wreg, status,2, status,0
 28603 ;; Tracked objects:
 28604 ;;		On entry : 0/0
 28605 ;;		On exit  : 0/0
 28606 ;;		Unchanged: 0/0
 28607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28608 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28609 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28611 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28612 ;;Total ram usage:        7 bytes
 28613 ;; Hardware stack levels used:    1
 28614 ;; Hardware stack levels required when called:   11
 28615 ;; This function calls:
 28616 ;;		Nothing
 28617 ;; This function is called by:
 28618 ;;		_LedBlinkStateMachine
 28619 ;;		_LedPulseStateMachine
 28620 ;;		_utoa
 28621 ;; This function uses a non-reentrant model
 28622 ;;
 28623                           
 28624                           	psect	text129
 28625  005190                     __ptext129:
 28626                           	opt stack 0
 28627  005190                     ___lwdiv:
 28628                           	opt stack 14
 28629                           
 28630                           ; BSR set to: 0
 28631                           ;incstack = 0
 28632  005190  0E00               	movlw	0
 28633  005192  0100               	movlb	0	; () banked
 28634  005194  6F83               	movwf	(___lwdiv@quotient+1)& (0+255),b
 28635  005196  0E00               	movlw	0
 28636  005198  6F82               	movwf	___lwdiv@quotient& (0+255),b
 28637                           
 28638                           ; BSR set to: 0
 28639  00519A  517F               	movf	___lwdiv@divisor& (0+255),w,b
 28640  00519C  1180               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 28641  00519E  B4D8               	btfsc	status,2,c
 28642  0051A0  D01C               	goto	l2997
 28643                           
 28644                           ; BSR set to: 0
 28645  0051A2  0E01               	movlw	1
 28646  0051A4  6F81               	movwf	___lwdiv@counter& (0+255),b
 28647  0051A6  D004               	goto	l2992
 28648  0051A8                     
 28649                           ; BSR set to: 0
 28650                           
 28651                           ; BSR set to: 0
 28652  0051A8  90D8               	bcf	status,0,c
 28653  0051AA  377F               	rlcf	___lwdiv@divisor& (0+255),f,b
 28654  0051AC  3780               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 28655  0051AE  2B81               	incf	___lwdiv@counter& (0+255),f,b
 28656  0051B0                     l2992:
 28657                           
 28658                           ; BSR set to: 0
 28659                           
 28660                           ; BSR set to: 0
 28661  0051B0  AF80               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 28662  0051B2  D7FA               	goto	l2993
 28663  0051B4                     u10190:
 28664                           
 28665                           ; BSR set to: 0
 28666                           
 28667                           ; BSR set to: 0
 28668                           
 28669                           ; BSR set to: 0
 28670  0051B4  90D8               	bcf	status,0,c
 28671  0051B6  3782               	rlcf	___lwdiv@quotient& (0+255),f,b
 28672  0051B8  3783               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 28673                           
 28674                           ; BSR set to: 0
 28675  0051BA  517F               	movf	___lwdiv@divisor& (0+255),w,b
 28676  0051BC  5D7D               	subwf	___lwdiv@dividend& (0+255),w,b
 28677  0051BE  5180               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 28678  0051C0  597E               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 28679  0051C2  A0D8               	btfss	status,0,c
 28680  0051C4  D005               	goto	l2996
 28681                           
 28682                           ; BSR set to: 0
 28683  0051C6  517F               	movf	___lwdiv@divisor& (0+255),w,b
 28684  0051C8  5F7D               	subwf	___lwdiv@dividend& (0+255),f,b
 28685  0051CA  5180               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 28686  0051CC  5B7E               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 28687                           
 28688                           ; BSR set to: 0
 28689  0051CE  8182               	bsf	___lwdiv@quotient& (0+255),0,b
 28690  0051D0                     l2996:
 28691                           
 28692                           ; BSR set to: 0
 28693                           
 28694                           ; BSR set to: 0
 28695  0051D0  90D8               	bcf	status,0,c
 28696  0051D2  3380               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 28697  0051D4  337F               	rrcf	___lwdiv@divisor& (0+255),f,b
 28698                           
 28699                           ; BSR set to: 0
 28700  0051D6  2F81               	decfsz	___lwdiv@counter& (0+255),f,b
 28701  0051D8  D7ED               	goto	u10190
 28702  0051DA                     l2997:
 28703                           
 28704                           ; BSR set to: 0
 28705                           
 28706                           ; BSR set to: 0
 28707  0051DA  C082  F07D         	movff	___lwdiv@quotient,?___lwdiv
 28708  0051DE  C083  F07E         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28709                           
 28710                           ; BSR set to: 0
 28711  0051E2  0012               	return		;funcret
 28712  0051E4                     __end_of___lwdiv:
 28713                           	opt stack 0
 28714                           tosu	equ	0xFFF
 28715                           tosh	equ	0xFFE
 28716                           tosl	equ	0xFFD
 28717                           pclath	equ	0xFFA
 28718                           tblptru	equ	0xFF8
 28719                           tblptrh	equ	0xFF7
 28720                           tblptrl	equ	0xFF6
 28721                           tablat	equ	0xFF5
 28722                           prodh	equ	0xFF4
 28723                           prodl	equ	0xFF3
 28724                           intcon	equ	0xFF2
 28725                           intcon2	equ	0xFF1
 28726                           intcon3	equ	0xFF0
 28727                           indf0	equ	0xFEF
 28728                           postinc0	equ	0xFEE
 28729                           plusw0	equ	0xFEB
 28730                           fsr0h	equ	0xFEA
 28731                           fsr0l	equ	0xFE9
 28732                           wreg	equ	0xFE8
 28733                           indf1	equ	0xFE7
 28734                           postinc1	equ	0xFE6
 28735                           postdec1	equ	0xFE5
 28736                           plusw1	equ	0xFE3
 28737                           fsr1h	equ	0xFE2
 28738                           fsr1l	equ	0xFE1
 28739                           indf2	equ	0xFDF
 28740                           postinc2	equ	0xFDE
 28741                           postdec2	equ	0xFDD
 28742                           plusw2	equ	0xFDB
 28743                           fsr2h	equ	0xFDA
 28744                           fsr2l	equ	0xFD9
 28745                           status	equ	0xFD8
 28746                           
 28747 ;; *************** function _OsAlrm_SetOsAlarm *****************
 28748 ;; Defined at:
 28749 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 28750 ;; Parameters:    Size  Location     Type
 28751 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 28752 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 28753 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 28754 ;;		 -> I2cDummyTx(1), 
 28755 ;; Auto vars:     Size  Location     Type
 28756 ;;		None
 28757 ;; Return value:  Size  Location     Type
 28758 ;;                  1    wreg      void 
 28759 ;; Registers used:
 28760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28761 ;; Tracked objects:
 28762 ;;		On entry : 0/0
 28763 ;;		On exit  : 0/0
 28764 ;;		Unchanged: 0/0
 28765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28766 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28769 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28770 ;;Total ram usage:        8 bytes
 28771 ;; Hardware stack levels used:    1
 28772 ;; Hardware stack levels required when called:   12
 28773 ;; This function calls:
 28774 ;;		___wmul
 28775 ;; This function is called by:
 28776 ;;		_I2cSlv_MainTask
 28777 ;; This function uses a non-reentrant model
 28778 ;;
 28779                           
 28780                           	psect	text130
 28781  003BEA                     __ptext130:
 28782                           	opt stack 0
 28783  003BEA                     _OsAlrm_SetOsAlarm:
 28784                           	opt stack 15
 28785                           
 28786                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 28787                           
 28788                           ; BSR set to: 0
 28789                           ;incstack = 0
 28790  003BEA  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 28791  003BEE  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 28792  003BF2  0E00               	movlw	0
 28793  003BF4  0100               	movlb	0	; () banked
 28794  003BF6  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28795  003BF8  0E0B               	movlw	11
 28796  003BFA  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 28797  003BFC  EC2F  F02D         	call	___wmul	;wreg free
 28798  003C00  0E00               	movlw	low _OsAlarms
 28799  003C02  0100               	movlb	0	; () banked
 28800  003C04  257D               	addwf	?___wmul& (0+255),w,b
 28801  003C06  6ED9               	movwf	fsr2l,c
 28802  003C08  0E06               	movlw	high _OsAlarms
 28803  003C0A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 28804  003C0C  6EDA               	movwf	fsr2h,c
 28805  003C0E  0E01               	movlw	1
 28806  003C10  6EDF               	movwf	indf2,c
 28807                           
 28808                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 28809  003C12  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 28810  003C16  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 28811  003C1A  0E00               	movlw	0
 28812  003C1C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28813  003C1E  0E0B               	movlw	11
 28814  003C20  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 28815  003C22  EC2F  F02D         	call	___wmul	;wreg free
 28816  003C26  0E01               	movlw	1
 28817  003C28  0100               	movlb	0	; () banked
 28818  003C2A  277D               	addwf	?___wmul& (0+255),f,b
 28819  003C2C  0E00               	movlw	0
 28820  003C2E  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 28821  003C30  0E00               	movlw	low _OsAlarms
 28822  003C32  257D               	addwf	?___wmul& (0+255),w,b
 28823  003C34  6ED9               	movwf	fsr2l,c
 28824  003C36  0E06               	movlw	high _OsAlarms
 28825  003C38  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 28826  003C3A  6EDA               	movwf	fsr2h,c
 28827  003C3C  6ADE               	clrf	postinc2,c
 28828  003C3E  6ADE               	clrf	postinc2,c
 28829  003C40  6ADE               	clrf	postinc2,c
 28830  003C42  6ADD               	clrf	postdec2,c
 28831                           
 28832                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 28833  003C44  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 28834  003C48  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 28835  003C4C  0E00               	movlw	0
 28836  003C4E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28837  003C50  0E0B               	movlw	11
 28838  003C52  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 28839  003C54  EC2F  F02D         	call	___wmul	;wreg free
 28840  003C58  0E05               	movlw	5
 28841  003C5A  0100               	movlb	0	; () banked
 28842  003C5C  277D               	addwf	?___wmul& (0+255),f,b
 28843  003C5E  0E00               	movlw	0
 28844  003C60  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 28845  003C62  0E00               	movlw	low _OsAlarms
 28846  003C64  257D               	addwf	?___wmul& (0+255),w,b
 28847  003C66  6ED9               	movwf	fsr2l,c
 28848  003C68  0E06               	movlw	high _OsAlarms
 28849  003C6A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 28850  003C6C  6EDA               	movwf	fsr2h,c
 28851  003C6E  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 28852  003C72  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 28853  003C76  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 28854  003C7A  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 28855                           
 28856                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 28857  003C7E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 28858  003C82  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 28859  003C86  0E00               	movlw	0
 28860  003C88  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28861  003C8A  0E0B               	movlw	11
 28862  003C8C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 28863  003C8E  EC2F  F02D         	call	___wmul	;wreg free
 28864  003C92  0E09               	movlw	9
 28865  003C94  0100               	movlb	0	; () banked
 28866  003C96  277D               	addwf	?___wmul& (0+255),f,b
 28867  003C98  0E00               	movlw	0
 28868  003C9A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 28869  003C9C  0E00               	movlw	low _OsAlarms
 28870  003C9E  257D               	addwf	?___wmul& (0+255),w,b
 28871  003CA0  6ED9               	movwf	fsr2l,c
 28872  003CA2  0E06               	movlw	high _OsAlarms
 28873  003CA4  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 28874  003CA6  6EDA               	movwf	fsr2h,c
 28875  003CA8  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 28876  003CAC  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 28877                           
 28878                           ; BSR set to: 0
 28879  003CB0  0012               	return		;funcret
 28880  003CB2                     __end_of_OsAlrm_SetOsAlarm:
 28881                           	opt stack 0
 28882                           tosu	equ	0xFFF
 28883                           tosh	equ	0xFFE
 28884                           tosl	equ	0xFFD
 28885                           pclath	equ	0xFFA
 28886                           tblptru	equ	0xFF8
 28887                           tblptrh	equ	0xFF7
 28888                           tblptrl	equ	0xFF6
 28889                           tablat	equ	0xFF5
 28890                           prodh	equ	0xFF4
 28891                           prodl	equ	0xFF3
 28892                           intcon	equ	0xFF2
 28893                           intcon2	equ	0xFF1
 28894                           intcon3	equ	0xFF0
 28895                           indf0	equ	0xFEF
 28896                           postinc0	equ	0xFEE
 28897                           plusw0	equ	0xFEB
 28898                           fsr0h	equ	0xFEA
 28899                           fsr0l	equ	0xFE9
 28900                           wreg	equ	0xFE8
 28901                           indf1	equ	0xFE7
 28902                           postinc1	equ	0xFE6
 28903                           postdec1	equ	0xFE5
 28904                           plusw1	equ	0xFE3
 28905                           fsr1h	equ	0xFE2
 28906                           fsr1l	equ	0xFE1
 28907                           indf2	equ	0xFDF
 28908                           postinc2	equ	0xFDE
 28909                           postdec2	equ	0xFDD
 28910                           plusw2	equ	0xFDB
 28911                           fsr2h	equ	0xFDA
 28912                           fsr2l	equ	0xFD9
 28913                           status	equ	0xFD8
 28914                           
 28915 ;; *************** function ___wmul *****************
 28916 ;; Defined at:
 28917 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 28918 ;; Parameters:    Size  Location     Type
 28919 ;;  multiplier      2   29[BANK0 ] unsigned int 
 28920 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 28921 ;; Auto vars:     Size  Location     Type
 28922 ;;  product         2   33[BANK0 ] unsigned int 
 28923 ;; Return value:  Size  Location     Type
 28924 ;;                  2   29[BANK0 ] unsigned int 
 28925 ;; Registers used:
 28926 ;;		wreg, status,2, status,0, prodl, prodh
 28927 ;; Tracked objects:
 28928 ;;		On entry : 0/0
 28929 ;;		On exit  : 0/0
 28930 ;;		Unchanged: 0/0
 28931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28932 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28935 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28936 ;;Total ram usage:        6 bytes
 28937 ;; Hardware stack levels used:    1
 28938 ;; Hardware stack levels required when called:   11
 28939 ;; This function calls:
 28940 ;;		Nothing
 28941 ;; This function is called by:
 28942 ;;		_OsAlrm_SetOsAlarm
 28943 ;;		_atoi
 28944 ;; This function uses a non-reentrant model
 28945 ;;
 28946                           
 28947                           	psect	text131
 28948  005A5E                     __ptext131:
 28949                           	opt stack 0
 28950  005A5E                     ___wmul:
 28951                           	opt stack 13
 28952                           
 28953                           ; BSR set to: 0
 28954                           ;incstack = 0
 28955  005A5E  0100               	movlb	0	; () banked
 28956  005A60  517D               	movf	___wmul@multiplier& (0+255),w,b
 28957  005A62  037F               	mulwf	___wmul@multiplicand& (0+255),b
 28958  005A64  CFF3 F081          	movff	prodl,___wmul@product
 28959  005A68  CFF4 F082          	movff	prodh,___wmul@product+1
 28960  005A6C  517D               	movf	___wmul@multiplier& (0+255),w,b
 28961  005A6E  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28962  005A70  50F3               	movf	prodl,w,c
 28963  005A72  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 28964  005A74  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28965  005A76  037F               	mulwf	___wmul@multiplicand& (0+255),b
 28966  005A78  50F3               	movf	prodl,w,c
 28967  005A7A  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 28968                           
 28969                           ; BSR set to: 0
 28970  005A7C  C081  F07D         	movff	___wmul@product,?___wmul
 28971  005A80  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 28972  005A84  0012               	return	
 28973  005A86                     __end_of___wmul:
 28974                           	opt stack 0
 28975                           tosu	equ	0xFFF
 28976                           tosh	equ	0xFFE
 28977                           tosl	equ	0xFFD
 28978                           pclath	equ	0xFFA
 28979                           tblptru	equ	0xFF8
 28980                           tblptrh	equ	0xFF7
 28981                           tblptrl	equ	0xFF6
 28982                           tablat	equ	0xFF5
 28983                           prodh	equ	0xFF4
 28984                           prodl	equ	0xFF3
 28985                           intcon	equ	0xFF2
 28986                           intcon2	equ	0xFF1
 28987                           intcon3	equ	0xFF0
 28988                           indf0	equ	0xFEF
 28989                           postinc0	equ	0xFEE
 28990                           plusw0	equ	0xFEB
 28991                           fsr0h	equ	0xFEA
 28992                           fsr0l	equ	0xFE9
 28993                           wreg	equ	0xFE8
 28994                           indf1	equ	0xFE7
 28995                           postinc1	equ	0xFE6
 28996                           postdec1	equ	0xFE5
 28997                           plusw1	equ	0xFE3
 28998                           fsr1h	equ	0xFE2
 28999                           fsr1l	equ	0xFE1
 29000                           indf2	equ	0xFDF
 29001                           postinc2	equ	0xFDE
 29002                           postdec2	equ	0xFDD
 29003                           plusw2	equ	0xFDB
 29004                           fsr2h	equ	0xFDA
 29005                           fsr2l	equ	0xFD9
 29006                           status	equ	0xFD8
 29007                           
 29008 ;; *************** function _I2c_InitI2cModule *****************
 29009 ;; Defined at:
 29010 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29011 ;; Parameters:    Size  Location     Type
 29012 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 29013 ;;		 -> I2cConfig(10), 
 29014 ;; Auto vars:     Size  Location     Type
 29015 ;;		None
 29016 ;; Return value:  Size  Location     Type
 29017 ;;                  1    wreg      void 
 29018 ;; Registers used:
 29019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29020 ;; Tracked objects:
 29021 ;;		On entry : 0/0
 29022 ;;		On exit  : 0/0
 29023 ;;		Unchanged: 0/0
 29024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29027 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29028 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29029 ;;Total ram usage:        4 bytes
 29030 ;; Hardware stack levels used:    1
 29031 ;; Hardware stack levels required when called:   13
 29032 ;; This function calls:
 29033 ;;		_SetBaudRate
 29034 ;; This function is called by:
 29035 ;;		_I2cSlv_MainTask
 29036 ;; This function uses a non-reentrant model
 29037 ;;
 29038                           
 29039                           	psect	text132
 29040  004AD0                     __ptext132:
 29041                           	opt stack 0
 29042  004AD0                     _I2c_InitI2cModule:
 29043                           	opt stack 14
 29044                           
 29045                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 29046                           
 29047                           ; BSR set to: 0
 29048                           ;incstack = 0
 29049  004AD0  8295               	bsf	3989,1,c	;volatile
 29050                           
 29051                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 29052  004AD2  8095               	bsf	3989,0,c	;volatile
 29053                           
 29054                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 29055  004AD4  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 29056  004AD8  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 29057  004ADC  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 29058  004AE0  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 29059  004AE4  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 29060  004AE8  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 29061  004AEC  0100               	movlb	0	; () banked
 29062  004AEE  EE20 F004          	lfsr	2,4
 29063  004AF2  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29064  004AF4  26D9               	addwf	fsr2l,f,c
 29065  004AF6  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29066  004AF8  22DA               	addwfc	fsr2h,f,c
 29067  004AFA  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 29068  004AFE  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 29069  004B02  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 29070  004B06  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 29071  004B0A  EC6A  F029         	call	_SetBaudRate	;wreg free
 29072                           
 29073                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 29074  004B0E  0100               	movlb	0	; () banked
 29075  004B10  EE20 F008          	lfsr	2,8
 29076  004B14  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29077  004B16  26D9               	addwf	fsr2l,f,c
 29078  004B18  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29079  004B1A  22DA               	addwfc	fsr2h,f,c
 29080  004B1C  50DF               	movf	indf2,w,c
 29081  004B1E  1272               	iorwf	3954,f,c	;volatile
 29082                           
 29083                           ; BSR set to: 0
 29084                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 29085  004B20  EE20 F009          	lfsr	2,9
 29086  004B24  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29087  004B26  26D9               	addwf	fsr2l,f,c
 29088  004B28  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29089  004B2A  22DA               	addwfc	fsr2h,f,c
 29090  004B2C  50DF               	movf	indf2,w,c
 29091  004B2E  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 29092  004B30  0E05               	movlw	5
 29093  004B32  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 29094  004B34                     u7845:
 29095  004B34  90D8               	bcf	status,0,c
 29096  004B36  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 29097  004B38  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 29098  004B3A  D7FC               	goto	u7845
 29099  004B3C  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 29100  004B3E  1272               	iorwf	3954,f,c	;volatile
 29101                           
 29102                           ; BSR set to: 0
 29103  004B40  0012               	return		;funcret
 29104  004B42                     __end_of_I2c_InitI2cModule:
 29105                           	opt stack 0
 29106                           tosu	equ	0xFFF
 29107                           tosh	equ	0xFFE
 29108                           tosl	equ	0xFFD
 29109                           pclath	equ	0xFFA
 29110                           tblptru	equ	0xFF8
 29111                           tblptrh	equ	0xFF7
 29112                           tblptrl	equ	0xFF6
 29113                           tablat	equ	0xFF5
 29114                           prodh	equ	0xFF4
 29115                           prodl	equ	0xFF3
 29116                           intcon	equ	0xFF2
 29117                           intcon2	equ	0xFF1
 29118                           intcon3	equ	0xFF0
 29119                           indf0	equ	0xFEF
 29120                           postinc0	equ	0xFEE
 29121                           plusw0	equ	0xFEB
 29122                           fsr0h	equ	0xFEA
 29123                           fsr0l	equ	0xFE9
 29124                           wreg	equ	0xFE8
 29125                           indf1	equ	0xFE7
 29126                           postinc1	equ	0xFE6
 29127                           postdec1	equ	0xFE5
 29128                           plusw1	equ	0xFE3
 29129                           fsr1h	equ	0xFE2
 29130                           fsr1l	equ	0xFE1
 29131                           indf2	equ	0xFDF
 29132                           postinc2	equ	0xFDE
 29133                           postdec2	equ	0xFDD
 29134                           plusw2	equ	0xFDB
 29135                           fsr2h	equ	0xFDA
 29136                           fsr2l	equ	0xFD9
 29137                           status	equ	0xFD8
 29138                           
 29139 ;; *************** function _SetBaudRate *****************
 29140 ;; Defined at:
 29141 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29142 ;; Parameters:    Size  Location     Type
 29143 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 29144 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 29145 ;; Auto vars:     Size  Location     Type
 29146 ;;		None
 29147 ;; Return value:  Size  Location     Type
 29148 ;;                  1    wreg      void 
 29149 ;; Registers used:
 29150 ;;		wreg, status,2, status,0, cstack
 29151 ;; Tracked objects:
 29152 ;;		On entry : 0/0
 29153 ;;		On exit  : 0/0
 29154 ;;		Unchanged: 0/0
 29155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29156 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29158 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29159 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29160 ;;Total ram usage:       12 bytes
 29161 ;; Hardware stack levels used:    1
 29162 ;; Hardware stack levels required when called:   12
 29163 ;; This function calls:
 29164 ;;		___lldiv
 29165 ;; This function is called by:
 29166 ;;		_I2c_InitI2cModule
 29167 ;; This function uses a non-reentrant model
 29168 ;;
 29169                           
 29170                           	psect	text133
 29171  0052D4                     __ptext133:
 29172                           	opt stack 0
 29173  0052D4                     _SetBaudRate:
 29174                           	opt stack 14
 29175                           
 29176                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 29177                           
 29178                           ; BSR set to: 0
 29179                           ;incstack = 0
 29180  0052D4  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 29181  0052D8  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 29182  0052DC  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 29183  0052E0  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 29184  0052E4  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 29185  0052E8  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 29186  0052EC  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 29187  0052F0  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 29188  0052F4  0E02               	movlw	2
 29189  0052F6                     u6835:
 29190  0052F6  90D8               	bcf	status,0,c
 29191  0052F8  0100               	movlb	0	; () banked
 29192  0052FA  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 29193  0052FC  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 29194  0052FE  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 29195  005300  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 29196  005302  2EE8               	decfsz	wreg,f,c
 29197  005304  D7F8               	goto	u6835
 29198  005306  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 29199  00530A  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 29200  00530E  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 29201  005312  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 29202  005316  ECAC  F024         	call	___lldiv	;wreg free
 29203  00531A  0100               	movlb	0	; () banked
 29204  00531C  0589               	decf	?___lldiv& (0+255),w,b
 29205  00531E  6E74               	movwf	3956,c	;volatile
 29206                           
 29207                           ; BSR set to: 0
 29208  005320  0012               	return		;funcret
 29209  005322                     __end_of_SetBaudRate:
 29210                           	opt stack 0
 29211                           tosu	equ	0xFFF
 29212                           tosh	equ	0xFFE
 29213                           tosl	equ	0xFFD
 29214                           pclath	equ	0xFFA
 29215                           tblptru	equ	0xFF8
 29216                           tblptrh	equ	0xFF7
 29217                           tblptrl	equ	0xFF6
 29218                           tablat	equ	0xFF5
 29219                           prodh	equ	0xFF4
 29220                           prodl	equ	0xFF3
 29221                           intcon	equ	0xFF2
 29222                           intcon2	equ	0xFF1
 29223                           intcon3	equ	0xFF0
 29224                           indf0	equ	0xFEF
 29225                           postinc0	equ	0xFEE
 29226                           plusw0	equ	0xFEB
 29227                           fsr0h	equ	0xFEA
 29228                           fsr0l	equ	0xFE9
 29229                           wreg	equ	0xFE8
 29230                           indf1	equ	0xFE7
 29231                           postinc1	equ	0xFE6
 29232                           postdec1	equ	0xFE5
 29233                           plusw1	equ	0xFE3
 29234                           fsr1h	equ	0xFE2
 29235                           fsr1l	equ	0xFE1
 29236                           indf2	equ	0xFDF
 29237                           postinc2	equ	0xFDE
 29238                           postdec2	equ	0xFDD
 29239                           plusw2	equ	0xFDB
 29240                           fsr2h	equ	0xFDA
 29241                           fsr2l	equ	0xFD9
 29242                           status	equ	0xFD8
 29243                           
 29244 ;; *************** function ___lldiv *****************
 29245 ;; Defined at:
 29246 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 29247 ;; Parameters:    Size  Location     Type
 29248 ;;  dividend        4   41[BANK0 ] unsigned long 
 29249 ;;  divisor         4   45[BANK0 ] unsigned long 
 29250 ;; Auto vars:     Size  Location     Type
 29251 ;;  quotient        4   49[BANK0 ] unsigned long 
 29252 ;;  counter         1   53[BANK0 ] unsigned char 
 29253 ;; Return value:  Size  Location     Type
 29254 ;;                  4   41[BANK0 ] unsigned long 
 29255 ;; Registers used:
 29256 ;;		wreg, status,2, status,0
 29257 ;; Tracked objects:
 29258 ;;		On entry : 0/0
 29259 ;;		On exit  : 0/0
 29260 ;;		Unchanged: 0/0
 29261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29262 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29263 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29265 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29266 ;;Total ram usage:       13 bytes
 29267 ;; Hardware stack levels used:    1
 29268 ;; Hardware stack levels required when called:   11
 29269 ;; This function calls:
 29270 ;;		Nothing
 29271 ;; This function is called by:
 29272 ;;		_SetBaudRate
 29273 ;;		_Tmr_TmrBPrSet
 29274 ;;		_SetUartBaudRate
 29275 ;; This function uses a non-reentrant model
 29276 ;;
 29277                           
 29278                           	psect	text134
 29279  004958                     __ptext134:
 29280                           	opt stack 0
 29281  004958                     ___lldiv:
 29282                           	opt stack 15
 29283                           
 29284                           ; BSR set to: 0
 29285                           ;incstack = 0
 29286  004958  0E00               	movlw	0
 29287  00495A  0100               	movlb	0	; () banked
 29288  00495C  6F91               	movwf	___lldiv@quotient& (0+255),b
 29289  00495E  0E00               	movlw	0
 29290  004960  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 29291  004962  0E00               	movlw	0
 29292  004964  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 29293  004966  0E00               	movlw	0
 29294  004968  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 29295                           
 29296                           ; BSR set to: 0
 29297  00496A  518D               	movf	___lldiv@divisor& (0+255),w,b
 29298  00496C  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 29299  00496E  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 29300  004970  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 29301  004972  B4D8               	btfsc	status,2,c
 29302  004974  D02A               	goto	l2944
 29303                           
 29304                           ; BSR set to: 0
 29305  004976  0E01               	movlw	1
 29306  004978  6F95               	movwf	___lldiv@counter& (0+255),b
 29307  00497A  D006               	goto	l2939
 29308  00497C                     
 29309                           ; BSR set to: 0
 29310                           
 29311                           ; BSR set to: 0
 29312  00497C  90D8               	bcf	status,0,c
 29313  00497E  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 29314  004980  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 29315  004982  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 29316  004984  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 29317  004986  2B95               	incf	___lldiv@counter& (0+255),f,b
 29318  004988                     l2939:
 29319                           
 29320                           ; BSR set to: 0
 29321                           
 29322                           ; BSR set to: 0
 29323  004988  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 29324  00498A  D7F8               	goto	l2940
 29325  00498C                     u5870:
 29326                           
 29327                           ; BSR set to: 0
 29328                           
 29329                           ; BSR set to: 0
 29330                           
 29331                           ; BSR set to: 0
 29332  00498C  90D8               	bcf	status,0,c
 29333  00498E  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 29334  004990  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 29335  004992  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 29336  004994  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 29337                           
 29338                           ; BSR set to: 0
 29339  004996  518D               	movf	___lldiv@divisor& (0+255),w,b
 29340  004998  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 29341  00499A  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29342  00499C  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 29343  00499E  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29344  0049A0  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 29345  0049A2  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29346  0049A4  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 29347  0049A6  A0D8               	btfss	status,0,c
 29348  0049A8  D009               	goto	l2943
 29349                           
 29350                           ; BSR set to: 0
 29351  0049AA  518D               	movf	___lldiv@divisor& (0+255),w,b
 29352  0049AC  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 29353  0049AE  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29354  0049B0  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 29355  0049B2  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29356  0049B4  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 29357  0049B6  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29358  0049B8  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 29359                           
 29360                           ; BSR set to: 0
 29361  0049BA  8191               	bsf	___lldiv@quotient& (0+255),0,b
 29362  0049BC                     l2943:
 29363                           
 29364                           ; BSR set to: 0
 29365                           
 29366                           ; BSR set to: 0
 29367  0049BC  90D8               	bcf	status,0,c
 29368  0049BE  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 29369  0049C0  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 29370  0049C2  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 29371  0049C4  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 29372                           
 29373                           ; BSR set to: 0
 29374  0049C6  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 29375  0049C8  D7E1               	goto	u5870
 29376  0049CA                     l2944:
 29377                           
 29378                           ; BSR set to: 0
 29379                           
 29380                           ; BSR set to: 0
 29381  0049CA  C091  F089         	movff	___lldiv@quotient,?___lldiv
 29382  0049CE  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 29383  0049D2  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 29384  0049D6  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 29385                           
 29386                           ; BSR set to: 0
 29387  0049DA  0012               	return		;funcret
 29388  0049DC                     __end_of___lldiv:
 29389                           	opt stack 0
 29390                           tosu	equ	0xFFF
 29391                           tosh	equ	0xFFE
 29392                           tosl	equ	0xFFD
 29393                           pclath	equ	0xFFA
 29394                           tblptru	equ	0xFF8
 29395                           tblptrh	equ	0xFF7
 29396                           tblptrl	equ	0xFF6
 29397                           tablat	equ	0xFF5
 29398                           prodh	equ	0xFF4
 29399                           prodl	equ	0xFF3
 29400                           intcon	equ	0xFF2
 29401                           intcon2	equ	0xFF1
 29402                           intcon3	equ	0xFF0
 29403                           indf0	equ	0xFEF
 29404                           postinc0	equ	0xFEE
 29405                           plusw0	equ	0xFEB
 29406                           fsr0h	equ	0xFEA
 29407                           fsr0l	equ	0xFE9
 29408                           wreg	equ	0xFE8
 29409                           indf1	equ	0xFE7
 29410                           postinc1	equ	0xFE6
 29411                           postdec1	equ	0xFE5
 29412                           plusw1	equ	0xFE3
 29413                           fsr1h	equ	0xFE2
 29414                           fsr1l	equ	0xFE1
 29415                           indf2	equ	0xFDF
 29416                           postinc2	equ	0xFDE
 29417                           postdec2	equ	0xFDD
 29418                           plusw2	equ	0xFDB
 29419                           fsr2h	equ	0xFDA
 29420                           fsr2l	equ	0xFD9
 29421                           status	equ	0xFD8
 29422                           
 29423 ;; *************** function _I2cSetConfig *****************
 29424 ;; Defined at:
 29425 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 29426 ;; Parameters:    Size  Location     Type
 29427 ;;		None
 29428 ;; Auto vars:     Size  Location     Type
 29429 ;;		None
 29430 ;; Return value:  Size  Location     Type
 29431 ;;                  1    wreg      void 
 29432 ;; Registers used:
 29433 ;;		wreg, status,2
 29434 ;; Tracked objects:
 29435 ;;		On entry : 0/0
 29436 ;;		On exit  : 0/0
 29437 ;;		Unchanged: 0/0
 29438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29443 ;;Total ram usage:        0 bytes
 29444 ;; Hardware stack levels used:    1
 29445 ;; Hardware stack levels required when called:   11
 29446 ;; This function calls:
 29447 ;;		Nothing
 29448 ;; This function is called by:
 29449 ;;		_I2cSlv_MainTask
 29450 ;; This function uses a non-reentrant model
 29451 ;;
 29452                           
 29453                           	psect	text135
 29454  0059DE                     __ptext135:
 29455                           	opt stack 0
 29456  0059DE                     _I2cSetConfig:
 29457                           	opt stack 16
 29458                           
 29459                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 29460                           
 29461                           ; BSR set to: 0
 29462                           ;incstack = 0
 29463  0059DE  0E80               	movlw	128
 29464  0059E0  0103               	movlb	3	; () banked
 29465  0059E2  6F5C               	movwf	_I2cConfig& (0+255),b
 29466  0059E4  0E1A               	movlw	26
 29467  0059E6  6F5D               	movwf	(_I2cConfig+1)& (0+255),b
 29468  0059E8  0E06               	movlw	6
 29469  0059EA  6F5E               	movwf	(_I2cConfig+2)& (0+255),b
 29470  0059EC  0E00               	movlw	0
 29471  0059EE  6F5F               	movwf	(_I2cConfig+3)& (0+255),b
 29472                           
 29473                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 29474  0059F0  0E00               	movlw	0
 29475  0059F2  6F60               	movwf	(_I2cConfig+4)& (0+255),b
 29476  0059F4  0E6C               	movlw	108
 29477  0059F6  6F61               	movwf	(_I2cConfig+5)& (0+255),b
 29478  0059F8  0EDC               	movlw	220
 29479  0059FA  6F62               	movwf	(_I2cConfig+6)& (0+255),b
 29480  0059FC  0E02               	movlw	2
 29481  0059FE  6F63               	movwf	(_I2cConfig+7)& (0+255),b
 29482                           
 29483                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 29484  005A00  0E08               	movlw	8
 29485  005A02  6F64               	movwf	(_I2cConfig+8)& (0+255),b
 29486                           
 29487                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 29488  005A04  0E01               	movlw	1
 29489  005A06  6F65               	movwf	(_I2cConfig+9)& (0+255),b
 29490                           
 29491                           ; BSR set to: 3
 29492  005A08  0012               	return		;funcret
 29493  005A0A                     __end_of_I2cSetConfig:
 29494                           	opt stack 0
 29495                           tosu	equ	0xFFF
 29496                           tosh	equ	0xFFE
 29497                           tosl	equ	0xFFD
 29498                           pclath	equ	0xFFA
 29499                           tblptru	equ	0xFF8
 29500                           tblptrh	equ	0xFF7
 29501                           tblptrl	equ	0xFF6
 29502                           tablat	equ	0xFF5
 29503                           prodh	equ	0xFF4
 29504                           prodl	equ	0xFF3
 29505                           intcon	equ	0xFF2
 29506                           intcon2	equ	0xFF1
 29507                           intcon3	equ	0xFF0
 29508                           indf0	equ	0xFEF
 29509                           postinc0	equ	0xFEE
 29510                           plusw0	equ	0xFEB
 29511                           fsr0h	equ	0xFEA
 29512                           fsr0l	equ	0xFE9
 29513                           wreg	equ	0xFE8
 29514                           indf1	equ	0xFE7
 29515                           postinc1	equ	0xFE6
 29516                           postdec1	equ	0xFE5
 29517                           plusw1	equ	0xFE3
 29518                           fsr1h	equ	0xFE2
 29519                           fsr1l	equ	0xFE1
 29520                           indf2	equ	0xFDF
 29521                           postinc2	equ	0xFDE
 29522                           postdec2	equ	0xFDD
 29523                           plusw2	equ	0xFDB
 29524                           fsr2h	equ	0xFDA
 29525                           fsr2l	equ	0xFD9
 29526                           status	equ	0xFD8
 29527                           
 29528 ;; *************** function _I2cSendMsgSm *****************
 29529 ;; Defined at:
 29530 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 29531 ;; Parameters:    Size  Location     Type
 29532 ;;		None
 29533 ;; Auto vars:     Size  Location     Type
 29534 ;;		None
 29535 ;; Return value:  Size  Location     Type
 29536 ;;                  1    wreg      void 
 29537 ;; Registers used:
 29538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29539 ;; Tracked objects:
 29540 ;;		On entry : 0/0
 29541 ;;		On exit  : 0/0
 29542 ;;		Unchanged: 0/0
 29543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29548 ;;Total ram usage:        0 bytes
 29549 ;; Hardware stack levels used:    1
 29550 ;; Hardware stack levels required when called:   13
 29551 ;; This function calls:
 29552 ;;		_I2c_ReadData
 29553 ;;		_I2c_WriteData
 29554 ;;		_ReceiveEvt
 29555 ;; This function is called by:
 29556 ;;		_I2cSlv_MainTask
 29557 ;; This function uses a non-reentrant model
 29558 ;;
 29559                           
 29560                           	psect	text136
 29561  003CB2                     __ptext136:
 29562                           	opt stack 0
 29563  003CB2                     _I2cSendMsgSm:
 29564                           	opt stack 14
 29565                           
 29566                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 29567                           ;i2c_slv.c: 122: switch(I2cComState)
 29568                           
 29569                           ; BSR set to: 3
 29570                           ;incstack = 0
 29571  003CB2  D04F               	goto	l1361
 29572  003CB4                     
 29573                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 29574  003CB4  0ED6               	movlw	low _I2cWriteDataEvt
 29575  003CB6  0100               	movlb	0	; () banked
 29576  003CB8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29577  003CBA  0E00               	movlw	high _I2cWriteDataEvt
 29578  003CBC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29579  003CBE  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 29580  003CC2  0900               	iorlw	0
 29581  003CC4  B4D8               	btfsc	status,2,c
 29582  003CC6  D007               	goto	l1363
 29583                           
 29584                           ;i2c_slv.c: 127: {
 29585                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 29586  003CC8  0E01               	movlw	1
 29587  003CCA  0101               	movlb	1	; () banked
 29588  003CCC  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29589                           
 29590                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 29591  003CCE  0E01               	movlw	1
 29592  003CD0  0100               	movlb	0	; () banked
 29593  003CD2  6FCC               	movwf	_I2cComSts& (0+255),b
 29594                           
 29595                           ;i2c_slv.c: 132: }
 29596  003CD4  0012               	return	
 29597  003CD6                     l1363:
 29598                           
 29599                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 29600                           
 29601                           ; BSR set to: 0
 29602  003CD6  0ED5               	movlw	low _I2cReadDataEvt
 29603  003CD8  0100               	movlb	0	; () banked
 29604  003CDA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29605  003CDC  0E00               	movlw	high _I2cReadDataEvt
 29606  003CDE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29607  003CE0  ECD8  F02C         	call	_ReceiveEvt	;wreg free
 29608  003CE4  0900               	iorlw	0
 29609  003CE6  B4D8               	btfsc	status,2,c
 29610  003CE8  D007               	goto	l1365
 29611                           
 29612                           ;i2c_slv.c: 134: {
 29613                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 29614  003CEA  0E02               	movlw	2
 29615  003CEC  0101               	movlb	1	; () banked
 29616  003CEE  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29617                           
 29618                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 29619  003CF0  0E02               	movlw	2
 29620  003CF2  0100               	movlb	0	; () banked
 29621  003CF4  6FCC               	movwf	_I2cComSts& (0+255),b
 29622                           
 29623                           ;i2c_slv.c: 139: }
 29624  003CF6  0012               	return	
 29625  003CF8                     l1365:
 29626                           
 29627                           ;i2c_slv.c: 140: else
 29628                           ;i2c_slv.c: 141: {
 29629                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 29630                           
 29631                           ; BSR set to: 0
 29632  003CF8  0E00               	movlw	0
 29633  003CFA  0100               	movlb	0	; () banked
 29634  003CFC  6FCC               	movwf	_I2cComSts& (0+255),b
 29635                           
 29636                           ; BSR set to: 0
 29637                           ;i2c_slv.c: 144: }
 29638                           ;i2c_slv.c: 145: break;
 29639                           
 29640                           ; BSR set to: 0
 29641  003CFE  0012               	return	
 29642  003D00                     
 29643                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 29644                           
 29645                           ; BSR set to: 0
 29646  003D00  0EA8               	movlw	low _I2cTxPacket
 29647  003D02  0100               	movlb	0	; () banked
 29648  003D04  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 29649  003D06  0E03               	movlw	high _I2cTxPacket
 29650  003D08  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 29651  003D0A  EC99  F00E         	call	_I2c_WriteData	;wreg free
 29652  003D0E  0900               	iorlw	0
 29653  003D10  B4D8               	btfsc	status,2,c
 29654  003D12  0012               	return	
 29655                           
 29656                           ;i2c_slv.c: 150: {
 29657                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 29658  003D14  0E03               	movlw	3
 29659  003D16  0101               	movlb	1	; () banked
 29660  003D18  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29661                           
 29662                           ; BSR set to: 1
 29663                           ;i2c_slv.c: 153: }
 29664                           ;i2c_slv.c: 154: break;
 29665  003D1A  0012               	return	
 29666  003D1C                     
 29667                           ; BSR set to: 1
 29668                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 29669                           
 29670                           ; BSR set to: 1
 29671  003D1C  0EA2               	movlw	low _I2cRxPacket
 29672  003D1E  0100               	movlb	0	; () banked
 29673  003D20  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 29674  003D22  0E03               	movlw	high _I2cRxPacket
 29675  003D24  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 29676  003D26  EC50  F00F         	call	_I2c_ReadData	;wreg free
 29677  003D2A  0900               	iorlw	0
 29678  003D2C  B4D8               	btfsc	status,2,c
 29679  003D2E  0012               	return	
 29680                           
 29681                           ;i2c_slv.c: 159: {
 29682                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 29683  003D30  0E04               	movlw	4
 29684  003D32  0101               	movlb	1	; () banked
 29685  003D34  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29686                           
 29687                           ; BSR set to: 1
 29688                           ;i2c_slv.c: 162: }
 29689                           ;i2c_slv.c: 164: break;
 29690  003D36  0012               	return	
 29691  003D38                     
 29692                           ; BSR set to: 1
 29693                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 29694                           
 29695                           ; BSR set to: 1
 29696  003D38  0E00               	movlw	0
 29697  003D3A  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29698                           
 29699                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 29700  003D3C  0E00               	movlw	0
 29701  003D3E  0100               	movlb	0	; () banked
 29702  003D40  6FCC               	movwf	_I2cComSts& (0+255),b
 29703                           
 29704                           ;i2c_slv.c: 171: break;
 29705  003D42  0012               	return	
 29706  003D44                     
 29707                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 29708                           
 29709                           ; BSR set to: 0
 29710  003D44  0E00               	movlw	0
 29711  003D46  0101               	movlb	1	; () banked
 29712  003D48  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29713                           
 29714                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 29715  003D4A  0E00               	movlw	0
 29716  003D4C  0100               	movlb	0	; () banked
 29717  003D4E  6FCC               	movwf	_I2cComSts& (0+255),b
 29718                           
 29719                           ; BSR set to: 0
 29720                           ;i2c_slv.c: 182: }
 29721                           
 29722                           ; BSR set to: 0
 29723                           ;i2c_slv.c: 181: break;
 29724                           
 29725                           ;i2c_slv.c: 180: default:
 29726                           
 29727                           ;i2c_slv.c: 178: break;
 29728  003D50  0012               	return	
 29729  003D52                     l1361:
 29730                           
 29731                           ; BSR set to: 0
 29732  003D52  0101               	movlb	1	; () banked
 29733  003D54  51E9               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 29734                           
 29735                           ; Switch size 1, requested type "space"
 29736                           ; Number of cases is 5, Range of values is 0 to 4
 29737                           ; switch strategies available:
 29738                           ; Name         Instructions Cycles
 29739                           ; simple_byte           16     9 (average)
 29740                           ;	Chosen strategy is simple_byte
 29741  003D56  0A00               	xorlw	0	; case 0
 29742  003D58  B4D8               	btfsc	status,2,c
 29743  003D5A  D7AC               	goto	l1362
 29744  003D5C  0A01               	xorlw	1	; case 1
 29745  003D5E  B4D8               	btfsc	status,2,c
 29746  003D60  D7CF               	goto	l1368
 29747  003D62  0A03               	xorlw	3	; case 2
 29748  003D64  B4D8               	btfsc	status,2,c
 29749  003D66  D7DA               	goto	l1370
 29750  003D68  0A01               	xorlw	1	; case 3
 29751  003D6A  B4D8               	btfsc	status,2,c
 29752  003D6C  D7E5               	goto	l1372
 29753  003D6E  0A07               	xorlw	7	; case 4
 29754  003D70  A4D8               	btfss	status,2,c
 29755  003D72  0012               	return	
 29756  003D74  D7E7               	goto	l1373
 29757  003D76                     __end_of_I2cSendMsgSm:
 29758                           	opt stack 0
 29759                           tosu	equ	0xFFF
 29760                           tosh	equ	0xFFE
 29761                           tosl	equ	0xFFD
 29762                           pclath	equ	0xFFA
 29763                           tblptru	equ	0xFF8
 29764                           tblptrh	equ	0xFF7
 29765                           tblptrl	equ	0xFF6
 29766                           tablat	equ	0xFF5
 29767                           prodh	equ	0xFF4
 29768                           prodl	equ	0xFF3
 29769                           intcon	equ	0xFF2
 29770                           intcon2	equ	0xFF1
 29771                           intcon3	equ	0xFF0
 29772                           indf0	equ	0xFEF
 29773                           postinc0	equ	0xFEE
 29774                           plusw0	equ	0xFEB
 29775                           fsr0h	equ	0xFEA
 29776                           fsr0l	equ	0xFE9
 29777                           wreg	equ	0xFE8
 29778                           indf1	equ	0xFE7
 29779                           postinc1	equ	0xFE6
 29780                           postdec1	equ	0xFE5
 29781                           plusw1	equ	0xFE3
 29782                           fsr1h	equ	0xFE2
 29783                           fsr1l	equ	0xFE1
 29784                           indf2	equ	0xFDF
 29785                           postinc2	equ	0xFDE
 29786                           postdec2	equ	0xFDD
 29787                           plusw2	equ	0xFDB
 29788                           fsr2h	equ	0xFDA
 29789                           fsr2l	equ	0xFD9
 29790                           status	equ	0xFD8
 29791                           
 29792 ;; *************** function _ReceiveEvt *****************
 29793 ;; Defined at:
 29794 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 29795 ;; Parameters:    Size  Location     Type
 29796 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 29797 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 29798 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 29799 ;;		 -> RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), 
 29800 ;;		 -> NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), ActivateRiDetection(1), 
 29801 ;; Auto vars:     Size  Location     Type
 29802 ;;  EventStatus     1   32[BANK0 ] enum E7727
 29803 ;; Return value:  Size  Location     Type
 29804 ;;                  1    wreg      enum E7699
 29805 ;; Registers used:
 29806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29807 ;; Tracked objects:
 29808 ;;		On entry : 0/0
 29809 ;;		On exit  : 0/0
 29810 ;;		Unchanged: 0/0
 29811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29815 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29816 ;;Total ram usage:        4 bytes
 29817 ;; Hardware stack levels used:    1
 29818 ;; Hardware stack levels required when called:   11
 29819 ;; This function calls:
 29820 ;;		Nothing
 29821 ;; This function is called by:
 29822 ;;		_MdmCntSm
 29823 ;;		_CheckModem
 29824 ;;		_ModemEvtParser
 29825 ;;		_GetSmsSm
 29826 ;;		_SendSmsSm
 29827 ;;		_Mdm_IsRinging
 29828 ;;		_InitGprsNetwork
 29829 ;;		_HttpGetMethod
 29830 ;;		_I2cSendMsgSm
 29831 ;;		_I2cSlv_I2cReadMsgSts
 29832 ;;		_RiSm
 29833 ;;		_Mdm_GetSmsData
 29834 ;;		_Mdm_IsSmsReceived
 29835 ;;		_GsmGprsTerminal
 29836 ;; This function uses a non-reentrant model
 29837 ;;
 29838                           
 29839                           	psect	text137
 29840  0059B0                     __ptext137:
 29841                           	opt stack 0
 29842  0059B0                     _ReceiveEvt:
 29843                           	opt stack 13
 29844                           
 29845                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 29846                           
 29847                           ;incstack = 0
 29848  0059B0  0E00               	movlw	0
 29849  0059B2  0100               	movlb	0	; () banked
 29850  0059B4  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 29851                           
 29852                           ; BSR set to: 0
 29853                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 29854  0059B6  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 29855  0059BA  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 29856  0059BE  0E02               	movlw	2
 29857  0059C0  18DE               	xorwf	postinc2,w,c
 29858  0059C2  A4D8               	btfss	status,2,c
 29859  0059C4  D008               	goto	l832
 29860                           
 29861                           ; BSR set to: 0
 29862                           ;os_ser.c: 106: {
 29863                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 29864  0059C6  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 29865  0059CA  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 29866  0059CE  0E01               	movlw	1
 29867  0059D0  6EDF               	movwf	indf2,c
 29868                           
 29869                           ; BSR set to: 0
 29870                           ;os_ser.c: 110: EventStatus = EventReceived;
 29871  0059D2  0E01               	movlw	1
 29872  0059D4  D001               	goto	L47
 29873  0059D6                     l832:
 29874                           
 29875                           ; BSR set to: 0
 29876                           ;os_ser.c: 112: else
 29877                           ;os_ser.c: 113: {
 29878                           ;os_ser.c: 115: EventStatus = EventIdle;
 29879                           
 29880                           ; BSR set to: 0
 29881  0059D6  0E00               	movlw	0
 29882  0059D8                     L47:
 29883  0059D8  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 29884                           
 29885                           ; BSR set to: 0
 29886                           ;os_ser.c: 116: }
 29887                           ;os_ser.c: 119: return(EventStatus);
 29888  0059DA  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 29889  0059DC  0012               	return	
 29890  0059DE                     __end_of_ReceiveEvt:
 29891                           	opt stack 0
 29892                           tosu	equ	0xFFF
 29893                           tosh	equ	0xFFE
 29894                           tosl	equ	0xFFD
 29895                           pclath	equ	0xFFA
 29896                           tblptru	equ	0xFF8
 29897                           tblptrh	equ	0xFF7
 29898                           tblptrl	equ	0xFF6
 29899                           tablat	equ	0xFF5
 29900                           prodh	equ	0xFF4
 29901                           prodl	equ	0xFF3
 29902                           intcon	equ	0xFF2
 29903                           intcon2	equ	0xFF1
 29904                           intcon3	equ	0xFF0
 29905                           indf0	equ	0xFEF
 29906                           postinc0	equ	0xFEE
 29907                           plusw0	equ	0xFEB
 29908                           fsr0h	equ	0xFEA
 29909                           fsr0l	equ	0xFE9
 29910                           wreg	equ	0xFE8
 29911                           indf1	equ	0xFE7
 29912                           postinc1	equ	0xFE6
 29913                           postdec1	equ	0xFE5
 29914                           plusw1	equ	0xFE3
 29915                           fsr1h	equ	0xFE2
 29916                           fsr1l	equ	0xFE1
 29917                           indf2	equ	0xFDF
 29918                           postinc2	equ	0xFDE
 29919                           postdec2	equ	0xFDD
 29920                           plusw2	equ	0xFDB
 29921                           fsr2h	equ	0xFDA
 29922                           fsr2l	equ	0xFD9
 29923                           status	equ	0xFD8
 29924                           
 29925 ;; *************** function _I2c_WriteData *****************
 29926 ;; Defined at:
 29927 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29928 ;; Parameters:    Size  Location     Type
 29929 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 29930 ;;		 -> I2cTxPacket(5), 
 29931 ;; Auto vars:     Size  Location     Type
 29932 ;;		None
 29933 ;; Return value:  Size  Location     Type
 29934 ;;                  1    wreg      enum E7740
 29935 ;; Registers used:
 29936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29937 ;; Tracked objects:
 29938 ;;		On entry : 0/0
 29939 ;;		On exit  : 0/0
 29940 ;;		Unchanged: 0/0
 29941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29942 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29944 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29945 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29946 ;;Total ram usage:        4 bytes
 29947 ;; Hardware stack levels used:    1
 29948 ;; Hardware stack levels required when called:   12
 29949 ;; This function calls:
 29950 ;;		_CheckAckStatus
 29951 ;;		_CheckTxStatus
 29952 ;;		_StartCondition
 29953 ;;		_StopCondition
 29954 ;;		_WriteByte
 29955 ;; This function is called by:
 29956 ;;		_I2cSendMsgSm
 29957 ;; This function uses a non-reentrant model
 29958 ;;
 29959                           
 29960                           	psect	text138
 29961  001D32                     __ptext138:
 29962                           	opt stack 0
 29963  001D32                     _I2c_WriteData:
 29964                           	opt stack 14
 29965                           
 29966                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 29967                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 29968                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 29969                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 29970                           ;i2c_drv.c: 260: switch (I2cWriteState)
 29971                           
 29972                           ; BSR set to: 0
 29973                           ;incstack = 0
 29974  001D32  D095               	goto	l160
 29975  001D34                     
 29976                           ;i2c_drv.c: 264: StartCondition();
 29977  001D34  EC2D  F02F         	call	_StartCondition	;wreg free
 29978                           
 29979                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 29980  001D38  0E00               	movlw	0
 29981  001D3A  6E35               	movwf	I2c_WriteData@WriteStatus,c
 29982                           
 29983                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 29984  001D3C  0E01               	movlw	1
 29985  001D3E  D084               	goto	L54
 29986  001D40                     
 29987                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 29988  001D40  0100               	movlb	0	; () banked
 29989  001D42  EE20 F001          	lfsr	2,1
 29990  001D46  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 29991  001D48  26D9               	addwf	fsr2l,f,c
 29992  001D4A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 29993  001D4C  22DA               	addwfc	fsr2h,f,c
 29994  001D4E  50DF               	movf	indf2,w,c
 29995  001D50  6F80               	movwf	??_I2c_WriteData& (0+255),b
 29996  001D52  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 29997  001D56  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 29998  001D5A  50DF               	movf	indf2,w,c
 29999  001D5C  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 30000  001D5E  90D8               	bcf	status,0,c
 30001  001D60  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 30002  001D62  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 30003  001D64  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30004  001D68  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30005  001D6C  6EDF               	movwf	indf2,c
 30006                           
 30007                           ; BSR set to: 0
 30008                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 30009  001D6E  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30010  001D72  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30011  001D76  50DF               	movf	indf2,w,c
 30012  001D78  EC0B  F02F         	call	_WriteByte
 30013                           
 30014                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 30015  001D7C  0E02               	movlw	2
 30016  001D7E  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30017  001D80                     
 30018                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 30019  001D80  EC15  F02F         	call	_CheckTxStatus	;wreg free
 30020  001D84  0900               	iorlw	0
 30021  001D86  A4D8               	btfss	status,2,c
 30022  001D88  D089               	goto	l162
 30023                           
 30024                           ;i2c_drv.c: 282: {
 30025                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 30026  001D8A  0E03               	movlw	3
 30027  001D8C  D01A               	goto	L56
 30028  001D8E                     
 30029                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 30030  001D8E  0100               	movlb	0	; () banked
 30031  001D90  EE20 F002          	lfsr	2,2
 30032  001D94  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30033  001D96  26D9               	addwf	fsr2l,f,c
 30034  001D98  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30035  001D9A  22DA               	addwfc	fsr2h,f,c
 30036  001D9C  CFDE F080          	movff	postinc2,??_I2c_WriteData
 30037  001DA0  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 30038  001DA4  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 30039  001DA8  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 30040  001DAC  50DF               	movf	indf2,w,c
 30041  001DAE  EC0B  F02F         	call	_WriteByte
 30042                           
 30043                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 30044  001DB2  0E04               	movlw	4
 30045  001DB4  D049               	goto	L54
 30046  001DB6                     
 30047                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 30048  001DB6  EC15  F02F         	call	_CheckTxStatus	;wreg free
 30049  001DBA  0900               	iorlw	0
 30050  001DBC  A4D8               	btfss	status,2,c
 30051  001DBE  D06E               	goto	l162
 30052                           
 30053                           ;i2c_drv.c: 300: {
 30054                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 30055  001DC0  0E05               	movlw	5
 30056  001DC2                     L56:
 30057  001DC2  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30058                           
 30059                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 30060  001DC4  0E08               	movlw	8
 30061  001DC6  D040               	goto	L54
 30062  001DC8                     
 30063                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 30064  001DC8  0100               	movlb	0	; () banked
 30065  001DCA  EE20 F004          	lfsr	2,4
 30066  001DCE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30067  001DD0  26D9               	addwf	fsr2l,f,c
 30068  001DD2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30069  001DD4  22DA               	addwfc	fsr2h,f,c
 30070  001DD6  50DF               	movf	indf2,w,c
 30071  001DD8  B4D8               	btfsc	status,2,c
 30072  001DDA  D010               	goto	l170
 30073                           
 30074                           ; BSR set to: 0
 30075                           ;i2c_drv.c: 310: {
 30076                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 30077  001DDC  EE20 F004          	lfsr	2,4
 30078  001DE0  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30079  001DE2  26D9               	addwf	fsr2l,f,c
 30080  001DE4  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30081  001DE6  22DA               	addwfc	fsr2h,f,c
 30082  001DE8  06DF               	decf	indf2,f,c
 30083                           
 30084                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 30085  001DEA  EE20 F002          	lfsr	2,2
 30086  001DEE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30087  001DF0  26D9               	addwf	fsr2l,f,c
 30088  001DF2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30089  001DF4  22DA               	addwfc	fsr2h,f,c
 30090  001DF6  2ADE               	incf	postinc2,f,c
 30091  001DF8  0E00               	movlw	0
 30092  001DFA  22DD               	addwfc	postdec2,f,c
 30093  001DFC                     l170:
 30094                           
 30095                           ; BSR set to: 0
 30096                           ;i2c_drv.c: 315: }
 30097                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 30098  001DFC  EE20 F004          	lfsr	2,4
 30099  001E00  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30100  001E02  26D9               	addwf	fsr2l,f,c
 30101  001E04  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30102  001E06  22DA               	addwfc	fsr2h,f,c
 30103  001E08  50DF               	movf	indf2,w,c
 30104  001E0A  A4D8               	btfss	status,2,c
 30105  001E0C  D002               	goto	l171
 30106                           
 30107                           ; BSR set to: 0
 30108                           ;i2c_drv.c: 319: {
 30109                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 30110  001E0E  0E06               	movlw	6
 30111  001E10  D01B               	goto	L54
 30112  001E12                     l171:
 30113                           
 30114                           ; BSR set to: 0
 30115                           ;i2c_drv.c: 323: else
 30116                           ;i2c_drv.c: 324: {
 30117                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 30118                           
 30119                           ; BSR set to: 0
 30120  001E12  0E03               	movlw	3
 30121  001E14  D019               	goto	L54
 30122  001E16                     
 30123                           ;i2c_drv.c: 332: StopCondition();
 30124                           
 30125                           ; BSR set to: 0
 30126  001E16  EC2B  F02F         	call	_StopCondition	;wreg free
 30127                           
 30128                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 30129  001E1A  0E07               	movlw	7
 30130  001E1C  D015               	goto	L54
 30131  001E1E                     
 30132                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 30133  001E1E  0E00               	movlw	0
 30134  001E20  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30135                           
 30136                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 30137  001E22  0E00               	movlw	0
 30138  001E24  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30139                           
 30140                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 30141  001E26  0E02               	movlw	2
 30142  001E28  D018               	goto	L55
 30143  001E2A                     
 30144                           ;i2c_drv.c: 347: TentativeCounter++;
 30145  001E2A  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 30146                           
 30147                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 30148  001E2C  EC1A  F02F         	call	_CheckAckStatus	;wreg free
 30149  001E30  0900               	iorlw	0
 30150  001E32  A4D8               	btfss	status,2,c
 30151  001E34  D005               	goto	l176
 30152                           
 30153                           ;i2c_drv.c: 350: {
 30154                           ;i2c_drv.c: 352: TentativeCounter = 0;
 30155  001E36  0E00               	movlw	0
 30156  001E38  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 30157                           
 30158                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 30159  001E3A  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 30160                           
 30161                           ;i2c_drv.c: 355: }
 30162  001E3E  D02E               	goto	l162
 30163  001E40                     l176:
 30164                           
 30165                           ;i2c_drv.c: 356: else
 30166                           ;i2c_drv.c: 357: {
 30167                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 30168  001E40  0E02               	movlw	2
 30169  001E42  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 30170  001E44  D02B               	goto	l162
 30171                           
 30172                           ;i2c_drv.c: 360: {
 30173                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 30174  001E46  0E09               	movlw	9
 30175  001E48                     L54:
 30176  001E48  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30177                           
 30178                           ;i2c_drv.c: 363: }
 30179                           ;i2c_drv.c: 364: }
 30180                           ;i2c_drv.c: 365: break;
 30181  001E4A  D028               	goto	l162
 30182  001E4C                     
 30183                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 30184  001E4C  0E00               	movlw	0
 30185  001E4E  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30186                           
 30187                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 30188  001E50  0E00               	movlw	0
 30189  001E52  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30190                           
 30191                           ;i2c_drv.c: 372: TentativeCounter = 0;
 30192  001E54  0E00               	movlw	0
 30193  001E56  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 30194                           
 30195                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 30196  001E58  0E01               	movlw	1
 30197  001E5A                     L55:
 30198  001E5A  6E35               	movwf	I2c_WriteData@WriteStatus,c
 30199                           
 30200                           ;i2c_drv.c: 379: }
 30201                           
 30202                           ;i2c_drv.c: 378: break;
 30203                           
 30204                           ;i2c_drv.c: 377: default:
 30205                           
 30206                           ;i2c_drv.c: 375: break;
 30207  001E5C  D01F               	goto	l162
 30208  001E5E                     l160:
 30209  001E5E  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 30210                           
 30211                           ; Switch size 1, requested type "space"
 30212                           ; Number of cases is 10, Range of values is 0 to 9
 30213                           ; switch strategies available:
 30214                           ; Name         Instructions Cycles
 30215                           ; simple_byte           31    16 (average)
 30216                           ;	Chosen strategy is simple_byte
 30217  001E60  0A00               	xorlw	0	; case 0
 30218  001E62  B4D8               	btfsc	status,2,c
 30219  001E64  D767               	goto	l161
 30220  001E66  0A01               	xorlw	1	; case 1
 30221  001E68  B4D8               	btfsc	status,2,c
 30222  001E6A  D76A               	goto	l163
 30223  001E6C  0A03               	xorlw	3	; case 2
 30224  001E6E  B4D8               	btfsc	status,2,c
 30225  001E70  D787               	goto	l164
 30226  001E72  0A01               	xorlw	1	; case 3
 30227  001E74  B4D8               	btfsc	status,2,c
 30228  001E76  D78B               	goto	l166
 30229  001E78  0A07               	xorlw	7	; case 4
 30230  001E7A  B4D8               	btfsc	status,2,c
 30231  001E7C  D79C               	goto	l167
 30232  001E7E  0A01               	xorlw	1	; case 5
 30233  001E80  B4D8               	btfsc	status,2,c
 30234  001E82  D7A2               	goto	l169
 30235  001E84  0A03               	xorlw	3	; case 6
 30236  001E86  B4D8               	btfsc	status,2,c
 30237  001E88  D7C6               	goto	l173
 30238  001E8A  0A01               	xorlw	1	; case 7
 30239  001E8C  B4D8               	btfsc	status,2,c
 30240  001E8E  D7C7               	goto	l174
 30241  001E90  0A0F               	xorlw	15	; case 8
 30242  001E92  B4D8               	btfsc	status,2,c
 30243  001E94  D7CA               	goto	l175
 30244  001E96  0A01               	xorlw	1	; case 9
 30245  001E98  B4D8               	btfsc	status,2,c
 30246  001E9A  D7D8               	goto	l179
 30247  001E9C                     l162:
 30248                           
 30249                           ;i2c_drv.c: 382: return WriteStatus;
 30250  001E9C  5035               	movf	I2c_WriteData@WriteStatus,w,c
 30251  001E9E  0012               	return	
 30252  001EA0                     __end_of_I2c_WriteData:
 30253                           	opt stack 0
 30254                           tosu	equ	0xFFF
 30255                           tosh	equ	0xFFE
 30256                           tosl	equ	0xFFD
 30257                           pclath	equ	0xFFA
 30258                           tblptru	equ	0xFF8
 30259                           tblptrh	equ	0xFF7
 30260                           tblptrl	equ	0xFF6
 30261                           tablat	equ	0xFF5
 30262                           prodh	equ	0xFF4
 30263                           prodl	equ	0xFF3
 30264                           intcon	equ	0xFF2
 30265                           intcon2	equ	0xFF1
 30266                           intcon3	equ	0xFF0
 30267                           indf0	equ	0xFEF
 30268                           postinc0	equ	0xFEE
 30269                           plusw0	equ	0xFEB
 30270                           fsr0h	equ	0xFEA
 30271                           fsr0l	equ	0xFE9
 30272                           wreg	equ	0xFE8
 30273                           indf1	equ	0xFE7
 30274                           postinc1	equ	0xFE6
 30275                           postdec1	equ	0xFE5
 30276                           plusw1	equ	0xFE3
 30277                           fsr1h	equ	0xFE2
 30278                           fsr1l	equ	0xFE1
 30279                           indf2	equ	0xFDF
 30280                           postinc2	equ	0xFDE
 30281                           postdec2	equ	0xFDD
 30282                           plusw2	equ	0xFDB
 30283                           fsr2h	equ	0xFDA
 30284                           fsr2l	equ	0xFD9
 30285                           status	equ	0xFD8
 30286                           
 30287 ;; *************** function _I2c_ReadData *****************
 30288 ;; Defined at:
 30289 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30290 ;; Parameters:    Size  Location     Type
 30291 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 30292 ;;		 -> I2cRxPacket(6), 
 30293 ;; Auto vars:     Size  Location     Type
 30294 ;;		None
 30295 ;; Return value:  Size  Location     Type
 30296 ;;                  1    wreg      enum E7787
 30297 ;; Registers used:
 30298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30299 ;; Tracked objects:
 30300 ;;		On entry : 0/0
 30301 ;;		On exit  : 0/0
 30302 ;;		Unchanged: 0/0
 30303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30304 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30306 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30307 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30308 ;;Total ram usage:        4 bytes
 30309 ;; Hardware stack levels used:    1
 30310 ;; Hardware stack levels required when called:   12
 30311 ;; This function calls:
 30312 ;;		_CheckAckStatus
 30313 ;;		_CheckTxStatus
 30314 ;;		_EnableReceiver
 30315 ;;		_GenerateEvt
 30316 ;;		_ReadByte
 30317 ;;		_SetAckStatus
 30318 ;;		_StartCondition
 30319 ;;		_StopCondition
 30320 ;;		_WriteByte
 30321 ;; This function is called by:
 30322 ;;		_I2cSendMsgSm
 30323 ;; This function uses a non-reentrant model
 30324 ;;
 30325                           
 30326                           	psect	text139
 30327  001EA0                     __ptext139:
 30328                           	opt stack 0
 30329  001EA0                     _I2c_ReadData:
 30330                           	opt stack 14
 30331                           
 30332                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 30333                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 30334                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 30335                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 30336                           ;i2c_drv.c: 402: switch (I2cReadState)
 30337                           
 30338                           ;incstack = 0
 30339  001EA0  D090               	goto	l192
 30340  001EA2                     
 30341                           ;i2c_drv.c: 406: StartCondition();
 30342  001EA2  EC2D  F02F         	call	_StartCondition	;wreg free
 30343                           
 30344                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 30345  001EA6  0E00               	movlw	0
 30346  001EA8  6E31               	movwf	I2c_ReadData@ReadStatus,c
 30347                           
 30348                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 30349  001EAA  0E01               	movlw	1
 30350  001EAC  D083               	goto	L64
 30351  001EAE                     
 30352                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 30353  001EAE  0100               	movlb	0	; () banked
 30354  001EB0  EE20 F001          	lfsr	2,1
 30355  001EB4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30356  001EB6  26D9               	addwf	fsr2l,f,c
 30357  001EB8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30358  001EBA  22DA               	addwfc	fsr2h,f,c
 30359  001EBC  50DF               	movf	indf2,w,c
 30360  001EBE  6F82               	movwf	??_I2c_ReadData& (0+255),b
 30361  001EC0  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 30362  001EC4  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 30363  001EC8  50DF               	movf	indf2,w,c
 30364  001ECA  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 30365  001ECC  90D8               	bcf	status,0,c
 30366  001ECE  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 30367  001ED0  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 30368  001ED2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 30369  001ED6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 30370  001EDA  6EDF               	movwf	indf2,c
 30371                           
 30372                           ; BSR set to: 0
 30373                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 30374  001EDC  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 30375  001EE0  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 30376  001EE4  50DF               	movf	indf2,w,c
 30377  001EE6  EC0B  F02F         	call	_WriteByte
 30378                           
 30379                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 30380  001EEA  0E02               	movlw	2
 30381  001EEC  D063               	goto	L64
 30382  001EEE                     
 30383                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 30384  001EEE  EC15  F02F         	call	_CheckTxStatus	;wreg free
 30385  001EF2  0900               	iorlw	0
 30386  001EF4  A4D8               	btfss	status,2,c
 30387  001EF6  D081               	goto	l194
 30388                           
 30389                           ;i2c_drv.c: 425: {
 30390                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 30391  001EF8  0E03               	movlw	3
 30392  001EFA  D05C               	goto	L64
 30393  001EFC                     
 30394                           ;i2c_drv.c: 433: TentativeCounter++;
 30395  001EFC  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 30396                           
 30397                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 30398  001EFE  EC1A  F02F         	call	_CheckAckStatus	;wreg free
 30399  001F02  0900               	iorlw	0
 30400  001F04  A4D8               	btfss	status,2,c
 30401  001F06  D004               	goto	l199
 30402                           
 30403                           ;i2c_drv.c: 436: {
 30404                           ;i2c_drv.c: 438: TentativeCounter = 0;
 30405  001F08  0E00               	movlw	0
 30406  001F0A  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 30407  001F0C                     
 30408                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 30409  001F0C  0E04               	movlw	4
 30410  001F0E  D052               	goto	L64
 30411  001F10                     l199:
 30412                           
 30413                           ;i2c_drv.c: 442: else
 30414                           ;i2c_drv.c: 443: {
 30415                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 30416  001F10  0E02               	movlw	2
 30417  001F12  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 30418  001F14  D072               	goto	l194
 30419                           
 30420                           ;i2c_drv.c: 446: {
 30421                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 30422  001F16  0E08               	movlw	8
 30423  001F18  D04D               	goto	L64
 30424  001F1A                     
 30425                           ;i2c_drv.c: 455: EnableReceiver();
 30426  001F1A  EC2F  F02F         	call	_EnableReceiver	;wreg free
 30427                           
 30428                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 30429  001F1E  0E05               	movlw	5
 30430  001F20  D049               	goto	L64
 30431  001F22                     
 30432                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 30433  001F22  EC15  F02F         	call	_CheckTxStatus	;wreg free
 30434  001F26  0900               	iorlw	0
 30435  001F28  A4D8               	btfss	status,2,c
 30436  001F2A  D067               	goto	l194
 30437                           
 30438                           ;i2c_drv.c: 463: {
 30439                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 30440  001F2C  0100               	movlb	0	; () banked
 30441  001F2E  EE20 F002          	lfsr	2,2
 30442  001F32  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30443  001F34  26D9               	addwf	fsr2l,f,c
 30444  001F36  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30445  001F38  22DA               	addwfc	fsr2h,f,c
 30446  001F3A  CFDE F082          	movff	postinc2,??_I2c_ReadData
 30447  001F3E  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 30448  001F42  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 30449  001F46  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 30450  001F4A  EC10  F02F         	call	_ReadByte	;wreg free
 30451  001F4E  6EDF               	movwf	indf2,c
 30452                           
 30453                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 30454  001F50  0100               	movlb	0	; () banked
 30455  001F52  EE20 F002          	lfsr	2,2
 30456  001F56  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30457  001F58  26D9               	addwf	fsr2l,f,c
 30458  001F5A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30459  001F5C  22DA               	addwfc	fsr2h,f,c
 30460  001F5E  2ADE               	incf	postinc2,f,c
 30461  001F60  0E00               	movlw	0
 30462  001F62  22DD               	addwfc	postdec2,f,c
 30463                           
 30464                           ; BSR set to: 0
 30465                           ;i2c_drv.c: 469: DataCounter++;
 30466  001F64  2A33               	incf	I2c_ReadData@DataCounter,f,c
 30467                           
 30468                           ; BSR set to: 0
 30469                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 30470  001F66  0E06               	movlw	6
 30471  001F68  D025               	goto	L64
 30472  001F6A                     
 30473                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 30474                           
 30475                           ; BSR set to: 0
 30476  001F6A  0100               	movlb	0	; () banked
 30477  001F6C  EE20 F004          	lfsr	2,4
 30478  001F70  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30479  001F72  26D9               	addwf	fsr2l,f,c
 30480  001F74  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30481  001F76  22DA               	addwfc	fsr2h,f,c
 30482  001F78  50DE               	movf	postinc2,w,c
 30483  001F7A  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 30484  001F7C  A0D8               	btfss	status,0,c
 30485  001F7E  D008               	goto	l206
 30486                           
 30487                           ; BSR set to: 0
 30488                           ;i2c_drv.c: 478: {
 30489                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 30490  001F80  0E01               	movlw	1
 30491  001F82  ECB6  F02E         	call	_SetAckStatus
 30492                           
 30493                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 30494  001F86  0E07               	movlw	7
 30495  001F88  6E34               	movwf	I2c_ReadData@I2cReadState,c
 30496                           
 30497                           ;i2c_drv.c: 484: DataCounter = 0;
 30498  001F8A  0E00               	movlw	0
 30499  001F8C  6E33               	movwf	I2c_ReadData@DataCounter,c
 30500                           
 30501                           ;i2c_drv.c: 485: }
 30502  001F8E  D035               	goto	l194
 30503  001F90                     l206:
 30504                           
 30505                           ;i2c_drv.c: 486: else
 30506                           ;i2c_drv.c: 487: {
 30507                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 30508  001F90  0E00               	movlw	0
 30509  001F92  ECB6  F02E         	call	_SetAckStatus
 30510  001F96  D7BA               	goto	L65
 30511  001F98                     
 30512                           ;i2c_drv.c: 497: StopCondition();
 30513  001F98  EC2B  F02F         	call	_StopCondition	;wreg free
 30514                           
 30515                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 30516  001F9C  0E02               	movlw	2
 30517  001F9E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 30518                           
 30519                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 30520  001FA0  0E05               	movlw	5
 30521  001FA2  0100               	movlb	0	; () banked
 30522  001FA4  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 30523  001FA6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 30524  001FA8  0E00               	movlw	0
 30525  001FAA  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30526  001FAC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 30527  001FAE  EC7E  F02E         	call	_GenerateEvt	;wreg free
 30528                           
 30529                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 30530  001FB2  0E00               	movlw	0
 30531  001FB4                     L64:
 30532  001FB4  6E34               	movwf	I2c_ReadData@I2cReadState,c
 30533                           
 30534                           ;i2c_drv.c: 504: break;
 30535  001FB6  D021               	goto	l194
 30536  001FB8                     
 30537                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 30538  001FB8  0E00               	movlw	0
 30539  001FBA  6E34               	movwf	I2c_ReadData@I2cReadState,c
 30540                           
 30541                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 30542  001FBC  0E01               	movlw	1
 30543  001FBE  6E31               	movwf	I2c_ReadData@ReadStatus,c
 30544                           
 30545                           ;i2c_drv.c: 515: }
 30546                           
 30547                           ;i2c_drv.c: 514: break;
 30548                           
 30549                           ;i2c_drv.c: 513: default:
 30550                           
 30551                           ;i2c_drv.c: 511: break;
 30552  001FC0  D01C               	goto	l194
 30553  001FC2                     l192:
 30554  001FC2  5034               	movf	I2c_ReadData@I2cReadState,w,c
 30555                           
 30556                           ; Switch size 1, requested type "space"
 30557                           ; Number of cases is 9, Range of values is 0 to 8
 30558                           ; switch strategies available:
 30559                           ; Name         Instructions Cycles
 30560                           ; simple_byte           28    15 (average)
 30561                           ;	Chosen strategy is simple_byte
 30562  001FC4  0A00               	xorlw	0	; case 0
 30563  001FC6  B4D8               	btfsc	status,2,c
 30564  001FC8  D76C               	goto	l193
 30565  001FCA  0A01               	xorlw	1	; case 1
 30566  001FCC  B4D8               	btfsc	status,2,c
 30567  001FCE  D76F               	goto	l195
 30568  001FD0  0A03               	xorlw	3	; case 2
 30569  001FD2  B4D8               	btfsc	status,2,c
 30570  001FD4  D78C               	goto	l196
 30571  001FD6  0A01               	xorlw	1	; case 3
 30572  001FD8  B4D8               	btfsc	status,2,c
 30573  001FDA  D790               	goto	l198
 30574  001FDC  0A07               	xorlw	7	; case 4
 30575  001FDE  B4D8               	btfsc	status,2,c
 30576  001FE0  D79C               	goto	l202
 30577  001FE2  0A01               	xorlw	1	; case 5
 30578  001FE4  B4D8               	btfsc	status,2,c
 30579  001FE6  D79D               	goto	l203
 30580  001FE8  0A03               	xorlw	3	; case 6
 30581  001FEA  B4D8               	btfsc	status,2,c
 30582  001FEC  D7BE               	goto	l205
 30583  001FEE  0A01               	xorlw	1	; case 7
 30584  001FF0  B4D8               	btfsc	status,2,c
 30585  001FF2  D7D2               	goto	l208
 30586  001FF4  0A0F               	xorlw	15	; case 8
 30587  001FF6  B4D8               	btfsc	status,2,c
 30588  001FF8  D7DF               	goto	l209
 30589  001FFA                     l194:
 30590                           
 30591                           ;i2c_drv.c: 518: return ReadStatus;
 30592  001FFA  5031               	movf	I2c_ReadData@ReadStatus,w,c
 30593  001FFC  0012               	return	
 30594  001FFE                     __end_of_I2c_ReadData:
 30595                           	opt stack 0
 30596                           tosu	equ	0xFFF
 30597                           tosh	equ	0xFFE
 30598                           tosl	equ	0xFFD
 30599                           pclath	equ	0xFFA
 30600                           tblptru	equ	0xFF8
 30601                           tblptrh	equ	0xFF7
 30602                           tblptrl	equ	0xFF6
 30603                           tablat	equ	0xFF5
 30604                           prodh	equ	0xFF4
 30605                           prodl	equ	0xFF3
 30606                           intcon	equ	0xFF2
 30607                           intcon2	equ	0xFF1
 30608                           intcon3	equ	0xFF0
 30609                           indf0	equ	0xFEF
 30610                           postinc0	equ	0xFEE
 30611                           plusw0	equ	0xFEB
 30612                           fsr0h	equ	0xFEA
 30613                           fsr0l	equ	0xFE9
 30614                           wreg	equ	0xFE8
 30615                           indf1	equ	0xFE7
 30616                           postinc1	equ	0xFE6
 30617                           postdec1	equ	0xFE5
 30618                           plusw1	equ	0xFE3
 30619                           fsr1h	equ	0xFE2
 30620                           fsr1l	equ	0xFE1
 30621                           indf2	equ	0xFDF
 30622                           postinc2	equ	0xFDE
 30623                           postdec2	equ	0xFDD
 30624                           plusw2	equ	0xFDB
 30625                           fsr2h	equ	0xFDA
 30626                           fsr2l	equ	0xFD9
 30627                           status	equ	0xFD8
 30628                           
 30629 ;; *************** function _WriteByte *****************
 30630 ;; Defined at:
 30631 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30632 ;; Parameters:    Size  Location     Type
 30633 ;;  Byte            1    wreg     unsigned char 
 30634 ;; Auto vars:     Size  Location     Type
 30635 ;;  Byte            1   29[BANK0 ] unsigned char 
 30636 ;; Return value:  Size  Location     Type
 30637 ;;                  1    wreg      void 
 30638 ;; Registers used:
 30639 ;;		wreg
 30640 ;; Tracked objects:
 30641 ;;		On entry : 0/0
 30642 ;;		On exit  : 0/0
 30643 ;;		Unchanged: 0/0
 30644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30649 ;;Total ram usage:        1 bytes
 30650 ;; Hardware stack levels used:    1
 30651 ;; Hardware stack levels required when called:   11
 30652 ;; This function calls:
 30653 ;;		Nothing
 30654 ;; This function is called by:
 30655 ;;		_I2c_WriteData
 30656 ;;		_I2c_ReadData
 30657 ;; This function uses a non-reentrant model
 30658 ;;
 30659                           
 30660                           	psect	text140
 30661  005E16                     __ptext140:
 30662                           	opt stack 0
 30663  005E16                     _WriteByte:
 30664                           	opt stack 14
 30665                           
 30666                           ;incstack = 0
 30667                           ;WriteByte@Byte stored from wreg
 30668  005E16  0100               	movlb	0	; () banked
 30669  005E18  6F7D               	movwf	WriteByte@Byte& (0+255),b
 30670                           
 30671                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 30672  005E1A  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 30673  005E1E  0012               	return		;funcret
 30674  005E20                     __end_of_WriteByte:
 30675                           	opt stack 0
 30676                           tosu	equ	0xFFF
 30677                           tosh	equ	0xFFE
 30678                           tosl	equ	0xFFD
 30679                           pclath	equ	0xFFA
 30680                           tblptru	equ	0xFF8
 30681                           tblptrh	equ	0xFF7
 30682                           tblptrl	equ	0xFF6
 30683                           tablat	equ	0xFF5
 30684                           prodh	equ	0xFF4
 30685                           prodl	equ	0xFF3
 30686                           intcon	equ	0xFF2
 30687                           intcon2	equ	0xFF1
 30688                           intcon3	equ	0xFF0
 30689                           indf0	equ	0xFEF
 30690                           postinc0	equ	0xFEE
 30691                           plusw0	equ	0xFEB
 30692                           fsr0h	equ	0xFEA
 30693                           fsr0l	equ	0xFE9
 30694                           wreg	equ	0xFE8
 30695                           indf1	equ	0xFE7
 30696                           postinc1	equ	0xFE6
 30697                           postdec1	equ	0xFE5
 30698                           plusw1	equ	0xFE3
 30699                           fsr1h	equ	0xFE2
 30700                           fsr1l	equ	0xFE1
 30701                           indf2	equ	0xFDF
 30702                           postinc2	equ	0xFDE
 30703                           postdec2	equ	0xFDD
 30704                           plusw2	equ	0xFDB
 30705                           fsr2h	equ	0xFDA
 30706                           fsr2l	equ	0xFD9
 30707                           status	equ	0xFD8
 30708                           
 30709 ;; *************** function _StopCondition *****************
 30710 ;; Defined at:
 30711 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30712 ;; Parameters:    Size  Location     Type
 30713 ;;		None
 30714 ;; Auto vars:     Size  Location     Type
 30715 ;;		None
 30716 ;; Return value:  Size  Location     Type
 30717 ;;                  1    wreg      void 
 30718 ;; Registers used:
 30719 ;;		status,2, status,0
 30720 ;; Tracked objects:
 30721 ;;		On entry : 0/0
 30722 ;;		On exit  : 0/0
 30723 ;;		Unchanged: 0/0
 30724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30729 ;;Total ram usage:        0 bytes
 30730 ;; Hardware stack levels used:    1
 30731 ;; Hardware stack levels required when called:   11
 30732 ;; This function calls:
 30733 ;;		Nothing
 30734 ;; This function is called by:
 30735 ;;		_I2c_WriteData
 30736 ;;		_I2c_ReadData
 30737 ;; This function uses a non-reentrant model
 30738 ;;
 30739                           
 30740                           	psect	text141
 30741  005E56                     __ptext141:
 30742                           	opt stack 0
 30743  005E56                     _StopCondition:
 30744                           	opt stack 14
 30745                           
 30746                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 30747                           
 30748                           ;incstack = 0
 30749  005E56  8471               	bsf	3953,2,c	;volatile
 30750  005E58  0012               	return		;funcret
 30751  005E5A                     __end_of_StopCondition:
 30752                           	opt stack 0
 30753                           tosu	equ	0xFFF
 30754                           tosh	equ	0xFFE
 30755                           tosl	equ	0xFFD
 30756                           pclath	equ	0xFFA
 30757                           tblptru	equ	0xFF8
 30758                           tblptrh	equ	0xFF7
 30759                           tblptrl	equ	0xFF6
 30760                           tablat	equ	0xFF5
 30761                           prodh	equ	0xFF4
 30762                           prodl	equ	0xFF3
 30763                           intcon	equ	0xFF2
 30764                           intcon2	equ	0xFF1
 30765                           intcon3	equ	0xFF0
 30766                           indf0	equ	0xFEF
 30767                           postinc0	equ	0xFEE
 30768                           plusw0	equ	0xFEB
 30769                           fsr0h	equ	0xFEA
 30770                           fsr0l	equ	0xFE9
 30771                           wreg	equ	0xFE8
 30772                           indf1	equ	0xFE7
 30773                           postinc1	equ	0xFE6
 30774                           postdec1	equ	0xFE5
 30775                           plusw1	equ	0xFE3
 30776                           fsr1h	equ	0xFE2
 30777                           fsr1l	equ	0xFE1
 30778                           indf2	equ	0xFDF
 30779                           postinc2	equ	0xFDE
 30780                           postdec2	equ	0xFDD
 30781                           plusw2	equ	0xFDB
 30782                           fsr2h	equ	0xFDA
 30783                           fsr2l	equ	0xFD9
 30784                           status	equ	0xFD8
 30785                           
 30786 ;; *************** function _StartCondition *****************
 30787 ;; Defined at:
 30788 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30789 ;; Parameters:    Size  Location     Type
 30790 ;;		None
 30791 ;; Auto vars:     Size  Location     Type
 30792 ;;		None
 30793 ;; Return value:  Size  Location     Type
 30794 ;;                  1    wreg      void 
 30795 ;; Registers used:
 30796 ;;		status,2, status,0
 30797 ;; Tracked objects:
 30798 ;;		On entry : 0/0
 30799 ;;		On exit  : 0/0
 30800 ;;		Unchanged: 0/0
 30801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30806 ;;Total ram usage:        0 bytes
 30807 ;; Hardware stack levels used:    1
 30808 ;; Hardware stack levels required when called:   11
 30809 ;; This function calls:
 30810 ;;		Nothing
 30811 ;; This function is called by:
 30812 ;;		_I2c_WriteData
 30813 ;;		_I2c_ReadData
 30814 ;; This function uses a non-reentrant model
 30815 ;;
 30816                           
 30817                           	psect	text142
 30818  005E5A                     __ptext142:
 30819                           	opt stack 0
 30820  005E5A                     _StartCondition:
 30821                           	opt stack 14
 30822                           
 30823                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 30824                           
 30825                           ;incstack = 0
 30826  005E5A  8071               	bsf	3953,0,c	;volatile
 30827  005E5C  0012               	return		;funcret
 30828  005E5E                     __end_of_StartCondition:
 30829                           	opt stack 0
 30830                           tosu	equ	0xFFF
 30831                           tosh	equ	0xFFE
 30832                           tosl	equ	0xFFD
 30833                           pclath	equ	0xFFA
 30834                           tblptru	equ	0xFF8
 30835                           tblptrh	equ	0xFF7
 30836                           tblptrl	equ	0xFF6
 30837                           tablat	equ	0xFF5
 30838                           prodh	equ	0xFF4
 30839                           prodl	equ	0xFF3
 30840                           intcon	equ	0xFF2
 30841                           intcon2	equ	0xFF1
 30842                           intcon3	equ	0xFF0
 30843                           indf0	equ	0xFEF
 30844                           postinc0	equ	0xFEE
 30845                           plusw0	equ	0xFEB
 30846                           fsr0h	equ	0xFEA
 30847                           fsr0l	equ	0xFE9
 30848                           wreg	equ	0xFE8
 30849                           indf1	equ	0xFE7
 30850                           postinc1	equ	0xFE6
 30851                           postdec1	equ	0xFE5
 30852                           plusw1	equ	0xFE3
 30853                           fsr1h	equ	0xFE2
 30854                           fsr1l	equ	0xFE1
 30855                           indf2	equ	0xFDF
 30856                           postinc2	equ	0xFDE
 30857                           postdec2	equ	0xFDD
 30858                           plusw2	equ	0xFDB
 30859                           fsr2h	equ	0xFDA
 30860                           fsr2l	equ	0xFD9
 30861                           status	equ	0xFD8
 30862                           
 30863 ;; *************** function _SetAckStatus *****************
 30864 ;; Defined at:
 30865 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30866 ;; Parameters:    Size  Location     Type
 30867 ;;  AckSts          1    wreg     unsigned char 
 30868 ;; Auto vars:     Size  Location     Type
 30869 ;;  AckSts          1   29[BANK0 ] unsigned char 
 30870 ;; Return value:  Size  Location     Type
 30871 ;;                  1    wreg      void 
 30872 ;; Registers used:
 30873 ;;		wreg
 30874 ;; Tracked objects:
 30875 ;;		On entry : 0/0
 30876 ;;		On exit  : 0/0
 30877 ;;		Unchanged: 0/0
 30878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30880 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30882 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30883 ;;Total ram usage:        1 bytes
 30884 ;; Hardware stack levels used:    1
 30885 ;; Hardware stack levels required when called:   11
 30886 ;; This function calls:
 30887 ;;		Nothing
 30888 ;; This function is called by:
 30889 ;;		_I2c_ReadData
 30890 ;; This function uses a non-reentrant model
 30891 ;;
 30892                           
 30893                           	psect	text143
 30894  005D6C                     __ptext143:
 30895                           	opt stack 0
 30896  005D6C                     _SetAckStatus:
 30897                           	opt stack 14
 30898                           
 30899                           ;incstack = 0
 30900                           ;SetAckStatus@AckSts stored from wreg
 30901  005D6C  0100               	movlb	0	; () banked
 30902  005D6E  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 30903                           
 30904                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 30905  005D70  0100               	movlb	0	; () banked
 30906  005D72  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 30907  005D74  D002               	bra	u6045
 30908  005D76  9A71               	bcf	3953,5,c	;volatile
 30909  005D78  D001               	bra	u6046
 30910  005D7A                     u6045:
 30911  005D7A  8A71               	bsf	3953,5,c	;volatile
 30912  005D7C                     u6046:
 30913                           
 30914                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 30915  005D7C  8871               	bsf	3953,4,c	;volatile
 30916  005D7E  0012               	return		;funcret
 30917  005D80                     __end_of_SetAckStatus:
 30918                           	opt stack 0
 30919                           tosu	equ	0xFFF
 30920                           tosh	equ	0xFFE
 30921                           tosl	equ	0xFFD
 30922                           pclath	equ	0xFFA
 30923                           tblptru	equ	0xFF8
 30924                           tblptrh	equ	0xFF7
 30925                           tblptrl	equ	0xFF6
 30926                           tablat	equ	0xFF5
 30927                           prodh	equ	0xFF4
 30928                           prodl	equ	0xFF3
 30929                           intcon	equ	0xFF2
 30930                           intcon2	equ	0xFF1
 30931                           intcon3	equ	0xFF0
 30932                           indf0	equ	0xFEF
 30933                           postinc0	equ	0xFEE
 30934                           plusw0	equ	0xFEB
 30935                           fsr0h	equ	0xFEA
 30936                           fsr0l	equ	0xFE9
 30937                           wreg	equ	0xFE8
 30938                           indf1	equ	0xFE7
 30939                           postinc1	equ	0xFE6
 30940                           postdec1	equ	0xFE5
 30941                           plusw1	equ	0xFE3
 30942                           fsr1h	equ	0xFE2
 30943                           fsr1l	equ	0xFE1
 30944                           indf2	equ	0xFDF
 30945                           postinc2	equ	0xFDE
 30946                           postdec2	equ	0xFDD
 30947                           plusw2	equ	0xFDB
 30948                           fsr2h	equ	0xFDA
 30949                           fsr2l	equ	0xFD9
 30950                           status	equ	0xFD8
 30951                           
 30952 ;; *************** function _ReadByte *****************
 30953 ;; Defined at:
 30954 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30955 ;; Parameters:    Size  Location     Type
 30956 ;;		None
 30957 ;; Auto vars:     Size  Location     Type
 30958 ;;  Byte            1   29[BANK0 ] unsigned char 
 30959 ;; Return value:  Size  Location     Type
 30960 ;;                  1    wreg      unsigned char 
 30961 ;; Registers used:
 30962 ;;		wreg, status,2
 30963 ;; Tracked objects:
 30964 ;;		On entry : 0/0
 30965 ;;		On exit  : 0/0
 30966 ;;		Unchanged: 0/0
 30967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30971 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30972 ;;Total ram usage:        1 bytes
 30973 ;; Hardware stack levels used:    1
 30974 ;; Hardware stack levels required when called:   11
 30975 ;; This function calls:
 30976 ;;		Nothing
 30977 ;; This function is called by:
 30978 ;;		_I2c_ReadData
 30979 ;; This function uses a non-reentrant model
 30980 ;;
 30981                           
 30982                           	psect	text144
 30983  005E20                     __ptext144:
 30984                           	opt stack 0
 30985  005E20                     _ReadByte:
 30986                           	opt stack 14
 30987                           
 30988                           ;i2c_drv.c: 207: UINT8 Byte;
 30989                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 30990                           
 30991                           ;incstack = 0
 30992  005E20  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 30993                           
 30994                           ;i2c_drv.c: 213: return Byte;
 30995  005E24  0100               	movlb	0	; () banked
 30996  005E26  517D               	movf	ReadByte@Byte& (0+255),w,b
 30997  005E28  0012               	return	
 30998  005E2A                     __end_of_ReadByte:
 30999                           	opt stack 0
 31000                           tosu	equ	0xFFF
 31001                           tosh	equ	0xFFE
 31002                           tosl	equ	0xFFD
 31003                           pclath	equ	0xFFA
 31004                           tblptru	equ	0xFF8
 31005                           tblptrh	equ	0xFF7
 31006                           tblptrl	equ	0xFF6
 31007                           tablat	equ	0xFF5
 31008                           prodh	equ	0xFF4
 31009                           prodl	equ	0xFF3
 31010                           intcon	equ	0xFF2
 31011                           intcon2	equ	0xFF1
 31012                           intcon3	equ	0xFF0
 31013                           indf0	equ	0xFEF
 31014                           postinc0	equ	0xFEE
 31015                           plusw0	equ	0xFEB
 31016                           fsr0h	equ	0xFEA
 31017                           fsr0l	equ	0xFE9
 31018                           wreg	equ	0xFE8
 31019                           indf1	equ	0xFE7
 31020                           postinc1	equ	0xFE6
 31021                           postdec1	equ	0xFE5
 31022                           plusw1	equ	0xFE3
 31023                           fsr1h	equ	0xFE2
 31024                           fsr1l	equ	0xFE1
 31025                           indf2	equ	0xFDF
 31026                           postinc2	equ	0xFDE
 31027                           postdec2	equ	0xFDD
 31028                           plusw2	equ	0xFDB
 31029                           fsr2h	equ	0xFDA
 31030                           fsr2l	equ	0xFD9
 31031                           status	equ	0xFD8
 31032                           
 31033 ;; *************** function _GenerateEvt *****************
 31034 ;; Defined at:
 31035 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 31036 ;; Parameters:    Size  Location     Type
 31037 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 31038 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 31039 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 31040 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 31041 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 31042 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 31043 ;; Auto vars:     Size  Location     Type
 31044 ;;  EventStatus     1   31[BANK0 ] enum E7727
 31045 ;; Return value:  Size  Location     Type
 31046 ;;                  1    wreg      enum E7699
 31047 ;; Registers used:
 31048 ;;		wreg, fsr2l, fsr2h, status,2
 31049 ;; Tracked objects:
 31050 ;;		On entry : 0/0
 31051 ;;		On exit  : 0/0
 31052 ;;		Unchanged: 0/0
 31053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31057 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31058 ;;Total ram usage:        3 bytes
 31059 ;; Hardware stack levels used:    1
 31060 ;; Hardware stack levels required when called:   11
 31061 ;; This function calls:
 31062 ;;		Nothing
 31063 ;; This function is called by:
 31064 ;;		_I2c_ReadData
 31065 ;;		_CheckModem
 31066 ;;		_TurnOnModem
 31067 ;;		_ConfigureModem
 31068 ;;		_ModemEvtParser
 31069 ;;		_GetSmsSm
 31070 ;;		_I2cSlv_SendI2cMsg
 31071 ;;		_I2cSlv_ReceiveI2cMsg
 31072 ;;		_RiSm
 31073 ;;		_Mdm_RequestSmsData
 31074 ;;		_Mdm_SendSmsData
 31075 ;;		_MdmHttp_InitGprsNetwork
 31076 ;;		_MdmHttp_GetMethod
 31077 ;;		_Alarm
 31078 ;; This function uses a non-reentrant model
 31079 ;;
 31080                           
 31081                           	psect	text145
 31082  005CFC                     __ptext145:
 31083                           	opt stack 0
 31084  005CFC                     _GenerateEvt:
 31085                           	opt stack 13
 31086                           
 31087                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 31088                           
 31089                           ; BSR set to: 0
 31090                           ;incstack = 0
 31091  005CFC  0E00               	movlw	0
 31092  005CFE  0100               	movlb	0	; () banked
 31093  005D00  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 31094                           
 31095                           ; BSR set to: 0
 31096                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 31097  005D02  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 31098  005D06  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 31099  005D0A  0E02               	movlw	2
 31100  005D0C  6EDF               	movwf	indf2,c
 31101                           
 31102                           ; BSR set to: 0
 31103                           ;os_ser.c: 83: EventStatus = EventSent;
 31104  005D0E  0E02               	movlw	2
 31105  005D10  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 31106  005D12  0012               	return	
 31107  005D14                     __end_of_GenerateEvt:
 31108                           	opt stack 0
 31109                           tosu	equ	0xFFF
 31110                           tosh	equ	0xFFE
 31111                           tosl	equ	0xFFD
 31112                           pclath	equ	0xFFA
 31113                           tblptru	equ	0xFF8
 31114                           tblptrh	equ	0xFF7
 31115                           tblptrl	equ	0xFF6
 31116                           tablat	equ	0xFF5
 31117                           prodh	equ	0xFF4
 31118                           prodl	equ	0xFF3
 31119                           intcon	equ	0xFF2
 31120                           intcon2	equ	0xFF1
 31121                           intcon3	equ	0xFF0
 31122                           indf0	equ	0xFEF
 31123                           postinc0	equ	0xFEE
 31124                           plusw0	equ	0xFEB
 31125                           fsr0h	equ	0xFEA
 31126                           fsr0l	equ	0xFE9
 31127                           wreg	equ	0xFE8
 31128                           indf1	equ	0xFE7
 31129                           postinc1	equ	0xFE6
 31130                           postdec1	equ	0xFE5
 31131                           plusw1	equ	0xFE3
 31132                           fsr1h	equ	0xFE2
 31133                           fsr1l	equ	0xFE1
 31134                           indf2	equ	0xFDF
 31135                           postinc2	equ	0xFDE
 31136                           postdec2	equ	0xFDD
 31137                           plusw2	equ	0xFDB
 31138                           fsr2h	equ	0xFDA
 31139                           fsr2l	equ	0xFD9
 31140                           status	equ	0xFD8
 31141                           
 31142 ;; *************** function _EnableReceiver *****************
 31143 ;; Defined at:
 31144 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31145 ;; Parameters:    Size  Location     Type
 31146 ;;		None
 31147 ;; Auto vars:     Size  Location     Type
 31148 ;;		None
 31149 ;; Return value:  Size  Location     Type
 31150 ;;                  1    wreg      void 
 31151 ;; Registers used:
 31152 ;;		status,2, status,0
 31153 ;; Tracked objects:
 31154 ;;		On entry : 0/0
 31155 ;;		On exit  : 0/0
 31156 ;;		Unchanged: 0/0
 31157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31162 ;;Total ram usage:        0 bytes
 31163 ;; Hardware stack levels used:    1
 31164 ;; Hardware stack levels required when called:   11
 31165 ;; This function calls:
 31166 ;;		Nothing
 31167 ;; This function is called by:
 31168 ;;		_I2c_ReadData
 31169 ;; This function uses a non-reentrant model
 31170 ;;
 31171                           
 31172                           	psect	text146
 31173  005E5E                     __ptext146:
 31174                           	opt stack 0
 31175  005E5E                     _EnableReceiver:
 31176                           	opt stack 14
 31177                           
 31178                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 31179                           
 31180                           ; BSR set to: 0
 31181                           ;incstack = 0
 31182  005E5E  8671               	bsf	3953,3,c	;volatile
 31183  005E60  0012               	return		;funcret
 31184  005E62                     __end_of_EnableReceiver:
 31185                           	opt stack 0
 31186                           tosu	equ	0xFFF
 31187                           tosh	equ	0xFFE
 31188                           tosl	equ	0xFFD
 31189                           pclath	equ	0xFFA
 31190                           tblptru	equ	0xFF8
 31191                           tblptrh	equ	0xFF7
 31192                           tblptrl	equ	0xFF6
 31193                           tablat	equ	0xFF5
 31194                           prodh	equ	0xFF4
 31195                           prodl	equ	0xFF3
 31196                           intcon	equ	0xFF2
 31197                           intcon2	equ	0xFF1
 31198                           intcon3	equ	0xFF0
 31199                           indf0	equ	0xFEF
 31200                           postinc0	equ	0xFEE
 31201                           plusw0	equ	0xFEB
 31202                           fsr0h	equ	0xFEA
 31203                           fsr0l	equ	0xFE9
 31204                           wreg	equ	0xFE8
 31205                           indf1	equ	0xFE7
 31206                           postinc1	equ	0xFE6
 31207                           postdec1	equ	0xFE5
 31208                           plusw1	equ	0xFE3
 31209                           fsr1h	equ	0xFE2
 31210                           fsr1l	equ	0xFE1
 31211                           indf2	equ	0xFDF
 31212                           postinc2	equ	0xFDE
 31213                           postdec2	equ	0xFDD
 31214                           plusw2	equ	0xFDB
 31215                           fsr2h	equ	0xFDA
 31216                           fsr2l	equ	0xFD9
 31217                           status	equ	0xFD8
 31218                           
 31219 ;; *************** function _CheckTxStatus *****************
 31220 ;; Defined at:
 31221 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31222 ;; Parameters:    Size  Location     Type
 31223 ;;		None
 31224 ;; Auto vars:     Size  Location     Type
 31225 ;;		None
 31226 ;; Return value:  Size  Location     Type
 31227 ;;                  1    wreg      unsigned char 
 31228 ;; Registers used:
 31229 ;;		wreg, status,2, status,0
 31230 ;; Tracked objects:
 31231 ;;		On entry : 0/0
 31232 ;;		On exit  : 0/0
 31233 ;;		Unchanged: 0/0
 31234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31239 ;;Total ram usage:        0 bytes
 31240 ;; Hardware stack levels used:    1
 31241 ;; Hardware stack levels required when called:   11
 31242 ;; This function calls:
 31243 ;;		Nothing
 31244 ;; This function is called by:
 31245 ;;		_I2c_WriteData
 31246 ;;		_I2c_ReadData
 31247 ;; This function uses a non-reentrant model
 31248 ;;
 31249                           
 31250                           	psect	text147
 31251  005E2A                     __ptext147:
 31252                           	opt stack 0
 31253  005E2A                     _CheckTxStatus:
 31254                           	opt stack 14
 31255                           
 31256                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 31257                           
 31258                           ;incstack = 0
 31259  005E2A  4073               	rrncf	3955,w,c	;volatile
 31260  005E2C  42E8               	rrncf	wreg,f,c
 31261  005E2E  0B3F               	andlw	63
 31262  005E30  0B01               	andlw	1
 31263  005E32  0012               	return	
 31264  005E34                     __end_of_CheckTxStatus:
 31265                           	opt stack 0
 31266                           tosu	equ	0xFFF
 31267                           tosh	equ	0xFFE
 31268                           tosl	equ	0xFFD
 31269                           pclath	equ	0xFFA
 31270                           tblptru	equ	0xFF8
 31271                           tblptrh	equ	0xFF7
 31272                           tblptrl	equ	0xFF6
 31273                           tablat	equ	0xFF5
 31274                           prodh	equ	0xFF4
 31275                           prodl	equ	0xFF3
 31276                           intcon	equ	0xFF2
 31277                           intcon2	equ	0xFF1
 31278                           intcon3	equ	0xFF0
 31279                           indf0	equ	0xFEF
 31280                           postinc0	equ	0xFEE
 31281                           plusw0	equ	0xFEB
 31282                           fsr0h	equ	0xFEA
 31283                           fsr0l	equ	0xFE9
 31284                           wreg	equ	0xFE8
 31285                           indf1	equ	0xFE7
 31286                           postinc1	equ	0xFE6
 31287                           postdec1	equ	0xFE5
 31288                           plusw1	equ	0xFE3
 31289                           fsr1h	equ	0xFE2
 31290                           fsr1l	equ	0xFE1
 31291                           indf2	equ	0xFDF
 31292                           postinc2	equ	0xFDE
 31293                           postdec2	equ	0xFDD
 31294                           plusw2	equ	0xFDB
 31295                           fsr2h	equ	0xFDA
 31296                           fsr2l	equ	0xFD9
 31297                           status	equ	0xFD8
 31298                           
 31299 ;; *************** function _CheckAckStatus *****************
 31300 ;; Defined at:
 31301 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31302 ;; Parameters:    Size  Location     Type
 31303 ;;		None
 31304 ;; Auto vars:     Size  Location     Type
 31305 ;;		None
 31306 ;; Return value:  Size  Location     Type
 31307 ;;                  1    wreg      unsigned char 
 31308 ;; Registers used:
 31309 ;;		wreg, status,2, status,0
 31310 ;; Tracked objects:
 31311 ;;		On entry : 0/0
 31312 ;;		On exit  : 0/0
 31313 ;;		Unchanged: 0/0
 31314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31319 ;;Total ram usage:        0 bytes
 31320 ;; Hardware stack levels used:    1
 31321 ;; Hardware stack levels required when called:   11
 31322 ;; This function calls:
 31323 ;;		Nothing
 31324 ;; This function is called by:
 31325 ;;		_I2c_WriteData
 31326 ;;		_I2c_ReadData
 31327 ;; This function uses a non-reentrant model
 31328 ;;
 31329                           
 31330                           	psect	text148
 31331  005E34                     __ptext148:
 31332                           	opt stack 0
 31333  005E34                     _CheckAckStatus:
 31334                           	opt stack 14
 31335                           
 31336                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 31337                           
 31338                           ;incstack = 0
 31339  005E34  4471               	rlncf	3953,w,c	;volatile
 31340  005E36  46E8               	rlncf	wreg,f,c
 31341  005E38  0B03               	andlw	3
 31342  005E3A  0B01               	andlw	1
 31343  005E3C  0012               	return	
 31344  005E3E                     __end_of_CheckAckStatus:
 31345                           	opt stack 0
 31346                           tosu	equ	0xFFF
 31347                           tosh	equ	0xFFE
 31348                           tosl	equ	0xFFD
 31349                           pclath	equ	0xFFA
 31350                           tblptru	equ	0xFF8
 31351                           tblptrh	equ	0xFF7
 31352                           tblptrl	equ	0xFF6
 31353                           tablat	equ	0xFF5
 31354                           prodh	equ	0xFF4
 31355                           prodl	equ	0xFF3
 31356                           intcon	equ	0xFF2
 31357                           intcon2	equ	0xFF1
 31358                           intcon3	equ	0xFF0
 31359                           indf0	equ	0xFEF
 31360                           postinc0	equ	0xFEE
 31361                           plusw0	equ	0xFEB
 31362                           fsr0h	equ	0xFEA
 31363                           fsr0l	equ	0xFE9
 31364                           wreg	equ	0xFE8
 31365                           indf1	equ	0xFE7
 31366                           postinc1	equ	0xFE6
 31367                           postdec1	equ	0xFE5
 31368                           plusw1	equ	0xFE3
 31369                           fsr1h	equ	0xFE2
 31370                           fsr1l	equ	0xFE1
 31371                           indf2	equ	0xFDF
 31372                           postinc2	equ	0xFDE
 31373                           postdec2	equ	0xFDD
 31374                           plusw2	equ	0xFDB
 31375                           fsr2h	equ	0xFDA
 31376                           fsr2l	equ	0xFD9
 31377                           status	equ	0xFD8
 31378                           
 31379 ;; *************** function _LowPriorityIsr *****************
 31380 ;; Defined at:
 31381 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 31382 ;; Parameters:    Size  Location     Type
 31383 ;;		None
 31384 ;; Auto vars:     Size  Location     Type
 31385 ;;		None
 31386 ;; Return value:  Size  Location     Type
 31387 ;;                  1    wreg      void 
 31388 ;; Registers used:
 31389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31390 ;; Tracked objects:
 31391 ;;		On entry : 0/0
 31392 ;;		On exit  : 0/0
 31393 ;;		Unchanged: 0/0
 31394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31397 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31398 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31399 ;;Total ram usage:       21 bytes
 31400 ;; Hardware stack levels used:    1
 31401 ;; Hardware stack levels required when called:   10
 31402 ;; This function calls:
 31403 ;;		_Tmr_Tmr2Isr
 31404 ;; This function is called by:
 31405 ;;		Interrupt level 1
 31406 ;; This function uses a non-reentrant model
 31407 ;;
 31408                           
 31409                           	psect	intcodelo
 31410  000018                     __pintcodelo:
 31411                           	opt stack 0
 31412  000018                     _LowPriorityIsr:
 31413                           	opt stack 8
 31414                           
 31415                           ;incstack = 0
 31416  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 31417  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 31418  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 31419  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 31420  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 31421  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 31422  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 31423  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 31424  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 31425  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 31426  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 31427  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 31428  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 31429  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 31430  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 31431  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 31432  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 31433  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 31434  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 31435  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 31436  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 31437  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 31438                           
 31439                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 31440  00006E  B29E               	btfsc	3998,1,c	;volatile
 31441                           
 31442                           ;irq.c: 259: {
 31443                           ;irq.c: 261: Tmr_Tmr2Isr();
 31444  000070  EC7A  F02D         	call	_Tmr_Tmr2Isr	;wreg free
 31445  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 31446  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 31447  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 31448  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 31449  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 31450  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 31451  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 31452  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 31453  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 31454  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 31455  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 31456  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 31457  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 31458  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 31459  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 31460  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 31461  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 31462  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 31463  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 31464  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 31465  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 31466  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 31467  0000CA  0010               	retfie	
 31468  0000CC                     __end_of_LowPriorityIsr:
 31469                           	opt stack 0
 31470                           tosu	equ	0xFFF
 31471                           tosh	equ	0xFFE
 31472                           tosl	equ	0xFFD
 31473                           pclatu	equ	0xFFB
 31474                           pclath	equ	0xFFA
 31475                           tblptru	equ	0xFF8
 31476                           tblptrh	equ	0xFF7
 31477                           tblptrl	equ	0xFF6
 31478                           tablat	equ	0xFF5
 31479                           prodh	equ	0xFF4
 31480                           prodl	equ	0xFF3
 31481                           intcon	equ	0xFF2
 31482                           intcon2	equ	0xFF1
 31483                           intcon3	equ	0xFF0
 31484                           indf0	equ	0xFEF
 31485                           postinc0	equ	0xFEE
 31486                           plusw0	equ	0xFEB
 31487                           fsr0h	equ	0xFEA
 31488                           fsr0l	equ	0xFE9
 31489                           wreg	equ	0xFE8
 31490                           indf1	equ	0xFE7
 31491                           postinc1	equ	0xFE6
 31492                           postdec1	equ	0xFE5
 31493                           plusw1	equ	0xFE3
 31494                           fsr1h	equ	0xFE2
 31495                           fsr1l	equ	0xFE1
 31496                           bsr	equ	0xFE0
 31497                           indf2	equ	0xFDF
 31498                           postinc2	equ	0xFDE
 31499                           postdec2	equ	0xFDD
 31500                           plusw2	equ	0xFDB
 31501                           fsr2h	equ	0xFDA
 31502                           fsr2l	equ	0xFD9
 31503                           status	equ	0xFD8
 31504                           
 31505 ;; *************** function _Tmr_Tmr2Isr *****************
 31506 ;; Defined at:
 31507 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 31508 ;; Parameters:    Size  Location     Type
 31509 ;;		None
 31510 ;; Auto vars:     Size  Location     Type
 31511 ;;		None
 31512 ;; Return value:  Size  Location     Type
 31513 ;;                  1    wreg      void 
 31514 ;; Registers used:
 31515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31516 ;; Tracked objects:
 31517 ;;		On entry : 0/0
 31518 ;;		On exit  : 0/0
 31519 ;;		Unchanged: 0/0
 31520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31525 ;;Total ram usage:        0 bytes
 31526 ;; Hardware stack levels used:    1
 31527 ;; Hardware stack levels required when called:    9
 31528 ;; This function calls:
 31529 ;;		Absolute function
 31530 ;;		_Sch_SchmIntService
 31531 ;; This function is called by:
 31532 ;;		_LowPriorityIsr
 31533 ;; This function uses a non-reentrant model
 31534 ;;
 31535                           
 31536                           	psect	text150
 31537  005AF4                     __ptext150:
 31538                           	opt stack 0
 31539  005AF4                     _Tmr_Tmr2Isr:
 31540                           	opt stack 8
 31541                           
 31542                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 31543                           
 31544                           ;incstack = 0
 31545  005AF4  929E               	bcf	3998,1,c	;volatile
 31546                           
 31547                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 31548  005AF6  0101               	movlb	1	; () banked
 31549  005AF8  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 31550  005AFA  11D4               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 31551  005AFC  B4D8               	btfsc	status,2,c
 31552  005AFE  0012               	return	
 31553                           
 31554                           ; BSR set to: 1
 31555                           ;tmr_drv.c: 315: {
 31556                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 31557  005B00  D801               	call	i1u1336_28
 31558  005B02  0012               	return	
 31559  005B04                     i1u1336_28:
 31560  005B04  0005               	push	
 31561  005B06  6EFA               	movwf	pclath,c
 31562  005B08  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 31563  005B0A  6EFD               	movwf	tosl,c
 31564  005B0C  51D4               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 31565  005B0E  6EFE               	movwf	tosh,c
 31566  005B10  50F8               	movf	tblptru,w,c
 31567  005B12  6EFF               	movwf	tosu,c
 31568  005B14  50FA               	movf	pclath,w,c
 31569  005B16  0012               	return		;indir
 31570  005B18                     __end_of_Tmr_Tmr2Isr:
 31571                           	opt stack 0
 31572                           tosu	equ	0xFFF
 31573                           tosh	equ	0xFFE
 31574                           tosl	equ	0xFFD
 31575                           pclatu	equ	0xFFB
 31576                           pclath	equ	0xFFA
 31577                           tblptru	equ	0xFF8
 31578                           tblptrh	equ	0xFF7
 31579                           tblptrl	equ	0xFF6
 31580                           tablat	equ	0xFF5
 31581                           prodh	equ	0xFF4
 31582                           prodl	equ	0xFF3
 31583                           intcon	equ	0xFF2
 31584                           intcon2	equ	0xFF1
 31585                           intcon3	equ	0xFF0
 31586                           indf0	equ	0xFEF
 31587                           postinc0	equ	0xFEE
 31588                           plusw0	equ	0xFEB
 31589                           fsr0h	equ	0xFEA
 31590                           fsr0l	equ	0xFE9
 31591                           wreg	equ	0xFE8
 31592                           indf1	equ	0xFE7
 31593                           postinc1	equ	0xFE6
 31594                           postdec1	equ	0xFE5
 31595                           plusw1	equ	0xFE3
 31596                           fsr1h	equ	0xFE2
 31597                           fsr1l	equ	0xFE1
 31598                           bsr	equ	0xFE0
 31599                           indf2	equ	0xFDF
 31600                           postinc2	equ	0xFDE
 31601                           postdec2	equ	0xFDD
 31602                           plusw2	equ	0xFDB
 31603                           fsr2h	equ	0xFDA
 31604                           fsr2l	equ	0xFD9
 31605                           status	equ	0xFD8
 31606                           
 31607 ;; *************** function _Sch_SchmIntService *****************
 31608 ;; Defined at:
 31609 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 31610 ;; Parameters:    Size  Location     Type
 31611 ;;		None
 31612 ;; Auto vars:     Size  Location     Type
 31613 ;;		None
 31614 ;; Return value:  Size  Location     Type
 31615 ;;                  1    wreg      void 
 31616 ;; Registers used:
 31617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31618 ;; Tracked objects:
 31619 ;;		On entry : 0/0
 31620 ;;		On exit  : 0/0
 31621 ;;		Unchanged: 0/0
 31622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31627 ;;Total ram usage:        0 bytes
 31628 ;; Hardware stack levels used:    1
 31629 ;; Hardware stack levels required when called:    8
 31630 ;; This function calls:
 31631 ;;		_OsAlrm_ProcessOsAlarms
 31632 ;;		_UpdateOsCounters
 31633 ;;		_UpdateSchFlag
 31634 ;; This function is called by:
 31635 ;;		_SystemInit
 31636 ;;		_Tmr_Tmr2Isr
 31637 ;; This function uses a non-reentrant model
 31638 ;;
 31639                           
 31640                           	psect	text151
 31641  005DE4                     __ptext151:
 31642                           	opt stack 0
 31643  005DE4                     _Sch_SchmIntService:
 31644                           	opt stack 8
 31645                           
 31646                           ;os_sched.c: 217: UpdateSchFlag();
 31647                           
 31648                           ;incstack = 0
 31649  005DE4  EC30  F02E         	call	_UpdateSchFlag	;wreg free
 31650                           
 31651                           ;os_sched.c: 219: UpdateOsCounters();
 31652  005DE8  ECE2  F02E         	call	_UpdateOsCounters	;wreg free
 31653                           
 31654                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 31655  005DEC  ECAA  F010         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 31656  005DF0  0012               	return		;funcret
 31657  005DF2                     __end_of_Sch_SchmIntService:
 31658                           	opt stack 0
 31659                           tosu	equ	0xFFF
 31660                           tosh	equ	0xFFE
 31661                           tosl	equ	0xFFD
 31662                           pclatu	equ	0xFFB
 31663                           pclath	equ	0xFFA
 31664                           tblptru	equ	0xFF8
 31665                           tblptrh	equ	0xFF7
 31666                           tblptrl	equ	0xFF6
 31667                           tablat	equ	0xFF5
 31668                           prodh	equ	0xFF4
 31669                           prodl	equ	0xFF3
 31670                           intcon	equ	0xFF2
 31671                           intcon2	equ	0xFF1
 31672                           intcon3	equ	0xFF0
 31673                           indf0	equ	0xFEF
 31674                           postinc0	equ	0xFEE
 31675                           plusw0	equ	0xFEB
 31676                           fsr0h	equ	0xFEA
 31677                           fsr0l	equ	0xFE9
 31678                           wreg	equ	0xFE8
 31679                           indf1	equ	0xFE7
 31680                           postinc1	equ	0xFE6
 31681                           postdec1	equ	0xFE5
 31682                           plusw1	equ	0xFE3
 31683                           fsr1h	equ	0xFE2
 31684                           fsr1l	equ	0xFE1
 31685                           bsr	equ	0xFE0
 31686                           indf2	equ	0xFDF
 31687                           postinc2	equ	0xFDE
 31688                           postdec2	equ	0xFDD
 31689                           plusw2	equ	0xFDB
 31690                           fsr2h	equ	0xFDA
 31691                           fsr2l	equ	0xFD9
 31692                           status	equ	0xFD8
 31693                           
 31694 ;; *************** function _UpdateSchFlag *****************
 31695 ;; Defined at:
 31696 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 31697 ;; Parameters:    Size  Location     Type
 31698 ;;		None
 31699 ;; Auto vars:     Size  Location     Type
 31700 ;;		None
 31701 ;; Return value:  Size  Location     Type
 31702 ;;                  1    wreg      void 
 31703 ;; Registers used:
 31704 ;;		wreg, status,2, status,0
 31705 ;; Tracked objects:
 31706 ;;		On entry : 0/0
 31707 ;;		On exit  : 0/0
 31708 ;;		Unchanged: 0/0
 31709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31714 ;;Total ram usage:        0 bytes
 31715 ;; Hardware stack levels used:    1
 31716 ;; Hardware stack levels required when called:    4
 31717 ;; This function calls:
 31718 ;;		Nothing
 31719 ;; This function is called by:
 31720 ;;		_Sch_SchmIntService
 31721 ;; This function uses a non-reentrant model
 31722 ;;
 31723                           
 31724                           	psect	text152
 31725  005C60                     __ptext152:
 31726                           	opt stack 0
 31727  005C60                     _UpdateSchFlag:
 31728                           	opt stack 11
 31729                           
 31730                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 31731                           ;os_sched.c: 138: InterruptCounter++;
 31732                           
 31733                           ;incstack = 0
 31734  005C60  0102               	movlb	2	; () banked
 31735  005C62  4BDE               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 31736  005C64  2BDF               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 31737                           
 31738                           ; BSR set to: 2
 31739                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 31740  005C66  51DE               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 31741  005C68  11DF               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 31742  005C6A  B4D8               	btfsc	status,2,c
 31743  005C6C  0012               	return	
 31744                           
 31745                           ; BSR set to: 2
 31746                           ;os_sched.c: 141: {
 31747                           ;os_sched.c: 143: InterruptCounter = 0;
 31748  005C6E  0E00               	movlw	0
 31749  005C70  6FDF               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 31750  005C72  0E00               	movlw	0
 31751  005C74  6FDE               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 31752                           
 31753                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 31754  005C76  0E00               	movlw	0
 31755  005C78  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 31756  005C7A  0012               	return	
 31757  005C7C                     __end_of_UpdateSchFlag:
 31758                           	opt stack 0
 31759                           tosu	equ	0xFFF
 31760                           tosh	equ	0xFFE
 31761                           tosl	equ	0xFFD
 31762                           pclatu	equ	0xFFB
 31763                           pclath	equ	0xFFA
 31764                           tblptru	equ	0xFF8
 31765                           tblptrh	equ	0xFF7
 31766                           tblptrl	equ	0xFF6
 31767                           tablat	equ	0xFF5
 31768                           prodh	equ	0xFF4
 31769                           prodl	equ	0xFF3
 31770                           intcon	equ	0xFF2
 31771                           intcon2	equ	0xFF1
 31772                           intcon3	equ	0xFF0
 31773                           indf0	equ	0xFEF
 31774                           postinc0	equ	0xFEE
 31775                           plusw0	equ	0xFEB
 31776                           fsr0h	equ	0xFEA
 31777                           fsr0l	equ	0xFE9
 31778                           wreg	equ	0xFE8
 31779                           indf1	equ	0xFE7
 31780                           postinc1	equ	0xFE6
 31781                           postdec1	equ	0xFE5
 31782                           plusw1	equ	0xFE3
 31783                           fsr1h	equ	0xFE2
 31784                           fsr1l	equ	0xFE1
 31785                           bsr	equ	0xFE0
 31786                           indf2	equ	0xFDF
 31787                           postinc2	equ	0xFDE
 31788                           postdec2	equ	0xFDD
 31789                           plusw2	equ	0xFDB
 31790                           fsr2h	equ	0xFDA
 31791                           fsr2l	equ	0xFD9
 31792                           status	equ	0xFD8
 31793                           
 31794 ;; *************** function _UpdateOsCounters *****************
 31795 ;; Defined at:
 31796 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 31797 ;; Parameters:    Size  Location     Type
 31798 ;;		None
 31799 ;; Auto vars:     Size  Location     Type
 31800 ;;		None
 31801 ;; Return value:  Size  Location     Type
 31802 ;;                  1    wreg      void 
 31803 ;; Registers used:
 31804 ;;		wreg, status,2, status,0
 31805 ;; Tracked objects:
 31806 ;;		On entry : 0/0
 31807 ;;		On exit  : 0/0
 31808 ;;		Unchanged: 0/0
 31809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31814 ;;Total ram usage:        0 bytes
 31815 ;; Hardware stack levels used:    1
 31816 ;; Hardware stack levels required when called:    4
 31817 ;; This function calls:
 31818 ;;		Nothing
 31819 ;; This function is called by:
 31820 ;;		_Sch_SchmIntService
 31821 ;; This function uses a non-reentrant model
 31822 ;;
 31823                           
 31824                           	psect	text153
 31825  005DC4                     __ptext153:
 31826                           	opt stack 0
 31827  005DC4                     _UpdateOsCounters:
 31828                           	opt stack 11
 31829                           
 31830                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 31831                           
 31832                           ; BSR set to: 2
 31833                           ;incstack = 0
 31834  005DC4  0E01               	movlw	1
 31835  005DC6  0103               	movlb	3	; () banked
 31836  005DC8  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 31837  005DCA  0E00               	movlw	0
 31838  005DCC  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 31839  005DCE  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 31840  005DD0  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 31841                           
 31842                           ; BSR set to: 3
 31843  005DD2  0012               	return		;funcret
 31844  005DD4                     __end_of_UpdateOsCounters:
 31845                           	opt stack 0
 31846                           tosu	equ	0xFFF
 31847                           tosh	equ	0xFFE
 31848                           tosl	equ	0xFFD
 31849                           pclatu	equ	0xFFB
 31850                           pclath	equ	0xFFA
 31851                           tblptru	equ	0xFF8
 31852                           tblptrh	equ	0xFF7
 31853                           tblptrl	equ	0xFF6
 31854                           tablat	equ	0xFF5
 31855                           prodh	equ	0xFF4
 31856                           prodl	equ	0xFF3
 31857                           intcon	equ	0xFF2
 31858                           intcon2	equ	0xFF1
 31859                           intcon3	equ	0xFF0
 31860                           indf0	equ	0xFEF
 31861                           postinc0	equ	0xFEE
 31862                           plusw0	equ	0xFEB
 31863                           fsr0h	equ	0xFEA
 31864                           fsr0l	equ	0xFE9
 31865                           wreg	equ	0xFE8
 31866                           indf1	equ	0xFE7
 31867                           postinc1	equ	0xFE6
 31868                           postdec1	equ	0xFE5
 31869                           plusw1	equ	0xFE3
 31870                           fsr1h	equ	0xFE2
 31871                           fsr1l	equ	0xFE1
 31872                           bsr	equ	0xFE0
 31873                           indf2	equ	0xFDF
 31874                           postinc2	equ	0xFDE
 31875                           postdec2	equ	0xFDD
 31876                           plusw2	equ	0xFDB
 31877                           fsr2h	equ	0xFDA
 31878                           fsr2l	equ	0xFD9
 31879                           status	equ	0xFD8
 31880                           
 31881 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 31882 ;; Defined at:
 31883 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 31884 ;; Parameters:    Size  Location     Type
 31885 ;;		None
 31886 ;; Auto vars:     Size  Location     Type
 31887 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 31888 ;; Return value:  Size  Location     Type
 31889 ;;                  1    wreg      void 
 31890 ;; Registers used:
 31891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31892 ;; Tracked objects:
 31893 ;;		On entry : 0/0
 31894 ;;		On exit  : 0/0
 31895 ;;		Unchanged: 0/0
 31896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31899 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31900 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31901 ;;Total ram usage:       10 bytes
 31902 ;; Hardware stack levels used:    1
 31903 ;; Hardware stack levels required when called:    7
 31904 ;; This function calls:
 31905 ;;		_I2cDummyTx
 31906 ;;		_OsAlrm_ClearOsAlarm
 31907 ;;		i1___wmul
 31908 ;; This function is called by:
 31909 ;;		_Sch_SchmIntService
 31910 ;; This function uses a non-reentrant model
 31911 ;;
 31912                           
 31913                           	psect	text154
 31914  002154                     __ptext154:
 31915                           	opt stack 0
 31916  002154                     _OsAlrm_ProcessOsAlarms:
 31917                           	opt stack 8
 31918                           
 31919                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 31920                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 31921                           
 31922                           ; BSR set to: 3
 31923                           ;incstack = 0
 31924  002154  0E00               	movlw	0
 31925  002156  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 31926  002158  0E00               	movlw	0
 31927  00215A  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 31928  00215C  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 31929  00215E  E105               	bnz	i1u1311_20
 31930  002160  0E14               	movlw	20
 31931  002162  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 31932  002164  B0D8               	btfsc	status,0,c
 31933  002166  0012               	return	
 31934  002168  D001               	goto	i1l742
 31935  00216A                     i1u1311_20:
 31936  00216A  0012               	return	
 31937  00216C                     i1l742:
 31938                           
 31939                           ;os_alarms.c: 121: {
 31940                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 31941  00216C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 31942  002170  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 31943  002174  0E00               	movlw	0
 31944  002176  6E1C               	movwf	i1___wmul@multiplicand+1,c
 31945  002178  0E0B               	movlw	11
 31946  00217A  6E1B               	movwf	i1___wmul@multiplicand,c
 31947  00217C  EC43  F02D         	call	i1___wmul	;wreg free
 31948  002180  0E00               	movlw	low _OsAlarms
 31949  002182  2419               	addwf	?i1___wmul,w,c
 31950  002184  6ED9               	movwf	fsr2l,c
 31951  002186  0E06               	movlw	high _OsAlarms
 31952  002188  201A               	addwfc	?i1___wmul+1,w,c
 31953  00218A  6EDA               	movwf	fsr2h,c
 31954  00218C  04DE               	decf	postinc2,w,c
 31955  00218E  A4D8               	btfss	status,2,c
 31956  002190  D086               	goto	i1u1315_29
 31957                           
 31958                           ;os_alarms.c: 124: {
 31959                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 31960  002192  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 31961  002196  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 31962  00219A  0E00               	movlw	0
 31963  00219C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 31964  00219E  0E0B               	movlw	11
 31965  0021A0  6E1B               	movwf	i1___wmul@multiplicand,c
 31966  0021A2  EC43  F02D         	call	i1___wmul	;wreg free
 31967  0021A6  0E01               	movlw	1
 31968  0021A8  2619               	addwf	?i1___wmul,f,c
 31969  0021AA  0E00               	movlw	0
 31970  0021AC  221A               	addwfc	?i1___wmul+1,f,c
 31971  0021AE  0E00               	movlw	low _OsAlarms
 31972  0021B0  2419               	addwf	?i1___wmul,w,c
 31973  0021B2  6ED9               	movwf	fsr2l,c
 31974  0021B4  0E06               	movlw	high _OsAlarms
 31975  0021B6  201A               	addwfc	?i1___wmul+1,w,c
 31976  0021B8  6EDA               	movwf	fsr2h,c
 31977  0021BA  2ADE               	incf	postinc2,f,c
 31978  0021BC  0E00               	movlw	0
 31979  0021BE  22DE               	addwfc	postinc2,f,c
 31980  0021C0  22DE               	addwfc	postinc2,f,c
 31981  0021C2  22DE               	addwfc	postinc2,f,c
 31982                           
 31983                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 31984  0021C4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 31985  0021C8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 31986  0021CC  0E00               	movlw	0
 31987  0021CE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 31988  0021D0  0E0B               	movlw	11
 31989  0021D2  6E1B               	movwf	i1___wmul@multiplicand,c
 31990  0021D4  EC43  F02D         	call	i1___wmul	;wreg free
 31991  0021D8  0E05               	movlw	5
 31992  0021DA  2619               	addwf	?i1___wmul,f,c
 31993  0021DC  0E00               	movlw	0
 31994  0021DE  221A               	addwfc	?i1___wmul+1,f,c
 31995  0021E0  0E00               	movlw	low _OsAlarms
 31996  0021E2  2419               	addwf	?i1___wmul,w,c
 31997  0021E4  6ED9               	movwf	fsr2l,c
 31998  0021E6  0E06               	movlw	high _OsAlarms
 31999  0021E8  201A               	addwfc	?i1___wmul+1,w,c
 32000  0021EA  6EDA               	movwf	fsr2h,c
 32001  0021EC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32002  0021F0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32003  0021F4  0E00               	movlw	0
 32004  0021F6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32005  0021F8  0E0B               	movlw	11
 32006  0021FA  6E1B               	movwf	i1___wmul@multiplicand,c
 32007  0021FC  EC43  F02D         	call	i1___wmul	;wreg free
 32008  002200  0E01               	movlw	1
 32009  002202  2619               	addwf	?i1___wmul,f,c
 32010  002204  0E00               	movlw	0
 32011  002206  221A               	addwfc	?i1___wmul+1,f,c
 32012  002208  0E00               	movlw	low _OsAlarms
 32013  00220A  2419               	addwf	?i1___wmul,w,c
 32014  00220C  6EE1               	movwf	fsr1l,c
 32015  00220E  0E06               	movlw	high _OsAlarms
 32016  002210  201A               	addwfc	?i1___wmul+1,w,c
 32017  002212  6EE2               	movwf	fsr1h,c
 32018  002214  50DE               	movf	postinc2,w,c
 32019  002216  5CE6               	subwf	postinc1,w,c
 32020  002218  50DE               	movf	postinc2,w,c
 32021  00221A  58E6               	subwfb	postinc1,w,c
 32022  00221C  50DE               	movf	postinc2,w,c
 32023  00221E  58E6               	subwfb	postinc1,w,c
 32024  002220  50DE               	movf	postinc2,w,c
 32025  002222  58E6               	subwfb	postinc1,w,c
 32026  002224  A0D8               	btfss	status,0,c
 32027  002226  D03B               	goto	i1u1315_29
 32028                           
 32029                           ;os_alarms.c: 129: {
 32030                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 32031  002228  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 32032  00222A  EC1E  F028         	call	_OsAlrm_ClearOsAlarm
 32033                           
 32034                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 32035  00222E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32036  002232  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32037  002236  0E00               	movlw	0
 32038  002238  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32039  00223A  0E0B               	movlw	11
 32040  00223C  6E1B               	movwf	i1___wmul@multiplicand,c
 32041  00223E  EC43  F02D         	call	i1___wmul	;wreg free
 32042  002242  0E09               	movlw	9
 32043  002244  2619               	addwf	?i1___wmul,f,c
 32044  002246  0E00               	movlw	0
 32045  002248  221A               	addwfc	?i1___wmul+1,f,c
 32046  00224A  0E00               	movlw	low _OsAlarms
 32047  00224C  2419               	addwf	?i1___wmul,w,c
 32048  00224E  6ED9               	movwf	fsr2l,c
 32049  002250  0E06               	movlw	high _OsAlarms
 32050  002252  201A               	addwfc	?i1___wmul+1,w,c
 32051  002254  6EDA               	movwf	fsr2h,c
 32052  002256  50DE               	movf	postinc2,w,c
 32053  002258  10DE               	iorwf	postinc2,w,c
 32054  00225A  B4D8               	btfsc	status,2,c
 32055  00225C  D020               	goto	i1u1315_29
 32056                           
 32057                           ;os_alarms.c: 134: {
 32058                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 32059  00225E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32060  002262  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32061  002266  0E00               	movlw	0
 32062  002268  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32063  00226A  0E0B               	movlw	11
 32064  00226C  6E1B               	movwf	i1___wmul@multiplicand,c
 32065  00226E  EC43  F02D         	call	i1___wmul	;wreg free
 32066  002272  0E09               	movlw	9
 32067  002274  2619               	addwf	?i1___wmul,f,c
 32068  002276  0E00               	movlw	0
 32069  002278  221A               	addwfc	?i1___wmul+1,f,c
 32070  00227A  0E00               	movlw	low _OsAlarms
 32071  00227C  2419               	addwf	?i1___wmul,w,c
 32072  00227E  6ED9               	movwf	fsr2l,c
 32073  002280  0E06               	movlw	high _OsAlarms
 32074  002282  201A               	addwfc	?i1___wmul+1,w,c
 32075  002284  6EDA               	movwf	fsr2h,c
 32076  002286  D801               	call	i1u1315_28
 32077  002288  D00A               	goto	i1u1315_29
 32078  00228A                     i1u1315_28:
 32079  00228A  0005               	push	
 32080  00228C  6EFA               	movwf	pclath,c
 32081  00228E  50DE               	movf	postinc2,w,c
 32082  002290  6EFD               	movwf	tosl,c
 32083  002292  50DE               	movf	postinc2,w,c
 32084  002294  6EFE               	movwf	tosh,c
 32085  002296  50F8               	movf	tblptru,w,c
 32086  002298  6EFF               	movwf	tosu,c
 32087  00229A  50FA               	movf	pclath,w,c
 32088  00229C  0012               	return		;indir
 32089  00229E                     i1u1315_29:
 32090  00229E  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 32091  0022A0  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 32092  0022A2  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 32093  0022A4  E101               	bnz	i1l747
 32094  0022A6  D75C               	goto	L66
 32095  0022A8                     i1l747:
 32096  0022A8  0012               	return		;funcret
 32097  0022AA                     __end_of_OsAlrm_ProcessOsAlarms:
 32098                           	opt stack 0
 32099                           tosu	equ	0xFFF
 32100                           tosh	equ	0xFFE
 32101                           tosl	equ	0xFFD
 32102                           pclatu	equ	0xFFB
 32103                           pclath	equ	0xFFA
 32104                           tblptru	equ	0xFF8
 32105                           tblptrh	equ	0xFF7
 32106                           tblptrl	equ	0xFF6
 32107                           tablat	equ	0xFF5
 32108                           prodh	equ	0xFF4
 32109                           prodl	equ	0xFF3
 32110                           intcon	equ	0xFF2
 32111                           intcon2	equ	0xFF1
 32112                           intcon3	equ	0xFF0
 32113                           indf0	equ	0xFEF
 32114                           postinc0	equ	0xFEE
 32115                           plusw0	equ	0xFEB
 32116                           fsr0h	equ	0xFEA
 32117                           fsr0l	equ	0xFE9
 32118                           wreg	equ	0xFE8
 32119                           indf1	equ	0xFE7
 32120                           postinc1	equ	0xFE6
 32121                           postdec1	equ	0xFE5
 32122                           plusw1	equ	0xFE3
 32123                           fsr1h	equ	0xFE2
 32124                           fsr1l	equ	0xFE1
 32125                           bsr	equ	0xFE0
 32126                           indf2	equ	0xFDF
 32127                           postinc2	equ	0xFDE
 32128                           postdec2	equ	0xFDD
 32129                           plusw2	equ	0xFDB
 32130                           fsr2h	equ	0xFDA
 32131                           fsr2l	equ	0xFD9
 32132                           status	equ	0xFD8
 32133                           
 32134 ;; *************** function i1___wmul *****************
 32135 ;; Defined at:
 32136 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 32137 ;; Parameters:    Size  Location     Type
 32138 ;;  multiplier      2   24[COMRAM] unsigned int 
 32139 ;;  multiplicand    2   26[COMRAM] unsigned int 
 32140 ;; Auto vars:     Size  Location     Type
 32141 ;;  __wmul          2   28[COMRAM] unsigned int 
 32142 ;; Return value:  Size  Location     Type
 32143 ;;                  2   24[COMRAM] unsigned int 
 32144 ;; Registers used:
 32145 ;;		wreg, status,2, status,0, prodl, prodh
 32146 ;; Tracked objects:
 32147 ;;		On entry : 0/0
 32148 ;;		On exit  : 0/0
 32149 ;;		Unchanged: 0/0
 32150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32151 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32152 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32154 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32155 ;;Total ram usage:        6 bytes
 32156 ;; Hardware stack levels used:    1
 32157 ;; Hardware stack levels required when called:    4
 32158 ;; This function calls:
 32159 ;;		Nothing
 32160 ;; This function is called by:
 32161 ;;		_OsAlrm_ProcessOsAlarms
 32162 ;; This function uses a non-reentrant model
 32163 ;;
 32164                           
 32165                           	psect	text155
 32166  005A86                     __ptext155:
 32167                           	opt stack 0
 32168  005A86                     i1___wmul:
 32169                           	opt stack 10
 32170                           
 32171                           ;incstack = 0
 32172  005A86  5019               	movf	i1___wmul@multiplier,w,c
 32173  005A88  021B               	mulwf	i1___wmul@multiplicand,c
 32174  005A8A  CFF3 F01D          	movff	prodl,i1___wmul@product
 32175  005A8E  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 32176  005A92  5019               	movf	i1___wmul@multiplier,w,c
 32177  005A94  021C               	mulwf	i1___wmul@multiplicand+1,c
 32178  005A96  50F3               	movf	prodl,w,c
 32179  005A98  261E               	addwf	i1___wmul@product+1,f,c
 32180  005A9A  501A               	movf	i1___wmul@multiplier+1,w,c
 32181  005A9C  021B               	mulwf	i1___wmul@multiplicand,c
 32182  005A9E  50F3               	movf	prodl,w,c
 32183  005AA0  261E               	addwf	i1___wmul@product+1,f,c
 32184  005AA2  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 32185  005AA6  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 32186  005AAA  0012               	return	
 32187  005AAC                     __end_ofi1___wmul:
 32188                           	opt stack 0
 32189                           tosu	equ	0xFFF
 32190                           tosh	equ	0xFFE
 32191                           tosl	equ	0xFFD
 32192                           pclatu	equ	0xFFB
 32193                           pclath	equ	0xFFA
 32194                           tblptru	equ	0xFF8
 32195                           tblptrh	equ	0xFF7
 32196                           tblptrl	equ	0xFF6
 32197                           tablat	equ	0xFF5
 32198                           prodh	equ	0xFF4
 32199                           prodl	equ	0xFF3
 32200                           intcon	equ	0xFF2
 32201                           intcon2	equ	0xFF1
 32202                           intcon3	equ	0xFF0
 32203                           indf0	equ	0xFEF
 32204                           postinc0	equ	0xFEE
 32205                           plusw0	equ	0xFEB
 32206                           fsr0h	equ	0xFEA
 32207                           fsr0l	equ	0xFE9
 32208                           wreg	equ	0xFE8
 32209                           indf1	equ	0xFE7
 32210                           postinc1	equ	0xFE6
 32211                           postdec1	equ	0xFE5
 32212                           plusw1	equ	0xFE3
 32213                           fsr1h	equ	0xFE2
 32214                           fsr1l	equ	0xFE1
 32215                           bsr	equ	0xFE0
 32216                           indf2	equ	0xFDF
 32217                           postinc2	equ	0xFDE
 32218                           postdec2	equ	0xFDD
 32219                           plusw2	equ	0xFDB
 32220                           fsr2h	equ	0xFDA
 32221                           fsr2l	equ	0xFD9
 32222                           status	equ	0xFD8
 32223                           
 32224 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 32225 ;; Defined at:
 32226 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32227 ;; Parameters:    Size  Location     Type
 32228 ;;  OsAlarmId       1    wreg     unsigned char 
 32229 ;; Auto vars:     Size  Location     Type
 32230 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 32231 ;; Return value:  Size  Location     Type
 32232 ;;                  1    wreg      void 
 32233 ;; Registers used:
 32234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32235 ;; Tracked objects:
 32236 ;;		On entry : 0/0
 32237 ;;		On exit  : 0/0
 32238 ;;		Unchanged: 0/0
 32239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32244 ;;Total ram usage:        1 bytes
 32245 ;; Hardware stack levels used:    1
 32246 ;; Hardware stack levels required when called:    4
 32247 ;; This function calls:
 32248 ;;		Nothing
 32249 ;; This function is called by:
 32250 ;;		_OsAlrm_ProcessOsAlarms
 32251 ;; This function uses a non-reentrant model
 32252 ;;
 32253                           
 32254                           	psect	text156
 32255  00503C                     __ptext156:
 32256                           	opt stack 0
 32257  00503C                     _OsAlrm_ClearOsAlarm:
 32258                           	opt stack 10
 32259                           
 32260                           ;incstack = 0
 32261                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 32262  00503C  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 32263                           
 32264                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 32265  00503E  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32266  005040  0D0B               	mullw	11
 32267  005042  0E00               	movlw	low _OsAlarms
 32268  005044  24F3               	addwf	prodl,w,c
 32269  005046  6ED9               	movwf	fsr2l,c
 32270  005048  0E06               	movlw	high _OsAlarms
 32271  00504A  20F4               	addwfc	prodh,w,c
 32272  00504C  6EDA               	movwf	fsr2h,c
 32273  00504E  0E00               	movlw	0
 32274  005050  6EDF               	movwf	indf2,c
 32275                           
 32276                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 32277  005052  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32278  005054  0D0B               	mullw	11
 32279  005056  0E01               	movlw	1
 32280  005058  26F3               	addwf	prodl,f,c
 32281  00505A  0E00               	movlw	0
 32282  00505C  22F4               	addwfc	prodh,f,c
 32283  00505E  0E00               	movlw	low _OsAlarms
 32284  005060  24F3               	addwf	prodl,w,c
 32285  005062  6ED9               	movwf	fsr2l,c
 32286  005064  0E06               	movlw	high _OsAlarms
 32287  005066  20F4               	addwfc	prodh,w,c
 32288  005068  6EDA               	movwf	fsr2h,c
 32289  00506A  6ADE               	clrf	postinc2,c
 32290  00506C  6ADE               	clrf	postinc2,c
 32291  00506E  6ADE               	clrf	postinc2,c
 32292  005070  6ADD               	clrf	postdec2,c
 32293                           
 32294                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 32295  005072  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32296  005074  0D0B               	mullw	11
 32297  005076  0E05               	movlw	5
 32298  005078  26F3               	addwf	prodl,f,c
 32299  00507A  0E00               	movlw	0
 32300  00507C  22F4               	addwfc	prodh,f,c
 32301  00507E  0E00               	movlw	low _OsAlarms
 32302  005080  24F3               	addwf	prodl,w,c
 32303  005082  6ED9               	movwf	fsr2l,c
 32304  005084  0E06               	movlw	high _OsAlarms
 32305  005086  20F4               	addwfc	prodh,w,c
 32306  005088  6EDA               	movwf	fsr2h,c
 32307  00508A  6ADE               	clrf	postinc2,c
 32308  00508C  6ADE               	clrf	postinc2,c
 32309  00508E  6ADE               	clrf	postinc2,c
 32310  005090  6ADD               	clrf	postdec2,c
 32311  005092  0012               	return		;funcret
 32312  005094                     __end_of_OsAlrm_ClearOsAlarm:
 32313                           	opt stack 0
 32314                           tosu	equ	0xFFF
 32315                           tosh	equ	0xFFE
 32316                           tosl	equ	0xFFD
 32317                           pclatu	equ	0xFFB
 32318                           pclath	equ	0xFFA
 32319                           tblptru	equ	0xFF8
 32320                           tblptrh	equ	0xFF7
 32321                           tblptrl	equ	0xFF6
 32322                           tablat	equ	0xFF5
 32323                           prodh	equ	0xFF4
 32324                           prodl	equ	0xFF3
 32325                           intcon	equ	0xFF2
 32326                           intcon2	equ	0xFF1
 32327                           intcon3	equ	0xFF0
 32328                           indf0	equ	0xFEF
 32329                           postinc0	equ	0xFEE
 32330                           plusw0	equ	0xFEB
 32331                           fsr0h	equ	0xFEA
 32332                           fsr0l	equ	0xFE9
 32333                           wreg	equ	0xFE8
 32334                           indf1	equ	0xFE7
 32335                           postinc1	equ	0xFE6
 32336                           postdec1	equ	0xFE5
 32337                           plusw1	equ	0xFE3
 32338                           fsr1h	equ	0xFE2
 32339                           fsr1l	equ	0xFE1
 32340                           bsr	equ	0xFE0
 32341                           indf2	equ	0xFDF
 32342                           postinc2	equ	0xFDE
 32343                           postdec2	equ	0xFDD
 32344                           plusw2	equ	0xFDB
 32345                           fsr2h	equ	0xFDA
 32346                           fsr2l	equ	0xFD9
 32347                           status	equ	0xFD8
 32348                           
 32349 ;; *************** function _I2cDummyTx *****************
 32350 ;; Defined at:
 32351 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 32352 ;; Parameters:    Size  Location     Type
 32353 ;;		None
 32354 ;; Auto vars:     Size  Location     Type
 32355 ;;		None
 32356 ;; Return value:  Size  Location     Type
 32357 ;;                  1    wreg      void 
 32358 ;; Registers used:
 32359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32360 ;; Tracked objects:
 32361 ;;		On entry : 0/0
 32362 ;;		On exit  : 0/0
 32363 ;;		Unchanged: 0/0
 32364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32369 ;;Total ram usage:        0 bytes
 32370 ;; Hardware stack levels used:    1
 32371 ;; Hardware stack levels required when called:    6
 32372 ;; This function calls:
 32373 ;;		i1_I2cSlv_SendI2cMsg
 32374 ;; This function is called by:
 32375 ;;		_I2cSlv_MainTask
 32376 ;;		_OsAlrm_ProcessOsAlarms
 32377 ;; This function uses a non-reentrant model
 32378 ;;
 32379                           
 32380                           	psect	text157
 32381  005C7C                     __ptext157:
 32382                           	opt stack 0
 32383  005C7C                     _I2cDummyTx:
 32384                           	opt stack 8
 32385                           
 32386                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 32387                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 32388                           
 32389                           ;incstack = 0
 32390  005C7C  0EFC               	movlw	low I2cDummyTx@DummyBuffer
 32391  005C7E  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 32392  005C80  0E01               	movlw	high I2cDummyTx@DummyBuffer
 32393  005C82  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 32394  005C84  0E00               	movlw	0
 32395  005C86  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 32396  005C88  0E01               	movlw	1
 32397  005C8A  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 32398  005C8C  ECC2  F02B         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 32399                           
 32400                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 32401  005C90  0E01               	movlw	1
 32402  005C92  0101               	movlb	1	; () banked
 32403  005C94  6FEA               	movwf	_I2cBusStatus& (0+255),b
 32404                           
 32405                           ; BSR set to: 1
 32406  005C96  0012               	return		;funcret
 32407  005C98                     __end_of_I2cDummyTx:
 32408                           	opt stack 0
 32409                           tosu	equ	0xFFF
 32410                           tosh	equ	0xFFE
 32411                           tosl	equ	0xFFD
 32412                           pclatu	equ	0xFFB
 32413                           pclath	equ	0xFFA
 32414                           tblptru	equ	0xFF8
 32415                           tblptrh	equ	0xFF7
 32416                           tblptrl	equ	0xFF6
 32417                           tablat	equ	0xFF5
 32418                           prodh	equ	0xFF4
 32419                           prodl	equ	0xFF3
 32420                           intcon	equ	0xFF2
 32421                           intcon2	equ	0xFF1
 32422                           intcon3	equ	0xFF0
 32423                           indf0	equ	0xFEF
 32424                           postinc0	equ	0xFEE
 32425                           plusw0	equ	0xFEB
 32426                           fsr0h	equ	0xFEA
 32427                           fsr0l	equ	0xFE9
 32428                           wreg	equ	0xFE8
 32429                           indf1	equ	0xFE7
 32430                           postinc1	equ	0xFE6
 32431                           postdec1	equ	0xFE5
 32432                           plusw1	equ	0xFE3
 32433                           fsr1h	equ	0xFE2
 32434                           fsr1l	equ	0xFE1
 32435                           bsr	equ	0xFE0
 32436                           indf2	equ	0xFDF
 32437                           postinc2	equ	0xFDE
 32438                           postdec2	equ	0xFDD
 32439                           plusw2	equ	0xFDB
 32440                           fsr2h	equ	0xFDA
 32441                           fsr2l	equ	0xFD9
 32442                           status	equ	0xFD8
 32443                           
 32444 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 32445 ;; Defined at:
 32446 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 32447 ;; Parameters:    Size  Location     Type
 32448 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 32449 ;;		 -> MyApp_Task@on(2), MyApp_Task@off(2), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 32450 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 32451 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 32452 ;;  DataLenght      1   30[COMRAM] unsigned char 
 32453 ;; Auto vars:     Size  Location     Type
 32454 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 32455 ;; Return value:  Size  Location     Type
 32456 ;;                  1    wreg      unsigned char 
 32457 ;; Registers used:
 32458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32459 ;; Tracked objects:
 32460 ;;		On entry : 0/0
 32461 ;;		On exit  : 0/0
 32462 ;;		Unchanged: 0/0
 32463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32467 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32468 ;;Total ram usage:        5 bytes
 32469 ;; Hardware stack levels used:    1
 32470 ;; Hardware stack levels required when called:    5
 32471 ;; This function calls:
 32472 ;;		i1_GenerateEvt
 32473 ;; This function is called by:
 32474 ;;		_I2cDummyTx
 32475 ;; This function uses a non-reentrant model
 32476 ;;
 32477                           
 32478                           	psect	text158
 32479  005784                     __ptext158:
 32480                           	opt stack 0
 32481  005784                     i1_I2cSlv_SendI2cMsg:
 32482                           	opt stack 8
 32483                           
 32484                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 32485                           
 32486                           ; BSR set to: 1
 32487                           ;incstack = 0
 32488  005784  0E00               	movlw	0
 32489  005786  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 32490                           
 32491                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 32492  005788  0100               	movlb	0	; () banked
 32493  00578A  05CC               	decf	_I2cComSts& (0+255),w,b
 32494  00578C  B4D8               	btfsc	status,2,c
 32495  00578E  D014               	goto	i1l1391
 32496                           
 32497                           ; BSR set to: 0
 32498                           ;i2c_slv.c: 257: {
 32499                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 32500  005790  C01E  F3A8         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 32501                           
 32502                           ; BSR set to: 0
 32503                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 32504  005794  0E00               	movlw	0
 32505  005796  0103               	movlb	3	; () banked
 32506  005798  6FA9               	movwf	(_I2cTxPacket+1)& (0+255),b
 32507                           
 32508                           ; BSR set to: 3
 32509                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 32510  00579A  C01F  F3AC         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 32511                           
 32512                           ; BSR set to: 3
 32513                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 32514  00579E  C01C  F3AA         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 32515  0057A2  C01D  F3AB         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 32516                           
 32517                           ; BSR set to: 3
 32518                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 32519  0057A6  0ED6               	movlw	low _I2cWriteDataEvt
 32520  0057A8  6E19               	movwf	i1GenerateEvt@Event,c
 32521  0057AA  0E00               	movlw	high _I2cWriteDataEvt
 32522  0057AC  6E1A               	movwf	i1GenerateEvt@Event+1,c
 32523  0057AE  ECA0  F02E         	call	i1_GenerateEvt	;wreg free
 32524                           
 32525                           ;i2c_slv.c: 267: TxSts = 1u;
 32526  0057B2  0E01               	movlw	1
 32527  0057B4  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 32528                           
 32529                           ;i2c_slv.c: 268: }
 32530  0057B6  0012               	return	
 32531  0057B8                     i1l1391:
 32532                           
 32533                           ;i2c_slv.c: 269: else
 32534                           ;i2c_slv.c: 270: {
 32535                           ;i2c_slv.c: 272: TxSts = 0u;
 32536  0057B8  0E00               	movlw	0
 32537  0057BA  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 32538  0057BC  0012               	return	
 32539  0057BE                     __end_ofi1_I2cSlv_SendI2cMsg:
 32540                           	opt stack 0
 32541                           tosu	equ	0xFFF
 32542                           tosh	equ	0xFFE
 32543                           tosl	equ	0xFFD
 32544                           pclatu	equ	0xFFB
 32545                           pclath	equ	0xFFA
 32546                           tblptru	equ	0xFF8
 32547                           tblptrh	equ	0xFF7
 32548                           tblptrl	equ	0xFF6
 32549                           tablat	equ	0xFF5
 32550                           prodh	equ	0xFF4
 32551                           prodl	equ	0xFF3
 32552                           intcon	equ	0xFF2
 32553                           intcon2	equ	0xFF1
 32554                           intcon3	equ	0xFF0
 32555                           indf0	equ	0xFEF
 32556                           postinc0	equ	0xFEE
 32557                           plusw0	equ	0xFEB
 32558                           fsr0h	equ	0xFEA
 32559                           fsr0l	equ	0xFE9
 32560                           wreg	equ	0xFE8
 32561                           indf1	equ	0xFE7
 32562                           postinc1	equ	0xFE6
 32563                           postdec1	equ	0xFE5
 32564                           plusw1	equ	0xFE3
 32565                           fsr1h	equ	0xFE2
 32566                           fsr1l	equ	0xFE1
 32567                           bsr	equ	0xFE0
 32568                           indf2	equ	0xFDF
 32569                           postinc2	equ	0xFDE
 32570                           postdec2	equ	0xFDD
 32571                           plusw2	equ	0xFDB
 32572                           fsr2h	equ	0xFDA
 32573                           fsr2l	equ	0xFD9
 32574                           status	equ	0xFD8
 32575                           
 32576 ;; *************** function i1_GenerateEvt *****************
 32577 ;; Defined at:
 32578 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32579 ;; Parameters:    Size  Location     Type
 32580 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 32581 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 32582 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 32583 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 32584 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 32585 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 32586 ;; Auto vars:     Size  Location     Type
 32587 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 32588 ;; Return value:  Size  Location     Type
 32589 ;;                  1    wreg      enum E7699
 32590 ;; Registers used:
 32591 ;;		wreg, fsr2l, fsr2h, status,2
 32592 ;; Tracked objects:
 32593 ;;		On entry : 0/0
 32594 ;;		On exit  : 0/0
 32595 ;;		Unchanged: 0/0
 32596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32600 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32601 ;;Total ram usage:        3 bytes
 32602 ;; Hardware stack levels used:    1
 32603 ;; Hardware stack levels required when called:    4
 32604 ;; This function calls:
 32605 ;;		Nothing
 32606 ;; This function is called by:
 32607 ;;		i1_I2cSlv_SendI2cMsg
 32608 ;; This function uses a non-reentrant model
 32609 ;;
 32610                           
 32611                           	psect	text159
 32612  005D40                     __ptext159:
 32613                           	opt stack 0
 32614  005D40                     i1_GenerateEvt:
 32615                           	opt stack 8
 32616                           
 32617                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 32618                           
 32619                           ;incstack = 0
 32620  005D40  0E00               	movlw	0
 32621  005D42  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 32622                           
 32623                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 32624  005D44  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 32625  005D48  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 32626  005D4C  0E02               	movlw	2
 32627  005D4E  6EDF               	movwf	indf2,c
 32628                           
 32629                           ;os_ser.c: 83: EventStatus = EventSent;
 32630  005D50  0E02               	movlw	2
 32631  005D52  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 32632  005D54  0012               	return	
 32633  005D56                     __end_ofi1_GenerateEvt:
 32634                           	opt stack 0
 32635                           tosu	equ	0xFFF
 32636                           tosh	equ	0xFFE
 32637                           tosl	equ	0xFFD
 32638                           pclatu	equ	0xFFB
 32639                           pclath	equ	0xFFA
 32640                           tblptru	equ	0xFF8
 32641                           tblptrh	equ	0xFF7
 32642                           tblptrl	equ	0xFF6
 32643                           tablat	equ	0xFF5
 32644                           prodh	equ	0xFF4
 32645                           prodl	equ	0xFF3
 32646                           intcon	equ	0xFF2
 32647                           intcon2	equ	0xFF1
 32648                           intcon3	equ	0xFF0
 32649                           indf0	equ	0xFEF
 32650                           postinc0	equ	0xFEE
 32651                           plusw0	equ	0xFEB
 32652                           fsr0h	equ	0xFEA
 32653                           fsr0l	equ	0xFE9
 32654                           wreg	equ	0xFE8
 32655                           indf1	equ	0xFE7
 32656                           postinc1	equ	0xFE6
 32657                           postdec1	equ	0xFE5
 32658                           plusw1	equ	0xFE3
 32659                           fsr1h	equ	0xFE2
 32660                           fsr1l	equ	0xFE1
 32661                           bsr	equ	0xFE0
 32662                           indf2	equ	0xFDF
 32663                           postinc2	equ	0xFDE
 32664                           postdec2	equ	0xFDD
 32665                           plusw2	equ	0xFDB
 32666                           fsr2h	equ	0xFDA
 32667                           fsr2l	equ	0xFD9
 32668                           status	equ	0xFD8
 32669                           
 32670 ;; *************** function _HighPriorityIsr *****************
 32671 ;; Defined at:
 32672 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 32673 ;; Parameters:    Size  Location     Type
 32674 ;;		None
 32675 ;; Auto vars:     Size  Location     Type
 32676 ;;		None
 32677 ;; Return value:  Size  Location     Type
 32678 ;;                  1    wreg      void 
 32679 ;; Registers used:
 32680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32681 ;; Tracked objects:
 32682 ;;		On entry : 0/0
 32683 ;;		On exit  : 0/0
 32684 ;;		Unchanged: 0/0
 32685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32688 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32689 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32690 ;;Total ram usage:       18 bytes
 32691 ;; Hardware stack levels used:    1
 32692 ;; Hardware stack levels required when called:    3
 32693 ;; This function calls:
 32694 ;;		_Mcu_Int0Isr
 32695 ;;		_Mcu_Int1Isr
 32696 ;;		_Rtcc_RtcIsr
 32697 ;;		_Uart_Uart1RxIsr
 32698 ;; This function is called by:
 32699 ;;		Interrupt level 2
 32700 ;; This function uses a non-reentrant model
 32701 ;;
 32702                           
 32703                           	psect	intcode
 32704  000008                     __pintcode:
 32705                           	opt stack 0
 32706  000008                     _HighPriorityIsr:
 32707                           	opt stack 8
 32708                           
 32709                           ;incstack = 0
 32710  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32711  00000A  EF2C  F020         	goto	int_func
 32712                           tosu	equ	0xFFF
 32713                           tosh	equ	0xFFE
 32714                           tosl	equ	0xFFD
 32715                           pclatu	equ	0xFFB
 32716                           pclath	equ	0xFFA
 32717                           tblptru	equ	0xFF8
 32718                           tblptrh	equ	0xFF7
 32719                           tblptrl	equ	0xFF6
 32720                           tablat	equ	0xFF5
 32721                           prodh	equ	0xFF4
 32722                           prodl	equ	0xFF3
 32723                           intcon	equ	0xFF2
 32724                           intcon2	equ	0xFF1
 32725                           intcon3	equ	0xFF0
 32726                           indf0	equ	0xFEF
 32727                           postinc0	equ	0xFEE
 32728                           plusw0	equ	0xFEB
 32729                           fsr0h	equ	0xFEA
 32730                           fsr0l	equ	0xFE9
 32731                           wreg	equ	0xFE8
 32732                           indf1	equ	0xFE7
 32733                           postinc1	equ	0xFE6
 32734                           postdec1	equ	0xFE5
 32735                           plusw1	equ	0xFE3
 32736                           fsr1h	equ	0xFE2
 32737                           fsr1l	equ	0xFE1
 32738                           bsr	equ	0xFE0
 32739                           indf2	equ	0xFDF
 32740                           postinc2	equ	0xFDE
 32741                           postdec2	equ	0xFDD
 32742                           plusw2	equ	0xFDB
 32743                           fsr2h	equ	0xFDA
 32744                           fsr2l	equ	0xFD9
 32745                           status	equ	0xFD8
 32746                           
 32747                           	psect	intcode_body
 32748  004058                     __pintcode_body:
 32749                           	opt stack 8
 32750  004058                     int_func:
 32751                           	opt stack 8
 32752  004058  CFFA F007          	movff	pclath,??_HighPriorityIsr
 32753  00405C  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 32754  004060  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 32755  004064  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 32756  004068  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 32757  00406C  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 32758  004070  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 32759  004074  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 32760  004078  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 32761  00407C  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 32762  004080  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 32763  004084  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 32764  004088  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 32765  00408C  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 32766  004090  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 32767  004094  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 32768  004098  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 32769  00409C  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 32770                           
 32771                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 32772  0040A0  B2F2               	btfsc	intcon,1,c	;volatile
 32773                           
 32774                           ;irq.c: 158: {
 32775                           ;irq.c: 160: Mcu_Int0Isr();
 32776  0040A2  EC35  F02F         	call	_Mcu_Int0Isr	;wreg free
 32777                           
 32778                           ;irq.c: 161: }
 32779                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 32780  0040A6  B0F0               	btfsc	intcon3,0,c	;volatile
 32781                           
 32782                           ;irq.c: 167: {
 32783                           ;irq.c: 169: Mcu_Int1Isr();
 32784  0040A8  EC33  F02F         	call	_Mcu_Int1Isr	;wreg free
 32785                           
 32786                           ;irq.c: 170: }
 32787                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 32788  0040AC  B0A4               	btfsc	4004,0,c	;volatile
 32789                           
 32790                           ;irq.c: 203: {
 32791                           ;irq.c: 205: Rtcc_RtcIsr();
 32792  0040AE  EC31  F02F         	call	_Rtcc_RtcIsr	;wreg free
 32793                           
 32794                           ;irq.c: 206: }
 32795                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 32796  0040B2  BA9E               	btfsc	3998,5,c	;volatile
 32797                           
 32798                           ;irq.c: 212: {
 32799                           ;irq.c: 214: Uart_Uart1RxIsr();
 32800  0040B4  ECEA  F02E         	call	_Uart_Uart1RxIsr	;wreg free
 32801  0040B8  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 32802  0040BC  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 32803  0040C0  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 32804  0040C4  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 32805  0040C8  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 32806  0040CC  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 32807  0040D0  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 32808  0040D4  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 32809  0040D8  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 32810  0040DC  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 32811  0040E0  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 32812  0040E4  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 32813  0040E8  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 32814  0040EC  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 32815  0040F0  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 32816  0040F4  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 32817  0040F8  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 32818  0040FC  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 32819  004100  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 32820  004102  0011               	retfie		f
 32821  004104                     __end_of_HighPriorityIsr:
 32822                           	opt stack 0
 32823                           tosu	equ	0xFFF
 32824                           tosh	equ	0xFFE
 32825                           tosl	equ	0xFFD
 32826                           pclatu	equ	0xFFB
 32827                           pclath	equ	0xFFA
 32828                           tblptru	equ	0xFF8
 32829                           tblptrh	equ	0xFF7
 32830                           tblptrl	equ	0xFF6
 32831                           tablat	equ	0xFF5
 32832                           prodh	equ	0xFF4
 32833                           prodl	equ	0xFF3
 32834                           intcon	equ	0xFF2
 32835                           intcon2	equ	0xFF1
 32836                           intcon3	equ	0xFF0
 32837                           indf0	equ	0xFEF
 32838                           postinc0	equ	0xFEE
 32839                           plusw0	equ	0xFEB
 32840                           fsr0h	equ	0xFEA
 32841                           fsr0l	equ	0xFE9
 32842                           wreg	equ	0xFE8
 32843                           indf1	equ	0xFE7
 32844                           postinc1	equ	0xFE6
 32845                           postdec1	equ	0xFE5
 32846                           plusw1	equ	0xFE3
 32847                           fsr1h	equ	0xFE2
 32848                           fsr1l	equ	0xFE1
 32849                           bsr	equ	0xFE0
 32850                           indf2	equ	0xFDF
 32851                           postinc2	equ	0xFDE
 32852                           postdec2	equ	0xFDD
 32853                           plusw2	equ	0xFDB
 32854                           fsr2h	equ	0xFDA
 32855                           fsr2l	equ	0xFD9
 32856                           status	equ	0xFD8
 32857                           
 32858 ;; *************** function _Uart_Uart1RxIsr *****************
 32859 ;; Defined at:
 32860 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32861 ;; Parameters:    Size  Location     Type
 32862 ;;		None
 32863 ;; Auto vars:     Size  Location     Type
 32864 ;;		None
 32865 ;; Return value:  Size  Location     Type
 32866 ;;                  1    wreg      void 
 32867 ;; Registers used:
 32868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32869 ;; Tracked objects:
 32870 ;;		On entry : 0/0
 32871 ;;		On exit  : 0/0
 32872 ;;		Unchanged: 0/0
 32873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32878 ;;Total ram usage:        0 bytes
 32879 ;; Hardware stack levels used:    1
 32880 ;; Hardware stack levels required when called:    2
 32881 ;; This function calls:
 32882 ;;		_Uart_MdmGsmGprsReadService
 32883 ;; This function is called by:
 32884 ;;		_HighPriorityIsr
 32885 ;; This function uses a non-reentrant model
 32886 ;;
 32887                           
 32888                           	psect	text161
 32889  005DD4                     __ptext161:
 32890                           	opt stack 0
 32891  005DD4                     _Uart_Uart1RxIsr:
 32892                           	opt stack 8
 32893                           
 32894                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 32895                           ;uart_drv.c: 590: UartRxData = RCREG1;
 32896                           
 32897                           ;incstack = 0
 32898  005DD4  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 32899                           
 32900                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 32901  005DD8  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 32902  005DDC  0E01               	movlw	1
 32903  005DDE  ECC8  F01C         	call	_Uart_MdmGsmGprsReadService
 32904  005DE2  0012               	return		;funcret
 32905  005DE4                     __end_of_Uart_Uart1RxIsr:
 32906                           	opt stack 0
 32907                           tosu	equ	0xFFF
 32908                           tosh	equ	0xFFE
 32909                           tosl	equ	0xFFD
 32910                           pclatu	equ	0xFFB
 32911                           pclath	equ	0xFFA
 32912                           tblptru	equ	0xFF8
 32913                           tblptrh	equ	0xFF7
 32914                           tblptrl	equ	0xFF6
 32915                           tablat	equ	0xFF5
 32916                           prodh	equ	0xFF4
 32917                           prodl	equ	0xFF3
 32918                           intcon	equ	0xFF2
 32919                           intcon2	equ	0xFF1
 32920                           intcon3	equ	0xFF0
 32921                           indf0	equ	0xFEF
 32922                           postinc0	equ	0xFEE
 32923                           plusw0	equ	0xFEB
 32924                           fsr0h	equ	0xFEA
 32925                           fsr0l	equ	0xFE9
 32926                           wreg	equ	0xFE8
 32927                           indf1	equ	0xFE7
 32928                           postinc1	equ	0xFE6
 32929                           postdec1	equ	0xFE5
 32930                           plusw1	equ	0xFE3
 32931                           fsr1h	equ	0xFE2
 32932                           fsr1l	equ	0xFE1
 32933                           bsr	equ	0xFE0
 32934                           indf2	equ	0xFDF
 32935                           postinc2	equ	0xFDE
 32936                           postdec2	equ	0xFDD
 32937                           plusw2	equ	0xFDB
 32938                           fsr2h	equ	0xFDA
 32939                           fsr2l	equ	0xFD9
 32940                           status	equ	0xFD8
 32941                           
 32942 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 32943 ;; Defined at:
 32944 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32945 ;; Parameters:    Size  Location     Type
 32946 ;;  Module          1    wreg     unsigned char 
 32947 ;;  UartData        1    3[COMRAM] unsigned char 
 32948 ;; Auto vars:     Size  Location     Type
 32949 ;;  Module          1    0[COMRAM] unsigned char 
 32950 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 32951 ;; Return value:  Size  Location     Type
 32952 ;;                  1    wreg      void 
 32953 ;; Registers used:
 32954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32955 ;; Tracked objects:
 32956 ;;		On entry : 0/0
 32957 ;;		On exit  : 0/0
 32958 ;;		Unchanged: 0/0
 32959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32960 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32963 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32964 ;;Total ram usage:        3 bytes
 32965 ;; Hardware stack levels used:    1
 32966 ;; Hardware stack levels required when called:    1
 32967 ;; This function calls:
 32968 ;;		i2_GenerateEvt
 32969 ;; This function is called by:
 32970 ;;		_Uart_Uart1RxIsr
 32971 ;; This function uses a non-reentrant model
 32972 ;;
 32973                           
 32974                           	psect	text162
 32975  003990                     __ptext162:
 32976                           	opt stack 0
 32977  003990                     _Uart_MdmGsmGprsReadService:
 32978                           	opt stack 8
 32979                           
 32980                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 32981                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 32982                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 32983                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 32984                           
 32985                           ;incstack = 0
 32986  003990  0E00               	movlw	0
 32987  003992  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 32988  003994  0E00               	movlw	0
 32989  003996  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 32990                           
 32991                           ;uart_drv.c: 383: switch (RxState)
 32992  003998  D058               	goto	i2l680
 32993  00399A                     
 32994                           ;uart_drv.c: 387: if (UartData == '\r')
 32995  00399A  0E0D               	movlw	13
 32996  00399C  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 32997  00399E  A4D8               	btfss	status,2,c
 32998  0039A0  D003               	goto	i2l682
 32999                           
 33000                           ;uart_drv.c: 388: {
 33001                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 33002  0039A2  0E01               	movlw	1
 33003  0039A4  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 33004                           
 33005                           ;uart_drv.c: 391: }
 33006  0039A6  0012               	return	
 33007  0039A8                     i2l682:
 33008                           
 33009                           ;uart_drv.c: 392: else
 33010                           ;uart_drv.c: 393: {
 33011                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 33012  0039A8  0E90               	movlw	144
 33013  0039AA  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33014  0039AC  0E01               	movlw	1
 33015  0039AE  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33016  0039B0  B0D8               	btfsc	status,0,c
 33017  0039B2  0012               	return	
 33018                           
 33019                           ;uart_drv.c: 395: {
 33020                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 33021  0039B4  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 33022  0039B6  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33023  0039B8  6ED9               	movwf	fsr2l,c
 33024  0039BA  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 33025  0039BC  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33026  0039BE  6EDA               	movwf	fsr2h,c
 33027  0039C0  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 33028                           
 33029                           ;uart_drv.c: 399: RxCounter++;
 33030  0039C4  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 33031  0039C6  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 33032                           
 33033                           ;uart_drv.c: 400: }
 33034                           ;uart_drv.c: 401: }
 33035                           ;uart_drv.c: 402: break;
 33036  0039C8  0012               	return	
 33037  0039CA                     
 33038                           ;uart_drv.c: 406: if (UartData == '\n')
 33039  0039CA  0E0A               	movlw	10
 33040  0039CC  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 33041  0039CE  A4D8               	btfss	status,2,c
 33042  0039D0  D035               	goto	i2l688
 33043                           
 33044                           ;uart_drv.c: 407: {
 33045                           ;uart_drv.c: 409: if (RxCounter > 0)
 33046  0039D2  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33047  0039D4  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33048  0039D6  B4D8               	btfsc	status,2,c
 33049  0039D8  D031               	goto	i2l688
 33050                           
 33051                           ;uart_drv.c: 410: {
 33052                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 33053  0039DA  0E00               	movlw	0
 33054  0039DC  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 33055  0039DE  0E00               	movlw	0
 33056  0039E0  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 33057  0039E2  D010               	goto	i2l689
 33058  0039E4                     
 33059                           ;uart_drv.c: 413: {
 33060                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 33061  0039E4  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 33062  0039E6  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33063  0039E8  6ED9               	movwf	fsr2l,c
 33064  0039EA  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 33065  0039EC  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33066  0039EE  6EDA               	movwf	fsr2h,c
 33067  0039F0  0E58               	movlw	low _RxBuffer
 33068  0039F2  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33069  0039F4  6EE1               	movwf	fsr1l,c
 33070  0039F6  0E0C               	movlw	high _RxBuffer
 33071  0039F8  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33072  0039FA  6EE2               	movwf	fsr1h,c
 33073  0039FC  CFDF FFE7          	movff	indf2,indf1
 33074  003A00  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 33075  003A02  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 33076  003A04                     i2l689:
 33077  003A04  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33078  003A06  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33079  003A08  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33080  003A0A  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33081  003A0C  A0D8               	btfss	status,0,c
 33082  003A0E  D7EA               	goto	i2l690
 33083                           
 33084                           ;uart_drv.c: 415: }
 33085                           ;uart_drv.c: 417: RxLen = RxCounter;
 33086  003A10  C023  F0BE         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 33087  003A14  C024  F0BF         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 33088                           
 33089                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 33090  003A18  0E3C               	movlw	low _NewStringReceived
 33091  003A1A  6E01               	movwf	i2GenerateEvt@Event,c
 33092  003A1C  0E00               	movlw	high _NewStringReceived
 33093  003A1E  6E02               	movwf	i2GenerateEvt@Event+1,c
 33094  003A20  ECAB  F02E         	call	i2_GenerateEvt	;wreg free
 33095                           
 33096                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 33097  003A24  0E3B               	movlw	low _NewMdmEvtParserRequest
 33098  003A26  6E01               	movwf	i2GenerateEvt@Event,c
 33099  003A28  0E00               	movlw	high _NewMdmEvtParserRequest
 33100  003A2A  6E02               	movwf	i2GenerateEvt@Event+1,c
 33101  003A2C  ECAB  F02E         	call	i2_GenerateEvt	;wreg free
 33102                           
 33103                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 33104  003A30  0E3A               	movlw	low _NewStringMdmTerminal
 33105  003A32  6E01               	movwf	i2GenerateEvt@Event,c
 33106  003A34  0E00               	movlw	high _NewStringMdmTerminal
 33107  003A36  6E02               	movwf	i2GenerateEvt@Event+1,c
 33108  003A38  ECAB  F02E         	call	i2_GenerateEvt	;wreg free
 33109  003A3C                     i2l688:
 33110                           
 33111                           ;uart_drv.c: 427: }
 33112                           ;uart_drv.c: 429: RxState = ReadData;
 33113                           
 33114                           ;uart_drv.c: 424: else
 33115                           ;uart_drv.c: 425: {
 33116                           
 33117                           ;uart_drv.c: 422: }
 33118                           ;uart_drv.c: 423: }
 33119  003A3C  0E00               	movlw	0
 33120  003A3E  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 33121                           
 33122                           ;uart_drv.c: 431: RxCounter = 0;
 33123  003A40  0E00               	movlw	0
 33124  003A42  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 33125  003A44  0E00               	movlw	0
 33126  003A46  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 33127                           
 33128                           ;uart_drv.c: 436: }
 33129                           
 33130                           ;uart_drv.c: 435: break;
 33131                           
 33132                           ;uart_drv.c: 434: default:
 33133                           
 33134                           ;uart_drv.c: 432: break;
 33135  003A48  0012               	return	
 33136  003A4A                     i2l680:
 33137  003A4A  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 33138                           
 33139                           ; Switch size 1, requested type "space"
 33140                           ; Number of cases is 2, Range of values is 0 to 1
 33141                           ; switch strategies available:
 33142                           ; Name         Instructions Cycles
 33143                           ; simple_byte            7     4 (average)
 33144                           ;	Chosen strategy is simple_byte
 33145  003A4C  0A00               	xorlw	0	; case 0
 33146  003A4E  B4D8               	btfsc	status,2,c
 33147  003A50  D7A4               	goto	i2l681
 33148  003A52  0A01               	xorlw	1	; case 1
 33149  003A54  A4D8               	btfss	status,2,c
 33150  003A56  0012               	return	
 33151  003A58  D7B8               	goto	i2l686
 33152  003A5A                     __end_of_Uart_MdmGsmGprsReadService:
 33153                           	opt stack 0
 33154                           tosu	equ	0xFFF
 33155                           tosh	equ	0xFFE
 33156                           tosl	equ	0xFFD
 33157                           pclatu	equ	0xFFB
 33158                           pclath	equ	0xFFA
 33159                           tblptru	equ	0xFF8
 33160                           tblptrh	equ	0xFF7
 33161                           tblptrl	equ	0xFF6
 33162                           tablat	equ	0xFF5
 33163                           prodh	equ	0xFF4
 33164                           prodl	equ	0xFF3
 33165                           intcon	equ	0xFF2
 33166                           intcon2	equ	0xFF1
 33167                           intcon3	equ	0xFF0
 33168                           indf0	equ	0xFEF
 33169                           postinc0	equ	0xFEE
 33170                           plusw0	equ	0xFEB
 33171                           fsr0h	equ	0xFEA
 33172                           fsr0l	equ	0xFE9
 33173                           wreg	equ	0xFE8
 33174                           indf1	equ	0xFE7
 33175                           postinc1	equ	0xFE6
 33176                           postdec1	equ	0xFE5
 33177                           plusw1	equ	0xFE3
 33178                           fsr1h	equ	0xFE2
 33179                           fsr1l	equ	0xFE1
 33180                           bsr	equ	0xFE0
 33181                           indf2	equ	0xFDF
 33182                           postinc2	equ	0xFDE
 33183                           postdec2	equ	0xFDD
 33184                           plusw2	equ	0xFDB
 33185                           fsr2h	equ	0xFDA
 33186                           fsr2l	equ	0xFD9
 33187                           status	equ	0xFD8
 33188                           
 33189 ;; *************** function i2_GenerateEvt *****************
 33190 ;; Defined at:
 33191 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33192 ;; Parameters:    Size  Location     Type
 33193 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 33194 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33195 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33196 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 33197 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 33198 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33199 ;; Auto vars:     Size  Location     Type
 33200 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 33201 ;; Return value:  Size  Location     Type
 33202 ;;                  1    wreg      enum E7699
 33203 ;; Registers used:
 33204 ;;		wreg, fsr2l, fsr2h, status,2
 33205 ;; Tracked objects:
 33206 ;;		On entry : 0/0
 33207 ;;		On exit  : 0/0
 33208 ;;		Unchanged: 0/0
 33209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33213 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33214 ;;Total ram usage:        3 bytes
 33215 ;; Hardware stack levels used:    1
 33216 ;; This function calls:
 33217 ;;		Nothing
 33218 ;; This function is called by:
 33219 ;;		_Uart_MdmGsmGprsReadService
 33220 ;; This function uses a non-reentrant model
 33221 ;;
 33222                           
 33223                           	psect	text163
 33224  005D56                     __ptext163:
 33225                           	opt stack 0
 33226  005D56                     i2_GenerateEvt:
 33227                           	opt stack 8
 33228                           
 33229                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 33230                           
 33231                           ;incstack = 0
 33232  005D56  0E00               	movlw	0
 33233  005D58  6E03               	movwf	i2GenerateEvt@EventStatus,c
 33234                           
 33235                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 33236  005D5A  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 33237  005D5E  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 33238  005D62  0E02               	movlw	2
 33239  005D64  6EDF               	movwf	indf2,c
 33240                           
 33241                           ;os_ser.c: 83: EventStatus = EventSent;
 33242  005D66  0E02               	movlw	2
 33243  005D68  6E03               	movwf	i2GenerateEvt@EventStatus,c
 33244  005D6A  0012               	return	
 33245  005D6C                     __end_ofi2_GenerateEvt:
 33246                           	opt stack 0
 33247                           tosu	equ	0xFFF
 33248                           tosh	equ	0xFFE
 33249                           tosl	equ	0xFFD
 33250                           pclatu	equ	0xFFB
 33251                           pclath	equ	0xFFA
 33252                           tblptru	equ	0xFF8
 33253                           tblptrh	equ	0xFF7
 33254                           tblptrl	equ	0xFF6
 33255                           tablat	equ	0xFF5
 33256                           prodh	equ	0xFF4
 33257                           prodl	equ	0xFF3
 33258                           intcon	equ	0xFF2
 33259                           intcon2	equ	0xFF1
 33260                           intcon3	equ	0xFF0
 33261                           indf0	equ	0xFEF
 33262                           postinc0	equ	0xFEE
 33263                           plusw0	equ	0xFEB
 33264                           fsr0h	equ	0xFEA
 33265                           fsr0l	equ	0xFE9
 33266                           wreg	equ	0xFE8
 33267                           indf1	equ	0xFE7
 33268                           postinc1	equ	0xFE6
 33269                           postdec1	equ	0xFE5
 33270                           plusw1	equ	0xFE3
 33271                           fsr1h	equ	0xFE2
 33272                           fsr1l	equ	0xFE1
 33273                           bsr	equ	0xFE0
 33274                           indf2	equ	0xFDF
 33275                           postinc2	equ	0xFDE
 33276                           postdec2	equ	0xFDD
 33277                           plusw2	equ	0xFDB
 33278                           fsr2h	equ	0xFDA
 33279                           fsr2l	equ	0xFD9
 33280                           status	equ	0xFD8
 33281                           
 33282 ;; *************** function _Rtcc_RtcIsr *****************
 33283 ;; Defined at:
 33284 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 33285 ;; Parameters:    Size  Location     Type
 33286 ;;		None
 33287 ;; Auto vars:     Size  Location     Type
 33288 ;;		None
 33289 ;; Return value:  Size  Location     Type
 33290 ;;                  1    wreg      void 
 33291 ;; Registers used:
 33292 ;;		wreg, status,2, status,0
 33293 ;; Tracked objects:
 33294 ;;		On entry : 0/0
 33295 ;;		On exit  : 0/0
 33296 ;;		Unchanged: 0/0
 33297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33302 ;;Total ram usage:        0 bytes
 33303 ;; Hardware stack levels used:    1
 33304 ;; This function calls:
 33305 ;;		Nothing
 33306 ;; This function is called by:
 33307 ;;		_HighPriorityIsr
 33308 ;; This function uses a non-reentrant model
 33309 ;;
 33310                           
 33311                           	psect	text164
 33312  005E62                     __ptext164:
 33313                           	opt stack 0
 33314  005E62                     _Rtcc_RtcIsr:
 33315                           	opt stack 10
 33316                           
 33317                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 33318                           
 33319                           ;incstack = 0
 33320  005E62  90A4               	bcf	4004,0,c	;volatile
 33321  005E64  0012               	return	
 33322  005E66                     __end_of_Rtcc_RtcIsr:
 33323                           	opt stack 0
 33324                           tosu	equ	0xFFF
 33325                           tosh	equ	0xFFE
 33326                           tosl	equ	0xFFD
 33327                           pclatu	equ	0xFFB
 33328                           pclath	equ	0xFFA
 33329                           tblptru	equ	0xFF8
 33330                           tblptrh	equ	0xFF7
 33331                           tblptrl	equ	0xFF6
 33332                           tablat	equ	0xFF5
 33333                           prodh	equ	0xFF4
 33334                           prodl	equ	0xFF3
 33335                           intcon	equ	0xFF2
 33336                           intcon2	equ	0xFF1
 33337                           intcon3	equ	0xFF0
 33338                           indf0	equ	0xFEF
 33339                           postinc0	equ	0xFEE
 33340                           plusw0	equ	0xFEB
 33341                           fsr0h	equ	0xFEA
 33342                           fsr0l	equ	0xFE9
 33343                           wreg	equ	0xFE8
 33344                           indf1	equ	0xFE7
 33345                           postinc1	equ	0xFE6
 33346                           postdec1	equ	0xFE5
 33347                           plusw1	equ	0xFE3
 33348                           fsr1h	equ	0xFE2
 33349                           fsr1l	equ	0xFE1
 33350                           bsr	equ	0xFE0
 33351                           indf2	equ	0xFDF
 33352                           postinc2	equ	0xFDE
 33353                           postdec2	equ	0xFDD
 33354                           plusw2	equ	0xFDB
 33355                           fsr2h	equ	0xFDA
 33356                           fsr2l	equ	0xFD9
 33357                           status	equ	0xFD8
 33358                           
 33359 ;; *************** function _Mcu_Int1Isr *****************
 33360 ;; Defined at:
 33361 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 33362 ;; Parameters:    Size  Location     Type
 33363 ;;		None
 33364 ;; Auto vars:     Size  Location     Type
 33365 ;;		None
 33366 ;; Return value:  Size  Location     Type
 33367 ;;                  1    wreg      void 
 33368 ;; Registers used:
 33369 ;;		wreg, status,2, status,0
 33370 ;; Tracked objects:
 33371 ;;		On entry : 0/0
 33372 ;;		On exit  : 0/0
 33373 ;;		Unchanged: 0/0
 33374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33379 ;;Total ram usage:        0 bytes
 33380 ;; Hardware stack levels used:    1
 33381 ;; This function calls:
 33382 ;;		Nothing
 33383 ;; This function is called by:
 33384 ;;		_HighPriorityIsr
 33385 ;; This function uses a non-reentrant model
 33386 ;;
 33387                           
 33388                           	psect	text165
 33389  005E66                     __ptext165:
 33390                           	opt stack 0
 33391  005E66                     _Mcu_Int1Isr:
 33392                           	opt stack 10
 33393                           
 33394                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 33395                           
 33396                           ;incstack = 0
 33397  005E66  90F0               	bcf	intcon3,0,c	;volatile
 33398  005E68  0012               	return	
 33399  005E6A                     __end_of_Mcu_Int1Isr:
 33400                           	opt stack 0
 33401                           tosu	equ	0xFFF
 33402                           tosh	equ	0xFFE
 33403                           tosl	equ	0xFFD
 33404                           pclatu	equ	0xFFB
 33405                           pclath	equ	0xFFA
 33406                           tblptru	equ	0xFF8
 33407                           tblptrh	equ	0xFF7
 33408                           tblptrl	equ	0xFF6
 33409                           tablat	equ	0xFF5
 33410                           prodh	equ	0xFF4
 33411                           prodl	equ	0xFF3
 33412                           intcon	equ	0xFF2
 33413                           intcon2	equ	0xFF1
 33414                           intcon3	equ	0xFF0
 33415                           indf0	equ	0xFEF
 33416                           postinc0	equ	0xFEE
 33417                           plusw0	equ	0xFEB
 33418                           fsr0h	equ	0xFEA
 33419                           fsr0l	equ	0xFE9
 33420                           wreg	equ	0xFE8
 33421                           indf1	equ	0xFE7
 33422                           postinc1	equ	0xFE6
 33423                           postdec1	equ	0xFE5
 33424                           plusw1	equ	0xFE3
 33425                           fsr1h	equ	0xFE2
 33426                           fsr1l	equ	0xFE1
 33427                           bsr	equ	0xFE0
 33428                           indf2	equ	0xFDF
 33429                           postinc2	equ	0xFDE
 33430                           postdec2	equ	0xFDD
 33431                           plusw2	equ	0xFDB
 33432                           fsr2h	equ	0xFDA
 33433                           fsr2l	equ	0xFD9
 33434                           status	equ	0xFD8
 33435                           
 33436 ;; *************** function _Mcu_Int0Isr *****************
 33437 ;; Defined at:
 33438 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 33439 ;; Parameters:    Size  Location     Type
 33440 ;;		None
 33441 ;; Auto vars:     Size  Location     Type
 33442 ;;		None
 33443 ;; Return value:  Size  Location     Type
 33444 ;;                  1    wreg      void 
 33445 ;; Registers used:
 33446 ;;		wreg, status,2, status,0
 33447 ;; Tracked objects:
 33448 ;;		On entry : 0/0
 33449 ;;		On exit  : 0/0
 33450 ;;		Unchanged: 0/0
 33451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33456 ;;Total ram usage:        0 bytes
 33457 ;; Hardware stack levels used:    1
 33458 ;; This function calls:
 33459 ;;		Nothing
 33460 ;; This function is called by:
 33461 ;;		_HighPriorityIsr
 33462 ;; This function uses a non-reentrant model
 33463 ;;
 33464                           
 33465                           	psect	text166
 33466  005E6A                     __ptext166:
 33467                           	opt stack 0
 33468  005E6A                     _Mcu_Int0Isr:
 33469                           	opt stack 10
 33470                           
 33471                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 33472                           
 33473                           ;incstack = 0
 33474  005E6A  92F2               	bcf	intcon,1,c	;volatile
 33475  005E6C  0012               	return	
 33476  005E6E                     __end_of_Mcu_Int0Isr:
 33477                           	opt stack 0
 33478                           tosu	equ	0xFFF
 33479                           tosh	equ	0xFFE
 33480                           tosl	equ	0xFFD
 33481                           pclatu	equ	0xFFB
 33482                           pclath	equ	0xFFA
 33483                           tblptru	equ	0xFF8
 33484                           tblptrh	equ	0xFF7
 33485                           tblptrl	equ	0xFF6
 33486                           tablat	equ	0xFF5
 33487                           prodh	equ	0xFF4
 33488                           prodl	equ	0xFF3
 33489                           intcon	equ	0xFF2
 33490                           intcon2	equ	0xFF1
 33491                           intcon3	equ	0xFF0
 33492                           indf0	equ	0xFEF
 33493                           postinc0	equ	0xFEE
 33494                           plusw0	equ	0xFEB
 33495                           fsr0h	equ	0xFEA
 33496                           fsr0l	equ	0xFE9
 33497                           wreg	equ	0xFE8
 33498                           indf1	equ	0xFE7
 33499                           postinc1	equ	0xFE6
 33500                           postdec1	equ	0xFE5
 33501                           plusw1	equ	0xFE3
 33502                           fsr1h	equ	0xFE2
 33503                           fsr1l	equ	0xFE1
 33504                           bsr	equ	0xFE0
 33505                           indf2	equ	0xFDF
 33506                           postinc2	equ	0xFDE
 33507                           postdec2	equ	0xFDD
 33508                           plusw2	equ	0xFDB
 33509                           fsr2h	equ	0xFDA
 33510                           fsr2l	equ	0xFD9
 33511                           status	equ	0xFD8
 33512                           tosu	equ	0xFFF
 33513                           tosh	equ	0xFFE
 33514                           tosl	equ	0xFFD
 33515                           pclatu	equ	0xFFB
 33516                           pclath	equ	0xFFA
 33517                           tblptru	equ	0xFF8
 33518                           tblptrh	equ	0xFF7
 33519                           tblptrl	equ	0xFF6
 33520                           tablat	equ	0xFF5
 33521                           prodh	equ	0xFF4
 33522                           prodl	equ	0xFF3
 33523                           intcon	equ	0xFF2
 33524                           intcon2	equ	0xFF1
 33525                           intcon3	equ	0xFF0
 33526                           indf0	equ	0xFEF
 33527                           postinc0	equ	0xFEE
 33528                           plusw0	equ	0xFEB
 33529                           fsr0h	equ	0xFEA
 33530                           fsr0l	equ	0xFE9
 33531                           wreg	equ	0xFE8
 33532                           indf1	equ	0xFE7
 33533                           postinc1	equ	0xFE6
 33534                           postdec1	equ	0xFE5
 33535                           plusw1	equ	0xFE3
 33536                           fsr1h	equ	0xFE2
 33537                           fsr1l	equ	0xFE1
 33538                           bsr	equ	0xFE0
 33539                           indf2	equ	0xFDF
 33540                           postinc2	equ	0xFDE
 33541                           postdec2	equ	0xFDD
 33542                           plusw2	equ	0xFDB
 33543                           fsr2h	equ	0xFDA
 33544                           fsr2l	equ	0xFD9
 33545                           status	equ	0xFD8
 33546                           
 33547                           	psect	text167
 33548  000000                     __ptext167:
 33549                           	opt stack 0
 33550                           tosu	equ	0xFFF
 33551                           tosh	equ	0xFFE
 33552                           tosl	equ	0xFFD
 33553                           pclatu	equ	0xFFB
 33554                           pclath	equ	0xFFA
 33555                           tblptru	equ	0xFF8
 33556                           tblptrh	equ	0xFF7
 33557                           tblptrl	equ	0xFF6
 33558                           tablat	equ	0xFF5
 33559                           prodh	equ	0xFF4
 33560                           prodl	equ	0xFF3
 33561                           intcon	equ	0xFF2
 33562                           intcon2	equ	0xFF1
 33563                           intcon3	equ	0xFF0
 33564                           indf0	equ	0xFEF
 33565                           postinc0	equ	0xFEE
 33566                           plusw0	equ	0xFEB
 33567                           fsr0h	equ	0xFEA
 33568                           fsr0l	equ	0xFE9
 33569                           wreg	equ	0xFE8
 33570                           indf1	equ	0xFE7
 33571                           postinc1	equ	0xFE6
 33572                           postdec1	equ	0xFE5
 33573                           plusw1	equ	0xFE3
 33574                           fsr1h	equ	0xFE2
 33575                           fsr1l	equ	0xFE1
 33576                           bsr	equ	0xFE0
 33577                           indf2	equ	0xFDF
 33578                           postinc2	equ	0xFDE
 33579                           postdec2	equ	0xFDD
 33580                           plusw2	equ	0xFDB
 33581                           fsr2h	equ	0xFDA
 33582                           fsr2l	equ	0xFD9
 33583                           status	equ	0xFD8
 33584                           
 33585                           	psect	rparam
 33586  0000                     tosu	equ	0xFFF
 33587                           tosh	equ	0xFFE
 33588                           tosl	equ	0xFFD
 33589                           pclatu	equ	0xFFB
 33590                           pclath	equ	0xFFA
 33591                           tblptru	equ	0xFF8
 33592                           tblptrh	equ	0xFF7
 33593                           tblptrl	equ	0xFF6
 33594                           tablat	equ	0xFF5
 33595                           prodh	equ	0xFF4
 33596                           prodl	equ	0xFF3
 33597                           intcon	equ	0xFF2
 33598                           intcon2	equ	0xFF1
 33599                           intcon3	equ	0xFF0
 33600                           indf0	equ	0xFEF
 33601                           postinc0	equ	0xFEE
 33602                           plusw0	equ	0xFEB
 33603                           fsr0h	equ	0xFEA
 33604                           fsr0l	equ	0xFE9
 33605                           wreg	equ	0xFE8
 33606                           indf1	equ	0xFE7
 33607                           postinc1	equ	0xFE6
 33608                           postdec1	equ	0xFE5
 33609                           plusw1	equ	0xFE3
 33610                           fsr1h	equ	0xFE2
 33611                           fsr1l	equ	0xFE1
 33612                           bsr	equ	0xFE0
 33613                           indf2	equ	0xFDF
 33614                           postinc2	equ	0xFDE
 33615                           postdec2	equ	0xFDD
 33616                           plusw2	equ	0xFDB
 33617                           fsr2h	equ	0xFDA
 33618                           fsr2l	equ	0xFD9
 33619                           status	equ	0xFD8
 33620                           
 33621                           	psect	temp
 33622  000042                     btemp:
 33623                           	opt stack 0
 33624  000042                     	ds	1
 33625  0000                     int$flags	set	btemp
 33626  0000                     wtemp6	set	btemp+1
 33627                           tosu	equ	0xFFF
 33628                           tosh	equ	0xFFE
 33629                           tosl	equ	0xFFD
 33630                           pclatu	equ	0xFFB
 33631                           pclath	equ	0xFFA
 33632                           tblptru	equ	0xFF8
 33633                           tblptrh	equ	0xFF7
 33634                           tblptrl	equ	0xFF6
 33635                           tablat	equ	0xFF5
 33636                           prodh	equ	0xFF4
 33637                           prodl	equ	0xFF3
 33638                           intcon	equ	0xFF2
 33639                           intcon2	equ	0xFF1
 33640                           intcon3	equ	0xFF0
 33641                           indf0	equ	0xFEF
 33642                           postinc0	equ	0xFEE
 33643                           plusw0	equ	0xFEB
 33644                           fsr0h	equ	0xFEA
 33645                           fsr0l	equ	0xFE9
 33646                           wreg	equ	0xFE8
 33647                           indf1	equ	0xFE7
 33648                           postinc1	equ	0xFE6
 33649                           postdec1	equ	0xFE5
 33650                           plusw1	equ	0xFE3
 33651                           fsr1h	equ	0xFE2
 33652                           fsr1l	equ	0xFE1
 33653                           bsr	equ	0xFE0
 33654                           indf2	equ	0xFDF
 33655                           postinc2	equ	0xFDE
 33656                           postdec2	equ	0xFDD
 33657                           plusw2	equ	0xFDB
 33658                           fsr2h	equ	0xFDA
 33659                           fsr2l	equ	0xFD9
 33660                           status	equ	0xFD8


Data Sizes:
    Strings     359
    Constant    567
    Data        176
    BSS         2321
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     76     127
    BANK1           256    201     255
    BANK2           256    200     256
    BANK3           256      0     255
    BANK4           192      0     190
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     196
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK5[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_29(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK5[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx(BANK7[132]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 10
		 -> ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8934 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK5[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4602$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4602$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4602$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4602$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3055$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3045$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3045$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3021$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3021$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3021$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3021$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@on(BANK0[2]), MyApp_Task@off(BANK0[2]), triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@on(BANK0[2]), MyApp_Task@off(BANK0[2]), triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2517_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2517_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK3[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK3[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), 
		 -> NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), 
		 -> NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(COMRAM[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), 
		 -> STR_16(CODE[17]), STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), 
		 -> STR_11(CODE[14]), STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_4(CODE[11]), STR_3(CODE[6]), STR_2(CODE[13]), 
		 -> STR_1(CODE[4]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@on(BANK0[2]), MyApp_Task@off(BANK0[2]), triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@on(BANK0[2]), MyApp_Task@off(BANK0[2]), triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MyApp_Task->_triggerRelay
    _triggerRelay->_I2cSlv_SendI2cMsg
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_MainTask->_Uart_InitUartModule
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  503642
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4410
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4032
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3786
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2368
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  499232
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  249709
                                             71 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  249523
                                             71 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      22
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   51775
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   47243
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   27130
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   26491
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   20484
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8054
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6469
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5915
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2764
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   58418
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   58418
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41416
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3702
                                             45 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3157
                                             36 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9475
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2752
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7334
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          17    17      0   11582
                                             42 BANK0     16    16      0
                  _I2cSlv_SendI2cMsg
                _Led_SetLedBlinkTime
                   _Led_SetLedStatus
                      _Mdm_IsRinging
                       _triggerRelay
 ---------------------------------------------------------------------------------
 (4) _triggerRelay                                         5     4      1    4172
                                             37 BANK0      5     4      1
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3919
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     332
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   58377
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2019
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   14533
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      21    21      0    5902
                                             40 BANK0     21    21      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0      69
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _StringCompare                                       11     5      6     960
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   10683
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8110
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3652
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2514
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13478
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2598
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2598
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   37523
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   18798
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   18725
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2439
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    3627
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    1797
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    5699
                                             52 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    5699
                                             41 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2053
                                             36 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedStatus                                     2     1      1     444
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1629
                                             36 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1029
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16062
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9228
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8730
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1375
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1198
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     976
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5459
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2598
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2447
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2019
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _I2cSlv_SendI2cMsg
           _GenerateEvt
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_IsRinging
           _ReceiveEvt
         _triggerRelay
           _I2cSlv_SendI2cMsg
             _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _I2cSlv_SendI2cMsg
           _GenerateEvt
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_IsRinging
           _ReceiveEvt
         _triggerRelay
           _I2cSlv_SendI2cMsg
             _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      C4      20       76.6%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9      FF       7       99.6%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      BE      14       99.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     968       8        0.0%
DATA                 0      0     C88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 12 22:05:49 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 503C  
                              _USB_SD_Ptr FC59                      __size_of_TurnOnModem 0046  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 5C24  
                   ?_LedPulseStateMachine 0084                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 0086                             _USBDeviceInit 1FFE  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0031  
                                     l202 1F1A                                       l203 1F22  
                                     l205 1F6A                                       l206 1F90  
                                     l208 1F98                                       l160 1E5E  
                                     l209 1FB8                                       l161 1D34  
                                     l162 1E9C                                       l170 1DFC  
                                     l171 1E12                                       l163 1D40  
                                     l315 423A                                       l323 4206  
                                     l164 1D80                                       l316 41B0  
                                     l420 46A8                                       l500 4558  
                                     l173 1E16                                       l325 4220  
                                     l421 46C8                                       l237 5C30  
                                     l174 1E1E                                       l166 1D8E  
                                     l318 41BA                                       l422 46D4  
             __end_of_USBStdGetDscHandler 28DC                                       l510 452A  
                                     l502 44EA                                       l175 1E2A  
                                     l167 1DB6                                       l319 41E0  
                                     l423 46E0                                       l511 451A  
                                     l503 44DA                                       l192 1FC2  
                                     l176 1E40                                       l416 46F4  
                                     l424 46EC                                       l512 453E  
                                     l504 4500                                       l520 535C  
                                     l193 1EA2                                       l169 1DC8  
                                     l417 469A                                       l441 17EC  
                                     l513 451E                                       l505 44DE  
                                     l521 5328                                       l194 1FFA  
                                     l418 4722                                       l442 15F4  
                                     l514 4524                                       l506 44E4  
                                     l530 2FC8                                       l195 1EAE  
                                     l179 1E4C                                       l419 46A2  
                                     l523 5342                                       l531 302E  
                                     l196 1EEE                                       l700 5574  
                                     l444 163C                                       l532 2FF4  
                                     l445 1684                                       l541 5BEE  
                                     l198 1EFC                                       l446 16CC  
                                     l199 1F10                                       l631 2724  
                                     l447 1714                                       l448 175C  
                                     l528 3034                                       l633 279C  
                                     l625 26B0                                       l449 17A4  
                                     l529 3020                                       l538 5BF2  
                                     l546 3AB2                                       l651 52AC  
                                     l707 5698                                       l627 26D4  
                                     l715 560C                                       l539 5BEA  
                                     l547 3ACE                                       l660 52D0  
                                     l652 52A6                                       l716 55E2  
                                     l709 56B2                                       l629 26FC  
                                     l718 55FA                                       l639 5C16  
                                     l832 59D6                                       l844 3B86  
                                     l668 0C44                                       _BDT 000400  
                                     l790 5C4C                                       l855 4A3E  
                                     l775 2B1E                                       l864 4796  
                                     l856 49E4                                       l857 4A58  
                                     l698 5558                                       l858 4A14  
                                     l867 47A8                                       l981 2578  
                                     l982 25AC                                       l983 260A  
                                     l976 2652                                       l977 253A  
                                     l979 255E                                       l988 262E  
                                     l999 5430                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                 __end_of_HighPriorityIsr 4104                            ??_Mdm_MainTask 00A2  
                     ?_Mcu_StartSystemPll 0001                                _USBSuspend 585E  
                            ___awmod@sign 0082                      USBStdSetCfgHandler@i 0091  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8              I2cSlv_ReceiveI2cMsg@RxBuffer 0080  
                          _USBDeviceTasks 1BAA                              __CFG_IESO$ON 000000  
                          _USBDeviceState 00CB               Rtcc_AlarmConfig@AlarmConfig 007D  
            __end_of_I2cSlv_ReceiveI2cMsg 55D6                             ??_Mcu_Int0Isr 0001  
                           ??_Mcu_Int1Isr 0001                     ??_USBCtrlTrfRxService 007D  
                          ??_getsUSBUSART 0087                  USBEnableEndpoint@options 0085  
                              _CheckModem 2538             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1000 53FE                                      l1003 5416  
         InitGprsNetwork@GprsNetInitState 01ED                                      l1021 38D8  
                                    l1022 3910                               RiSm@Counter 02E2  
                                    l1023 3934                                      l1040 2D34  
                                    l1201 10B0                                      l1017 396C  
                                    l1025 3954                                      l1041 2C9E  
                                    l1210 0FBC                                      l1202 0DE8  
                                    l1018 38C8                                      l1211 1000  
                                    l1203 0E22                                      l1043 2D48  
                                    l1220 106E                                      l1204 0E96  
                                    l1060 2E82                                      l1044 2CD0  
                                    l1205 0E5E                                      l1061 2E9A  
                                    l1046 2D06                                      l1231 0A54  
                                    l1215 1010                                      l1207 0F3E  
                                    l2200 4E0E                                      l1240 06F6  
                                    l1232 05F4                                      l1216 1054  
                                    l1208 0F78                                      l1056 2F2E  
                                    l1064 2EE2                                      l2201 4DCE  
                                    l1209 0FB8                                      l1057 2E66  
                                    l1081 1A1A                                      l1401 5BDA  
                                    l2042 23CA                                      l1234 0AB6  
                                    l1242 07F2                                      l1082 1AD0  
                                    l1138 5AEE                                      l3002 5526  
                                    l2043 22AC                                      l1251 092A  
                                    l1243 082C                                      l1235 060C  
                                    l1083 1AF4                                      l3003 551E  
                                    l2044 23E0                                      l2060 30CA  
                                    l1260 0A32                                      l1252 096E  
                                    l1244 0856                                      l1236 0646  
                                    l2045 22D4                                      l1245 0890  
                                    l1237 0680                                      l1077 1B80  
                                    l1093 5274                                      l2046 2358  
                                    l2070 429E                                      l2206 581C  
                                    l1246 08CA                                      l1238 06BA  
                                    l1086 1B1A                                      l1078 19FE  
                                    l3006 553E                                      l3022 590E  
                                    l1094 5238                                      l1270 53EA  
                                    l2055 30F4                                      l2207 5808  
                                    l1247 090E                                      l1239 073E  
                                    l1087 1B66                                      l3007 5548  
                                    l3023 58FC                                      l2056 303C  
                                    l2072 42AC                                      l1264 0A42  
                                    l1256 097E                                      l3016 53A2  
                                    l1600 1C02                                      l1096 524E  
                                    l1361 3D52                                      l2057 3110  
                                    l2065 42D0                                      l2073 42BA  
                                    l1265 0A4A                                      l1257 09AA  
                                    l3017 5380                                      l1601 1C0A  
                                    l1097 5262                                      l1273 53B8  
                                    l2081 373E                                      l1370 3D1C  
                                    l1362 3CB4                                      l2090 5964  
                                    l2058 305A                                      l2066 4262  
                                    l2410 10B8                                      l1610 1CAC  
                                    l1602 1C20                                      l1363 3CD6  
                                    l2067 42F8                                      l1259 09C4  
                                    l3203 5CF8                                      l1603 1C2C  
                                    l1372 3D38                                      l2068 4272  
                                    l3220 3246                                      l2412 10DE  
                                    l1612 1CC0                                      l2164 4834  
                                    l1373 3D44                                      l1365 3CF8  
                                    l2069 4284                                      l2421 112E  
                                    l1605 1C54                                      l2165 47BA  
                                    l2086 596A                                      l1198 1078  
                                    l2350 00E2                                      l2414 10FA  
                                    l1622 549A                                      l2078 37E8  
                                    l2087 5958                                      l1199 0DD0  
                                    l2095 5178                                      l1391 568A  
                                    l1631 3ED8                                      l3223 32A6  
                                    l3151 4F02                                      l2423 114E  
                                    l1623 54AA                                      l1615 1CE6  
                                    l1607 1C6A                                      l1383 50D6  
                                    l2079 3730                                      l2167 4820  
                                    l1368 3D00                                      l2096 5142  
                                    l3224 325E                                      l3152 4EF8  
                                    l1712 28C4                                      l1704 3170  
                                    l1608 1C76                                      l1384 5096  
                                    l2089 595E                                      l2193 5226  
                                    l3225 3276                                      l3217 321E  
                                    l2353 0152                                      l2409 131E  
                                    l2425 128E                                      l1721 28BC  
                                    l1713 27C0                                      l1617 1D0A  
                                    l1609 1CA0                                      l2194 51FC  
                                    l2098 5154                                      l3226 3286  
                                    l3218 3218                                      l2370 0250  
                                    l2354 01E2                                      l2362 01D0  
                                    l1810 1440                                      l1730 3F14  
                                    l1706 31E4                                      l1386 50D0  
                                    l2434 5CBA                                      l2522 349E  
                                    l2530 347A                                      l2195 5222  
                                    l2099 5166                                      l1627 3E52  
                                    l3163 5626                                      l2427 12F8  
                                    l2419 110E                                      l1811 145C  
                                    l1715 27D4                                      l1731 3F1A  
                                    l1619 1D28                                      l2523 33FE  
                                    l1396 55D0                                      l3260 5A56  
                                    l2380 03D2                                      l2372 0304  
                                    l2356 01AE                                      l3148 4EE8  
                                    l3164 5620                                      l1820 15BA  
                                    l1804 137E                                      l1716 285C  
                                    l1732 3F3A                                      l1652 43EE  
                                    l1740 5480                USBConfigureEndpoint@handle 0083  
                                    l1629 3E7C                                      l3157 58A4  
                                    l3181 1874                                      l3229 32E4  
                                    l2349 05D2                                      l2373 02C6  
                                    l2357 019C                                      l2541 366C  
                                    l3149 4EE2                                      l2429 1318  
                                    l1813 14EA                                      l1805 1384  
                                    l1725 3F7C                                      l2437 5CB4  
                                    l2525 3424                                      l3158 589A  
                                    l3190 18E8                                      l2390 04B4  
                                    l2542 3686                                      l1646 3842  
                                    l1718 2864                                      l1726 3F02  
                                    l1654 4408                                      l2454 5B28  
                                    l2526 3432                                      l1903 45FA  
                                    l3255 5948                                      l3183 18C8  
                                    l2391 0478                                      l2367 0392  
                                    l2543 36E8                                      l1823 1570  
                                    l1815 14B2                                      l1807 13F6  
                                    l1719 28B4                                      l1663 2DDA  
                                    l1583 2048                                      l2455 5B1A  
                                    l3192 1902                                      l3272 5740  
                                    l2368 0326                                      l2552 3708  
                                    l1816 14D0                                      l1664 2D82  
                                    l2721 35D2                                      l3265 5B76  
                                    l2385 041E                                      l2369 02B4  
                                    l1681 353E                                      l1825 15C6  
                                    l1809 143E                                      l1729 3F92  
                                    l1753 4682                                      l1585 2070  
                                    l2457 5B22                                      l2529 345E  
                                    l1906 45A8                                      l2394 0524  
                                    l2546 368C                                      l1682 3504  
                                    l1658 44A2                                      l1818 1532  
                                    l1754 467C                                      l1594 1BD6  
                                    l1907 45D4                                      l3195 1914  
                                    l3179 185C                                      l2395 0570  
                                    l2387 045E                                      l2379 0402  
                                    l1931 2408                                      l1819 153E  
                                    l1587 20B0                                      l1739 5482  
                                    l1747 5778                                      l1595 1BCC  
                                    l2740 4916                                      l2724 3622  
                                    l1908 45AE                                      l3196 1980  
                                    l3276 5CE0                                      l2388 0578  
                                    l2548 36D4                                      l1772 3DA8  
                                    l1692 2938                                      l1764 4C9A  
                                    l1668 2E04                                      l1748 5776  
                                    l1596 1BCA                                      l2741 490E  
                                    l2725 35E4                                      l3189 18D8  
                                    l2549 36B6                                      l1941 24B8  
                                    l1933 2416                                      l1685 3580  
                                    l1677 34D0                                      l1773 3DAE  
                                    l1693 2912                                      l2566 4F9E  
                                    l2750 4A74                                      l2718 3590  
                                    l3198 19A6                                      l1950 2518  
                                    l1942 2480                                      l1686 3546  
                                    l1774 3E2A                                      l1766 4CE8  
                                    l1790 3308                                      l2567 4FB2  
                                    l2751 4A80                                      l2727 3656  
                                    l2719 358A                                      l2911 4148  
                                    l3199 19E0                                      l1935 244A  
                                    l1679 34DA                                      l1775 3DF0  
                                    l1695 29B0                                      l1791 330E  
                                    l1599 1BF2                                      l2744 4936  
                                    l2912 418A                                      l1696 2996  
                                    l1792 3314                                      l2745 4940  
                                    l2737 48E8                                      l2753 4A96  
                                    l2905 54F0                                      l1945 24FA  
                                    l1777 3E10                                      l1881 4034  
                                    l1793 3328                                      l2498 57DA  
                                    l2746 494E                                      l2738 48F8  
                                    l2754 4A8E                                      l1946 24C2  
                                    l1938 245C                                      l1882 3FCE  
                                    l1794 332E                                      l1939 2460  
                                    l1787 338E                                      l1971 5ABE  
                                    l2940 497C                                      l1884 3FE6  
                                    l1796 3334                                      l1788 32FE  
                                    l1972 5AAE                                      l2757 4AAE  
                                    l2909 410C                                      l1949 2514  
                                    l1885 3FF4                                      l1797 3352  
                                    l2758 4AB8                                      l1886 4012  
                                    l1798 336E                                      l1974 5AB4  
                                    l2943 49BC                                      l2759 4AC6  
                                    l1887 402A                                      l2944 49CA  
                              _Led1OutSts 01FA                                      l1985 4E1E  
                                    l2939 4988                                      l1979 4E2A  
                                    l1987 4E24                                      l2992 51B0  
                                    l2993 51A8                                      l2899 5BBA  
                                    l2996 51D0                                      l2997 51DA  
                                    l9055 583C                                      l7567 34DA  
                                    l8385 5380                                      l8909 46AE  
                                    STR_1 FFF1                                      STR_2 FFAC  
                                    STR_3 FFE1                                      STR_4 FFC5  
                                    STR_5 FFD0                                      STR_6 FFEC  
                                    STR_7 FFE7                                      STR_8 FEBA  
                                    STR_9 FEEE                                _Led2OutSts 01F8  
                                    u5120 352C                                _Led3OutSts 01F6  
                                    u5140 356E                                      u5310 28A8  
                                    u5127 3522                                      u5147 3564  
                                    u6045 5D7A                                      u5317 289E  
                                    u6046 5D7C                                      u5280 2826  
                                    u7130 5232                                      u5290 2856  
                                    u5287 281C                                      u5297 284C  
                   ??_USBCtrlTrfTxService 007D                                      u6800 4A9A  
                                    u6740 491A                                      u5870 498C  
                                    _UCFG 000F39                                      u6835 52F6  
                                    _UEP0 000F26                                      u9181 4812  
                                    _UEP1 000F27                                      u9191 482A  
                                    u6955 5D3A                                      u7915 5D24  
                                    u9275 5A18                                      _UEIE 000F37  
                                    u6956 5D3C                                      u7916 5D28  
                                    u9276 5A1A                                      u7845 4B34  
                                    u7925 5332                                      u9285 5A24  
                __size_of_Uart_Uart1RxIsr 0010                                      u7926 5334  
                                    u9286 5A26                                      u7855 5D8E  
                                    u7935 533E                                      u9295 5A30  
                                    u7856 5D90                                      u7936 5340  
                                    u9296 5A32                                      u7945 534C  
                                    u7946 534E                                      u7955 5358  
                                    u7956 535A                                      _UEIR 000F63  
                                    _UCON 000F65                                      u8961 4D4C  
                                    u9960 319C                                _AlarmEvent 01F5  
                          ?_StopCondition 0001                              _triggerRelay 57BE  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 5E3E  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 0032  
             Led_SetLedBlinkTime@OnTimeMs 007D    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D4                      _NewStringMdmTerminal 003A  
                                    _atoi 3588                                      _main 5E00  
                         ??_Mdm_IsRinging 0081                                      _itoa 54CA  
                        ?_SetUartBaudRate 0096                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 4104                                      _xtoi 3208  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 5E46  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 4694  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 5616                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                       __end_of_GenerateEvt 5D14  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
              __end_of_USBCheckStdRequest 33D2                           _Rtcm_SystemDate 0300  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 5DA4  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                            _GetElapsedTime 3B22  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 007D  
             __end_of_OsAlrm_ClearOsAlarm 5094                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
                     __size_of_I2cDummyTx 001C                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 5692  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDDC  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DA                                     l12009 361E  
                                   l11407 3168                                     l11363 58FC  
                                   l10731 5C30                                     l12413 2040  
                                   l12441 20A8                                     l13335 09A4  
                                   l13169 0FB0                                     l14191 4E44  
                                   l14193 4E74                                     l13485 1CB8  
                                   l12865 3034                                     l13837 4B4C  
                                   l12985 2C96                                     l13849 2A0A  
                                   l12999 2D00                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 008D  
                         __end_of___awdiv 4958                                     STR_10 FF5B  
                                   STR_11 FF69                                     STR_12 FF9F  
                                   STR_20 FF4D                                     STR_13 FF77  
                                   STR_21 FE90                                     STR_14 FED9  
                                   STR_15 FF17                                     STR_23 FF03  
                                   STR_24 FFF5                                     STR_16 FF3C  
                                   STR_25 FFF5                                     STR_17 FF85  
                                   STR_26 FEB7                                     STR_18 FF92  
                                   STR_27 FF2B                                     STR_28 FFB9  
                         __end_of___awmod 4AD0                                     STR_29 FFDA  
       __size_of_USBCtrlEPServiceComplete 0100                           __end_of___lldiv 49DC  
                                   ?_utoa 0084                                     u10220 552A  
                                   u10140 1554                                     u11205 0B14  
                                   u12101 2C5A                                     u10190 51B4  
                                   u11215 0B9E                                     u12111 2C6C  
                                   u11320 4E06                                     u10370 5A52  
                                   u11235 0C78                                     u11260 5582  
                                   u10460 5724                           ___awdiv@divisor 007F  
                                   u11245 0C98                                     u10630 52A2  
                                   u10550 26F8                                     u10390 5938  
                                   u11327 4DFC                                     u11255 0D22  
                                   u11280 56C0                                     u10480 5730  
                                   u11360 2064                                     u13201 33F4  
                                   u12170 2D4E                                     u10730 4584  
                  __end_of_USBDeviceTasks 1D32                                     u11195 0AF4  
                                   u11390 210C                                     ?_xtoi 0083  
                                   u10920 1864                                     u13250 348E  
                                   u13260 3490                                     u10950 189E  
                                   u11830 04BE                                     u13328 2AD2  
                                   u13329 2B00                                     u10970 18AE  
                                   u11950 3720                                     u12840 1D2E  
                                   u13288 4B7E                                     u13289 4BAC  
                                   u11890 4F2A                                     u12930 24A8  
               ?_USBCtrlEPServiceComplete 0001                                     u11980 4218  
                                   u11990 4232                                     u12950 24EA  
                                   u12960 2502                                     u11897 4F20  
                                   u12937 249E                                     u12957 24E0  
                         __end_of___lwdiv 51E4                           __end_of___lwmod 5552  
               TurnOnModem@TurnOnMdmState 0029                        ??_UpdateOsCounters 0019  
                                   i1l742 216C                                     i1l747 22A8  
                                   i2l680 3A4A                                     i2l681 399A  
                                   i2l690 39E4                                     i2l682 39A8  
                                   i2l686 39CA                                     i2l688 3A3C  
                                   i2l689 3A04                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03BA  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E9  
                                   _USTAT 000F64                   __end_of_LedStateMachine 42FE  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00BE  
         __end_of_USBCtrlEPAllowDataStage 443C                             _StringCompare 51E4  
                                   _sd000 FE8C                                     _sd001 FE45  
                                   _sd002 FE1F            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 37FA  
                             _ApnLenLocal 01F1                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 0084                           __end_of_isalpha 5952  
                         __end_of_isdigit 5BC2                                     atoi@a 0088  
                                   atoi@s 0083                               _ClearBuffer 57F4  
                         __end_of_isspace 5A5E                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 5B7E                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 5AAC  
                    triggerRelay@txBuffer 0088                 __end_of_Rtcc_GetRtccValue 4728  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 4C1E  
                                   utoa@c 008C                             ??_SetBaudRate 009E  
                                   utoa@v 008A                                     status 000FD8  
                         _I2cSlv_MainTask 5094                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                                     wtemp6 0043  
                         __end_of_sprintf 372E                           __end_of_tolower 5CE4  
                     __end_of_Mcu_Int0Isr 5E6E                       __end_of_Mcu_Int1Isr 5E6A  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 5CFC                    __end_of_GetElapsedTime 3BEA  
                   __end_of_UartSetConfig 4F8C               Rtcc_SetRtccValue@RtccPtrVal 0088  
                   __end_of_Term_MainTask 5CCC                   LedStateMachine@LedBlink 008D  
                        __end_of_GetSmsSm 2F4C                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 5A0A  
                          _InitSchedTimer 5982                           __initialization 2B22  
                        __end_of_MdmCntSm 4256                      __end_of_I2c_ReadData 1FFE  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 3D76  
                 LedStateMachine@LedPulse 008F                                _MyApp_Task 33D2  
                            __end_of_atoi 3660                              __end_of_main 5E0C  
                     StringCompare@Result 0085                              __end_of_itoa 550E  
                  ??_LedPulseStateMachine 0087                     _control_signal_bitmap 01E1  
                            __end_of_utoa 41AE                              __end_of_xtoi 32EE  
                __end_of_Rtcm_SetRtccDate 513C                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 5E2A  
                    Term_MainSm@TermDelay 03D3                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE7A                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 0085                                    ??_main 00AC  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0093  
                                  ??_utoa 008A                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 456A                                _ReceiveEvt 59B0  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 49DC                              _cdc_mem_type 01E2  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03F4  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00B8                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3A5A                _Uart_MdmGsmGprsReadService 3990  
              __end_of_UsbDevice_MainTask 5AD0                           getsUSBUSART@len 0086  
                   __end_of_UartWriteByte 5C24                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1391 57B8                               _GenerateEvt 5CFC  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                     triggerRelay@isRelayOn 0085  
               Uart_Uart1RxIsr@UartRxData 002C                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC61                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                  __end_of_Rtcc_AlarmConfig 4C8A  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 59B0  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 5E5E                                _UartConfig 0326  
                    __end_of_Mdm_MainTask 5286                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CA                             ??_Term_MainSm 00A7  
                                  _Relay1 01DC                                    _Relay2 01DB  
                                  _Relay3 01DA                                    _Relay4 01D9  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 53FC                                    _SmsLen 00D1  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 5322  
                                  ___lmul 4F8C                      _I2cSlv_ReceiveI2cMsg 5596  
                      TurnOnModem@Counter 02DC                              ?_putUSBUSART 0083  
                                  ___wmul 5A5E                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 513C  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 4600  
                               ??___lwdiv 0081                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                         _USBEnableEndpoint 5486  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                                    _memcpy 536E  
                  __size_of_HttpGetMethod 04D0                                    _memset 58F2  
                                  clear_0 2BA2                                    clear_1 2BB4  
                                  clear_2 2BC0                                    clear_3 2BCC  
                                  clear_4 2BD8                                    clear_5 2BE4  
                                  clear_6 2BF0                                    clear_7 2BFC  
                                  clear_8 2C08                                    clear_9 2C14  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E6  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01EE  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01F4                        ?_USBEnableEndpoint 0085  
                                  _strcat 4ED8                                    _strcpy 5890  
                                  _strlen 5616                                    _strtol 181C  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 574A                  HttpGetMethod@UartMessage 0100  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0093  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                              _CDCTxService 23F2  
                     ModemEvtParser@F9090 044A                       ModemEvtParser@F9086 03C7  
                     ModemEvtParser@F9088 03C2                       MdmCntSm@MdmCntState 002E  
                            MyApp_Task@on 0098                          ?_LedStateMachine 0089  
                            __mediumconst FC58                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 5E56  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 50E8                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 5E6A  
                             _Mcu_Int1Isr 5E66                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                  __size_of_ScheduleTasks 0122                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 009B  
                    _controlTransferState 00C9                     __end_ofi1_GenerateEvt 5D56  
                   __end_of_Rtcm_MainTask 4846                __size_of_Rtcc_GetRtccValue 0094  
                      _ExtInt1IsrCallback 02E4                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 2C32  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                  __end_of_EnableReceiver 5E62                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 011A               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 52D4           I2cSlv_QueryI2cData@TimeoutTimer 0346  
                    Terminal@FormatOption 02ED                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 4DBA                            __pcstackBANK10 0A00  
                   I2cDummyTx@DummyBuffer 01FC                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02E0                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 54CA  
                             _InitNetwork 00D8                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0092                             __end_of_sd000 FE90  
                           __end_of_sd001 FE63                             __end_of_sd002 FE45  
                            __pidataBANK1 5E6E                              __pidataBANK2 5DF2  
                            __pidataBANK3 56D0                              __pidataBANK4 4D56  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 5552                       __size_of_CheckModem 013E  
              __end_of_Uart_ClearRxBuffer 585E             __size_of_USBConfigureEndpoint 0098  
                __size_of_InitializeTasks 0070                        __end_of_I2cDummyTx 5C98  
             __end_of_USBCtrlTrfInHandler 3E38                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                       __end_of_Term_MainSm 135A  
                   LedStateMachine@LedOut 008B                     LedStateMachine@LedSts 0089  
                      LedStateMachine@Led 0093                                 ?i1___wmul 0019  
                     __end_of_RtccIrqInit 5D40                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01E8  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 58C2                                _cdc_notice 04AE  
                   __end_of_Tmr_TmrBPrSet 303A                       __end_of_Rtcc_RtcIsr 5E66  
                              _cdc_rx_len 00C2                         __end_of_MsgFormat FD53  
                              _cdc_tx_len 00C0                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 57BE                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E3                            ClearBuffer@Len 007F  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 5A0A  
                  _USBStdGetStatusHandler 3EF6                         __end_of_SendSmsSm 1BAA  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01F0  
                          _Rtcc_RtcConfig 42FE                                __pbssBANK0 00AC  
                              __pbssBANK1 01C9                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 04A4  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 05C2  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 5D6C  
                __end_of_Uart_WriteString 56D0                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 5B18  
                             _SetBaudRate 52D4               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01F2                               _pBDTEntryIn 00B2  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 2E5A  
                               ?_TmrBInit 007D                             _CheckTxStatus 5E2A  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                                 ?_Terminal 0001  
                                 ?___lmul 007D                              _Led_MainTask 372E  
                          _Rtcc_UnlockRtc 5DA4                              _I2cBusStatus 01EA  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2A00                 Uart_InitUartModule@Module 00A1  
                   MyApp_Task@I2cStsReady 01D5                     __end_of_I2c_WriteData 1EA0  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE7A                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 4600                     __end_of_UpdateSchFlag 5C7C  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D6  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 2A00  
                       __end_of_WriteByte 5E20                        _USBCheckStdRequest 32EE  
                       _configDescriptor1 FDDC                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 04EA               __end_of_USBCtrlTrfTxService 3588  
                     _USBStdSetCfgHandler 3122                         triggerRelay@F8966 03D1  
                 __size_of_ConfigureModem 00CA                    I2cSlv_QueryI2cData@Ret 01E7  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 59DE  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 439E                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 0087                                   _SSP2BUF 000F75  
                            _I2c_ReadData 1EA0                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 3CB2  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01DF  
          __end_of_Pm_DsReleasePinControl 5E4C                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 00DE                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00DE                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 002A                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FB                                   _Led2Sts 01F9  
                                 _Led3Sts 01F7                __end_of_Sch_SchmIntService 5DF2  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 0088  
                           _cdc_trf_state 00C1                                ??_ReadByte 007D  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 5E52  
                        _ComChecCompleted 002B                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C8  
                   __end_of_Mdm_IsRinging 5AF4                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CB                     __size_of_getsUSBUSART 0096  
                                 _RelayB1 01DE                                   _RelayB2 01DD  
                             ?_StringCopy 007D                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 00D5                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 4BB2  
                  __end_of_Rtcc_UnlockRtc 5DB4                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 5D80  
                             _Term_MainSm 10B6   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD53                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 5C42                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 5D2A             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 48D2                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 4A5E                                   ___lldiv 4958  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                                 ___lwdiv 5190                         ??_USBStallHandler 007D  
                                 ___lwmod 550E                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                             _Rtcc_RtcIsr 5E62                      __size_of_putUSBUSART 0022  
                                 __pcinit 2B22                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CC  
                     __end_of_TurnOnModem 5442                           __size_of_memset 0030  
                               _I2cConfig 035C                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FE1F                                   __ramtop 0F00  
                   MyApp_Task@countRelay1 01FD                     MyApp_Task@countRelay2 03CF  
                             Terminal@Len 03B6                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 5E00                                   __ptext1 58C2  
                                 __ptext2 5E0C                                   __ptext3 5E46  
                                 __ptext4 5C24                                   __ptext5 5C98  
                                 __ptext6 5A0A                                   __ptext7 5982  
                                 __ptext8 3A5A                                   __ptext9 2F4C  
                                 _inPipes 00AC                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0026  
                         __size_of_strcat 005C                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 5922  
                                 _isdigit 5BA0                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00AC                               ?_SystemInit 0001  
                                 clear_10 2C20                                   clear_11 2C2C  
                        ___awmod@dividend 007D                         ??_InitializeTasks 00A7  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 01D3  
     __end_of_Tmr_RegisterTmr2IsrCallback 5E16               _Tmr_RegisterTmr2IsrCallback 5E0C  
                                 _isspace 5A34                              _Mdm_MainTask 5236  
                                 _isupper 5B5C               __size_of_InitModemInterface 0008  
                    HttpGetMethod@GetData 009B                    ?_Irq_InitIntController 007D  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 2154                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC61                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 5AF4                                   _sprintf 3660  
                                 _tolower 5CCC           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 5DD4                          _HttpGetDataLocal 03AD  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 4058  
                                 _toupper 5CE4                         ClearBuffer@Buffer 007D  
                    end_of_initialization 2C32                              _getsUSBUSART 456A  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00D9  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC5F  
     Irq_InitIntController@PerInt_LowPInt 007E                                   memcpy@d 0083  
                                 memcpy@n 0081                                   memcpy@s 0085  
                     _pBDTEntryEP0OutNext 00BA                                   itoa@buf 008D  
                                 memset@c 007F                                   itoa@val 008F  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                                 i1u1311_20 216A  
                           __Lmediumconst FC58                            _ModemEvtParser 2C40  
                               i1u1315_28 228A                                 i1u1315_29 229E  
                                 int_func 4058                                 i1u1336_28 5B04  
                         _USB1msTickCount 0318           _dummy_encapsulated_cmd_response 0381  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
                           MyApp_Task@off 0096                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 5C60                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 5D14                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 5890                             StringCopy@Len 0081  
                       ?_MdmHttp_MainTask 0001                   _USBCtrlEPAllowDataStage 439E  
                      _UsbDevice_MainTask 5AAC                              _Mcu_ClearWdg 5E52  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                   utoa@buf 0084  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 2D5A  
                                 utoa@val 0086                   HttpGetMethod@GetMOutSts 01EB  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2676  
                         _RtccIsrCallback 02E8          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                _USBStatusStageEnabledFlag1 00C5  
              _USBStatusStageEnabledFlag2 00C4                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 5B3A                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 5BE4  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 007F  
                        __CFG_CPUDIV$OSC1 000000                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02EA                          _HttpGetMethodSts 01EF  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                      _BothEP0OutUOWNsSet 01E4                           ??_HttpGetMethod 009D  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0037  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 2D5A                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D3  
                   __end_of_StopCondition 5E5A                  __size_of_HighPriorityIsr 40FC  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                               _Led1Blink 0378                                 _Led2Blink 036F  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 0366  
            __end_of_USBTransferOnePacket 3EF6                           ??_CheckTxStatus 007D  
                               _Led1Pulse 039C                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 5D2A  
                               _Led2Pulse 0396                                 _Led3Pulse 0390  
                       _I2cSlv_SendI2cMsg 5654           SetBaudRate@DesiredI2cBusClockHz 0096  
                         ??_ScheduleTasks 00A7                            _Tmr_TmrBConfig 3A5A  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 5D92  
                       _OsAlrm_SetOsAlarm 3BEA                      Terminal@TermRxBuffer 0590  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 5322                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 53FC                              ??_MyApp_Task 008A  
                    Terminal@TermTxBuffer 0100                                 _GetMethod 00D7  
                  _USBCtrlTrfSetupHandler 4846                        ?_OsAlrm_SetOsAlarm 0083  
                   __end_of_USBDeviceInit 2154     __end_of_USBIncrement1msInternalTimers 5B5C  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 5B3A  
                          __end_of___lmul 4FE4                            _CheckAckStatus 5E34  
                          __end_of___wmul 5A86                       ??_I2cSlv_SendI2cMsg 0084  
                  __size_of_UartWriteByte 0020                       triggerRelay@realyId 0087  
                          __end_of_memcpy 53B6                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 5922  
                      _UartTxBufferStatus 5286                       ??_OsAlrm_SetOsAlarm 008B  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 007F  
                       _USBBusIsSuspended 01E5                                 _Mdm_SmsRx 0700  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 5DE4  
                               _MdmStatus 00CF                            __end_of_strcat 4F34  
                          __end_of_strcpy 58C2                            __end_of_strlen 5654  
                          __end_of_strtol 19F2                       start_initialization 2B22  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                          _ConfigureModem 38C6                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 582A                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0550  
                             _cdc_data_tx 0784              __end_of_USBConfigureEndpoint 44D4  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC63  
                      __end_of_MyApp_Task 34B0                          _UpdateOsCounters 5DC4  
                         ?_ModemEvtParser 0001                             ?_triggerRelay 0085  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 00F2  
       __end_of_USBCtrlEPAllowStatusStage 38C6                 __end_of_I2cSlv_SendI2cMsg 5692  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4694                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 5DC4  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3B22                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 3CB2                    __end_of_Tmr_TmrBIrqSet 536E  
                               _TaskTable 0454                                 _RingEvent 00DC  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D2                         __size_of_ReadByte 000A  
                               _RtcConfig 03BE                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 4F34  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 59DE  
                  _pBDTEntryEP0OutCurrent 00BC                             _Term_MainTask 5CB2  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 5E3E  
                                ??___lmul 0085                             _isxdigit$6377 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 27AE                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 4A5E                        HttpGetMethod@Index 01C8  
                             __pdataBANK1 01FD                               __pdataBANK2 02F3  
                             __pdataBANK3 03C2                               __pdataBANK4 0440  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 5190  
                  __end_of_ConfigureModem 3990                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D4            __end_of_USBStdGetStatusHandler 3FA8  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC63  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5236                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200              __size_of_USBCtrlTrfInHandler 00C2  
                         RiSm@MdmDrvState 002F                              _SetAckStatus 5D6C  
                            _isalpha$6367 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 5E16                              _isdigit$6101 007E  
                    ?_USBStdGetDscHandler 0001             UpdateSchFlag@InterruptCounter 02DE  
                          ??_triggerRelay 0086                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 55D6       InitGprsNetwork@GprsNetInitNextState 00CE  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 5C04  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 5784  
            __end_of_LedBlinkStateMachine 23F2                               sprintf@flag 0083  
                         _USBStallHandler 5442                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 5C98  
              __end_of_USBCheckCDCRequest 4058              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 503C                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 5C04                              ??_StringCopy 0083  
                        _Led_SetLedStatus 5952                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 007D  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 5BC2  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC58  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 55D6  
                               __ptext101 2C40                                 __ptext110 2538  
                               __ptext102 582A                                 __ptext111 41AE  
                               __ptext103 51E4                                 __ptext120 4E7A  
                               __ptext112 5E3E                                 __ptext104 2E5A  
                               __ptext121 4728                                 __ptext113 0DC8  
                               __ptext105 38C6                                 __ptext130 3BEA  
                               __ptext122 3B22                                 __ptext114 05EC  
                               __ptext106 0ABC                             Terminal@Index 00A6  
                               __ptext131 5A5E                                 __ptext123 5D92  
                               __ptext115 5692                                 __ptext107 2676  
                               __ptext140 5E16                                 __ptext132 4AD0  
                               __ptext124 57F4                                 __ptext116 5552  
                               __ptext108 4F8C                                 __ptext141 5E56  
                               __ptext133 52D4                                 __ptext125 4256  
                               __ptext117 5C04                                 __ptext109 4FE4  
                               __ptext150 5AF4                                 __ptext142 5E5A  
                               __ptext134 4958                                 __ptext126 303A  
                               __ptext118 5286                                 __ptext151 5DE4  
                               __ptext143 5D6C                                 __ptext135 59DE  
                               __ptext127 5952                                 __ptext119 4DBA  
                               __ptext152 5C60                                 __ptext144 5E20  
                               __ptext136 3CB2                                 __ptext128 22AA  
                               __ptext161 5DD4                                 __ptext153 5DC4  
                               __ptext145 5CFC                                 __ptext137 59B0  
                               __ptext129 5190                                 __ptext162 3990  
                               __ptext154 2154                                 __ptext146 5E5E  
                               __ptext138 1D32                                 __ptext163 5D56  
                               __ptext155 5A86                                 __ptext147 5E2A  
                               __ptext139 1EA0                                 __ptext164 5E62  
                               __ptext156 503C                                 __ptext148 5E34  
                               __ptext165 5E66                                 __ptext157 5C7C  
                               __ptext166 5E6A                                 __ptext158 5784  
                               __ptext167 0000                                 __ptext159 5D40  
                                ?___awmod 007D                        _Sch_SchmIntService 5DE4  
                         _InitializeTasks 4B42                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 007D  
                                ?___lwmod 007D                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 0351  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 03A2                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 3E38  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
                    MyApp_Task@isRelay1On 0025                      MyApp_Task@isRelay2On 01D7  
      Uart_MdmGsmGprsReadService@UartData 0004                               _I2cTxBuffer 04A4  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 03A8  
          InitializeTasks@ActiveTaskIndex 00A9                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
                         Terminal@Payload 0500                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 4CF0                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 4CF0  
              ConfigureModem@DelayCounter 02D8                        __end_of_StringCopy 4E1C  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0082  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DD  
                         Terminal@SwTimer 033B                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 01D8  
                          ?_UartWriteByte 007D                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02DA                          _OsTmr_StartTimer 4E7A  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 5D40                __end_of_Mcu_StartSystemPll 5C42  
                            _PhoneNumbLen 00D0                              _Wdg_MainTask 5B18  
                           _Rtcm_MainTask 47B8                            ___wmul@product 0081  
                        SendSmsSm@SwTimer 03E9                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 0086                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 0028           HttpGetMethod@GetMethodNextState 00CD  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 4AD0  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0091                        __end_of_SystemInit 58F2  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 00C3                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 47B8  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 009C                      _USBConfigureEndpoint 443C  
        __size_of_USBStdFeatureReqHandler 0294                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 22AA                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 5A86                       ??_I2c_InitI2cModule 00A4  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 5E46  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E6  
                                _ApnLocal 02D6                            _StartCondition 5E5A  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01EC                             _Tmr_TmrBPrSet 2F4C  
                       _NewStringReceived 003C                              _isspace$6370 007E  
                        _UartSetConfigLow 4FE4                                  _GetSmsSm 2E5A  
                 __end_of_USBStallHandler 5486                      Mdm_DrvMainFn@Options 0001  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DE  
                                _MdmCntSm 41AE                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 2B36  
                               copy_data1 2B56                                 copy_data2 2B8E  
            __end_of_LedPulseStateMachine 3122                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 3208  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 0084  
                                _ReadByte 5E20                             i2_GenerateEvt 5D56  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE8C                 __end_of_I2c_InitI2cModule 4B42  
                                _MsgReady FE63                           ??_Term_MainTask 00A7  
                 __end_of_InitializeTasks 4BB2                   ?_USBCtrlTrfSetupHandler 0001  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 44D4                      __size_of_SetBaudRate 004E  
                            ?_TurnOnModem 0001                                  _TxBuffer 0322  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0087  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081               __end_of_Uart_InitUartModule 0DC8  
                                _SmsEvent 00DB                           _SetUartBaudRate 2676  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001E                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0080  
                   SetBaudRate@McuClockHz 009A                     ?_USBConfigureEndpoint 007D  
            OsAlrm_ClearOsAlarm@OsAlarmId 0019                             _I2c_WriteData 1D32  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                __end_of_UpdateOsCounters 5DD4                      __end_of_triggerRelay 57F4  
                         MyApp_Task@F8982 0320                          __size_of___lldiv 0084  
                         MyApp_Task@F8976 03CD                           MyApp_Task@F8985 0440  
                         MyApp_Task@F8979 03CB                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 5C60                       __end_of_putUSBUSART 5BA0  
                             _line_coding 0389                              _Rtcc_LockRtc 5DB4  
                    _LedBlinkStateMachine 22AA                    __end_of_StartCondition 5E5E  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01F3                 Rtcm_GetRtccDate@LocalDate 008A  
                I2c_WriteData@WriteStatus 0035                              _isupper$6373 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0033  
                          ?_Tmr_TmrBPrSet 0096                          ??_ModemEvtParser 0088  
                        _GetOsTickCounter 5D92                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0188  
                         ___lwdiv@divisor 007F                              Terminal@Addr 03B2  
                ModemEvtParser@RingString 0097                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0081  
                         MyApp_Task@phone 008A                                  __ptext10 5322  
                                __ptext11 5BE4                                  __ptext20 5AAC  
                                __ptext12 44D4                                  __ptext21 53B6  
                                __ptext13 5C42                           ??_UartWriteByte 007E  
                                __ptext30 585E                                  __ptext22 5236  
                                __ptext14 2A00                                  __ptext31 5442  
                                __ptext23 5094                                  __ptext15 4B42  
                                __ptext40 3122                                  __ptext32 5B3A  
                                __ptext24 5E4C                                  __ptext16 33D2  
                                __ptext41 3EF6                                  __ptext33 1FFE  
                                __ptext25 5B18                                  __ptext17 5CB2  
                                __ptext50 28DC                                  __ptext42 27AE  
                                __ptext34 4600                                  __ptext26 5D80  
                                __ptext18 47B8                                  __ptext51 37FA  
                                __ptext43 135A                                  __ptext35 536E  
                                __ptext27 5E52                                  __ptext19 372E  
                                __ptext60 00D0                                  __ptext52 3D76  
                                __ptext44 4E1C                                  __ptext36 4846  
                                __ptext28 1BAA                                  __ptext61 3208  
                                __ptext53 34B0                                  __ptext45 3FA8  
                                __ptext37 2D5A                                  __ptext29 574A  
                                __ptext70 5B7E                                  __ptext62 5CCC  
                                __ptext54 23F2                                  __ptext46 4BB2  
                                __ptext38 439E                                  __ptext71 54CA  
                                __ptext63 570E                                  __ptext55 10B6  
                                __ptext47 5486                                  __ptext39 32EE  
                                __ptext80 5BC2                                  __ptext72 4104  
                                __ptext64 181C                                  __ptext56 5616  
                                __ptext48 443C                                  __ptext81 50E8  
                                __ptext73 550E                                  __ptext65 5CE4  
                                __ptext57 4ED8                                  __ptext49 4C8A  
                                __ptext90 42FE                                  __ptext82 5DA4  
                                __ptext74 456A                                  __ptext66 5A34  
                                __ptext58 3660                                  __ptext91 5D2A  
                                __ptext83 15EE                                  __ptext75 3E38  
                                __ptext67 5922                                  __ptext59 58F2  
                                __ptext92 4C1E                                  __ptext84 4A5E  
                                __ptext76 3588                                  __ptext68 5B5C  
                                __ptext93 57BE                                  __ptext85 48D2  
                                __ptext77 5BA0                                  __ptext69 5890  
                                __ptext94 5654                                  __ptext86 5DB4  
                                __ptext78 49DC                                  __ptext95 5AD0  
                                __ptext87 4CF0                                  __ptext79 5596  
                                __ptext96 513C                                  __ptext88 4694  
                                __ptext97 4F34                                  __ptext89 5D14  
                                __ptext98 53FC                                  __ptext99 19F2  
                        __size_of_isupper 0022                                _I2cDummyTx 5C7C  
                  Tmr_TmrBIrqSet@Priority 007D                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                           triggerRelay@res 0086  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 0030  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 48D2  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 5E34                             _Mdm_DrvMainFn 5E4C  
                      ??_USBCtrlEPService 0097                                  _isxdigit 570E  
                           _Mdm_IsRinging 5AD0                       _USBCtrlTrfInHandler 3D76  
                I2c_ReadData@I2cReadState 0034                     __end_of_ScheduleTasks 2B22  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 4C8A  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 37FA  
               MyApp_Task@I2cTxBufferTest 0094                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 00AB                                strtol@sign 0093  
                         Term_MainSm@Data 04B8                            _PhoneNumberLen 0324  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 0084  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 5784  
                __end_of_Mcu_ConfigExtInt 5CB2                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00C6                  CDCTxService@byte_to_send 0085  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 5BE4                  __end_of_Led_SetLedStatus 5982  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0091               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 50E8                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
                        ??_Tmr_TmrBIrqSet 007F                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 4728  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0156  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4E7A  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 4E1C                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                            MyApp_Task@test 01D6  
                 __end_of_SetUartBaudRate 27AE                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 007F                            ?_Mdm_IsRinging 0001  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 0092  
                          ??_Led_MainTask 0094             __end_of_Uart_WriteConstString 5596  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                __end_of_Rtcm_GetRtccDate 4D56                               _putUSBUSART 5B7E  
                     _USBCtrlTrfRxService 28DC                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 574A  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 4ED8  
                    _LedPulseStateMachine 303A                        _USBCheckCDCRequest 3FA8  
                     _USBCtrlTrfTxService 34B0                       RtccIrqInit@Priority 007D  
                                utoa@base 0088                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                          _Rtcc_AlarmConfig 4C1E  
                         ??_Tmr_TmrBPrSet 009A                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FE  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01E0  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 53B6  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 5A34                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00C8                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 003B       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 4256  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                             _StopCondition 5E56  
                   ??i1_I2cSlv_SendI2cMsg 0020                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 00C7                          Mdm_IsRinging@Ret 0081  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 582A  
                    __end_of_CDCTxService 2538                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC5F  
                   __size_of_triggerRelay 0036                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 0027                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 5D80  
