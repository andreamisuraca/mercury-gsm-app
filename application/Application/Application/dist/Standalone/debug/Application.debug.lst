

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr  2 08:57:57 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    33                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	text0,global,reloc=2,class=CODE,delta=1
    39                           	psect	text1,global,reloc=2,class=CODE,delta=1
    40                           	psect	text2,global,reloc=2,class=CODE,delta=1
    41                           	psect	text3,global,reloc=2,class=CODE,delta=1
    42                           	psect	text4,global,reloc=2,class=CODE,delta=1
    43                           	psect	text5,global,reloc=2,class=CODE,delta=1
    44                           	psect	text6,global,reloc=2,class=CODE,delta=1
    45                           	psect	text7,global,reloc=2,class=CODE,delta=1
    46                           	psect	text8,global,reloc=2,class=CODE,delta=1
    47                           	psect	text9,global,reloc=2,class=CODE,delta=1
    48                           	psect	text10,global,reloc=2,class=CODE,delta=1
    49                           	psect	text11,global,reloc=2,class=CODE,delta=1
    50                           	psect	text12,global,reloc=2,class=CODE,delta=1
    51                           	psect	text13,global,reloc=2,class=CODE,delta=1
    52                           	psect	text14,global,reloc=2,class=CODE,delta=1
    53                           	psect	text15,global,reloc=2,class=CODE,delta=1
    54                           	psect	text16,global,reloc=2,class=CODE,delta=1
    55                           	psect	text17,global,reloc=2,class=CODE,delta=1
    56                           	psect	text18,global,reloc=2,class=CODE,delta=1
    57                           	psect	text19,global,reloc=2,class=CODE,delta=1
    58                           	psect	text20,global,reloc=2,class=CODE,delta=1
    59                           	psect	text21,global,reloc=2,class=CODE,delta=1
    60                           	psect	text22,global,reloc=2,class=CODE,delta=1
    61                           	psect	text23,global,reloc=2,class=CODE,delta=1
    62                           	psect	text24,global,reloc=2,class=CODE,delta=1
    63                           	psect	text25,global,reloc=2,class=CODE,delta=1
    64                           	psect	text26,global,reloc=2,class=CODE,delta=1
    65                           	psect	text27,global,reloc=2,class=CODE,delta=1
    66                           	psect	text28,global,reloc=2,class=CODE,delta=1
    67                           	psect	text29,global,reloc=2,class=CODE,delta=1
    68                           	psect	text30,global,reloc=2,class=CODE,delta=1
    69                           	psect	text31,global,reloc=2,class=CODE,delta=1
    70                           	psect	text32,global,reloc=2,class=CODE,delta=1
    71                           	psect	text33,global,reloc=2,class=CODE,delta=1
    72                           	psect	text34,global,reloc=2,class=CODE,delta=1
    73                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text36,global,reloc=2,class=CODE,delta=1
    75                           	psect	text37,global,reloc=2,class=CODE,delta=1
    76                           	psect	text38,global,reloc=2,class=CODE,delta=1
    77                           	psect	text39,global,reloc=2,class=CODE,delta=1
    78                           	psect	text40,global,reloc=2,class=CODE,delta=1
    79                           	psect	text41,global,reloc=2,class=CODE,delta=1
    80                           	psect	text42,global,reloc=2,class=CODE,delta=1
    81                           	psect	text43,global,reloc=2,class=CODE,delta=1
    82                           	psect	text44,global,reloc=2,class=CODE,delta=1
    83                           	psect	text45,global,reloc=2,class=CODE,delta=1
    84                           	psect	text46,global,reloc=2,class=CODE,delta=1
    85                           	psect	text47,global,reloc=2,class=CODE,delta=1
    86                           	psect	text48,global,reloc=2,class=CODE,delta=1
    87                           	psect	text49,global,reloc=2,class=CODE,delta=1
    88                           	psect	text50,global,reloc=2,class=CODE,delta=1
    89                           	psect	text51,global,reloc=2,class=CODE,delta=1
    90                           	psect	text52,global,reloc=2,class=CODE,delta=1
    91                           	psect	text53,global,reloc=2,class=CODE,delta=1
    92                           	psect	text54,global,reloc=2,class=CODE,delta=1
    93                           	psect	text55,global,reloc=2,class=CODE,delta=1
    94                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text58,global,reloc=2,class=CODE,delta=1
    97                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text60,global,reloc=2,class=CODE,delta=1
    99                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text70,global,reloc=2,class=CODE,delta=1
   109                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text74,global,reloc=2,class=CODE,delta=1
   113                           	psect	text75,global,reloc=2,class=CODE,delta=1
   114                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text78,global,reloc=2,class=CODE,delta=1
   117                           	psect	text79,global,reloc=2,class=CODE,delta=1
   118                           	psect	text80,global,reloc=2,class=CODE,delta=1
   119                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text83,global,reloc=2,class=CODE,delta=1
   122                           	psect	text84,global,reloc=2,class=CODE,delta=1
   123                           	psect	text85,global,reloc=2,class=CODE,delta=1
   124                           	psect	text86,global,reloc=2,class=CODE,delta=1
   125                           	psect	text87,global,reloc=2,class=CODE,delta=1
   126                           	psect	text88,global,reloc=2,class=CODE,delta=1
   127                           	psect	text89,global,reloc=2,class=CODE,delta=1
   128                           	psect	text90,global,reloc=2,class=CODE,delta=1
   129                           	psect	text91,global,reloc=2,class=CODE,delta=1
   130                           	psect	text92,global,reloc=2,class=CODE,delta=1
   131                           	psect	text93,global,reloc=2,class=CODE,delta=1
   132                           	psect	text94,global,reloc=2,class=CODE,delta=1
   133                           	psect	text95,global,reloc=2,class=CODE,delta=1
   134                           	psect	text96,global,reloc=2,class=CODE,delta=1
   135                           	psect	text97,global,reloc=2,class=CODE,delta=1
   136                           	psect	text98,global,reloc=2,class=CODE,delta=1
   137                           	psect	text99,global,reloc=2,class=CODE,delta=1
   138                           	psect	text100,global,reloc=2,class=CODE,delta=1
   139                           	psect	text101,global,reloc=2,class=CODE,delta=1
   140                           	psect	text102,global,reloc=2,class=CODE,delta=1
   141                           	psect	text103,global,reloc=2,class=CODE,delta=1
   142                           	psect	text104,global,reloc=2,class=CODE,delta=1
   143                           	psect	text105,global,reloc=2,class=CODE,delta=1
   144                           	psect	text106,global,reloc=2,class=CODE,delta=1
   145                           	psect	text107,global,reloc=2,class=CODE,delta=1
   146                           	psect	text108,global,reloc=2,class=CODE,delta=1
   147                           	psect	text109,global,reloc=2,class=CODE,delta=1
   148                           	psect	text110,global,reloc=2,class=CODE,delta=1
   149                           	psect	text111,global,reloc=2,class=CODE,delta=1
   150                           	psect	text112,global,reloc=2,class=CODE,delta=1
   151                           	psect	text113,global,reloc=2,class=CODE,delta=1
   152                           	psect	text114,global,reloc=2,class=CODE,delta=1
   153                           	psect	text115,global,reloc=2,class=CODE,delta=1
   154                           	psect	text116,global,reloc=2,class=CODE,delta=1
   155                           	psect	text117,global,reloc=2,class=CODE,delta=1
   156                           	psect	text118,global,reloc=2,class=CODE,delta=1
   157                           	psect	text119,global,reloc=2,class=CODE,delta=1
   158                           	psect	text120,global,reloc=2,class=CODE,delta=1
   159                           	psect	text121,global,reloc=2,class=CODE,delta=1
   160                           	psect	text122,global,reloc=2,class=CODE,delta=1
   161                           	psect	text123,global,reloc=2,class=CODE,delta=1
   162                           	psect	text124,global,reloc=2,class=CODE,delta=1
   163                           	psect	text125,global,reloc=2,class=CODE,delta=1
   164                           	psect	text126,global,reloc=2,class=CODE,delta=1
   165                           	psect	text127,global,reloc=2,class=CODE,delta=1
   166                           	psect	text128,global,reloc=2,class=CODE,delta=1
   167                           	psect	text129,global,reloc=2,class=CODE,delta=1
   168                           	psect	text130,global,reloc=2,class=CODE,delta=1
   169                           	psect	text131,global,reloc=2,class=CODE,delta=1
   170                           	psect	text132,global,reloc=2,class=CODE,delta=1
   171                           	psect	text133,global,reloc=2,class=CODE,delta=1
   172                           	psect	text134,global,reloc=2,class=CODE,delta=1
   173                           	psect	text135,global,reloc=2,class=CODE,delta=1
   174                           	psect	text136,global,reloc=2,class=CODE,delta=1
   175                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text138,global,reloc=2,class=CODE,delta=1
   177                           	psect	text139,global,reloc=2,class=CODE,delta=1
   178                           	psect	text140,global,reloc=2,class=CODE,delta=1
   179                           	psect	text141,global,reloc=2,class=CODE,delta=1
   180                           	psect	text142,global,reloc=2,class=CODE,delta=1
   181                           	psect	text143,global,reloc=2,class=CODE,delta=1
   182                           	psect	text144,global,reloc=2,class=CODE,delta=1
   183                           	psect	text145,global,reloc=2,class=CODE,delta=1
   184                           	psect	text146,global,reloc=2,class=CODE,delta=1
   185                           	psect	text147,global,reloc=2,class=CODE,delta=1
   186                           	psect	text148,global,reloc=2,class=CODE,delta=1
   187                           	psect	text149,global,reloc=2,class=CODE,delta=1
   188                           	psect	text150,global,reloc=2,class=CODE,delta=1
   189                           	psect	text151,global,reloc=2,class=CODE,delta=1
   190                           	psect	text152,global,reloc=2,class=CODE,delta=1
   191                           	psect	text153,global,reloc=2,class=CODE,delta=1
   192                           	psect	text154,global,reloc=2,class=CODE,delta=1
   193                           	psect	text155,global,reloc=2,class=CODE,delta=1
   194                           	psect	text156,global,reloc=2,class=CODE,delta=1
   195                           	psect	text157,global,reloc=2,class=CODE,delta=1
   196                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   197                           	psect	text159,global,reloc=2,class=CODE,delta=1
   198                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text161,global,reloc=2,class=CODE,delta=1
   200                           	psect	text162,global,reloc=2,class=CODE,delta=1
   201                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text164,global,reloc=2,class=CODE,delta=1
   203                           	psect	text165,global,reloc=2,class=CODE,delta=1
   204                           	psect	text166,global,reloc=2,class=CODE,delta=1
   205                           	psect	text167,global,reloc=2,class=CODE,delta=1
   206                           	psect	text168,global,reloc=2,class=CODE,delta=1
   207                           	psect	text169,global,reloc=2,class=CODE,delta=1
   208                           	psect	text170,global,reloc=2,class=CODE,delta=1
   209                           	psect	text171,global,reloc=2,class=CODE,delta=1
   210                           	psect	text172,global,reloc=2,class=CODE,delta=1
   211                           	psect	text173,global,reloc=2,class=CODE,delta=1
   212                           	psect	text174,global,reloc=2,class=CODE,delta=1
   213                           	psect	text175,global,reloc=2,class=CODE,delta=1
   214                           	psect	text176,global,reloc=2,class=CODE,delta=1
   215                           	psect	text177,global,reloc=2,class=CODE,delta=1
   216                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   217                           	psect	text179,global,reloc=2,class=CODE,delta=1
   218                           	psect	text180,global,reloc=2,class=CODE,delta=1
   219                           	psect	text181,global,reloc=2,class=CODE,delta=1
   220                           	psect	text182,global,reloc=2,class=CODE,delta=1
   221                           	psect	text183,global,reloc=2,class=CODE,delta=1
   222                           	psect	text184,global,reloc=2,class=CODE,delta=1
   223                           	psect	text185,global,reloc=2,class=CODE,delta=1
   224                           	psect	text186,global,reloc=2,class=CODE,delta=1
   225                           	psect	text187,global,reloc=2,class=CODE,delta=1
   226                           	psect	text188,global,reloc=2,class=CODE,delta=1
   227                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   229                           	psect	text190,global,reloc=2,class=CODE,delta=1
   230                           	psect	text191,global,reloc=2,class=CODE,delta=1
   231                           	psect	text192,global,reloc=2,class=CODE,delta=1
   232                           	psect	text193,global,reloc=2,class=CODE,delta=1
   233                           	psect	text194,global,reloc=2,class=CODE,delta=1
   234                           	psect	text195,global,reloc=2,class=CODE,delta=1
   235                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   236                           	psect	text196,global,reloc=2,class=CODE,delta=1
   237                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   238                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   239                           	dabs	1,0x400,48,_BDT
   240                           	dabs	1,0x438,8,_CtrlTrfData
   241                           	dabs	1,0x430,8,_SetupPkt
   242  0000                     
   243                           ; Version 1.45
   244                           ; Generated 16/11/2017 GMT
   245                           ; 
   246                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   247                           ; All rights reserved.
   248                           ; 
   249                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   250                           ; 
   251                           ; Redistribution and use in source and binary forms, with or without modification, are
   252                           ; permitted provided that the following conditions are met:
   253                           ; 
   254                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   255                           ;        conditions and the following disclaimer.
   256                           ; 
   257                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   258                           ;        of conditions and the following disclaimer in the documentation and/or other
   259                           ;        materials provided with the distribution.
   260                           ; 
   261                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   262                           ;        software without specific prior written permission.
   263                           ; 
   264                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   265                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   266                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   267                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   268                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   269                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   270                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   271                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   272                           ; 
   273                           ; 
   274                           ; Code-generator required, PIC18F46J50 Definitions
   275                           ; 
   276                           ; SFR Addresses
   277  0000                     
   278                           	psect	idataCOMRAM
   279  006AC2                     __pidataCOMRAM:
   280                           	opt stack 0
   281                           
   282                           ;initializer for findEmptySpot@currentPosition
   283  006AC2  20                 	db	32
   284                           
   285                           ;initializer for isNumberInMemory@currentPosition
   286  006AC3  20                 	db	32
   287                           
   288                           	psect	idataBANK1
   289  006AC4                     __pidataBANK1:
   290                           	opt stack 0
   291                           
   292                           ;initializer for _isMemoryEmpty
   293  006AC4  01                 	db	1
   294                           
   295                           ;initializer for InitGprsNetwork@GprsInitSts
   296  006AC5  01                 	db	1
   297                           
   298                           	psect	idataBANK2
   299  006A30                     __pidataBANK2:
   300                           	opt stack 0
   301                           
   302                           ;initializer for Terminal@EchoOption
   303  006A30  01                 	db	1
   304                           
   305                           ;initializer for _MainSystemTimebaseFlag
   306  006A31  01                 	db	1
   307                           
   308                           ;initializer for _ConnTimeout
   309  006A32  00                 	db	0
   310  006A33  01                 	db	1
   311  006A34  0000               	dw	0
   312  006A36  0000               	dw	0
   313  006A38  0000               	dw	0
   314  006A3A  0000               	dw	0
   315  006A3C  00                 	db	0
   316                           
   317                           	psect	idataBANK3
   318  006222                     __pidataBANK3:
   319                           	opt stack 0
   320                           
   321                           ;initializer for ModemEvtParser@F9114
   322  006222  2B                 	db	43
   323  006223  43                 	db	67
   324  006224  4D                 	db	77
   325  006225  54                 	db	84
   326  006226  49                 	db	73
   327                           
   328                           ;initializer for ModemEvtParser@F9112
   329  006227  2B                 	db	43
   330  006228  43                 	db	67
   331  006229  4C                 	db	76
   332  00622A  49                 	db	73
   333  00622B  50                 	db	80
   334                           
   335                           ;initializer for ModemEvtParser@F9110
   336  00622C  52                 	db	82
   337  00622D  49                 	db	73
   338  00622E  4E                 	db	78
   339  00622F  47                 	db	71
   340                           
   341                           ;initializer for triggerRelay@F9003
   342  006230  50                 	db	80
   343  006231  00                 	db	0
   344                           
   345                           ;initializer for Term_MainSm@TermDelay
   346  006232  01                 	db	1
   347  006233  01                 	db	1
   348  006234  0000               	dw	0
   349  006236  0000               	dw	0
   350  006238  0000               	dw	0
   351  00623A  0000               	dw	0
   352  00623C  00                 	db	0
   353                           
   354                           ;initializer for _ConnWait
   355  00623D  00                 	db	0
   356  00623E  01                 	db	1
   357  00623F  0000               	dw	0
   358  006241  0000               	dw	0
   359  006243  0000               	dw	0
   360  006245  0000               	dw	0
   361  006247  00                 	db	0
   362                           
   363                           ;initializer for SendSmsSm@SwTimer
   364  006248  01                 	db	1
   365  006249  01                 	db	1
   366  00624A  0000               	dw	0
   367  00624C  0000               	dw	0
   368  00624E  0000               	dw	0
   369  006250  0000               	dw	0
   370  006252  00                 	db	0
   371                           
   372                           ;initializer for CheckModem@Timeout
   373  006253  00                 	db	0
   374  006254  01                 	db	1
   375  006255  0000               	dw	0
   376  006257  0000               	dw	0
   377  006259  0000               	dw	0
   378  00625B  0000               	dw	0
   379  00625D  00                 	db	0
   380                           
   381                           	psect	idataBANK4
   382  006A56                     __pidataBANK4:
   383                           	opt stack 0
   384                           
   385                           ;initializer for ModemEvtParser@F9116
   386  006A56  43                 	db	67
   387  006A57  61                 	db	97
   388  006A58  6C                 	db	108
   389  006A59  6C                 	db	108
   390  006A5A  20                 	db	32
   391  006A5B  52                 	db	82
   392  006A5C  65                 	db	101
   393  006A5D  61                 	db	97
   394  006A5E  64                 	db	100
   395  006A5F  79                 	db	121
   396                           
   397                           	psect	idataBANK5
   398  005C4C                     __pidataBANK5:
   399                           	opt stack 0
   400                           
   401                           ;initializer for _TaskTable
   402  005C4C  A0                 	db	low _Mdm_DrvMainFn
   403  005C4D  6A                 	db	high _Mdm_DrvMainFn
   404  005C4E  00                 	db	0
   405  005C4F  0000               	dw	0
   406  005C51  000A               	dw	10
   407  005C53  00                 	db	0
   408  005C54  B2                 	db	low _I2cSlv_MainTask
   409  005C55  59                 	db	high _I2cSlv_MainTask
   410  005C56  00                 	db	0
   411  005C57  0000               	dw	0
   412  005C59  0001               	dw	1
   413  005C5B  00                 	db	0
   414  005C5C  9C                 	db	low _Mdm_MainTask
   415  005C5D  5C                 	db	high _Mdm_MainTask
   416  005C5E  00                 	db	0
   417  005C5F  0000               	dw	0
   418  005C61  0001               	dw	1
   419  005C63  00                 	db	0
   420  005C64  4E                 	db	low _MdmHttp_MainTask
   421  005C65  5F                 	db	high _MdmHttp_MainTask
   422  005C66  00                 	db	0
   423  005C67  0000               	dw	0
   424  005C69  0001               	dw	1
   425  005C6B  00                 	db	0
   426  005C6C  32                 	db	low _UsbDevice_MainTask
   427  005C6D  66                 	db	high _UsbDevice_MainTask
   428  005C6E  00                 	db	0
   429  005C6F  0000               	dw	0
   430  005C71  0001               	dw	1
   431  005C73  00                 	db	0
   432  005C74  C2                 	db	low _Wdg_MainTask
   433  005C75  66                 	db	high _Wdg_MainTask
   434  005C76  00                 	db	0
   435  005C77  0000               	dw	0
   436  005C79  0064               	dw	100
   437  005C7B  00                 	db	0
   438  005C7C  E2                 	db	low _Led_MainTask
   439  005C7D  3A                 	db	high _Led_MainTask
   440  005C7E  00                 	db	0
   441  005C7F  0000               	dw	0
   442  005C81  0032               	dw	50
   443  005C83  00                 	db	0
   444  005C84  84                 	db	low _Rtcm_MainTask
   445  005C85  4E                 	db	high _Rtcm_MainTask
   446  005C86  00                 	db	0
   447  005C87  0000               	dw	0
   448  005C89  0064               	dw	100
   449  005C8B  00                 	db	0
   450  005C8C  9A                 	db	low _Term_MainTask
   451  005C8D  68                 	db	high _Term_MainTask
   452  005C8E  00                 	db	0
   453  005C8F  0000               	dw	0
   454  005C91  0001               	dw	1
   455  005C93  00                 	db	0
   456  005C94  F6                 	db	low _MyApp_Task
   457  005C95  34                 	db	high _MyApp_Task
   458  005C96  00                 	db	0
   459  005C97  0000               	dw	0
   460  005C99  0064               	dw	100
   461  005C9B  00                 	db	0
   462                           
   463                           	psect	mediumconst
   464  00FC0E                     __pmediumconst:
   465                           	opt stack 0
   466  00FC0E  00                 	db	0
   467  00FC0F                     delCmdFsm@F9004:
   468                           	opt stack 0
   469  00FC0F  00                 	db	0
   470  00FC10  00                 	db	0
   471  00FC11  00                 	db	0
   472  00FC12  00                 	db	0
   473  00FC13  00                 	db	0
   474  00FC14  00                 	db	0
   475  00FC15  00                 	db	0
   476  00FC16  00                 	db	0
   477  00FC17  00                 	db	0
   478  00FC18  00                 	db	0
   479  00FC19  00                 	db	0
   480  00FC1A  00                 	db	0
   481  00FC1B  00                 	db	0
   482  00FC1C                     __end_ofdelCmdFsm@F9004:
   483                           	opt stack 0
   484  00FC1C                     _USB_SD_Ptr:
   485                           	opt stack 0
   486  00FC1C  5B                 	db	low _sd000
   487  00FC1D  FE                 	db	high _sd000
   488  00FC1E  14                 	db	low _sd001
   489  00FC1F  FE                 	db	high _sd001
   490  00FC20  EE                 	db	low _sd002
   491  00FC21  FD                 	db	high _sd002
   492  00FC22                     __end_of_USB_SD_Ptr:
   493                           	opt stack 0
   494  00FC22                     parseCommand@F9021:
   495                           	opt stack 0
   496  00FC22  52                 	db	82
   497  00FC23  45                 	db	69
   498  00FC24  53                 	db	83
   499  00FC25  3B                 	db	59
   500  00FC26                     __end_ofparseCommand@F9021:
   501                           	opt stack 0
   502  00FC26                     parseCommand@F9019:
   503                           	opt stack 0
   504  00FC26  44                 	db	68
   505  00FC27  45                 	db	69
   506  00FC28  4C                 	db	76
   507  00FC29  3B                 	db	59
   508  00FC2A                     __end_ofparseCommand@F9019:
   509                           	opt stack 0
   510  00FC2A                     parseCommand@F9017:
   511                           	opt stack 0
   512  00FC2A  41                 	db	65
   513  00FC2B  44                 	db	68
   514  00FC2C  44                 	db	68
   515  00FC2D  3B                 	db	59
   516  00FC2E                     __end_ofparseCommand@F9017:
   517                           	opt stack 0
   518  00FC2E                     _USB_CD_Ptr:
   519                           	opt stack 0
   520  00FC2E  AB                 	db	low _configDescriptor1
   521  00FC2F  FD                 	db	high _configDescriptor1
   522  00FC30                     __end_of_USB_CD_Ptr:
   523                           	opt stack 0
   524  00FC30                     _TaskNumber:
   525                           	opt stack 0
   526  00FC30  000A               	dw	10
   527  00FC32                     __end_of_TaskNumber:
   528                           	opt stack 0
   529  00FC32                     _MsgFormat:
   530                           	opt stack 0
   531  00FC32  48                 	db	72
   532  00FC33  6F                 	db	111
   533  00FC34  73                 	db	115
   534  00FC35  74                 	db	116
   535  00FC36  20                 	db	32
   536  00FC37  6D                 	db	109
   537  00FC38  65                 	db	101
   538  00FC39  73                 	db	115
   539  00FC3A  73                 	db	115
   540  00FC3B  61                 	db	97
   541  00FC3C  67                 	db	103
   542  00FC3D  65                 	db	101
   543  00FC3E  20                 	db	32
   544  00FC3F  66                 	db	102
   545  00FC40  6F                 	db	111
   546  00FC41  72                 	db	114
   547  00FC42  6D                 	db	109
   548  00FC43  61                 	db	97
   549  00FC44  74                 	db	116
   550  00FC45  3A                 	db	58
   551  00FC46  20                 	db	32
   552  00FC47  0D                 	db	13
   553  00FC48  0A                 	db	10
   554  00FC49  5B                 	db	91
   555  00FC4A  6F                 	db	111
   556  00FC4B  70                 	db	112
   557  00FC4C  5F                 	db	95
   558  00FC4D  74                 	db	116
   559  00FC4E  79                 	db	121
   560  00FC4F  70                 	db	112
   561  00FC50  65                 	db	101
   562  00FC51  5D                 	db	93
   563  00FC52  3A                 	db	58
   564  00FC53  5B                 	db	91
   565  00FC54  6F                 	db	111
   566  00FC55  70                 	db	112
   567  00FC56  5D                 	db	93
   568  00FC57  3A                 	db	58
   569  00FC58  5B                 	db	91
   570  00FC59  6C                 	db	108
   571  00FC5A  65                 	db	101
   572  00FC5B  6E                 	db	110
   573  00FC5C  5D                 	db	93
   574  00FC5D  3A                 	db	58
   575  00FC5E  5B                 	db	91
   576  00FC5F  61                 	db	97
   577  00FC60  64                 	db	100
   578  00FC61  64                 	db	100
   579  00FC62  72                 	db	114
   580  00FC63  5D                 	db	93
   581  00FC64  3A                 	db	58
   582  00FC65  5B                 	db	91
   583  00FC66  70                 	db	112
   584  00FC67  61                 	db	97
   585  00FC68  79                 	db	121
   586  00FC69  6C                 	db	108
   587  00FC6A  6F                 	db	111
   588  00FC6B  61                 	db	97
   589  00FC6C  64                 	db	100
   590  00FC6D  5D                 	db	93
   591  00FC6E  0D                 	db	13
   592  00FC6F  0A                 	db	10
   593  00FC70  0D                 	db	13
   594  00FC71  0A                 	db	10
   595  00FC72  5B                 	db	91
   596  00FC73  6F                 	db	111
   597  00FC74  70                 	db	112
   598  00FC75  5F                 	db	95
   599  00FC76  74                 	db	116
   600  00FC77  79                 	db	121
   601  00FC78  70                 	db	112
   602  00FC79  65                 	db	101
   603  00FC7A  5D                 	db	93
   604  00FC7B  20                 	db	32
   605  00FC7C  3D                 	db	61
   606  00FC7D  20                 	db	32
   607  00FC7E  53                 	db	83
   608  00FC7F  4F                 	db	79
   609  00FC80  2C                 	db	44
   610  00FC81  53                 	db	83
   611  00FC82  42                 	db	66
   612  00FC83  0D                 	db	13
   613  00FC84  0A                 	db	10
   614  00FC85  5B                 	db	91
   615  00FC86  6F                 	db	111
   616  00FC87  70                 	db	112
   617  00FC88  5D                 	db	93
   618  00FC89  20                 	db	32
   619  00FC8A  3D                 	db	61
   620  00FC8B  20                 	db	32
   621  00FC8C  52                 	db	82
   622  00FC8D  3A                 	db	58
   623  00FC8E  20                 	db	32
   624  00FC8F  72                 	db	114
   625  00FC90  65                 	db	101
   626  00FC91  61                 	db	97
   627  00FC92  64                 	db	100
   628  00FC93  2C                 	db	44
   629  00FC94  57                 	db	87
   630  00FC95  3A                 	db	58
   631  00FC96  20                 	db	32
   632  00FC97  77                 	db	119
   633  00FC98  72                 	db	114
   634  00FC99  69                 	db	105
   635  00FC9A  74                 	db	116
   636  00FC9B  65                 	db	101
   637  00FC9C  0D                 	db	13
   638  00FC9D  0A                 	db	10
   639  00FC9E  5B                 	db	91
   640  00FC9F  6C                 	db	108
   641  00FCA0  65                 	db	101
   642  00FCA1  6E                 	db	110
   643  00FCA2  5D                 	db	93
   644  00FCA3  20                 	db	32
   645  00FCA4  3D                 	db	61
   646  00FCA5  20                 	db	32
   647  00FCA6  32                 	db	50
   648  00FCA7  20                 	db	32
   649  00FCA8  62                 	db	98
   650  00FCA9  79                 	db	121
   651  00FCAA  74                 	db	116
   652  00FCAB  65                 	db	101
   653  00FCAC  20                 	db	32
   654  00FCAD  41                 	db	65
   655  00FCAE  53                 	db	83
   656  00FCAF  43                 	db	67
   657  00FCB0  49                 	db	73
   658  00FCB1  49                 	db	73
   659  00FCB2  0D                 	db	13
   660  00FCB3  0A                 	db	10
   661  00FCB4  5B                 	db	91
   662  00FCB5  61                 	db	97
   663  00FCB6  64                 	db	100
   664  00FCB7  64                 	db	100
   665  00FCB8  72                 	db	114
   666  00FCB9  5D                 	db	93
   667  00FCBA  20                 	db	32
   668  00FCBB  3D                 	db	61
   669  00FCBC  20                 	db	32
   670  00FCBD  32                 	db	50
   671  00FCBE  20                 	db	32
   672  00FCBF  62                 	db	98
   673  00FCC0  79                 	db	121
   674  00FCC1  74                 	db	116
   675  00FCC2  65                 	db	101
   676  00FCC3  20                 	db	32
   677  00FCC4  41                 	db	65
   678  00FCC5  53                 	db	83
   679  00FCC6  43                 	db	67
   680  00FCC7  49                 	db	73
   681  00FCC8  49                 	db	73
   682  00FCC9  0D                 	db	13
   683  00FCCA  0A                 	db	10
   684  00FCCB  5B                 	db	91
   685  00FCCC  70                 	db	112
   686  00FCCD  61                 	db	97
   687  00FCCE  79                 	db	121
   688  00FCCF  6C                 	db	108
   689  00FCD0  6F                 	db	111
   690  00FCD1  61                 	db	97
   691  00FCD2  64                 	db	100
   692  00FCD3  5D                 	db	93
   693  00FCD4  20                 	db	32
   694  00FCD5  3D                 	db	61
   695  00FCD6  20                 	db	32
   696  00FCD7  6D                 	db	109
   697  00FCD8  61                 	db	97
   698  00FCD9  78                 	db	120
   699  00FCDA  20                 	db	32
   700  00FCDB  32                 	db	50
   701  00FCDC  30                 	db	48
   702  00FCDD  20                 	db	32
   703  00FCDE  62                 	db	98
   704  00FCDF  79                 	db	121
   705  00FCE0  74                 	db	116
   706  00FCE1  65                 	db	101
   707  00FCE2  20                 	db	32
   708  00FCE3  41                 	db	65
   709  00FCE4  53                 	db	83
   710  00FCE5  43                 	db	67
   711  00FCE6  49                 	db	73
   712  00FCE7  49                 	db	73
   713  00FCE8  0D                 	db	13
   714  00FCE9  0A                 	db	10
   715  00FCEA  0D                 	db	13
   716  00FCEB  0A                 	db	10
   717  00FCEC  54                 	db	84
   718  00FCED  65                 	db	101
   719  00FCEE  72                 	db	114
   720  00FCEF  6D                 	db	109
   721  00FCF0  69                 	db	105
   722  00FCF1  6E                 	db	110
   723  00FCF2  61                 	db	97
   724  00FCF3  6C                 	db	108
   725  00FCF4  20                 	db	32
   726  00FCF5  4D                 	db	77
   727  00FCF6  6F                 	db	111
   728  00FCF7  64                 	db	100
   729  00FCF8  65                 	db	101
   730  00FCF9  3A                 	db	58
   731  00FCFA  20                 	db	32
   732  00FCFB  43                 	db	67
   733  00FCFC  4F                 	db	79
   734  00FCFD  4D                 	db	77
   735  00FCFE  4D                 	db	77
   736  00FCFF  41                 	db	65
   737  00FD00  4E                 	db	78
   738  00FD01  44                 	db	68
   739  00FD02  20                 	db	32
   740  00FD03  4D                 	db	77
   741  00FD04  4F                 	db	79
   742  00FD05  44                 	db	68
   743  00FD06  45                 	db	69
   744  00FD07  0D                 	db	13
   745  00FD08  0A                 	db	10
   746  00FD09  4D                 	db	77
   747  00FD0A  6F                 	db	111
   748  00FD0B  64                 	db	100
   749  00FD0C  65                 	db	101
   750  00FD0D  6D                 	db	109
   751  00FD0E  20                 	db	32
   752  00FD0F  54                 	db	84
   753  00FD10  79                 	db	121
   754  00FD11  70                 	db	112
   755  00FD12  65                 	db	101
   756  00FD13  3A                 	db	58
   757  00FD14  20                 	db	32
   758  00FD15  47                 	db	71
   759  00FD16  53                 	db	83
   760  00FD17  4D                 	db	77
   761  00FD18  2F                 	db	47
   762  00FD19  47                 	db	71
   763  00FD1A  50                 	db	80
   764  00FD1B  52                 	db	82
   765  00FD1C  53                 	db	83
   766  00FD1D  0D                 	db	13
   767  00FD1E  0A                 	db	10
   768  00FD1F  0D                 	db	13
   769  00FD20  0A                 	db	10
   770  00FD21  00                 	db	0
   771  00FD22                     __end_of_MsgFormat:
   772                           	opt stack 0
   773  00FD22                     _Welcome:
   774                           	opt stack 0
   775  00FD22  2A                 	db	42
   776  00FD23  2A                 	db	42
   777  00FD24  2A                 	db	42
   778  00FD25  2A                 	db	42
   779  00FD26  2A                 	db	42
   780  00FD27  2A                 	db	42
   781  00FD28  2A                 	db	42
   782  00FD29  2A                 	db	42
   783  00FD2A  2A                 	db	42
   784  00FD2B  2A                 	db	42
   785  00FD2C  2A                 	db	42
   786  00FD2D  2A                 	db	42
   787  00FD2E  2A                 	db	42
   788  00FD2F  2A                 	db	42
   789  00FD30  2A                 	db	42
   790  00FD31  2A                 	db	42
   791  00FD32  2A                 	db	42
   792  00FD33  2A                 	db	42
   793  00FD34  2A                 	db	42
   794  00FD35  2A                 	db	42
   795  00FD36  2A                 	db	42
   796  00FD37  2A                 	db	42
   797  00FD38  2A                 	db	42
   798  00FD39  2A                 	db	42
   799  00FD3A  2A                 	db	42
   800  00FD3B  2A                 	db	42
   801  00FD3C  2A                 	db	42
   802  00FD3D  2A                 	db	42
   803  00FD3E  2A                 	db	42
   804  00FD3F  2A                 	db	42
   805  00FD40  2A                 	db	42
   806  00FD41  2A                 	db	42
   807  00FD42  2A                 	db	42
   808  00FD43  2A                 	db	42
   809  00FD44  2A                 	db	42
   810  00FD45  2A                 	db	42
   811  00FD46  2A                 	db	42
   812  00FD47  2A                 	db	42
   813  00FD48  2A                 	db	42
   814  00FD49  2A                 	db	42
   815  00FD4A  2A                 	db	42
   816  00FD4B  2A                 	db	42
   817  00FD4C  2A                 	db	42
   818  00FD4D  2A                 	db	42
   819  00FD4E  2A                 	db	42
   820  00FD4F  2A                 	db	42
   821  00FD50  2A                 	db	42
   822  00FD51  2A                 	db	42
   823  00FD52  2A                 	db	42
   824  00FD53  0D                 	db	13
   825  00FD54  0A                 	db	10
   826  00FD55  20                 	db	32
   827  00FD56  20                 	db	32
   828  00FD57  20                 	db	32
   829  00FD58  20                 	db	32
   830  00FD59  20                 	db	32
   831  00FD5A  20                 	db	32
   832  00FD5B  20                 	db	32
   833  00FD5C  20                 	db	32
   834  00FD5D  20                 	db	32
   835  00FD5E  20                 	db	32
   836  00FD5F  20                 	db	32
   837  00FD60  20                 	db	32
   838  00FD61  20                 	db	32
   839  00FD62  20                 	db	32
   840  00FD63  20                 	db	32
   841  00FD64  20                 	db	32
   842  00FD65  20                 	db	32
   843  00FD66  20                 	db	32
   844  00FD67  4D                 	db	77
   845  00FD68  45                 	db	69
   846  00FD69  52                 	db	82
   847  00FD6A  43                 	db	67
   848  00FD6B  55                 	db	85
   849  00FD6C  52                 	db	82
   850  00FD6D  59                 	db	89
   851  00FD6E  20                 	db	32
   852  00FD6F  53                 	db	83
   853  00FD70  59                 	db	89
   854  00FD71  53                 	db	83
   855  00FD72  54                 	db	84
   856  00FD73  45                 	db	69
   857  00FD74  4D                 	db	77
   858  00FD75  0D                 	db	13
   859  00FD76  0A                 	db	10
   860  00FD77  2A                 	db	42
   861  00FD78  2A                 	db	42
   862  00FD79  2A                 	db	42
   863  00FD7A  2A                 	db	42
   864  00FD7B  2A                 	db	42
   865  00FD7C  2A                 	db	42
   866  00FD7D  2A                 	db	42
   867  00FD7E  2A                 	db	42
   868  00FD7F  2A                 	db	42
   869  00FD80  2A                 	db	42
   870  00FD81  2A                 	db	42
   871  00FD82  2A                 	db	42
   872  00FD83  2A                 	db	42
   873  00FD84  2A                 	db	42
   874  00FD85  2A                 	db	42
   875  00FD86  2A                 	db	42
   876  00FD87  2A                 	db	42
   877  00FD88  2A                 	db	42
   878  00FD89  2A                 	db	42
   879  00FD8A  2A                 	db	42
   880  00FD8B  2A                 	db	42
   881  00FD8C  2A                 	db	42
   882  00FD8D  2A                 	db	42
   883  00FD8E  2A                 	db	42
   884  00FD8F  2A                 	db	42
   885  00FD90  2A                 	db	42
   886  00FD91  2A                 	db	42
   887  00FD92  2A                 	db	42
   888  00FD93  2A                 	db	42
   889  00FD94  2A                 	db	42
   890  00FD95  2A                 	db	42
   891  00FD96  2A                 	db	42
   892  00FD97  2A                 	db	42
   893  00FD98  2A                 	db	42
   894  00FD99  2A                 	db	42
   895  00FD9A  2A                 	db	42
   896  00FD9B  2A                 	db	42
   897  00FD9C  2A                 	db	42
   898  00FD9D  2A                 	db	42
   899  00FD9E  2A                 	db	42
   900  00FD9F  2A                 	db	42
   901  00FDA0  2A                 	db	42
   902  00FDA1  2A                 	db	42
   903  00FDA2  2A                 	db	42
   904  00FDA3  2A                 	db	42
   905  00FDA4  2A                 	db	42
   906  00FDA5  2A                 	db	42
   907  00FDA6  2A                 	db	42
   908  00FDA7  2A                 	db	42
   909  00FDA8  0D                 	db	13
   910  00FDA9  0A                 	db	10
   911  00FDAA  00                 	db	0
   912  00FDAB                     __end_of_Welcome:
   913                           	opt stack 0
   914  00FDAB                     _configDescriptor1:
   915                           	opt stack 0
   916  00FDAB  09                 	db	9
   917  00FDAC  02                 	db	2
   918  00FDAD  43                 	db	67
   919  00FDAE  00                 	db	0
   920  00FDAF  02                 	db	2
   921  00FDB0  01                 	db	1
   922  00FDB1  00                 	db	0
   923  00FDB2  C0                 	db	192
   924  00FDB3  32                 	db	50
   925  00FDB4  09                 	db	9
   926  00FDB5  04                 	db	4
   927  00FDB6  00                 	db	0
   928  00FDB7  00                 	db	0
   929  00FDB8  01                 	db	1
   930  00FDB9  02                 	db	2
   931  00FDBA  02                 	db	2
   932  00FDBB  01                 	db	1
   933  00FDBC  00                 	db	0
   934  00FDBD  05                 	db	5
   935  00FDBE  24                 	db	36
   936  00FDBF  00                 	db	0
   937  00FDC0  10                 	db	16
   938  00FDC1  01                 	db	1
   939  00FDC2  04                 	db	4
   940  00FDC3  24                 	db	36
   941  00FDC4  02                 	db	2
   942  00FDC5  02                 	db	2
   943  00FDC6  05                 	db	5
   944  00FDC7  24                 	db	36
   945  00FDC8  06                 	db	6
   946  00FDC9  00                 	db	0
   947  00FDCA  01                 	db	1
   948  00FDCB  05                 	db	5
   949  00FDCC  24                 	db	36
   950  00FDCD  01                 	db	1
   951  00FDCE  00                 	db	0
   952  00FDCF  01                 	db	1
   953  00FDD0  07                 	db	7
   954  00FDD1  05                 	db	5
   955  00FDD2  81                 	db	129
   956  00FDD3  03                 	db	3
   957  00FDD4  08                 	db	8
   958  00FDD5  00                 	db	0
   959  00FDD6  02                 	db	2
   960  00FDD7  09                 	db	9
   961  00FDD8  04                 	db	4
   962  00FDD9  01                 	db	1
   963  00FDDA  00                 	db	0
   964  00FDDB  02                 	db	2
   965  00FDDC  0A                 	db	10
   966  00FDDD  00                 	db	0
   967  00FDDE  00                 	db	0
   968  00FDDF  00                 	db	0
   969  00FDE0  07                 	db	7
   970  00FDE1  05                 	db	5
   971  00FDE2  02                 	db	2
   972  00FDE3  02                 	db	2
   973  00FDE4  40                 	db	64
   974  00FDE5  00                 	db	0
   975  00FDE6  00                 	db	0
   976  00FDE7  07                 	db	7
   977  00FDE8  05                 	db	5
   978  00FDE9  82                 	db	130
   979  00FDEA  02                 	db	2
   980  00FDEB  40                 	db	64
   981  00FDEC  00                 	db	0
   982  00FDED  00                 	db	0
   983  00FDEE                     __end_of_configDescriptor1:
   984                           	opt stack 0
   985  00FDEE                     _sd002:
   986                           	opt stack 0
   987  00FDEE  26                 	db	38
   988  00FDEF  03                 	db	3
   989  00FDF0  0054               	dw	84
   990  00FDF2  0065               	dw	101
   991  00FDF4  0072               	dw	114
   992  00FDF6  006D               	dw	109
   993  00FDF8  0069               	dw	105
   994  00FDFA  006E               	dw	110
   995  00FDFC  0061               	dw	97
   996  00FDFE  006C               	dw	108
   997  00FE00  0020               	dw	32
   998  00FE02  0049               	dw	73
   999  00FE04  006E               	dw	110
  1000  00FE06  0074               	dw	116
  1001  00FE08  0065               	dw	101
  1002  00FE0A  0072               	dw	114
  1003  00FE0C  0066               	dw	102
  1004  00FE0E  0061               	dw	97
  1005  00FE10  0063               	dw	99
  1006  00FE12  0065               	dw	101
  1007  00FE14                     __end_of_sd002:
  1008                           	opt stack 0
  1009  00FE14                     _sd001:
  1010                           	opt stack 0
  1011  00FE14  1E                 	db	30
  1012  00FE15  03                 	db	3
  1013  00FE16  004D               	dw	77
  1014  00FE18  0065               	dw	101
  1015  00FE1A  0072               	dw	114
  1016  00FE1C  0063               	dw	99
  1017  00FE1E  0075               	dw	117
  1018  00FE20  0072               	dw	114
  1019  00FE22  0079               	dw	121
  1020  00FE24  0020               	dw	32
  1021  00FE26  0053               	dw	83
  1022  00FE28  0079               	dw	121
  1023  00FE2A  0073               	dw	115
  1024  00FE2C  0074               	dw	116
  1025  00FE2E  0065               	dw	101
  1026  00FE30  006D               	dw	109
  1027  00FE32                     __end_of_sd001:
  1028                           	opt stack 0
  1029  00FE32                     _MsgReady:
  1030                           	opt stack 0
  1031  00FE32  0D                 	db	13
  1032  00FE33  0A                 	db	10
  1033  00FE34  53                 	db	83
  1034  00FE35  79                 	db	121
  1035  00FE36  73                 	db	115
  1036  00FE37  74                 	db	116
  1037  00FE38  65                 	db	101
  1038  00FE39  6D                 	db	109
  1039  00FE3A  20                 	db	32
  1040  00FE3B  52                 	db	82
  1041  00FE3C  65                 	db	101
  1042  00FE3D  61                 	db	97
  1043  00FE3E  64                 	db	100
  1044  00FE3F  79                 	db	121
  1045  00FE40  2E                 	db	46
  1046  00FE41  2E                 	db	46
  1047  00FE42  2E                 	db	46
  1048  00FE43  20                 	db	32
  1049  00FE44  0D                 	db	13
  1050  00FE45  0A                 	db	10
  1051  00FE46  0D                 	db	13
  1052  00FE47  0A                 	db	10
  1053  00FE48  00                 	db	0
  1054  00FE49                     __end_of_MsgReady:
  1055                           	opt stack 0
  1056  00FE49                     _device_dsc:
  1057                           	opt stack 0
  1058  00FE49  12                 	db	18
  1059  00FE4A  01                 	db	1
  1060  00FE4B  0200               	dw	512
  1061  00FE4D  02                 	db	2
  1062  00FE4E  00                 	db	0
  1063  00FE4F  00                 	db	0
  1064  00FE50  08                 	db	8
  1065  00FE51  04D8               	dw	1240
  1066  00FE53  000A               	dw	10
  1067  00FE55  0100               	dw	256
  1068  00FE57  01                 	db	1
  1069  00FE58  02                 	db	2
  1070  00FE59  00                 	db	0
  1071  00FE5A  01                 	db	1
  1072  00FE5B                     __end_of_device_dsc:
  1073                           	opt stack 0
  1074  00FE5B                     _sd000:
  1075                           	opt stack 0
  1076  00FE5B  04                 	db	4
  1077  00FE5C  03                 	db	3
  1078  00FE5D  0409               	dw	1033
  1079  00FE5F                     __end_of_sd000:
  1080                           	opt stack 0
  1081  0000                     _RPINR1	set	3815
  1082  0000                     _UEP0bits	set	3878
  1083  0000                     _UIEbits	set	3894
  1084  0000                     _UADDR	set	3896
  1085  0000                     _UIE	set	3894
  1086  0000                     _UEIE	set	3895
  1087  0000                     _UCFG	set	3897
  1088  0000                     _RTCCAL	set	3902
  1089  0000                     _PADCFG1bits	set	3900
  1090  0000                     _RTCCFGbits	set	3903
  1091  0000                     _DSCONLbits	set	3916
  1092  0000                     _DSGPR1	set	3919
  1093  0000                     _DSGPR0	set	3918
  1094  0000                     _DSCONHbits	set	3917
  1095  0000                     _ANCON1bits	set	3913
  1096  0000                     _UEP1	set	3879
  1097  0000                     _UEP0	set	3878
  1098  0000                     _T1CONbits	set	4045
  1099  0000                     _PORTDbits	set	3971
  1100  0000                     _USTAT	set	3940
  1101  0000                     _PIR2bits	set	4001
  1102  0000                     _UCON	set	3941
  1103  0000                     _UIRbits	set	3938
  1104  0000                     _UCONbits	set	3941
  1105  0000                     _UIR	set	3938
  1106  0000                     _UEIR	set	3939
  1107  0000                     _PIE2bits	set	4000
  1108  0000                     _BAUDCON2	set	3964
  1109  0000                     _RCSTA2	set	3996
  1110  0000                     _BAUDCON1	set	3966
  1111  0000                     _RCSTA1	set	4012
  1112  0000                     _TRISCbits	set	3988
  1113  0000                     _TXSTA2	set	4008
  1114  0000                     _TXSTA1	set	4013
  1115  0000                     _RCREG2	set	4010
  1116  0000                     _RCREG1	set	4015
  1117  0000                     _TXREG2	set	4009
  1118  0000                     _TXREG1	set	4014
  1119  0000                     _SPBRG2	set	4011
  1120  0000                     _SPBRGH2	set	3965
  1121  0000                     _SPBRG1	set	4016
  1122  0000                     _SPBRGH1	set	3967
  1123  0000                     _PR4	set	3959
  1124  0000                     _PR2	set	4043
  1125  0000                     _PIE1bits	set	3997
  1126  0000                     _IPR1bits	set	3999
  1127  0000                     _T4CONbits	set	3958
  1128  0000                     _T2CONbits	set	4042
  1129  0000                     _ALRMVALL	set	3982
  1130  0000                     _ALRMVALH	set	3983
  1131  0000                     _RTCVALH	set	3993
  1132  0000                     _RTCVALL	set	3992
  1133  0000                     _ALRMRPTbits	set	3984
  1134  0000                     _ALRMCFGbits	set	3985
  1135  0000                     _PIE3bits	set	4003
  1136  0000                     _IPR3bits	set	4005
  1137  0000                     _OSCCONbits	set	4051
  1138  0000                     _PORTEbits	set	3972
  1139  0000                     _TRISEbits	set	3990
  1140  0000                     _WDTCONbits	set	4032
  1141  0000                     _INTCON2bits	set	4081
  1142  0000                     _TRISBbits	set	3987
  1143  0000                     _OSCTUNEbits	set	3995
  1144  0000                     _SSP2CON1	set	3954
  1145  0000                     _TRISDbits	set	3989
  1146  0000                     _SSP2BUF	set	3957
  1147  0000                     _SSP2CON2bits	set	3953
  1148  0000                     _SSP2STAT	set	3955
  1149  0000                     _SSP2CON2	set	3953
  1150  0000                     _SSP2ADD	set	3956
  1151  0000                     _PIR1bits	set	3998
  1152  0000                     _PIR3bits	set	4004
  1153  0000                     _INTCON3bits	set	4080
  1154  0000                     _INTCONbits	set	4082
  1155  0000                     _RCONbits	set	4048
  1156  00FE5F                     STR_21:
  1157  00FE5F  20                 	db	32
  1158  00FE60  4C                 	db	76	;'L'
  1159  00FE61  61                 	db	97	;'a'
  1160  00FE62  7A                 	db	122	;'z'
  1161  00FE63  79                 	db	121	;'y'
  1162  00FE64  20                 	db	32
  1163  00FE65  64                 	db	100	;'d'
  1164  00FE66  65                 	db	101	;'e'
  1165  00FE67  76                 	db	118	;'v'
  1166  00FE68  69                 	db	105	;'i'
  1167  00FE69  63                 	db	99	;'c'
  1168  00FE6A  65                 	db	101	;'e'
  1169  00FE6B  2E                 	db	46
  1170  00FE6C  2E                 	db	46
  1171  00FE6D  2E                 	db	46
  1172  00FE6E  79                 	db	121	;'y'
  1173  00FE6F  6F                 	db	111	;'o'
  1174  00FE70  75                 	db	117	;'u'
  1175  00FE71  27                 	db	39
  1176  00FE72  76                 	db	118	;'v'
  1177  00FE73  65                 	db	101	;'e'
  1178  00FE74  20                 	db	32
  1179  00FE75  62                 	db	98	;'b'
  1180  00FE76  65                 	db	101	;'e'
  1181  00FE77  65                 	db	101	;'e'
  1182  00FE78  6E                 	db	110	;'n'
  1183  00FE79  20                 	db	32
  1184  00FE7A  74                 	db	116	;'t'
  1185  00FE7B  69                 	db	105	;'i'
  1186  00FE7C  6D                 	db	109	;'m'
  1187  00FE7D  65                 	db	101	;'e'
  1188  00FE7E  64                 	db	100	;'d'
  1189  00FE7F  2D                 	db	45
  1190  00FE80  6F                 	db	111	;'o'
  1191  00FE81  75                 	db	117	;'u'
  1192  00FE82  74                 	db	116	;'t'
  1193  00FE83  21                 	db	33
  1194  00FE84  21                 	db	33
  1195  00FE85  21                 	db	33
  1196  00FE86  0D                 	db	13
  1197  00FE87  0A                 	db	10
  1198  00FE88  00                 	db	0
  1199  00FE89                     STR_8:
  1200  00FE89  41                 	db	65	;'A'
  1201  00FE8A  54                 	db	84	;'T'
  1202  00FE8B  2B                 	db	43
  1203  00FE8C  53                 	db	83	;'S'
  1204  00FE8D  41                 	db	65	;'A'
  1205  00FE8E  50                 	db	80	;'P'
  1206  00FE8F  42                 	db	66	;'B'
  1207  00FE90  52                 	db	82	;'R'
  1208  00FE91  3D                 	db	61	;'='
  1209  00FE92  33                 	db	51	;'3'
  1210  00FE93  2C                 	db	44
  1211  00FE94  31                 	db	49	;'1'
  1212  00FE95  2C                 	db	44
  1213  00FE96  22                 	db	34
  1214  00FE97  43                 	db	67	;'C'
  1215  00FE98  6F                 	db	111	;'o'
  1216  00FE99  6E                 	db	110	;'n'
  1217  00FE9A  74                 	db	116	;'t'
  1218  00FE9B  79                 	db	121	;'y'
  1219  00FE9C  70                 	db	112	;'p'
  1220  00FE9D  65                 	db	101	;'e'
  1221  00FE9E  22                 	db	34
  1222  00FE9F  2C                 	db	44
  1223  00FEA0  22                 	db	34
  1224  00FEA1  47                 	db	71	;'G'
  1225  00FEA2  50                 	db	80	;'P'
  1226  00FEA3  52                 	db	82	;'R'
  1227  00FEA4  53                 	db	83	;'S'
  1228  00FEA5  22                 	db	34
  1229  00FEA6  0D                 	db	13
  1230  00FEA7  00                 	db	0
  1231  00FEA8                     STR_14:
  1232  00FEA8  41                 	db	65	;'A'
  1233  00FEA9  54                 	db	84	;'T'
  1234  00FEAA  2B                 	db	43
  1235  00FEAB  48                 	db	72	;'H'
  1236  00FEAC  54                 	db	84	;'T'
  1237  00FEAD  54                 	db	84	;'T'
  1238  00FEAE  50                 	db	80	;'P'
  1239  00FEAF  50                 	db	80	;'P'
  1240  00FEB0  41                 	db	65	;'A'
  1241  00FEB1  52                 	db	82	;'R'
  1242  00FEB2  41                 	db	65	;'A'
  1243  00FEB3  3D                 	db	61	;'='
  1244  00FEB4  22                 	db	34
  1245  00FEB5  43                 	db	67	;'C'
  1246  00FEB6  49                 	db	73	;'I'
  1247  00FEB7  44                 	db	68	;'D'
  1248  00FEB8  22                 	db	34
  1249  00FEB9  2C                 	db	44
  1250  00FEBA  31                 	db	49	;'1'
  1251  00FEBB  0D                 	db	13
  1252  00FEBC  00                 	db	0
  1253  00FEBD                     STR_9:
  1254  00FEBD  41                 	db	65	;'A'
  1255  00FEBE  54                 	db	84	;'T'
  1256  00FEBF  2B                 	db	43
  1257  00FEC0  53                 	db	83	;'S'
  1258  00FEC1  41                 	db	65	;'A'
  1259  00FEC2  50                 	db	80	;'P'
  1260  00FEC3  42                 	db	66	;'B'
  1261  00FEC4  52                 	db	82	;'R'
  1262  00FEC5  3D                 	db	61	;'='
  1263  00FEC6  33                 	db	51	;'3'
  1264  00FEC7  2C                 	db	44
  1265  00FEC8  31                 	db	49	;'1'
  1266  00FEC9  2C                 	db	44
  1267  00FECA  22                 	db	34
  1268  00FECB  41                 	db	65	;'A'
  1269  00FECC  50                 	db	80	;'P'
  1270  00FECD  4E                 	db	78	;'N'
  1271  00FECE  22                 	db	34
  1272  00FECF  2C                 	db	44
  1273  00FED0  22                 	db	34
  1274  00FED1  00                 	db	0
  1275  00FED2                     STR_23:
  1276  00FED2  46                 	db	70	;'F'
  1277  00FED3  72                 	db	114	;'r'
  1278  00FED4  61                 	db	97	;'a'
  1279  00FED5  6D                 	db	109	;'m'
  1280  00FED6  65                 	db	101	;'e'
  1281  00FED7  77                 	db	119	;'w'
  1282  00FED8  6F                 	db	111	;'o'
  1283  00FED9  72                 	db	114	;'r'
  1284  00FEDA  6B                 	db	107	;'k'
  1285  00FEDB  20                 	db	32
  1286  00FEDC  56                 	db	86	;'V'
  1287  00FEDD  65                 	db	101	;'e'
  1288  00FEDE  72                 	db	114	;'r'
  1289  00FEDF  73                 	db	115	;'s'
  1290  00FEE0  69                 	db	105	;'i'
  1291  00FEE1  6F                 	db	111	;'o'
  1292  00FEE2  6E                 	db	110	;'n'
  1293  00FEE3  3A                 	db	58	;':'
  1294  00FEE4  20                 	db	32
  1295  00FEE5  00                 	db	0
  1296  00FEE6                     STR_15:
  1297  00FEE6  41                 	db	65	;'A'
  1298  00FEE7  54                 	db	84	;'T'
  1299  00FEE8  2B                 	db	43
  1300  00FEE9  48                 	db	72	;'H'
  1301  00FEEA  54                 	db	84	;'T'
  1302  00FEEB  54                 	db	84	;'T'
  1303  00FEEC  50                 	db	80	;'P'
  1304  00FEED  50                 	db	80	;'P'
  1305  00FEEE  41                 	db	65	;'A'
  1306  00FEEF  52                 	db	82	;'R'
  1307  00FEF0  41                 	db	65	;'A'
  1308  00FEF1  3D                 	db	61	;'='
  1309  00FEF2  22                 	db	34
  1310  00FEF3  55                 	db	85	;'U'
  1311  00FEF4  52                 	db	82	;'R'
  1312  00FEF5  4C                 	db	76	;'L'
  1313  00FEF6  22                 	db	34
  1314  00FEF7  2C                 	db	44
  1315  00FEF8  22                 	db	34
  1316  00FEF9  00                 	db	0
  1317  00FEFA                     STR_30:
  1318  00FEFA  41                 	db	65	;'A'
  1319  00FEFB  54                 	db	84	;'T'
  1320  00FEFC  2B                 	db	43
  1321  00FEFD  43                 	db	67	;'C'
  1322  00FEFE  4D                 	db	77	;'M'
  1323  00FEFF  47                 	db	71	;'G'
  1324  00FF00  44                 	db	68	;'D'
  1325  00FF01  41                 	db	65	;'A'
  1326  00FF02  3D                 	db	61	;'='
  1327  00FF03  44                 	db	68	;'D'
  1328  00FF04  45                 	db	69	;'E'
  1329  00FF05  4C                 	db	76	;'L'
  1330  00FF06  20                 	db	32
  1331  00FF07  41                 	db	65	;'A'
  1332  00FF08  4C                 	db	76	;'L'
  1333  00FF09  4C                 	db	76	;'L'
  1334  00FF0A  0D                 	db	13
  1335  00FF0B  0A                 	db	10
  1336  00FF0C  00                 	db	0
  1337  00FF0D                     STR_27:
  1338  00FF0D  42                 	db	66	;'B'
  1339  00FF0E  75                 	db	117	;'u'
  1340  00FF0F  69                 	db	105	;'i'
  1341  00FF10  6C                 	db	108	;'l'
  1342  00FF11  64                 	db	100	;'d'
  1343  00FF12  20                 	db	32
  1344  00FF13  44                 	db	68	;'D'
  1345  00FF14  61                 	db	97	;'a'
  1346  00FF15  74                 	db	116	;'t'
  1347  00FF16  65                 	db	101	;'e'
  1348  00FF17  3A                 	db	58	;':'
  1349  00FF18  20                 	db	32
  1350  00FF19  25                 	db	37
  1351  00FF1A  73                 	db	115	;'s'
  1352  00FF1B  0D                 	db	13
  1353  00FF1C  0A                 	db	10
  1354  00FF1D  00                 	db	0
  1355  00FF1E                     STR_16:
  1356  00FF1E  41                 	db	65	;'A'
  1357  00FF1F  54                 	db	84	;'T'
  1358  00FF20  2B                 	db	43
  1359  00FF21  48                 	db	72	;'H'
  1360  00FF22  54                 	db	84	;'T'
  1361  00FF23  54                 	db	84	;'T'
  1362  00FF24  50                 	db	80	;'P'
  1363  00FF25  41                 	db	65	;'A'
  1364  00FF26  43                 	db	67	;'C'
  1365  00FF27  54                 	db	84	;'T'
  1366  00FF28  49                 	db	73	;'I'
  1367  00FF29  4F                 	db	79	;'O'
  1368  00FF2A  4E                 	db	78	;'N'
  1369  00FF2B  3D                 	db	61	;'='
  1370  00FF2C  30                 	db	48	;'0'
  1371  00FF2D  0D                 	db	13
  1372  00FF2E  00                 	db	0
  1373  00FF2F                     STR_29:
  1374  00FF2F  41                 	db	65	;'A'
  1375  00FF30  54                 	db	84	;'T'
  1376  00FF31  2B                 	db	43
  1377  00FF32  43                 	db	67	;'C'
  1378  00FF33  4D                 	db	77	;'M'
  1379  00FF34  47                 	db	71	;'G'
  1380  00FF35  44                 	db	68	;'D'
  1381  00FF36  3D                 	db	61	;'='
  1382  00FF37  31                 	db	49	;'1'
  1383  00FF38  2C                 	db	44
  1384  00FF39  30                 	db	48	;'0'
  1385  00FF3A  0D                 	db	13
  1386  00FF3B  0A                 	db	10
  1387  00FF3C  00                 	db	0
  1388  00FF3D  41                 	db	65	;'A'
  1389  00FF3E  54                 	db	84	;'T'
  1390  00FF3F  2B                 	db	43
  1391  00FF40  48                 	db	72	;'H'
  1392  00FF41  54                 	db	84	;'T'
  1393  00FF42  54                 	db	84	;'T'
  1394  00FF43  50                 	db	80	;'P'
  1395  00FF44  53                 	db	83	;'S'
  1396  00FF45  53                 	db	83	;'S'
  1397  00FF46  4C                 	db	76	;'L'
  1398  00FF47  3D                 	db	61	;'='
  1399  00FF48  30                 	db	48	;'0'
  1400  00FF49  0D                 	db	13
  1401  00FF4A  00                 	db	0
  1402  00FF4B                     STR_10:
  1403  00FF4B  41                 	db	65	;'A'
  1404  00FF4C  54                 	db	84	;'T'
  1405  00FF4D  2B                 	db	43
  1406  00FF4E  53                 	db	83	;'S'
  1407  00FF4F  41                 	db	65	;'A'
  1408  00FF50  50                 	db	80	;'P'
  1409  00FF51  42                 	db	66	;'B'
  1410  00FF52  52                 	db	82	;'R'
  1411  00FF53  3D                 	db	61	;'='
  1412  00FF54  31                 	db	49	;'1'
  1413  00FF55  2C                 	db	44
  1414  00FF56  31                 	db	49	;'1'
  1415  00FF57  0D                 	db	13
  1416  00FF58  00                 	db	0
  1417  00FF59                     STR_11:
  1418  00FF59  41                 	db	65	;'A'
  1419  00FF5A  54                 	db	84	;'T'
  1420  00FF5B  2B                 	db	43
  1421  00FF5C  53                 	db	83	;'S'
  1422  00FF5D  41                 	db	65	;'A'
  1423  00FF5E  50                 	db	80	;'P'
  1424  00FF5F  42                 	db	66	;'B'
  1425  00FF60  52                 	db	82	;'R'
  1426  00FF61  3D                 	db	61	;'='
  1427  00FF62  32                 	db	50	;'2'
  1428  00FF63  2C                 	db	44
  1429  00FF64  31                 	db	49	;'1'
  1430  00FF65  0D                 	db	13
  1431  00FF66  00                 	db	0
  1432  00FF67                     STR_13:
  1433  00FF67  41                 	db	65	;'A'
  1434  00FF68  54                 	db	84	;'T'
  1435  00FF69  2B                 	db	43
  1436  00FF6A  48                 	db	72	;'H'
  1437  00FF6B  54                 	db	84	;'T'
  1438  00FF6C  54                 	db	84	;'T'
  1439  00FF6D  50                 	db	80	;'P'
  1440  00FF6E  53                 	db	83	;'S'
  1441  00FF6F  53                 	db	83	;'S'
  1442  00FF70  4C                 	db	76	;'L'
  1443  00FF71  3D                 	db	61	;'='
  1444  00FF72  31                 	db	49	;'1'
  1445  00FF73  0D                 	db	13
  1446  00FF74  00                 	db	0
  1447  00FF75                     STR_2:
  1448  00FF75  41                 	db	65	;'A'
  1449  00FF76  54                 	db	84	;'T'
  1450  00FF77  2B                 	db	43
  1451  00FF78  49                 	db	73	;'I'
  1452  00FF79  50                 	db	80	;'P'
  1453  00FF7A  52                 	db	82	;'R'
  1454  00FF7B  3D                 	db	61	;'='
  1455  00FF7C  39                 	db	57	;'9'
  1456  00FF7D  36                 	db	54	;'6'
  1457  00FF7E  30                 	db	48	;'0'
  1458  00FF7F  30                 	db	48	;'0'
  1459  00FF80  0D                 	db	13
  1460  00FF81  0A                 	db	10
  1461  00FF82  00                 	db	0
  1462  00FF83                     STR_17:
  1463  00FF83  41                 	db	65	;'A'
  1464  00FF84  54                 	db	84	;'T'
  1465  00FF85  2B                 	db	43
  1466  00FF86  48                 	db	72	;'H'
  1467  00FF87  54                 	db	84	;'T'
  1468  00FF88  54                 	db	84	;'T'
  1469  00FF89  50                 	db	80	;'P'
  1470  00FF8A  52                 	db	82	;'R'
  1471  00FF8B  45                 	db	69	;'E'
  1472  00FF8C  41                 	db	65	;'A'
  1473  00FF8D  44                 	db	68	;'D'
  1474  00FF8E  0D                 	db	13
  1475  00FF8F  00                 	db	0
  1476  00FF90                     STR_18:
  1477  00FF90  41                 	db	65	;'A'
  1478  00FF91  54                 	db	84	;'T'
  1479  00FF92  2B                 	db	43
  1480  00FF93  48                 	db	72	;'H'
  1481  00FF94  54                 	db	84	;'T'
  1482  00FF95  54                 	db	84	;'T'
  1483  00FF96  50                 	db	80	;'P'
  1484  00FF97  54                 	db	84	;'T'
  1485  00FF98  45                 	db	69	;'E'
  1486  00FF99  52                 	db	82	;'R'
  1487  00FF9A  4D                 	db	77	;'M'
  1488  00FF9B  0D                 	db	13
  1489  00FF9C  00                 	db	0
  1490  00FF9D                     STR_12:
  1491  00FF9D  41                 	db	65	;'A'
  1492  00FF9E  54                 	db	84	;'T'
  1493  00FF9F  2B                 	db	43
  1494  00FFA0  48                 	db	72	;'H'
  1495  00FFA1  54                 	db	84	;'T'
  1496  00FFA2  54                 	db	84	;'T'
  1497  00FFA3  50                 	db	80	;'P'
  1498  00FFA4  49                 	db	73	;'I'
  1499  00FFA5  4E                 	db	78	;'N'
  1500  00FFA6  49                 	db	73	;'I'
  1501  00FFA7  54                 	db	84	;'T'
  1502  00FFA8  0D                 	db	13
  1503  00FFA9  00                 	db	0
  1504  00FFAA                     STR_31:
  1505  00FFAA  41                 	db	65	;'A'
  1506  00FFAB  54                 	db	84	;'T'
  1507  00FFAC  2B                 	db	43
  1508  00FFAD  43                 	db	67	;'C'
  1509  00FFAE  4C                 	db	76	;'L'
  1510  00FFAF  49                 	db	73	;'I'
  1511  00FFB0  50                 	db	80	;'P'
  1512  00FFB1  3D                 	db	61	;'='
  1513  00FFB2  31                 	db	49	;'1'
  1514  00FFB3  0D                 	db	13
  1515  00FFB4  0A                 	db	10
  1516  00FFB5  00                 	db	0
  1517  00FFB6                     STR_28:
  1518  00FFB6  4D                 	db	77	;'M'
  1519  00FFB7  61                 	db	97	;'a'
  1520  00FFB8  72                 	db	114	;'r'
  1521  00FFB9  20                 	db	32
  1522  00FFBA  32                 	db	50	;'2'
  1523  00FFBB  37                 	db	55	;'7'
  1524  00FFBC  20                 	db	32
  1525  00FFBD  32                 	db	50	;'2'
  1526  00FFBE  30                 	db	48	;'0'
  1527  00FFBF  32                 	db	50	;'2'
  1528  00FFC0  32                 	db	50	;'2'
  1529  00FFC1  00                 	db	0
  1530  00FFC2                     STR_4:
  1531  00FFC2  41                 	db	65	;'A'
  1532  00FFC3  54                 	db	84	;'T'
  1533  00FFC4  2B                 	db	43
  1534  00FFC5  43                 	db	67	;'C'
  1535  00FFC6  4D                 	db	77	;'M'
  1536  00FFC7  47                 	db	71	;'G'
  1537  00FFC8  52                 	db	82	;'R'
  1538  00FFC9  3D                 	db	61	;'='
  1539  00FFCA  31                 	db	49	;'1'
  1540  00FFCB  0D                 	db	13
  1541  00FFCC  0A                 	db	10
  1542  00FFCD  00                 	db	0
  1543  00FFCE                     STR_5:
  1544  00FFCE  41                 	db	65	;'A'
  1545  00FFCF  54                 	db	84	;'T'
  1546  00FFD0  2B                 	db	43
  1547  00FFD1  43                 	db	67	;'C'
  1548  00FFD2  4D                 	db	77	;'M'
  1549  00FFD3  47                 	db	71	;'G'
  1550  00FFD4  53                 	db	83	;'S'
  1551  00FFD5  3D                 	db	61	;'='
  1552  00FFD6  22                 	db	34
  1553  00FFD7  00                 	db	0
  1554  00FFD8                     STR_32:
  1555  00FFD8  28                 	db	40
  1556  00FFD9  6E                 	db	110	;'n'
  1557  00FFDA  75                 	db	117	;'u'
  1558  00FFDB  6C                 	db	108	;'l'
  1559  00FFDC  6C                 	db	108	;'l'
  1560  00FFDD  29                 	db	41
  1561  00FFDE  00                 	db	0
  1562  00FFDF                     STR_3:
  1563  00FFDF  41                 	db	65	;'A'
  1564  00FFE0  54                 	db	84	;'T'
  1565  00FFE1  45                 	db	69	;'E'
  1566  00FFE2  30                 	db	48	;'0'
  1567  00FFE3  0D                 	db	13
  1568  00FFE4  0A                 	db	10
  1569  00FFE5  00                 	db	0
  1570  00FFE6                     STR_1:
  1571  00FFE6  41                 	db	65	;'A'
  1572  00FFE7  54                 	db	84	;'T'
  1573  00FFE8  0D                 	db	13
  1574  00FFE9  0A                 	db	10
  1575  00FFEA  00                 	db	0
  1576  00FFEB  41                 	db	65	;'A'
  1577  00FFEC  54                 	db	84	;'T'
  1578  00FFED  41                 	db	65	;'A'
  1579  00FFEE  0D                 	db	13
  1580  00FFEF  00                 	db	0
  1581  00FFF0                     STR_6:
  1582  00FFF0  41                 	db	65	;'A'
  1583  00FFF1  54                 	db	84	;'T'
  1584  00FFF2  48                 	db	72	;'H'
  1585  00FFF3  0D                 	db	13
  1586  00FFF4  00                 	db	0
  1587  00FFF5                     STR_24:
  1588  00FFF5  2E                 	db	46
  1589  00FFF6  00                 	db	0
  1590  0000                     
  1591                           ; #config settings
  1592  00FFF7  00                 	db	0	; dummy byte at the end
  1593  0000                     
  1594                           	psect	cinit
  1595  002180                     __pcinit:
  1596                           	opt stack 0
  1597  002180                     start_initialization:
  1598                           	opt stack 0
  1599  002180                     __initialization:
  1600                           	opt stack 0
  1601                           
  1602                           ; Initialize objects allocated to BANK5 (80 bytes)
  1603                           ; load TBLPTR registers with __pidataBANK5
  1604  002180  0E4C               	movlw	low __pidataBANK5
  1605  002182  6EF6               	movwf	tblptrl,c
  1606  002184  0E5C               	movlw	high __pidataBANK5
  1607  002186  6EF7               	movwf	tblptrh,c
  1608  002188  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1609  00218A  6EF8               	movwf	tblptru,c
  1610  00218C  EE05  F0A4         	lfsr	0,__pdataBANK5
  1611  002190  EE10 F050          	lfsr	1,80
  1612  002194                     copy_data0:
  1613  002194  0009               	tblrd		*+
  1614  002196  CFF5 FFEE          	movff	tablat,postinc0
  1615  00219A  50E5               	movf	postdec1,w,c
  1616  00219C  50E1               	movf	fsr1l,w,c
  1617  00219E  E1FA               	bnz	copy_data0
  1618                           
  1619                           ; Initialize objects allocated to BANK3 (60 bytes)
  1620                           ; load TBLPTR registers with __pidataBANK3
  1621  0021A0  0E22               	movlw	low __pidataBANK3
  1622  0021A2  6EF6               	movwf	tblptrl,c
  1623  0021A4  0E62               	movlw	high __pidataBANK3
  1624  0021A6  6EF7               	movwf	tblptrh,c
  1625  0021A8  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1626  0021AA  6EF8               	movwf	tblptru,c
  1627  0021AC  EE03  F0C2         	lfsr	0,__pdataBANK3
  1628  0021B0  EE10 F03C          	lfsr	1,60
  1629  0021B4                     copy_data1:
  1630  0021B4  0009               	tblrd		*+
  1631  0021B6  CFF5 FFEE          	movff	tablat,postinc0
  1632  0021BA  50E5               	movf	postdec1,w,c
  1633  0021BC  50E1               	movf	fsr1l,w,c
  1634  0021BE  E1FA               	bnz	copy_data1
  1635                           
  1636                           ; Initialize objects allocated to BANK2 (13 bytes)
  1637                           ; load TBLPTR registers with __pidataBANK2
  1638  0021C0  0E30               	movlw	low __pidataBANK2
  1639  0021C2  6EF6               	movwf	tblptrl,c
  1640  0021C4  0E6A               	movlw	high __pidataBANK2
  1641  0021C6  6EF7               	movwf	tblptrh,c
  1642  0021C8  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1643  0021CA  6EF8               	movwf	tblptru,c
  1644  0021CC  EE02  F0F3         	lfsr	0,__pdataBANK2
  1645  0021D0  EE10 F00D          	lfsr	1,13
  1646  0021D4                     copy_data2:
  1647  0021D4  0009               	tblrd		*+
  1648  0021D6  CFF5 FFEE          	movff	tablat,postinc0
  1649  0021DA  50E5               	movf	postdec1,w,c
  1650  0021DC  50E1               	movf	fsr1l,w,c
  1651  0021DE  E1FA               	bnz	copy_data2
  1652                           
  1653                           ; Initialize objects allocated to BANK1 (2 bytes)
  1654                           ; load TBLPTR registers with __pidataBANK1
  1655  0021E0  0EC4               	movlw	low __pidataBANK1
  1656  0021E2  6EF6               	movwf	tblptrl,c
  1657  0021E4  0E6A               	movlw	high __pidataBANK1
  1658  0021E6  6EF7               	movwf	tblptrh,c
  1659  0021E8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1660  0021EA  6EF8               	movwf	tblptru,c
  1661  0021EC  0009               	tblrd		*+	;fetch initializer
  1662  0021EE  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1663  0021F2  0009               	tblrd		*+	;fetch initializer
  1664  0021F4  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1665                           
  1666                           ; Initialize objects allocated to BANK4 (10 bytes)
  1667                           ; load TBLPTR registers with __pidataBANK4
  1668  0021F8  0E56               	movlw	low __pidataBANK4
  1669  0021FA  6EF6               	movwf	tblptrl,c
  1670  0021FC  0E6A               	movlw	high __pidataBANK4
  1671  0021FE  6EF7               	movwf	tblptrh,c
  1672  002200  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1673  002202  6EF8               	movwf	tblptru,c
  1674  002204  EE04  F0E0         	lfsr	0,__pdataBANK4
  1675  002208  EE10 F00A          	lfsr	1,10
  1676  00220C                     copy_data3:
  1677  00220C  0009               	tblrd		*+
  1678  00220E  CFF5 FFEE          	movff	tablat,postinc0
  1679  002212  50E5               	movf	postdec1,w,c
  1680  002214  50E1               	movf	fsr1l,w,c
  1681  002216  E1FA               	bnz	copy_data3
  1682                           
  1683                           ; Initialize objects allocated to COMRAM (2 bytes)
  1684                           ; load TBLPTR registers with __pidataCOMRAM
  1685  002218  0EC2               	movlw	low __pidataCOMRAM
  1686  00221A  6EF6               	movwf	tblptrl,c
  1687  00221C  0E6A               	movlw	high __pidataCOMRAM
  1688  00221E  6EF7               	movwf	tblptrh,c
  1689  002220  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1690  002222  6EF8               	movwf	tblptru,c
  1691  002224  0009               	tblrd		*+	;fetch initializer
  1692  002226  CFF5 F040          	movff	tablat,__pdataCOMRAM
  1693  00222A  0009               	tblrd		*+	;fetch initializer
  1694  00222C  CFF5 F041          	movff	tablat,__pdataCOMRAM+1
  1695                           
  1696                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1697  002230  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1698  002234  EE13 F020          	lfsr	1,800
  1699  002238                     clear_0:
  1700  002238  6AEE               	clrf	postinc0,c
  1701  00223A  50E5               	movf	postdec1,w,c
  1702  00223C  50E1               	movf	fsr1l,w,c
  1703  00223E  E1FC               	bnz	clear_0
  1704  002240  50E2               	movf	fsr1h,w,c
  1705  002242  E1FA               	bnz	clear_0
  1706                           
  1707                           ; Clear objects allocated to BANK9 (200 bytes)
  1708  002244  EE09  F000         	lfsr	0,__pbssBANK9
  1709  002248  0EC8               	movlw	200
  1710  00224A                     clear_1:
  1711  00224A  6AEE               	clrf	postinc0,c
  1712  00224C  06E8               	decf	wreg,f,c
  1713  00224E  E1FD               	bnz	clear_1
  1714                           
  1715                           ; Clear objects allocated to BANK8 (200 bytes)
  1716  002250  EE08  F000         	lfsr	0,__pbssBANK8
  1717  002254  0EC8               	movlw	200
  1718  002256                     clear_2:
  1719  002256  6AEE               	clrf	postinc0,c
  1720  002258  06E8               	decf	wreg,f,c
  1721  00225A  E1FD               	bnz	clear_2
  1722                           
  1723                           ; Clear objects allocated to BANK7 (246 bytes)
  1724  00225C  EE07  F000         	lfsr	0,__pbssBANK7
  1725  002260  0EF6               	movlw	246
  1726  002262                     clear_3:
  1727  002262  6AEE               	clrf	postinc0,c
  1728  002264  06E8               	decf	wreg,f,c
  1729  002266  E1FD               	bnz	clear_3
  1730                           
  1731                           ; Clear objects allocated to BANK6 (220 bytes)
  1732  002268  EE06  F000         	lfsr	0,__pbssBANK6
  1733  00226C  0EDC               	movlw	220
  1734  00226E                     clear_4:
  1735  00226E  6AEE               	clrf	postinc0,c
  1736  002270  06E8               	decf	wreg,f,c
  1737  002272  E1FD               	bnz	clear_4
  1738                           
  1739                           ; Clear objects allocated to BANK5 (164 bytes)
  1740  002274  EE05  F000         	lfsr	0,__pbssBANK5
  1741  002278  0EA4               	movlw	164
  1742  00227A                     clear_5:
  1743  00227A  6AEE               	clrf	postinc0,c
  1744  00227C  06E8               	decf	wreg,f,c
  1745  00227E  E1FD               	bnz	clear_5
  1746                           
  1747                           ; Clear objects allocated to BANK3 (194 bytes)
  1748  002280  EE03  F000         	lfsr	0,__pbssBANK3
  1749  002284  0EC2               	movlw	194
  1750  002286                     clear_6:
  1751  002286  6AEE               	clrf	postinc0,c
  1752  002288  06E8               	decf	wreg,f,c
  1753  00228A  E1FD               	bnz	clear_6
  1754                           
  1755                           ; Clear objects allocated to BANK2 (43 bytes)
  1756  00228C  EE02  F0C8         	lfsr	0,__pbssBANK2
  1757  002290  0E2B               	movlw	43
  1758  002292                     clear_7:
  1759  002292  6AEE               	clrf	postinc0,c
  1760  002294  06E8               	decf	wreg,f,c
  1761  002296  E1FD               	bnz	clear_7
  1762                           
  1763                           ; Clear objects allocated to BANK1 (53 bytes)
  1764  002298  EE01  F0C9         	lfsr	0,__pbssBANK1
  1765  00229C  0E35               	movlw	53
  1766  00229E                     clear_8:
  1767  00229E  6AEE               	clrf	postinc0,c
  1768  0022A0  06E8               	decf	wreg,f,c
  1769  0022A2  E1FD               	bnz	clear_8
  1770                           
  1771                           ; Clear objects allocated to BANK4 (160 bytes)
  1772  0022A4  EE04  F040         	lfsr	0,__pbssBANK4
  1773  0022A8  0EA0               	movlw	160
  1774  0022AA                     clear_9:
  1775  0022AA  6AEE               	clrf	postinc0,c
  1776  0022AC  06E8               	decf	wreg,f,c
  1777  0022AE  E1FD               	bnz	clear_9
  1778                           
  1779                           ; Clear objects allocated to BANK0 (51 bytes)
  1780  0022B0  EE00  F0B0         	lfsr	0,__pbssBANK0
  1781  0022B4  0E33               	movlw	51
  1782  0022B6                     clear_10:
  1783  0022B6  6AEE               	clrf	postinc0,c
  1784  0022B8  06E8               	decf	wreg,f,c
  1785  0022BA  E1FD               	bnz	clear_10
  1786                           
  1787                           ; Clear objects allocated to COMRAM (29 bytes)
  1788  0022BC  EE00  F023         	lfsr	0,__pbssCOMRAM
  1789  0022C0  0E1D               	movlw	29
  1790  0022C2                     clear_11:
  1791  0022C2  6AEE               	clrf	postinc0,c
  1792  0022C4  06E8               	decf	wreg,f,c
  1793  0022C6  E1FD               	bnz	clear_11
  1794  0022C8                     end_of_initialization:
  1795                           	opt stack 0
  1796  0022C8                     __end_of__initialization:
  1797                           	opt stack 0
  1798  0022C8  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1799  0022CA  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1800  0022CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1801  0022CE  6EF8               	movwf	tblptru,c
  1802  0022D0  0100               	movlb	0
  1803  0022D2  EF1F  F035         	goto	_main	;jump to C main() function
  1804                           tblptru	equ	0xFF8
  1805                           tblptrh	equ	0xFF7
  1806                           tblptrl	equ	0xFF6
  1807                           tablat	equ	0xFF5
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           postdec1	equ	0xFE5
  1811                           fsr1h	equ	0xFE2
  1812                           fsr1l	equ	0xFE1
  1813                           
  1814                           	psect	bssCOMRAM
  1815  000023                     __pbssCOMRAM:
  1816                           	opt stack 0
  1817  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1818                           	opt stack 0
  1819  000023                     	ds	2
  1820  000025                     _USBDeferOUTDataStagePackets:
  1821                           	opt stack 0
  1822  000025                     	ds	1
  1823  000026                     _USBDeferINDataStagePackets:
  1824                           	opt stack 0
  1825  000026                     	ds	1
  1826  000027                     _USBStatusStageEnabledFlag2:
  1827                           	opt stack 0
  1828  000027                     	ds	1
  1829  000028                     CheckModem@CheckMdmSts:
  1830                           	opt stack 0
  1831  000028                     	ds	1
  1832  000029                     _ComChecCompleted:
  1833                           	opt stack 0
  1834  000029                     	ds	1
  1835  00002A                     Uart_Uart1RxIsr@UartRxData:
  1836                           	opt stack 0
  1837  00002A                     	ds	1
  1838  00002B                     Uart_MdmGsmGprsReadService@RxState:
  1839                           	opt stack 0
  1840  00002B                     	ds	1
  1841  00002C                     MdmCntSm@MdmCntState:
  1842                           	opt stack 0
  1843  00002C                     	ds	1
  1844  00002D                     RiSm@MdmDrvState:
  1845                           	opt stack 0
  1846  00002D                     	ds	1
  1847  00002E                     _Mmd_RingIndicator:
  1848                           	opt stack 0
  1849  00002E                     	ds	1
  1850  00002F                     I2c_ReadData@ReadStatus:
  1851                           	opt stack 0
  1852  00002F                     	ds	1
  1853  000030                     I2c_ReadData@TentativeCounter:
  1854                           	opt stack 0
  1855  000030                     	ds	1
  1856  000031                     I2c_ReadData@DataCounter:
  1857                           	opt stack 0
  1858  000031                     	ds	1
  1859  000032                     I2c_ReadData@I2cReadState:
  1860                           	opt stack 0
  1861  000032                     	ds	1
  1862  000033                     I2c_WriteData@WriteStatus:
  1863                           	opt stack 0
  1864  000033                     	ds	1
  1865  000034                     I2c_WriteData@TentativeCounter:
  1866                           	opt stack 0
  1867  000034                     	ds	1
  1868  000035                     I2c_WriteData@I2cNextState:
  1869                           	opt stack 0
  1870  000035                     	ds	1
  1871  000036                     I2c_WriteData@I2cWriteState:
  1872                           	opt stack 0
  1873  000036                     	ds	1
  1874  000037                     _MdmStsReady:
  1875                           	opt stack 0
  1876  000037                     	ds	1
  1877  000038                     _NewStringMdmTerminal:
  1878                           	opt stack 0
  1879  000038                     	ds	1
  1880  000039                     _NewMdmEvtParserRequest:
  1881                           	opt stack 0
  1882  000039                     	ds	1
  1883  00003A                     _NewStringReceived:
  1884                           	opt stack 0
  1885  00003A                     	ds	1
  1886  00003B                     _MdmResetRequest:
  1887                           	opt stack 0
  1888  00003B                     	ds	1
  1889  00003C                     _CallClosedEvent:
  1890                           	opt stack 0
  1891  00003C                     	ds	1
  1892  00003D                     _IncomingCallEvent:
  1893                           	opt stack 0
  1894  00003D                     	ds	1
  1895  00003E                     _NewSmsEvent:
  1896                           	opt stack 0
  1897  00003E                     	ds	1
  1898  00003F                     _ActivateRiDetection:
  1899                           	opt stack 0
  1900  00003F                     	ds	1
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1h	equ	0xFE2
  1909                           fsr1l	equ	0xFE1
  1910                           
  1911                           	psect	dataCOMRAM
  1912  000040                     __pdataCOMRAM:
  1913                           	opt stack 0
  1914  000040                     findEmptySpot@currentPosition:
  1915                           	opt stack 0
  1916  000040                     	ds	1
  1917  000041                     isNumberInMemory@currentPosition:
  1918                           	opt stack 0
  1919  000041                     	ds	1
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           postinc0	equ	0xFEE
  1925                           wreg	equ	0xFE8
  1926                           postdec1	equ	0xFE5
  1927                           fsr1h	equ	0xFE2
  1928                           fsr1l	equ	0xFE1
  1929                           
  1930                           	psect	bssBANK0
  1931  0000B0                     __pbssBANK0:
  1932                           	opt stack 0
  1933  0000B0                     _inPipes:
  1934                           	opt stack 0
  1935  0000B0                     	ds	6
  1936  0000B6                     _pBDTEntryIn:
  1937                           	opt stack 0
  1938  0000B6                     	ds	6
  1939  0000BC                     _CDCDataOutHandle:
  1940                           	opt stack 0
  1941  0000BC                     	ds	2
  1942  0000BE                     _pBDTEntryEP0OutNext:
  1943                           	opt stack 0
  1944  0000BE                     	ds	2
  1945  0000C0                     _pBDTEntryEP0OutCurrent:
  1946                           	opt stack 0
  1947  0000C0                     	ds	2
  1948  0000C2                     _RxLen:
  1949                           	opt stack 0
  1950  0000C2                     	ds	2
  1951  0000C4                     Eeprom_Reset@memoryAddress:
  1952                           	opt stack 0
  1953  0000C4                     	ds	1
  1954  0000C5                     _cdc_tx_len:
  1955                           	opt stack 0
  1956  0000C5                     	ds	1
  1957  0000C6                     _cdc_trf_state:
  1958                           	opt stack 0
  1959  0000C6                     	ds	1
  1960  0000C7                     _cdc_rx_len:
  1961                           	opt stack 0
  1962  0000C7                     	ds	1
  1963  0000C8                     _USBStatusStageEnabledFlag1:
  1964                           	opt stack 0
  1965  0000C8                     	ds	1
  1966  0000C9                     _USBDeferStatusStagePacket:
  1967                           	opt stack 0
  1968  0000C9                     	ds	1
  1969  0000CA                     _USBStatusStageTimeoutCounter:
  1970                           	opt stack 0
  1971  0000CA                     	ds	1
  1972  0000CB                     _endpoint_number:
  1973                           	opt stack 0
  1974  0000CB                     	ds	1
  1975  0000CC                     _controlTransferState:
  1976                           	opt stack 0
  1977  0000CC                     	ds	1
  1978  0000CD                     _shortPacketStatus:
  1979                           	opt stack 0
  1980  0000CD                     	ds	1
  1981  0000CE                     _USBDeviceState:
  1982                           	opt stack 0
  1983  0000CE                     	ds	1
  1984  0000CF                     _I2cComSts:
  1985                           	opt stack 0
  1986  0000CF                     	ds	1
  1987  0000D0                     HttpGetMethod@GetMethodNextState:
  1988                           	opt stack 0
  1989  0000D0                     	ds	1
  1990  0000D1                     InitGprsNetwork@GprsNetInitNextState:
  1991                           	opt stack 0
  1992  0000D1                     	ds	1
  1993  0000D2                     _MdmStatus:
  1994                           	opt stack 0
  1995  0000D2                     	ds	1
  1996  0000D3                     _PhoneNumbLen:
  1997                           	opt stack 0
  1998  0000D3                     	ds	1
  1999  0000D4                     _SmsLen:
  2000                           	opt stack 0
  2001  0000D4                     	ds	1
  2002  0000D5                     _SystemState:
  2003                           	opt stack 0
  2004  0000D5                     	ds	1
  2005  0000D6                     _USTATcopy:
  2006                           	opt stack 0
  2007  0000D6                     	ds	1
  2008  0000D7                     _USBActiveConfiguration:
  2009                           	opt stack 0
  2010  0000D7                     	ds	1
  2011  0000D8                     _I2cReadDataEvt:
  2012                           	opt stack 0
  2013  0000D8                     	ds	1
  2014  0000D9                     _I2cWriteDataEvt:
  2015                           	opt stack 0
  2016  0000D9                     	ds	1
  2017  0000DA                     _GetMethod:
  2018                           	opt stack 0
  2019  0000DA                     	ds	1
  2020  0000DB                     _InitNetwork:
  2021                           	opt stack 0
  2022  0000DB                     	ds	1
  2023  0000DC                     _SmsTxtReady:
  2024                           	opt stack 0
  2025  0000DC                     	ds	1
  2026  0000DD                     _GetSmsText:
  2027                           	opt stack 0
  2028  0000DD                     	ds	1
  2029  0000DE                     _SmsEvent:
  2030                           	opt stack 0
  2031  0000DE                     	ds	1
  2032  0000DF                     _ClipEvent:
  2033                           	opt stack 0
  2034  0000DF                     	ds	1
  2035  0000E0                     _RingEvent:
  2036                           	opt stack 0
  2037  0000E0                     	ds	1
  2038  0000E1                     _SendSmsEvent:
  2039                           	opt stack 0
  2040  0000E1                     	ds	1
  2041  0000E2                     _MdmOnOffPulseRequest:
  2042                           	opt stack 0
  2043  0000E2                     	ds	1
  2044                           tblptru	equ	0xFF8
  2045                           tblptrh	equ	0xFF7
  2046                           tblptrl	equ	0xFF6
  2047                           tablat	equ	0xFF5
  2048                           postinc0	equ	0xFEE
  2049                           wreg	equ	0xFE8
  2050                           postdec1	equ	0xFE5
  2051                           fsr1h	equ	0xFE2
  2052                           fsr1l	equ	0xFE1
  2053                           
  2054                           	psect	bssBANK1
  2055  0001C9                     __pbssBANK1:
  2056                           	opt stack 0
  2057  0001C9                     _outPipes:
  2058                           	opt stack 0
  2059  0001C9                     	ds	8
  2060  0001D1                     _CDCDataInHandle:
  2061                           	opt stack 0
  2062  0001D1                     	ds	2
  2063  0001D3                     _Tmr2IsrCallback:
  2064                           	opt stack 0
  2065  0001D3                     	ds	2
  2066  0001D5                     triggerCmdFsm@currentState:
  2067                           	opt stack 0
  2068  0001D5                     	ds	1
  2069  0001D6                     delCmdFsm@currentState:
  2070                           	opt stack 0
  2071  0001D6                     	ds	1
  2072  0001D7                     addCmdFsm@currentState:
  2073                           	opt stack 0
  2074  0001D7                     	ds	1
  2075  0001D8                     initFsm@currentState:
  2076                           	opt stack 0
  2077  0001D8                     	ds	1
  2078  0001D9                     initEeprom@currentState:
  2079                           	opt stack 0
  2080  0001D9                     	ds	1
  2081  0001DA                     initGprsModem@currentState:
  2082                           	opt stack 0
  2083  0001DA                     	ds	1
  2084  0001DB                     MyApp_Task@currentState:
  2085                           	opt stack 0
  2086  0001DB                     	ds	1
  2087  0001DC                     GsmGprsTerminal@SMS:
  2088                           	opt stack 0
  2089  0001DC                     	ds	1
  2090  0001DD                     	ds	1
  2091  0001DE                     _control_signal_bitmap:
  2092                           	opt stack 0
  2093  0001DE                     	ds	1
  2094  0001DF                     _cdc_mem_type:
  2095                           	opt stack 0
  2096  0001DF                     	ds	1
  2097  0001E0                     _USBTicksSinceSuspendEnd:
  2098                           	opt stack 0
  2099  0001E0                     	ds	1
  2100  0001E1                     _BothEP0OutUOWNsSet:
  2101                           	opt stack 0
  2102  0001E1                     	ds	1
  2103  0001E2                     _USBBusIsSuspended:
  2104                           	opt stack 0
  2105  0001E2                     	ds	1
  2106  0001E3                     _RemoteWakeup:
  2107                           	opt stack 0
  2108  0001E3                     	ds	1
  2109  0001E4                     I2cSlv_QueryI2cData@Ret:
  2110                           	opt stack 0
  2111  0001E4                     	ds	1
  2112  0001E5                     I2cSlv_QueryI2cData@I2cOpState:
  2113                           	opt stack 0
  2114  0001E5                     	ds	1
  2115  0001E6                     I2cSendMsgSm@I2cComState:
  2116                           	opt stack 0
  2117  0001E6                     	ds	1
  2118  0001E7                     _I2cBusStatus:
  2119                           	opt stack 0
  2120  0001E7                     	ds	1
  2121  0001E8                     HttpGetMethod@GetMOutSts:
  2122                           	opt stack 0
  2123  0001E8                     	ds	1
  2124  0001E9                     HttpGetMethod@GetMethodState:
  2125                           	opt stack 0
  2126  0001E9                     	ds	1
  2127  0001EA                     InitGprsNetwork@GprsNetInitState:
  2128                           	opt stack 0
  2129  0001EA                     	ds	1
  2130  0001EB                     _PostMethod:
  2131                           	opt stack 0
  2132  0001EB                     	ds	1
  2133  0001EC                     _HttpGetMethodSts:
  2134                           	opt stack 0
  2135  0001EC                     	ds	1
  2136  0001ED                     _GprsNetworkSts:
  2137                           	opt stack 0
  2138  0001ED                     	ds	1
  2139  0001EE                     _ApnLenLocal:
  2140                           	opt stack 0
  2141  0001EE                     	ds	1
  2142  0001EF                     SendSmsSm@SendSms_NextState:
  2143                           	opt stack 0
  2144  0001EF                     	ds	1
  2145  0001F0                     SendSmsSm@SendSms_State:
  2146                           	opt stack 0
  2147  0001F0                     	ds	1
  2148  0001F1                     GetSmsSm@GetSmsState:
  2149                           	opt stack 0
  2150  0001F1                     	ds	1
  2151  0001F2                     ConfigureModem@NextState:
  2152                           	opt stack 0
  2153  0001F2                     	ds	1
  2154  0001F3                     ConfigureModem@MdmConfigState:
  2155                           	opt stack 0
  2156  0001F3                     	ds	1
  2157  0001F4                     TurnOnModem@TurnOnMdmState:
  2158                           	opt stack 0
  2159  0001F4                     	ds	1
  2160  0001F5                     _AlarmEvent:
  2161                           	opt stack 0
  2162  0001F5                     	ds	1
  2163  0001F6                     _Led3OutSts:
  2164                           	opt stack 0
  2165  0001F6                     	ds	1
  2166  0001F7                     _Led3Sts:
  2167                           	opt stack 0
  2168  0001F7                     	ds	1
  2169  0001F8                     _Led2OutSts:
  2170                           	opt stack 0
  2171  0001F8                     	ds	1
  2172  0001F9                     _Led2Sts:
  2173                           	opt stack 0
  2174  0001F9                     	ds	1
  2175  0001FA                     _Led1OutSts:
  2176                           	opt stack 0
  2177  0001FA                     	ds	1
  2178  0001FB                     _Led1Sts:
  2179                           	opt stack 0
  2180  0001FB                     	ds	1
  2181  0001FC                     _ReadAddress:
  2182                           	opt stack 0
  2183  0001FC                     	ds	1
  2184  0001FD                     I2cDummyTx@DummyBuffer:
  2185                           	opt stack 0
  2186  0001FD                     	ds	1
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           postdec1	equ	0xFE5
  2194                           fsr1h	equ	0xFE2
  2195                           fsr1l	equ	0xFE1
  2196                           
  2197                           	psect	dataBANK1
  2198  0001FE                     __pdataBANK1:
  2199                           	opt stack 0
  2200  0001FE                     _isMemoryEmpty:
  2201                           	opt stack 0
  2202  0001FE                     	ds	1
  2203  0001FF                     InitGprsNetwork@GprsInitSts:
  2204                           	opt stack 0
  2205  0001FF                     	ds	1
  2206                           tblptru	equ	0xFF8
  2207                           tblptrh	equ	0xFF7
  2208                           tblptrl	equ	0xFF6
  2209                           tablat	equ	0xFF5
  2210                           postinc0	equ	0xFEE
  2211                           wreg	equ	0xFE8
  2212                           postdec1	equ	0xFE5
  2213                           fsr1h	equ	0xFE2
  2214                           fsr1l	equ	0xFE1
  2215                           
  2216                           	psect	bssBANK2
  2217  0002C8                     __pbssBANK2:
  2218                           	opt stack 0
  2219  0002C8                     _pCDCDst:
  2220                           	opt stack 0
  2221  0002C8                     	ds	3
  2222  0002CB                     _pCDCSrc:
  2223                           	opt stack 0
  2224  0002CB                     	ds	3
  2225  0002CE                     _ep_data_out:
  2226                           	opt stack 0
  2227  0002CE                     	ds	3
  2228  0002D1                     _ep_data_in:
  2229                           	opt stack 0
  2230  0002D1                     	ds	3
  2231  0002D4                     _pDst:
  2232                           	opt stack 0
  2233  0002D4                     	ds	2
  2234  0002D6                     _ApnLocal:
  2235                           	opt stack 0
  2236  0002D6                     	ds	2
  2237  0002D8                     ConfigureModem@DelayCounter:
  2238                           	opt stack 0
  2239  0002D8                     	ds	2
  2240  0002DA                     ConfigureModem@DelayValueMs:
  2241                           	opt stack 0
  2242  0002DA                     	ds	2
  2243  0002DC                     TurnOnModem@Counter:
  2244                           	opt stack 0
  2245  0002DC                     	ds	2
  2246  0002DE                     UpdateSchFlag@InterruptCounter:
  2247                           	opt stack 0
  2248  0002DE                     	ds	2
  2249  0002E0                     MdmCntSm@Counter:
  2250                           	opt stack 0
  2251  0002E0                     	ds	2
  2252  0002E2                     RiSm@Counter:
  2253                           	opt stack 0
  2254  0002E2                     	ds	2
  2255  0002E4                     _ExtInt1IsrCallback:
  2256                           	opt stack 0
  2257  0002E4                     	ds	2
  2258  0002E6                     _ExtInt0IsrCallback:
  2259                           	opt stack 0
  2260  0002E6                     	ds	2
  2261  0002E8                     _RtccIsrCallback:
  2262                           	opt stack 0
  2263  0002E8                     	ds	2
  2264  0002EA                     _Tmr4IsrCallback:
  2265                           	opt stack 0
  2266  0002EA                     	ds	2
  2267  0002EC                     Term_MainSm@TermMainSmState:
  2268                           	opt stack 0
  2269  0002EC                     	ds	1
  2270  0002ED                     Terminal@FormatOption:
  2271                           	opt stack 0
  2272  0002ED                     	ds	1
  2273  0002EE                     Terminal@SlaveAddr:
  2274                           	opt stack 0
  2275  0002EE                     	ds	1
  2276  0002EF                     Terminal@PackageLen:
  2277                           	opt stack 0
  2278  0002EF                     	ds	1
  2279  0002F0                     Terminal@TermState:
  2280                           	opt stack 0
  2281  0002F0                     	ds	1
  2282  0002F1                     _USBAlternateInterface:
  2283                           	opt stack 0
  2284  0002F1                     	ds	2
  2285                           tblptru	equ	0xFF8
  2286                           tblptrh	equ	0xFF7
  2287                           tblptrl	equ	0xFF6
  2288                           tablat	equ	0xFF5
  2289                           postinc0	equ	0xFEE
  2290                           wreg	equ	0xFE8
  2291                           postdec1	equ	0xFE5
  2292                           fsr1h	equ	0xFE2
  2293                           fsr1l	equ	0xFE1
  2294                           
  2295                           	psect	dataBANK2
  2296  0002F3                     __pdataBANK2:
  2297                           	opt stack 0
  2298  0002F3                     Terminal@EchoOption:
  2299                           	opt stack 0
  2300  0002F3                     	ds	1
  2301  0002F4                     _MainSystemTimebaseFlag:
  2302                           	opt stack 0
  2303  0002F4                     	ds	1
  2304  0002F5                     _ConnTimeout:
  2305                           	opt stack 0
  2306  0002F5                     	ds	11
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           postinc0	equ	0xFEE
  2312                           wreg	equ	0xFE8
  2313                           postdec1	equ	0xFE5
  2314                           fsr1h	equ	0xFE2
  2315                           fsr1l	equ	0xFE1
  2316                           
  2317                           	psect	bssBANK3
  2318  000300                     __pbssBANK3:
  2319                           	opt stack 0
  2320  000300                     _Rtcm_RtccAlarm:
  2321                           	opt stack 0
  2322  000300                     	ds	6
  2323  000306                     _pBDTEntryOut:
  2324                           	opt stack 0
  2325  000306                     	ds	6
  2326  00030C                     _BaudRateGen:
  2327                           	opt stack 0
  2328  00030C                     	ds	4
  2329  000310                     _USB1msTickCount:
  2330                           	opt stack 0
  2331  000310                     	ds	4
  2332  000314                     _OsTmr_OsTickCounter:
  2333                           	opt stack 0
  2334  000314                     	ds	4
  2335  000318                     _UsbMasterPhoneNumberLen:
  2336                           	opt stack 0
  2337  000318                     	ds	2
  2338  00031A                     _UartConfig:
  2339                           	opt stack 0
  2340  00031A                     	ds	21
  2341  00032F                     _receivedNumber:
  2342                           	opt stack 0
  2343  00032F                     	ds	13
  2344  00033C                     _callerNumber:
  2345                           	opt stack 0
  2346  00033C                     	ds	13
  2347  000349                     I2cSlv_QueryI2cData@TimeoutTimer:
  2348                           	opt stack 0
  2349  000349                     	ds	11
  2350  000354                     _I2cConfig:
  2351                           	opt stack 0
  2352  000354                     	ds	10
  2353  00035E                     _Led3Blink:
  2354                           	opt stack 0
  2355  00035E                     	ds	9
  2356  000367                     _Led2Blink:
  2357                           	opt stack 0
  2358  000367                     	ds	9
  2359  000370                     _Led1Blink:
  2360                           	opt stack 0
  2361  000370                     	ds	9
  2362  000379                     _dummy_encapsulated_cmd_response:
  2363                           	opt stack 0
  2364  000379                     	ds	8
  2365  000381                     _line_coding:
  2366                           	opt stack 0
  2367  000381                     	ds	7
  2368  000388                     _Led3Pulse:
  2369                           	opt stack 0
  2370  000388                     	ds	6
  2371  00038E                     _Led2Pulse:
  2372                           	opt stack 0
  2373  00038E                     	ds	6
  2374  000394                     _Led1Pulse:
  2375                           	opt stack 0
  2376  000394                     	ds	6
  2377  00039A                     _I2cRxPacket:
  2378                           	opt stack 0
  2379  00039A                     	ds	6
  2380  0003A0                     _I2cTxPacket:
  2381                           	opt stack 0
  2382  0003A0                     	ds	5
  2383  0003A5                     _HttpGetDataLocal:
  2384                           	opt stack 0
  2385  0003A5                     	ds	5
  2386  0003AA                     _memoryPreamble:
  2387                           	opt stack 0
  2388  0003AA                     	ds	4
  2389  0003AE                     Terminal@Addr:
  2390                           	opt stack 0
  2391  0003AE                     	ds	4
  2392  0003B2                     Terminal@Len:
  2393                           	opt stack 0
  2394  0003B2                     	ds	4
  2395  0003B6                     _AlCfg:
  2396                           	opt stack 0
  2397  0003B6                     	ds	4
  2398  0003BA                     _RtcConfig:
  2399                           	opt stack 0
  2400  0003BA                     	ds	4
  2401  0003BE                     initGprsModem@modemCounter:
  2402                           	opt stack 0
  2403  0003BE                     	ds	2
  2404  0003C0                     _setupCallTicks:
  2405                           	opt stack 0
  2406  0003C0                     	ds	2
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           postinc0	equ	0xFEE
  2412                           wreg	equ	0xFE8
  2413                           postdec1	equ	0xFE5
  2414                           fsr1h	equ	0xFE2
  2415                           fsr1l	equ	0xFE1
  2416                           
  2417                           	psect	dataBANK3
  2418  0003C2                     __pdataBANK3:
  2419                           	opt stack 0
  2420  0003C2                     ModemEvtParser@F9114:
  2421                           	opt stack 0
  2422  0003C2                     	ds	5
  2423  0003C7                     ModemEvtParser@F9112:
  2424                           	opt stack 0
  2425  0003C7                     	ds	5
  2426  0003CC                     ModemEvtParser@F9110:
  2427                           	opt stack 0
  2428  0003CC                     	ds	4
  2429  0003D0                     triggerRelay@F9003:
  2430                           	opt stack 0
  2431  0003D0                     	ds	2
  2432  0003D2                     Term_MainSm@TermDelay:
  2433                           	opt stack 0
  2434  0003D2                     	ds	11
  2435  0003DD                     _ConnWait:
  2436                           	opt stack 0
  2437  0003DD                     	ds	11
  2438  0003E8                     SendSmsSm@SwTimer:
  2439                           	opt stack 0
  2440  0003E8                     	ds	11
  2441  0003F3                     CheckModem@Timeout:
  2442                           	opt stack 0
  2443  0003F3                     	ds	11
  2444                           tblptru	equ	0xFF8
  2445                           tblptrh	equ	0xFF7
  2446                           tblptrl	equ	0xFF6
  2447                           tablat	equ	0xFF5
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           postdec1	equ	0xFE5
  2451                           fsr1h	equ	0xFE2
  2452                           fsr1l	equ	0xFE1
  2453                           
  2454                           	psect	bssBANK4
  2455  000440                     __pbssBANK4:
  2456                           	opt stack 0
  2457  000440                     _UsbMasterPhoneNumber:
  2458                           	opt stack 0
  2459  000440                     	ds	15
  2460  00044F                     _cdc_notice:
  2461                           	opt stack 0
  2462  00044F                     	ds	10
  2463  000459                     _Rtcm_SystemDate:
  2464                           	opt stack 0
  2465  000459                     	ds	8
  2466  000461                     Term_MainSm@Data:
  2467                           	opt stack 0
  2468  000461                     	ds	50
  2469  000493                     _smsText:
  2470                           	opt stack 0
  2471  000493                     	ds	20
  2472  0004A7                     _PhoneNumber:
  2473                           	opt stack 0
  2474  0004A7                     	ds	20
  2475  0004BB                     _EepromBuffer:
  2476                           	opt stack 0
  2477  0004BB                     	ds	15
  2478  0004CA                     Terminal@SwTimer:
  2479                           	opt stack 0
  2480  0004CA                     	ds	11
  2481  0004D5                     I2cSlv_QueryI2cData@QueryTimer:
  2482                           	opt stack 0
  2483  0004D5                     	ds	11
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           postdec1	equ	0xFE5
  2491                           fsr1h	equ	0xFE2
  2492                           fsr1l	equ	0xFE1
  2493                           
  2494                           	psect	dataBANK4
  2495  0004E0                     __pdataBANK4:
  2496                           	opt stack 0
  2497  0004E0                     ModemEvtParser@F9116:
  2498                           	opt stack 0
  2499  0004E0                     	ds	10
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           postinc0	equ	0xFEE
  2505                           wreg	equ	0xFE8
  2506                           postdec1	equ	0xFE5
  2507                           fsr1h	equ	0xFE2
  2508                           fsr1l	equ	0xFE1
  2509                           
  2510                           	psect	bssBANK5
  2511  000500                     __pbssBANK5:
  2512                           	opt stack 0
  2513  000500                     _cdc_data_rx:
  2514                           	opt stack 0
  2515  000500                     	ds	64
  2516  000540                     Terminal@TermRxBuffer:
  2517                           	opt stack 0
  2518  000540                     	ds	50
  2519  000572                     _MessageText:
  2520                           	opt stack 0
  2521  000572                     	ds	50
  2522                           tblptru	equ	0xFF8
  2523                           tblptrh	equ	0xFF7
  2524                           tblptrl	equ	0xFF6
  2525                           tablat	equ	0xFF5
  2526                           postinc0	equ	0xFEE
  2527                           wreg	equ	0xFE8
  2528                           postdec1	equ	0xFE5
  2529                           fsr1h	equ	0xFE2
  2530                           fsr1l	equ	0xFE1
  2531                           
  2532                           	psect	dataBANK5
  2533  0005A4                     __pdataBANK5:
  2534                           	opt stack 0
  2535  0005A4                     _TaskTable:
  2536                           	opt stack 0
  2537  0005A4                     	ds	80
  2538                           tblptru	equ	0xFF8
  2539                           tblptrh	equ	0xFF7
  2540                           tblptrl	equ	0xFF6
  2541                           tablat	equ	0xFF5
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           postdec1	equ	0xFE5
  2545                           fsr1h	equ	0xFE2
  2546                           fsr1l	equ	0xFE1
  2547                           
  2548                           	psect	bssBANK6
  2549  000600                     __pbssBANK6:
  2550                           	opt stack 0
  2551  000600                     _OsAlarms:
  2552                           	opt stack 0
  2553  000600                     	ds	220
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           postinc0	equ	0xFEE
  2559                           wreg	equ	0xFE8
  2560                           postdec1	equ	0xFE5
  2561                           fsr1h	equ	0xFE2
  2562                           fsr1l	equ	0xFE1
  2563                           
  2564                           	psect	bssBANK7
  2565  000700                     __pbssBANK7:
  2566                           	opt stack 0
  2567  000700                     _Mdm_SmsRx:
  2568                           	opt stack 0
  2569  000700                     	ds	102
  2570  000766                     Terminal@Payload:
  2571                           	opt stack 0
  2572  000766                     	ds	80
  2573  0007B6                     _cdc_data_tx:
  2574                           	opt stack 0
  2575  0007B6                     	ds	64
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           postdec1	equ	0xFE5
  2583                           fsr1h	equ	0xFE2
  2584                           fsr1l	equ	0xFE1
  2585                           
  2586                           	psect	bssBANK8
  2587  000800                     __pbssBANK8:
  2588                           	opt stack 0
  2589  000800                     GsmGprsTerminal@UsbBuffer:
  2590                           	opt stack 0
  2591  000800                     	ds	200
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           postdec1	equ	0xFE5
  2599                           fsr1h	equ	0xFE2
  2600                           fsr1l	equ	0xFE1
  2601                           
  2602                           	psect	bssBANK9
  2603  000900                     __pbssBANK9:
  2604                           	opt stack 0
  2605  000900                     GsmGprsTerminal@UartBuffer:
  2606                           	opt stack 0
  2607  000900                     	ds	200
  2608                           tblptru	equ	0xFF8
  2609                           tblptrh	equ	0xFF7
  2610                           tblptrl	equ	0xFF6
  2611                           tablat	equ	0xFF5
  2612                           postinc0	equ	0xFEE
  2613                           wreg	equ	0xFE8
  2614                           postdec1	equ	0xFE5
  2615                           fsr1h	equ	0xFE2
  2616                           fsr1l	equ	0xFE1
  2617                           
  2618                           	psect	bssBIGRAMl
  2619  000AC8                     __pbssBIGRAMl:
  2620                           	opt stack 0
  2621  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2622                           	opt stack 0
  2623  000AC8                     	ds	400
  2624  000C58                     _RxBuffer:
  2625                           	opt stack 0
  2626  000C58                     	ds	400
  2627                           tblptru	equ	0xFF8
  2628                           tblptrh	equ	0xFF7
  2629                           tblptrl	equ	0xFF6
  2630                           tablat	equ	0xFF5
  2631                           postinc0	equ	0xFEE
  2632                           wreg	equ	0xFE8
  2633                           postdec1	equ	0xFE5
  2634                           fsr1h	equ	0xFE2
  2635                           fsr1l	equ	0xFE1
  2636                           
  2637                           	psect	cstackBANK10
  2638  000A00                     __pcstackBANK10:
  2639                           	opt stack 0
  2640  000A00                     Terminal@UsbRxBuffer:
  2641                           	opt stack 0
  2642                           
  2643                           ; 200 bytes @ 0x0
  2644  000A00                     	ds	200
  2645                           tblptru	equ	0xFF8
  2646                           tblptrh	equ	0xFF7
  2647                           tblptrl	equ	0xFF6
  2648                           tablat	equ	0xFF5
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           postdec1	equ	0xFE5
  2652                           fsr1h	equ	0xFE2
  2653                           fsr1l	equ	0xFE1
  2654                           
  2655                           	psect	cstackBANK4
  2656  0004EA                     __pcstackBANK4:
  2657                           	opt stack 0
  2658  0004EA                     ??_ScheduleTasks:
  2659  0004EA                     InitializeTasks@ActiveTaskIndex:
  2660                           	opt stack 0
  2661                           
  2662                           ; 1 bytes @ 0x0
  2663  0004EA                     	ds	4
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           postinc0	equ	0xFEE
  2669                           wreg	equ	0xFE8
  2670                           postdec1	equ	0xFE5
  2671                           fsr1h	equ	0xFE2
  2672                           fsr1l	equ	0xFE1
  2673                           
  2674                           	psect	cstackBANK3
  2675  0003FE                     __pcstackBANK3:
  2676                           	opt stack 0
  2677  0003FE                     ??_InitializeTasks:
  2678  0003FE                     ScheduleTasks@ActiveTaskIndex:
  2679                           	opt stack 0
  2680                           
  2681                           ; 1 bytes @ 0x0
  2682  0003FE                     	ds	2
  2683                           tblptru	equ	0xFF8
  2684                           tblptrh	equ	0xFF7
  2685                           tblptrl	equ	0xFF6
  2686                           tablat	equ	0xFF5
  2687                           postinc0	equ	0xFEE
  2688                           wreg	equ	0xFE8
  2689                           postdec1	equ	0xFE5
  2690                           fsr1h	equ	0xFE2
  2691                           fsr1l	equ	0xFE1
  2692                           
  2693                           	psect	cstackBANK2
  2694  000200                     __pcstackBANK2:
  2695                           	opt stack 0
  2696  000200                     Terminal@UsbTxBuffer:
  2697                           	opt stack 0
  2698                           
  2699                           ; 200 bytes @ 0x0
  2700  000200                     	ds	200
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           postinc0	equ	0xFEE
  2706                           wreg	equ	0xFE8
  2707                           postdec1	equ	0xFE5
  2708                           fsr1h	equ	0xFE2
  2709                           fsr1l	equ	0xFE1
  2710                           
  2711                           	psect	cstackBANK1
  2712  000100                     __pcstackBANK1:
  2713                           	opt stack 0
  2714  000100                     initEeprom@addressToRead:
  2715                           	opt stack 0
  2716  000100                     isNumberInMemory@phoneNumber:
  2717                           	opt stack 0
  2718  000100                     isMasterNumber@phoneNumber:
  2719                           	opt stack 0
  2720  000100                     findEmptySpot@readBuffer:
  2721                           	opt stack 0
  2722  000100                     SendSmsSm@UartMessage:
  2723                           	opt stack 0
  2724  000100                     InitGprsNetwork@UartMessage:
  2725                           	opt stack 0
  2726  000100                     Terminal@TermTxBuffer:
  2727                           	opt stack 0
  2728  000100                     HttpGetMethod@UartMessage:
  2729                           	opt stack 0
  2730                           
  2731                           ; 200 bytes @ 0x0
  2732  000100                     	ds	1
  2733  000101                     initEeprom@memoryOpResult:
  2734                           	opt stack 0
  2735                           
  2736                           ; 1 bytes @ 0x1
  2737  000101                     	ds	1
  2738  000102                     initEeprom@isInitialized:
  2739                           	opt stack 0
  2740  000102                     isNumberInMemory@readBuffer:
  2741                           	opt stack 0
  2742  000102                     isMasterNumber@readBuffer:
  2743                           	opt stack 0
  2744                           
  2745                           ; 13 bytes @ 0x2
  2746  000102                     	ds	1
  2747  000103                     initFsm@isInitialized:
  2748                           	opt stack 0
  2749                           
  2750                           ; 1 bytes @ 0x3
  2751  000103                     	ds	10
  2752  00010D                     findEmptySpot@memoryOpResult:
  2753                           	opt stack 0
  2754                           
  2755                           ; 1 bytes @ 0xD
  2756  00010D                     	ds	1
  2757  00010E                     findEmptySpot@positionInMemory:
  2758                           	opt stack 0
  2759                           
  2760                           ; 1 bytes @ 0xE
  2761  00010E                     	ds	1
  2762  00010F                     isNumberInMemory@memoryOpResult:
  2763                           	opt stack 0
  2764  00010F                     isMasterNumber@memoryOpResult:
  2765                           	opt stack 0
  2766                           
  2767                           ; 1 bytes @ 0xF
  2768  00010F                     	ds	1
  2769  000110                     isNumberInMemory@positionInMemory:
  2770                           	opt stack 0
  2771                           
  2772                           ; 1 bytes @ 0x10
  2773  000110                     	ds	1
  2774  000111                     addCmdFsm@receivedNumber:
  2775                           	opt stack 0
  2776  000111                     delCmdFsm@receivedNumber:
  2777                           	opt stack 0
  2778  000111                     triggerCmdFsm@receivedNumber:
  2779                           	opt stack 0
  2780                           
  2781                           ; 2 bytes @ 0x11
  2782  000111                     	ds	2
  2783  000113                     triggerCmdFsm@isComplete:
  2784                           	opt stack 0
  2785  000113                     addCmdFsm@smsText:
  2786                           	opt stack 0
  2787  000113                     delCmdFsm@smsText:
  2788                           	opt stack 0
  2789                           
  2790                           ; 2 bytes @ 0x13
  2791  000113                     	ds	1
  2792  000114                     triggerCmdFsm@numberInMemory:
  2793                           	opt stack 0
  2794                           
  2795                           ; 1 bytes @ 0x14
  2796  000114                     	ds	1
  2797  000115                     addCmdFsm@isComplete:
  2798                           	opt stack 0
  2799  000115                     delCmdFsm@emptyNumber:
  2800                           	opt stack 0
  2801                           
  2802                           ; 13 bytes @ 0x15
  2803  000115                     	ds	1
  2804  000116                     addCmdFsm@masterOpResult:
  2805                           	opt stack 0
  2806                           
  2807                           ; 1 bytes @ 0x16
  2808  000116                     	ds	1
  2809  000117                     addCmdFsm@numberInMemory:
  2810                           	opt stack 0
  2811                           
  2812                           ; 1 bytes @ 0x17
  2813  000117                     	ds	11
  2814  000122                     delCmdFsm@isComplete:
  2815                           	opt stack 0
  2816                           
  2817                           ; 1 bytes @ 0x22
  2818  000122                     	ds	1
  2819  000123                     delCmdFsm@numberInMemory:
  2820                           	opt stack 0
  2821                           
  2822                           ; 1 bytes @ 0x23
  2823  000123                     	ds	15
  2824  000132                     InitGprsNetwork@Index:
  2825                           	opt stack 0
  2826  000132                     Term_MainSm@FwkMajorStr:
  2827                           	opt stack 0
  2828                           
  2829                           ; 4 bytes @ 0x32
  2830  000132                     	ds	4
  2831  000136                     Term_MainSm@FwkMinorStr:
  2832                           	opt stack 0
  2833                           
  2834                           ; 4 bytes @ 0x36
  2835  000136                     	ds	4
  2836  00013A                     Term_MainSm@FwkBuildStr:
  2837                           	opt stack 0
  2838                           
  2839                           ; 4 bytes @ 0x3A
  2840  00013A                     	ds	142
  2841  0001C8                     HttpGetMethod@Index:
  2842                           	opt stack 0
  2843                           
  2844                           ; 1 bytes @ 0xC8
  2845  0001C8                     	ds	1
  2846                           tblptru	equ	0xFF8
  2847                           tblptrh	equ	0xFF7
  2848                           tblptrl	equ	0xFF6
  2849                           tablat	equ	0xFF5
  2850                           postinc0	equ	0xFEE
  2851                           wreg	equ	0xFE8
  2852                           postdec1	equ	0xFE5
  2853                           fsr1h	equ	0xFE2
  2854                           fsr1l	equ	0xFE1
  2855                           
  2856                           	psect	cstackBANK0
  2857  000060                     __pcstackBANK0:
  2858                           	opt stack 0
  2859  000060                     
  2860                           ; 1 bytes @ 0x0
  2861  000060                     	ds	8
  2862  000068                     ??_LowPriorityIsr:
  2863                           
  2864                           ; 1 bytes @ 0x8
  2865  000068                     	ds	21
  2866  00007D                     ??_isdigit:
  2867  00007D                     ??_isspace:
  2868  00007D                     ??_isupper:
  2869  00007D                     ??_Rtcc_GetRtccValue:
  2870  00007D                     ??_UartTxBufferStatus:
  2871  00007D                     ??_USBStdGetDscHandler:
  2872  00007D                     ??_USBStdGetStatusHandler:
  2873  00007D                     ?_GetLastInteractionNumber:
  2874                           	opt stack 0
  2875  00007D                     ?_USBTransferOnePacket:
  2876                           	opt stack 0
  2877  00007D                     ?_strlen:
  2878                           	opt stack 0
  2879  00007D                     ?_sprintf:
  2880                           	opt stack 0
  2881  00007D                     ?_initPreamble:
  2882                           	opt stack 0
  2883  00007D                     ?___wmul:
  2884                           	opt stack 0
  2885  00007D                     ?___awdiv:
  2886                           	opt stack 0
  2887  00007D                     ?___awmod:
  2888                           	opt stack 0
  2889  00007D                     ?___lwmod:
  2890                           	opt stack 0
  2891  00007D                     ?_GetOsTickCounter:
  2892                           	opt stack 0
  2893  00007D                     ?___lmul:
  2894                           	opt stack 0
  2895  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2896                           	opt stack 0
  2897  00007D                     SetAckStatus@AckSts:
  2898                           	opt stack 0
  2899  00007D                     WriteByte@Byte:
  2900                           	opt stack 0
  2901  00007D                     ReadByte@Byte:
  2902                           	opt stack 0
  2903  00007D                     Mcu_SetWdgSts@WdgSts:
  2904                           	opt stack 0
  2905  00007D                     RtccIrqInit@Priority:
  2906                           	opt stack 0
  2907  00007D                     Rtcc_SetRtcStatus@Status:
  2908                           	opt stack 0
  2909  00007D                     TmrBInit@Prescaler:
  2910                           	opt stack 0
  2911  00007D                     Tmr_TmrBIrqSet@Priority:
  2912                           	opt stack 0
  2913  00007D                     Tmr_StartTmr@TmrNumb:
  2914                           	opt stack 0
  2915  00007D                     UartWriteByte@ByteToWrite:
  2916                           	opt stack 0
  2917  00007D                     USBTransferOnePacket@dir:
  2918                           	opt stack 0
  2919  00007D                     USBConfigureEndpoint@direction:
  2920                           	opt stack 0
  2921  00007D                     USBCtrlTrfTxService@byteToSend:
  2922                           	opt stack 0
  2923  00007D                     USBCtrlTrfRxService@i:
  2924                           	opt stack 0
  2925  00007D                     Led_SetLedStatus@LedSts:
  2926                           	opt stack 0
  2927  00007D                     toupper@c:
  2928                           	opt stack 0
  2929  00007D                     tolower@c:
  2930                           	opt stack 0
  2931  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2932                           	opt stack 0
  2933  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2934                           	opt stack 0
  2935  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2936                           	opt stack 0
  2937  00007D                     Uart_ClearRxBuffer@Index:
  2938                           	opt stack 0
  2939  00007D                     GenerateEvt@Event:
  2940                           	opt stack 0
  2941  00007D                     ReceiveEvt@Event:
  2942                           	opt stack 0
  2943  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2944                           	opt stack 0
  2945  00007D                     StringCompare@String1:
  2946                           	opt stack 0
  2947  00007D                     ClearBuffer@Buffer:
  2948                           	opt stack 0
  2949  00007D                     isNumberValid@phoneNumber:
  2950                           	opt stack 0
  2951  00007D                     sprintf@sp:
  2952                           	opt stack 0
  2953  00007D                     ___wmul@multiplier:
  2954                           	opt stack 0
  2955  00007D                     ___awdiv@dividend:
  2956                           	opt stack 0
  2957  00007D                     ___awmod@dividend:
  2958                           	opt stack 0
  2959  00007D                     ___lwmod@dividend:
  2960                           	opt stack 0
  2961  00007D                     memcpy@d1:
  2962                           	opt stack 0
  2963  00007D                     memset@p1:
  2964                           	opt stack 0
  2965  00007D                     strcat@to:
  2966                           	opt stack 0
  2967  00007D                     strcpy@to:
  2968                           	opt stack 0
  2969  00007D                     strlen@s:
  2970                           	opt stack 0
  2971  00007D                     ___lmul@multiplier:
  2972                           	opt stack 0
  2973                           
  2974                           ; 4 bytes @ 0x1D
  2975  00007D                     	ds	1
  2976  00007E                     ??_USBConfigureEndpoint:
  2977  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2978                           	opt stack 0
  2979  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2980                           	opt stack 0
  2981  00007E                     TmrBInit@Postscaler:
  2982                           	opt stack 0
  2983  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2984                           	opt stack 0
  2985  00007E                     UartWriteByte@Module:
  2986                           	opt stack 0
  2987  00007E                     UartTxBufferStatus@Module:
  2988                           	opt stack 0
  2989  00007E                     USBCtrlTrfRxService@byteToRead:
  2990                           	opt stack 0
  2991  00007E                     USBCtrlTrfInHandler@lastDTS:
  2992                           	opt stack 0
  2993  00007E                     Led_SetLedStatus@Led:
  2994                           	opt stack 0
  2995  00007E                     _isdigit$6405:
  2996                           	opt stack 0
  2997  00007E                     _isspace$6674:
  2998                           	opt stack 0
  2999  00007E                     _isupper$6677:
  3000                           	opt stack 0
  3001  00007E                     I2c_WriteData@WritePacket:
  3002                           	opt stack 0
  3003  00007E                     Rtcc_RtcConfig@RtcConfig:
  3004                           	opt stack 0
  3005  00007E                     USBTransferOnePacket@data:
  3006                           	opt stack 0
  3007  00007E                     USBStdGetStatusHandler@p:
  3008                           	opt stack 0
  3009                           
  3010                           ; 2 bytes @ 0x1E
  3011  00007E                     	ds	1
  3012  00007F                     ??_strlen:
  3013  00007F                     ??_Rtcc_AlarmConfig:
  3014  00007F                     ??_TmrBInit:
  3015  00007F                     Irq_InitIntController@IntPriorityEn:
  3016                           	opt stack 0
  3017  00007F                     Rtcc_GetRtccValue@RetValue:
  3018                           	opt stack 0
  3019  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3020                           	opt stack 0
  3021  00007F                     UartTxBufferStatus@TxBufferStatus:
  3022                           	opt stack 0
  3023  00007F                     GenerateEvt@EventStatus:
  3024                           	opt stack 0
  3025  00007F                     isdigit@c:
  3026                           	opt stack 0
  3027  00007F                     isspace@c:
  3028                           	opt stack 0
  3029  00007F                     isupper@c:
  3030                           	opt stack 0
  3031  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3032                           	opt stack 0
  3033  00007F                     StringCompare@String2:
  3034                           	opt stack 0
  3035  00007F                     ClearBuffer@Len:
  3036                           	opt stack 0
  3037  00007F                     sprintf@f:
  3038                           	opt stack 0
  3039  00007F                     ___wmul@multiplicand:
  3040                           	opt stack 0
  3041  00007F                     ___awdiv@divisor:
  3042                           	opt stack 0
  3043  00007F                     ___awmod@divisor:
  3044                           	opt stack 0
  3045  00007F                     ___lwmod@divisor:
  3046                           	opt stack 0
  3047  00007F                     memcpy@s1:
  3048                           	opt stack 0
  3049  00007F                     memset@c:
  3050                           	opt stack 0
  3051  00007F                     strcat@from:
  3052                           	opt stack 0
  3053  00007F                     strcpy@from:
  3054                           	opt stack 0
  3055                           
  3056                           ; 2 bytes @ 0x1F
  3057  00007F                     	ds	1
  3058  000080                     ??_isalpha:
  3059  000080                     ??_isxdigit:
  3060  000080                     ??_I2c_WriteData:
  3061  000080                     ??_Rtcc_RtcConfig:
  3062  000080                     Rtcc_GetRtccValue@RegValue:
  3063                           	opt stack 0
  3064  000080                     TmrBInit@TmrNumb:
  3065                           	opt stack 0
  3066  000080                     ReceiveEvt@EventStatus:
  3067                           	opt stack 0
  3068  000080                     USBTransferOnePacket@len:
  3069                           	opt stack 0
  3070  000080                     isNumberValid@isNumberOk:
  3071                           	opt stack 0
  3072  000080                     I2c_ReadData@ReadPacket:
  3073                           	opt stack 0
  3074  000080                     Uart_WriteConstString@ConstStringToWrite:
  3075                           	opt stack 0
  3076  000080                     Uart_WriteString@StringToWrite:
  3077                           	opt stack 0
  3078  000080                     Uart_WriteStringLen@StringToWrite:
  3079                           	opt stack 0
  3080  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3081                           	opt stack 0
  3082  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3083                           	opt stack 0
  3084                           
  3085                           ; 2 bytes @ 0x20
  3086  000080                     	ds	1
  3087  000081                     ?_GetElapsedTime:
  3088                           	opt stack 0
  3089  000081                     ?_Rtcm_GetRtccDate:
  3090                           	opt stack 0
  3091  000081                     Mdm_IsSmsReceived@Ret:
  3092                           	opt stack 0
  3093  000081                     Mdm_IsRinging@Ret:
  3094                           	opt stack 0
  3095  000081                     I2cSlv_I2cReadMsgSts@Result:
  3096                           	opt stack 0
  3097  000081                     USBTransferOnePacket@ep:
  3098                           	opt stack 0
  3099  000081                     Led_SetLedBlinkTime@Led:
  3100                           	opt stack 0
  3101  000081                     isNumberValid@i:
  3102                           	opt stack 0
  3103  000081                     ___awdiv@counter:
  3104                           	opt stack 0
  3105  000081                     ___awmod@counter:
  3106                           	opt stack 0
  3107  000081                     ___lwmod@counter:
  3108                           	opt stack 0
  3109  000081                     _isalpha$6671:
  3110                           	opt stack 0
  3111  000081                     _isxdigit$6681:
  3112                           	opt stack 0
  3113  000081                     OsTmr_StartTimer@Timer:
  3114                           	opt stack 0
  3115  000081                     StringCompare@Len:
  3116                           	opt stack 0
  3117  000081                     ClearBuffer@Index:
  3118                           	opt stack 0
  3119  000081                     ___wmul@product:
  3120                           	opt stack 0
  3121  000081                     memcpy@n:
  3122                           	opt stack 0
  3123  000081                     memset@n:
  3124                           	opt stack 0
  3125  000081                     strcat@cp:
  3126                           	opt stack 0
  3127  000081                     strcpy@cp:
  3128                           	opt stack 0
  3129  000081                     strlen@cp:
  3130                           	opt stack 0
  3131  000081                     GetElapsedTime@StartTime:
  3132                           	opt stack 0
  3133  000081                     ___lmul@multiplicand:
  3134                           	opt stack 0
  3135                           
  3136                           ; 4 bytes @ 0x21
  3137  000081                     	ds	1
  3138  000082                     ??_I2c_ReadData:
  3139  000082                     Uart_WriteConstString@Module:
  3140                           	opt stack 0
  3141  000082                     Uart_WriteString@Module:
  3142                           	opt stack 0
  3143  000082                     Uart_WriteStringLen@Len:
  3144                           	opt stack 0
  3145  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3146                           	opt stack 0
  3147  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3148                           	opt stack 0
  3149  000082                     USBConfigureEndpoint@EPNum:
  3150                           	opt stack 0
  3151  000082                     ___awdiv@sign:
  3152                           	opt stack 0
  3153  000082                     ___awmod@sign:
  3154                           	opt stack 0
  3155  000082                     isalpha@c:
  3156                           	opt stack 0
  3157  000082                     isxdigit@c:
  3158                           	opt stack 0
  3159  000082                     USBTransferOnePacket@handle:
  3160                           	opt stack 0
  3161                           
  3162                           ; 2 bytes @ 0x22
  3163  000082                     	ds	1
  3164  000083                     ?_GetCallerNumber:
  3165                           	opt stack 0
  3166  000083                     ?_atoi:
  3167                           	opt stack 0
  3168  000083                     ?_xtoi:
  3169                           	opt stack 0
  3170  000083                     ?___lwdiv:
  3171                           	opt stack 0
  3172  000083                     Uart_WriteStringLen@Index:
  3173                           	opt stack 0
  3174  000083                     Mdm_SetSmsFormat@Index:
  3175                           	opt stack 0
  3176  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3177                           	opt stack 0
  3178  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3179                           	opt stack 0
  3180  000083                     getSetupCall@isCalledReceived:
  3181                           	opt stack 0
  3182  000083                     sprintf@flag:
  3183                           	opt stack 0
  3184  000083                     memcpy@tmp:
  3185                           	opt stack 0
  3186  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3187                           	opt stack 0
  3188  000083                     USBConfigureEndpoint@handle:
  3189                           	opt stack 0
  3190  000083                     putUSBUSART@data:
  3191                           	opt stack 0
  3192  000083                     atoi@s:
  3193                           	opt stack 0
  3194  000083                     ___awdiv@quotient:
  3195                           	opt stack 0
  3196  000083                     ___lwdiv@dividend:
  3197                           	opt stack 0
  3198  000083                     memset@p:
  3199                           	opt stack 0
  3200  000083                     xtoi@s:
  3201                           	opt stack 0
  3202  000083                     OsTmr_StartTimer@Timeout:
  3203                           	opt stack 0
  3204                           
  3205                           ; 4 bytes @ 0x23
  3206  000083                     	ds	1
  3207  000084                     Uart_WriteStringLen@Module:
  3208                           	opt stack 0
  3209  000084                     I2cSlv_SendI2cMsg@TxSts:
  3210                           	opt stack 0
  3211  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3212                           	opt stack 0
  3213  000084                     CDCTxService@i:
  3214                           	opt stack 0
  3215  000084                     getsUSBUSART@buffer:
  3216                           	opt stack 0
  3217  000084                     sprintf@ap:
  3218                           	opt stack 0
  3219  000084                     memcpy@d:
  3220                           	opt stack 0
  3221  000084                     Mdm_SetSmsFormat@UartMessage:
  3222                           	opt stack 0
  3223                           
  3224                           ; 20 bytes @ 0x24
  3225  000084                     	ds	1
  3226  000085                     ??_atoi:
  3227  000085                     ??_xtoi:
  3228  000085                     ??_GetElapsedTime:
  3229  000085                     Rtcc_SetRtccValue@Value:
  3230                           	opt stack 0
  3231  000085                     USBDeviceInit@i:
  3232                           	opt stack 0
  3233  000085                     USBEnableEndpoint@options:
  3234                           	opt stack 0
  3235  000085                     putUSBUSART@length:
  3236                           	opt stack 0
  3237  000085                     CDCTxService@byte_to_send:
  3238                           	opt stack 0
  3239  000085                     Eeprom_Reset@SlaveAddress:
  3240                           	opt stack 0
  3241  000085                     StringCompare@Result:
  3242                           	opt stack 0
  3243  000085                     triggerRelay@res:
  3244                           	opt stack 0
  3245  000085                     StringCopy@SourceStr:
  3246                           	opt stack 0
  3247  000085                     ___lwdiv@divisor:
  3248                           	opt stack 0
  3249  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3250                           	opt stack 0
  3251  000085                     ___lmul@product:
  3252                           	opt stack 0
  3253                           
  3254                           ; 4 bytes @ 0x25
  3255  000085                     	ds	1
  3256  000086                     ??_Rtcc_SetRtccValue:
  3257  000086                     getsUSBUSART@len:
  3258                           	opt stack 0
  3259  000086                     triggerRelay@isRelayOn:
  3260                           	opt stack 0
  3261  000086                     sprintf@c:
  3262                           	opt stack 0
  3263  000086                     USBEnableEndpoint@p:
  3264                           	opt stack 0
  3265  000086                     StringCompare@Index:
  3266                           	opt stack 0
  3267  000086                     memcpy@s:
  3268                           	opt stack 0
  3269                           
  3270                           ; 2 bytes @ 0x26
  3271  000086                     	ds	1
  3272  000087                     atoi@sign:
  3273                           	opt stack 0
  3274  000087                     ___lwdiv@counter:
  3275                           	opt stack 0
  3276  000087                     xtoi@sign:
  3277                           	opt stack 0
  3278  000087                     StringCopy@DestStr:
  3279                           	opt stack 0
  3280  000087                     triggerRelay@txBuffer:
  3281                           	opt stack 0
  3282  000087                     sprintf@cp:
  3283                           	opt stack 0
  3284                           
  3285                           ; 2 bytes @ 0x27
  3286  000087                     	ds	1
  3287  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3288                           	opt stack 0
  3289  000088                     USBEnableEndpoint@ep:
  3290                           	opt stack 0
  3291  000088                     atoi@a:
  3292                           	opt stack 0
  3293  000088                     ___lwdiv@quotient:
  3294                           	opt stack 0
  3295  000088                     xtoi@val:
  3296                           	opt stack 0
  3297  000088                     parseCommand@addNumberCmd:
  3298                           	opt stack 0
  3299                           
  3300                           ; 4 bytes @ 0x28
  3301  000088                     	ds	1
  3302  000089                     ??_Rtcm_GetRtccDate:
  3303  000089                     ?_strtol:
  3304                           	opt stack 0
  3305  000089                     ?___lldiv:
  3306                           	opt stack 0
  3307  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3308                           	opt stack 0
  3309  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3310                           	opt stack 0
  3311  000089                     StringCopy@Len:
  3312                           	opt stack 0
  3313  000089                     strtol@s:
  3314                           	opt stack 0
  3315  000089                     ___lldiv@dividend:
  3316                           	opt stack 0
  3317  000089                     Rtcm_SetRtccDate@Date:
  3318                           	opt stack 0
  3319                           
  3320                           ; 8 bytes @ 0x29
  3321  000089                     	ds	1
  3322  00008A                     xtoi@c:
  3323                           	opt stack 0
  3324  00008A                     LedBlinkStateMachine@LedBlink:
  3325                           	opt stack 0
  3326  00008A                     LedPulseStateMachine@LedPulse:
  3327                           	opt stack 0
  3328  00008A                     secondsAppTimer@counter:
  3329                           	opt stack 0
  3330  00008A                     utoa@buf:
  3331                           	opt stack 0
  3332  00008A                     Rtcm_GetRtccDate@LocalDate:
  3333                           	opt stack 0
  3334                           
  3335                           ; 8 bytes @ 0x2A
  3336  00008A                     	ds	1
  3337  00008B                     ??_StringCopy:
  3338  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3339                           	opt stack 0
  3340  00008B                     strtol@endptr:
  3341                           	opt stack 0
  3342                           
  3343                           ; 2 bytes @ 0x2B
  3344  00008B                     	ds	1
  3345  00008C                     LedPulseStateMachine@Led:
  3346                           	opt stack 0
  3347  00008C                     secondsAppTimer@isCyclic:
  3348                           	opt stack 0
  3349  00008C                     utoa@val:
  3350                           	opt stack 0
  3351  00008C                     parseCommand@deleteNumberCmd:
  3352                           	opt stack 0
  3353                           
  3354                           ; 4 bytes @ 0x2C
  3355  00008C                     	ds	1
  3356  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3357                           	opt stack 0
  3358  00008D                     StringCopy@Index:
  3359                           	opt stack 0
  3360  00008D                     strtol@base:
  3361                           	opt stack 0
  3362  00008D                     GetElapsedTime@TimeValue:
  3363                           	opt stack 0
  3364  00008D                     ___lldiv@divisor:
  3365                           	opt stack 0
  3366                           
  3367                           ; 4 bytes @ 0x2D
  3368  00008D                     	ds	1
  3369  00008E                     utoa@base:
  3370                           	opt stack 0
  3371                           
  3372                           ; 2 bytes @ 0x2E
  3373  00008E                     	ds	1
  3374  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3375  00008F                     ??_strtol:
  3376  00008F                     secondsAppTimer@seconds:
  3377                           	opt stack 0
  3378  00008F                     Mdm_GetSmsData@MessageText:
  3379                           	opt stack 0
  3380  00008F                     Eeprom_Write@WriteBuffer:
  3381                           	opt stack 0
  3382  00008F                     LedStateMachine@LedSts:
  3383                           	opt stack 0
  3384  00008F                     ModemEvtParser@CallReadyString:
  3385                           	opt stack 0
  3386                           
  3387                           ; 10 bytes @ 0x2F
  3388  00008F                     	ds	1
  3389  000090                     secondsAppTimer@isExpired:
  3390                           	opt stack 0
  3391  000090                     utoa@v:
  3392                           	opt stack 0
  3393  000090                     parseCommand@resetCmd:
  3394                           	opt stack 0
  3395                           
  3396                           ; 4 bytes @ 0x30
  3397  000090                     	ds	1
  3398  000091                     ??_USBStdFeatureReqHandler:
  3399  000091                     Mdm_GetSmsData@GetSmsStatus:
  3400                           	opt stack 0
  3401  000091                     USBStdSetCfgHandler@i:
  3402                           	opt stack 0
  3403  000091                     Eeprom_Write@DataLength:
  3404                           	opt stack 0
  3405  000091                     LedStateMachine@LedOut:
  3406                           	opt stack 0
  3407  000091                     secondsAppTimer@destinationTicks:
  3408                           	opt stack 0
  3409  000091                     GetElapsedTime@CurrentTimestamp:
  3410                           	opt stack 0
  3411  000091                     ___lldiv@quotient:
  3412                           	opt stack 0
  3413                           
  3414                           ; 4 bytes @ 0x31
  3415  000091                     	ds	1
  3416  000092                     Eeprom_Write@WriteSts:
  3417                           	opt stack 0
  3418  000092                     utoa@c:
  3419                           	opt stack 0
  3420  000092                     USBStdFeatureReqHandler@pUEP:
  3421                           	opt stack 0
  3422                           
  3423                           ; 2 bytes @ 0x32
  3424  000092                     	ds	1
  3425  000093                     Eeprom_Write@MemoryAddress:
  3426                           	opt stack 0
  3427  000093                     waitSetupCall@isCallArrived:
  3428                           	opt stack 0
  3429  000093                     strtol@sign:
  3430                           	opt stack 0
  3431  000093                     LedStateMachine@LedBlink:
  3432                           	opt stack 0
  3433  000093                     itoa@buf:
  3434                           	opt stack 0
  3435                           
  3436                           ; 2 bytes @ 0x33
  3437  000093                     	ds	1
  3438  000094                     USBStdFeatureReqHandler@current_ep_data:
  3439                           	opt stack 0
  3440  000094                     Eeprom_Write@SlaveAddress:
  3441                           	opt stack 0
  3442  000094                     parseCommand@state:
  3443                           	opt stack 0
  3444  000094                     strtol@a:
  3445                           	opt stack 0
  3446                           
  3447                           ; 4 bytes @ 0x34
  3448  000094                     	ds	1
  3449  000095                     Eeprom_Write@CommandLength:
  3450                           	opt stack 0
  3451  000095                     detectCmd@currentState:
  3452                           	opt stack 0
  3453  000095                     ___lldiv@counter:
  3454                           	opt stack 0
  3455  000095                     OsTmr_GetTimerStatus@Timer:
  3456                           	opt stack 0
  3457  000095                     USBStdFeatureReqHandler@p:
  3458                           	opt stack 0
  3459  000095                     LedStateMachine@LedPulse:
  3460                           	opt stack 0
  3461  000095                     itoa@val:
  3462                           	opt stack 0
  3463                           
  3464                           ; 2 bytes @ 0x35
  3465  000095                     	ds	1
  3466  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3467                           	opt stack 0
  3468  000096                     SetUartBaudRate@UartConfig:
  3469                           	opt stack 0
  3470  000096                     saveNumberInMemory@phoneNumber:
  3471                           	opt stack 0
  3472  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3473                           	opt stack 0
  3474                           
  3475                           ; 4 bytes @ 0x36
  3476  000096                     	ds	1
  3477  000097                     ??_USBCtrlEPService:
  3478  000097                     itoa@base:
  3479                           	opt stack 0
  3480                           
  3481                           ; 2 bytes @ 0x37
  3482  000097                     	ds	1
  3483  000098                     Tmr_TmrBPrSet@Prescaler:
  3484                           	opt stack 0
  3485  000098                     Mdm_SetSmsFormat@TextFormat:
  3486                           	opt stack 0
  3487  000098                     USBDeviceTasks@i:
  3488                           	opt stack 0
  3489  000098                     LedStateMachine@LedOutSts:
  3490                           	opt stack 0
  3491  000098                     saveNumberInMemory@address:
  3492                           	opt stack 0
  3493  000098                     strtol@c:
  3494                           	opt stack 0
  3495                           
  3496                           ; 1 bytes @ 0x38
  3497  000098                     	ds	1
  3498  000099                     Tmr_TmrBPrSet@Postscaler:
  3499                           	opt stack 0
  3500  000099                     SetUartBaudRate@Module:
  3501                           	opt stack 0
  3502  000099                     LedStateMachine@Led:
  3503                           	opt stack 0
  3504  000099                     initGprsModem@isInitialized:
  3505                           	opt stack 0
  3506  000099                     itoa@cp:
  3507                           	opt stack 0
  3508  000099                     ModemEvtParser@ClipString:
  3509                           	opt stack 0
  3510                           
  3511                           ; 5 bytes @ 0x39
  3512  000099                     	ds	1
  3513  00009A                     ??_Led_MainTask:
  3514  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3515                           	opt stack 0
  3516  00009A                     SetUartBaudRate@BaudRateRegister:
  3517                           	opt stack 0
  3518  00009A                     SetBaudRate@McuClockHz:
  3519                           	opt stack 0
  3520                           
  3521                           ; 4 bytes @ 0x3A
  3522  00009A                     	ds	1
  3523  00009B                     ??_SendSmsSm:
  3524  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3525                           	opt stack 0
  3526  00009B                     OsTmr_Wait@WaitTimer:
  3527                           	opt stack 0
  3528  00009B                     InitGprsNetwork@Apn:
  3529                           	opt stack 0
  3530  00009B                     HttpGetMethod@GetData:
  3531                           	opt stack 0
  3532                           
  3533                           ; 2 bytes @ 0x3B
  3534  00009B                     	ds	1
  3535  00009C                     SetUartBaudRate@DivisionFactor:
  3536                           	opt stack 0
  3537  00009C                     Tmr_TmrBPrSet@Divisor:
  3538                           	opt stack 0
  3539                           
  3540                           ; 4 bytes @ 0x3C
  3541  00009C                     	ds	1
  3542  00009D                     ??_HttpGetMethod:
  3543  00009D                     InitGprsNetwork@ApnLen:
  3544                           	opt stack 0
  3545  00009D                     Uart_InitUartModule@UartConfig:
  3546                           	opt stack 0
  3547  00009D                     OsTmr_Wait@DelayMs:
  3548                           	opt stack 0
  3549                           
  3550                           ; 4 bytes @ 0x3D
  3551  00009D                     	ds	1
  3552  00009E                     ??_SetBaudRate:
  3553  00009E                     ??_InitGprsNetwork:
  3554  00009E                     ModemEvtParser@SmsString:
  3555                           	opt stack 0
  3556                           
  3557                           ; 5 bytes @ 0x3E
  3558  00009E                     	ds	1
  3559  00009F                     ??_Uart_InitUartModule:
  3560                           
  3561                           ; 1 bytes @ 0x3F
  3562  00009F                     	ds	1
  3563  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3564                           	opt stack 0
  3565                           
  3566                           ; 2 bytes @ 0x40
  3567  0000A0                     	ds	1
  3568  0000A1                     Uart_InitUartModule@Module:
  3569                           	opt stack 0
  3570  0000A1                     OsTmr_Wait@Ret:
  3571                           	opt stack 0
  3572                           
  3573                           ; 1 bytes @ 0x41
  3574  0000A1                     	ds	1
  3575  0000A2                     ??_Terminal:
  3576  0000A2                     I2c_InitI2cModule@I2cConfig:
  3577                           	opt stack 0
  3578  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3579                           	opt stack 0
  3580                           
  3581                           ; 2 bytes @ 0x42
  3582  0000A2                     	ds	1
  3583  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3584                           	opt stack 0
  3585  0000A3                     ModemEvtParser@RingString:
  3586                           	opt stack 0
  3587                           
  3588                           ; 4 bytes @ 0x43
  3589  0000A3                     	ds	1
  3590  0000A4                     ??_I2c_InitI2cModule:
  3591  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3592                           	opt stack 0
  3593  0000A4                     Terminal@i:
  3594                           	opt stack 0
  3595  0000A4                     InitSchedTimer@TmrBConfig:
  3596                           	opt stack 0
  3597                           
  3598                           ; 7 bytes @ 0x44
  3599  0000A4                     	ds	1
  3600  0000A5                     Terminal@ReceivedBytes:
  3601                           	opt stack 0
  3602  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3603                           	opt stack 0
  3604                           
  3605                           ; 2 bytes @ 0x45
  3606  0000A5                     	ds	1
  3607  0000A6                     Terminal@Index:
  3608                           	opt stack 0
  3609                           
  3610                           ; 1 bytes @ 0x46
  3611  0000A6                     	ds	1
  3612  0000A7                     ModemEvtParser@Match:
  3613                           	opt stack 0
  3614  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3615                           	opt stack 0
  3616                           
  3617                           ; 1 bytes @ 0x47
  3618  0000A7                     	ds	1
  3619  0000A8                     ModemEvtParser@CompareIdx:
  3620                           	opt stack 0
  3621  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3622                           	opt stack 0
  3623                           
  3624                           ; 1 bytes @ 0x48
  3625  0000A8                     	ds	1
  3626  0000A9                     Eeprom_Read@ReadBuffer:
  3627                           	opt stack 0
  3628                           
  3629                           ; 2 bytes @ 0x49
  3630  0000A9                     	ds	2
  3631  0000AB                     Eeprom_Read@DataLength:
  3632                           	opt stack 0
  3633                           
  3634                           ; 1 bytes @ 0x4B
  3635  0000AB                     	ds	1
  3636  0000AC                     Eeprom_Read@MemoryAddress:
  3637                           	opt stack 0
  3638                           
  3639                           ; 1 bytes @ 0x4C
  3640  0000AC                     	ds	1
  3641  0000AD                     Eeprom_Read@SlaveAddress:
  3642                           	opt stack 0
  3643                           
  3644                           ; 1 bytes @ 0x4D
  3645  0000AD                     	ds	1
  3646  0000AE                     Eeprom_Read@ReadSts:
  3647                           	opt stack 0
  3648                           
  3649                           ; 1 bytes @ 0x4E
  3650  0000AE                     	ds	1
  3651  0000AF                     Eeprom_Read@QuerySts:
  3652                           	opt stack 0
  3653                           
  3654                           ; 1 bytes @ 0x4F
  3655  0000AF                     	ds	1
  3656  0000B0                     tblptru	equ	0xFF8
  3657                           tblptrh	equ	0xFF7
  3658                           tblptrl	equ	0xFF6
  3659                           tablat	equ	0xFF5
  3660                           postinc0	equ	0xFEE
  3661                           wreg	equ	0xFE8
  3662                           postdec1	equ	0xFE5
  3663                           fsr1h	equ	0xFE2
  3664                           fsr1l	equ	0xFE1
  3665                           
  3666                           ; 1 bytes @ 0x50
  3667                           
  3668                           	psect	cstackCOMRAM
  3669  000001                     __pcstackCOMRAM:
  3670                           	opt stack 0
  3671  000001                     i2GenerateEvt@Event:
  3672                           	opt stack 0
  3673                           
  3674                           ; 2 bytes @ 0x0
  3675  000001                     	ds	2
  3676  000003                     i2GenerateEvt@EventStatus:
  3677                           	opt stack 0
  3678                           
  3679                           ; 1 bytes @ 0x2
  3680  000003                     	ds	1
  3681  000004                     Uart_MdmGsmGprsReadService@UartData:
  3682                           	opt stack 0
  3683                           
  3684                           ; 1 bytes @ 0x3
  3685  000004                     	ds	1
  3686  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3687                           	opt stack 0
  3688                           
  3689                           ; 2 bytes @ 0x4
  3690  000005                     	ds	2
  3691  000007                     ??_HighPriorityIsr:
  3692                           
  3693                           ; 1 bytes @ 0x6
  3694  000007                     	ds	18
  3695  000019                     ?i1___wmul:
  3696                           	opt stack 0
  3697  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3698                           	opt stack 0
  3699  000019                     i1GenerateEvt@Event:
  3700                           	opt stack 0
  3701  000019                     i1___wmul@multiplier:
  3702                           	opt stack 0
  3703                           
  3704                           ; 2 bytes @ 0x18
  3705  000019                     	ds	2
  3706  00001B                     i1GenerateEvt@EventStatus:
  3707                           	opt stack 0
  3708  00001B                     i1___wmul@multiplicand:
  3709                           	opt stack 0
  3710                           
  3711                           ; 2 bytes @ 0x1A
  3712  00001B                     	ds	1
  3713  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3714                           	opt stack 0
  3715                           
  3716                           ; 2 bytes @ 0x1B
  3717  00001C                     	ds	1
  3718  00001D                     i1___wmul@product:
  3719                           	opt stack 0
  3720                           
  3721                           ; 2 bytes @ 0x1C
  3722  00001D                     	ds	1
  3723  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3724                           	opt stack 0
  3725                           
  3726                           ; 1 bytes @ 0x1D
  3727  00001E                     	ds	1
  3728  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3729                           	opt stack 0
  3730                           
  3731                           ; 1 bytes @ 0x1E
  3732  00001F                     	ds	1
  3733  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3734                           	opt stack 0
  3735                           
  3736                           ; 1 bytes @ 0x1F
  3737  000020                     	ds	1
  3738  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3739                           	opt stack 0
  3740                           
  3741                           ; 2 bytes @ 0x20
  3742  000021                     	ds	2
  3743  000023                     tblptru	equ	0xFF8
  3744                           tblptrh	equ	0xFF7
  3745                           tblptrl	equ	0xFF6
  3746                           tablat	equ	0xFF5
  3747                           postinc0	equ	0xFEE
  3748                           wreg	equ	0xFE8
  3749                           postdec1	equ	0xFE5
  3750                           fsr1h	equ	0xFE2
  3751                           fsr1l	equ	0xFE1
  3752                           
  3753                           ; 1 bytes @ 0x22
  3754 ;;
  3755 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3756 ;;
  3757 ;; *************** function _main *****************
  3758 ;; Defined at:
  3759 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;		None
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  2   14[None  ] short 
  3766 ;; Registers used:
  3767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3777 ;;Total ram usage:        0 bytes
  3778 ;; Hardware stack levels required when called:   23
  3779 ;; This function calls:
  3780 ;;		_Sch_MainScheduler
  3781 ;;		_SystemInit
  3782 ;; This function is called by:
  3783 ;;		Startup code after reset
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text0
  3788  006A3E                     __ptext0:
  3789                           	opt stack 0
  3790  006A3E                     _main:
  3791                           	opt stack 8
  3792                           
  3793                           ;main.c: 61: SystemInit();
  3794                           
  3795                           ;incstack = 0
  3796  006A3E  EC24  F032         	call	_SystemInit	;wreg free
  3797                           
  3798                           ;main.c: 64: Sch_MainScheduler();
  3799  006A42  EC06  F034         	call	_Sch_MainScheduler	;wreg free
  3800                           
  3801                           ;main.c: 67: return 0;
  3802                           ;	Return value of _main is never used
  3803  006A46  EF66  F000         	goto	start
  3804  006A4A                     __end_of_main:
  3805                           	opt stack 0
  3806                           tblptru	equ	0xFF8
  3807                           tblptrh	equ	0xFF7
  3808                           tblptrl	equ	0xFF6
  3809                           tablat	equ	0xFF5
  3810                           postinc0	equ	0xFEE
  3811                           wreg	equ	0xFE8
  3812                           postdec1	equ	0xFE5
  3813                           fsr1h	equ	0xFE2
  3814                           fsr1l	equ	0xFE1
  3815                           
  3816 ;; *************** function _SystemInit *****************
  3817 ;; Defined at:
  3818 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3836 ;;Total ram usage:        0 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:   15
  3839 ;; This function calls:
  3840 ;;		_InitSchedTimer
  3841 ;;		_Irq_InitIntController
  3842 ;;		_Mcu_ConfigExtInt
  3843 ;;		_Mcu_StartSystemPll
  3844 ;;		_Pm_DsReleasePinControl
  3845 ;;		_Tmr_RegisterTmr2IsrCallback
  3846 ;; This function is called by:
  3847 ;;		_main
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text1
  3852  006448                     __ptext1:
  3853                           	opt stack 0
  3854  006448                     _SystemInit:
  3855                           	opt stack 15
  3856                           
  3857                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3858                           
  3859                           ;incstack = 0
  3860  006448  EC4D  F035         	call	_Pm_DsReleasePinControl	;wreg free
  3861                           
  3862                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3863  00644C  ECF7  F033         	call	_Mcu_StartSystemPll	;wreg free
  3864                           
  3865                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3866  006450  0E01               	movlw	1
  3867  006452  0100               	movlb	0	; () banked
  3868  006454  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3869  006456  0E01               	movlw	1
  3870  006458  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3871  00645A  0E01               	movlw	1
  3872  00645C  ECC8  F032         	call	_Irq_InitIntController
  3873                           
  3874                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3875  006460  0E22               	movlw	low _Sch_SchmIntService
  3876  006462  0100               	movlb	0	; () banked
  3877  006464  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3878  006466  0E6A               	movlw	high _Sch_SchmIntService
  3879  006468  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3880  00646A  EC30  F035         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3881                           
  3882                           ;sys_init.c: 132: InitSchedTimer();
  3883  00646E  EC84  F032         	call	_InitSchedTimer	;wreg free
  3884                           
  3885                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3886  006472  EC40  F034         	call	_Mcu_ConfigExtInt	;wreg free
  3887  006476  0012               	return		;funcret
  3888  006478                     __end_of_SystemInit:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           postinc0	equ	0xFEE
  3895                           wreg	equ	0xFE8
  3896                           postdec1	equ	0xFE5
  3897                           fsr1h	equ	0xFE2
  3898                           fsr1l	equ	0xFE1
  3899                           
  3900 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3901 ;; Defined at:
  3902 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3905 ;;		 -> Sch_SchmIntService(1), 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;		None
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3920 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3921 ;;Total ram usage:        2 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:   11
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_SystemInit
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text2
  3932  006A60                     __ptext2:
  3933                           	opt stack 0
  3934  006A60                     _Tmr_RegisterTmr2IsrCallback:
  3935                           	opt stack 18
  3936                           
  3937                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3938                           
  3939                           ;incstack = 0
  3940  006A60  C07D  F1D3         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3941  006A64  C07E  F1D4         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3942  006A68  0012               	return		;funcret
  3943  006A6A                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3944                           	opt stack 0
  3945                           tblptru	equ	0xFF8
  3946                           tblptrh	equ	0xFF7
  3947                           tblptrl	equ	0xFF6
  3948                           tablat	equ	0xFF5
  3949                           postinc0	equ	0xFEE
  3950                           wreg	equ	0xFE8
  3951                           postdec1	equ	0xFE5
  3952                           fsr1h	equ	0xFE2
  3953                           fsr1l	equ	0xFE1
  3954                           
  3955 ;; *************** function _Pm_DsReleasePinControl *****************
  3956 ;; Defined at:
  3957 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		None
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:   11
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_SystemInit
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text3
  3986  006A9A                     __ptext3:
  3987                           	opt stack 0
  3988  006A9A                     _Pm_DsReleasePinControl:
  3989                           	opt stack 18
  3990                           
  3991                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3992                           
  3993                           ;incstack = 0
  3994  006A9A  010F               	movlb	15	; () banked
  3995  006A9C  914C               	bcf	76,0,b	;volatile
  3996                           
  3997                           ; BSR set to: 15
  3998  006A9E  0012               	return		;funcret
  3999  006AA0                     __end_of_Pm_DsReleasePinControl:
  4000                           	opt stack 0
  4001                           tblptru	equ	0xFF8
  4002                           tblptrh	equ	0xFF7
  4003                           tblptrl	equ	0xFF6
  4004                           tablat	equ	0xFF5
  4005                           postinc0	equ	0xFEE
  4006                           wreg	equ	0xFE8
  4007                           postdec1	equ	0xFE5
  4008                           fsr1h	equ	0xFE2
  4009                           fsr1l	equ	0xFE1
  4010                           
  4011 ;; *************** function _Mcu_StartSystemPll *****************
  4012 ;; Defined at:
  4013 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg, status,2, status,0
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4030 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4031 ;;Total ram usage:        2 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:   11
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_SystemInit
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text4
  4042  0067EE                     __ptext4:
  4043                           	opt stack 0
  4044  0067EE                     _Mcu_StartSystemPll:
  4045                           	opt stack 18
  4046                           
  4047                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4048                           
  4049                           ; BSR set to: 15
  4050                           ;incstack = 0
  4051  0067EE  0E03               	movlw	3
  4052  0067F0  0100               	movlb	0	; () banked
  4053  0067F2  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4054  0067F4  0EE8               	movlw	232
  4055  0067F6  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4059  0067F8  8C9B               	bsf	3995,6,c	;volatile
  4060  0067FA                     l12155:
  4061                           
  4062                           ; BSR set to: 0
  4063  0067FA  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4064  0067FC  A0D8               	btfss	status,0,c
  4065  0067FE  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4066  006800  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4067  006802  E1FB               	bnz	l12155
  4068  006804  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4069  006806  B4D8               	btfsc	status,2,c
  4070  006808  0012               	return	
  4071  00680A  D7F7               	goto	l237
  4072  00680C                     __end_of_Mcu_StartSystemPll:
  4073                           	opt stack 0
  4074                           tblptru	equ	0xFF8
  4075                           tblptrh	equ	0xFF7
  4076                           tblptrl	equ	0xFF6
  4077                           tablat	equ	0xFF5
  4078                           postinc0	equ	0xFEE
  4079                           wreg	equ	0xFE8
  4080                           postdec1	equ	0xFE5
  4081                           fsr1h	equ	0xFE2
  4082                           fsr1l	equ	0xFE1
  4083                           status	equ	0xFD8
  4084                           
  4085 ;; *************** function _Mcu_ConfigExtInt *****************
  4086 ;; Defined at:
  4087 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;		None
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;		None
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4105 ;;Total ram usage:        0 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:   11
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_SystemInit
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text5
  4116  006880                     __ptext5:
  4117                           	opt stack 0
  4118  006880                     _Mcu_ConfigExtInt:
  4119                           	opt stack 18
  4120                           
  4121                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;incstack = 0
  4125  006880  8093               	bsf	3987,0,c	;volatile
  4126                           
  4127                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4128  006882  8695               	bsf	3989,3,c	;volatile
  4129                           
  4130                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4131  006884  010F               	movlb	15	; () banked
  4132  006886  8949               	bsf	73,4,b	;volatile
  4133                           
  4134                           ; BSR set to: 15
  4135                           ;mcu_drv.c: 108: RPINR1 = 20;
  4136  006888  0E14               	movlw	20
  4137  00688A  010E               	movlb	14	; () banked
  4138  00688C  6FE7               	movwf	231,b	;volatile
  4139                           
  4140                           ; BSR set to: 14
  4141                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4142  00688E  88F2               	bsf	intcon,4,c	;volatile
  4143                           
  4144                           ; BSR set to: 14
  4145                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4146  006890  86F0               	bsf	intcon3,3,c	;volatile
  4147                           
  4148                           ; BSR set to: 14
  4149                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4150  006892  8CF0               	bsf	intcon3,6,c	;volatile
  4151                           
  4152                           ; BSR set to: 14
  4153                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4154  006894  9CF1               	bcf	intcon2,6,c	;volatile
  4155                           
  4156                           ; BSR set to: 14
  4157                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4158  006896  9AF1               	bcf	intcon2,5,c	;volatile
  4159                           
  4160                           ; BSR set to: 14
  4161  006898  0012               	return		;funcret
  4162  00689A                     __end_of_Mcu_ConfigExtInt:
  4163                           	opt stack 0
  4164                           tblptru	equ	0xFF8
  4165                           tblptrh	equ	0xFF7
  4166                           tblptrl	equ	0xFF6
  4167                           tablat	equ	0xFF5
  4168                           intcon	equ	0xFF2
  4169                           intcon2	equ	0xFF1
  4170                           intcon3	equ	0xFF0
  4171                           postinc0	equ	0xFEE
  4172                           wreg	equ	0xFE8
  4173                           postdec1	equ	0xFE5
  4174                           fsr1h	equ	0xFE2
  4175                           fsr1l	equ	0xFE1
  4176                           status	equ	0xFD8
  4177                           
  4178 ;; *************** function _Irq_InitIntController *****************
  4179 ;; Defined at:
  4180 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  IntPriorityE    1    wreg     enum E7720
  4183 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4184 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4197 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4199 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4200 ;;Total ram usage:        3 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:   11
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_SystemInit
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text6
  4211  006590                     __ptext6:
  4212                           	opt stack 0
  4213  006590                     _Irq_InitIntController:
  4214                           	opt stack 18
  4215                           
  4216                           ; BSR set to: 14
  4217                           ;incstack = 0
  4218                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4219  006590  0100               	movlb	0	; () banked
  4220  006592  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4221                           
  4222                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4223  006594  0100               	movlb	0	; () banked
  4224  006596  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4225  006598  D002               	bra	u10645
  4226  00659A  9ED0               	bcf	4048,7,c	;volatile
  4227  00659C  D001               	bra	u10646
  4228  00659E                     u10645:
  4229  00659E  8ED0               	bsf	4048,7,c	;volatile
  4230  0065A0                     u10646:
  4231                           
  4232                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4233  0065A0  0100               	movlb	0	; () banked
  4234  0065A2  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4235  0065A4  D002               	bra	u10655
  4236  0065A6  9EF2               	bcf	intcon,7,c	;volatile
  4237  0065A8  D001               	bra	u10656
  4238  0065AA                     u10655:
  4239  0065AA  8EF2               	bsf	intcon,7,c	;volatile
  4240  0065AC                     u10656:
  4241                           
  4242                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4243  0065AC  0100               	movlb	0	; () banked
  4244  0065AE  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4245  0065B0  D002               	bra	u10665
  4246  0065B2  9CF2               	bcf	intcon,6,c	;volatile
  4247  0065B4  D001               	bra	u10666
  4248  0065B6                     u10665:
  4249  0065B6  8CF2               	bsf	intcon,6,c	;volatile
  4250  0065B8                     u10666:
  4251  0065B8  0012               	return		;funcret
  4252  0065BA                     __end_of_Irq_InitIntController:
  4253                           	opt stack 0
  4254                           tblptru	equ	0xFF8
  4255                           tblptrh	equ	0xFF7
  4256                           tblptrl	equ	0xFF6
  4257                           tablat	equ	0xFF5
  4258                           intcon	equ	0xFF2
  4259                           intcon2	equ	0xFF1
  4260                           intcon3	equ	0xFF0
  4261                           postinc0	equ	0xFEE
  4262                           wreg	equ	0xFE8
  4263                           postdec1	equ	0xFE5
  4264                           fsr1h	equ	0xFE2
  4265                           fsr1l	equ	0xFE1
  4266                           status	equ	0xFD8
  4267                           
  4268 ;; *************** function _InitSchedTimer *****************
  4269 ;; Defined at:
  4270 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4285 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4287 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4288 ;;Total ram usage:        7 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:   14
  4291 ;; This function calls:
  4292 ;;		_Tmr_TmrBConfig
  4293 ;; This function is called by:
  4294 ;;		_SystemInit
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text7
  4299  006508                     __ptext7:
  4300                           	opt stack 0
  4301  006508                     _InitSchedTimer:
  4302                           	opt stack 15
  4303                           
  4304                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4305                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4306                           
  4307                           ;incstack = 0
  4308  006508  0E04               	movlw	4
  4309  00650A  0100               	movlb	0	; () banked
  4310  00650C  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4311                           
  4312                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4313  00650E  0E0C               	movlw	12
  4314  006510  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4315                           
  4316                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4317  006512  0E00               	movlw	0
  4318  006514  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4319                           
  4320                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4321  006516  0E01               	movlw	1
  4322  006518  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4323                           
  4324                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4325  00651A  0E03               	movlw	3
  4326  00651C  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4327  00651E  0EE8               	movlw	232
  4328  006520  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4329                           
  4330                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4331  006522  0E01               	movlw	1
  4332  006524  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4336  006526  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4337  006528  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4338  00652A  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4339  00652C  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4340  00652E  0E02               	movlw	2
  4341  006530  ECA2  F01E         	call	_Tmr_TmrBConfig
  4342  006534  0012               	return		;funcret
  4343  006536                     __end_of_InitSchedTimer:
  4344                           	opt stack 0
  4345                           tblptru	equ	0xFF8
  4346                           tblptrh	equ	0xFF7
  4347                           tblptrl	equ	0xFF6
  4348                           tablat	equ	0xFF5
  4349                           intcon	equ	0xFF2
  4350                           intcon2	equ	0xFF1
  4351                           intcon3	equ	0xFF0
  4352                           postinc0	equ	0xFEE
  4353                           wreg	equ	0xFE8
  4354                           postdec1	equ	0xFE5
  4355                           fsr1h	equ	0xFE2
  4356                           fsr1l	equ	0xFE1
  4357                           status	equ	0xFD8
  4358                           
  4359 ;; *************** function _Tmr_TmrBConfig *****************
  4360 ;; Defined at:
  4361 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  TmrNumb         1    wreg     unsigned char 
  4364 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4365 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4379 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4380 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4381 ;;Total ram usage:        4 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:   13
  4384 ;; This function calls:
  4385 ;;		_TmrBInit
  4386 ;;		_Tmr_StartTmr
  4387 ;;		_Tmr_TmrBIrqSet
  4388 ;;		_Tmr_TmrBPrSet
  4389 ;; This function is called by:
  4390 ;;		_InitSchedTimer
  4391 ;;		_InitAuxTimer
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text8
  4396  003D44                     __ptext8:
  4397                           	opt stack 0
  4398  003D44                     _Tmr_TmrBConfig:
  4399                           	opt stack 15
  4400                           
  4401                           ;incstack = 0
  4402                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4403  003D44  0100               	movlb	0	; () banked
  4404  003D46  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4405                           
  4406                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4407  003D48  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4408  003D4C  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4409  003D50  50DF               	movf	indf2,w,c
  4410  003D52  0100               	movlb	0	; () banked
  4411  003D54  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4412  003D56  EE20 F001          	lfsr	2,1
  4413  003D5A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4414  003D5C  26D9               	addwf	fsr2l,f,c
  4415  003D5E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4416  003D60  22DA               	addwfc	fsr2h,f,c
  4417  003D62  50DF               	movf	indf2,w,c
  4418  003D64  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4419  003D66  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4420  003D68  EC86  F025         	call	_TmrBInit
  4421                           
  4422                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4423  003D6C  0100               	movlb	0	; () banked
  4424  003D6E  EE20 F002          	lfsr	2,2
  4425  003D72  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4426  003D74  26D9               	addwf	fsr2l,f,c
  4427  003D76  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4428  003D78  22DA               	addwfc	fsr2h,f,c
  4429  003D7A  04DE               	decf	postinc2,w,c
  4430  003D7C  A4D8               	btfss	status,2,c
  4431  003D7E  D00E               	goto	l546
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;tmr_drv.c: 277: {
  4435                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4436  003D80  EE20 F003          	lfsr	2,3
  4437  003D84  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4438  003D86  26D9               	addwf	fsr2l,f,c
  4439  003D88  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4440  003D8A  22DA               	addwfc	fsr2h,f,c
  4441  003D8C  50DF               	movf	indf2,w,c
  4442  003D8E  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4443  003D90  0E01               	movlw	1
  4444  003D92  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4445  003D94  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4446  003D96  EC13  F02F         	call	_Tmr_TmrBIrqSet
  4447                           
  4448                           ;tmr_drv.c: 280: }
  4449  003D9A  D00E               	goto	l547
  4450  003D9C                     l546:
  4451                           
  4452                           ;tmr_drv.c: 281: else
  4453                           ;tmr_drv.c: 282: {
  4454                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4455  003D9C  0100               	movlb	0	; () banked
  4456  003D9E  EE20 F003          	lfsr	2,3
  4457  003DA2  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4458  003DA4  26D9               	addwf	fsr2l,f,c
  4459  003DA6  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4460  003DA8  22DA               	addwfc	fsr2h,f,c
  4461  003DAA  50DF               	movf	indf2,w,c
  4462  003DAC  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4463  003DAE  0E00               	movlw	0
  4464  003DB0  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4465  003DB2  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4466  003DB4  EC13  F02F         	call	_Tmr_TmrBIrqSet
  4467  003DB8                     l547:
  4468                           
  4469                           ;tmr_drv.c: 285: }
  4470                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4471  003DB8  0100               	movlb	0	; () banked
  4472  003DBA  EE20 F004          	lfsr	2,4
  4473  003DBE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4474  003DC0  26D9               	addwf	fsr2l,f,c
  4475  003DC2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4476  003DC4  22DA               	addwfc	fsr2h,f,c
  4477  003DC6  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4478  003DCA  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4479  003DCE  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4480  003DD2  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4481  003DD6  50DF               	movf	indf2,w,c
  4482  003DD8  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4483  003DDA  EE20 F001          	lfsr	2,1
  4484  003DDE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4485  003DE0  26D9               	addwf	fsr2l,f,c
  4486  003DE2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4487  003DE4  22DA               	addwfc	fsr2h,f,c
  4488  003DE6  50DF               	movf	indf2,w,c
  4489  003DE8  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4490  003DEA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4491  003DEC  ECAA  F018         	call	_Tmr_TmrBPrSet
  4492                           
  4493                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4494  003DF0  0100               	movlb	0	; () banked
  4495  003DF2  EE20 F006          	lfsr	2,6
  4496  003DF6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4497  003DF8  26D9               	addwf	fsr2l,f,c
  4498  003DFA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4499  003DFC  22DA               	addwfc	fsr2h,f,c
  4500  003DFE  04DE               	decf	postinc2,w,c
  4501  003E00  A4D8               	btfss	status,2,c
  4502  003E02  0012               	return	
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;tmr_drv.c: 290: {
  4506                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4507  003E04  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4508  003E06  ECC7  F033         	call	_Tmr_StartTmr
  4509                           
  4510                           ;tmr_drv.c: 293: }
  4511  003E0A  0012               	return	
  4512  003E0C                     __end_of_Tmr_TmrBConfig:
  4513                           	opt stack 0
  4514                           tblptru	equ	0xFF8
  4515                           tblptrh	equ	0xFF7
  4516                           tblptrl	equ	0xFF6
  4517                           tablat	equ	0xFF5
  4518                           intcon	equ	0xFF2
  4519                           intcon2	equ	0xFF1
  4520                           intcon3	equ	0xFF0
  4521                           postinc0	equ	0xFEE
  4522                           wreg	equ	0xFE8
  4523                           postdec1	equ	0xFE5
  4524                           fsr1h	equ	0xFE2
  4525                           fsr1l	equ	0xFE1
  4526                           indf2	equ	0xFDF
  4527                           postinc2	equ	0xFDE
  4528                           postdec2	equ	0xFDD
  4529                           fsr2h	equ	0xFDA
  4530                           fsr2l	equ	0xFD9
  4531                           status	equ	0xFD8
  4532                           
  4533 ;; *************** function _Tmr_TmrBPrSet *****************
  4534 ;; Defined at:
  4535 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  TmrNumb         1    wreg     unsigned char 
  4538 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4539 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4540 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4543 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4544 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      enum E7736
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4554 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4555 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4557 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4558 ;;Total ram usage:       10 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:   12
  4561 ;; This function calls:
  4562 ;;		___lldiv
  4563 ;;		___lmul
  4564 ;; This function is called by:
  4565 ;;		_Tmr_TmrBConfig
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text9
  4570  003154                     __ptext9:
  4571                           	opt stack 0
  4572  003154                     _Tmr_TmrBPrSet:
  4573                           	opt stack 15
  4574                           
  4575                           ;incstack = 0
  4576                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4577  003154  0100               	movlb	0	; () banked
  4578  003156  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4579                           
  4580                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4581                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4582  003158  0E00               	movlw	0
  4583  00315A  0100               	movlb	0	; () banked
  4584  00315C  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4585  00315E  0E00               	movlw	0
  4586  003160  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4587  003162  0E00               	movlw	0
  4588  003164  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4589  003166  0E00               	movlw	0
  4590  003168  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4594  00316A  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4595  00316C  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4596  00316E  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4597  003172  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4598  003176  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4599  003178  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4600  00317A  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4601  00317E  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4602  003182  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4603  003184  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4604  003186  EC55  F02C         	call	___lmul	;wreg free
  4605  00318A  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4606  00318E  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4607  003192  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4608  003196  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4609                           
  4610                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4611  00319A  0E00               	movlw	0
  4612  00319C  0100               	movlb	0	; () banked
  4613  00319E  6F89               	movwf	___lldiv@dividend& (0+255),b
  4614  0031A0  0E1B               	movlw	27
  4615  0031A2  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4616  0031A4  0EB7               	movlw	183
  4617  0031A6  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4618  0031A8  0E00               	movlw	0
  4619  0031AA  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4620  0031AC  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4621  0031B0  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4622  0031B4  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4623  0031B8  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4624  0031BC  EC58  F028         	call	___lldiv	;wreg free
  4625  0031C0  0100               	movlb	0	; () banked
  4626  0031C2  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4627  0031C4  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4628  0031C6  E13A               	bnz	l15235
  4629  0031C8  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4630  0031CA  A0D8               	btfss	status,0,c
  4631  0031CC  D02D               	goto	l529
  4632  0031CE  D036               	goto	l528
  4633  0031D0                     
  4634                           ; BSR set to: 0
  4635                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4636                           
  4637                           ; BSR set to: 0
  4638  0031D0  0E00               	movlw	0
  4639  0031D2  6F89               	movwf	___lldiv@dividend& (0+255),b
  4640  0031D4  0E1B               	movlw	27
  4641  0031D6  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4642  0031D8  0EB7               	movlw	183
  4643  0031DA  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4644  0031DC  0E00               	movlw	0
  4645  0031DE  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4646  0031E0  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4647  0031E4  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4648  0031E8  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4649  0031EC  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4650  0031F0  EC58  F028         	call	___lldiv	;wreg free
  4651  0031F4  0100               	movlb	0	; () banked
  4652  0031F6  5189               	movf	?___lldiv& (0+255),w,b
  4653  0031F8  6ECB               	movwf	4043,c	;volatile
  4654                           
  4655                           ;tmr_drv.c: 210: break;
  4656  0031FA  D01D               	goto	l531
  4657  0031FC                     
  4658                           ; BSR set to: 0
  4659                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4660                           
  4661                           ; BSR set to: 0
  4662  0031FC  0E00               	movlw	0
  4663  0031FE  6F89               	movwf	___lldiv@dividend& (0+255),b
  4664  003200  0E1B               	movlw	27
  4665  003202  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4666  003204  0EB7               	movlw	183
  4667  003206  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4668  003208  0E00               	movlw	0
  4669  00320A  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4670  00320C  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4671  003210  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4672  003214  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4673  003218  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4674  00321C  EC58  F028         	call	___lldiv	;wreg free
  4675  003220  0100               	movlb	0	; () banked
  4676  003222  5189               	movf	?___lldiv& (0+255),w,b
  4677  003224  6E77               	movwf	3959,c	;volatile
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;tmr_drv.c: 219: }
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;tmr_drv.c: 218: break;
  4684                           
  4685                           ;tmr_drv.c: 217: default:
  4686                           
  4687                           ;tmr_drv.c: 215: break;
  4688  003226  D007               	goto	l531
  4689  003228                     l529:
  4690                           
  4691                           ; BSR set to: 0
  4692                           
  4693                           ; BSR set to: 0
  4694  003228  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4695                           
  4696                           ; Switch size 1, requested type "space"
  4697                           ; Number of cases is 2, Range of values is 2 to 4
  4698                           ; switch strategies available:
  4699                           ; Name         Instructions Cycles
  4700                           ; simple_byte            7     4 (average)
  4701                           ;	Chosen strategy is simple_byte
  4702  00322A  0A02               	xorlw	2	; case 2
  4703  00322C  B4D8               	btfsc	status,2,c
  4704  00322E  D7D0               	goto	l530
  4705  003230  0A06               	xorlw	6	; case 4
  4706  003232  B4D8               	btfsc	status,2,c
  4707  003234  D7E3               	goto	l532
  4708  003236                     l531:
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4712                           
  4713                           ; BSR set to: 0
  4714  003236  0E00               	movlw	0
  4715  003238  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4716                           
  4717                           ;tmr_drv.c: 223: }
  4718  00323A  0012               	return	
  4719  00323C                     l528:
  4720  00323C                     l15235:
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;tmr_drv.c: 224: else
  4724                           ;tmr_drv.c: 225: {
  4725                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4726  00323C  0E01               	movlw	1
  4727  00323E  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4728                           
  4729                           ; BSR set to: 0
  4730  003240  0012               	return	
  4731  003242                     __end_of_Tmr_TmrBPrSet:
  4732                           	opt stack 0
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           prodh	equ	0xFF4
  4738                           prodl	equ	0xFF3
  4739                           intcon	equ	0xFF2
  4740                           intcon2	equ	0xFF1
  4741                           intcon3	equ	0xFF0
  4742                           postinc0	equ	0xFEE
  4743                           wreg	equ	0xFE8
  4744                           postdec1	equ	0xFE5
  4745                           fsr1h	equ	0xFE2
  4746                           fsr1l	equ	0xFE1
  4747                           indf2	equ	0xFDF
  4748                           postinc2	equ	0xFDE
  4749                           postdec2	equ	0xFDD
  4750                           fsr2h	equ	0xFDA
  4751                           fsr2l	equ	0xFD9
  4752                           status	equ	0xFD8
  4753                           
  4754 ;; *************** function _Tmr_TmrBIrqSet *****************
  4755 ;; Defined at:
  4756 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  TmrNumb         1    wreg     unsigned char 
  4759 ;;  Priority        1   29[BANK0 ] enum E7716
  4760 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      void 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4775 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4776 ;;Total ram usage:        3 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:   11
  4779 ;; This function calls:
  4780 ;;		Nothing
  4781 ;; This function is called by:
  4782 ;;		_Tmr_TmrBConfig
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text10
  4787  005E26                     __ptext10:
  4788                           	opt stack 0
  4789  005E26                     _Tmr_TmrBIrqSet:
  4790                           	opt stack 16
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;incstack = 0
  4794                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4795  005E26  0100               	movlb	0	; () banked
  4796  005E28  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4797                           
  4798                           ;tmr_drv.c: 156: switch (TmrNumb)
  4799  005E2A  D01A               	goto	l520
  4800  005E2C                     l521:
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4804  005E2C  929E               	bcf	3998,1,c	;volatile
  4805                           
  4806                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4807  005E2E  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4808  005E30  D002               	bra	u9025
  4809  005E32  929F               	bcf	3999,1,c	;volatile
  4810  005E34  D001               	bra	u9026
  4811  005E36                     u9025:
  4812  005E36  829F               	bsf	3999,1,c	;volatile
  4813  005E38                     u9026:
  4814                           
  4815                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4816  005E38  0100               	movlb	0	; () banked
  4817  005E3A  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4818  005E3C  D002               	bra	u9035
  4819  005E3E  929D               	bcf	3997,1,c	;volatile
  4820  005E40  D001               	bra	u9036
  4821  005E42                     u9035:
  4822  005E42  829D               	bsf	3997,1,c	;volatile
  4823  005E44                     u9036:
  4824                           
  4825                           ;tmr_drv.c: 165: break;
  4826  005E44  0012               	return	
  4827  005E46                     l523:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4831  005E46  96A4               	bcf	4004,3,c	;volatile
  4832                           
  4833                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4834  005E48  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4835  005E4A  D002               	bra	u9045
  4836  005E4C  96A5               	bcf	4005,3,c	;volatile
  4837  005E4E  D001               	bra	u9046
  4838  005E50                     u9045:
  4839  005E50  86A5               	bsf	4005,3,c	;volatile
  4840  005E52                     u9046:
  4841                           
  4842                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4843  005E52  0100               	movlb	0	; () banked
  4844  005E54  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4845  005E56  D002               	bra	u9055
  4846  005E58  96A3               	bcf	4003,3,c	;volatile
  4847  005E5A  D001               	bra	u9056
  4848  005E5C                     u9055:
  4849  005E5C  86A3               	bsf	4003,3,c	;volatile
  4850  005E5E                     u9056:
  4851                           
  4852                           ;tmr_drv.c: 178: }
  4853                           
  4854                           ;tmr_drv.c: 177: break;
  4855                           
  4856                           ;tmr_drv.c: 176: default:
  4857                           
  4858                           ;tmr_drv.c: 174: break;
  4859  005E5E  0012               	return	
  4860  005E60                     l520:
  4861  005E60  0100               	movlb	0	; () banked
  4862  005E62  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4863                           
  4864                           ; Switch size 1, requested type "space"
  4865                           ; Number of cases is 2, Range of values is 2 to 4
  4866                           ; switch strategies available:
  4867                           ; Name         Instructions Cycles
  4868                           ; simple_byte            7     4 (average)
  4869                           ;	Chosen strategy is simple_byte
  4870  005E64  0A02               	xorlw	2	; case 2
  4871  005E66  B4D8               	btfsc	status,2,c
  4872  005E68  D7E1               	goto	l521
  4873  005E6A  0A06               	xorlw	6	; case 4
  4874  005E6C  A4D8               	btfss	status,2,c
  4875  005E6E  0012               	return	
  4876  005E70  D7EA               	goto	l523
  4877  005E72                     __end_of_Tmr_TmrBIrqSet:
  4878                           	opt stack 0
  4879                           tblptru	equ	0xFF8
  4880                           tblptrh	equ	0xFF7
  4881                           tblptrl	equ	0xFF6
  4882                           tablat	equ	0xFF5
  4883                           prodh	equ	0xFF4
  4884                           prodl	equ	0xFF3
  4885                           intcon	equ	0xFF2
  4886                           intcon2	equ	0xFF1
  4887                           intcon3	equ	0xFF0
  4888                           postinc0	equ	0xFEE
  4889                           wreg	equ	0xFE8
  4890                           postdec1	equ	0xFE5
  4891                           fsr1h	equ	0xFE2
  4892                           fsr1l	equ	0xFE1
  4893                           indf2	equ	0xFDF
  4894                           postinc2	equ	0xFDE
  4895                           postdec2	equ	0xFDD
  4896                           fsr2h	equ	0xFDA
  4897                           fsr2l	equ	0xFD9
  4898                           status	equ	0xFD8
  4899                           
  4900 ;; *************** function _Tmr_StartTmr *****************
  4901 ;; Defined at:
  4902 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  TmrNumb         1    wreg     unsigned char 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1    wreg      void 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4919 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4920 ;;Total ram usage:        1 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:   11
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_Tmr_TmrBConfig
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           	psect	text11
  4931  00678E                     __ptext11:
  4932                           	opt stack 0
  4933  00678E                     _Tmr_StartTmr:
  4934                           	opt stack 16
  4935                           
  4936                           ;incstack = 0
  4937                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4938  00678E  0100               	movlb	0	; () banked
  4939  006790  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4940                           
  4941                           ;tmr_drv.c: 245: switch (TmrNumb)
  4942  006792  D004               	goto	l538
  4943  006794                     l539:
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4947  006794  84CA               	bsf	4042,2,c	;volatile
  4948                           
  4949                           ;tmr_drv.c: 250: break;
  4950  006796  0012               	return	
  4951  006798                     l541:
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4955  006798  8476               	bsf	3958,2,c	;volatile
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;tmr_drv.c: 259: }
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;tmr_drv.c: 258: break;
  4962                           
  4963                           ;tmr_drv.c: 257: default:
  4964                           
  4965                           ;tmr_drv.c: 255: break;
  4966  00679A  0012               	return	
  4967  00679C                     l538:
  4968                           
  4969                           ; BSR set to: 0
  4970  00679C  0100               	movlb	0	; () banked
  4971  00679E  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4972                           
  4973                           ; Switch size 1, requested type "space"
  4974                           ; Number of cases is 2, Range of values is 2 to 4
  4975                           ; switch strategies available:
  4976                           ; Name         Instructions Cycles
  4977                           ; simple_byte            7     4 (average)
  4978                           ;	Chosen strategy is simple_byte
  4979  0067A0  0A02               	xorlw	2	; case 2
  4980  0067A2  B4D8               	btfsc	status,2,c
  4981  0067A4  D7F7               	goto	l539
  4982  0067A6  0A06               	xorlw	6	; case 4
  4983  0067A8  A4D8               	btfss	status,2,c
  4984  0067AA  0012               	return	
  4985  0067AC  D7F5               	goto	l541
  4986  0067AE                     __end_of_Tmr_StartTmr:
  4987                           	opt stack 0
  4988                           tblptru	equ	0xFF8
  4989                           tblptrh	equ	0xFF7
  4990                           tblptrl	equ	0xFF6
  4991                           tablat	equ	0xFF5
  4992                           prodh	equ	0xFF4
  4993                           prodl	equ	0xFF3
  4994                           intcon	equ	0xFF2
  4995                           intcon2	equ	0xFF1
  4996                           intcon3	equ	0xFF0
  4997                           postinc0	equ	0xFEE
  4998                           wreg	equ	0xFE8
  4999                           postdec1	equ	0xFE5
  5000                           fsr1h	equ	0xFE2
  5001                           fsr1l	equ	0xFE1
  5002                           indf2	equ	0xFDF
  5003                           postinc2	equ	0xFDE
  5004                           postdec2	equ	0xFDD
  5005                           fsr2h	equ	0xFDA
  5006                           fsr2l	equ	0xFD9
  5007                           status	equ	0xFD8
  5008                           
  5009 ;; *************** function _TmrBInit *****************
  5010 ;; Defined at:
  5011 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  TmrNumb         1    wreg     unsigned char 
  5014 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  5015 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      void 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5029 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5030 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5031 ;;Total ram usage:        4 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:   11
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_Tmr_TmrBConfig
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text12
  5042  004B0C                     __ptext12:
  5043                           	opt stack 0
  5044  004B0C                     _TmrBInit:
  5045                           	opt stack 16
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;incstack = 0
  5049                           ;TmrBInit@TmrNumb stored from wreg
  5050  004B0C  0100               	movlb	0	; () banked
  5051  004B0E  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5052                           
  5053                           ;tmr_drv.c: 75: switch (TmrNumb)
  5054  004B10  D03F               	goto	l500
  5055  004B12                     l503:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5059  004B12  90CA               	bcf	4042,0,c	;volatile
  5060  004B14  D001               	goto	L1
  5061  004B16                     l505:
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5065  004B16  80CA               	bsf	4042,0,c	;volatile
  5066  004B18                     L1:
  5067                           
  5068                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5069  004B18  92CA               	bcf	4042,1,c	;volatile
  5070                           
  5071                           ;tmr_drv.c: 91: break;
  5072  004B1A  D00E               	goto	l504
  5073  004B1C                     l506:
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5077  004B1C  80CA               	bsf	4042,0,c	;volatile
  5078                           
  5079                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5080  004B1E  82CA               	bsf	4042,1,c	;volatile
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;tmr_drv.c: 100: }
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;tmr_drv.c: 99: break;
  5087                           
  5088                           ;tmr_drv.c: 98: default:
  5089                           
  5090                           ;tmr_drv.c: 96: break;
  5091  004B20  D00B               	goto	l504
  5092  004B22                     
  5093                           ; BSR set to: 0
  5094  004B22  0100               	movlb	0	; () banked
  5095  004B24  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5096                           
  5097                           ; Switch size 1, requested type "space"
  5098                           ; Number of cases is 3, Range of values is 1 to 16
  5099                           ; switch strategies available:
  5100                           ; Name         Instructions Cycles
  5101                           ; simple_byte           10     6 (average)
  5102                           ;	Chosen strategy is simple_byte
  5103  004B26  0A01               	xorlw	1	; case 1
  5104  004B28  B4D8               	btfsc	status,2,c
  5105  004B2A  D7F3               	goto	l503
  5106  004B2C  0A05               	xorlw	5	; case 4
  5107  004B2E  B4D8               	btfsc	status,2,c
  5108  004B30  D7F2               	goto	l505
  5109  004B32  0A14               	xorlw	20	; case 16
  5110  004B34  B4D8               	btfsc	status,2,c
  5111  004B36  D7F2               	goto	l506
  5112  004B38                     l504:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5116                           
  5117                           ; BSR set to: 0
  5118  004B38  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5119  004B3C  0EFF               	movlw	255
  5120  004B3E  277F               	addwf	??_TmrBInit& (0+255),f,b
  5121  004B40  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5122  004B42  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5123  004B44  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5124  004B46  50CA               	movf	4042,w,c	;volatile
  5125  004B48  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5126  004B4A  0B87               	andlw	-121
  5127  004B4C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5128  004B4E  6ECA               	movwf	4042,c	;volatile
  5129                           
  5130                           ;tmr_drv.c: 104: break;
  5131  004B50  0012               	return	
  5132  004B52                     l511:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5136  004B52  9076               	bcf	3958,0,c	;volatile
  5137  004B54  D001               	goto	L2
  5138  004B56                     l513:
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5142  004B56  8076               	bsf	3958,0,c	;volatile
  5143  004B58                     L2:
  5144                           
  5145                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5146  004B58  9276               	bcf	3958,1,c	;volatile
  5147                           
  5148                           ;tmr_drv.c: 120: break;
  5149  004B5A  D00D               	goto	l512
  5150  004B5C                     l514:
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5154  004B5C  8076               	bsf	3958,0,c	;volatile
  5155                           
  5156                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5157  004B5E  8276               	bsf	3958,1,c	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;tmr_drv.c: 129: }
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;tmr_drv.c: 128: break;
  5164                           
  5165                           ;tmr_drv.c: 127: default:
  5166                           
  5167                           ;tmr_drv.c: 125: break;
  5168  004B60  D00A               	goto	l512
  5169  004B62                     
  5170                           ; BSR set to: 0
  5171                           
  5172                           ; BSR set to: 0
  5173  004B62  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5174                           
  5175                           ; Switch size 1, requested type "space"
  5176                           ; Number of cases is 3, Range of values is 1 to 16
  5177                           ; switch strategies available:
  5178                           ; Name         Instructions Cycles
  5179                           ; simple_byte           10     6 (average)
  5180                           ;	Chosen strategy is simple_byte
  5181  004B64  0A01               	xorlw	1	; case 1
  5182  004B66  B4D8               	btfsc	status,2,c
  5183  004B68  D7F4               	goto	l511
  5184  004B6A  0A05               	xorlw	5	; case 4
  5185  004B6C  B4D8               	btfsc	status,2,c
  5186  004B6E  D7F3               	goto	l513
  5187  004B70  0A14               	xorlw	20	; case 16
  5188  004B72  B4D8               	btfsc	status,2,c
  5189  004B74  D7F3               	goto	l514
  5190  004B76                     l512:
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5194                           
  5195                           ; BSR set to: 0
  5196  004B76  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5197  004B7A  0EFF               	movlw	255
  5198  004B7C  277F               	addwf	??_TmrBInit& (0+255),f,b
  5199  004B7E  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5200  004B80  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5201  004B82  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5202  004B84  5076               	movf	3958,w,c	;volatile
  5203  004B86  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5204  004B88  0B87               	andlw	-121
  5205  004B8A  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5206  004B8C  6E76               	movwf	3958,c	;volatile
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;tmr_drv.c: 137: }
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;tmr_drv.c: 136: break;
  5213                           
  5214                           ;tmr_drv.c: 135: default:
  5215                           
  5216                           ;tmr_drv.c: 133: break;
  5217  004B8E  0012               	return	
  5218  004B90                     l500:
  5219                           
  5220                           ; BSR set to: 0
  5221  004B90  0100               	movlb	0	; () banked
  5222  004B92  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5223                           
  5224                           ; Switch size 1, requested type "space"
  5225                           ; Number of cases is 2, Range of values is 2 to 4
  5226                           ; switch strategies available:
  5227                           ; Name         Instructions Cycles
  5228                           ; simple_byte            7     4 (average)
  5229                           ;	Chosen strategy is simple_byte
  5230  004B94  0A02               	xorlw	2	; case 2
  5231  004B96  B4D8               	btfsc	status,2,c
  5232  004B98  D7C4               	goto	l502
  5233  004B9A  0A06               	xorlw	6	; case 4
  5234  004B9C  A4D8               	btfss	status,2,c
  5235  004B9E  0012               	return	
  5236  004BA0  D7E0               	goto	l510
  5237  004BA2                     __end_of_TmrBInit:
  5238                           	opt stack 0
  5239                           tblptru	equ	0xFF8
  5240                           tblptrh	equ	0xFF7
  5241                           tblptrl	equ	0xFF6
  5242                           tablat	equ	0xFF5
  5243                           prodh	equ	0xFF4
  5244                           prodl	equ	0xFF3
  5245                           intcon	equ	0xFF2
  5246                           intcon2	equ	0xFF1
  5247                           intcon3	equ	0xFF0
  5248                           postinc0	equ	0xFEE
  5249                           wreg	equ	0xFE8
  5250                           postdec1	equ	0xFE5
  5251                           fsr1h	equ	0xFE2
  5252                           fsr1l	equ	0xFE1
  5253                           indf2	equ	0xFDF
  5254                           postinc2	equ	0xFDE
  5255                           postdec2	equ	0xFDD
  5256                           fsr2h	equ	0xFDA
  5257                           fsr2l	equ	0xFD9
  5258                           status	equ	0xFD8
  5259                           
  5260 ;; *************** function _Sch_MainScheduler *****************
  5261 ;; Defined at:
  5262 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5280 ;;Total ram usage:        0 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:   22
  5283 ;; This function calls:
  5284 ;;		_InitializeTasks
  5285 ;;		_ScheduleTasks
  5286 ;; This function is called by:
  5287 ;;		_main
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           	psect	text13
  5292  00680C                     __ptext13:
  5293                           	opt stack 0
  5294  00680C                     _Sch_MainScheduler:
  5295                           	opt stack 8
  5296                           
  5297                           ;os_sched.c: 178: InitializeTasks();
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;incstack = 0
  5301  00680C  EC16  F029         	call	_InitializeTasks	;wreg free
  5302                           
  5303                           ;os_sched.c: 180: SystemState = RunningState;
  5304  006810  0E01               	movlw	1
  5305  006812  0100               	movlb	0	; () banked
  5306  006814  6FD5               	movwf	_SystemState& (0+255),b
  5307  006816                     
  5308                           ;os_sched.c: 188: {
  5309                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5310                           
  5311                           ; BSR set to: 0
  5312  006816  0102               	movlb	2	; () banked
  5313  006818  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5314  00681A  A4D8               	btfss	status,2,c
  5315  00681C  D7FC               	goto	l790
  5316                           
  5317                           ; BSR set to: 2
  5318                           ;os_sched.c: 191: {
  5319                           ;os_sched.c: 196: ScheduleTasks();
  5320  00681E  EC7D  F016         	call	_ScheduleTasks	;wreg free
  5321                           
  5322                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5323  006822  0E01               	movlw	1
  5324  006824  0102               	movlb	2	; () banked
  5325  006826  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5326                           
  5327                           ; BSR set to: 2
  5328                           
  5329                           ; BSR set to: 2
  5330  006828  D7F6               	goto	l790
  5331  00682A                     __end_of_Sch_MainScheduler:
  5332                           	opt stack 0
  5333                           tblptru	equ	0xFF8
  5334                           tblptrh	equ	0xFF7
  5335                           tblptrl	equ	0xFF6
  5336                           tablat	equ	0xFF5
  5337                           prodh	equ	0xFF4
  5338                           prodl	equ	0xFF3
  5339                           intcon	equ	0xFF2
  5340                           intcon2	equ	0xFF1
  5341                           intcon3	equ	0xFF0
  5342                           postinc0	equ	0xFEE
  5343                           wreg	equ	0xFE8
  5344                           postdec1	equ	0xFE5
  5345                           fsr1h	equ	0xFE2
  5346                           fsr1l	equ	0xFE1
  5347                           indf2	equ	0xFDF
  5348                           postinc2	equ	0xFDE
  5349                           postdec2	equ	0xFDD
  5350                           fsr2h	equ	0xFDA
  5351                           fsr2l	equ	0xFD9
  5352                           status	equ	0xFD8
  5353                           
  5354 ;; *************** function _ScheduleTasks *****************
  5355 ;; Defined at:
  5356 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;		None
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;  ActiveTaskIn    1    0[BANK3 ] unsigned char 
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      void 
  5363 ;; Registers used:
  5364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5371 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5372 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Totals:         0       0       0       0       1       4       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;Total ram usage:        5 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:   21
  5377 ;; This function calls:
  5378 ;;		_I2cSlv_MainTask
  5379 ;;		_Led_MainTask
  5380 ;;		_MdmHttp_MainTask
  5381 ;;		_Mdm_DrvMainFn
  5382 ;;		_Mdm_MainTask
  5383 ;;		_MyApp_Task
  5384 ;;		_Rtcm_MainTask
  5385 ;;		_Term_MainTask
  5386 ;;		_UsbDevice_MainTask
  5387 ;;		_Wdg_MainTask
  5388 ;; This function is called by:
  5389 ;;		_Sch_MainScheduler
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text14
  5394  002CFA                     __ptext14:
  5395                           	opt stack 0
  5396  002CFA                     _ScheduleTasks:
  5397                           	opt stack 8
  5398                           
  5399                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5400                           
  5401                           ; BSR set to: 2
  5402                           ;incstack = 0
  5403  002CFA  0E00               	movlw	0
  5404  002CFC  0103               	movlb	3	; () banked
  5405  002CFE  6FFE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5406                           
  5407                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5408  002D00  0E00               	movlw	0
  5409  002D02  6FFE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5410  002D04                     l16487:
  5411                           
  5412                           ; BSR set to: 3
  5413  002D04  0E30               	movlw	low _TaskNumber
  5414  002D06  6EF6               	movwf	tblptrl,c
  5415  002D08                     	if	1	;There is more than 1 active tblptr byte
  5416  002D08  0EFC               	movlw	high _TaskNumber
  5417  002D0A  6EF7               	movwf	tblptrh,c
  5418  002D0C                     	endif
  5419  002D0C                     	if	0	;There are less than 3 active tblptr bytes
  5420  002D0C                     	endif
  5421  002D0C  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5422  002D0E  0104               	movlb	4	; () banked
  5423  002D10  6FEA               	movwf	??_ScheduleTasks& (0+255),b
  5424  002D12  6BEB               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5425  002D14  0009               	tblrd		*+
  5426  002D16  50F5               	movf	tablat,w,c
  5427  002D18  5DEA               	subwf	??_ScheduleTasks& (0+255),w,b
  5428  002D1A  0009               	tblrd		*+
  5429  002D1C  50F5               	movf	tablat,w,c
  5430  002D1E  59EB               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5431  002D20  B0D8               	btfsc	status,0,c
  5432  002D22  0012               	return	
  5433                           
  5434                           ; BSR set to: 4
  5435                           ;os_sched.c: 106: {
  5436                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5437                           
  5438                           ; BSR set to: 4
  5439                           
  5440                           ; BSR set to: 4
  5441  002D24  0103               	movlb	3	; () banked
  5442  002D26  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5443  002D28  0D08               	mullw	8
  5444  002D2A  0E03               	movlw	3
  5445  002D2C  26F3               	addwf	prodl,f,c
  5446  002D2E  0E00               	movlw	0
  5447  002D30  22F4               	addwfc	prodh,f,c
  5448  002D32  0EA4               	movlw	low _TaskTable
  5449  002D34  24F3               	addwf	prodl,w,c
  5450  002D36  6ED9               	movwf	fsr2l,c
  5451  002D38  0E05               	movlw	high _TaskTable
  5452  002D3A  20F4               	addwfc	prodh,w,c
  5453  002D3C  6EDA               	movwf	fsr2h,c
  5454  002D3E  2ADE               	incf	postinc2,f,c
  5455  002D40  0E00               	movlw	0
  5456  002D42  22DD               	addwfc	postdec2,f,c
  5457                           
  5458                           ; BSR set to: 3
  5459                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5460  002D44  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5461  002D46  0D08               	mullw	8
  5462  002D48  0E05               	movlw	5
  5463  002D4A  26F3               	addwf	prodl,f,c
  5464  002D4C  0E00               	movlw	0
  5465  002D4E  22F4               	addwfc	prodh,f,c
  5466  002D50  0EA4               	movlw	low _TaskTable
  5467  002D52  24F3               	addwf	prodl,w,c
  5468  002D54  6ED9               	movwf	fsr2l,c
  5469  002D56  0E05               	movlw	high _TaskTable
  5470  002D58  20F4               	addwfc	prodh,w,c
  5471  002D5A  6EDA               	movwf	fsr2h,c
  5472  002D5C  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5473  002D5E  0D08               	mullw	8
  5474  002D60  0E03               	movlw	3
  5475  002D62  26F3               	addwf	prodl,f,c
  5476  002D64  0E00               	movlw	0
  5477  002D66  22F4               	addwfc	prodh,f,c
  5478  002D68  0EA4               	movlw	low _TaskTable
  5479  002D6A  24F3               	addwf	prodl,w,c
  5480  002D6C  6EE1               	movwf	fsr1l,c
  5481  002D6E  0E05               	movlw	high _TaskTable
  5482  002D70  20F4               	addwfc	prodh,w,c
  5483  002D72  6EE2               	movwf	fsr1h,c
  5484  002D74  50DE               	movf	postinc2,w,c
  5485  002D76  5CE6               	subwf	postinc1,w,c
  5486  002D78  50DE               	movf	postinc2,w,c
  5487  002D7A  58E6               	subwfb	postinc1,w,c
  5488  002D7C  A0D8               	btfss	status,0,c
  5489  002D7E  D04E               	goto	l775
  5490                           
  5491                           ; BSR set to: 3
  5492                           ;os_sched.c: 111: {
  5493                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5494  002D80  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5495  002D82  0D08               	mullw	8
  5496  002D84  0E03               	movlw	3
  5497  002D86  26F3               	addwf	prodl,f,c
  5498  002D88  0E00               	movlw	0
  5499  002D8A  22F4               	addwfc	prodh,f,c
  5500  002D8C  0EA4               	movlw	low _TaskTable
  5501  002D8E  24F3               	addwf	prodl,w,c
  5502  002D90  6ED9               	movwf	fsr2l,c
  5503  002D92  0E05               	movlw	high _TaskTable
  5504  002D94  20F4               	addwfc	prodh,w,c
  5505  002D96  6EDA               	movwf	fsr2h,c
  5506  002D98  0E00               	movlw	0
  5507  002D9A  6EDE               	movwf	postinc2,c
  5508  002D9C  0E00               	movlw	0
  5509  002D9E  6EDD               	movwf	postdec2,c
  5510                           
  5511                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5512  002DA0  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5513  002DA2  0D08               	mullw	8
  5514  002DA4  0E02               	movlw	2
  5515  002DA6  26F3               	addwf	prodl,f,c
  5516  002DA8  0E00               	movlw	0
  5517  002DAA  22F4               	addwfc	prodh,f,c
  5518  002DAC  0EA4               	movlw	low _TaskTable
  5519  002DAE  24F3               	addwf	prodl,w,c
  5520  002DB0  6ED9               	movwf	fsr2l,c
  5521  002DB2  0E05               	movlw	high _TaskTable
  5522  002DB4  20F4               	addwfc	prodh,w,c
  5523  002DB6  6EDA               	movwf	fsr2h,c
  5524  002DB8  0E01               	movlw	1
  5525  002DBA  6EDF               	movwf	indf2,c
  5526                           
  5527                           ; BSR set to: 3
  5528                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5529  002DBC  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5530  002DBE  0D08               	mullw	8
  5531  002DC0  0EA4               	movlw	low _TaskTable
  5532  002DC2  24F3               	addwf	prodl,w,c
  5533  002DC4  6ED9               	movwf	fsr2l,c
  5534  002DC6  0E05               	movlw	high _TaskTable
  5535  002DC8  20F4               	addwfc	prodh,w,c
  5536  002DCA  6EDA               	movwf	fsr2h,c
  5537  002DCC  D801               	call	u16228
  5538  002DCE  D017               	goto	u16229
  5539  002DD0                     u16228:
  5540  002DD0  0005               	push	
  5541  002DD2  6EFA               	movwf	pclath,c
  5542  002DD4  50DE               	movf	postinc2,w,c
  5543  002DD6  6EFD               	movwf	tosl,c
  5544  002DD8  50DE               	movf	postinc2,w,c
  5545  002DDA  6EFE               	movwf	tosh,c
  5546  002DDC  50F8               	movf	tblptru,w,c
  5547  002DDE  6EFF               	movwf	tosu,c
  5548  002DE0  50FA               	movf	pclath,w,c
  5549  002DE2  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5550  002DE4  0D08               	mullw	8
  5551  002DE6  0E07               	movlw	7
  5552  002DE8  26F3               	addwf	prodl,f,c
  5553  002DEA  0E00               	movlw	0
  5554  002DEC  22F4               	addwfc	prodh,f,c
  5555  002DEE  0EA4               	movlw	low _TaskTable
  5556  002DF0  24F3               	addwf	prodl,w,c
  5557  002DF2  6ED9               	movwf	fsr2l,c
  5558  002DF4  0E05               	movlw	high _TaskTable
  5559  002DF6  20F4               	addwfc	prodh,w,c
  5560  002DF8  6EDA               	movwf	fsr2h,c
  5561  002DFA  50DF               	movf	indf2,w,c
  5562  002DFC  0012               	return		;indir
  5563  002DFE                     u16229:
  5564                           
  5565                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5566  002DFE  0103               	movlb	3	; () banked
  5567  002E00  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5568  002E02  0D08               	mullw	8
  5569  002E04  0E02               	movlw	2
  5570  002E06  26F3               	addwf	prodl,f,c
  5571  002E08  0E00               	movlw	0
  5572  002E0A  22F4               	addwfc	prodh,f,c
  5573  002E0C  0EA4               	movlw	low _TaskTable
  5574  002E0E  24F3               	addwf	prodl,w,c
  5575  002E10  6ED9               	movwf	fsr2l,c
  5576  002E12  0E05               	movlw	high _TaskTable
  5577  002E14  20F4               	addwfc	prodh,w,c
  5578  002E16  6EDA               	movwf	fsr2h,c
  5579  002E18  0E00               	movlw	0
  5580  002E1A  6EDF               	movwf	indf2,c
  5581  002E1C                     l775:
  5582                           
  5583                           ; BSR set to: 3
  5584                           
  5585                           ; BSR set to: 3
  5586                           
  5587                           ;os_sched.c: 117: else
  5588                           ;os_sched.c: 118: {
  5589                           
  5590                           ; BSR set to: 3
  5591  002E1C  2BFE               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5592  002E1E  D772               	goto	l16487
  5593  002E20                     __end_of_ScheduleTasks:
  5594                           	opt stack 0
  5595                           tosu	equ	0xFFF
  5596                           tosh	equ	0xFFE
  5597                           tosl	equ	0xFFD
  5598                           pclath	equ	0xFFA
  5599                           tblptru	equ	0xFF8
  5600                           tblptrh	equ	0xFF7
  5601                           tblptrl	equ	0xFF6
  5602                           tablat	equ	0xFF5
  5603                           prodh	equ	0xFF4
  5604                           prodl	equ	0xFF3
  5605                           intcon	equ	0xFF2
  5606                           intcon2	equ	0xFF1
  5607                           intcon3	equ	0xFF0
  5608                           postinc0	equ	0xFEE
  5609                           wreg	equ	0xFE8
  5610                           postinc1	equ	0xFE6
  5611                           postdec1	equ	0xFE5
  5612                           fsr1h	equ	0xFE2
  5613                           fsr1l	equ	0xFE1
  5614                           indf2	equ	0xFDF
  5615                           postinc2	equ	0xFDE
  5616                           postdec2	equ	0xFDD
  5617                           fsr2h	equ	0xFDA
  5618                           fsr2l	equ	0xFD9
  5619                           status	equ	0xFD8
  5620                           
  5621 ;; *************** function _InitializeTasks *****************
  5622 ;; Defined at:
  5623 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  ActiveTaskIn    1    0[BANK4 ] unsigned char 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0
  5639 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5640 ;;      Totals:         0       0       0       0       2       1       0       0       0       0       0       0       
      +0       0       0       0
  5641 ;;Total ram usage:        3 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:   21
  5644 ;; This function calls:
  5645 ;;		_I2cSlv_MainTask
  5646 ;;		_Led_MainTask
  5647 ;;		_MdmHttp_MainTask
  5648 ;;		_Mdm_DrvMainFn
  5649 ;;		_Mdm_MainTask
  5650 ;;		_MyApp_Task
  5651 ;;		_Rtcm_MainTask
  5652 ;;		_Term_MainTask
  5653 ;;		_UsbDevice_MainTask
  5654 ;;		_Wdg_MainTask
  5655 ;; This function is called by:
  5656 ;;		_Sch_MainScheduler
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text15
  5661  00522C                     __ptext15:
  5662                           	opt stack 0
  5663  00522C                     _InitializeTasks:
  5664                           	opt stack 8
  5665                           
  5666                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5667                           
  5668                           ; BSR set to: 4
  5669                           ;incstack = 0
  5670  00522C  0E00               	movlw	0
  5671  00522E  0104               	movlb	4	; () banked
  5672  005230  6FEA               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5673                           
  5674                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5675  005232  0E00               	movlw	0
  5676  005234  6FEA               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5677  005236                     l16475:
  5678                           
  5679                           ; BSR set to: 4
  5680  005236  0E30               	movlw	low _TaskNumber
  5681  005238  6EF6               	movwf	tblptrl,c
  5682  00523A                     	if	1	;There is more than 1 active tblptr byte
  5683  00523A  0EFC               	movlw	high _TaskNumber
  5684  00523C  6EF7               	movwf	tblptrh,c
  5685  00523E                     	endif
  5686  00523E                     	if	0	;There are less than 3 active tblptr bytes
  5687  00523E                     	endif
  5688  00523E  51EA               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5689  005240  0103               	movlb	3	; () banked
  5690  005242  6FFE               	movwf	??_InitializeTasks& (0+255),b
  5691  005244  6BFF               	clrf	(??_InitializeTasks+1)& (0+255),b
  5692  005246  0009               	tblrd		*+
  5693  005248  50F5               	movf	tablat,w,c
  5694  00524A  5DFE               	subwf	??_InitializeTasks& (0+255),w,b
  5695  00524C  0009               	tblrd		*+
  5696  00524E  50F5               	movf	tablat,w,c
  5697  005250  59FF               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5698  005252  B0D8               	btfsc	status,0,c
  5699  005254  0012               	return	
  5700                           
  5701                           ; BSR set to: 3
  5702                           ;os_sched.c: 86: {
  5703                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5704                           
  5705                           ; BSR set to: 3
  5706                           
  5707                           ; BSR set to: 3
  5708  005256  0104               	movlb	4	; () banked
  5709  005258  51EA               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5710  00525A  0D08               	mullw	8
  5711  00525C  0EA4               	movlw	low _TaskTable
  5712  00525E  24F3               	addwf	prodl,w,c
  5713  005260  6ED9               	movwf	fsr2l,c
  5714  005262  0E05               	movlw	high _TaskTable
  5715  005264  20F4               	addwfc	prodh,w,c
  5716  005266  6EDA               	movwf	fsr2h,c
  5717  005268  D801               	call	u16188
  5718  00526A  D017               	goto	u16189
  5719  00526C                     u16188:
  5720  00526C  0005               	push	
  5721  00526E  6EFA               	movwf	pclath,c
  5722  005270  50DE               	movf	postinc2,w,c
  5723  005272  6EFD               	movwf	tosl,c
  5724  005274  50DE               	movf	postinc2,w,c
  5725  005276  6EFE               	movwf	tosh,c
  5726  005278  50F8               	movf	tblptru,w,c
  5727  00527A  6EFF               	movwf	tosu,c
  5728  00527C  50FA               	movf	pclath,w,c
  5729  00527E  51EA               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5730  005280  0D08               	mullw	8
  5731  005282  0E07               	movlw	7
  5732  005284  26F3               	addwf	prodl,f,c
  5733  005286  0E00               	movlw	0
  5734  005288  22F4               	addwfc	prodh,f,c
  5735  00528A  0EA4               	movlw	low _TaskTable
  5736  00528C  24F3               	addwf	prodl,w,c
  5737  00528E  6ED9               	movwf	fsr2l,c
  5738  005290  0E05               	movlw	high _TaskTable
  5739  005292  20F4               	addwfc	prodh,w,c
  5740  005294  6EDA               	movwf	fsr2h,c
  5741  005296  50DF               	movf	indf2,w,c
  5742  005298  0012               	return		;indir
  5743  00529A                     u16189:
  5744  00529A  0104               	movlb	4	; () banked
  5745  00529C  2BEA               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5746  00529E  D7CB               	goto	l16475
  5747  0052A0                     __end_of_InitializeTasks:
  5748                           	opt stack 0
  5749                           tosu	equ	0xFFF
  5750                           tosh	equ	0xFFE
  5751                           tosl	equ	0xFFD
  5752                           pclath	equ	0xFFA
  5753                           tblptru	equ	0xFF8
  5754                           tblptrh	equ	0xFF7
  5755                           tblptrl	equ	0xFF6
  5756                           tablat	equ	0xFF5
  5757                           prodh	equ	0xFF4
  5758                           prodl	equ	0xFF3
  5759                           intcon	equ	0xFF2
  5760                           intcon2	equ	0xFF1
  5761                           intcon3	equ	0xFF0
  5762                           postinc0	equ	0xFEE
  5763                           wreg	equ	0xFE8
  5764                           postinc1	equ	0xFE6
  5765                           postdec1	equ	0xFE5
  5766                           fsr1h	equ	0xFE2
  5767                           fsr1l	equ	0xFE1
  5768                           indf2	equ	0xFDF
  5769                           postinc2	equ	0xFDE
  5770                           postdec2	equ	0xFDD
  5771                           fsr2h	equ	0xFDA
  5772                           fsr2l	equ	0xFD9
  5773                           status	equ	0xFD8
  5774                           
  5775 ;; *************** function _MyApp_Task *****************
  5776 ;; Defined at:
  5777 ;;		line 148 in file "../Source/c/04_App/app.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  Options         1    wreg     unsigned char 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  Options         1    0[COMRAM] unsigned char 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5795 ;;Total ram usage:        0 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:   19
  5798 ;; This function calls:
  5799 ;;		_Eeprom_Reset
  5800 ;;		_Led_SetLedBlinkTime
  5801 ;;		_addCmdFsm
  5802 ;;		_delCmdFsm
  5803 ;;		_detectCmd
  5804 ;;		_initFsm
  5805 ;;		_triggerCmdFsm
  5806 ;; This function is called by:
  5807 ;;		_InitializeTasks
  5808 ;;		_ScheduleTasks
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text16
  5813  0034F6                     __ptext16:
  5814                           	opt stack 0
  5815  0034F6                     _MyApp_Task:
  5816                           	opt stack 9
  5817                           
  5818                           ;app.c: 150: static gateFsmStates currentState = GATE_INIT;
  5819                           ;app.c: 152: switch (SystemState)
  5820                           
  5821                           ; BSR set to: 3
  5822                           ;incstack = 0
  5823  0034F6  D068               	goto	l2590
  5824  0034F8                     
  5825                           ;app.c: 157: Led_SetLedBlinkTime(1u,100,900);
  5826  0034F8  0E00               	movlw	0
  5827  0034FA  0100               	movlb	0	; () banked
  5828  0034FC  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5829  0034FE  0E64               	movlw	100
  5830  003500  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5831  003502  0E03               	movlw	3
  5832  003504  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5833  003506  0E84               	movlw	132
  5834  003508  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5835  00350A  0E01               	movlw	1
  5836  00350C  EC57  F02D         	call	_Led_SetLedBlinkTime
  5837                           
  5838                           ;app.c: 158: break;
  5839  003510  0012               	return	
  5840  003512                     
  5841                           ;app.c: 165: if (initFsm())
  5842  003512  ECAF  F022         	call	_initFsm	;wreg free
  5843  003516  0900               	iorlw	0
  5844  003518  B4D8               	btfsc	status,2,c
  5845  00351A  0012               	return	
  5846                           
  5847                           ;app.c: 166: {
  5848                           ;app.c: 167: currentState = GATE_WAIT_EVENT;
  5849  00351C  0E01               	movlw	1
  5850  00351E  0101               	movlb	1	; () banked
  5851  003520  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5852                           
  5853                           ; BSR set to: 1
  5854                           ;app.c: 168: }
  5855                           ;app.c: 169: break;
  5856  003522  0012               	return	
  5857  003524                     
  5858                           ; BSR set to: 1
  5859                           ;app.c: 172: currentState = detectCmd();
  5860                           
  5861                           ; BSR set to: 1
  5862  003524  ECEC  F024         	call	_detectCmd	;wreg free
  5863  003528  0101               	movlb	1	; () banked
  5864  00352A  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5865                           
  5866                           ;app.c: 173: break;
  5867  00352C  0012               	return	
  5868  00352E                     
  5869                           ; BSR set to: 1
  5870                           ;app.c: 176: if (addCmdFsm(receivedNumber, smsText))
  5871                           
  5872                           ; BSR set to: 1
  5873  00352E  0E2F               	movlw	low _receivedNumber
  5874  003530  6F11               	movwf	addCmdFsm@receivedNumber& (0+255),b
  5875  003532  0E03               	movlw	high _receivedNumber
  5876  003534  6F12               	movwf	(addCmdFsm@receivedNumber+1)& (0+255),b
  5877  003536  0E93               	movlw	low _smsText
  5878  003538  6F13               	movwf	addCmdFsm@smsText& (0+255),b
  5879  00353A  0E04               	movlw	high _smsText
  5880  00353C  6F14               	movwf	(addCmdFsm@smsText+1)& (0+255),b
  5881  00353E  ECCE  F01F         	call	_addCmdFsm	;wreg free
  5882  003542  0900               	iorlw	0
  5883  003544  B4D8               	btfsc	status,2,c
  5884  003546  0012               	return	
  5885                           
  5886                           ;app.c: 177: {
  5887                           ;app.c: 178: currentState = GATE_WAIT_EVENT;
  5888  003548  0E01               	movlw	1
  5889  00354A  0101               	movlb	1	; () banked
  5890  00354C  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5891                           
  5892                           ; BSR set to: 1
  5893                           ;app.c: 179: }
  5894                           ;app.c: 180: break;
  5895  00354E  0012               	return	
  5896  003550                     
  5897                           ; BSR set to: 1
  5898                           ;app.c: 183: if (delCmdFsm(receivedNumber, smsText))
  5899                           
  5900                           ; BSR set to: 1
  5901  003550  0E2F               	movlw	low _receivedNumber
  5902  003552  6F11               	movwf	delCmdFsm@receivedNumber& (0+255),b
  5903  003554  0E03               	movlw	high _receivedNumber
  5904  003556  6F12               	movwf	(delCmdFsm@receivedNumber+1)& (0+255),b
  5905  003558  0E93               	movlw	low _smsText
  5906  00355A  6F13               	movwf	delCmdFsm@smsText& (0+255),b
  5907  00355C  0E04               	movlw	high _smsText
  5908  00355E  6F14               	movwf	(delCmdFsm@smsText+1)& (0+255),b
  5909  003560  ECFC  F023         	call	_delCmdFsm	;wreg free
  5910  003564  0900               	iorlw	0
  5911  003566  B4D8               	btfsc	status,2,c
  5912  003568  0012               	return	
  5913                           
  5914                           ;app.c: 184: {
  5915                           ;app.c: 185: currentState = GATE_WAIT_EVENT;
  5916  00356A  0E01               	movlw	1
  5917  00356C  0101               	movlb	1	; () banked
  5918  00356E  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5919                           
  5920                           ; BSR set to: 1
  5921                           ;app.c: 186: }
  5922                           ;app.c: 187: break;
  5923  003570  0012               	return	
  5924  003572                     
  5925                           ; BSR set to: 1
  5926                           ;app.c: 190: if (triggerCmdFsm(receivedNumber))
  5927                           
  5928                           ; BSR set to: 1
  5929  003572  0E2F               	movlw	low _receivedNumber
  5930  003574  6F11               	movwf	triggerCmdFsm@receivedNumber& (0+255),b
  5931  003576  0E03               	movlw	high _receivedNumber
  5932  003578  6F12               	movwf	(triggerCmdFsm@receivedNumber+1)& (0+255),b
  5933  00357A  ECDB  F028         	call	_triggerCmdFsm	;wreg free
  5934  00357E  0900               	iorlw	0
  5935  003580  B4D8               	btfsc	status,2,c
  5936  003582  0012               	return	
  5937                           
  5938                           ;app.c: 191: {
  5939                           ;app.c: 192: currentState = GATE_WAIT_EVENT;
  5940  003584  0E01               	movlw	1
  5941  003586  0101               	movlb	1	; () banked
  5942  003588  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5943                           
  5944                           ; BSR set to: 1
  5945                           ;app.c: 193: }
  5946                           ;app.c: 194: break;
  5947  00358A  0012               	return	
  5948  00358C                     
  5949                           ; BSR set to: 1
  5950                           ;app.c: 197: if (Eeprom_Reset() == 0)
  5951                           
  5952                           ; BSR set to: 1
  5953  00358C  EC83  F02F         	call	_Eeprom_Reset	;wreg free
  5954  003590  0900               	iorlw	0
  5955  003592  A4D8               	btfss	status,2,c
  5956  003594  0012               	return	
  5957                           
  5958                           ;app.c: 198: {
  5959                           ;app.c: 199: currentState = GATE_INIT;
  5960  003596  0E00               	movlw	0
  5961  003598  0101               	movlb	1	; () banked
  5962  00359A  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5963                           
  5964                           ; BSR set to: 1
  5965                           ;app.c: 205: }
  5966                           
  5967                           ; BSR set to: 1
  5968                           ;app.c: 204: break;
  5969                           
  5970                           ;app.c: 203: default:
  5971                           
  5972                           ; BSR set to: 1
  5973                           ;app.c: 200: }
  5974                           ;app.c: 201: break;
  5975  00359C  0012               	return	
  5976  00359E                     
  5977                           ; BSR set to: 1
  5978  00359E  0101               	movlb	1	; () banked
  5979  0035A0  51DB               	movf	MyApp_Task@currentState& (0+255),w,b
  5980                           
  5981                           ; Switch size 1, requested type "space"
  5982                           ; Number of cases is 6, Range of values is 0 to 5
  5983                           ; switch strategies available:
  5984                           ; Name         Instructions Cycles
  5985                           ; simple_byte           19    10 (average)
  5986                           ;	Chosen strategy is simple_byte
  5987  0035A2  0A00               	xorlw	0	; case 0
  5988  0035A4  B4D8               	btfsc	status,2,c
  5989  0035A6  D7B5               	goto	l2595
  5990  0035A8  0A01               	xorlw	1	; case 1
  5991  0035AA  B4D8               	btfsc	status,2,c
  5992  0035AC  D7BB               	goto	l2598
  5993  0035AE  0A03               	xorlw	3	; case 2
  5994  0035B0  B4D8               	btfsc	status,2,c
  5995  0035B2  D7BD               	goto	l2599
  5996  0035B4  0A01               	xorlw	1	; case 3
  5997  0035B6  B4D8               	btfsc	status,2,c
  5998  0035B8  D7CB               	goto	l2601
  5999  0035BA  0A07               	xorlw	7	; case 4
  6000  0035BC  B4D8               	btfsc	status,2,c
  6001  0035BE  D7D9               	goto	l2603
  6002  0035C0  0A01               	xorlw	1	; case 5
  6003  0035C2  A4D8               	btfss	status,2,c
  6004                           
  6005                           ; BSR set to: 1
  6006                           ;app.c: 211: }
  6007                           
  6008                           ; BSR set to: 1
  6009                           ;app.c: 210: break;
  6010                           
  6011                           ;app.c: 209: default:
  6012                           
  6013                           ; BSR set to: 1
  6014                           ;app.c: 206: break;
  6015  0035C4  0012               	return	
  6016  0035C6  D7E2               	goto	l2605
  6017  0035C8                     l2590:
  6018                           
  6019                           ; BSR set to: 1
  6020  0035C8  0100               	movlb	0	; () banked
  6021  0035CA  51D5               	movf	_SystemState& (0+255),w,b
  6022                           
  6023                           ; Switch size 1, requested type "space"
  6024                           ; Number of cases is 2, Range of values is 0 to 1
  6025                           ; switch strategies available:
  6026                           ; Name         Instructions Cycles
  6027                           ; simple_byte            7     4 (average)
  6028                           ;	Chosen strategy is simple_byte
  6029  0035CC  0A00               	xorlw	0	; case 0
  6030  0035CE  B4D8               	btfsc	status,2,c
  6031  0035D0  D793               	goto	l2591
  6032  0035D2  0A01               	xorlw	1	; case 1
  6033  0035D4  A4D8               	btfss	status,2,c
  6034  0035D6  0012               	return	
  6035  0035D8  D7E2               	goto	l2594
  6036  0035DA                     __end_of_MyApp_Task:
  6037                           	opt stack 0
  6038                           tosu	equ	0xFFF
  6039                           tosh	equ	0xFFE
  6040                           tosl	equ	0xFFD
  6041                           pclath	equ	0xFFA
  6042                           tblptru	equ	0xFF8
  6043                           tblptrh	equ	0xFF7
  6044                           tblptrl	equ	0xFF6
  6045                           tablat	equ	0xFF5
  6046                           prodh	equ	0xFF4
  6047                           prodl	equ	0xFF3
  6048                           intcon	equ	0xFF2
  6049                           intcon2	equ	0xFF1
  6050                           intcon3	equ	0xFF0
  6051                           postinc0	equ	0xFEE
  6052                           wreg	equ	0xFE8
  6053                           postinc1	equ	0xFE6
  6054                           postdec1	equ	0xFE5
  6055                           fsr1h	equ	0xFE2
  6056                           fsr1l	equ	0xFE1
  6057                           indf2	equ	0xFDF
  6058                           postinc2	equ	0xFDE
  6059                           postdec2	equ	0xFDD
  6060                           fsr2h	equ	0xFDA
  6061                           fsr2l	equ	0xFD9
  6062                           status	equ	0xFD8
  6063                           
  6064 ;; *************** function _Term_MainTask *****************
  6065 ;; Defined at:
  6066 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  Options         1    wreg     unsigned char 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  Options         1    0[COMRAM] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:   17
  6087 ;; This function calls:
  6088 ;;		_Term_MainSm
  6089 ;; This function is called by:
  6090 ;;		_InitializeTasks
  6091 ;;		_ScheduleTasks
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text17
  6096  00689A                     __ptext17:
  6097                           	opt stack 0
  6098  00689A                     _Term_MainTask:
  6099                           	opt stack 11
  6100                           
  6101                           ;term.c: 847: switch (SystemState)
  6102                           
  6103                           ;incstack = 0
  6104  00689A  D003               	goto	l2489
  6105  00689C                     
  6106                           ;term.c: 858: Term_MainSm();
  6107  00689C  EC5B  F008         	call	_Term_MainSm	;wreg free
  6108                           
  6109                           ;term.c: 865: }
  6110                           
  6111                           ;term.c: 864: break;
  6112                           
  6113                           ;term.c: 863: default:
  6114                           
  6115                           ;term.c: 860: break;
  6116  0068A0  0012               	return	
  6117  0068A2                     l2489:
  6118  0068A2  0100               	movlb	0	; () banked
  6119  0068A4  51D5               	movf	_SystemState& (0+255),w,b
  6120                           
  6121                           ; Switch size 1, requested type "space"
  6122                           ; Number of cases is 2, Range of values is 0 to 1
  6123                           ; switch strategies available:
  6124                           ; Name         Instructions Cycles
  6125                           ; simple_byte            7     4 (average)
  6126                           ;	Chosen strategy is simple_byte
  6127  0068A6  0A00               	xorlw	0	; case 0
  6128  0068A8  B4D8               	btfsc	status,2,c
  6129  0068AA  0012               	return	
  6130  0068AC  0A01               	xorlw	1	; case 1
  6131  0068AE  A4D8               	btfss	status,2,c
  6132  0068B0  0012               	return	
  6133  0068B2  D7F4               	goto	l2492
  6134  0068B4                     __end_of_Term_MainTask:
  6135                           	opt stack 0
  6136                           tosu	equ	0xFFF
  6137                           tosh	equ	0xFFE
  6138                           tosl	equ	0xFFD
  6139                           pclath	equ	0xFFA
  6140                           tblptru	equ	0xFF8
  6141                           tblptrh	equ	0xFF7
  6142                           tblptrl	equ	0xFF6
  6143                           tablat	equ	0xFF5
  6144                           prodh	equ	0xFF4
  6145                           prodl	equ	0xFF3
  6146                           intcon	equ	0xFF2
  6147                           intcon2	equ	0xFF1
  6148                           intcon3	equ	0xFF0
  6149                           postinc0	equ	0xFEE
  6150                           wreg	equ	0xFE8
  6151                           postinc1	equ	0xFE6
  6152                           postdec1	equ	0xFE5
  6153                           fsr1h	equ	0xFE2
  6154                           fsr1l	equ	0xFE1
  6155                           indf2	equ	0xFDF
  6156                           postinc2	equ	0xFDE
  6157                           postdec2	equ	0xFDD
  6158                           fsr2h	equ	0xFDA
  6159                           fsr2l	equ	0xFD9
  6160                           status	equ	0xFD8
  6161                           
  6162 ;; *************** function _Rtcm_MainTask *****************
  6163 ;; Defined at:
  6164 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  Options         1    wreg     unsigned char 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  Options         1    0[COMRAM] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6182 ;;Total ram usage:        0 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:   14
  6185 ;; This function calls:
  6186 ;;		_Rtcc_AlarmConfig
  6187 ;;		_Rtcc_LockRtc
  6188 ;;		_Rtcc_RtcConfig
  6189 ;;		_Rtcc_SetRtcStatus
  6190 ;;		_Rtcc_UnlockRtc
  6191 ;;		_Rtcm_GetRtccDate
  6192 ;;		_Rtcm_SetRtccDate
  6193 ;; This function is called by:
  6194 ;;		_InitializeTasks
  6195 ;;		_ScheduleTasks
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text18
  6200  004E84                     __ptext18:
  6201                           	opt stack 0
  6202  004E84                     _Rtcm_MainTask:
  6203                           	opt stack 14
  6204                           
  6205                           ;rtcm.c: 101: switch (SystemState)
  6206                           
  6207                           ;incstack = 0
  6208  004E84  D03D               	goto	l2219
  6209  004E86                     l2220:
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6213  004E86  86CD               	bsf	4045,3,c	;volatile
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6217  004E88  0E00               	movlw	0
  6218  004E8A  0103               	movlb	3	; () banked
  6219  004E8C  6FBA               	movwf	_RtcConfig& (0+255),b
  6220                           
  6221                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6222  004E8E  0E00               	movlw	0
  6223  004E90  6FBB               	movwf	(_RtcConfig+1)& (0+255),b
  6224                           
  6225                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6226  004E92  0E01               	movlw	1
  6227  004E94  6FBC               	movwf	(_RtcConfig+2)& (0+255),b
  6228                           
  6229                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6230  004E96  0E01               	movlw	1
  6231  004E98  6FBD               	movwf	(_RtcConfig+3)& (0+255),b
  6232                           
  6233                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6234  004E9A  0E01               	movlw	1
  6235  004E9C  6FB6               	movwf	_AlCfg& (0+255),b
  6236                           
  6237                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6238  004E9E  0E01               	movlw	1
  6239  004EA0  6FB7               	movwf	(_AlCfg+1)& (0+255),b
  6240                           
  6241                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6242  004EA2  0E01               	movlw	1
  6243  004EA4  6FB8               	movwf	(_AlCfg+2)& (0+255),b
  6244                           
  6245                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6246  004EA6  0E00               	movlw	0
  6247  004EA8  6FB9               	movwf	(_AlCfg+3)& (0+255),b
  6248                           
  6249                           ; BSR set to: 3
  6250                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6251  004EAA  ECE9  F034         	call	_Rtcc_UnlockRtc	;wreg free
  6252                           
  6253                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6254  004EAE  0EBA               	movlw	low _RtcConfig
  6255  004EB0  0100               	movlb	0	; () banked
  6256  004EB2  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6257  004EB4  0E03               	movlw	high _RtcConfig
  6258  004EB6  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6259  004EB8  EC4D  F024         	call	_Rtcc_RtcConfig	;wreg free
  6260                           
  6261                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6262  004EBC  0EB6               	movlw	low _AlCfg
  6263  004EBE  0100               	movlb	0	; () banked
  6264  004EC0  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6265  004EC2  0E03               	movlw	high _AlCfg
  6266  004EC4  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6267  004EC6  EC69  F02A         	call	_Rtcc_AlarmConfig	;wreg free
  6268                           
  6269                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6270  004ECA  0E01               	movlw	1
  6271  004ECC  EC98  F034         	call	_Rtcc_SetRtcStatus
  6272                           
  6273                           ;rtcm.c: 127: Rtcc_LockRtc();
  6274  004ED0  ECF1  F034         	call	_Rtcc_LockRtc	;wreg free
  6275                           
  6276                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6277  004ED4  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6278  004ED8  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6279  004EDC  0E07               	movlw	7
  6280  004EDE                     u16101:
  6281  004EDE  CFDB FFEB          	movff	plusw2,plusw0
  6282  004EE2  06E8               	decf	wreg,f,c
  6283  004EE4  E2FC               	bc	u16101
  6284  004EE6  EC03  F02D         	call	_Rtcm_SetRtccDate	;wreg free
  6285                           
  6286                           ;rtcm.c: 154: break;
  6287  004EEA  0012               	return	
  6288  004EEC                     
  6289                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6290  004EEC  EC06  F02B         	call	_Rtcm_GetRtccDate	;wreg free
  6291  004EF0  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6292  004EF4  0E07               	movlw	7
  6293  004EF6                     u16111:
  6294  004EF6  CFEB FFDB          	movff	plusw0,plusw2
  6295  004EFA  06E8               	decf	wreg,f,c
  6296  004EFC  E2FC               	bc	u16111
  6297                           
  6298                           ;rtcm.c: 165: }
  6299                           
  6300                           ;rtcm.c: 164: break;
  6301                           
  6302                           ;rtcm.c: 163: default:
  6303                           
  6304                           ;rtcm.c: 160: break;
  6305  004EFE  0012               	return	
  6306  004F00                     l2219:
  6307  004F00  0100               	movlb	0	; () banked
  6308  004F02  51D5               	movf	_SystemState& (0+255),w,b
  6309                           
  6310                           ; Switch size 1, requested type "space"
  6311                           ; Number of cases is 2, Range of values is 0 to 1
  6312                           ; switch strategies available:
  6313                           ; Name         Instructions Cycles
  6314                           ; simple_byte            7     4 (average)
  6315                           ;	Chosen strategy is simple_byte
  6316  004F04  0A00               	xorlw	0	; case 0
  6317  004F06  B4D8               	btfsc	status,2,c
  6318  004F08  D7BE               	goto	l2220
  6319  004F0A  0A01               	xorlw	1	; case 1
  6320  004F0C  A4D8               	btfss	status,2,c
  6321  004F0E  0012               	return	
  6322  004F10  D7ED               	goto	l2222
  6323  004F12                     __end_of_Rtcm_MainTask:
  6324                           	opt stack 0
  6325                           tosu	equ	0xFFF
  6326                           tosh	equ	0xFFE
  6327                           tosl	equ	0xFFD
  6328                           pclath	equ	0xFFA
  6329                           tblptru	equ	0xFF8
  6330                           tblptrh	equ	0xFF7
  6331                           tblptrl	equ	0xFF6
  6332                           tablat	equ	0xFF5
  6333                           prodh	equ	0xFF4
  6334                           prodl	equ	0xFF3
  6335                           intcon	equ	0xFF2
  6336                           intcon2	equ	0xFF1
  6337                           intcon3	equ	0xFF0
  6338                           postinc0	equ	0xFEE
  6339                           plusw0	equ	0xFEB
  6340                           wreg	equ	0xFE8
  6341                           postinc1	equ	0xFE6
  6342                           postdec1	equ	0xFE5
  6343                           fsr1h	equ	0xFE2
  6344                           fsr1l	equ	0xFE1
  6345                           indf2	equ	0xFDF
  6346                           postinc2	equ	0xFDE
  6347                           postdec2	equ	0xFDD
  6348                           plusw2	equ	0xFDB
  6349                           fsr2h	equ	0xFDA
  6350                           fsr2l	equ	0xFD9
  6351                           status	equ	0xFD8
  6352                           
  6353 ;; *************** function _Led_MainTask *****************
  6354 ;; Defined at:
  6355 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;  Options         1    wreg     unsigned char 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  Options         1    0[COMRAM] unsigned char 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6371 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6372 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6373 ;;Total ram usage:        1 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; Hardware stack levels required when called:   14
  6376 ;; This function calls:
  6377 ;;		_LedStateMachine
  6378 ;; This function is called by:
  6379 ;;		_InitializeTasks
  6380 ;;		_ScheduleTasks
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text19
  6385  003AE2                     __ptext19:
  6386                           	opt stack 0
  6387  003AE2                     _Led_MainTask:
  6388                           	opt stack 14
  6389                           
  6390                           ;led.c: 300: switch (SystemState)
  6391                           
  6392                           ;incstack = 0
  6393  003AE2  D05C               	goto	l2133
  6394  003AE4                     l2134:
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6398  003AE4  9895               	bcf	3989,4,c	;volatile
  6399                           
  6400                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6401  003AE6  9A95               	bcf	3989,5,c	;volatile
  6402                           
  6403                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6404  003AE8  9C95               	bcf	3989,6,c	;volatile
  6405                           
  6406                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6407  003AEA  9883               	bcf	3971,4,c	;volatile
  6408                           
  6409                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6410  003AEC  9A83               	bcf	3971,5,c	;volatile
  6411                           
  6412                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6413  003AEE  9C83               	bcf	3971,6,c	;volatile
  6414                           
  6415                           ;led.c: 311: break;
  6416  003AF0  0012               	return	
  6417  003AF2                     
  6418                           ; BSR set to: 0
  6419                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6420                           
  6421                           ; BSR set to: 0
  6422  003AF2  0EFB               	movlw	low _Led1Sts
  6423  003AF4  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6424  003AF6  0E01               	movlw	high _Led1Sts
  6425  003AF8  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6426  003AFA  0EFA               	movlw	low _Led1OutSts
  6427  003AFC  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6428  003AFE  0E01               	movlw	high _Led1OutSts
  6429  003B00  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6430  003B02  0E70               	movlw	low _Led1Blink
  6431  003B04  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6432  003B06  0E03               	movlw	high _Led1Blink
  6433  003B08  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6434  003B0A  0E94               	movlw	low _Led1Pulse
  6435  003B0C  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6436  003B0E  0E03               	movlw	high _Led1Pulse
  6437  003B10  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6438  003B12  0E01               	movlw	1
  6439  003B14  EC57  F023         	call	_LedStateMachine
  6440  003B18  0100               	movlb	0	; () banked
  6441  003B1A  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6442  003B1C  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6443  003B1E  5083               	movf	3971,w,c	;volatile
  6444  003B20  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6445  003B22  0BEF               	andlw	-17
  6446  003B24  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6447  003B26  6E83               	movwf	3971,c	;volatile
  6448                           
  6449                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6450  003B28  0EF9               	movlw	low _Led2Sts
  6451  003B2A  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6452  003B2C  0E01               	movlw	high _Led2Sts
  6453  003B2E  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6454  003B30  0EF8               	movlw	low _Led2OutSts
  6455  003B32  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6456  003B34  0E01               	movlw	high _Led2OutSts
  6457  003B36  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6458  003B38  0E67               	movlw	low _Led2Blink
  6459  003B3A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6460  003B3C  0E03               	movlw	high _Led2Blink
  6461  003B3E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6462  003B40  0E8E               	movlw	low _Led2Pulse
  6463  003B42  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6464  003B44  0E03               	movlw	high _Led2Pulse
  6465  003B46  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6466  003B48  0E02               	movlw	2
  6467  003B4A  EC57  F023         	call	_LedStateMachine
  6468  003B4E  0100               	movlb	0	; () banked
  6469  003B50  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6470  003B52  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6471  003B54  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6472  003B56  5083               	movf	3971,w,c	;volatile
  6473  003B58  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6474  003B5A  0BDF               	andlw	-33
  6475  003B5C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6476  003B5E  6E83               	movwf	3971,c	;volatile
  6477                           
  6478                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6479  003B60  0EF7               	movlw	low _Led3Sts
  6480  003B62  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6481  003B64  0E01               	movlw	high _Led3Sts
  6482  003B66  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6483  003B68  0EF6               	movlw	low _Led3OutSts
  6484  003B6A  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6485  003B6C  0E01               	movlw	high _Led3OutSts
  6486  003B6E  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6487  003B70  0E5E               	movlw	low _Led3Blink
  6488  003B72  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6489  003B74  0E03               	movlw	high _Led3Blink
  6490  003B76  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6491  003B78  0E88               	movlw	low _Led3Pulse
  6492  003B7A  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6493  003B7C  0E03               	movlw	high _Led3Pulse
  6494  003B7E  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6495  003B80  0E03               	movlw	3
  6496  003B82  EC57  F023         	call	_LedStateMachine
  6497  003B86  0100               	movlb	0	; () banked
  6498  003B88  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6499  003B8A  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6500  003B8C  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6501  003B8E  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6502  003B90  5083               	movf	3971,w,c	;volatile
  6503  003B92  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6504  003B94  0BBF               	andlw	-65
  6505  003B96  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6506  003B98  6E83               	movwf	3971,c	;volatile
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;led.c: 326: }
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;led.c: 325: break;
  6513                           
  6514                           ;led.c: 324: default:
  6515                           
  6516                           ;led.c: 321: break;
  6517  003B9A  0012               	return	
  6518  003B9C                     l2133:
  6519                           
  6520                           ; BSR set to: 0
  6521  003B9C  0100               	movlb	0	; () banked
  6522  003B9E  51D5               	movf	_SystemState& (0+255),w,b
  6523                           
  6524                           ; Switch size 1, requested type "space"
  6525                           ; Number of cases is 2, Range of values is 0 to 1
  6526                           ; switch strategies available:
  6527                           ; Name         Instructions Cycles
  6528                           ; simple_byte            7     4 (average)
  6529                           ;	Chosen strategy is simple_byte
  6530  003BA0  0A00               	xorlw	0	; case 0
  6531  003BA2  B4D8               	btfsc	status,2,c
  6532  003BA4  D79F               	goto	l2134
  6533  003BA6  0A01               	xorlw	1	; case 1
  6534  003BA8  A4D8               	btfss	status,2,c
  6535  003BAA  0012               	return	
  6536  003BAC  D7A2               	goto	l2136
  6537  003BAE                     __end_of_Led_MainTask:
  6538                           	opt stack 0
  6539                           tosu	equ	0xFFF
  6540                           tosh	equ	0xFFE
  6541                           tosl	equ	0xFFD
  6542                           pclath	equ	0xFFA
  6543                           tblptru	equ	0xFF8
  6544                           tblptrh	equ	0xFF7
  6545                           tblptrl	equ	0xFF6
  6546                           tablat	equ	0xFF5
  6547                           prodh	equ	0xFF4
  6548                           prodl	equ	0xFF3
  6549                           intcon	equ	0xFF2
  6550                           intcon2	equ	0xFF1
  6551                           intcon3	equ	0xFF0
  6552                           postinc0	equ	0xFEE
  6553                           plusw0	equ	0xFEB
  6554                           wreg	equ	0xFE8
  6555                           postinc1	equ	0xFE6
  6556                           postdec1	equ	0xFE5
  6557                           fsr1h	equ	0xFE2
  6558                           fsr1l	equ	0xFE1
  6559                           indf2	equ	0xFDF
  6560                           postinc2	equ	0xFDE
  6561                           postdec2	equ	0xFDD
  6562                           plusw2	equ	0xFDB
  6563                           fsr2h	equ	0xFDA
  6564                           fsr2l	equ	0xFD9
  6565                           status	equ	0xFD8
  6566                           
  6567 ;; *************** function _UsbDevice_MainTask *****************
  6568 ;; Defined at:
  6569 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;  Options         1    wreg     unsigned char 
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;  Options         1    0[COMRAM] unsigned char 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  1    wreg      void 
  6576 ;; Registers used:
  6577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6587 ;;Total ram usage:        0 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:   20
  6590 ;; This function calls:
  6591 ;;		_CDCTxService
  6592 ;;		_USBDeviceInit
  6593 ;;		_USBDeviceTasks
  6594 ;; This function is called by:
  6595 ;;		_InitializeTasks
  6596 ;;		_ScheduleTasks
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text20
  6601  006632                     __ptext20:
  6602                           	opt stack 0
  6603  006632                     _UsbDevice_MainTask:
  6604                           	opt stack 8
  6605                           
  6606                           ;usb_device_mgr.c: 74: switch (SystemState)
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;incstack = 0
  6610  006632  D008               	goto	l1992
  6611  006634                     
  6612                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6613  006634  EC6B  F011         	call	_USBDeviceInit	;wreg free
  6614                           
  6615                           ;usb_device_mgr.c: 80: ;
  6616                           ;usb_device_mgr.c: 81: break;
  6617  006638  0012               	return	
  6618  00663A                     
  6619                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6620  00663A  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6621                           
  6622                           ;usb_device_mgr.c: 90: CDCTxService();
  6623  00663E  EC0E  F014         	call	_CDCTxService	;wreg free
  6624                           
  6625                           ;usb_device_mgr.c: 101: }
  6626                           
  6627                           ;usb_device_mgr.c: 100: break;
  6628                           
  6629                           ;usb_device_mgr.c: 99: default:
  6630                           
  6631                           ;usb_device_mgr.c: 96: break;
  6632  006642  0012               	return	
  6633  006644                     l1992:
  6634  006644  0100               	movlb	0	; () banked
  6635  006646  51D5               	movf	_SystemState& (0+255),w,b
  6636                           
  6637                           ; Switch size 1, requested type "space"
  6638                           ; Number of cases is 2, Range of values is 0 to 1
  6639                           ; switch strategies available:
  6640                           ; Name         Instructions Cycles
  6641                           ; simple_byte            7     4 (average)
  6642                           ;	Chosen strategy is simple_byte
  6643  006648  0A00               	xorlw	0	; case 0
  6644  00664A  B4D8               	btfsc	status,2,c
  6645  00664C  D7F3               	goto	l1993
  6646  00664E  0A01               	xorlw	1	; case 1
  6647  006650  A4D8               	btfss	status,2,c
  6648  006652  0012               	return	
  6649  006654  D7F2               	goto	l1995
  6650  006656                     __end_of_UsbDevice_MainTask:
  6651                           	opt stack 0
  6652                           tosu	equ	0xFFF
  6653                           tosh	equ	0xFFE
  6654                           tosl	equ	0xFFD
  6655                           pclath	equ	0xFFA
  6656                           tblptru	equ	0xFF8
  6657                           tblptrh	equ	0xFF7
  6658                           tblptrl	equ	0xFF6
  6659                           tablat	equ	0xFF5
  6660                           prodh	equ	0xFF4
  6661                           prodl	equ	0xFF3
  6662                           intcon	equ	0xFF2
  6663                           intcon2	equ	0xFF1
  6664                           intcon3	equ	0xFF0
  6665                           postinc0	equ	0xFEE
  6666                           plusw0	equ	0xFEB
  6667                           wreg	equ	0xFE8
  6668                           postinc1	equ	0xFE6
  6669                           postdec1	equ	0xFE5
  6670                           fsr1h	equ	0xFE2
  6671                           fsr1l	equ	0xFE1
  6672                           indf2	equ	0xFDF
  6673                           postinc2	equ	0xFDE
  6674                           postdec2	equ	0xFDD
  6675                           plusw2	equ	0xFDB
  6676                           fsr2h	equ	0xFDA
  6677                           fsr2l	equ	0xFD9
  6678                           status	equ	0xFD8
  6679                           
  6680 ;; *************** function _MdmHttp_MainTask *****************
  6681 ;; Defined at:
  6682 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  Options         1    wreg     unsigned char 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  Options         1    0[COMRAM] unsigned char 
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:   15
  6703 ;; This function calls:
  6704 ;;		_HttpGetMethod
  6705 ;;		_InitGprsNetwork
  6706 ;; This function is called by:
  6707 ;;		_InitializeTasks
  6708 ;;		_ScheduleTasks
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text21
  6713  005F4E                     __ptext21:
  6714                           	opt stack 0
  6715  005F4E                     _MdmHttp_MainTask:
  6716                           	opt stack 13
  6717                           
  6718                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6719                           
  6720                           ;incstack = 0
  6721  005F4E  D019               	goto	l1291
  6722  005F50                     
  6723                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6724  005F50  0E03               	movlw	3
  6725  005F52  0100               	movlb	0	; () banked
  6726  005F54  19D2               	xorwf	_MdmStatus& (0+255),w,b
  6727  005F56  A4D8               	btfss	status,2,c
  6728  005F58  0012               	return	
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;mdm_gsm_gprs_http.c: 570: {
  6732                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6733  005F5A  C2D6  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6734  005F5E  C2D7  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6735  005F62  C1EE  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6736  005F66  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6737  005F6A  0101               	movlb	1	; () banked
  6738  005F6C  6FED               	movwf	_GprsNetworkSts& (0+255),b
  6739                           
  6740                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6741  005F6E  0EA5               	movlw	low _HttpGetDataLocal
  6742  005F70  0100               	movlb	0	; () banked
  6743  005F72  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6744  005F74  0E03               	movlw	high _HttpGetDataLocal
  6745  005F76  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6746  005F78  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6747  005F7C  0101               	movlb	1	; () banked
  6748  005F7E  6FEC               	movwf	_HttpGetMethodSts& (0+255),b
  6749                           
  6750                           ; BSR set to: 1
  6751                           ;mdm_gsm_gprs_http.c: 581: }
  6752                           
  6753                           ; BSR set to: 1
  6754                           ;mdm_gsm_gprs_http.c: 580: break;
  6755                           
  6756                           ;mdm_gsm_gprs_http.c: 579: default:
  6757                           
  6758                           ; BSR set to: 1
  6759                           ;mdm_gsm_gprs_http.c: 575: }
  6760                           ;mdm_gsm_gprs_http.c: 576: break;
  6761  005F80  0012               	return	
  6762  005F82                     l1291:
  6763                           
  6764                           ; BSR set to: 1
  6765  005F82  0100               	movlb	0	; () banked
  6766  005F84  51D5               	movf	_SystemState& (0+255),w,b
  6767                           
  6768                           ; Switch size 1, requested type "space"
  6769                           ; Number of cases is 2, Range of values is 0 to 1
  6770                           ; switch strategies available:
  6771                           ; Name         Instructions Cycles
  6772                           ; simple_byte            7     4 (average)
  6773                           ;	Chosen strategy is simple_byte
  6774  005F86  0A00               	xorlw	0	; case 0
  6775  005F88  B4D8               	btfsc	status,2,c
  6776  005F8A  0012               	return	
  6777  005F8C  0A01               	xorlw	1	; case 1
  6778  005F8E  A4D8               	btfss	status,2,c
  6779  005F90  0012               	return	
  6780  005F92  D7DE               	goto	l1294
  6781  005F94                     __end_of_MdmHttp_MainTask:
  6782                           	opt stack 0
  6783                           tosu	equ	0xFFF
  6784                           tosh	equ	0xFFE
  6785                           tosl	equ	0xFFD
  6786                           pclath	equ	0xFFA
  6787                           tblptru	equ	0xFF8
  6788                           tblptrh	equ	0xFF7
  6789                           tblptrl	equ	0xFF6
  6790                           tablat	equ	0xFF5
  6791                           prodh	equ	0xFF4
  6792                           prodl	equ	0xFF3
  6793                           intcon	equ	0xFF2
  6794                           intcon2	equ	0xFF1
  6795                           intcon3	equ	0xFF0
  6796                           postinc0	equ	0xFEE
  6797                           plusw0	equ	0xFEB
  6798                           wreg	equ	0xFE8
  6799                           postinc1	equ	0xFE6
  6800                           postdec1	equ	0xFE5
  6801                           fsr1h	equ	0xFE2
  6802                           fsr1l	equ	0xFE1
  6803                           indf2	equ	0xFDF
  6804                           postinc2	equ	0xFDE
  6805                           postdec2	equ	0xFDD
  6806                           plusw2	equ	0xFDB
  6807                           fsr2h	equ	0xFDA
  6808                           fsr2l	equ	0xFD9
  6809                           status	equ	0xFD8
  6810                           
  6811 ;; *************** function _Mdm_MainTask *****************
  6812 ;; Defined at:
  6813 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  Options         1    wreg     unsigned char 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  Options         1    0[COMRAM] unsigned char 
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  1    wreg      void 
  6820 ;; Registers used:
  6821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6831 ;;Total ram usage:        0 bytes
  6832 ;; Hardware stack levels used:    1
  6833 ;; Hardware stack levels required when called:   15
  6834 ;; This function calls:
  6835 ;;		_CheckModem
  6836 ;;		_ConfigureModem
  6837 ;;		_GetSmsSm
  6838 ;;		_ModemEvtParser
  6839 ;;		_SendSmsSm
  6840 ;;		_TurnOnModem
  6841 ;;		_UartSetConfig
  6842 ;;		_Uart_InitUartModule
  6843 ;; This function is called by:
  6844 ;;		_InitializeTasks
  6845 ;;		_ScheduleTasks
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text22
  6850  005C9C                     __ptext22:
  6851                           	opt stack 0
  6852  005C9C                     _Mdm_MainTask:
  6853                           	opt stack 13
  6854                           
  6855                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6856                           
  6857                           ;incstack = 0
  6858  005C9C  D01E               	goto	l1107
  6859  005C9E                     
  6860                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6861  005C9E  EC29  F02C         	call	_UartSetConfig	;wreg free
  6862                           
  6863                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6864  005CA2  0E1A               	movlw	low _UartConfig
  6865  005CA4  0100               	movlb	0	; () banked
  6866  005CA6  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6867  005CA8  0E03               	movlw	high _UartConfig
  6868  005CAA  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6869  005CAC  0E01               	movlw	1
  6870  005CAE  EC5E  F005         	call	_Uart_InitUartModule
  6871                           
  6872                           ;mdm_gsm_gprs.c: 764: break;
  6873  005CB2  0012               	return	
  6874  005CB4                     
  6875                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6876  005CB4  ECC1  F012         	call	_CheckModem	;wreg free
  6877                           
  6878                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6879  005CB8  0429               	decf	_ComChecCompleted,w,c
  6880  005CBA  A4D8               	btfss	status,2,c
  6881  005CBC  D005               	goto	l1111
  6882  005CBE  0100               	movlb	0	; () banked
  6883  005CC0  51D2               	movf	_MdmStatus& (0+255),w,b
  6884  005CC2  B4D8               	btfsc	status,2,c
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;mdm_gsm_gprs.c: 772: {
  6888                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6889  005CC4  EC39  F02F         	call	_TurnOnModem	;wreg free
  6890  005CC8                     l1111:
  6891                           
  6892                           ;mdm_gsm_gprs.c: 775: }
  6893                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6894  005CC8  EC37  F01C         	call	_ConfigureModem	;wreg free
  6895                           
  6896                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6897  005CCC  EC99  F00E         	call	_ModemEvtParser	;wreg free
  6898                           
  6899                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6900  005CD0  EC4D  F015         	call	_GetSmsSm	;wreg free
  6901                           
  6902                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6903  005CD4  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6904                           
  6905                           ;mdm_gsm_gprs.c: 789: }
  6906                           
  6907                           ;mdm_gsm_gprs.c: 788: break;
  6908                           
  6909                           ;mdm_gsm_gprs.c: 787: default:
  6910                           
  6911                           ;mdm_gsm_gprs.c: 784: break;
  6912  005CD8  0012               	return	
  6913  005CDA                     l1107:
  6914  005CDA  0100               	movlb	0	; () banked
  6915  005CDC  51D5               	movf	_SystemState& (0+255),w,b
  6916                           
  6917                           ; Switch size 1, requested type "space"
  6918                           ; Number of cases is 2, Range of values is 0 to 1
  6919                           ; switch strategies available:
  6920                           ; Name         Instructions Cycles
  6921                           ; simple_byte            7     4 (average)
  6922                           ;	Chosen strategy is simple_byte
  6923  005CDE  0A00               	xorlw	0	; case 0
  6924  005CE0  B4D8               	btfsc	status,2,c
  6925  005CE2  D7DD               	goto	l1108
  6926  005CE4  0A01               	xorlw	1	; case 1
  6927  005CE6  A4D8               	btfss	status,2,c
  6928  005CE8  0012               	return	
  6929  005CEA  D7E4               	goto	l1110
  6930  005CEC                     __end_of_Mdm_MainTask:
  6931                           	opt stack 0
  6932                           tosu	equ	0xFFF
  6933                           tosh	equ	0xFFE
  6934                           tosl	equ	0xFFD
  6935                           pclath	equ	0xFFA
  6936                           tblptru	equ	0xFF8
  6937                           tblptrh	equ	0xFF7
  6938                           tblptrl	equ	0xFF6
  6939                           tablat	equ	0xFF5
  6940                           prodh	equ	0xFF4
  6941                           prodl	equ	0xFF3
  6942                           intcon	equ	0xFF2
  6943                           intcon2	equ	0xFF1
  6944                           intcon3	equ	0xFF0
  6945                           postinc0	equ	0xFEE
  6946                           plusw0	equ	0xFEB
  6947                           wreg	equ	0xFE8
  6948                           postinc1	equ	0xFE6
  6949                           postdec1	equ	0xFE5
  6950                           fsr1h	equ	0xFE2
  6951                           fsr1l	equ	0xFE1
  6952                           indf2	equ	0xFDF
  6953                           postinc2	equ	0xFDE
  6954                           postdec2	equ	0xFDD
  6955                           plusw2	equ	0xFDB
  6956                           fsr2h	equ	0xFDA
  6957                           fsr2l	equ	0xFD9
  6958                           status	equ	0xFD8
  6959                           
  6960 ;; *************** function _I2cSlv_MainTask *****************
  6961 ;; Defined at:
  6962 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;  Options         1    wreg     unsigned char 
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  Options         1    0[COMRAM] unsigned char 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      void 
  6969 ;; Registers used:
  6970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6980 ;;Total ram usage:        0 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; Hardware stack levels required when called:   14
  6983 ;; This function calls:
  6984 ;;		_I2cSendMsgSm
  6985 ;;		_I2cSetConfig
  6986 ;;		_I2c_InitI2cModule
  6987 ;;		_OsAlrm_SetOsAlarm
  6988 ;; This function is called by:
  6989 ;;		_InitializeTasks
  6990 ;;		_ScheduleTasks
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           	psect	text23
  6995  0059B2                     __ptext23:
  6996                           	opt stack 0
  6997  0059B2                     _I2cSlv_MainTask:
  6998                           	opt stack 14
  6999                           
  7000                           ;i2c_slv.c: 217: switch (SystemState)
  7001                           
  7002                           ;incstack = 0
  7003  0059B2  D020               	goto	l1404
  7004  0059B4                     
  7005                           ;i2c_slv.c: 222: I2cSetConfig();
  7006  0059B4  ECB2  F032         	call	_I2cSetConfig	;wreg free
  7007                           
  7008                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7009  0059B8  0E54               	movlw	low _I2cConfig
  7010  0059BA  0100               	movlb	0	; () banked
  7011  0059BC  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7012  0059BE  0E03               	movlw	high _I2cConfig
  7013  0059C0  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7014  0059C2  ECC3  F029         	call	_I2c_InitI2cModule	;wreg free
  7015                           
  7016                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7017  0059C6  0E00               	movlw	0
  7018  0059C8  0100               	movlb	0	; () banked
  7019  0059CA  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7020  0059CC  0E00               	movlw	0
  7021  0059CE  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7022  0059D0  0E32               	movlw	50
  7023  0059D2  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7024  0059D4  0E00               	movlw	0
  7025  0059D6  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7026  0059D8  0E00               	movlw	0
  7027  0059DA  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7028  0059DC  0E00               	movlw	0
  7029  0059DE  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7030  0059E0  0E64               	movlw	low _I2cDummyTx
  7031  0059E2  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7032  0059E4  0E68               	movlw	high _I2cDummyTx
  7033  0059E6  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7034  0059E8  EC6A  F01F         	call	_OsAlrm_SetOsAlarm	;wreg free
  7035                           
  7036                           ;i2c_slv.c: 227: break;
  7037  0059EC  0012               	return	
  7038  0059EE                     
  7039                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7040  0059EE  EC31  F020         	call	_I2cSendMsgSm	;wreg free
  7041                           
  7042                           ;i2c_slv.c: 238: }
  7043                           
  7044                           ;i2c_slv.c: 237: break;
  7045                           
  7046                           ;i2c_slv.c: 236: default:
  7047                           
  7048                           ;i2c_slv.c: 233: break;
  7049  0059F2  0012               	return	
  7050  0059F4                     l1404:
  7051  0059F4  0100               	movlb	0	; () banked
  7052  0059F6  51D5               	movf	_SystemState& (0+255),w,b
  7053                           
  7054                           ; Switch size 1, requested type "space"
  7055                           ; Number of cases is 2, Range of values is 0 to 1
  7056                           ; switch strategies available:
  7057                           ; Name         Instructions Cycles
  7058                           ; simple_byte            7     4 (average)
  7059                           ;	Chosen strategy is simple_byte
  7060  0059F8  0A00               	xorlw	0	; case 0
  7061  0059FA  B4D8               	btfsc	status,2,c
  7062  0059FC  D7DB               	goto	l1405
  7063  0059FE  0A01               	xorlw	1	; case 1
  7064  005A00  A4D8               	btfss	status,2,c
  7065  005A02  0012               	return	
  7066  005A04  D7F4               	goto	l1407
  7067  005A06                     __end_of_I2cSlv_MainTask:
  7068                           	opt stack 0
  7069                           tosu	equ	0xFFF
  7070                           tosh	equ	0xFFE
  7071                           tosl	equ	0xFFD
  7072                           pclath	equ	0xFFA
  7073                           tblptru	equ	0xFF8
  7074                           tblptrh	equ	0xFF7
  7075                           tblptrl	equ	0xFF6
  7076                           tablat	equ	0xFF5
  7077                           prodh	equ	0xFF4
  7078                           prodl	equ	0xFF3
  7079                           intcon	equ	0xFF2
  7080                           intcon2	equ	0xFF1
  7081                           intcon3	equ	0xFF0
  7082                           postinc0	equ	0xFEE
  7083                           plusw0	equ	0xFEB
  7084                           wreg	equ	0xFE8
  7085                           postinc1	equ	0xFE6
  7086                           postdec1	equ	0xFE5
  7087                           fsr1h	equ	0xFE2
  7088                           fsr1l	equ	0xFE1
  7089                           indf2	equ	0xFDF
  7090                           postinc2	equ	0xFDE
  7091                           postdec2	equ	0xFDD
  7092                           plusw2	equ	0xFDB
  7093                           fsr2h	equ	0xFDA
  7094                           fsr2l	equ	0xFD9
  7095                           status	equ	0xFD8
  7096                           
  7097 ;; *************** function _Mdm_DrvMainFn *****************
  7098 ;; Defined at:
  7099 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  Options         1    wreg     unsigned char 
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;  Options         1    0[COMRAM] unsigned char 
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  1    wreg      void 
  7106 ;; Registers used:
  7107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7117 ;;Total ram usage:        0 bytes
  7118 ;; Hardware stack levels used:    1
  7119 ;; Hardware stack levels required when called:   13
  7120 ;; This function calls:
  7121 ;;		_MdmCntSm
  7122 ;; This function is called by:
  7123 ;;		_InitializeTasks
  7124 ;;		_ScheduleTasks
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text24
  7129  006AA0                     __ptext24:
  7130                           	opt stack 0
  7131  006AA0                     _Mdm_DrvMainFn:
  7132                           	opt stack 15
  7133                           
  7134                           ;mdm_drv.c: 307: MdmCntSm();
  7135                           
  7136                           ;incstack = 0
  7137  006AA0  EC03  F023         	call	_MdmCntSm	;wreg free
  7138  006AA4  0012               	return		;funcret
  7139  006AA6                     __end_of_Mdm_DrvMainFn:
  7140                           	opt stack 0
  7141                           tosu	equ	0xFFF
  7142                           tosh	equ	0xFFE
  7143                           tosl	equ	0xFFD
  7144                           pclath	equ	0xFFA
  7145                           tblptru	equ	0xFF8
  7146                           tblptrh	equ	0xFF7
  7147                           tblptrl	equ	0xFF6
  7148                           tablat	equ	0xFF5
  7149                           prodh	equ	0xFF4
  7150                           prodl	equ	0xFF3
  7151                           intcon	equ	0xFF2
  7152                           intcon2	equ	0xFF1
  7153                           intcon3	equ	0xFF0
  7154                           postinc0	equ	0xFEE
  7155                           plusw0	equ	0xFEB
  7156                           wreg	equ	0xFE8
  7157                           postinc1	equ	0xFE6
  7158                           postdec1	equ	0xFE5
  7159                           fsr1h	equ	0xFE2
  7160                           fsr1l	equ	0xFE1
  7161                           indf2	equ	0xFDF
  7162                           postinc2	equ	0xFDE
  7163                           postdec2	equ	0xFDD
  7164                           plusw2	equ	0xFDB
  7165                           fsr2h	equ	0xFDA
  7166                           fsr2l	equ	0xFD9
  7167                           status	equ	0xFD8
  7168                           
  7169 ;; *************** function _Wdg_MainTask *****************
  7170 ;; Defined at:
  7171 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;  Options         1    wreg     unsigned char 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;  Options         1    0[COMRAM] unsigned char 
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  1    wreg      void 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7189 ;;Total ram usage:        0 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:   12
  7192 ;; This function calls:
  7193 ;;		_Mcu_ClearWdg
  7194 ;;		_Mcu_SetWdgSts
  7195 ;; This function is called by:
  7196 ;;		_InitializeTasks
  7197 ;;		_ScheduleTasks
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text25
  7202  0066C2                     __ptext25:
  7203                           	opt stack 0
  7204  0066C2                     _Wdg_MainTask:
  7205                           	opt stack 16
  7206                           
  7207                           ;wdg.c: 75: switch (SystemState)
  7208                           
  7209                           ;incstack = 0
  7210  0066C2  D007               	goto	l2509
  7211  0066C4                     
  7212                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7213  0066C4  0E01               	movlw	1
  7214  0066C6  ECCE  F034         	call	_Mcu_SetWdgSts
  7215                           
  7216                           ;wdg.c: 81: break;
  7217  0066CA  0012               	return	
  7218  0066CC                     
  7219                           ;wdg.c: 86: Mcu_ClearWdg();
  7220  0066CC  EC53  F035         	call	_Mcu_ClearWdg	;wreg free
  7221                           
  7222                           ;wdg.c: 92: }
  7223                           
  7224                           ;wdg.c: 91: break;
  7225                           
  7226                           ;wdg.c: 90: default:
  7227                           
  7228                           ;wdg.c: 87: break;
  7229  0066D0  0012               	return	
  7230  0066D2                     l2509:
  7231  0066D2  0100               	movlb	0	; () banked
  7232  0066D4  51D5               	movf	_SystemState& (0+255),w,b
  7233                           
  7234                           ; Switch size 1, requested type "space"
  7235                           ; Number of cases is 2, Range of values is 0 to 1
  7236                           ; switch strategies available:
  7237                           ; Name         Instructions Cycles
  7238                           ; simple_byte            7     4 (average)
  7239                           ;	Chosen strategy is simple_byte
  7240  0066D6  0A00               	xorlw	0	; case 0
  7241  0066D8  B4D8               	btfsc	status,2,c
  7242  0066DA  D7F4               	goto	l2510
  7243  0066DC  0A01               	xorlw	1	; case 1
  7244  0066DE  A4D8               	btfss	status,2,c
  7245  0066E0  0012               	return	
  7246  0066E2  D7F4               	goto	l2512
  7247  0066E4                     __end_of_Wdg_MainTask:
  7248                           	opt stack 0
  7249                           tosu	equ	0xFFF
  7250                           tosh	equ	0xFFE
  7251                           tosl	equ	0xFFD
  7252                           pclath	equ	0xFFA
  7253                           tblptru	equ	0xFF8
  7254                           tblptrh	equ	0xFF7
  7255                           tblptrl	equ	0xFF6
  7256                           tablat	equ	0xFF5
  7257                           prodh	equ	0xFF4
  7258                           prodl	equ	0xFF3
  7259                           intcon	equ	0xFF2
  7260                           intcon2	equ	0xFF1
  7261                           intcon3	equ	0xFF0
  7262                           postinc0	equ	0xFEE
  7263                           plusw0	equ	0xFEB
  7264                           wreg	equ	0xFE8
  7265                           postinc1	equ	0xFE6
  7266                           postdec1	equ	0xFE5
  7267                           fsr1h	equ	0xFE2
  7268                           fsr1l	equ	0xFE1
  7269                           indf2	equ	0xFDF
  7270                           postinc2	equ	0xFDE
  7271                           postdec2	equ	0xFDD
  7272                           plusw2	equ	0xFDB
  7273                           fsr2h	equ	0xFDA
  7274                           fsr2l	equ	0xFD9
  7275                           status	equ	0xFD8
  7276                           
  7277 ;; *************** function _Mcu_SetWdgSts *****************
  7278 ;; Defined at:
  7279 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  WdgSts          1    wreg     unsigned char 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      void 
  7286 ;; Registers used:
  7287 ;;		wreg
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7297 ;;Total ram usage:        1 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; Hardware stack levels required when called:   11
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_Wdg_MainTask
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text26
  7308  00699C                     __ptext26:
  7309                           	opt stack 0
  7310  00699C                     _Mcu_SetWdgSts:
  7311                           	opt stack 16
  7312                           
  7313                           ;incstack = 0
  7314                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7315  00699C  0100               	movlb	0	; () banked
  7316  00699E  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7317                           
  7318                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7319  0069A0  0100               	movlb	0	; () banked
  7320  0069A2  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7321  0069A4  D002               	bra	u14535
  7322  0069A6  90C0               	bcf	4032,0,c	;volatile
  7323  0069A8  D001               	bra	u14536
  7324  0069AA                     u14535:
  7325  0069AA  80C0               	bsf	4032,0,c	;volatile
  7326  0069AC                     u14536:
  7327  0069AC  0012               	return		;funcret
  7328  0069AE                     __end_of_Mcu_SetWdgSts:
  7329                           	opt stack 0
  7330                           tosu	equ	0xFFF
  7331                           tosh	equ	0xFFE
  7332                           tosl	equ	0xFFD
  7333                           pclath	equ	0xFFA
  7334                           tblptru	equ	0xFF8
  7335                           tblptrh	equ	0xFF7
  7336                           tblptrl	equ	0xFF6
  7337                           tablat	equ	0xFF5
  7338                           prodh	equ	0xFF4
  7339                           prodl	equ	0xFF3
  7340                           intcon	equ	0xFF2
  7341                           intcon2	equ	0xFF1
  7342                           intcon3	equ	0xFF0
  7343                           postinc0	equ	0xFEE
  7344                           plusw0	equ	0xFEB
  7345                           wreg	equ	0xFE8
  7346                           postinc1	equ	0xFE6
  7347                           postdec1	equ	0xFE5
  7348                           fsr1h	equ	0xFE2
  7349                           fsr1l	equ	0xFE1
  7350                           indf2	equ	0xFDF
  7351                           postinc2	equ	0xFDE
  7352                           postdec2	equ	0xFDD
  7353                           plusw2	equ	0xFDB
  7354                           fsr2h	equ	0xFDA
  7355                           fsr2l	equ	0xFD9
  7356                           status	equ	0xFD8
  7357                           
  7358 ;; *************** function _Mcu_ClearWdg *****************
  7359 ;; Defined at:
  7360 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;		None
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      void 
  7367 ;; Registers used:
  7368 ;;		None
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;Total ram usage:        0 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:   11
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_Wdg_MainTask
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text27
  7389  006AA6                     __ptext27:
  7390                           	opt stack 0
  7391  006AA6                     _Mcu_ClearWdg:
  7392                           	opt stack 16
  7393                           
  7394                           ;incstack = 0
  7395  006AA6  0004               	clrwdt		;# 
  7396  006AA8  0012               	return		;funcret
  7397  006AAA                     __end_of_Mcu_ClearWdg:
  7398                           	opt stack 0
  7399                           tosu	equ	0xFFF
  7400                           tosh	equ	0xFFE
  7401                           tosl	equ	0xFFD
  7402                           pclath	equ	0xFFA
  7403                           tblptru	equ	0xFF8
  7404                           tblptrh	equ	0xFF7
  7405                           tblptrl	equ	0xFF6
  7406                           tablat	equ	0xFF5
  7407                           prodh	equ	0xFF4
  7408                           prodl	equ	0xFF3
  7409                           intcon	equ	0xFF2
  7410                           intcon2	equ	0xFF1
  7411                           intcon3	equ	0xFF0
  7412                           postinc0	equ	0xFEE
  7413                           plusw0	equ	0xFEB
  7414                           wreg	equ	0xFE8
  7415                           postinc1	equ	0xFE6
  7416                           postdec1	equ	0xFE5
  7417                           fsr1h	equ	0xFE2
  7418                           fsr1l	equ	0xFE1
  7419                           indf2	equ	0xFDF
  7420                           postinc2	equ	0xFDE
  7421                           postdec2	equ	0xFDD
  7422                           plusw2	equ	0xFDB
  7423                           fsr2h	equ	0xFDA
  7424                           fsr2l	equ	0xFD9
  7425                           status	equ	0xFD8
  7426                           
  7427 ;; *************** function _USBDeviceTasks *****************
  7428 ;; Defined at:
  7429 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;		None
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  i               1   56[BANK0 ] unsigned char 
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7446 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7447 ;;Total ram usage:        1 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:   19
  7450 ;; This function calls:
  7451 ;;		_USBCtrlEPAllowStatusStage
  7452 ;;		_USBCtrlEPService
  7453 ;;		_USBDeviceInit
  7454 ;;		_USBIncrement1msInternalTimers
  7455 ;;		_USBStallHandler
  7456 ;;		_USBSuspend
  7457 ;;		_USBWakeFromSuspend
  7458 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7459 ;; This function is called by:
  7460 ;;		_UsbDevice_MainTask
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text28
  7465  001BAA                     __ptext28:
  7466                           	opt stack 0
  7467  001BAA                     _USBDeviceTasks:
  7468                           	opt stack 8
  7469                           
  7470                           ;usb_device.c: 562: }
  7471                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7472                           
  7473                           ; BSR set to: 0
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;usb_device.c: 561: return;
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7480                           
  7481                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7482                           
  7483                           ;usb_device.c: 529: UIE = 0;
  7484                           
  7485                           ;usb_device.c: 524: {
  7486                           ;usb_device.c: 526: UCON = 0;
  7487                           
  7488                           ;usb_device.c: 497: uint8_t i;
  7489                           ;usb_device.c: 523: if (1 != 1)
  7490                           
  7491                           ;incstack = 0
  7492  001BAA  0100               	movlb	0	; () banked
  7493  001BAC  51CE               	movf	_USBDeviceState& (0+255),w,b
  7494  001BAE  A4D8               	btfss	status,2,c
  7495  001BB0  D012               	goto	l1615
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;usb_device.c: 585: {
  7499                           ;usb_device.c: 587: UCON = 0;
  7500  001BB2  0E00               	movlw	0
  7501  001BB4  6E65               	movwf	3941,c	;volatile
  7502                           
  7503                           ;usb_device.c: 590: UIE = 0;
  7504  001BB6  0E00               	movlw	0
  7505  001BB8  010F               	movlb	15	; () banked
  7506  001BBA  6F36               	movwf	54,b	;volatile
  7507                           
  7508                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7509  001BBC  0E16               	movlw	22
  7510  001BBE  6F39               	movwf	57,b	;volatile
  7511  001BC0  0E9F               	movlw	159
  7512  001BC2  6F37               	movwf	55,b	;volatile
  7513  001BC4  0E7B               	movlw	123
  7514  001BC6  6F36               	movwf	54,b	;volatile
  7515                           
  7516                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7517  001BC8  D001               	goto	l1616
  7518  001BCA                     l1617:
  7519  001BCA  8665               	bsf	3941,3,c	;volatile
  7520  001BCC                     l1616:
  7521  001BCC  A665               	btfss	3941,3,c	;volatile
  7522  001BCE  D7FD               	goto	l1617
  7523                           
  7524                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7525  001BD0  0E01               	movlw	1
  7526  001BD2  0100               	movlb	0	; () banked
  7527  001BD4  6FCE               	movwf	_USBDeviceState& (0+255),b
  7528  001BD6                     l1615:
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;usb_device.c: 605: }
  7532                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7533                           
  7534                           ; BSR set to: 0
  7535  001BD6  05CE               	decf	_USBDeviceState& (0+255),w,b
  7536  001BD8  B4D8               	btfsc	status,2,c
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;usb_device.c: 609: {
  7540                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7541  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7542  001BDC  D00A               	goto	l1620
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;usb_device.c: 620: {
  7546                           ;usb_device.c: 626: {UIR = 0;};
  7547  001BDE  0E00               	movlw	0
  7548  001BE0  6E62               	movwf	3938,c	;volatile
  7549                           
  7550                           ;usb_device.c: 630: UIE=0;
  7551  001BE2  0E00               	movlw	0
  7552  001BE4  010F               	movlb	15	; () banked
  7553  001BE6  6F36               	movwf	54,b	;volatile
  7554                           
  7555                           ; BSR set to: 15
  7556                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7557  001BE8  8136               	bsf	54,0,b	;volatile
  7558                           
  7559                           ; BSR set to: 15
  7560                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7561  001BEA  8936               	bsf	54,4,b	;volatile
  7562                           
  7563                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7564  001BEC  0E02               	movlw	2
  7565  001BEE  0100               	movlb	0	; () banked
  7566  001BF0  6FCE               	movwf	_USBDeviceState& (0+255),b
  7567  001BF2                     l1620:
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;usb_device.c: 635: }
  7571                           ;usb_device.c: 636: }
  7572                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7573                           
  7574                           ; BSR set to: 0
  7575                           
  7576                           ; BSR set to: 0
  7577  001BF2  A462               	btfss	3938,2,c	;volatile
  7578  001BF4  D006               	goto	l1621
  7579                           
  7580                           ; BSR set to: 0
  7581  001BF6  010F               	movlb	15	; () banked
  7582  001BF8  A536               	btfss	54,2,b	;volatile
  7583  001BFA  D003               	goto	l1621
  7584                           
  7585                           ; BSR set to: 15
  7586                           ;usb_device.c: 653: {
  7587                           ;usb_device.c: 654: (UIR &= 0xFB);
  7588  001BFC  9462               	bcf	3938,2,c	;volatile
  7589                           
  7590                           ; BSR set to: 15
  7591                           ;usb_device.c: 658: USBWakeFromSuspend();
  7592  001BFE  EC4D  F031         	call	_USBWakeFromSuspend	;wreg free
  7593  001C02                     l1621:
  7594                           
  7595                           ;usb_device.c: 660: }
  7596                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7597  001C02  A265               	btfss	3941,1,c	;volatile
  7598  001C04  D002               	goto	l1622
  7599                           
  7600                           ;usb_device.c: 666: {
  7601                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7602  001C06  98A1               	bcf	4001,4,c	;volatile
  7603                           
  7604                           ;usb_device.c: 668: return;
  7605  001C08  0012               	return	
  7606  001C0A                     l1622:
  7607                           
  7608                           ;usb_device.c: 669: }
  7609                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7610  001C0A  A062               	btfss	3938,0,c	;volatile
  7611  001C0C  D009               	goto	l1623
  7612  001C0E  010F               	movlb	15	; () banked
  7613  001C10  A136               	btfss	54,0,b	;volatile
  7614  001C12  D006               	goto	l1623
  7615                           
  7616                           ; BSR set to: 15
  7617                           ;usb_device.c: 682: {
  7618                           ;usb_device.c: 683: USBDeviceInit();
  7619  001C14  EC6B  F011         	call	_USBDeviceInit	;wreg free
  7620                           
  7621                           ;usb_device.c: 687: ;
  7622                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7623  001C18  0E04               	movlw	4
  7624  001C1A  0100               	movlb	0	; () banked
  7625  001C1C  6FCE               	movwf	_USBDeviceState& (0+255),b
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;usb_device.c: 699: (UIR &= 0xFE);
  7629  001C1E  9062               	bcf	3938,0,c	;volatile
  7630  001C20                     l1623:
  7631                           
  7632                           ;usb_device.c: 700: }
  7633                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7634                           
  7635                           ; BSR set to: 0
  7636  001C20  A862               	btfss	3938,4,c	;volatile
  7637  001C22  D004               	goto	l1624
  7638  001C24  010F               	movlb	15	; () banked
  7639  001C26  B936               	btfsc	54,4,b	;volatile
  7640                           
  7641                           ; BSR set to: 15
  7642                           ;usb_device.c: 706: {
  7643                           ;usb_device.c: 712: USBSuspend();
  7644  001C28  ECF2  F031         	call	_USBSuspend	;wreg free
  7645  001C2C                     l1624:
  7646                           
  7647                           ;usb_device.c: 714: }
  7648                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7649  001C2C  AC62               	btfss	3938,6,c	;volatile
  7650  001C2E  D01D               	goto	l1628
  7651                           
  7652                           ;usb_device.c: 727: {
  7653                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7654  001C30  010F               	movlb	15	; () banked
  7655  001C32  AD36               	btfss	54,6,b	;volatile
  7656  001C34  D00F               	goto	l1626
  7657                           
  7658                           ; BSR set to: 15
  7659                           ;usb_device.c: 730: {
  7660                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7661  001C36  0E00               	movlw	0
  7662  001C38  0100               	movlb	0	; () banked
  7663  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7664  001C3C  0E73               	movlw	115
  7665  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7666  001C40  0E00               	movlw	0
  7667  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7668  001C44  0E00               	movlw	0
  7669  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7670  001C48  0E00               	movlw	0
  7671  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7672  001C4C  0E01               	movlw	1
  7673  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7674  001C50  EC9D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7675  001C54                     l1626:
  7676                           
  7677                           ;usb_device.c: 732: }
  7678                           ;usb_device.c: 733: (UIR &= 0xBF);
  7679  001C54  9C62               	bcf	3938,6,c	;volatile
  7680                           
  7681                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7682  001C56  EC72  F033         	call	_USBIncrement1msInternalTimers	;wreg free
  7683                           
  7684                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7685  001C5A  0100               	movlb	0	; () banked
  7686  001C5C  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7687  001C5E  A4D8               	btfss	status,2,c
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;usb_device.c: 754: {
  7691                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7692  001C60  07CA               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;usb_device.c: 756: }
  7696                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7697                           
  7698                           ; BSR set to: 0
  7699  001C62  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7700  001C64  B4D8               	btfsc	status,2,c
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;usb_device.c: 763: {
  7704                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7705  001C66  ECD7  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7706  001C6A                     l1628:
  7707                           
  7708                           ;usb_device.c: 765: }
  7709                           ;usb_device.c: 767: }
  7710                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7711  001C6A  AA62               	btfss	3938,5,c	;volatile
  7712  001C6C  D004               	goto	l1629
  7713  001C6E  010F               	movlb	15	; () banked
  7714  001C70  BB36               	btfsc	54,5,b	;volatile
  7715                           
  7716                           ; BSR set to: 15
  7717                           ;usb_device.c: 770: {
  7718                           ;usb_device.c: 771: USBStallHandler();
  7719  001C72  ECCA  F02F         	call	_USBStallHandler	;wreg free
  7720  001C76                     l1629:
  7721                           
  7722                           ;usb_device.c: 772: }
  7723                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7724  001C76  A262               	btfss	3938,1,c	;volatile
  7725  001C78  D013               	goto	l1630
  7726  001C7A  010F               	movlb	15	; () banked
  7727  001C7C  A336               	btfss	54,1,b	;volatile
  7728  001C7E  D010               	goto	l1630
  7729                           
  7730                           ; BSR set to: 15
  7731                           ;usb_device.c: 775: {
  7732                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7733  001C80  0E7F               	movlw	127
  7734  001C82  0100               	movlb	0	; () banked
  7735  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7736  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7737  001C88  0E00               	movlw	0
  7738  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7739  001C8C  0E00               	movlw	0
  7740  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7741  001C90  0E00               	movlw	0
  7742  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7743  001C94  0E01               	movlw	1
  7744  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7745  001C98  EC9D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7746                           
  7747                           ;usb_device.c: 777: {UEIR = 0;};
  7748  001C9C  0E00               	movlw	0
  7749  001C9E  6E63               	movwf	3939,c	;volatile
  7750  001CA0                     l1630:
  7751                           
  7752                           ;usb_device.c: 785: }
  7753                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7754  001CA0  0E04               	movlw	4
  7755  001CA2  0100               	movlb	0	; () banked
  7756  001CA4  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7757  001CA6  D002               	goto	l1631
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;usb_device.c: 793: {
  7761                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7762  001CA8  98A1               	bcf	4001,4,c	;volatile
  7763                           
  7764                           ;usb_device.c: 795: return;
  7765  001CAA  0012               	return	
  7766  001CAC                     l1631:
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;usb_device.c: 796: }
  7770                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7771  001CAC  010F               	movlb	15	; () banked
  7772  001CAE  A736               	btfss	54,3,b	;volatile
  7773  001CB0  D03E               	goto	u15490
  7774                           
  7775                           ; BSR set to: 15
  7776                           ;usb_device.c: 802: {
  7777                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7778  001CB2  0E00               	movlw	0
  7779  001CB4  0100               	movlb	0	; () banked
  7780  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7781  001CB8                     l15871:
  7782                           
  7783                           ; BSR set to: 0
  7784  001CB8  0E03               	movlw	3
  7785  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7786  001CBC  D001               	goto	l1633
  7787  001CBE  D037               	goto	u15490
  7788  001CC0                     l1633:
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;usb_device.c: 804: {
  7792                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7793  001CC0  A662               	btfss	3938,3,c	;volatile
  7794  001CC2  D035               	goto	u15490
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;usb_device.c: 806: {
  7798                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7799  001CC4  CF64 F0D6          	movff	3940,_USTATcopy	;volatile
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7803  001CC8  31D6               	rrcf	_USTATcopy& (0+255),w,b
  7804  001CCA  32E8               	rrcf	wreg,f,c
  7805  001CCC  32E8               	rrcf	wreg,f,c
  7806  001CCE  0B0F               	andlw	15
  7807  001CD0  6FCB               	movwf	_endpoint_number& (0+255),b
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;usb_device.c: 811: (UIR &= 0xF7);
  7811  001CD2  9662               	bcf	3938,3,c	;volatile
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7815  001CD4  B5D6               	btfsc	_USTATcopy& (0+255),2,b
  7816  001CD6  D007               	goto	l1636
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;usb_device.c: 817: {
  7820                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7821  001CD8  51CB               	movf	_endpoint_number& (0+255),w,b
  7822  001CDA  0D01               	mullw	1
  7823  001CDC  0ECE               	movlw	low _ep_data_out
  7824  001CDE  24F3               	addwf	prodl,w,c
  7825  001CE0  6ED9               	movwf	fsr2l,c
  7826  001CE2  0E02               	movlw	high _ep_data_out
  7827  001CE4  D007               	goto	L3
  7828  001CE6                     l1636:
  7829                           
  7830                           ;usb_device.c: 820: else
  7831                           ;usb_device.c: 821: {
  7832                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7833                           
  7834                           ; BSR set to: 2
  7835  001CE6  0100               	movlb	0	; () banked
  7836  001CE8  51CB               	movf	_endpoint_number& (0+255),w,b
  7837  001CEA  0D01               	mullw	1
  7838  001CEC  0ED1               	movlw	low _ep_data_in
  7839  001CEE  24F3               	addwf	prodl,w,c
  7840  001CF0  6ED9               	movwf	fsr2l,c
  7841  001CF2  0E02               	movlw	high _ep_data_in
  7842  001CF4                     L3:
  7843  001CF4  20F4               	addwfc	prodh,w,c
  7844  001CF6  6EDA               	movwf	fsr2h,c
  7845  001CF8  0102               	movlb	2	; () banked
  7846  001CFA  70DF               	btg	indf2,0,c
  7847                           
  7848                           ; BSR set to: 2
  7849                           ;usb_device.c: 823: }
  7850                           ;usb_device.c: 828: if(endpoint_number == 0)
  7851                           
  7852                           ; BSR set to: 2
  7853  001CFC  0100               	movlb	0	; () banked
  7854  001CFE  51CB               	movf	_endpoint_number& (0+255),w,b
  7855  001D00  A4D8               	btfss	status,2,c
  7856  001D02  D003               	goto	l1638
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;usb_device.c: 829: {
  7860                           ;usb_device.c: 830: USBCtrlEPService();
  7861  001D04  EC1C  F026         	call	_USBCtrlEPService	;wreg free
  7862                           
  7863                           ;usb_device.c: 831: }
  7864  001D08  D00F               	goto	l1640
  7865  001D0A                     l1638:
  7866                           
  7867                           ;usb_device.c: 832: else
  7868                           ;usb_device.c: 833: {
  7869                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7870  001D0A  0E00               	movlw	0
  7871  001D0C  0100               	movlb	0	; () banked
  7872  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7873  001D10  0E72               	movlw	114
  7874  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7875  001D14  0ED6               	movlw	low _USTATcopy
  7876  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7877  001D18  0E00               	movlw	high _USTATcopy
  7878  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7879  001D1C  0E00               	movlw	0
  7880  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7881  001D20  0E00               	movlw	0
  7882  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7883  001D24  EC9D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7884  001D28                     l1640:
  7885  001D28  0100               	movlb	0	; () banked
  7886  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7887  001D2C  D7C5               	goto	l15871
  7888  001D2E                     u15490:
  7889                           
  7890                           ;usb_device.c: 840: }
  7891                           ;usb_device.c: 841: }
  7892                           ;usb_device.c: 842: }
  7893                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7894                           
  7895                           ; BSR set to: 0
  7896  001D2E  98A1               	bcf	4001,4,c	;volatile
  7897  001D30  0012               	return		;funcret
  7898  001D32                     __end_of_USBDeviceTasks:
  7899                           	opt stack 0
  7900                           tosu	equ	0xFFF
  7901                           tosh	equ	0xFFE
  7902                           tosl	equ	0xFFD
  7903                           pclath	equ	0xFFA
  7904                           tblptru	equ	0xFF8
  7905                           tblptrh	equ	0xFF7
  7906                           tblptrl	equ	0xFF6
  7907                           tablat	equ	0xFF5
  7908                           prodh	equ	0xFF4
  7909                           prodl	equ	0xFF3
  7910                           intcon	equ	0xFF2
  7911                           intcon2	equ	0xFF1
  7912                           intcon3	equ	0xFF0
  7913                           postinc0	equ	0xFEE
  7914                           plusw0	equ	0xFEB
  7915                           wreg	equ	0xFE8
  7916                           postinc1	equ	0xFE6
  7917                           postdec1	equ	0xFE5
  7918                           fsr1h	equ	0xFE2
  7919                           fsr1l	equ	0xFE1
  7920                           indf2	equ	0xFDF
  7921                           postinc2	equ	0xFDE
  7922                           postdec2	equ	0xFDD
  7923                           plusw2	equ	0xFDB
  7924                           fsr2h	equ	0xFDA
  7925                           fsr2l	equ	0xFD9
  7926                           status	equ	0xFD8
  7927                           
  7928 ;; *************** function _USBWakeFromSuspend *****************
  7929 ;; Defined at:
  7930 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;		None
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;		None
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      void 
  7937 ;; Registers used:
  7938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7948 ;;Total ram usage:        0 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:   15
  7951 ;; This function calls:
  7952 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7953 ;; This function is called by:
  7954 ;;		_USBDeviceTasks
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           	psect	text29
  7959  00629A                     __ptext29:
  7960                           	opt stack 0
  7961  00629A                     _USBWakeFromSuspend:
  7962                           	opt stack 11
  7963                           
  7964                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7965                           
  7966                           ;incstack = 0
  7967  00629A  0E00               	movlw	0
  7968  00629C  0101               	movlb	1	; () banked
  7969  00629E  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  7970                           
  7971                           ; BSR set to: 1
  7972                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7973  0062A0  0E00               	movlw	0
  7974  0062A2  0100               	movlb	0	; () banked
  7975  0062A4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7976  0062A6  0E74               	movlw	116
  7977  0062A8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7978  0062AA  0E00               	movlw	0
  7979  0062AC  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7980  0062AE  0E00               	movlw	0
  7981  0062B0  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7982  0062B2  0E00               	movlw	0
  7983  0062B4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7984  0062B6  0E00               	movlw	0
  7985  0062B8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7986  0062BA  EC9D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7987                           
  7988                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7989  0062BE  9265               	bcf	3941,1,c	;volatile
  7990                           
  7991                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7992  0062C0  010F               	movlb	15	; () banked
  7993  0062C2  9536               	bcf	54,2,b	;volatile
  7994                           
  7995                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7996  0062C4  D001               	goto	l1768
  7997  0062C6                     
  7998                           ;usb_device.c: 2361: {
  7999                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8000                           
  8001                           ; BSR set to: 15
  8002  0062C6  9462               	bcf	3938,2,c	;volatile
  8003  0062C8                     l1768:
  8004  0062C8  B462               	btfsc	3938,2,c	;volatile
  8005  0062CA  D7FD               	goto	l1769
  8006                           
  8007                           ;usb_device.c: 2363: }
  8008                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8009  0062CC  0E00               	movlw	0
  8010  0062CE  0101               	movlb	1	; () banked
  8011  0062D0  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8012                           
  8013                           ; BSR set to: 1
  8014  0062D2  0012               	return		;funcret
  8015  0062D4                     __end_of_USBWakeFromSuspend:
  8016                           	opt stack 0
  8017                           tosu	equ	0xFFF
  8018                           tosh	equ	0xFFE
  8019                           tosl	equ	0xFFD
  8020                           pclath	equ	0xFFA
  8021                           tblptru	equ	0xFF8
  8022                           tblptrh	equ	0xFF7
  8023                           tblptrl	equ	0xFF6
  8024                           tablat	equ	0xFF5
  8025                           prodh	equ	0xFF4
  8026                           prodl	equ	0xFF3
  8027                           intcon	equ	0xFF2
  8028                           intcon2	equ	0xFF1
  8029                           intcon3	equ	0xFF0
  8030                           postinc0	equ	0xFEE
  8031                           plusw0	equ	0xFEB
  8032                           wreg	equ	0xFE8
  8033                           postinc1	equ	0xFE6
  8034                           postdec1	equ	0xFE5
  8035                           fsr1h	equ	0xFE2
  8036                           fsr1l	equ	0xFE1
  8037                           indf2	equ	0xFDF
  8038                           postinc2	equ	0xFDE
  8039                           postdec2	equ	0xFDD
  8040                           plusw2	equ	0xFDB
  8041                           fsr2h	equ	0xFDA
  8042                           fsr2l	equ	0xFD9
  8043                           status	equ	0xFD8
  8044                           
  8045 ;; *************** function _USBSuspend *****************
  8046 ;; Defined at:
  8047 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;		None
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;		None
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  1    wreg      void 
  8054 ;; Registers used:
  8055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8065 ;;Total ram usage:        0 bytes
  8066 ;; Hardware stack levels used:    1
  8067 ;; Hardware stack levels required when called:   15
  8068 ;; This function calls:
  8069 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8070 ;; This function is called by:
  8071 ;;		_USBDeviceTasks
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text30
  8076  0063E4                     __ptext30:
  8077                           	opt stack 0
  8078  0063E4                     _USBSuspend:
  8079                           	opt stack 11
  8080                           
  8081                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8082                           
  8083                           ; BSR set to: 1
  8084                           ;incstack = 0
  8085  0063E4  010F               	movlb	15	; () banked
  8086  0063E6  8536               	bsf	54,2,b	;volatile
  8087                           
  8088                           ; BSR set to: 15
  8089                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8090  0063E8  9862               	bcf	3938,4,c	;volatile
  8091                           
  8092                           ; BSR set to: 15
  8093                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8094  0063EA  8265               	bsf	3941,1,c	;volatile
  8095                           
  8096                           ; BSR set to: 15
  8097                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8098  0063EC  0E01               	movlw	1
  8099  0063EE  0101               	movlb	1	; () banked
  8100  0063F0  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8101                           
  8102                           ; BSR set to: 1
  8103                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8104  0063F2  0E00               	movlw	0
  8105  0063F4  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8106                           
  8107                           ; BSR set to: 1
  8108                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8109  0063F6  0E00               	movlw	0
  8110  0063F8  0100               	movlb	0	; () banked
  8111  0063FA  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8112  0063FC  0E75               	movlw	117
  8113  0063FE  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8114  006400  0E00               	movlw	0
  8115  006402  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8116  006404  0E00               	movlw	0
  8117  006406  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8118  006408  0E00               	movlw	0
  8119  00640A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8120  00640C  0E00               	movlw	0
  8121  00640E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8122  006410  EC9D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8123  006414  0012               	return		;funcret
  8124  006416                     __end_of_USBSuspend:
  8125                           	opt stack 0
  8126                           tosu	equ	0xFFF
  8127                           tosh	equ	0xFFE
  8128                           tosl	equ	0xFFD
  8129                           pclath	equ	0xFFA
  8130                           tblptru	equ	0xFF8
  8131                           tblptrh	equ	0xFF7
  8132                           tblptrl	equ	0xFF6
  8133                           tablat	equ	0xFF5
  8134                           prodh	equ	0xFF4
  8135                           prodl	equ	0xFF3
  8136                           intcon	equ	0xFF2
  8137                           intcon2	equ	0xFF1
  8138                           intcon3	equ	0xFF0
  8139                           postinc0	equ	0xFEE
  8140                           plusw0	equ	0xFEB
  8141                           wreg	equ	0xFE8
  8142                           postinc1	equ	0xFE6
  8143                           postdec1	equ	0xFE5
  8144                           fsr1h	equ	0xFE2
  8145                           fsr1l	equ	0xFE1
  8146                           indf2	equ	0xFDF
  8147                           postinc2	equ	0xFDE
  8148                           postdec2	equ	0xFDD
  8149                           plusw2	equ	0xFDB
  8150                           fsr2h	equ	0xFDA
  8151                           fsr2l	equ	0xFD9
  8152                           status	equ	0xFD8
  8153                           
  8154 ;; *************** function _USBStallHandler *****************
  8155 ;; Defined at:
  8156 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;		None
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;		None
  8161 ;; Return value:  Size  Location     Type
  8162 ;;                  1    wreg      void 
  8163 ;; Registers used:
  8164 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/0
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8172 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8173 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8174 ;;Total ram usage:        1 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; Hardware stack levels required when called:   11
  8177 ;; This function calls:
  8178 ;;		Nothing
  8179 ;; This function is called by:
  8180 ;;		_USBDeviceTasks
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           	psect	text31
  8185  005F94                     __ptext31:
  8186                           	opt stack 0
  8187  005F94                     _USBStallHandler:
  8188                           	opt stack 15
  8189                           
  8190                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8191                           
  8192                           ;incstack = 0
  8193  005F94  010F               	movlb	15	; () banked
  8194  005F96  A126               	btfss	38,0,b	;volatile
  8195  005F98  D01D               	goto	l1760
  8196                           
  8197                           ; BSR set to: 15
  8198                           ;usb_device.c: 2233: {
  8199                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8200  005F9A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8201  005F9E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8202  005FA2  0E80               	movlw	128
  8203  005FA4  18DE               	xorwf	postinc2,w,c
  8204  005FA6  A4D8               	btfss	status,2,c
  8205  005FA8  D014               	goto	l1761
  8206                           
  8207                           ; BSR set to: 15
  8208  005FAA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8209  005FAE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8210  005FB2  0E84               	movlw	132
  8211  005FB4  18DE               	xorwf	postinc2,w,c
  8212  005FB6  A4D8               	btfss	status,2,c
  8213  005FB8  D00C               	goto	l1761
  8214                           
  8215                           ; BSR set to: 15
  8216                           ;usb_device.c: 2236: {
  8217                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8218  005FBA  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8219  005FBE  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8220  005FC2  0E0C               	movlw	12
  8221  005FC4  6EDF               	movwf	indf2,c
  8222                           
  8223                           ; BSR set to: 15
  8224                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8225  005FC6  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8226  005FCA  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8227  005FCE  0E00               	movlw	0
  8228  005FD0  8EDB               	bsf	plusw2,7,c
  8229  005FD2                     l1761:
  8230                           
  8231                           ; BSR set to: 15
  8232                           ;usb_device.c: 2240: }
  8233                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8234                           
  8235                           ; BSR set to: 15
  8236  005FD2  9126               	bcf	38,0,b	;volatile
  8237  005FD4                     l1760:
  8238                           
  8239                           ; BSR set to: 15
  8240                           ;usb_device.c: 2242: }
  8241                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8242  005FD4  9A62               	bcf	3938,5,c	;volatile
  8243                           
  8244                           ; BSR set to: 15
  8245  005FD6  0012               	return		;funcret
  8246  005FD8                     __end_of_USBStallHandler:
  8247                           	opt stack 0
  8248                           tosu	equ	0xFFF
  8249                           tosh	equ	0xFFE
  8250                           tosl	equ	0xFFD
  8251                           pclath	equ	0xFFA
  8252                           tblptru	equ	0xFF8
  8253                           tblptrh	equ	0xFF7
  8254                           tblptrl	equ	0xFF6
  8255                           tablat	equ	0xFF5
  8256                           prodh	equ	0xFF4
  8257                           prodl	equ	0xFF3
  8258                           intcon	equ	0xFF2
  8259                           intcon2	equ	0xFF1
  8260                           intcon3	equ	0xFF0
  8261                           postinc0	equ	0xFEE
  8262                           plusw0	equ	0xFEB
  8263                           wreg	equ	0xFE8
  8264                           postinc1	equ	0xFE6
  8265                           postdec1	equ	0xFE5
  8266                           fsr1h	equ	0xFE2
  8267                           fsr1l	equ	0xFE1
  8268                           indf2	equ	0xFDF
  8269                           postinc2	equ	0xFDE
  8270                           postdec2	equ	0xFDD
  8271                           plusw2	equ	0xFDB
  8272                           fsr2h	equ	0xFDA
  8273                           fsr2l	equ	0xFD9
  8274                           status	equ	0xFD8
  8275                           
  8276 ;; *************** function _USBIncrement1msInternalTimers *****************
  8277 ;; Defined at:
  8278 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;		None
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;		None
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  1    wreg      void 
  8285 ;; Registers used:
  8286 ;;		wreg, status,2, status,0
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8296 ;;Total ram usage:        0 bytes
  8297 ;; Hardware stack levels used:    1
  8298 ;; Hardware stack levels required when called:   11
  8299 ;; This function calls:
  8300 ;;		Nothing
  8301 ;; This function is called by:
  8302 ;;		_USBDeviceTasks
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text32
  8307  0066E4                     __ptext32:
  8308                           	opt stack 0
  8309  0066E4                     _USBIncrement1msInternalTimers:
  8310                           	opt stack 15
  8311                           
  8312                           ;usb_device.c: 3050: USB1msTickCount++;
  8313                           
  8314                           ; BSR set to: 15
  8315                           ;incstack = 0
  8316  0066E4  0E01               	movlw	1
  8317  0066E6  0103               	movlb	3	; () banked
  8318  0066E8  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8319  0066EA  0E00               	movlw	0
  8320  0066EC  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8321  0066EE  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8322  0066F0  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8323                           
  8324                           ; BSR set to: 3
  8325                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8326  0066F2  0101               	movlb	1	; () banked
  8327  0066F4  51E2               	movf	_USBBusIsSuspended& (0+255),w,b
  8328  0066F6  A4D8               	btfss	status,2,c
  8329  0066F8  0012               	return	
  8330                           
  8331                           ; BSR set to: 1
  8332                           ;usb_device.c: 3052: {
  8333                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8334  0066FA  2BE0               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8335                           
  8336                           ; BSR set to: 1
  8337                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8338  0066FC  51E0               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8339  0066FE  A4D8               	btfss	status,2,c
  8340  006700  0012               	return	
  8341                           
  8342                           ; BSR set to: 1
  8343                           ;usb_device.c: 3056: {
  8344                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8345  006702  69E0               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8346                           
  8347                           ; BSR set to: 1
  8348  006704  0012               	return	
  8349  006706                     __end_of_USBIncrement1msInternalTimers:
  8350                           	opt stack 0
  8351                           tosu	equ	0xFFF
  8352                           tosh	equ	0xFFE
  8353                           tosl	equ	0xFFD
  8354                           pclath	equ	0xFFA
  8355                           tblptru	equ	0xFF8
  8356                           tblptrh	equ	0xFF7
  8357                           tblptrl	equ	0xFF6
  8358                           tablat	equ	0xFF5
  8359                           prodh	equ	0xFF4
  8360                           prodl	equ	0xFF3
  8361                           intcon	equ	0xFF2
  8362                           intcon2	equ	0xFF1
  8363                           intcon3	equ	0xFF0
  8364                           postinc0	equ	0xFEE
  8365                           plusw0	equ	0xFEB
  8366                           wreg	equ	0xFE8
  8367                           postinc1	equ	0xFE6
  8368                           postdec1	equ	0xFE5
  8369                           fsr1h	equ	0xFE2
  8370                           fsr1l	equ	0xFE1
  8371                           indf2	equ	0xFDF
  8372                           postinc2	equ	0xFDE
  8373                           postdec2	equ	0xFDD
  8374                           plusw2	equ	0xFDB
  8375                           fsr2h	equ	0xFDA
  8376                           fsr2l	equ	0xFD9
  8377                           status	equ	0xFD8
  8378                           
  8379 ;; *************** function _USBDeviceInit *****************
  8380 ;; Defined at:
  8381 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;		None
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;  i               1   37[BANK0 ] unsigned char 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  1    wreg      void 
  8388 ;; Registers used:
  8389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8398 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8399 ;;Total ram usage:        1 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:   12
  8402 ;; This function calls:
  8403 ;;		_memset
  8404 ;; This function is called by:
  8405 ;;		_USBDeviceTasks
  8406 ;;		_UsbDevice_MainTask
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text33
  8411  0022D6                     __ptext33:
  8412                           	opt stack 0
  8413  0022D6                     _USBDeviceInit:
  8414                           	opt stack 14
  8415                           
  8416                           ;usb_device.c: 297: uint8_t i;
  8417                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8418                           
  8419                           ; BSR set to: 1
  8420                           ;incstack = 0
  8421  0022D6  98A0               	bcf	4000,4,c	;volatile
  8422                           
  8423                           ;usb_device.c: 303: ;
  8424                           ;usb_device.c: 306: {UEIR = 0;};
  8425  0022D8  0E00               	movlw	0
  8426  0022DA  6E63               	movwf	3939,c	;volatile
  8427                           
  8428                           ;usb_device.c: 309: {UIR = 0;};
  8429  0022DC  0E00               	movlw	0
  8430  0022DE  6E62               	movwf	3938,c	;volatile
  8431                           
  8432                           ;usb_device.c: 312: UEP0 = 0;
  8433  0022E0  0E00               	movlw	0
  8434  0022E2  010F               	movlb	15	; () banked
  8435  0022E4  6F26               	movwf	38,b	;volatile
  8436                           
  8437                           ; BSR set to: 15
  8438                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8439  0022E6  0E27               	movlw	39
  8440  0022E8  0100               	movlb	0	; () banked
  8441  0022EA  6F7D               	movwf	memset@p1& (0+255),b
  8442  0022EC  0E0F               	movlw	15
  8443  0022EE  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8444  0022F0  0E00               	movlw	0
  8445  0022F2  6F80               	movwf	(memset@c+1)& (0+255),b
  8446  0022F4  0E00               	movlw	0
  8447  0022F6  6F7F               	movwf	memset@c& (0+255),b
  8448  0022F8  0E00               	movlw	0
  8449  0022FA  6F82               	movwf	(memset@n+1)& (0+255),b
  8450  0022FC  0E02               	movlw	2
  8451  0022FE  6F81               	movwf	memset@n& (0+255),b
  8452  002300  EC3C  F032         	call	_memset	;wreg free
  8453                           
  8454                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8455  002304  0E16               	movlw	22
  8456  002306  010F               	movlb	15	; () banked
  8457  002308  6F39               	movwf	57,b	;volatile
  8458                           
  8459                           ; BSR set to: 15
  8460  00230A  0E9F               	movlw	159
  8461  00230C  6F37               	movwf	55,b	;volatile
  8462                           
  8463                           ; BSR set to: 15
  8464  00230E  0E7B               	movlw	123
  8465  002310  6F36               	movwf	54,b	;volatile
  8466                           
  8467                           ; BSR set to: 15
  8468                           ;usb_device.c: 319: ;
  8469                           ;usb_device.c: 322: ;
  8470                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8471  002312  0E00               	movlw	0
  8472  002314  0100               	movlb	0	; () banked
  8473  002316  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8474  002318                     l14559:
  8475                           
  8476                           ; BSR set to: 0
  8477  002318  0E0B               	movlw	11
  8478  00231A  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8479  00231C  D001               	goto	l1604
  8480  00231E  D00E               	goto	u13630
  8481  002320                     l1604:
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;usb_device.c: 326: {
  8485                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8486                           
  8487                           ; BSR set to: 0
  8488  002320  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8489  002322  0D04               	mullw	4
  8490  002324  0E00               	movlw	0
  8491  002326  24F3               	addwf	prodl,w,c
  8492  002328  6ED9               	movwf	fsr2l,c
  8493  00232A  0E04               	movlw	4
  8494  00232C  20F4               	addwfc	prodh,w,c
  8495  00232E  6EDA               	movwf	fsr2h,c
  8496  002330  6ADE               	clrf	postinc2,c
  8497  002332  6ADE               	clrf	postinc2,c
  8498  002334  6ADE               	clrf	postinc2,c
  8499  002336  6ADD               	clrf	postdec2,c
  8500                           
  8501                           ; BSR set to: 0
  8502  002338  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8503  00233A  D7EE               	goto	l14559
  8504  00233C                     u13630:
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;usb_device.c: 328: }
  8508                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8509  00233C  8C65               	bsf	3941,6,c	;volatile
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;usb_device.c: 334: UADDR = 0x00;
  8513  00233E  0E00               	movlw	0
  8514  002340  010F               	movlb	15	; () banked
  8515  002342  6F38               	movwf	56,b	;volatile
  8516                           
  8517                           ; BSR set to: 15
  8518                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8519  002344  9865               	bcf	3941,4,c	;volatile
  8520                           
  8521                           ; BSR set to: 15
  8522                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8523  002346  9C65               	bcf	3941,6,c	;volatile
  8524  002348                     
  8525                           ;usb_device.c: 344: {
  8526                           ;usb_device.c: 345: (UIR &= 0xF7);
  8527                           
  8528                           ; BSR set to: 15
  8529  002348  9662               	bcf	3938,3,c	;volatile
  8530                           
  8531                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8532  00234A  0E00               	movlw	0
  8533  00234C  0100               	movlb	0	; () banked
  8534  00234E  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8538  002350  0E00               	movlw	0
  8539  002352  0101               	movlb	1	; () banked
  8540  002354  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8541                           
  8542                           ; BSR set to: 1
  8543                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8544  002356  0E00               	movlw	0
  8545  002358  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8546  00235A  0E00               	movlw	0
  8547  00235C  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8548                           
  8549                           ; BSR set to: 1
  8550                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8551  00235E  B662               	btfsc	3938,3,c	;volatile
  8552  002360  D7F3               	goto	l1606
  8553                           
  8554                           ; BSR set to: 1
  8555                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8556                           
  8557                           ; BSR set to: 1
  8558  002362  0E01               	movlw	1
  8559  002364  0100               	movlb	0	; () banked
  8560  002366  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8561                           
  8562                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8563  002368  0E01               	movlw	1
  8564  00236A  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8565                           
  8566                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8567  00236C  0E00               	movlw	0
  8568  00236E  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8569                           
  8570                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8571  002370  0E00               	movlw	0
  8572  002372  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8573                           
  8574                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8575  002374  0E00               	movlw	0
  8576  002376  0101               	movlb	1	; () banked
  8577  002378  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8578                           
  8579                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8580  00237A  0E00               	movlw	0
  8581  00237C  0100               	movlb	0	; () banked
  8582  00237E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8583  002380                     l14587:
  8584                           
  8585                           ; BSR set to: 0
  8586  002380  0E02               	movlw	2
  8587  002382  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8588  002384  D001               	goto	l1608
  8589  002386  D02E               	goto	u13660
  8590  002388                     l1608:
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;usb_device.c: 364: {
  8594                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8595                           
  8596                           ; BSR set to: 0
  8597  002388  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8598  00238A  0D02               	mullw	2
  8599  00238C  0EB6               	movlw	low _pBDTEntryIn
  8600  00238E  24F3               	addwf	prodl,w,c
  8601  002390  6ED9               	movwf	fsr2l,c
  8602  002392  0E00               	movlw	high _pBDTEntryIn
  8603  002394  20F4               	addwfc	prodh,w,c
  8604  002396  6EDA               	movwf	fsr2h,c
  8605  002398  0E00               	movlw	0
  8606  00239A  6EDE               	movwf	postinc2,c
  8607  00239C  0E00               	movlw	0
  8608  00239E  6EDD               	movwf	postdec2,c
  8609                           
  8610                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8611  0023A0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8612  0023A2  0D02               	mullw	2
  8613  0023A4  0E06               	movlw	low _pBDTEntryOut
  8614  0023A6  24F3               	addwf	prodl,w,c
  8615  0023A8  6ED9               	movwf	fsr2l,c
  8616  0023AA  0E03               	movlw	high _pBDTEntryOut
  8617  0023AC  20F4               	addwfc	prodh,w,c
  8618  0023AE  6EDA               	movwf	fsr2h,c
  8619  0023B0  0E00               	movlw	0
  8620  0023B2  6EDE               	movwf	postinc2,c
  8621  0023B4  0E00               	movlw	0
  8622  0023B6  6EDD               	movwf	postdec2,c
  8623                           
  8624                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8625  0023B8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8626  0023BA  0D01               	mullw	1
  8627  0023BC  0ED1               	movlw	low _ep_data_in
  8628  0023BE  24F3               	addwf	prodl,w,c
  8629  0023C0  6ED9               	movwf	fsr2l,c
  8630  0023C2  0E02               	movlw	high _ep_data_in
  8631  0023C4  20F4               	addwfc	prodh,w,c
  8632  0023C6  6EDA               	movwf	fsr2h,c
  8633  0023C8  0E00               	movlw	0
  8634  0023CA  6EDF               	movwf	indf2,c
  8635                           
  8636                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8637  0023CC  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8638  0023CE  0D01               	mullw	1
  8639  0023D0  0ECE               	movlw	low _ep_data_out
  8640  0023D2  24F3               	addwf	prodl,w,c
  8641  0023D4  6ED9               	movwf	fsr2l,c
  8642  0023D6  0E02               	movlw	high _ep_data_out
  8643  0023D8  20F4               	addwfc	prodh,w,c
  8644  0023DA  6EDA               	movwf	fsr2h,c
  8645  0023DC  0E00               	movlw	0
  8646  0023DE  6EDF               	movwf	indf2,c
  8647                           
  8648                           ; BSR set to: 0
  8649  0023E0  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8650  0023E2  D7CE               	goto	l14587
  8651  0023E4                     u13660:
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;usb_device.c: 369: }
  8655                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8656                           
  8657                           ; BSR set to: 0
  8658  0023E4  0E08               	movlw	8
  8659  0023E6  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8660  0023E8  0E04               	movlw	4
  8661  0023EA  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8665  0023EC  0E16               	movlw	22
  8666  0023EE  010F               	movlb	15	; () banked
  8667  0023F0  6F26               	movwf	38,b	;volatile
  8668                           
  8669                           ; BSR set to: 15
  8670                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8671  0023F2  0E04               	movlw	4
  8672  0023F4  0104               	movlb	4	; () banked
  8673  0023F6  6F03               	movwf	3,b	;volatile
  8674  0023F8  0E30               	movlw	48
  8675  0023FA  6F02               	movwf	2,b	;volatile
  8676                           
  8677                           ; BSR set to: 4
  8678                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8679  0023FC  0E08               	movlw	8
  8680  0023FE  6F01               	movwf	1,b	;volatile
  8681                           
  8682                           ; BSR set to: 4
  8683                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8684  002400  0E04               	movlw	4
  8685  002402  6F00               	movwf	0,b	;volatile
  8686                           
  8687                           ; BSR set to: 4
  8688                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8689  002404  8F00               	bsf	0,7,b	;volatile
  8690                           
  8691                           ; BSR set to: 4
  8692                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8693  002406  0E00               	movlw	0
  8694  002408  0100               	movlb	0	; () banked
  8695  00240A  6FD7               	movwf	_USBActiveConfiguration& (0+255),b
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;usb_device.c: 384: USB1msTickCount = 0;
  8699  00240C  0E00               	movlw	0
  8700  00240E  0103               	movlb	3	; () banked
  8701  002410  6F10               	movwf	_USB1msTickCount& (0+255),b
  8702  002412  0E00               	movlw	0
  8703  002414  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  8704  002416  0E00               	movlw	0
  8705  002418  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  8706  00241A  0E00               	movlw	0
  8707  00241C  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  8708                           
  8709                           ; BSR set to: 3
  8710                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8711  00241E  0E00               	movlw	0
  8712  002420  0101               	movlb	1	; () banked
  8713  002422  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8714                           
  8715                           ; BSR set to: 1
  8716                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8717  002424  0E00               	movlw	0
  8718  002426  0100               	movlb	0	; () banked
  8719  002428  6FCE               	movwf	_USBDeviceState& (0+255),b
  8720                           
  8721                           ; BSR set to: 0
  8722  00242A  0012               	return		;funcret
  8723  00242C                     __end_of_USBDeviceInit:
  8724                           	opt stack 0
  8725                           tosu	equ	0xFFF
  8726                           tosh	equ	0xFFE
  8727                           tosl	equ	0xFFD
  8728                           pclath	equ	0xFFA
  8729                           tblptru	equ	0xFF8
  8730                           tblptrh	equ	0xFF7
  8731                           tblptrl	equ	0xFF6
  8732                           tablat	equ	0xFF5
  8733                           prodh	equ	0xFF4
  8734                           prodl	equ	0xFF3
  8735                           intcon	equ	0xFF2
  8736                           intcon2	equ	0xFF1
  8737                           intcon3	equ	0xFF0
  8738                           postinc0	equ	0xFEE
  8739                           plusw0	equ	0xFEB
  8740                           wreg	equ	0xFE8
  8741                           postinc1	equ	0xFE6
  8742                           postdec1	equ	0xFE5
  8743                           fsr1h	equ	0xFE2
  8744                           fsr1l	equ	0xFE1
  8745                           indf2	equ	0xFDF
  8746                           postinc2	equ	0xFDE
  8747                           postdec2	equ	0xFDD
  8748                           plusw2	equ	0xFDB
  8749                           fsr2h	equ	0xFDA
  8750                           fsr2l	equ	0xFD9
  8751                           status	equ	0xFD8
  8752                           
  8753 ;; *************** function _USBCtrlEPService *****************
  8754 ;; Defined at:
  8755 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8756 ;; Parameters:    Size  Location     Type
  8757 ;;		None
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;		None
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8772 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8773 ;;Total ram usage:        1 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:   18
  8776 ;; This function calls:
  8777 ;;		_USBCtrlTrfInHandler
  8778 ;;		_USBCtrlTrfOutHandler
  8779 ;;		_USBCtrlTrfSetupHandler
  8780 ;;		_memcpy
  8781 ;; This function is called by:
  8782 ;;		_USBDeviceTasks
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text34
  8787  004C38                     __ptext34:
  8788                           	opt stack 0
  8789  004C38                     _USBCtrlEPService:
  8790                           	opt stack 8
  8791                           
  8792                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;incstack = 0
  8796  004C38  0E2D               	movlw	45
  8797  004C3A  0100               	movlb	0	; () banked
  8798  004C3C  6FCA               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8802  004C3E  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8803  004C42  0EFD               	movlw	253
  8804  004C44  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8805  004C46  A4D8               	btfss	status,2,c
  8806  004C48  D038               	goto	l1774
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;usb_device.c: 2401: {
  8810                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8811  004C4A  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8812  004C4E  90D8               	bcf	status,0,c
  8813  004C50  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8814  004C52  0E3F               	movlw	63
  8815  004C54  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8816  004C56  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8817  004C58  0D04               	mullw	4
  8818  004C5A  0E00               	movlw	0
  8819  004C5C  24F3               	addwf	prodl,w,c
  8820  004C5E  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8821  004C60  0E04               	movlw	4
  8822  004C62  20F4               	addwfc	prodh,w,c
  8823  004C64  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8824                           
  8825                           ; BSR set to: 0
  8826                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8827  004C66  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8828  004C6A  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8832  004C6E  0E04               	movlw	4
  8833  004C70  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8834                           
  8835                           ; BSR set to: 0
  8836                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8837  004C72  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8838  004C76  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8839  004C7A  30DF               	rrcf	223,w,c
  8840  004C7C  32E8               	rrcf	wreg,f,c
  8841  004C7E  0B0F               	andlw	15
  8842  004C80  0A0D               	xorlw	13
  8843  004C82  A4D8               	btfss	status,2,c
  8844  004C84  D017               	goto	l1775
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;usb_device.c: 2418: {
  8848                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8849  004C86  0E30               	movlw	48
  8850  004C88  6F7D               	movwf	memcpy@d1& (0+255),b
  8851  004C8A  0E04               	movlw	4
  8852  004C8C  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8853  004C8E  EE20 F002          	lfsr	2,2
  8854  004C92  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8855  004C94  26D9               	addwf	fsr2l,f,c
  8856  004C96  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8857  004C98  22DA               	addwfc	fsr2h,f,c
  8858  004C9A  CFDE F07F          	movff	postinc2,memcpy@s1
  8859  004C9E  CFDD F080          	movff	postdec2,memcpy@s1+1
  8860  004CA2  0E00               	movlw	0
  8861  004CA4  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8862  004CA6  0E08               	movlw	8
  8863  004CA8  6F81               	movwf	memcpy@n& (0+255),b
  8864  004CAA  EC5F  F02F         	call	_memcpy	;wreg free
  8865                           
  8866                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8867  004CAE  EC89  F027         	call	_USBCtrlTrfSetupHandler	;wreg free
  8868                           
  8869                           ;usb_device.c: 2427: }
  8870  004CB2  0012               	return	
  8871  004CB4                     l1775:
  8872                           
  8873                           ;usb_device.c: 2428: else
  8874                           ;usb_device.c: 2429: {
  8875                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8876  004CB4  ECD3  F02A         	call	_USBCtrlTrfOutHandler	;wreg free
  8877                           
  8878                           ;usb_device.c: 2432: }
  8879                           ;usb_device.c: 2433: }
  8880  004CB8  0012               	return	
  8881  004CBA                     l1774:
  8882                           
  8883                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8884  004CBA  0100               	movlb	0	; () banked
  8885  004CBC  51D6               	movf	_USTATcopy& (0+255),w,b
  8886  004CBE  0BFD               	andlw	253
  8887  004CC0  0A04               	xorlw	4
  8888  004CC2  A4D8               	btfss	status,2,c
  8889  004CC4  0012               	return	
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;usb_device.c: 2435: {
  8893                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8894  004CC6  EC93  F020         	call	_USBCtrlTrfInHandler	;wreg free
  8895  004CCA  0012               	return	
  8896  004CCC                     __end_of_USBCtrlEPService:
  8897                           	opt stack 0
  8898                           tosu	equ	0xFFF
  8899                           tosh	equ	0xFFE
  8900                           tosl	equ	0xFFD
  8901                           pclath	equ	0xFFA
  8902                           tblptru	equ	0xFF8
  8903                           tblptrh	equ	0xFF7
  8904                           tblptrl	equ	0xFF6
  8905                           tablat	equ	0xFF5
  8906                           prodh	equ	0xFF4
  8907                           prodl	equ	0xFF3
  8908                           intcon	equ	0xFF2
  8909                           intcon2	equ	0xFF1
  8910                           intcon3	equ	0xFF0
  8911                           postinc0	equ	0xFEE
  8912                           plusw0	equ	0xFEB
  8913                           wreg	equ	0xFE8
  8914                           postinc1	equ	0xFE6
  8915                           postdec1	equ	0xFE5
  8916                           fsr1h	equ	0xFE2
  8917                           fsr1l	equ	0xFE1
  8918                           indf2	equ	0xFDF
  8919                           postinc2	equ	0xFDE
  8920                           postdec2	equ	0xFDD
  8921                           plusw2	equ	0xFDB
  8922                           fsr2h	equ	0xFDA
  8923                           fsr2l	equ	0xFD9
  8924                           status	equ	0xFD8
  8925                           
  8926 ;; *************** function _memcpy *****************
  8927 ;; Defined at:
  8928 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  d1              2   29[BANK0 ] PTR void 
  8931 ;;		 -> SetupPkt(8), 
  8932 ;;  s1              2   31[BANK0 ] PTR const void 
  8933 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8934 ;;  n               2   33[BANK0 ] unsigned int 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8937 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8938 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8939 ;;		 -> SetupPkt(8), 
  8940 ;;  tmp             1   35[BANK0 ] unsigned char 
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  2   29[BANK0 ] PTR void 
  8943 ;; Registers used:
  8944 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8950 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8951 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8953 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8954 ;;Total ram usage:       11 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; Hardware stack levels required when called:   11
  8957 ;; This function calls:
  8958 ;;		Nothing
  8959 ;; This function is called by:
  8960 ;;		_USBCtrlEPService
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           	psect	text35
  8965  005EBE                     __ptext35:
  8966                           	opt stack 0
  8967  005EBE                     _memcpy:
  8968                           	opt stack 14
  8969                           
  8970                           ;incstack = 0
  8971  005EBE  C07F  F086         	movff	memcpy@s1,memcpy@s
  8972  005EC2  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8973  005EC6  C07D  F084         	movff	memcpy@d1,memcpy@d
  8974  005ECA  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8975  005ECE  D011               	goto	l3354
  8976  005ED0                     l13759:
  8977  005ED0  C086  FFD9         	movff	memcpy@s,fsr2l
  8978  005ED4  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8979  005ED8  50DF               	movf	indf2,w,c
  8980  005EDA  0100               	movlb	0	; () banked
  8981  005EDC  6F83               	movwf	memcpy@tmp& (0+255),b
  8982                           
  8983                           ; BSR set to: 0
  8984  005EDE  4B86               	infsnz	memcpy@s& (0+255),f,b
  8985  005EE0  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8986                           
  8987                           ; BSR set to: 0
  8988  005EE2  C084  FFD9         	movff	memcpy@d,fsr2l
  8989  005EE6  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8990  005EEA  C083  FFDF         	movff	memcpy@tmp,indf2
  8991                           
  8992                           ; BSR set to: 0
  8993  005EEE  4B84               	infsnz	memcpy@d& (0+255),f,b
  8994  005EF0  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8995  005EF2                     l3354:
  8996                           
  8997                           ; BSR set to: 0
  8998  005EF2  0100               	movlb	0	; () banked
  8999  005EF4  0781               	decf	memcpy@n& (0+255),f,b
  9000  005EF6  A0D8               	btfss	status,0,c
  9001  005EF8  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9002  005EFA  2981               	incf	memcpy@n& (0+255),w,b
  9003  005EFC  E1E9               	bnz	l13759
  9004  005EFE  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9005  005F00  B4D8               	btfsc	status,2,c
  9006  005F02  0012               	return	
  9007  005F04  D7E5               	goto	l3355
  9008  005F06                     __end_of_memcpy:
  9009                           	opt stack 0
  9010                           tosu	equ	0xFFF
  9011                           tosh	equ	0xFFE
  9012                           tosl	equ	0xFFD
  9013                           pclath	equ	0xFFA
  9014                           tblptru	equ	0xFF8
  9015                           tblptrh	equ	0xFF7
  9016                           tblptrl	equ	0xFF6
  9017                           tablat	equ	0xFF5
  9018                           prodh	equ	0xFF4
  9019                           prodl	equ	0xFF3
  9020                           intcon	equ	0xFF2
  9021                           intcon2	equ	0xFF1
  9022                           intcon3	equ	0xFF0
  9023                           postinc0	equ	0xFEE
  9024                           plusw0	equ	0xFEB
  9025                           wreg	equ	0xFE8
  9026                           postinc1	equ	0xFE6
  9027                           postdec1	equ	0xFE5
  9028                           fsr1h	equ	0xFE2
  9029                           fsr1l	equ	0xFE1
  9030                           indf2	equ	0xFDF
  9031                           postinc2	equ	0xFDE
  9032                           postdec2	equ	0xFDD
  9033                           plusw2	equ	0xFDB
  9034                           fsr2h	equ	0xFDA
  9035                           fsr2l	equ	0xFD9
  9036                           status	equ	0xFD8
  9037                           
  9038 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9039 ;; Defined at:
  9040 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;		None
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;		None
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  1    wreg      void 
  9047 ;; Registers used:
  9048 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9058 ;;Total ram usage:        0 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; Hardware stack levels required when called:   17
  9061 ;; This function calls:
  9062 ;;		_USBCheckStdRequest
  9063 ;;		_USBCtrlEPServiceComplete
  9064 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9065 ;; This function is called by:
  9066 ;;		_USBCtrlEPService
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           	psect	text36
  9071  004F12                     __ptext36:
  9072                           	opt stack 0
  9073  004F12                     _USBCtrlTrfSetupHandler:
  9074                           	opt stack 8
  9075                           
  9076                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;incstack = 0
  9080  004F12  0E00               	movlw	0
  9081  004F14  0100               	movlb	0	; () banked
  9082  004F16  6FCD               	movwf	_shortPacketStatus& (0+255),b
  9083                           
  9084                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9085  004F18  0E00               	movlw	0
  9086  004F1A  6FC9               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9087                           
  9088                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9089  004F1C  0E00               	movlw	0
  9090  004F1E  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9091                           
  9092                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9093  004F20  0E00               	movlw	0
  9094  004F22  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9095                           
  9096                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9097  004F24  0E00               	movlw	0
  9098  004F26  0101               	movlb	1	; () banked
  9099  004F28  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9100                           
  9101                           ;usb_device.c: 2493: controlTransferState = 0;
  9102  004F2A  0E00               	movlw	0
  9103  004F2C  0100               	movlb	0	; () banked
  9104  004F2E  6FCC               	movwf	_controlTransferState& (0+255),b
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9108  004F30  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9109  004F34  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9110  004F38  0E7F               	movlw	127
  9111  004F3A  16DF               	andwf	indf2,f,c
  9112                           
  9113                           ; BSR set to: 0
  9114                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9115  004F3C  0E04               	movlw	4
  9116  004F3E  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9120  004F40  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9121  004F44  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9122  004F48  0E7F               	movlw	127
  9123  004F4A  16DF               	andwf	indf2,f,c
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9127  004F4C  0E04               	movlw	4
  9128  004F4E  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9132  004F50  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9133  004F54  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9134  004F58  0E7F               	movlw	127
  9135  004F5A  16DF               	andwf	indf2,f,c
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9139  004F5C  0E00               	movlw	0
  9140  004F5E  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9144  004F60  0E00               	movlw	0
  9145  004F62  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9146  004F64  0E00               	movlw	0
  9147  004F66  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9148                           
  9149                           ; BSR set to: 0
  9150                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9151  004F68  0E00               	movlw	0
  9152  004F6A  0101               	movlb	1	; () banked
  9153  004F6C  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9154                           
  9155                           ; BSR set to: 1
  9156                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9157  004F6E  0E00               	movlw	0
  9158  004F70  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9159  004F72  0E00               	movlw	0
  9160  004F74  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9161                           
  9162                           ; BSR set to: 1
  9163                           ;usb_device.c: 2517: USBCheckStdRequest();
  9164  004F76  ECED  F01A         	call	_USBCheckStdRequest	;wreg free
  9165                           
  9166                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9167  004F7A  0E00               	movlw	0
  9168  004F7C  0100               	movlb	0	; () banked
  9169  004F7E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9170  004F80  0E03               	movlw	3
  9171  004F82  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9172  004F84  0E00               	movlw	0
  9173  004F86  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9174  004F88  0E00               	movlw	0
  9175  004F8A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9176  004F8C  0E00               	movlw	0
  9177  004F8E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9178  004F90  0E00               	movlw	0
  9179  004F92  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9180  004F94  EC9D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9181                           
  9182                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9183  004F98  EC2A  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9184  004F9C  0012               	return		;funcret
  9185  004F9E                     __end_of_USBCtrlTrfSetupHandler:
  9186                           	opt stack 0
  9187                           tosu	equ	0xFFF
  9188                           tosh	equ	0xFFE
  9189                           tosl	equ	0xFFD
  9190                           pclath	equ	0xFFA
  9191                           tblptru	equ	0xFF8
  9192                           tblptrh	equ	0xFF7
  9193                           tblptrl	equ	0xFF6
  9194                           tablat	equ	0xFF5
  9195                           prodh	equ	0xFF4
  9196                           prodl	equ	0xFF3
  9197                           intcon	equ	0xFF2
  9198                           intcon2	equ	0xFF1
  9199                           intcon3	equ	0xFF0
  9200                           postinc0	equ	0xFEE
  9201                           plusw0	equ	0xFEB
  9202                           wreg	equ	0xFE8
  9203                           postinc1	equ	0xFE6
  9204                           postdec1	equ	0xFE5
  9205                           fsr1h	equ	0xFE2
  9206                           fsr1l	equ	0xFE1
  9207                           indf2	equ	0xFDF
  9208                           postinc2	equ	0xFDE
  9209                           postdec2	equ	0xFDD
  9210                           plusw2	equ	0xFDB
  9211                           fsr2h	equ	0xFDA
  9212                           fsr2l	equ	0xFD9
  9213                           status	equ	0xFD8
  9214                           
  9215 ;; *************** function _USBCtrlEPServiceComplete *****************
  9216 ;; Defined at:
  9217 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;		None
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;		None
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  1    wreg      void 
  9224 ;; Registers used:
  9225 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9226 ;; Tracked objects:
  9227 ;;		On entry : 0/0
  9228 ;;		On exit  : 0/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9235 ;;Total ram usage:        0 bytes
  9236 ;; Hardware stack levels used:    1
  9237 ;; Hardware stack levels required when called:   13
  9238 ;; This function calls:
  9239 ;;		_USBCtrlEPAllowDataStage
  9240 ;;		_USBCtrlEPAllowStatusStage
  9241 ;; This function is called by:
  9242 ;;		_USBCtrlTrfSetupHandler
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           	psect	text37
  9247  003054                     __ptext37:
  9248                           	opt stack 0
  9249  003054                     _USBCtrlEPServiceComplete:
  9250                           	opt stack 11
  9251                           
  9252                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9253                           
  9254                           ;incstack = 0
  9255  003054  9865               	bcf	3941,4,c	;volatile
  9256                           
  9257                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9258  003056  0100               	movlb	0	; () banked
  9259  003058  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9260  00305A  D03C               	goto	l1684
  9261                           
  9262                           ; BSR set to: 0
  9263                           ;usb_device.c: 1647: {
  9264                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9265  00305C  0101               	movlb	1	; () banked
  9266  00305E  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9267  003060  D00D               	goto	l1685
  9268                           
  9269                           ; BSR set to: 1
  9270                           ;usb_device.c: 1649: {
  9271                           ;usb_device.c: 1650: controlTransferState = 2;
  9272  003062  0E02               	movlw	2
  9273  003064  0100               	movlb	0	; () banked
  9274  003066  6FCC               	movwf	_controlTransferState& (0+255),b
  9275                           
  9276                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9277  003068  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9278  00306A  B4D8               	btfsc	status,2,c
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;usb_device.c: 1662: {
  9282                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9283  00306C  EC9D  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9284                           
  9285                           ;usb_device.c: 1664: }
  9286                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9287  003070  0E00               	movlw	0
  9288  003072  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9289                           
  9290                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9291  003074  0E00               	movlw	0
  9292  003076  0100               	movlb	0	; () banked
  9293  003078  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9294                           
  9295                           ;usb_device.c: 1670: }
  9296  00307A  0012               	return	
  9297  00307C                     l1685:
  9298                           
  9299                           ;usb_device.c: 1671: else
  9300                           ;usb_device.c: 1672: {
  9301                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9302                           
  9303                           ; BSR set to: 0
  9304  00307C  0100               	movlb	0	; () banked
  9305  00307E  EE20 F001          	lfsr	2,1
  9306  003082  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9307  003084  26D9               	addwf	fsr2l,f,c
  9308  003086  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9309  003088  22DA               	addwfc	fsr2h,f,c
  9310  00308A  0E08               	movlw	8
  9311  00308C  6EDF               	movwf	indf2,c
  9312                           
  9313                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9314  00308E  EE20 F002          	lfsr	2,2
  9315  003092  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9316  003094  26D9               	addwf	fsr2l,f,c
  9317  003096  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9318  003098  22DA               	addwfc	fsr2h,f,c
  9319  00309A  0E30               	movlw	48
  9320  00309C  6EDE               	movwf	postinc2,c
  9321  00309E  0E04               	movlw	4
  9322  0030A0  6EDD               	movwf	postdec2,c
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9326  0030A2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9327  0030A6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9328  0030AA  0E0C               	movlw	12
  9329  0030AC  6EDF               	movwf	indf2,c
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9333  0030AE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9334  0030B2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9335  0030B6  0E00               	movlw	0
  9336  0030B8  8EDB               	bsf	plusw2,7,c
  9337                           
  9338                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9339  0030BA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9340  0030BE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9341  0030C2  0E04               	movlw	4
  9342  0030C4  6EDF               	movwf	indf2,c
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9346  0030C6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9347  0030CA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9348  0030CE  0E00               	movlw	0
  9349  0030D0  8EDB               	bsf	plusw2,7,c
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;usb_device.c: 1683: }
  9353                           ;usb_device.c: 1684: }
  9354  0030D2  0012               	return	
  9355  0030D4                     l1684:
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;usb_device.c: 1685: else
  9359                           ;usb_device.c: 1686: {
  9360                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9361  0030D4  0104               	movlb	4	; () banked
  9362  0030D6  AF30               	btfss	48,7,b	;volatile
  9363  0030D8  D012               	goto	l1689
  9364                           
  9365                           ; BSR set to: 4
  9366                           ;usb_device.c: 1688: {
  9367                           ;usb_device.c: 1689: controlTransferState = 1;
  9368  0030DA  0E01               	movlw	1
  9369  0030DC  0100               	movlb	0	; () banked
  9370  0030DE  6FCC               	movwf	_controlTransferState& (0+255),b
  9371                           
  9372                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9373  0030E0  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9374  0030E2  B4D8               	btfsc	status,2,c
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;usb_device.c: 1704: {
  9378                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9379  0030E4  EC9D  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9380                           
  9381                           ;usb_device.c: 1706: }
  9382                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9383  0030E8  0E00               	movlw	0
  9384  0030EA  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9385                           
  9386                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9387  0030EC  0E00               	movlw	0
  9388  0030EE  0100               	movlb	0	; () banked
  9389  0030F0  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9393  0030F2  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9394  0030F4  A4D8               	btfss	status,2,c
  9395  0030F6  0012               	return	
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;usb_device.c: 1731: {
  9399                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9400  0030F8  ECD7  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9401                           
  9402                           ;usb_device.c: 1733: }
  9403                           ;usb_device.c: 1734: }
  9404  0030FC  0012               	return	
  9405  0030FE                     l1689:
  9406                           
  9407                           ;usb_device.c: 1735: else
  9408                           ;usb_device.c: 1736: {
  9409                           ;usb_device.c: 1747: controlTransferState = 2;
  9410  0030FE  0E02               	movlw	2
  9411  003100  0100               	movlb	0	; () banked
  9412  003102  6FCC               	movwf	_controlTransferState& (0+255),b
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9416  003104  EE20 F001          	lfsr	2,1
  9417  003108  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9418  00310A  26D9               	addwf	fsr2l,f,c
  9419  00310C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9420  00310E  22DA               	addwfc	fsr2h,f,c
  9421  003110  0E08               	movlw	8
  9422  003112  6EDF               	movwf	indf2,c
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9426  003114  EE20 F002          	lfsr	2,2
  9427  003118  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9428  00311A  26D9               	addwf	fsr2l,f,c
  9429  00311C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9430  00311E  22DA               	addwfc	fsr2h,f,c
  9431  003120  0E30               	movlw	48
  9432  003122  6EDE               	movwf	postinc2,c
  9433  003124  0E04               	movlw	4
  9434  003126  6EDD               	movwf	postdec2,c
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9438  003128  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9439  00312C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9440  003130  0E04               	movlw	4
  9441  003132  6EDF               	movwf	indf2,c
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9445  003134  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9446  003138  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9447  00313C  0E00               	movlw	0
  9448  00313E  8EDB               	bsf	plusw2,7,c
  9449                           
  9450                           ; BSR set to: 0
  9451                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9452  003140  0E00               	movlw	0
  9453  003142  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9457  003144  0E00               	movlw	0
  9458  003146  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9462  003148  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9463  00314A  A4D8               	btfss	status,2,c
  9464  00314C  0012               	return	
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;usb_device.c: 1759: {
  9468                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9469  00314E  ECD7  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9470  003152  0012               	return	
  9471  003154                     __end_of_USBCtrlEPServiceComplete:
  9472                           	opt stack 0
  9473                           tosu	equ	0xFFF
  9474                           tosh	equ	0xFFE
  9475                           tosl	equ	0xFFD
  9476                           pclath	equ	0xFFA
  9477                           tblptru	equ	0xFF8
  9478                           tblptrh	equ	0xFF7
  9479                           tblptrl	equ	0xFF6
  9480                           tablat	equ	0xFF5
  9481                           prodh	equ	0xFF4
  9482                           prodl	equ	0xFF3
  9483                           intcon	equ	0xFF2
  9484                           intcon2	equ	0xFF1
  9485                           intcon3	equ	0xFF0
  9486                           postinc0	equ	0xFEE
  9487                           plusw0	equ	0xFEB
  9488                           wreg	equ	0xFE8
  9489                           postinc1	equ	0xFE6
  9490                           postdec1	equ	0xFE5
  9491                           fsr1h	equ	0xFE2
  9492                           fsr1l	equ	0xFE1
  9493                           indf2	equ	0xFDF
  9494                           postinc2	equ	0xFDE
  9495                           postdec2	equ	0xFDD
  9496                           plusw2	equ	0xFDB
  9497                           fsr2h	equ	0xFDA
  9498                           fsr2l	equ	0xFD9
  9499                           status	equ	0xFD8
  9500                           
  9501 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9502 ;; Defined at:
  9503 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;		None
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;		None
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      void 
  9510 ;; Registers used:
  9511 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9521 ;;Total ram usage:        0 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:   12
  9524 ;; This function calls:
  9525 ;;		_USBCtrlTrfTxService
  9526 ;; This function is called by:
  9527 ;;		_USBCtrlEPServiceComplete
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           	psect	text38
  9532  00493A                     __ptext38:
  9533                           	opt stack 0
  9534  00493A                     _USBCtrlEPAllowDataStage:
  9535                           	opt stack 11
  9536                           
  9537                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9538                           
  9539                           ;incstack = 0
  9540  00493A  0E00               	movlw	0
  9541  00493C  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9542                           
  9543                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9544  00493E  0E00               	movlw	0
  9545  004940  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9546                           
  9547                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9548  004942  0E02               	movlw	2
  9549  004944  0100               	movlb	0	; () banked
  9550  004946  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9551  004948  A4D8               	btfss	status,2,c
  9552  00494A  D01F               	goto	l1673
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;usb_device.c: 1512: {
  9556                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9557  00494C  EE20 F001          	lfsr	2,1
  9558  004950  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9559  004952  26D9               	addwf	fsr2l,f,c
  9560  004954  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9561  004956  22DA               	addwfc	fsr2h,f,c
  9562  004958  0E08               	movlw	8
  9563  00495A  6EDF               	movwf	indf2,c
  9564                           
  9565                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9566  00495C  EE20 F002          	lfsr	2,2
  9567  004960  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9568  004962  26D9               	addwf	fsr2l,f,c
  9569  004964  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9570  004966  22DA               	addwfc	fsr2h,f,c
  9571  004968  0E38               	movlw	56
  9572  00496A  6EDE               	movwf	postinc2,c
  9573  00496C  0E04               	movlw	4
  9574  00496E  6EDD               	movwf	postdec2,c
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9578  004970  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9579  004974  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9580  004978  0E48               	movlw	72
  9581  00497A  6EDF               	movwf	indf2,c
  9582                           
  9583                           ; BSR set to: 0
  9584                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9585  00497C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9586  004980  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9587  004984  0E00               	movlw	0
  9588  004986  8EDB               	bsf	plusw2,7,c
  9589                           
  9590                           ;usb_device.c: 1518: }
  9591  004988  0012               	return	
  9592  00498A                     l1673:
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;usb_device.c: 1519: else
  9596                           ;usb_device.c: 1520: {
  9597                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9598                           
  9599                           ; BSR set to: 0
  9600  00498A  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9601  00498C  0104               	movlb	4	; () banked
  9602  00498E  5D36               	subwf	54,w,b	;volatile
  9603  004990  0100               	movlb	0	; () banked
  9604  004992  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9605  004994  0104               	movlb	4	; () banked
  9606  004996  5937               	subwfb	55,w,b	;volatile
  9607  004998  B0D8               	btfsc	status,0,c
  9608  00499A  D004               	goto	l1675
  9609                           
  9610                           ; BSR set to: 4
  9611                           ;usb_device.c: 1524: {
  9612                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9613  00499C  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9614  0049A0  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9615  0049A4                     l1675:
  9616                           
  9617                           ; BSR set to: 4
  9618                           ;usb_device.c: 1526: }
  9619                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9620                           
  9621                           ; BSR set to: 4
  9622  0049A4  EC5F  F01B         	call	_USBCtrlTrfTxService	;wreg free
  9623                           
  9624                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9625  0049A8  0100               	movlb	0	; () banked
  9626  0049AA  EE20 F002          	lfsr	2,2
  9627  0049AE  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9628  0049B0  26D9               	addwf	fsr2l,f,c
  9629  0049B2  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9630  0049B4  22DA               	addwfc	fsr2h,f,c
  9631  0049B6  0E38               	movlw	56
  9632  0049B8  6EDE               	movwf	postinc2,c
  9633  0049BA  0E04               	movlw	4
  9634  0049BC  6EDD               	movwf	postdec2,c
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9638  0049BE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9639  0049C2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9640  0049C6  0E48               	movlw	72
  9641  0049C8  6EDF               	movwf	indf2,c
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9645  0049CA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9646  0049CE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9647  0049D2  0E00               	movlw	0
  9648  0049D4  8EDB               	bsf	plusw2,7,c
  9649  0049D6  0012               	return	
  9650  0049D8                     __end_of_USBCtrlEPAllowDataStage:
  9651                           	opt stack 0
  9652                           tosu	equ	0xFFF
  9653                           tosh	equ	0xFFE
  9654                           tosl	equ	0xFFD
  9655                           pclath	equ	0xFFA
  9656                           tblptru	equ	0xFF8
  9657                           tblptrh	equ	0xFF7
  9658                           tblptrl	equ	0xFF6
  9659                           tablat	equ	0xFF5
  9660                           prodh	equ	0xFF4
  9661                           prodl	equ	0xFF3
  9662                           intcon	equ	0xFF2
  9663                           intcon2	equ	0xFF1
  9664                           intcon3	equ	0xFF0
  9665                           postinc0	equ	0xFEE
  9666                           plusw0	equ	0xFEB
  9667                           wreg	equ	0xFE8
  9668                           postinc1	equ	0xFE6
  9669                           postdec1	equ	0xFE5
  9670                           fsr1h	equ	0xFE2
  9671                           fsr1l	equ	0xFE1
  9672                           indf2	equ	0xFDF
  9673                           postinc2	equ	0xFDE
  9674                           postdec2	equ	0xFDD
  9675                           plusw2	equ	0xFDB
  9676                           fsr2h	equ	0xFDA
  9677                           fsr2l	equ	0xFD9
  9678                           status	equ	0xFD8
  9679                           
  9680 ;; *************** function _USBCheckStdRequest *****************
  9681 ;; Defined at:
  9682 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;		None
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;		None
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  1    wreg      void 
  9689 ;; Registers used:
  9690 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9700 ;;Total ram usage:        0 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; Hardware stack levels required when called:   16
  9703 ;; This function calls:
  9704 ;;		_USBStdFeatureReqHandler
  9705 ;;		_USBStdGetDscHandler
  9706 ;;		_USBStdGetStatusHandler
  9707 ;;		_USBStdSetCfgHandler
  9708 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9709 ;; This function is called by:
  9710 ;;		_USBCtrlTrfSetupHandler
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text39
  9715  0035DA                     __ptext39:
  9716                           	opt stack 0
  9717  0035DA                     _USBCheckStdRequest:
  9718                           	opt stack 8
  9719                           
  9720                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;incstack = 0
  9724  0035DA  0104               	movlb	4	; () banked
  9725  0035DC  3930               	swapf	48,w,b	;volatile
  9726  0035DE  32E8               	rrcf	wreg,f,c
  9727  0035E0  0B03               	andlw	3
  9728  0035E2  0900               	iorlw	0
  9729  0035E4  A4D8               	btfss	status,2,c
  9730  0035E6  0012               	return	
  9731  0035E8  D048               	goto	l1808
  9732  0035EA                     l1809:
  9733                           
  9734                           ; BSR set to: 4
  9735                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9736  0035EA  0100               	movlb	0	; () banked
  9737  0035EC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9738                           
  9739                           ; BSR set to: 0
  9740                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9741  0035EE  0E08               	movlw	8
  9742  0035F0  6FCE               	movwf	_USBDeviceState& (0+255),b
  9743                           
  9744                           ;usb_device.c: 2713: break;
  9745  0035F2  0012               	return	
  9746  0035F4                     
  9747                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9748                           
  9749                           ; BSR set to: 0
  9750  0035F4  ECE6  F015         	call	_USBStdGetDscHandler	;wreg free
  9751                           
  9752                           ;usb_device.c: 2716: break;
  9753  0035F8  0012               	return	
  9754  0035FA                     
  9755                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9756  0035FA  EC95  F019         	call	_USBStdSetCfgHandler	;wreg free
  9757                           
  9758                           ;usb_device.c: 2719: break;
  9759  0035FE  0012               	return	
  9760  003600                     
  9761                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9762  003600  0ED7               	movlw	low _USBActiveConfiguration
  9763  003602  0100               	movlb	0	; () banked
  9764  003604  6FB0               	movwf	_inPipes& (0+255),b
  9765  003606  0E00               	movlw	high _USBActiveConfiguration
  9766  003608  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9770  00360A  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9774  00360C  0E01               	movlw	1
  9775  00360E  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9779  003610  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9780                           
  9781                           ;usb_device.c: 2725: break;
  9782  003612  0012               	return	
  9783  003614                     
  9784                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9785                           
  9786                           ; BSR set to: 0
  9787  003614  EC53  F021         	call	_USBStdGetStatusHandler	;wreg free
  9788                           
  9789                           ;usb_device.c: 2728: break;
  9790  003618  0012               	return	
  9791  00361A                     
  9792                           ;usb_device.c: 2730: case 3:
  9793                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9794  00361A  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9795                           
  9796                           ;usb_device.c: 2732: break;
  9797  00361E  0012               	return	
  9798  003620                     
  9799                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9800  003620  0104               	movlb	4	; () banked
  9801  003622  5134               	movf	52,w,b	;volatile
  9802  003624  0D01               	mullw	1
  9803  003626  0EF1               	movlw	low _USBAlternateInterface
  9804  003628  24F3               	addwf	prodl,w,c
  9805  00362A  0100               	movlb	0	; () banked
  9806  00362C  6FB0               	movwf	_inPipes& (0+255),b
  9807  00362E  0E02               	movlw	high _USBAlternateInterface
  9808  003630  20F4               	addwfc	prodh,w,c
  9809  003632  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9813  003634  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9817  003636  0E01               	movlw	1
  9818  003638  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9822  00363A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9823                           
  9824                           ;usb_device.c: 2738: break;
  9825  00363C  0012               	return	
  9826  00363E                     l1818:
  9827                           
  9828                           ; BSR set to: 4
  9829                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9830  00363E  0100               	movlb	0	; () banked
  9831  003640  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9832                           
  9833                           ; BSR set to: 0
  9834                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9835  003642  0104               	movlb	4	; () banked
  9836  003644  5134               	movf	52,w,b	;volatile
  9837  003646  0D01               	mullw	1
  9838  003648  0EF1               	movlw	low _USBAlternateInterface
  9839  00364A  24F3               	addwf	prodl,w,c
  9840  00364C  6ED9               	movwf	fsr2l,c
  9841  00364E  0E02               	movlw	high _USBAlternateInterface
  9842  003650  20F4               	addwfc	prodh,w,c
  9843  003652  6EDA               	movwf	fsr2h,c
  9844  003654  C432 FFDF          	movff	1074,indf2	;volatile
  9845                           
  9846                           ;usb_device.c: 2742: break;
  9847  003658  0012               	return	
  9848  00365A                     
  9849                           ; BSR set to: 4
  9850                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9851                           
  9852                           ; BSR set to: 4
  9853  00365A  0E00               	movlw	0
  9854  00365C  0100               	movlb	0	; () banked
  9855  00365E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9856  003660  0E02               	movlw	2
  9857  003662  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9858  003664  0E00               	movlw	0
  9859  003666  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9860  003668  0E00               	movlw	0
  9861  00366A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9862  00366C  0E00               	movlw	0
  9863  00366E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9864  003670  0E00               	movlw	0
  9865  003672  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9866  003674  EC9D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9867                           
  9868                           ;usb_device.c: 2749: }
  9869                           
  9870                           ;usb_device.c: 2748: break;
  9871                           
  9872                           ;usb_device.c: 2747: default:
  9873                           
  9874                           ;usb_device.c: 2746: case 12:
  9875                           
  9876                           ;usb_device.c: 2745: break;
  9877  003678  0012               	return	
  9878  00367A                     l1808:
  9879  00367A  0104               	movlb	4	; () banked
  9880  00367C  5131               	movf	49,w,b	;volatile
  9881                           
  9882                           ; Switch size 1, requested type "space"
  9883                           ; Number of cases is 11, Range of values is 0 to 12
  9884                           ; switch strategies available:
  9885                           ; Name         Instructions Cycles
  9886                           ; simple_byte           34    18 (average)
  9887                           ;	Chosen strategy is simple_byte
  9888  00367E  0A00               	xorlw	0	; case 0
  9889  003680  B4D8               	btfsc	status,2,c
  9890  003682  D7C8               	goto	l1814
  9891  003684  0A01               	xorlw	1	; case 1
  9892  003686  B4D8               	btfsc	status,2,c
  9893  003688  D7C8               	goto	l1815
  9894  00368A  0A02               	xorlw	2	; case 3
  9895  00368C  B4D8               	btfsc	status,2,c
  9896  00368E  D7C5               	goto	l1815
  9897  003690  0A06               	xorlw	6	; case 5
  9898  003692  B4D8               	btfsc	status,2,c
  9899  003694  D7AA               	goto	l1809
  9900  003696  0A03               	xorlw	3	; case 6
  9901  003698  B4D8               	btfsc	status,2,c
  9902  00369A  D7AC               	goto	l1811
  9903  00369C  0A01               	xorlw	1	; case 7
  9904  00369E  B4D8               	btfsc	status,2,c
  9905  0036A0  D7DC               	goto	l1819
  9906  0036A2  0A0F               	xorlw	15	; case 8
  9907  0036A4  B4D8               	btfsc	status,2,c
  9908  0036A6  D7AC               	goto	l1813
  9909  0036A8  0A01               	xorlw	1	; case 9
  9910  0036AA  B4D8               	btfsc	status,2,c
  9911  0036AC  D7A6               	goto	l1812
  9912  0036AE  0A03               	xorlw	3	; case 10
  9913  0036B0  B4D8               	btfsc	status,2,c
  9914  0036B2  D7B6               	goto	l1817
  9915  0036B4  0A01               	xorlw	1	; case 11
  9916  0036B6  B4D8               	btfsc	status,2,c
  9917  0036B8  D7C2               	goto	l1818
  9918  0036BA  0A07               	xorlw	7	; case 12
  9919  0036BC  0012               	return	
  9920  0036BE                     __end_of_USBCheckStdRequest:
  9921                           	opt stack 0
  9922                           tosu	equ	0xFFF
  9923                           tosh	equ	0xFFE
  9924                           tosl	equ	0xFFD
  9925                           pclath	equ	0xFFA
  9926                           tblptru	equ	0xFF8
  9927                           tblptrh	equ	0xFF7
  9928                           tblptrl	equ	0xFF6
  9929                           tablat	equ	0xFF5
  9930                           prodh	equ	0xFF4
  9931                           prodl	equ	0xFF3
  9932                           intcon	equ	0xFF2
  9933                           intcon2	equ	0xFF1
  9934                           intcon3	equ	0xFF0
  9935                           postinc0	equ	0xFEE
  9936                           plusw0	equ	0xFEB
  9937                           wreg	equ	0xFE8
  9938                           postinc1	equ	0xFE6
  9939                           postdec1	equ	0xFE5
  9940                           fsr1h	equ	0xFE2
  9941                           fsr1l	equ	0xFE1
  9942                           indf2	equ	0xFDF
  9943                           postinc2	equ	0xFDE
  9944                           postdec2	equ	0xFDD
  9945                           plusw2	equ	0xFDB
  9946                           fsr2h	equ	0xFDA
  9947                           fsr2l	equ	0xFD9
  9948                           status	equ	0xFD8
  9949                           
  9950 ;; *************** function _USBStdSetCfgHandler *****************
  9951 ;; Defined at:
  9952 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9953 ;; Parameters:    Size  Location     Type
  9954 ;;		None
  9955 ;; Auto vars:     Size  Location     Type
  9956 ;;  i               1   49[BANK0 ] unsigned char 
  9957 ;; Return value:  Size  Location     Type
  9958 ;;                  1    wreg      void 
  9959 ;; Registers used:
  9960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9961 ;; Tracked objects:
  9962 ;;		On entry : 0/0
  9963 ;;		On exit  : 0/0
  9964 ;;		Unchanged: 0/0
  9965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9967 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9969 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9970 ;;Total ram usage:        1 bytes
  9971 ;; Hardware stack levels used:    1
  9972 ;; Hardware stack levels required when called:   15
  9973 ;; This function calls:
  9974 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9975 ;;		_memset
  9976 ;; This function is called by:
  9977 ;;		_USBCheckStdRequest
  9978 ;; This function uses a non-reentrant model
  9979 ;;
  9980                           
  9981                           	psect	text40
  9982  00332A                     __ptext40:
  9983                           	opt stack 0
  9984  00332A                     _USBStdSetCfgHandler:
  9985                           	opt stack 8
  9986                           
  9987                           ;usb_device.c: 1988: uint8_t i;
  9988                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9989                           
  9990                           ;incstack = 0
  9991  00332A  0100               	movlb	0	; () banked
  9992  00332C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9996  00332E  0E27               	movlw	39
  9997  003330  6F7D               	movwf	memset@p1& (0+255),b
  9998  003332  0E0F               	movlw	15
  9999  003334  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10000  003336  0E00               	movlw	0
 10001  003338  6F80               	movwf	(memset@c+1)& (0+255),b
 10002  00333A  0E00               	movlw	0
 10003  00333C  6F7F               	movwf	memset@c& (0+255),b
 10004  00333E  0E00               	movlw	0
 10005  003340  6F82               	movwf	(memset@n+1)& (0+255),b
 10006  003342  0E02               	movlw	2
 10007  003344  6F81               	movwf	memset@n& (0+255),b
 10008  003346  EC3C  F032         	call	_memset	;wreg free
 10009                           
 10010                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10011  00334A  0E00               	movlw	0
 10012  00334C  0100               	movlb	0	; () banked
 10013  00334E  6F7D               	movwf	memset@p1& (0+255),b
 10014  003350  0E04               	movlw	4
 10015  003352  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10016  003354  0E00               	movlw	0
 10017  003356  6F80               	movwf	(memset@c+1)& (0+255),b
 10018  003358  0E00               	movlw	0
 10019  00335A  6F7F               	movwf	memset@c& (0+255),b
 10020  00335C  0E00               	movlw	0
 10021  00335E  6F82               	movwf	(memset@n+1)& (0+255),b
 10022  003360  0E30               	movlw	48
 10023  003362  6F81               	movwf	memset@n& (0+255),b
 10024  003364  EC3C  F032         	call	_memset	;wreg free
 10025                           
 10026                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10027  003368  8C65               	bsf	3941,6,c	;volatile
 10028                           
 10029                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10030  00336A  0E00               	movlw	0
 10031  00336C  0100               	movlb	0	; () banked
 10032  00336E  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10033  003370                     l13095:
 10034                           
 10035                           ; BSR set to: 0
 10036  003370  0E02               	movlw	2
 10037  003372  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10038  003374  D001               	goto	l1725
 10039  003376  D016               	goto	u11660
 10040  003378                     l1725:
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;usb_device.c: 2006: {
 10044                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10045                           
 10046                           ; BSR set to: 0
 10047  003378  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10048  00337A  0D01               	mullw	1
 10049  00337C  0ED1               	movlw	low _ep_data_in
 10050  00337E  24F3               	addwf	prodl,w,c
 10051  003380  6ED9               	movwf	fsr2l,c
 10052  003382  0E02               	movlw	high _ep_data_in
 10053  003384  20F4               	addwfc	prodh,w,c
 10054  003386  6EDA               	movwf	fsr2h,c
 10055  003388  0E00               	movlw	0
 10056  00338A  6EDF               	movwf	indf2,c
 10057                           
 10058                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10059  00338C  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10060  00338E  0D01               	mullw	1
 10061  003390  0ECE               	movlw	low _ep_data_out
 10062  003392  24F3               	addwf	prodl,w,c
 10063  003394  6ED9               	movwf	fsr2l,c
 10064  003396  0E02               	movlw	high _ep_data_out
 10065  003398  20F4               	addwfc	prodh,w,c
 10066  00339A  6EDA               	movwf	fsr2h,c
 10067  00339C  0E00               	movlw	0
 10068  00339E  6EDF               	movwf	indf2,c
 10069                           
 10070                           ; BSR set to: 0
 10071  0033A0  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10072  0033A2  D7E6               	goto	l13095
 10073  0033A4                     u11660:
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;usb_device.c: 2009: }
 10077                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10078                           
 10079                           ; BSR set to: 0
 10080  0033A4  0EF1               	movlw	low _USBAlternateInterface
 10081  0033A6  6F7D               	movwf	memset@p1& (0+255),b
 10082  0033A8  0E02               	movlw	high _USBAlternateInterface
 10083  0033AA  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10084  0033AC  0E00               	movlw	0
 10085  0033AE  6F80               	movwf	(memset@c+1)& (0+255),b
 10086  0033B0  0E00               	movlw	0
 10087  0033B2  6F7F               	movwf	memset@c& (0+255),b
 10088  0033B4  0E00               	movlw	0
 10089  0033B6  6F82               	movwf	(memset@n+1)& (0+255),b
 10090  0033B8  0E02               	movlw	2
 10091  0033BA  6F81               	movwf	memset@n& (0+255),b
 10092  0033BC  EC3C  F032         	call	_memset	;wreg free
 10093                           
 10094                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10095  0033C0  9C65               	bcf	3941,6,c	;volatile
 10096                           
 10097                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10098  0033C2  0E08               	movlw	8
 10099  0033C4  0100               	movlb	0	; () banked
 10100  0033C6  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10101  0033C8  0E04               	movlw	4
 10102  0033CA  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10103                           
 10104                           ; BSR set to: 0
 10105                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10106  0033CC  0E00               	movlw	0
 10107  0033CE  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10108  0033D0  0E04               	movlw	4
 10109  0033D2  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10113  0033D4  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10114  0033D8  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10118  0033DC  C432 F0D7          	movff	1074,_USBActiveConfiguration	;volatile
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10122  0033E0  51D7               	movf	_USBActiveConfiguration& (0+255),w,b
 10123  0033E2  A4D8               	btfss	status,2,c
 10124  0033E4  D003               	goto	l1727
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;usb_device.c: 2028: {
 10128                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10129  0033E6  0E10               	movlw	16
 10130  0033E8  6FCE               	movwf	_USBDeviceState& (0+255),b
 10131                           
 10132                           ;usb_device.c: 2031: }
 10133  0033EA  0012               	return	
 10134  0033EC                     l1727:
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;usb_device.c: 2032: else
 10138                           ;usb_device.c: 2033: {
 10139                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10140                           
 10141                           ; BSR set to: 0
 10142  0033EC  0E00               	movlw	0
 10143  0033EE  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10144  0033F0  0E01               	movlw	1
 10145  0033F2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10146  0033F4  0ED7               	movlw	low _USBActiveConfiguration
 10147  0033F6  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10148  0033F8  0E00               	movlw	high _USBActiveConfiguration
 10149  0033FA  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10150  0033FC  0E00               	movlw	0
 10151  0033FE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10152  003400  0E01               	movlw	1
 10153  003402  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10154  003404  EC9D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10155                           
 10156                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10157  003408  0E20               	movlw	32
 10158  00340A  0100               	movlb	0	; () banked
 10159  00340C  6FCE               	movwf	_USBDeviceState& (0+255),b
 10160  00340E  0012               	return	
 10161  003410                     __end_of_USBStdSetCfgHandler:
 10162                           	opt stack 0
 10163                           tosu	equ	0xFFF
 10164                           tosh	equ	0xFFE
 10165                           tosl	equ	0xFFD
 10166                           pclath	equ	0xFFA
 10167                           tblptru	equ	0xFF8
 10168                           tblptrh	equ	0xFF7
 10169                           tblptrl	equ	0xFF6
 10170                           tablat	equ	0xFF5
 10171                           prodh	equ	0xFF4
 10172                           prodl	equ	0xFF3
 10173                           intcon	equ	0xFF2
 10174                           intcon2	equ	0xFF1
 10175                           intcon3	equ	0xFF0
 10176                           postinc0	equ	0xFEE
 10177                           plusw0	equ	0xFEB
 10178                           wreg	equ	0xFE8
 10179                           postinc1	equ	0xFE6
 10180                           postdec1	equ	0xFE5
 10181                           fsr1h	equ	0xFE2
 10182                           fsr1l	equ	0xFE1
 10183                           indf2	equ	0xFDF
 10184                           postinc2	equ	0xFDE
 10185                           postdec2	equ	0xFDD
 10186                           plusw2	equ	0xFDB
 10187                           fsr2h	equ	0xFDA
 10188                           fsr2l	equ	0xFD9
 10189                           status	equ	0xFD8
 10190                           
 10191 ;; *************** function _USBStdGetStatusHandler *****************
 10192 ;; Defined at:
 10193 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;		None
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10198 ;;		 -> NULL(0), BDT(48), 
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  1    wreg      void 
 10201 ;; Registers used:
 10202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/0
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10209 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10210 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10211 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10212 ;;Total ram usage:        3 bytes
 10213 ;; Hardware stack levels used:    1
 10214 ;; Hardware stack levels required when called:   11
 10215 ;; This function calls:
 10216 ;;		Nothing
 10217 ;; This function is called by:
 10218 ;;		_USBCheckStdRequest
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           	psect	text41
 10223  0042A6                     __ptext41:
 10224                           	opt stack 0
 10225  0042A6                     _USBStdGetStatusHandler:
 10226                           	opt stack 12
 10227                           
 10228                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;incstack = 0
 10232  0042A6  0E00               	movlw	0
 10233  0042A8  0104               	movlb	4	; () banked
 10234  0042AA  6F38               	movwf	56,b	;volatile
 10235                           
 10236                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10237  0042AC  0E00               	movlw	0
 10238  0042AE  6F39               	movwf	57,b	;volatile
 10239                           
 10240                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10241  0042B0  D03D               	goto	l1746
 10242  0042B2                     l1747:
 10243                           
 10244                           ; BSR set to: 4
 10245                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10246  0042B2  0100               	movlb	0	; () banked
 10247  0042B4  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10248                           
 10249                           ;usb_device.c: 2163: }
 10250                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10251                           
 10252                           ; BSR set to: 4
 10253                           
 10254                           ; BSR set to: 0
 10255                           ;usb_device.c: 2161: {
 10256                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10257                           
 10258                           ;usb_device.c: 2160: if(0 == 1)
 10259  0042B6  0101               	movlb	1	; () banked
 10260  0042B8  05E3               	decf	_RemoteWakeup& (0+255),w,b
 10261  0042BA  A4D8               	btfss	status,2,c
 10262  0042BC  D042               	goto	l1750
 10263                           
 10264                           ; BSR set to: 1
 10265                           ;usb_device.c: 2166: {
 10266                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10267  0042BE  0104               	movlb	4	; () banked
 10268  0042C0  8338               	bsf	56,1,b	;volatile
 10269                           
 10270                           ; BSR set to: 4
 10271                           ;usb_device.c: 2168: }
 10272                           ;usb_device.c: 2169: break;
 10273  0042C2  D03F               	goto	l1750
 10274  0042C4                     l1751:
 10275                           
 10276                           ; BSR set to: 4
 10277                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10278  0042C4  0100               	movlb	0	; () banked
 10279  0042C6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10280                           
 10281                           ;usb_device.c: 2172: break;
 10282  0042C8  D03C               	goto	l1750
 10283  0042CA                     l1752:
 10284                           
 10285                           ; BSR set to: 4
 10286                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10287  0042CA  0100               	movlb	0	; () banked
 10288  0042CC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10289                           
 10290                           ;usb_device.c: 2178: {
 10291                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10292                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10293  0042CE  0104               	movlb	4	; () banked
 10294  0042D0  BF34               	btfsc	52,7,b	;volatile
 10295  0042D2  D00B               	goto	l1753
 10296                           
 10297                           ; BSR set to: 4
 10298                           ;usb_device.c: 2182: {
 10299                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10300  0042D4  5134               	movf	52,w,b	;volatile
 10301  0042D6  0B0F               	andlw	15
 10302  0042D8  0100               	movlb	0	; () banked
 10303  0042DA  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10304  0042DC  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10305  0042DE  0D02               	mullw	2
 10306  0042E0  0E06               	movlw	low _pBDTEntryOut
 10307  0042E2  24F3               	addwf	prodl,w,c
 10308  0042E4  6ED9               	movwf	fsr2l,c
 10309  0042E6  0E03               	movlw	high _pBDTEntryOut
 10310  0042E8  D00B               	goto	L4
 10311  0042EA                     l1753:
 10312                           
 10313                           ;usb_device.c: 2185: else
 10314                           ;usb_device.c: 2186: {
 10315                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10316                           
 10317                           ; BSR set to: 0
 10318  0042EA  0104               	movlb	4	; () banked
 10319  0042EC  5134               	movf	52,w,b	;volatile
 10320  0042EE  0B0F               	andlw	15
 10321  0042F0  0100               	movlb	0	; () banked
 10322  0042F2  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10323  0042F4  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10324  0042F6  0D02               	mullw	2
 10325  0042F8  0EB6               	movlw	low _pBDTEntryIn
 10326  0042FA  24F3               	addwf	prodl,w,c
 10327  0042FC  6ED9               	movwf	fsr2l,c
 10328  0042FE  0E00               	movlw	high _pBDTEntryIn
 10329  004300                     L4:
 10330  004300  20F4               	addwfc	prodh,w,c
 10331  004302  6EDA               	movwf	fsr2h,c
 10332  004304  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10333  004308  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;usb_device.c: 2188: }
 10337                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10338                           
 10339                           ; BSR set to: 0
 10340  00430C  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10341  004310  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10342  004314  AEDF               	btfss	indf2,7,c
 10343  004316  D015               	goto	l1750
 10344                           
 10345                           ; BSR set to: 0
 10346  004318  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10347  00431C  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10348  004320  A4DF               	btfss	indf2,2,c
 10349  004322  D00F               	goto	l1750
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10353  004324  0E01               	movlw	1
 10354  004326  0104               	movlb	4	; () banked
 10355  004328  6F38               	movwf	56,b	;volatile
 10356                           
 10357                           ; BSR set to: 4
 10358                           ;usb_device.c: 2193: }
 10359                           ;usb_device.c: 2194: }
 10360                           
 10361                           ; BSR set to: 4
 10362                           ;usb_device.c: 2192: break;
 10363  00432A  D00B               	goto	l1750
 10364  00432C                     l1746:
 10365                           
 10366                           ; BSR set to: 4
 10367                           
 10368                           ; BSR set to: 4
 10369  00432C  5130               	movf	48,w,b	;volatile
 10370  00432E  0B1F               	andlw	31
 10371                           
 10372                           ; Switch size 1, requested type "space"
 10373                           ; Number of cases is 3, Range of values is 0 to 2
 10374                           ; switch strategies available:
 10375                           ; Name         Instructions Cycles
 10376                           ; simple_byte           10     6 (average)
 10377                           ;	Chosen strategy is simple_byte
 10378  004330  0A00               	xorlw	0	; case 0
 10379  004332  B4D8               	btfsc	status,2,c
 10380  004334  D7BE               	goto	l1747
 10381  004336  0A01               	xorlw	1	; case 1
 10382  004338  B4D8               	btfsc	status,2,c
 10383  00433A  D7C4               	goto	l1751
 10384  00433C  0A03               	xorlw	3	; case 2
 10385  00433E  B4D8               	btfsc	status,2,c
 10386  004340  D7C4               	goto	l1752
 10387  004342                     l1750:
 10388                           
 10389                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10390  004342  0100               	movlb	0	; () banked
 10391  004344  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10392  004346  0012               	return	
 10393                           
 10394                           ; BSR set to: 0
 10395                           ;usb_device.c: 2197: {
 10396                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10397  004348  0E38               	movlw	56
 10398  00434A  6FB0               	movwf	_inPipes& (0+255),b
 10399  00434C  0E04               	movlw	4
 10400  00434E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10401                           
 10402                           ; BSR set to: 0
 10403                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10404  004350  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10408  004352  0E02               	movlw	2
 10409  004354  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10410  004356  0012               	return	
 10411  004358                     __end_of_USBStdGetStatusHandler:
 10412                           	opt stack 0
 10413                           tosu	equ	0xFFF
 10414                           tosh	equ	0xFFE
 10415                           tosl	equ	0xFFD
 10416                           pclath	equ	0xFFA
 10417                           tblptru	equ	0xFF8
 10418                           tblptrh	equ	0xFF7
 10419                           tblptrl	equ	0xFF6
 10420                           tablat	equ	0xFF5
 10421                           prodh	equ	0xFF4
 10422                           prodl	equ	0xFF3
 10423                           intcon	equ	0xFF2
 10424                           intcon2	equ	0xFF1
 10425                           intcon3	equ	0xFF0
 10426                           postinc0	equ	0xFEE
 10427                           plusw0	equ	0xFEB
 10428                           wreg	equ	0xFE8
 10429                           postinc1	equ	0xFE6
 10430                           postdec1	equ	0xFE5
 10431                           fsr1h	equ	0xFE2
 10432                           fsr1l	equ	0xFE1
 10433                           indf2	equ	0xFDF
 10434                           postinc2	equ	0xFDE
 10435                           postdec2	equ	0xFDD
 10436                           plusw2	equ	0xFDB
 10437                           fsr2h	equ	0xFDA
 10438                           fsr2l	equ	0xFD9
 10439                           status	equ	0xFD8
 10440                           
 10441 ;; *************** function _USBStdGetDscHandler *****************
 10442 ;; Defined at:
 10443 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;		None
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;		None
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  1    wreg      void 
 10450 ;; Registers used:
 10451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10452 ;; Tracked objects:
 10453 ;;		On entry : 0/0
 10454 ;;		On exit  : 0/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10459 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10460 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10461 ;;Total ram usage:        2 bytes
 10462 ;; Hardware stack levels used:    1
 10463 ;; Hardware stack levels required when called:   11
 10464 ;; This function calls:
 10465 ;;		Nothing
 10466 ;; This function is called by:
 10467 ;;		_USBCheckStdRequest
 10468 ;; This function uses a non-reentrant model
 10469 ;;
 10470                           
 10471                           	psect	text42
 10472  002BCC                     __ptext42:
 10473                           	opt stack 0
 10474  002BCC                     _USBStdGetDscHandler:
 10475                           	opt stack 12
 10476                           
 10477                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10478                           
 10479                           ; BSR set to: 0
 10480                           ;incstack = 0
 10481  002BCC  0E80               	movlw	128
 10482  002BCE  0104               	movlb	4	; () banked
 10483  002BD0  1930               	xorwf	48,w,b	;volatile
 10484  002BD2  A4D8               	btfss	status,2,c
 10485  002BD4  0012               	return	
 10486                           
 10487                           ; BSR set to: 4
 10488                           ;usb_device.c: 2064: {
 10489                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10490  002BD6  0EC0               	movlw	192
 10491  002BD8  0100               	movlb	0	; () banked
 10492  002BDA  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10493                           
 10494                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10495  002BDC  D082               	goto	l1733
 10496  002BDE                     
 10497                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10498                           
 10499                           ; BSR set to: 0
 10500  002BDE  0E49               	movlw	low _device_dsc
 10501  002BE0  0100               	movlb	0	; () banked
 10502  002BE2  6FB0               	movwf	_inPipes& (0+255),b
 10503  002BE4  0EFE               	movlw	high _device_dsc
 10504  002BE6  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10508  002BE8  0E00               	movlw	0
 10509  002BEA  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10510  002BEC  0E12               	movlw	18
 10511  002BEE  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10512                           
 10513                           ;usb_device.c: 2076: break;
 10514  002BF0  0012               	return	
 10515  002BF2                     
 10516                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10517                           
 10518                           ; BSR set to: 0
 10519  002BF2  0104               	movlb	4	; () banked
 10520  002BF4  5132               	movf	50,w,b	;volatile
 10521  002BF6  A4D8               	btfss	status,2,c
 10522  002BF8  D040               	goto	l1737
 10523                           
 10524                           ; BSR set to: 4
 10525                           ;usb_device.c: 2082: {
 10526                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10527  002BFA  5132               	movf	50,w,b	;volatile
 10528  002BFC  0D02               	mullw	2
 10529  002BFE  0E2E               	movlw	low _USB_CD_Ptr
 10530  002C00  24F3               	addwf	prodl,w,c
 10531  002C02  6EF6               	movwf	tblptrl,c
 10532  002C04  0EFC               	movlw	high _USB_CD_Ptr
 10533  002C06  20F4               	addwfc	prodh,w,c
 10534  002C08  6EF7               	movwf	tblptrh,c
 10535  002C0A                     	if	0	;There are less than 3 active tblptr bytes
 10536  002C0A                     	endif
 10537  002C0A  0009               	tblrd		*+
 10538  002C0C  CFF5 F0B0          	movff	tablat,_inPipes
 10539  002C10  000A               	tblrd		*-
 10540  002C12  CFF5 F0B1          	movff	tablat,_inPipes+1
 10541                           
 10542                           ; BSR set to: 4
 10543                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10544  002C16  0E02               	movlw	2
 10545  002C18  0100               	movlb	0	; () banked
 10546  002C1A  25B0               	addwf	_inPipes& (0+255),w,b
 10547  002C1C  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10548  002C1E  0E00               	movlw	0
 10549  002C20  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10550  002C22  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10551  002C24  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10552  002C28  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10553  002C2C  6AF8               	clrf	tblptru,c
 10554  002C2E  0E0E               	movlw	(high __ramtop+-1)
 10555  002C30  64F7               	cpfsgt	tblptrh,c
 10556  002C32  D003               	bra	u11707
 10557  002C34  0008               	tblrd		*
 10558  002C36  50F5               	movf	tablat,w,c
 10559  002C38  D005               	bra	u11700
 10560  002C3A                     u11707:
 10561  002C3A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10562  002C3E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10563  002C42  50EF               	movf	indf0,w,c
 10564  002C44                     u11700:
 10565  002C44  0100               	movlb	0	; () banked
 10566  002C46  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10567                           
 10568                           ; BSR set to: 0
 10569                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10570  002C48  0E03               	movlw	3
 10571  002C4A  25B0               	addwf	_inPipes& (0+255),w,b
 10572  002C4C  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10573  002C4E  0E00               	movlw	0
 10574  002C50  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10575  002C52  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10576  002C54  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10577  002C58  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10578  002C5C  6AF8               	clrf	tblptru,c
 10579  002C5E  0E0E               	movlw	(high __ramtop+-1)
 10580  002C60  64F7               	cpfsgt	tblptrh,c
 10581  002C62  D003               	bra	u11717
 10582  002C64  0008               	tblrd		*
 10583  002C66  50F5               	movf	tablat,w,c
 10584  002C68  D005               	bra	u11710
 10585  002C6A                     u11717:
 10586  002C6A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10587  002C6E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10588  002C72  50EF               	movf	indf0,w,c
 10589  002C74                     u11710:
 10590  002C74  0100               	movlb	0	; () banked
 10591  002C76  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10592                           
 10593                           ;usb_device.c: 2094: }
 10594  002C78  0012               	return	
 10595  002C7A                     l1737:
 10596                           
 10597                           ;usb_device.c: 2095: else
 10598                           ;usb_device.c: 2096: {
 10599                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10600                           
 10601                           ; BSR set to: 0
 10602  002C7A  0E00               	movlw	0
 10603  002C7C  0100               	movlb	0	; () banked
 10604  002C7E  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;usb_device.c: 2098: }
 10608                           ;usb_device.c: 2099: break;
 10609  002C80  0012               	return	
 10610  002C82                     
 10611                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10612                           
 10613                           ; BSR set to: 0
 10614  002C82  0E03               	movlw	3
 10615  002C84  0104               	movlb	4	; () banked
 10616  002C86  6132               	cpfslt	50,b	;volatile
 10617  002C88  D024               	goto	l1740
 10618                           
 10619                           ; BSR set to: 4
 10620                           ;usb_device.c: 2105: {
 10621                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10622  002C8A  5132               	movf	50,w,b	;volatile
 10623  002C8C  0D02               	mullw	2
 10624  002C8E  0E1C               	movlw	low _USB_SD_Ptr
 10625  002C90  24F3               	addwf	prodl,w,c
 10626  002C92  6EF6               	movwf	tblptrl,c
 10627  002C94  0EFC               	movlw	high _USB_SD_Ptr
 10628  002C96  20F4               	addwfc	prodh,w,c
 10629  002C98  6EF7               	movwf	tblptrh,c
 10630  002C9A                     	if	0	;There are less than 3 active tblptr bytes
 10631  002C9A                     	endif
 10632  002C9A  0009               	tblrd		*+
 10633  002C9C  CFF5 F0B0          	movff	tablat,_inPipes
 10634  002CA0  000A               	tblrd		*-
 10635  002CA2  CFF5 F0B1          	movff	tablat,_inPipes+1
 10636                           
 10637                           ; BSR set to: 4
 10638                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10639  002CA6  C0B0  FFF6         	movff	_inPipes,tblptrl
 10640  002CAA  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10641  002CAE  6AF8               	clrf	tblptru,c
 10642  002CB0  0E0E               	movlw	(high __ramtop+-1)
 10643  002CB2  64F7               	cpfsgt	tblptrh,c
 10644  002CB4  D003               	bra	u11737
 10645  002CB6  0008               	tblrd		*
 10646  002CB8  50F5               	movf	tablat,w,c
 10647  002CBA  D005               	bra	u11730
 10648  002CBC                     u11737:
 10649  002CBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 10650  002CC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 10651  002CC4  50EF               	movf	indf0,w,c
 10652  002CC6                     u11730:
 10653  002CC6  0100               	movlb	0	; () banked
 10654  002CC8  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10655  002CCA  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10656  002CCC  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10657  002CCE  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10658                           
 10659                           ;usb_device.c: 2110: }
 10660  002CD0  0012               	return	
 10661  002CD2                     l1740:
 10662                           
 10663                           ;usb_device.c: 2120: else
 10664                           ;usb_device.c: 2121: {
 10665                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10666                           
 10667                           ; BSR set to: 0
 10668  002CD2  0E00               	movlw	0
 10669  002CD4  0100               	movlb	0	; () banked
 10670  002CD6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10671                           
 10672                           ; BSR set to: 0
 10673                           ;usb_device.c: 2123: }
 10674                           ;usb_device.c: 2124: break;
 10675  002CD8  0012               	return	
 10676  002CDA                     
 10677                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10678                           
 10679                           ; BSR set to: 0
 10680  002CDA  0E00               	movlw	0
 10681  002CDC  0100               	movlb	0	; () banked
 10682  002CDE  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;usb_device.c: 2128: }
 10686                           
 10687                           ;usb_device.c: 2127: break;
 10688  002CE0  0012               	return	
 10689  002CE2                     l1733:
 10690                           
 10691                           ; BSR set to: 0
 10692                           
 10693                           ; BSR set to: 0
 10694  002CE2  0104               	movlb	4	; () banked
 10695  002CE4  5133               	movf	51,w,b	;volatile
 10696                           
 10697                           ; Switch size 1, requested type "space"
 10698                           ; Number of cases is 3, Range of values is 1 to 3
 10699                           ; switch strategies available:
 10700                           ; Name         Instructions Cycles
 10701                           ; simple_byte           10     6 (average)
 10702                           ;	Chosen strategy is simple_byte
 10703  002CE6  0A01               	xorlw	1	; case 1
 10704  002CE8  B4D8               	btfsc	status,2,c
 10705  002CEA  D779               	goto	l1734
 10706  002CEC  0A03               	xorlw	3	; case 2
 10707  002CEE  B4D8               	btfsc	status,2,c
 10708  002CF0  D780               	goto	l1736
 10709  002CF2  0A01               	xorlw	1	; case 3
 10710  002CF4  B4D8               	btfsc	status,2,c
 10711  002CF6  D7C5               	goto	l1739
 10712  002CF8  D7F0               	goto	l1742
 10713  002CFA                     __end_of_USBStdGetDscHandler:
 10714                           	opt stack 0
 10715                           tosu	equ	0xFFF
 10716                           tosh	equ	0xFFE
 10717                           tosl	equ	0xFFD
 10718                           pclath	equ	0xFFA
 10719                           tblptru	equ	0xFF8
 10720                           tblptrh	equ	0xFF7
 10721                           tblptrl	equ	0xFF6
 10722                           tablat	equ	0xFF5
 10723                           prodh	equ	0xFF4
 10724                           prodl	equ	0xFF3
 10725                           intcon	equ	0xFF2
 10726                           intcon2	equ	0xFF1
 10727                           intcon3	equ	0xFF0
 10728                           indf0	equ	0xFEF
 10729                           postinc0	equ	0xFEE
 10730                           plusw0	equ	0xFEB
 10731                           fsr0h	equ	0xFEA
 10732                           fsr0l	equ	0xFE9
 10733                           wreg	equ	0xFE8
 10734                           postinc1	equ	0xFE6
 10735                           postdec1	equ	0xFE5
 10736                           fsr1h	equ	0xFE2
 10737                           fsr1l	equ	0xFE1
 10738                           indf2	equ	0xFDF
 10739                           postinc2	equ	0xFDE
 10740                           postdec2	equ	0xFDD
 10741                           plusw2	equ	0xFDB
 10742                           fsr2h	equ	0xFDA
 10743                           fsr2l	equ	0xFD9
 10744                           status	equ	0xFD8
 10745                           
 10746 ;; *************** function _USBStdFeatureReqHandler *****************
 10747 ;; Defined at:
 10748 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;		None
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10753 ;;		 -> NULL(0), BDT(48), 
 10754 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10755 ;;		 -> UEP0(1), 
 10756 ;;  current_ep_d    1   52[BANK0 ] struct .
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  1    wreg      void 
 10759 ;; Registers used:
 10760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10767 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10769 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10770 ;;Total ram usage:        6 bytes
 10771 ;; Hardware stack levels used:    1
 10772 ;; Hardware stack levels required when called:   15
 10773 ;; This function calls:
 10774 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10775 ;; This function is called by:
 10776 ;;		_USBCheckStdRequest
 10777 ;; This function uses a non-reentrant model
 10778 ;;
 10779                           
 10780                           	psect	text43
 10781  00135A                     __ptext43:
 10782                           	opt stack 0
 10783  00135A                     _USBStdFeatureReqHandler:
 10784                           	opt stack 8
 10785                           
 10786                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10787                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10788                           ;usb_device.c: 2778: unsigned char* pUEP;
 10789                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10790                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10791                           
 10792                           ;incstack = 0
 10793  00135A  0104               	movlb	4	; () banked
 10794  00135C  0532               	decf	50,w,b	;volatile
 10795  00135E  A4D8               	btfss	status,2,c
 10796  001360  D011               	goto	l1826
 10797                           
 10798                           ; BSR set to: 4
 10799  001362  5130               	movf	48,w,b	;volatile
 10800  001364  0B1F               	andlw	31
 10801  001366  0900               	iorlw	0
 10802  001368  A4D8               	btfss	status,2,c
 10803  00136A  D00C               	goto	l1826
 10804                           
 10805                           ; BSR set to: 4
 10806                           ;usb_device.c: 2818: {
 10807                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10808  00136C  0100               	movlb	0	; () banked
 10809  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10813  001370  0E03               	movlw	3
 10814  001372  0104               	movlb	4	; () banked
 10815  001374  1931               	xorwf	49,w,b	;volatile
 10816  001376  A4D8               	btfss	status,2,c
 10817  001378  D002               	goto	l1825
 10818                           
 10819                           ; BSR set to: 4
 10820                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10821  00137A  0E01               	movlw	1
 10822  00137C  D001               	goto	L5
 10823  00137E                     l1825:
 10824                           
 10825                           ;usb_device.c: 2822: else
 10826                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10827                           
 10828                           ; BSR set to: 1
 10829  00137E  0E00               	movlw	0
 10830  001380                     L5:
 10831  001380  0101               	movlb	1	; () banked
 10832  001382  6FE3               	movwf	_RemoteWakeup& (0+255),b
 10833  001384                     l1826:
 10834                           
 10835                           ;usb_device.c: 2824: }
 10836                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10837                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10838                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10839                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10840                           
 10841                           ; BSR set to: 1
 10842  001384  0104               	movlb	4	; () banked
 10843  001386  5132               	movf	50,w,b	;volatile
 10844  001388  A4D8               	btfss	status,2,c
 10845  00138A  0012               	return	
 10846                           
 10847                           ; BSR set to: 4
 10848  00138C  5130               	movf	48,w,b	;volatile
 10849  00138E  0B1F               	andlw	31
 10850  001390  0A02               	xorlw	2
 10851  001392  A4D8               	btfss	status,2,c
 10852  001394  0012               	return	
 10853                           
 10854                           ; BSR set to: 4
 10855  001396  5134               	movf	52,w,b	;volatile
 10856  001398  0B0F               	andlw	15
 10857  00139A  0900               	iorlw	0
 10858  00139C  B4D8               	btfsc	status,2,c
 10859  00139E  0012               	return	
 10860                           
 10861                           ; BSR set to: 4
 10862  0013A0  5134               	movf	52,w,b	;volatile
 10863  0013A2  0B0F               	andlw	15
 10864  0013A4  0100               	movlb	0	; () banked
 10865  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10866  0013A8  0E03               	movlw	3
 10867  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10868  0013AC  0012               	return	
 10869                           
 10870                           ; BSR set to: 0
 10871  0013AE  0E20               	movlw	32
 10872  0013B0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10873  0013B2  A4D8               	btfss	status,2,c
 10874  0013B4  0012               	return	
 10875                           
 10876                           ; BSR set to: 0
 10877                           ;usb_device.c: 2831: {
 10878                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10879  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10880                           
 10881                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10882  0013B8  0104               	movlb	4	; () banked
 10883  0013BA  BF34               	btfsc	52,7,b	;volatile
 10884  0013BC  D01C               	goto	l1828
 10885                           
 10886                           ; BSR set to: 4
 10887                           ;usb_device.c: 2838: {
 10888                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10889  0013BE  5134               	movf	52,w,b	;volatile
 10890  0013C0  0B0F               	andlw	15
 10891  0013C2  0100               	movlb	0	; () banked
 10892  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10893  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10894  0013C8  0D02               	mullw	2
 10895  0013CA  0E06               	movlw	low _pBDTEntryOut
 10896  0013CC  24F3               	addwf	prodl,w,c
 10897  0013CE  6ED9               	movwf	fsr2l,c
 10898  0013D0  0E03               	movlw	high _pBDTEntryOut
 10899  0013D2  20F4               	addwfc	prodh,w,c
 10900  0013D4  6EDA               	movwf	fsr2h,c
 10901  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10902  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10903                           
 10904                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10905  0013DE  0104               	movlb	4	; () banked
 10906  0013E0  5134               	movf	52,w,b	;volatile
 10907  0013E2  0B0F               	andlw	15
 10908  0013E4  0100               	movlb	0	; () banked
 10909  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10910  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10911  0013EA  0D01               	mullw	1
 10912  0013EC  0ECE               	movlw	low _ep_data_out
 10913  0013EE  24F3               	addwf	prodl,w,c
 10914  0013F0  6ED9               	movwf	fsr2l,c
 10915  0013F2  0E02               	movlw	high _ep_data_out
 10916  0013F4  D01C               	goto	L6
 10917  0013F6                     l1828:
 10918                           
 10919                           ;usb_device.c: 2842: else
 10920                           ;usb_device.c: 2843: {
 10921                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10922                           
 10923                           ; BSR set to: 0
 10924  0013F6  0104               	movlb	4	; () banked
 10925  0013F8  5134               	movf	52,w,b	;volatile
 10926  0013FA  0B0F               	andlw	15
 10927  0013FC  0100               	movlb	0	; () banked
 10928  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10929  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10930  001402  0D02               	mullw	2
 10931  001404  0EB6               	movlw	low _pBDTEntryIn
 10932  001406  24F3               	addwf	prodl,w,c
 10933  001408  6ED9               	movwf	fsr2l,c
 10934  00140A  0E00               	movlw	high _pBDTEntryIn
 10935  00140C  20F4               	addwfc	prodh,w,c
 10936  00140E  6EDA               	movwf	fsr2h,c
 10937  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10938  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10939                           
 10940                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10941  001418  0104               	movlb	4	; () banked
 10942  00141A  5134               	movf	52,w,b	;volatile
 10943  00141C  0B0F               	andlw	15
 10944  00141E  0100               	movlb	0	; () banked
 10945  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10946  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10947  001424  0D01               	mullw	1
 10948  001426  0ED1               	movlw	low _ep_data_in
 10949  001428  24F3               	addwf	prodl,w,c
 10950  00142A  6ED9               	movwf	fsr2l,c
 10951  00142C  0E02               	movlw	high _ep_data_in
 10952  00142E                     L6:
 10953  00142E  20F4               	addwfc	prodh,w,c
 10954  001430  6EDA               	movwf	fsr2h,c
 10955  001432  50DF               	movf	indf2,w,c
 10956  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10957                           
 10958                           ; BSR set to: 0
 10959                           ;usb_device.c: 2846: }
 10960                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10961                           
 10962                           ; BSR set to: 0
 10963  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10964  001438  D002               	goto	l1830
 10965                           
 10966                           ; BSR set to: 0
 10967                           ;usb_device.c: 2853: {
 10968                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10969  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10970                           
 10971                           ;usb_device.c: 2855: }
 10972  00143C  D001               	goto	l1831
 10973  00143E                     l1830:
 10974                           
 10975                           ; BSR set to: 0
 10976                           ;usb_device.c: 2856: else
 10977                           ;usb_device.c: 2857: {
 10978                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10979                           
 10980                           ; BSR set to: 0
 10981  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10982  001440                     l1831:
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;usb_device.c: 2859: }
 10986                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10987                           
 10988                           ; BSR set to: 0
 10989  001440  0104               	movlb	4	; () banked
 10990  001442  BF34               	btfsc	52,7,b	;volatile
 10991  001444  D00B               	goto	l1832
 10992                           
 10993                           ; BSR set to: 4
 10994                           ;usb_device.c: 2865: {
 10995                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10996  001446  5134               	movf	52,w,b	;volatile
 10997  001448  0B0F               	andlw	15
 10998  00144A  0100               	movlb	0	; () banked
 10999  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11000  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11001  001450  0D02               	mullw	2
 11002  001452  0E06               	movlw	low _pBDTEntryOut
 11003  001454  24F3               	addwf	prodl,w,c
 11004  001456  6ED9               	movwf	fsr2l,c
 11005  001458  0E03               	movlw	high _pBDTEntryOut
 11006  00145A  D00B               	goto	L7
 11007  00145C                     l1832:
 11008                           
 11009                           ;usb_device.c: 2868: else
 11010                           ;usb_device.c: 2869: {
 11011                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11012                           
 11013                           ; BSR set to: 0
 11014  00145C  0104               	movlb	4	; () banked
 11015  00145E  5134               	movf	52,w,b	;volatile
 11016  001460  0B0F               	andlw	15
 11017  001462  0100               	movlb	0	; () banked
 11018  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11019  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11020  001468  0D02               	mullw	2
 11021  00146A  0EB6               	movlw	low _pBDTEntryIn
 11022  00146C  24F3               	addwf	prodl,w,c
 11023  00146E  6ED9               	movwf	fsr2l,c
 11024  001470  0E00               	movlw	high _pBDTEntryIn
 11025  001472                     L7:
 11026  001472  20F4               	addwfc	prodh,w,c
 11027  001474  6EDA               	movwf	fsr2h,c
 11028  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11029  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;usb_device.c: 2871: }
 11033                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11034                           
 11035                           ; BSR set to: 0
 11036  00147E  0E03               	movlw	3
 11037  001480  0104               	movlb	4	; () banked
 11038  001482  1931               	xorwf	49,w,b	;volatile
 11039  001484  A4D8               	btfss	status,2,c
 11040  001486  D031               	goto	l1834
 11041                           
 11042                           ; BSR set to: 4
 11043                           ;usb_device.c: 2875: {
 11044                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11045  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11046  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11047  001490  0100               	movlb	0	; () banked
 11048  001492  AEDF               	btfss	indf2,7,c
 11049  001494  D01D               	goto	l1837
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;usb_device.c: 2877: {
 11053                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11054  001496  0104               	movlb	4	; () banked
 11055  001498  BF34               	btfsc	52,7,b	;volatile
 11056  00149A  D00B               	goto	l1836
 11057                           
 11058                           ; BSR set to: 4
 11059                           ;usb_device.c: 2881: {
 11060                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11061  00149C  5134               	movf	52,w,b	;volatile
 11062  00149E  0B0F               	andlw	15
 11063  0014A0  0100               	movlb	0	; () banked
 11064  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11065  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11066  0014A6  0D01               	mullw	1
 11067  0014A8  0ECE               	movlw	low _ep_data_out
 11068  0014AA  24F3               	addwf	prodl,w,c
 11069  0014AC  6ED9               	movwf	fsr2l,c
 11070  0014AE  0E02               	movlw	high _ep_data_out
 11071  0014B0  D00B               	goto	L8
 11072  0014B2                     l1836:
 11073                           
 11074                           ;usb_device.c: 2884: else
 11075                           ;usb_device.c: 2885: {
 11076                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11077                           
 11078                           ; BSR set to: 2
 11079  0014B2  0104               	movlb	4	; () banked
 11080  0014B4  5134               	movf	52,w,b	;volatile
 11081  0014B6  0B0F               	andlw	15
 11082  0014B8  0100               	movlb	0	; () banked
 11083  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11084  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11085  0014BE  0D01               	mullw	1
 11086  0014C0  0ED1               	movlw	low _ep_data_in
 11087  0014C2  24F3               	addwf	prodl,w,c
 11088  0014C4  6ED9               	movwf	fsr2l,c
 11089  0014C6  0E02               	movlw	high _ep_data_in
 11090  0014C8                     L8:
 11091  0014C8  20F4               	addwfc	prodh,w,c
 11092  0014CA  6EDA               	movwf	fsr2h,c
 11093  0014CC  0102               	movlb	2	; () banked
 11094  0014CE  82DF               	bsf	indf2,1,c
 11095  0014D0                     l1837:
 11096                           
 11097                           ;usb_device.c: 2887: }
 11098                           ;usb_device.c: 2888: }
 11099                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11100                           
 11101                           ; BSR set to: 2
 11102                           
 11103                           ; BSR set to: 2
 11104  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11105  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11106  0014D8  0E00               	movlw	0
 11107  0014DA  84DB               	bsf	plusw2,2,c
 11108                           
 11109                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11110  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11111  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11112  0014E4  0E00               	movlw	0
 11113  0014E6  8EDB               	bsf	plusw2,7,c
 11114                           
 11115                           ;usb_device.c: 2893: }
 11116  0014E8  0012               	return	
 11117  0014EA                     l1834:
 11118                           
 11119                           ;usb_device.c: 2894: else
 11120                           ;usb_device.c: 2895: {
 11121                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11122  0014EA  0E04               	movlw	4
 11123  0014EC  0100               	movlb	0	; () banked
 11124  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11125                           
 11126                           ; BSR set to: 0
 11127                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11128  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11129  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11130  0014F8  AEDF               	btfss	indf2,7,c
 11131  0014FA  D01B               	goto	l1839
 11132                           
 11133                           ; BSR set to: 0
 11134                           ;usb_device.c: 2902: {
 11135                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11136  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11137  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11138  001504  0E7F               	movlw	127
 11139  001506  16DF               	andwf	indf2,f,c
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11143  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11144  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11145  001510  0E00               	movlw	0
 11146  001512  8CDB               	bsf	plusw2,6,c
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11150  001514  0E00               	movlw	0
 11151  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11152  001518  0E05               	movlw	5
 11153  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11154  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11155  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11156  001524  0E00               	movlw	0
 11157  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11158  001528  0E02               	movlw	2
 11159  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11160  00152C  EC9D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11161                           
 11162                           ;usb_device.c: 2908: }
 11163  001530  D006               	goto	l1840
 11164  001532                     l1839:
 11165                           
 11166                           ;usb_device.c: 2909: else
 11167                           ;usb_device.c: 2910: {
 11168                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11169  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11170  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11171  00153A  0E00               	movlw	0
 11172  00153C  8CDB               	bsf	plusw2,6,c
 11173  00153E                     l1840:
 11174                           
 11175                           ;usb_device.c: 2913: }
 11176                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11177  00153E  0E04               	movlw	4
 11178  001540  0100               	movlb	0	; () banked
 11179  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11180                           
 11181                           ; BSR set to: 0
 11182                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11183  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11184  001546  D006               	goto	u11950
 11185                           
 11186                           ; BSR set to: 0
 11187  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11188  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11189  001550  AEDF               	btfss	indf2,7,c
 11190  001552  D033               	goto	l1841
 11191  001554                     u11950:
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;usb_device.c: 2924: {
 11195                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11196  001554  0104               	movlb	4	; () banked
 11197  001556  BF34               	btfsc	52,7,b	;volatile
 11198  001558  D00B               	goto	l1844
 11199                           
 11200                           ; BSR set to: 4
 11201                           ;usb_device.c: 2926: {
 11202                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11203  00155A  5134               	movf	52,w,b	;volatile
 11204  00155C  0B0F               	andlw	15
 11205  00155E  0100               	movlb	0	; () banked
 11206  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11207  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11208  001564  0D01               	mullw	1
 11209  001566  0ECE               	movlw	low _ep_data_out
 11210  001568  24F3               	addwf	prodl,w,c
 11211  00156A  6ED9               	movwf	fsr2l,c
 11212  00156C  0E02               	movlw	high _ep_data_out
 11213  00156E  D00B               	goto	L9
 11214  001570                     l1844:
 11215                           
 11216                           ;usb_device.c: 2929: else
 11217                           ;usb_device.c: 2930: {
 11218                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11219                           
 11220                           ; BSR set to: 2
 11221  001570  0104               	movlb	4	; () banked
 11222  001572  5134               	movf	52,w,b	;volatile
 11223  001574  0B0F               	andlw	15
 11224  001576  0100               	movlb	0	; () banked
 11225  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11226  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11227  00157C  0D01               	mullw	1
 11228  00157E  0ED1               	movlw	low _ep_data_in
 11229  001580  24F3               	addwf	prodl,w,c
 11230  001582  6ED9               	movwf	fsr2l,c
 11231  001584  0E02               	movlw	high _ep_data_in
 11232  001586                     L9:
 11233  001586  20F4               	addwfc	prodh,w,c
 11234  001588  6EDA               	movwf	fsr2h,c
 11235  00158A  0102               	movlb	2	; () banked
 11236  00158C  92DF               	bcf	indf2,1,c
 11237                           
 11238                           ; BSR set to: 2
 11239                           ;usb_device.c: 2932: }
 11240                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11241                           
 11242                           ; BSR set to: 2
 11243  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11244  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11245  001596  0E3B               	movlw	59
 11246  001598  16DF               	andwf	indf2,f,c
 11247                           
 11248                           ; BSR set to: 2
 11249                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11250  00159A  0E00               	movlw	0
 11251  00159C  0100               	movlb	0	; () banked
 11252  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11253  0015A0  0E05               	movlw	5
 11254  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11255  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11256  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11257  0015AC  0E00               	movlw	0
 11258  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11259  0015B0  0E02               	movlw	2
 11260  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11261  0015B4  EC9D  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11262                           
 11263                           ;usb_device.c: 2938: }
 11264  0015B8  D006               	goto	l1846
 11265  0015BA                     l1841:
 11266                           
 11267                           ;usb_device.c: 2939: else
 11268                           ;usb_device.c: 2940: {
 11269                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11270  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11271  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11272  0015C2  0E3B               	movlw	59
 11273  0015C4  16DF               	andwf	indf2,f,c
 11274  0015C6                     l1846:
 11275                           
 11276                           ;usb_device.c: 2943: }
 11277                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11278  0015C6  0104               	movlb	4	; () banked
 11279  0015C8  5134               	movf	52,w,b	;volatile
 11280  0015CA  0B0F               	andlw	15
 11281  0015CC  0100               	movlb	0	; () banked
 11282  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11283  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11284  0015D2  0D01               	mullw	1
 11285  0015D4  0E26               	movlw	38
 11286  0015D6  24F3               	addwf	prodl,w,c
 11287  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11288  0015DA  0E0F               	movlw	15
 11289  0015DC  20F4               	addwfc	prodh,w,c
 11290  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11294  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11295  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11296  0015E8  0EFE               	movlw	254
 11297  0015EA  16DF               	andwf	indf2,f,c
 11298                           
 11299                           ; BSR set to: 0
 11300  0015EC  0012               	return	
 11301  0015EE                     __end_of_USBStdFeatureReqHandler:
 11302                           	opt stack 0
 11303                           tosu	equ	0xFFF
 11304                           tosh	equ	0xFFE
 11305                           tosl	equ	0xFFD
 11306                           pclath	equ	0xFFA
 11307                           tblptru	equ	0xFF8
 11308                           tblptrh	equ	0xFF7
 11309                           tblptrl	equ	0xFF6
 11310                           tablat	equ	0xFF5
 11311                           prodh	equ	0xFF4
 11312                           prodl	equ	0xFF3
 11313                           intcon	equ	0xFF2
 11314                           intcon2	equ	0xFF1
 11315                           intcon3	equ	0xFF0
 11316                           indf0	equ	0xFEF
 11317                           postinc0	equ	0xFEE
 11318                           plusw0	equ	0xFEB
 11319                           fsr0h	equ	0xFEA
 11320                           fsr0l	equ	0xFE9
 11321                           wreg	equ	0xFE8
 11322                           postinc1	equ	0xFE6
 11323                           postdec1	equ	0xFE5
 11324                           fsr1h	equ	0xFE2
 11325                           fsr1l	equ	0xFE1
 11326                           indf2	equ	0xFDF
 11327                           postinc2	equ	0xFDE
 11328                           postdec2	equ	0xFDD
 11329                           plusw2	equ	0xFDB
 11330                           fsr2h	equ	0xFDA
 11331                           fsr2l	equ	0xFD9
 11332                           status	equ	0xFD8
 11333                           
 11334 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11335 ;; Defined at:
 11336 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;  event           2   41[BANK0 ] enum E8366
 11339 ;;  pdata           2   43[BANK0 ] PTR void 
 11340 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11341 ;;  size            2   45[BANK0 ] unsigned int 
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;		None
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      unsigned char 
 11346 ;; Registers used:
 11347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11353 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11355 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11356 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11357 ;;Total ram usage:        8 bytes
 11358 ;; Hardware stack levels used:    1
 11359 ;; Hardware stack levels required when called:   14
 11360 ;; This function calls:
 11361 ;;		_CDCInitEP
 11362 ;;		_USBCheckCDCRequest
 11363 ;; This function is called by:
 11364 ;;		_USBDeviceTasks
 11365 ;;		_USBStdSetCfgHandler
 11366 ;;		_USBSuspend
 11367 ;;		_USBWakeFromSuspend
 11368 ;;		_USBCtrlTrfSetupHandler
 11369 ;;		_USBCheckStdRequest
 11370 ;;		_USBStdFeatureReqHandler
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           	psect	text44
 11375  00573A                     __ptext44:
 11376                           	opt stack 0
 11377  00573A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11378                           	opt stack 12
 11379                           
 11380                           ;usb_device_mgr.c: 106: switch( (int) event )
 11381                           
 11382                           ;incstack = 0
 11383  00573A  D006               	goto	l2000
 11384  00573C                     
 11385                           ;usb_device_mgr.c: 134: CDCInitEP();
 11386  00573C  EC33  F02A         	call	_CDCInitEP	;wreg free
 11387                           
 11388                           ;usb_device_mgr.c: 142: break;
 11389                           
 11390                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11391                           
 11392                           ;usb_device_mgr.c: 139: break;
 11393  005740  0012               	return	
 11394  005742                     
 11395                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11396  005742  ECAC  F021         	call	_USBCheckCDCRequest	;wreg free
 11397                           
 11398                           ;usb_device_mgr.c: 163: }
 11399                           
 11400                           ;usb_device_mgr.c: 162: break;
 11401                           
 11402                           ;usb_device_mgr.c: 161: default:
 11403                           
 11404                           ;usb_device_mgr.c: 159: break;
 11405                           
 11406                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11407                           
 11408                           ;usb_device_mgr.c: 156: break;
 11409                           
 11410                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11411                           
 11412                           ;usb_device_mgr.c: 153: break;
 11413  005746  0012               	return	
 11414  005748                     l2000:
 11415  005748  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11416  00574C  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11417                           
 11418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11419                           ; Switch size 1, requested type "space"
 11420                           ; Number of cases is 2, Range of values is 0 to 127
 11421                           ; switch strategies available:
 11422                           ; Name         Instructions Cycles
 11423                           ; simple_byte            7     4 (average)
 11424                           ;	Chosen strategy is simple_byte
 11425  005750  0100               	movlb	0	; () banked
 11426  005752  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11427  005754  0A00               	xorlw	0	; case 0
 11428  005756  B4D8               	btfsc	status,2,c
 11429  005758  D004               	goto	l16805
 11430  00575A  0A7F               	xorlw	127	; case 127
 11431  00575C  A4D8               	btfss	status,2,c
 11432  00575E  0012               	return	
 11433  005760  D018               	goto	l16807
 11434  005762                     l16805:
 11435                           
 11436                           ; BSR set to: 0
 11437                           ; Switch size 1, requested type "space"
 11438                           ; Number of cases is 8, Range of values is 1 to 117
 11439                           ; switch strategies available:
 11440                           ; Name         Instructions Cycles
 11441                           ; simple_byte           25    13 (average)
 11442                           ;	Chosen strategy is simple_byte
 11443  005762  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11444  005764  0A01               	xorlw	1	; case 1
 11445  005766  B4D8               	btfsc	status,2,c
 11446  005768  D7E9               	goto	l2006
 11447  00576A  0A03               	xorlw	3	; case 2
 11448  00576C  B4D8               	btfsc	status,2,c
 11449  00576E  0012               	return	
 11450  005770  0A01               	xorlw	1	; case 3
 11451  005772  B4D8               	btfsc	status,2,c
 11452  005774  D7E6               	goto	l2008
 11453  005776  0A06               	xorlw	6	; case 5
 11454  005778  B4D8               	btfsc	status,2,c
 11455  00577A  0012               	return	
 11456  00577C  0A77               	xorlw	119	; case 114
 11457  00577E  B4D8               	btfsc	status,2,c
 11458  005780  0012               	return	
 11459  005782  0A01               	xorlw	1	; case 115
 11460  005784  B4D8               	btfsc	status,2,c
 11461  005786  0012               	return	
 11462  005788  0A07               	xorlw	7	; case 116
 11463  00578A  B4D8               	btfsc	status,2,c
 11464  00578C  0012               	return	
 11465  00578E  0A01               	xorlw	1	; case 117
 11466  005790  0012               	return	
 11467  005792                     l16807:
 11468                           
 11469                           ; BSR set to: 0
 11470                           ; Switch size 1, requested type "space"
 11471                           ; Number of cases is 1, Range of values is 255 to 255
 11472                           ; switch strategies available:
 11473                           ; Name         Instructions Cycles
 11474                           ; simple_byte            4     3 (average)
 11475                           ;	Chosen strategy is simple_byte
 11476  005792  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11477  005794  0AFF               	xorlw	255	; case 255
 11478  005796  0012               	return	
 11479  005798                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11480                           	opt stack 0
 11481                           tosu	equ	0xFFF
 11482                           tosh	equ	0xFFE
 11483                           tosl	equ	0xFFD
 11484                           pclath	equ	0xFFA
 11485                           tblptru	equ	0xFF8
 11486                           tblptrh	equ	0xFF7
 11487                           tblptrl	equ	0xFF6
 11488                           tablat	equ	0xFF5
 11489                           prodh	equ	0xFF4
 11490                           prodl	equ	0xFF3
 11491                           intcon	equ	0xFF2
 11492                           intcon2	equ	0xFF1
 11493                           intcon3	equ	0xFF0
 11494                           indf0	equ	0xFEF
 11495                           postinc0	equ	0xFEE
 11496                           plusw0	equ	0xFEB
 11497                           fsr0h	equ	0xFEA
 11498                           fsr0l	equ	0xFE9
 11499                           wreg	equ	0xFE8
 11500                           postinc1	equ	0xFE6
 11501                           postdec1	equ	0xFE5
 11502                           fsr1h	equ	0xFE2
 11503                           fsr1l	equ	0xFE1
 11504                           indf2	equ	0xFDF
 11505                           postinc2	equ	0xFDE
 11506                           postdec2	equ	0xFDD
 11507                           plusw2	equ	0xFDB
 11508                           fsr2h	equ	0xFDA
 11509                           fsr2l	equ	0xFD9
 11510                           status	equ	0xFD8
 11511                           
 11512 ;; *************** function _USBCheckCDCRequest *****************
 11513 ;; Defined at:
 11514 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11515 ;; Parameters:    Size  Location     Type
 11516 ;;		None
 11517 ;; Auto vars:     Size  Location     Type
 11518 ;;		None
 11519 ;; Return value:  Size  Location     Type
 11520 ;;                  1    wreg      void 
 11521 ;; Registers used:
 11522 ;;		wreg, status,2, status,0
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11532 ;;Total ram usage:        0 bytes
 11533 ;; Hardware stack levels used:    1
 11534 ;; Hardware stack levels required when called:   11
 11535 ;; This function calls:
 11536 ;;		Nothing
 11537 ;; This function is called by:
 11538 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           	psect	text45
 11543  004358                     __ptext45:
 11544                           	opt stack 0
 11545  004358                     _USBCheckCDCRequest:
 11546                           	opt stack 14
 11547                           
 11548                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11549                           
 11550                           ;incstack = 0
 11551  004358  0104               	movlb	4	; () banked
 11552  00435A  5130               	movf	48,w,b	;volatile
 11553  00435C  0B1F               	andlw	31
 11554  00435E  06E8               	decf	wreg,f,c
 11555  004360  A4D8               	btfss	status,2,c
 11556  004362  0012               	return	
 11557                           
 11558                           ; BSR set to: 4
 11559                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11560                           
 11561                           ; BSR set to: 4
 11562                           
 11563                           ; BSR set to: 4
 11564  004364  3930               	swapf	48,w,b	;volatile
 11565  004366  32E8               	rrcf	wreg,f,c
 11566  004368  0B03               	andlw	3
 11567  00436A  06E8               	decf	wreg,f,c
 11568  00436C  A4D8               	btfss	status,2,c
 11569  00436E  0012               	return	
 11570                           
 11571                           ; BSR set to: 4
 11572                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11573                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11574                           
 11575                           ; BSR set to: 4
 11576                           
 11577                           ; BSR set to: 4
 11578  004370  5134               	movf	52,w,b	;volatile
 11579  004372  B4D8               	btfsc	status,2,c
 11580  004374  D037               	goto	l1902
 11581                           
 11582                           ; BSR set to: 4
 11583  004376  0534               	decf	52,w,b	;volatile
 11584  004378  A4D8               	btfss	status,2,c
 11585  00437A  0012               	return	
 11586  00437C  D033               	goto	l1902
 11587  00437E                     
 11588                           ; BSR set to: 4
 11589                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11590                           
 11591                           ; BSR set to: 4
 11592  00437E  0E79               	movlw	low _dummy_encapsulated_cmd_response
 11593  004380  0100               	movlb	0	; () banked
 11594  004382  6FB0               	movwf	_inPipes& (0+255),b
 11595  004384  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11596  004386  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11597                           
 11598                           ; BSR set to: 0
 11599                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11600  004388  0E00               	movlw	0
 11601  00438A  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11602  00438C  0E08               	movlw	8
 11603  00438E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11604                           
 11605                           ; BSR set to: 0
 11606                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11607  004390  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11611  004392  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11612                           
 11613                           ;usb_device_cdc.c: 178: break;
 11614  004394  0012               	return	
 11615  004396                     
 11616                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11617                           
 11618                           ; BSR set to: 0
 11619  004396  0E79               	movlw	low _dummy_encapsulated_cmd_response
 11620  004398  0100               	movlb	0	; () banked
 11621  00439A  6FB0               	movwf	_inPipes& (0+255),b
 11622  00439C  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11623  00439E  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11624                           
 11625                           ; BSR set to: 0
 11626                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11627  0043A0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11628                           
 11629                           ;usb_device_cdc.c: 183: break;
 11630  0043A2  0012               	return	
 11631  0043A4                     l1906:
 11632                           
 11633                           ; BSR set to: 4
 11634                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11635  0043A4  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11636  0043A8  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11637                           
 11638                           ; BSR set to: 4
 11639                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11640  0043AC  0E81               	movlw	low _line_coding
 11641  0043AE  0101               	movlb	1	; () banked
 11642  0043B0  6FC9               	movwf	_outPipes& (0+255),b
 11643  0043B2  0E03               	movlw	high _line_coding
 11644  0043B4  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11645                           
 11646                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11647  0043B6  0E00               	movlw	0
 11648  0043B8  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11649  0043BA  0E00               	movlw	0
 11650  0043BC  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11651                           
 11652                           ; BSR set to: 1
 11653                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11654  0043BE  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11655                           
 11656                           ;usb_device_cdc.c: 192: break;
 11657  0043C0  0012               	return	
 11658  0043C2                     
 11659                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11660                           
 11661                           ; BSR set to: 1
 11662  0043C2  0E81               	movlw	low _line_coding
 11663  0043C4  0100               	movlb	0	; () banked
 11664  0043C6  6FB0               	movwf	_inPipes& (0+255),b
 11665  0043C8  0E03               	movlw	high _line_coding
 11666  0043CA  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11667                           
 11668                           ; BSR set to: 0
 11669  0043CC  0E00               	movlw	0
 11670  0043CE  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11671  0043D0  0E07               	movlw	7
 11672  0043D2  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11673                           
 11674                           ; BSR set to: 0
 11675  0043D4  0EC1               	movlw	193
 11676  0043D6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11677                           
 11678                           ;usb_device_cdc.c: 199: break;
 11679  0043D8  0012               	return	
 11680  0043DA                     l1908:
 11681                           
 11682                           ; BSR set to: 4
 11683                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11684  0043DA  C432 F1DE          	movff	1074,_control_signal_bitmap	;volatile
 11685                           
 11686                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11687  0043DE  0100               	movlb	0	; () banked
 11688  0043E0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;usb_device_cdc.c: 261: }
 11692                           
 11693                           ; BSR set to: 0
 11694                           ;usb_device_cdc.c: 260: break;
 11695                           
 11696                           ;usb_device_cdc.c: 259: default:
 11697                           
 11698                           ;usb_device_cdc.c: 235: break;
 11699  0043E2  0012               	return	
 11700  0043E4                     l1902:
 11701                           
 11702                           ; BSR set to: 0
 11703  0043E4  0104               	movlb	4	; () banked
 11704  0043E6  5131               	movf	49,w,b	;volatile
 11705                           
 11706                           ; Switch size 1, requested type "space"
 11707                           ; Number of cases is 5, Range of values is 0 to 34
 11708                           ; switch strategies available:
 11709                           ; Name         Instructions Cycles
 11710                           ; simple_byte           16     9 (average)
 11711                           ;	Chosen strategy is simple_byte
 11712  0043E8  0A00               	xorlw	0	; case 0
 11713  0043EA  B4D8               	btfsc	status,2,c
 11714  0043EC  D7C8               	goto	l1903
 11715  0043EE  0A01               	xorlw	1	; case 1
 11716  0043F0  B4D8               	btfsc	status,2,c
 11717  0043F2  D7D1               	goto	l1905
 11718  0043F4  0A21               	xorlw	33	; case 32
 11719  0043F6  B4D8               	btfsc	status,2,c
 11720  0043F8  D7D5               	goto	l1906
 11721  0043FA  0A01               	xorlw	1	; case 33
 11722  0043FC  B4D8               	btfsc	status,2,c
 11723  0043FE  D7E1               	goto	l1907
 11724  004400  0A03               	xorlw	3	; case 34
 11725  004402  A4D8               	btfss	status,2,c
 11726  004404  0012               	return	
 11727  004406  D7E9               	goto	l1908
 11728  004408                     __end_of_USBCheckCDCRequest:
 11729                           	opt stack 0
 11730                           tosu	equ	0xFFF
 11731                           tosh	equ	0xFFE
 11732                           tosl	equ	0xFFD
 11733                           pclath	equ	0xFFA
 11734                           tblptru	equ	0xFF8
 11735                           tblptrh	equ	0xFF7
 11736                           tblptrl	equ	0xFF6
 11737                           tablat	equ	0xFF5
 11738                           prodh	equ	0xFF4
 11739                           prodl	equ	0xFF3
 11740                           intcon	equ	0xFF2
 11741                           intcon2	equ	0xFF1
 11742                           intcon3	equ	0xFF0
 11743                           indf0	equ	0xFEF
 11744                           postinc0	equ	0xFEE
 11745                           plusw0	equ	0xFEB
 11746                           fsr0h	equ	0xFEA
 11747                           fsr0l	equ	0xFE9
 11748                           wreg	equ	0xFE8
 11749                           postinc1	equ	0xFE6
 11750                           postdec1	equ	0xFE5
 11751                           fsr1h	equ	0xFE2
 11752                           fsr1l	equ	0xFE1
 11753                           indf2	equ	0xFDF
 11754                           postinc2	equ	0xFDE
 11755                           postdec2	equ	0xFDD
 11756                           plusw2	equ	0xFDB
 11757                           fsr2h	equ	0xFDA
 11758                           fsr2l	equ	0xFD9
 11759                           status	equ	0xFD8
 11760                           
 11761 ;; *************** function _CDCInitEP *****************
 11762 ;; Defined at:
 11763 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;		None
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;		None
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  1    wreg      void 
 11770 ;; Registers used:
 11771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11781 ;;Total ram usage:        0 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:   13
 11784 ;; This function calls:
 11785 ;;		_USBEnableEndpoint
 11786 ;;		_USBTransferOnePacket
 11787 ;; This function is called by:
 11788 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11789 ;; This function uses a non-reentrant model
 11790 ;;
 11791                           
 11792                           	psect	text46
 11793  005466                     __ptext46:
 11794                           	opt stack 0
 11795  005466                     _CDCInitEP:
 11796                           	opt stack 12
 11797                           
 11798                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11799                           
 11800                           ;incstack = 0
 11801  005466  0E80               	movlw	128
 11802  005468  0103               	movlb	3	; () banked
 11803  00546A  6F81               	movwf	_line_coding& (0+255),b
 11804  00546C  0E25               	movlw	37
 11805  00546E  6F82               	movwf	(_line_coding+1)& (0+255),b
 11806  005470  0E00               	movlw	0
 11807  005472  6F83               	movwf	(_line_coding+2)& (0+255),b
 11808  005474  0E00               	movlw	0
 11809  005476  6F84               	movwf	(_line_coding+3)& (0+255),b
 11810                           
 11811                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11812  005478  0E00               	movlw	0
 11813  00547A  6F85               	movwf	(_line_coding+4)& (0+255),b
 11814                           
 11815                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11816  00547C  0E00               	movlw	0
 11817  00547E  6F86               	movwf	(_line_coding+5)& (0+255),b
 11818                           
 11819                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11820  005480  0E08               	movlw	8
 11821  005482  6F87               	movwf	(_line_coding+6)& (0+255),b
 11822                           
 11823                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11824  005484  0E00               	movlw	0
 11825  005486  0100               	movlb	0	; () banked
 11826  005488  6FC7               	movwf	_cdc_rx_len& (0+255),b
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11830  00548A  0E1A               	movlw	26
 11831  00548C  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11832  00548E  0E01               	movlw	1
 11833  005490  ECEC  F02F         	call	_USBEnableEndpoint
 11834                           
 11835                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11836  005494  0E1E               	movlw	30
 11837  005496  0100               	movlb	0	; () banked
 11838  005498  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11839  00549A  0E02               	movlw	2
 11840  00549C  ECEC  F02F         	call	_USBEnableEndpoint
 11841                           
 11842                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11843  0054A0  0E00               	movlw	0
 11844  0054A2  0100               	movlb	0	; () banked
 11845  0054A4  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11846  0054A6  0E00               	movlw	low _cdc_data_rx
 11847  0054A8  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11848  0054AA  0E05               	movlw	high _cdc_data_rx
 11849  0054AC  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11850  0054AE  0E40               	movlw	64
 11851  0054B0  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11852  0054B2  0E02               	movlw	2
 11853  0054B4  ECF4  F020         	call	_USBTransferOnePacket
 11854  0054B8  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11855  0054BC  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11856                           
 11857                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11858  0054C0  0E00               	movlw	0
 11859  0054C2  0101               	movlb	1	; () banked
 11860  0054C4  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11861  0054C6  0E00               	movlw	0
 11862  0054C8  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11863                           
 11864                           ; BSR set to: 1
 11865                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11866  0054CA  0E00               	movlw	0
 11867  0054CC  0100               	movlb	0	; () banked
 11868  0054CE  6FC6               	movwf	_cdc_trf_state& (0+255),b
 11869                           
 11870                           ; BSR set to: 0
 11871  0054D0  0012               	return		;funcret
 11872  0054D2                     __end_of_CDCInitEP:
 11873                           	opt stack 0
 11874                           tosu	equ	0xFFF
 11875                           tosh	equ	0xFFE
 11876                           tosl	equ	0xFFD
 11877                           pclath	equ	0xFFA
 11878                           tblptru	equ	0xFF8
 11879                           tblptrh	equ	0xFF7
 11880                           tblptrl	equ	0xFF6
 11881                           tablat	equ	0xFF5
 11882                           prodh	equ	0xFF4
 11883                           prodl	equ	0xFF3
 11884                           intcon	equ	0xFF2
 11885                           intcon2	equ	0xFF1
 11886                           intcon3	equ	0xFF0
 11887                           indf0	equ	0xFEF
 11888                           postinc0	equ	0xFEE
 11889                           plusw0	equ	0xFEB
 11890                           fsr0h	equ	0xFEA
 11891                           fsr0l	equ	0xFE9
 11892                           wreg	equ	0xFE8
 11893                           postinc1	equ	0xFE6
 11894                           postdec1	equ	0xFE5
 11895                           fsr1h	equ	0xFE2
 11896                           fsr1l	equ	0xFE1
 11897                           indf2	equ	0xFDF
 11898                           postinc2	equ	0xFDE
 11899                           postdec2	equ	0xFDD
 11900                           plusw2	equ	0xFDB
 11901                           fsr2h	equ	0xFDA
 11902                           fsr2l	equ	0xFD9
 11903                           status	equ	0xFD8
 11904                           
 11905 ;; *************** function _USBEnableEndpoint *****************
 11906 ;; Defined at:
 11907 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11908 ;; Parameters:    Size  Location     Type
 11909 ;;  ep              1    wreg     unsigned char 
 11910 ;;  options         1   37[BANK0 ] unsigned char 
 11911 ;; Auto vars:     Size  Location     Type
 11912 ;;  ep              1   40[BANK0 ] unsigned char 
 11913 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11914 ;;		 -> UEP0(1), 
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  1    wreg      void 
 11917 ;; Registers used:
 11918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11919 ;; Tracked objects:
 11920 ;;		On entry : 0/0
 11921 ;;		On exit  : 0/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11924 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11925 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11927 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11928 ;;Total ram usage:        4 bytes
 11929 ;; Hardware stack levels used:    1
 11930 ;; Hardware stack levels required when called:   12
 11931 ;; This function calls:
 11932 ;;		_USBConfigureEndpoint
 11933 ;; This function is called by:
 11934 ;;		_CDCInitEP
 11935 ;; This function uses a non-reentrant model
 11936 ;;
 11937                           
 11938                           	psect	text47
 11939  005FD8                     __ptext47:
 11940                           	opt stack 0
 11941  005FD8                     _USBEnableEndpoint:
 11942                           	opt stack 12
 11943                           
 11944                           ; BSR set to: 0
 11945                           ;incstack = 0
 11946                           ;USBEnableEndpoint@ep stored from wreg
 11947  005FD8  0100               	movlb	0	; () banked
 11948  005FDA  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11949                           
 11950                           ;usb_device.c: 898: unsigned char* p;
 11951                           ;usb_device.c: 902: if(options & 0x04)
 11952  005FDC  0100               	movlb	0	; () banked
 11953  005FDE  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11954  005FE0  D005               	goto	l1643
 11955                           
 11956                           ; BSR set to: 0
 11957                           ;usb_device.c: 903: {
 11958                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11959  005FE2  0E00               	movlw	0
 11960  005FE4  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11961  005FE6  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11962  005FE8  EC3A  F025         	call	_USBConfigureEndpoint
 11963  005FEC                     l1643:
 11964                           
 11965                           ;usb_device.c: 905: }
 11966                           ;usb_device.c: 906: if(options & 0x02)
 11967  005FEC  0100               	movlb	0	; () banked
 11968  005FEE  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11969  005FF0  D005               	goto	l1644
 11970                           
 11971                           ; BSR set to: 0
 11972                           ;usb_device.c: 907: {
 11973                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11974  005FF2  0E01               	movlw	1
 11975  005FF4  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11976  005FF6  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11977  005FF8  EC3A  F025         	call	_USBConfigureEndpoint
 11978  005FFC                     l1644:
 11979                           
 11980                           ;usb_device.c: 909: }
 11981                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11982  005FFC  0100               	movlb	0	; () banked
 11983  005FFE  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11984  006000  0D01               	mullw	1
 11985  006002  0E26               	movlw	38
 11986  006004  24F3               	addwf	prodl,w,c
 11987  006006  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11988  006008  0E0F               	movlw	15
 11989  00600A  20F4               	addwfc	prodh,w,c
 11990  00600C  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11991                           
 11992                           ; BSR set to: 0
 11993                           ;usb_device.c: 919: *p = options;
 11994  00600E  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11995  006012  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11996  006016  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11997                           
 11998                           ; BSR set to: 0
 11999  00601A  0012               	return		;funcret
 12000  00601C                     __end_of_USBEnableEndpoint:
 12001                           	opt stack 0
 12002                           tosu	equ	0xFFF
 12003                           tosh	equ	0xFFE
 12004                           tosl	equ	0xFFD
 12005                           pclath	equ	0xFFA
 12006                           tblptru	equ	0xFF8
 12007                           tblptrh	equ	0xFF7
 12008                           tblptrl	equ	0xFF6
 12009                           tablat	equ	0xFF5
 12010                           prodh	equ	0xFF4
 12011                           prodl	equ	0xFF3
 12012                           intcon	equ	0xFF2
 12013                           intcon2	equ	0xFF1
 12014                           intcon3	equ	0xFF0
 12015                           indf0	equ	0xFEF
 12016                           postinc0	equ	0xFEE
 12017                           plusw0	equ	0xFEB
 12018                           fsr0h	equ	0xFEA
 12019                           fsr0l	equ	0xFE9
 12020                           wreg	equ	0xFE8
 12021                           postinc1	equ	0xFE6
 12022                           postdec1	equ	0xFE5
 12023                           fsr1h	equ	0xFE2
 12024                           fsr1l	equ	0xFE1
 12025                           indf2	equ	0xFDF
 12026                           postinc2	equ	0xFDE
 12027                           postdec2	equ	0xFDD
 12028                           plusw2	equ	0xFDB
 12029                           fsr2h	equ	0xFDA
 12030                           fsr2l	equ	0xFD9
 12031                           status	equ	0xFD8
 12032                           
 12033 ;; *************** function _USBConfigureEndpoint *****************
 12034 ;; Defined at:
 12035 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12036 ;; Parameters:    Size  Location     Type
 12037 ;;  EPNum           1    wreg     unsigned char 
 12038 ;;  direction       1   29[BANK0 ] unsigned char 
 12039 ;; Auto vars:     Size  Location     Type
 12040 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12041 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12042 ;;		 -> BDT(48), 
 12043 ;; Return value:  Size  Location     Type
 12044 ;;                  1    wreg      void 
 12045 ;; Registers used:
 12046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12047 ;; Tracked objects:
 12048 ;;		On entry : 0/0
 12049 ;;		On exit  : 0/0
 12050 ;;		Unchanged: 0/0
 12051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12052 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12053 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12054 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12055 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12056 ;;Total ram usage:        8 bytes
 12057 ;; Hardware stack levels used:    1
 12058 ;; Hardware stack levels required when called:   11
 12059 ;; This function calls:
 12060 ;;		Nothing
 12061 ;; This function is called by:
 12062 ;;		_USBEnableEndpoint
 12063 ;; This function uses a non-reentrant model
 12064 ;;
 12065                           
 12066                           	psect	text48
 12067  004A74                     __ptext48:
 12068                           	opt stack 0
 12069  004A74                     _USBConfigureEndpoint:
 12070                           	opt stack 12
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;incstack = 0
 12074                           ;USBConfigureEndpoint@EPNum stored from wreg
 12075  004A74  0100               	movlb	0	; () banked
 12076  004A76  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12077                           
 12078                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12079                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12080  004A78  0E00               	movlw	0
 12081  004A7A  0100               	movlb	0	; () banked
 12082  004A7C  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12083  004A7E  0E04               	movlw	4
 12084  004A80  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12088  004A82  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12089  004A84  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12090  004A86  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12091  004A88  90D8               	bcf	status,0,c
 12092  004A8A  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12093  004A8C  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12094  004A8E  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12095  004A90  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12096  004A92  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12097  004A94  90D8               	bcf	status,0,c
 12098  004A96  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12099  004A98  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12100  004A9A  90D8               	bcf	status,0,c
 12101  004A9C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12102  004A9E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12103  004AA0  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12104  004AA2  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12105  004AA4  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12106  004AA6  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12107  004AA8  90D8               	bcf	status,0,c
 12108  004AAA  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12109  004AAC  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12110  004AAE  90D8               	bcf	status,0,c
 12111  004AB0  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12112  004AB2  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12113  004AB4  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12114  004AB6  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12115  004AB8  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12116  004ABA  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12117                           
 12118                           ; BSR set to: 0
 12119                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12120  004ABC  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12121  004AC0  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12122  004AC4  9EDF               	bcf	indf2,7,c
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;usb_device.c: 1575: if(direction == 0)
 12126  004AC6  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12127  004AC8  A4D8               	btfss	status,2,c
 12128  004ACA  D007               	goto	l1679
 12129                           
 12130                           ; BSR set to: 0
 12131                           ;usb_device.c: 1576: {
 12132                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12133  004ACC  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12134  004ACE  0D02               	mullw	2
 12135  004AD0  0E06               	movlw	low _pBDTEntryOut
 12136  004AD2  24F3               	addwf	prodl,w,c
 12137  004AD4  6ED9               	movwf	fsr2l,c
 12138  004AD6  0E03               	movlw	high _pBDTEntryOut
 12139  004AD8  D006               	goto	L10
 12140  004ADA                     l1679:
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;usb_device.c: 1579: else
 12144                           ;usb_device.c: 1580: {
 12145                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12146                           
 12147                           ; BSR set to: 0
 12148  004ADA  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12149  004ADC  0D02               	mullw	2
 12150  004ADE  0EB6               	movlw	low _pBDTEntryIn
 12151  004AE0  24F3               	addwf	prodl,w,c
 12152  004AE2  6ED9               	movwf	fsr2l,c
 12153  004AE4  0E00               	movlw	high _pBDTEntryIn
 12154  004AE6                     L10:
 12155  004AE6  20F4               	addwfc	prodh,w,c
 12156  004AE8  6EDA               	movwf	fsr2h,c
 12157  004AEA  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12158  004AEE  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;usb_device.c: 1582: }
 12162                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12163                           
 12164                           ; BSR set to: 0
 12165  004AF2  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12166  004AF6  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12167  004AFA  9CDF               	bcf	indf2,6,c
 12168                           
 12169                           ; BSR set to: 0
 12170                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12171  004AFC  EE20 F004          	lfsr	2,4
 12172  004B00  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12173  004B02  26D9               	addwf	fsr2l,f,c
 12174  004B04  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12175  004B06  22DA               	addwfc	fsr2h,f,c
 12176  004B08  8CDF               	bsf	indf2,6,c
 12177                           
 12178                           ; BSR set to: 0
 12179  004B0A  0012               	return		;funcret
 12180  004B0C                     __end_of_USBConfigureEndpoint:
 12181                           	opt stack 0
 12182                           tosu	equ	0xFFF
 12183                           tosh	equ	0xFFE
 12184                           tosl	equ	0xFFD
 12185                           pclath	equ	0xFFA
 12186                           tblptru	equ	0xFF8
 12187                           tblptrh	equ	0xFF7
 12188                           tblptrl	equ	0xFF6
 12189                           tablat	equ	0xFF5
 12190                           prodh	equ	0xFF4
 12191                           prodl	equ	0xFF3
 12192                           intcon	equ	0xFF2
 12193                           intcon2	equ	0xFF1
 12194                           intcon3	equ	0xFF0
 12195                           indf0	equ	0xFEF
 12196                           postinc0	equ	0xFEE
 12197                           plusw0	equ	0xFEB
 12198                           fsr0h	equ	0xFEA
 12199                           fsr0l	equ	0xFE9
 12200                           wreg	equ	0xFE8
 12201                           postinc1	equ	0xFE6
 12202                           postdec1	equ	0xFE5
 12203                           fsr1h	equ	0xFE2
 12204                           fsr1l	equ	0xFE1
 12205                           indf2	equ	0xFDF
 12206                           postinc2	equ	0xFDE
 12207                           postdec2	equ	0xFDD
 12208                           plusw2	equ	0xFDB
 12209                           fsr2h	equ	0xFDA
 12210                           fsr2l	equ	0xFD9
 12211                           status	equ	0xFD8
 12212                           
 12213 ;; *************** function _USBCtrlTrfOutHandler *****************
 12214 ;; Defined at:
 12215 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12216 ;; Parameters:    Size  Location     Type
 12217 ;;		None
 12218 ;; Auto vars:     Size  Location     Type
 12219 ;;		None
 12220 ;; Return value:  Size  Location     Type
 12221 ;;                  1    wreg      void 
 12222 ;; Registers used:
 12223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12224 ;; Tracked objects:
 12225 ;;		On entry : 0/0
 12226 ;;		On exit  : 0/0
 12227 ;;		Unchanged: 0/0
 12228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12233 ;;Total ram usage:        0 bytes
 12234 ;; Hardware stack levels used:    1
 12235 ;; Hardware stack levels required when called:   13
 12236 ;; This function calls:
 12237 ;;		_USBCtrlTrfRxService
 12238 ;; This function is called by:
 12239 ;;		_USBCtrlEPService
 12240 ;; This function uses a non-reentrant model
 12241 ;;
 12242                           
 12243                           	psect	text49
 12244  0055A6                     __ptext49:
 12245                           	opt stack 0
 12246  0055A6                     _USBCtrlTrfOutHandler:
 12247                           	opt stack 12
 12248                           
 12249                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12250                           
 12251                           ; BSR set to: 0
 12252                           ;incstack = 0
 12253  0055A6  0E02               	movlw	2
 12254  0055A8  0100               	movlb	0	; () banked
 12255  0055AA  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12256  0055AC  A4D8               	btfss	status,2,c
 12257  0055AE  D003               	goto	l1785
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;usb_device.c: 2558: {
 12261                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12262  0055B0  EC10  F017         	call	_USBCtrlTrfRxService	;wreg free
 12263                           
 12264                           ;usb_device.c: 2560: }
 12265  0055B4  0012               	return	
 12266  0055B6                     l1785:
 12267                           
 12268                           ;usb_device.c: 2561: else
 12269                           ;usb_device.c: 2562: {
 12270                           ;usb_device.c: 2565: controlTransferState = 0;
 12271  0055B6  0E00               	movlw	0
 12272  0055B8  0100               	movlb	0	; () banked
 12273  0055BA  6FCC               	movwf	_controlTransferState& (0+255),b
 12274                           
 12275                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12276  0055BC  0101               	movlb	1	; () banked
 12277  0055BE  51E1               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12278  0055C0  A4D8               	btfss	status,2,c
 12279  0055C2  D020               	goto	l1787
 12280                           
 12281                           ; BSR set to: 1
 12282                           ;usb_device.c: 2573: {
 12283                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12284  0055C4  0100               	movlb	0	; () banked
 12285  0055C6  EE20 F001          	lfsr	2,1
 12286  0055CA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12287  0055CC  26D9               	addwf	fsr2l,f,c
 12288  0055CE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12289  0055D0  22DA               	addwfc	fsr2h,f,c
 12290  0055D2  0E08               	movlw	8
 12291  0055D4  6EDF               	movwf	indf2,c
 12292                           
 12293                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12294  0055D6  EE20 F002          	lfsr	2,2
 12295  0055DA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12296  0055DC  26D9               	addwf	fsr2l,f,c
 12297  0055DE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12298  0055E0  22DA               	addwfc	fsr2h,f,c
 12299  0055E2  0E30               	movlw	48
 12300  0055E4  6EDE               	movwf	postinc2,c
 12301  0055E6  0E04               	movlw	4
 12302  0055E8  6EDD               	movwf	postdec2,c
 12303                           
 12304                           ; BSR set to: 0
 12305                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12306  0055EA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12307  0055EE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12308  0055F2  0E0C               	movlw	12
 12309  0055F4  6EDF               	movwf	indf2,c
 12310                           
 12311                           ; BSR set to: 0
 12312                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12313  0055F6  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12314  0055FA  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12315  0055FE  0E00               	movlw	0
 12316  005600  8EDB               	bsf	plusw2,7,c
 12317                           
 12318                           ;usb_device.c: 2578: }
 12319  005602  0012               	return	
 12320  005604                     l1787:
 12321                           
 12322                           ;usb_device.c: 2579: else
 12323                           ;usb_device.c: 2580: {
 12324                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12325                           
 12326                           ; BSR set to: 0
 12327  005604  0E00               	movlw	0
 12328  005606  0101               	movlb	1	; () banked
 12329  005608  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12330                           
 12331                           ; BSR set to: 1
 12332  00560A  0012               	return	
 12333  00560C                     __end_of_USBCtrlTrfOutHandler:
 12334                           	opt stack 0
 12335                           tosu	equ	0xFFF
 12336                           tosh	equ	0xFFE
 12337                           tosl	equ	0xFFD
 12338                           pclath	equ	0xFFA
 12339                           tblptru	equ	0xFF8
 12340                           tblptrh	equ	0xFF7
 12341                           tblptrl	equ	0xFF6
 12342                           tablat	equ	0xFF5
 12343                           prodh	equ	0xFF4
 12344                           prodl	equ	0xFF3
 12345                           intcon	equ	0xFF2
 12346                           intcon2	equ	0xFF1
 12347                           intcon3	equ	0xFF0
 12348                           indf0	equ	0xFEF
 12349                           postinc0	equ	0xFEE
 12350                           plusw0	equ	0xFEB
 12351                           fsr0h	equ	0xFEA
 12352                           fsr0l	equ	0xFE9
 12353                           wreg	equ	0xFE8
 12354                           postinc1	equ	0xFE6
 12355                           postdec1	equ	0xFE5
 12356                           fsr1h	equ	0xFE2
 12357                           fsr1l	equ	0xFE1
 12358                           indf2	equ	0xFDF
 12359                           postinc2	equ	0xFDE
 12360                           postdec2	equ	0xFDD
 12361                           plusw2	equ	0xFDB
 12362                           fsr2h	equ	0xFDA
 12363                           fsr2l	equ	0xFD9
 12364                           status	equ	0xFD8
 12365                           
 12366 ;; *************** function _USBCtrlTrfRxService *****************
 12367 ;; Defined at:
 12368 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12369 ;; Parameters:    Size  Location     Type
 12370 ;;		None
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12373 ;;  i               1   29[BANK0 ] unsigned char 
 12374 ;; Return value:  Size  Location     Type
 12375 ;;                  1    wreg      void 
 12376 ;; Registers used:
 12377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12378 ;; Tracked objects:
 12379 ;;		On entry : 0/0
 12380 ;;		On exit  : 0/0
 12381 ;;		Unchanged: 0/0
 12382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12384 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12386 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12387 ;;Total ram usage:        2 bytes
 12388 ;; Hardware stack levels used:    1
 12389 ;; Hardware stack levels required when called:   12
 12390 ;; This function calls:
 12391 ;;		_USBCtrlEPAllowStatusStage
 12392 ;; This function is called by:
 12393 ;;		_USBCtrlTrfOutHandler
 12394 ;; This function uses a non-reentrant model
 12395 ;;
 12396                           
 12397                           	psect	text50
 12398  002E20                     __ptext50:
 12399                           	opt stack 0
 12400  002E20                     _USBCtrlTrfRxService:
 12401                           	opt stack 12
 12402                           
 12403                           ;usb_device.c: 1872: uint8_t byteToRead;
 12404                           ;usb_device.c: 1873: uint8_t i;
 12405                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12406                           
 12407                           ;incstack = 0
 12408  002E20  0100               	movlb	0	; () banked
 12409  002E22  EE20 F001          	lfsr	2,1
 12410  002E26  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12411  002E28  26D9               	addwf	fsr2l,f,c
 12412  002E2A  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12413  002E2C  22DA               	addwfc	fsr2h,f,c
 12414  002E2E  50DF               	movf	indf2,w,c
 12415  002E30  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12419  002E32  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12420  002E34  0101               	movlb	1	; () banked
 12421  002E36  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12422  002E38  0E00               	movlw	0
 12423  002E3A  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12424  002E3C  A0D8               	btfss	status,0,c
 12425                           
 12426                           ; BSR set to: 1
 12427                           ;usb_device.c: 1884: {
 12428                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12429  002E3E  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12430                           
 12431                           ; BSR set to: 1
 12432                           ;usb_device.c: 1886: }
 12433                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12434                           
 12435                           ; BSR set to: 1
 12436  002E42  0100               	movlb	0	; () banked
 12437  002E44  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12438  002E46  0101               	movlb	1	; () banked
 12439  002E48  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12440  002E4A  0E00               	movlw	0
 12441  002E4C  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12442                           
 12443                           ; BSR set to: 1
 12444                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12445  002E4E  0E00               	movlw	0
 12446  002E50  0100               	movlb	0	; () banked
 12447  002E52  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12448  002E54  D013               	goto	l1713
 12449  002E56                     
 12450                           ; BSR set to: 0
 12451                           ;usb_device.c: 1893: {
 12452                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12453                           
 12454                           ; BSR set to: 0
 12455  002E56  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12456  002E58  0D01               	mullw	1
 12457  002E5A  0E38               	movlw	56
 12458  002E5C  24F3               	addwf	prodl,w,c
 12459  002E5E  6ED9               	movwf	fsr2l,c
 12460  002E60  0E04               	movlw	4
 12461  002E62  20F4               	addwfc	prodh,w,c
 12462  002E64  6EDA               	movwf	fsr2h,c
 12463  002E66  C1C9  FFE1         	movff	_outPipes,fsr1l
 12464  002E6A  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12465  002E6E  CFDF FFE7          	movff	indf2,indf1
 12466                           
 12467                           ; BSR set to: 0
 12468  002E72  0101               	movlb	1	; () banked
 12469  002E74  4BC9               	infsnz	_outPipes& (0+255),f,b
 12470  002E76  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12471                           
 12472                           ; BSR set to: 1
 12473  002E78  0100               	movlb	0	; () banked
 12474  002E7A  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12475  002E7C                     l1713:
 12476                           
 12477                           ; BSR set to: 0
 12478                           
 12479                           ; BSR set to: 0
 12480  002E7C  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12481  002E7E  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12482  002E80  A0D8               	btfss	status,0,c
 12483  002E82  D7E9               	goto	l1714
 12484                           
 12485                           ; BSR set to: 0
 12486                           ;usb_device.c: 1895: }
 12487                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12488                           
 12489                           ; BSR set to: 0
 12490  002E84  0101               	movlb	1	; () banked
 12491  002E86  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12492  002E88  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12493  002E8A  B4D8               	btfsc	status,2,c
 12494  002E8C  D033               	goto	l1716
 12495                           
 12496                           ; BSR set to: 1
 12497                           ;usb_device.c: 1900: {
 12498                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12499  002E8E  0100               	movlb	0	; () banked
 12500  002E90  EE20 F001          	lfsr	2,1
 12501  002E94  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12502  002E96  26D9               	addwf	fsr2l,f,c
 12503  002E98  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12504  002E9A  22DA               	addwfc	fsr2h,f,c
 12505  002E9C  0E08               	movlw	8
 12506  002E9E  6EDF               	movwf	indf2,c
 12507                           
 12508                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12509  002EA0  EE20 F002          	lfsr	2,2
 12510  002EA4  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12511  002EA6  26D9               	addwf	fsr2l,f,c
 12512  002EA8  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12513  002EAA  22DA               	addwfc	fsr2h,f,c
 12514  002EAC  0E38               	movlw	56
 12515  002EAE  6EDE               	movwf	postinc2,c
 12516  002EB0  0E04               	movlw	4
 12517  002EB2  6EDD               	movwf	postdec2,c
 12518                           
 12519                           ; BSR set to: 0
 12520                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12521  002EB4  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12522  002EB8  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12523  002EBC  BCDF               	btfsc	indf2,6,c
 12524  002EBE  D00D               	goto	l1717
 12525                           
 12526                           ; BSR set to: 0
 12527                           ;usb_device.c: 1904: {
 12528                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12529  002EC0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12530  002EC4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12531  002EC8  0E48               	movlw	72
 12532  002ECA  6EDF               	movwf	indf2,c
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12536  002ECC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12537  002ED0  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12538  002ED4  0E00               	movlw	0
 12539  002ED6  8EDB               	bsf	plusw2,7,c
 12540                           
 12541                           ;usb_device.c: 1907: }
 12542  002ED8  0012               	return	
 12543  002EDA                     l1717:
 12544                           
 12545                           ; BSR set to: 0
 12546                           ;usb_device.c: 1908: else
 12547                           ;usb_device.c: 1909: {
 12548                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12549                           
 12550                           ; BSR set to: 0
 12551  002EDA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12552  002EDE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12553  002EE2  0E08               	movlw	8
 12554  002EE4  6EDF               	movwf	indf2,c
 12555                           
 12556                           ; BSR set to: 0
 12557                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12558  002EE6  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12559  002EEA  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12560  002EEE  0E00               	movlw	0
 12561  002EF0  8EDB               	bsf	plusw2,7,c
 12562                           
 12563                           ; BSR set to: 0
 12564                           ;usb_device.c: 1912: }
 12565                           ;usb_device.c: 1913: }
 12566  002EF2  0012               	return	
 12567  002EF4                     l1716:
 12568                           
 12569                           ;usb_device.c: 1914: else
 12570                           ;usb_device.c: 1915: {
 12571                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12572                           
 12573                           ; BSR set to: 0
 12574  002EF4  0100               	movlb	0	; () banked
 12575  002EF6  EE20 F001          	lfsr	2,1
 12576  002EFA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12577  002EFC  26D9               	addwf	fsr2l,f,c
 12578  002EFE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12579  002F00  22DA               	addwfc	fsr2h,f,c
 12580  002F02  0E08               	movlw	8
 12581  002F04  6EDF               	movwf	indf2,c
 12582                           
 12583                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12584  002F06  EE20 F002          	lfsr	2,2
 12585  002F0A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12586  002F0C  26D9               	addwf	fsr2l,f,c
 12587  002F0E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12588  002F10  22DA               	addwfc	fsr2h,f,c
 12589  002F12  0E30               	movlw	48
 12590  002F14  6EDE               	movwf	postinc2,c
 12591  002F16  0E04               	movlw	4
 12592  002F18  6EDD               	movwf	postdec2,c
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12596  002F1A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12597  002F1E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12598  002F22  0E04               	movlw	4
 12599  002F24  6EDF               	movwf	indf2,c
 12600                           
 12601                           ; BSR set to: 0
 12602                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12603  002F26  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12604  002F2A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12605  002F2E  0E00               	movlw	0
 12606  002F30  8EDB               	bsf	plusw2,7,c
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;usb_device.c: 1944: }
 12610                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12611                           
 12612                           ; BSR set to: 0
 12613  002F32  0101               	movlb	1	; () banked
 12614  002F34  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12615                           
 12616                           ; BSR set to: 1
 12617                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12618  002F36  0100               	movlb	0	; () banked
 12619  002F38  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12620  002F3A  A4D8               	btfss	status,2,c
 12621  002F3C  0012               	return	
 12622                           
 12623                           ; BSR set to: 0
 12624                           ;usb_device.c: 1960: {
 12625                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12626  002F3E  ECD7  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12627  002F42  0012               	return	
 12628  002F44                     __end_of_USBCtrlTrfRxService:
 12629                           	opt stack 0
 12630                           tosu	equ	0xFFF
 12631                           tosh	equ	0xFFE
 12632                           tosl	equ	0xFFD
 12633                           pclath	equ	0xFFA
 12634                           tblptru	equ	0xFF8
 12635                           tblptrh	equ	0xFF7
 12636                           tblptrl	equ	0xFF6
 12637                           tablat	equ	0xFF5
 12638                           prodh	equ	0xFF4
 12639                           prodl	equ	0xFF3
 12640                           intcon	equ	0xFF2
 12641                           intcon2	equ	0xFF1
 12642                           intcon3	equ	0xFF0
 12643                           indf0	equ	0xFEF
 12644                           postinc0	equ	0xFEE
 12645                           plusw0	equ	0xFEB
 12646                           fsr0h	equ	0xFEA
 12647                           fsr0l	equ	0xFE9
 12648                           wreg	equ	0xFE8
 12649                           indf1	equ	0xFE7
 12650                           postinc1	equ	0xFE6
 12651                           postdec1	equ	0xFE5
 12652                           fsr1h	equ	0xFE2
 12653                           fsr1l	equ	0xFE1
 12654                           indf2	equ	0xFDF
 12655                           postinc2	equ	0xFDE
 12656                           postdec2	equ	0xFDD
 12657                           plusw2	equ	0xFDB
 12658                           fsr2h	equ	0xFDA
 12659                           fsr2l	equ	0xFD9
 12660                           status	equ	0xFD8
 12661                           
 12662 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12663 ;; Defined at:
 12664 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;		None
 12667 ;; Auto vars:     Size  Location     Type
 12668 ;;		None
 12669 ;; Return value:  Size  Location     Type
 12670 ;;                  1    wreg      void 
 12671 ;; Registers used:
 12672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12673 ;; Tracked objects:
 12674 ;;		On entry : 0/0
 12675 ;;		On exit  : 0/0
 12676 ;;		Unchanged: 0/0
 12677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12682 ;;Total ram usage:        0 bytes
 12683 ;; Hardware stack levels used:    1
 12684 ;; Hardware stack levels required when called:   11
 12685 ;; This function calls:
 12686 ;;		Nothing
 12687 ;; This function is called by:
 12688 ;;		_USBDeviceTasks
 12689 ;;		_USBCtrlEPServiceComplete
 12690 ;;		_USBCtrlTrfRxService
 12691 ;; This function uses a non-reentrant model
 12692 ;;
 12693                           
 12694                           	psect	text51
 12695  003BAE                     __ptext51:
 12696                           	opt stack 0
 12697  003BAE                     _USBCtrlEPAllowStatusStage:
 12698                           	opt stack 12
 12699                           
 12700                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12701                           
 12702                           ;incstack = 0
 12703  003BAE  0100               	movlb	0	; () banked
 12704  003BB0  51C8               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12705  003BB2  A4D8               	btfss	status,2,c
 12706  003BB4  0012               	return	
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;usb_device.c: 1442: {
 12710                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12711  003BB6  0E01               	movlw	1
 12712  003BB8  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12713                           
 12714                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12715  003BBA  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12716  003BBC  A4D8               	btfss	status,2,c
 12717  003BBE  0012               	return	
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;usb_device.c: 1445: {
 12721                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12722  003BC0  0E01               	movlw	1
 12723  003BC2  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12727  003BC4  0E02               	movlw	2
 12728  003BC6  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12729  003BC8  A4D8               	btfss	status,2,c
 12730  003BCA  D015               	goto	l1667
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;usb_device.c: 1451: {
 12734                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12735  003BCC  EE20 F001          	lfsr	2,1
 12736  003BD0  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12737  003BD2  26D9               	addwf	fsr2l,f,c
 12738  003BD4  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12739  003BD6  22DA               	addwfc	fsr2h,f,c
 12740  003BD8  0E00               	movlw	0
 12741  003BDA  6EDF               	movwf	indf2,c
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12745  003BDC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12746  003BE0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12747  003BE4  0E48               	movlw	72
 12748  003BE6  6EDF               	movwf	indf2,c
 12749                           
 12750                           ; BSR set to: 0
 12751                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12752  003BE8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12753  003BEC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12754  003BF0  0E00               	movlw	0
 12755  003BF2  8EDB               	bsf	plusw2,7,c
 12756                           
 12757                           ;usb_device.c: 1455: }
 12758  003BF4  0012               	return	
 12759  003BF6                     l1667:
 12760                           
 12761                           ; BSR set to: 0
 12762                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12763                           
 12764                           ; BSR set to: 0
 12765  003BF6  05CC               	decf	_controlTransferState& (0+255),w,b
 12766  003BF8  A4D8               	btfss	status,2,c
 12767  003BFA  0012               	return	
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;usb_device.c: 1457: {
 12771                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12772  003BFC  0E00               	movlw	0
 12773  003BFE  0101               	movlb	1	; () banked
 12774  003C00  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12775                           
 12776                           ; BSR set to: 1
 12777                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12778  003C02  0100               	movlb	0	; () banked
 12779  003C04  EE20 F001          	lfsr	2,1
 12780  003C08  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12781  003C0A  26D9               	addwf	fsr2l,f,c
 12782  003C0C  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12783  003C0E  22DA               	addwfc	fsr2h,f,c
 12784  003C10  0E08               	movlw	8
 12785  003C12  6EDF               	movwf	indf2,c
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12789  003C14  EE20 F002          	lfsr	2,2
 12790  003C18  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12791  003C1A  26D9               	addwf	fsr2l,f,c
 12792  003C1C  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12793  003C1E  22DA               	addwfc	fsr2h,f,c
 12794  003C20  0E30               	movlw	48
 12795  003C22  6EDE               	movwf	postinc2,c
 12796  003C24  0E04               	movlw	4
 12797  003C26  6EDD               	movwf	postdec2,c
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12801  003C28  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12802  003C2C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12803  003C30  0E04               	movlw	4
 12804  003C32  6EDF               	movwf	indf2,c
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12808  003C34  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12809  003C38  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12810  003C3C  0E00               	movlw	0
 12811  003C3E  8EDB               	bsf	plusw2,7,c
 12812                           
 12813                           ; BSR set to: 0
 12814                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12815  003C40  0E01               	movlw	1
 12816  003C42  0101               	movlb	1	; () banked
 12817  003C44  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12818                           
 12819                           ; BSR set to: 1
 12820                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12821  003C46  0100               	movlb	0	; () banked
 12822  003C48  EE20 F001          	lfsr	2,1
 12823  003C4C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12824  003C4E  26D9               	addwf	fsr2l,f,c
 12825  003C50  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12826  003C52  22DA               	addwfc	fsr2h,f,c
 12827  003C54  0E08               	movlw	8
 12828  003C56  6EDF               	movwf	indf2,c
 12829                           
 12830                           ; BSR set to: 0
 12831                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12832  003C58  EE20 F002          	lfsr	2,2
 12833  003C5C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12834  003C5E  26D9               	addwf	fsr2l,f,c
 12835  003C60  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12836  003C62  22DA               	addwfc	fsr2h,f,c
 12837  003C64  0E30               	movlw	48
 12838  003C66  6EDE               	movwf	postinc2,c
 12839  003C68  0E04               	movlw	4
 12840  003C6A  6EDD               	movwf	postdec2,c
 12841                           
 12842                           ; BSR set to: 0
 12843                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12844  003C6C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12845  003C70  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12846  003C74  0E80               	movlw	128
 12847  003C76  6EDF               	movwf	indf2,c
 12848                           
 12849                           ; BSR set to: 0
 12850                           
 12851                           ; BSR set to: 0
 12852                           
 12853                           ; BSR set to: 0
 12854  003C78  0012               	return	
 12855  003C7A                     __end_of_USBCtrlEPAllowStatusStage:
 12856                           	opt stack 0
 12857                           tosu	equ	0xFFF
 12858                           tosh	equ	0xFFE
 12859                           tosl	equ	0xFFD
 12860                           pclath	equ	0xFFA
 12861                           tblptru	equ	0xFF8
 12862                           tblptrh	equ	0xFF7
 12863                           tblptrl	equ	0xFF6
 12864                           tablat	equ	0xFF5
 12865                           prodh	equ	0xFF4
 12866                           prodl	equ	0xFF3
 12867                           intcon	equ	0xFF2
 12868                           intcon2	equ	0xFF1
 12869                           intcon3	equ	0xFF0
 12870                           indf0	equ	0xFEF
 12871                           postinc0	equ	0xFEE
 12872                           plusw0	equ	0xFEB
 12873                           fsr0h	equ	0xFEA
 12874                           fsr0l	equ	0xFE9
 12875                           wreg	equ	0xFE8
 12876                           indf1	equ	0xFE7
 12877                           postinc1	equ	0xFE6
 12878                           postdec1	equ	0xFE5
 12879                           fsr1h	equ	0xFE2
 12880                           fsr1l	equ	0xFE1
 12881                           indf2	equ	0xFDF
 12882                           postinc2	equ	0xFDE
 12883                           postdec2	equ	0xFDD
 12884                           plusw2	equ	0xFDB
 12885                           fsr2h	equ	0xFDA
 12886                           fsr2l	equ	0xFD9
 12887                           status	equ	0xFD8
 12888                           
 12889 ;; *************** function _USBCtrlTrfInHandler *****************
 12890 ;; Defined at:
 12891 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12892 ;; Parameters:    Size  Location     Type
 12893 ;;		None
 12894 ;; Auto vars:     Size  Location     Type
 12895 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12896 ;; Return value:  Size  Location     Type
 12897 ;;                  1    wreg      void 
 12898 ;; Registers used:
 12899 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12900 ;; Tracked objects:
 12901 ;;		On entry : 0/0
 12902 ;;		On exit  : 0/0
 12903 ;;		Unchanged: 0/0
 12904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12909 ;;Total ram usage:        1 bytes
 12910 ;; Hardware stack levels used:    1
 12911 ;; Hardware stack levels required when called:   12
 12912 ;; This function calls:
 12913 ;;		_USBCtrlTrfTxService
 12914 ;; This function is called by:
 12915 ;;		_USBCtrlEPService
 12916 ;; This function uses a non-reentrant model
 12917 ;;
 12918                           
 12919                           	psect	text52
 12920  004126                     __ptext52:
 12921                           	opt stack 0
 12922  004126                     _USBCtrlTrfInHandler:
 12923                           	opt stack 13
 12924                           
 12925                           ;usb_device.c: 2611: uint8_t lastDTS;
 12926                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;incstack = 0
 12930  004126  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12931  00412A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12932  00412E  0100               	movlb	0	; () banked
 12933  004130  0E00               	movlw	0
 12934  004132  BCDF               	btfsc	indf2,6,c
 12935  004134  0E01               	movlw	1
 12936  004136  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12937                           
 12938                           ; BSR set to: 0
 12939                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12940  004138  0E04               	movlw	4
 12941  00413A  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12942                           
 12943                           ; BSR set to: 0
 12944                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12945  00413C  0E08               	movlw	8
 12946  00413E  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 12947  004140  A4D8               	btfss	status,2,c
 12948  004142  D00D               	goto	l1794
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;usb_device.c: 2622: {
 12952                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12953  004144  0104               	movlb	4	; () banked
 12954  004146  5132               	movf	50,w,b	;volatile
 12955  004148  0B7F               	andlw	127
 12956  00414A  010F               	movlb	15	; () banked
 12957  00414C  6F38               	movwf	56,b	;volatile
 12958                           
 12959                           ; BSR set to: 15
 12960                           ;usb_device.c: 2624: if(UADDR != 0u)
 12961  00414E  5138               	movf	56,w,b	;volatile
 12962  004150  B4D8               	btfsc	status,2,c
 12963  004152  D002               	goto	l1793
 12964                           
 12965                           ; BSR set to: 15
 12966                           ;usb_device.c: 2625: {
 12967                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12968  004154  0E10               	movlw	16
 12969  004156  D001               	goto	L11
 12970  004158                     l1793:
 12971                           
 12972                           ;usb_device.c: 2628: else
 12973                           ;usb_device.c: 2629: {
 12974                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12975                           
 12976                           ; BSR set to: 0
 12977  004158  0E04               	movlw	4
 12978  00415A                     L11:
 12979  00415A  0100               	movlb	0	; () banked
 12980  00415C  6FCE               	movwf	_USBDeviceState& (0+255),b
 12981  00415E                     l1794:
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;usb_device.c: 2631: }
 12985                           ;usb_device.c: 2632: }
 12986                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12987                           
 12988                           ; BSR set to: 0
 12989                           
 12990                           ; BSR set to: 0
 12991  00415E  05CC               	decf	_controlTransferState& (0+255),w,b
 12992  004160  A4D8               	btfss	status,2,c
 12993  004162  D03B               	goto	l1795
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;usb_device.c: 2636: {
 12997                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12998  004164  EE20 F002          	lfsr	2,2
 12999  004168  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13000  00416A  26D9               	addwf	fsr2l,f,c
 13001  00416C  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13002  00416E  22DA               	addwfc	fsr2h,f,c
 13003  004170  0E38               	movlw	56
 13004  004172  6EDE               	movwf	postinc2,c
 13005  004174  0E04               	movlw	4
 13006  004176  6EDD               	movwf	postdec2,c
 13007                           
 13008                           ; BSR set to: 0
 13009                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13010  004178  EC5F  F01B         	call	_USBCtrlTrfTxService	;wreg free
 13011                           
 13012                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13013  00417C  0E02               	movlw	2
 13014  00417E  0100               	movlb	0	; () banked
 13015  004180  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 13016  004182  A4D8               	btfss	status,2,c
 13017  004184  D00D               	goto	l1796
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;usb_device.c: 2645: {
 13021                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13022  004186  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13023  00418A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13024  00418E  0E04               	movlw	4
 13025  004190  6EDF               	movwf	indf2,c
 13026                           
 13027                           ; BSR set to: 0
 13028                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13029  004192  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13030  004196  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13031  00419A  0E00               	movlw	0
 13032  00419C  8EDB               	bsf	plusw2,7,c
 13033                           
 13034                           ;usb_device.c: 2650: }
 13035  00419E  0012               	return	
 13036  0041A0                     l1796:
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;usb_device.c: 2651: else
 13040                           ;usb_device.c: 2652: {
 13041                           ;usb_device.c: 2653: if(lastDTS == 0)
 13042                           
 13043                           ; BSR set to: 0
 13044  0041A0  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13045  0041A2  A4D8               	btfss	status,2,c
 13046  0041A4  D00D               	goto	l1798
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;usb_device.c: 2654: {
 13050                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13051  0041A6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13052  0041AA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13053  0041AE  0E48               	movlw	72
 13054  0041B0  6EDF               	movwf	indf2,c
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13058  0041B2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13059  0041B6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13060  0041BA  0E00               	movlw	0
 13061  0041BC  8EDB               	bsf	plusw2,7,c
 13062                           
 13063                           ;usb_device.c: 2657: }
 13064  0041BE  0012               	return	
 13065  0041C0                     l1798:
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;usb_device.c: 2658: else
 13069                           ;usb_device.c: 2659: {
 13070                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13071                           
 13072                           ; BSR set to: 0
 13073  0041C0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13074  0041C4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13075  0041C8  0E08               	movlw	8
 13076  0041CA  6EDF               	movwf	indf2,c
 13077                           
 13078                           ; BSR set to: 0
 13079                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13080  0041CC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13081  0041D0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13082  0041D4  0E00               	movlw	0
 13083  0041D6  8EDB               	bsf	plusw2,7,c
 13084                           
 13085                           ; BSR set to: 0
 13086                           ;usb_device.c: 2662: }
 13087                           ;usb_device.c: 2663: }
 13088                           ;usb_device.c: 2664: }
 13089                           
 13090                           ; BSR set to: 0
 13091  0041D8  0012               	return	
 13092  0041DA                     l1795:
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;usb_device.c: 2665: else
 13096                           ;usb_device.c: 2666: {
 13097                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13098  0041DA  0101               	movlb	1	; () banked
 13099  0041DC  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13100                           
 13101                           ; BSR set to: 1
 13102                           ;usb_device.c: 2675: }
 13103                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13104                           
 13105                           ; BSR set to: 1
 13106  0041DE  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13107                           
 13108                           ; BSR set to: 1
 13109                           ;usb_device.c: 2677: }
 13110                           ;usb_device.c: 2679: controlTransferState = 0;
 13111                           
 13112                           ; BSR set to: 1
 13113  0041E0  0E00               	movlw	0
 13114  0041E2  0100               	movlb	0	; () banked
 13115  0041E4  6FCC               	movwf	_controlTransferState& (0+255),b
 13116  0041E6  0012               	return	
 13117  0041E8                     __end_of_USBCtrlTrfInHandler:
 13118                           	opt stack 0
 13119                           tosu	equ	0xFFF
 13120                           tosh	equ	0xFFE
 13121                           tosl	equ	0xFFD
 13122                           pclath	equ	0xFFA
 13123                           tblptru	equ	0xFF8
 13124                           tblptrh	equ	0xFF7
 13125                           tblptrl	equ	0xFF6
 13126                           tablat	equ	0xFF5
 13127                           prodh	equ	0xFF4
 13128                           prodl	equ	0xFF3
 13129                           intcon	equ	0xFF2
 13130                           intcon2	equ	0xFF1
 13131                           intcon3	equ	0xFF0
 13132                           indf0	equ	0xFEF
 13133                           postinc0	equ	0xFEE
 13134                           plusw0	equ	0xFEB
 13135                           fsr0h	equ	0xFEA
 13136                           fsr0l	equ	0xFE9
 13137                           wreg	equ	0xFE8
 13138                           indf1	equ	0xFE7
 13139                           postinc1	equ	0xFE6
 13140                           postdec1	equ	0xFE5
 13141                           fsr1h	equ	0xFE2
 13142                           fsr1l	equ	0xFE1
 13143                           indf2	equ	0xFDF
 13144                           postinc2	equ	0xFDE
 13145                           postdec2	equ	0xFDD
 13146                           plusw2	equ	0xFDB
 13147                           fsr2h	equ	0xFDA
 13148                           fsr2l	equ	0xFD9
 13149                           status	equ	0xFD8
 13150                           
 13151 ;; *************** function _USBCtrlTrfTxService *****************
 13152 ;; Defined at:
 13153 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13154 ;; Parameters:    Size  Location     Type
 13155 ;;		None
 13156 ;; Auto vars:     Size  Location     Type
 13157 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13158 ;; Return value:  Size  Location     Type
 13159 ;;                  1    wreg      void 
 13160 ;; Registers used:
 13161 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13162 ;; Tracked objects:
 13163 ;;		On entry : 0/0
 13164 ;;		On exit  : 0/0
 13165 ;;		Unchanged: 0/0
 13166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13168 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13170 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13171 ;;Total ram usage:        1 bytes
 13172 ;; Hardware stack levels used:    1
 13173 ;; Hardware stack levels required when called:   11
 13174 ;; This function calls:
 13175 ;;		Nothing
 13176 ;; This function is called by:
 13177 ;;		_USBCtrlEPAllowDataStage
 13178 ;;		_USBCtrlTrfInHandler
 13179 ;; This function uses a non-reentrant model
 13180 ;;
 13181                           
 13182                           	psect	text53
 13183  0036BE                     __ptext53:
 13184                           	opt stack 0
 13185  0036BE                     _USBCtrlTrfTxService:
 13186                           	opt stack 11
 13187                           
 13188                           ;usb_device.c: 1791: uint8_t byteToSend;
 13189                           ;usb_device.c: 1795: byteToSend = 8;
 13190                           
 13191                           ; BSR set to: 0
 13192                           ;incstack = 0
 13193  0036BE  0E08               	movlw	8
 13194  0036C0  0100               	movlb	0	; () banked
 13195  0036C2  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13196                           
 13197                           ; BSR set to: 0
 13198                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13199  0036C4  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13200  0036C6  E110               	bnz	l12923
 13201  0036C8  0E08               	movlw	8
 13202  0036CA  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13203  0036CC  B0D8               	btfsc	status,0,c
 13204  0036CE  D00C               	goto	l1700
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;usb_device.c: 1797: {
 13208                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13209  0036D0  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13213  0036D4  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13214  0036D6  A4D8               	btfss	status,2,c
 13215  0036D8  D002               	goto	l1698
 13216                           
 13217                           ; BSR set to: 0
 13218                           ;usb_device.c: 1806: {
 13219                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13220  0036DA  0E01               	movlw	1
 13221  0036DC  D004               	goto	L12
 13222  0036DE                     l1698:
 13223                           
 13224                           ; BSR set to: 0
 13225                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13226                           
 13227                           ; BSR set to: 0
 13228  0036DE  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13229  0036E0  A4D8               	btfss	status,2,c
 13230  0036E2  D002               	goto	l1700
 13231                           
 13232                           ; BSR set to: 0
 13233                           ;usb_device.c: 1810: {
 13234                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13235  0036E4  0E02               	movlw	2
 13236  0036E6                     L12:
 13237  0036E6  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13238  0036E8                     l1700:
 13239  0036E8                     l12923:
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;usb_device.c: 1812: }
 13243                           ;usb_device.c: 1813: }
 13244                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13245  0036E8  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13246  0036EA  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13247  0036EC  0E00               	movlw	0
 13248  0036EE  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13249                           
 13250                           ; BSR set to: 0
 13251                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13252  0036F0  EE20 F001          	lfsr	2,1
 13253  0036F4  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13254  0036F6  26D9               	addwf	fsr2l,f,c
 13255  0036F8  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13256  0036FA  22DA               	addwfc	fsr2h,f,c
 13257  0036FC  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13261  003700  0E38               	movlw	56
 13262  003702  0102               	movlb	2	; () banked
 13263  003704  6FD4               	movwf	_pDst& (0+255),b
 13264  003706  0E04               	movlw	4
 13265  003708  6FD5               	movwf	(_pDst+1)& (0+255),b
 13266                           
 13267                           ; BSR set to: 2
 13268                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13269  00370A  0100               	movlb	0	; () banked
 13270  00370C  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13271  00370E  D01E               	goto	l1702
 13272  003710  D03E               	goto	l1706
 13273  003712                     
 13274                           ; BSR set to: 0
 13275                           ;usb_device.c: 1830: {
 13276                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13277                           
 13278                           ; BSR set to: 0
 13279  003712  C0B0  FFF6         	movff	_inPipes,tblptrl
 13280  003716  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13281  00371A  6AF8               	clrf	tblptru,c
 13282  00371C  C2D4  FFD9         	movff	_pDst,fsr2l
 13283  003720  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13284  003724  0E0E               	movlw	(high __ramtop+-1)
 13285  003726  64F7               	cpfsgt	tblptrh,c
 13286  003728  D003               	bra	u11497
 13287  00372A  0008               	tblrd		*
 13288  00372C  50F5               	movf	tablat,w,c
 13289  00372E  D005               	bra	u11490
 13290  003730                     u11497:
 13291  003730  CFF6 FFE9          	movff	tblptrl,fsr0l
 13292  003734  CFF7 FFEA          	movff	tblptrh,fsr0h
 13293  003738  50EF               	movf	indf0,w,c
 13294  00373A                     u11490:
 13295  00373A  6EDF               	movwf	indf2,c
 13296  00373C  0100               	movlb	0	; () banked
 13297  00373E  4BB0               	infsnz	_inPipes& (0+255),f,b
 13298  003740  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13299                           
 13300                           ; BSR set to: 0
 13301  003742  0102               	movlb	2	; () banked
 13302  003744  4BD4               	infsnz	_pDst& (0+255),f,b
 13303  003746  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13304                           
 13305                           ; BSR set to: 2
 13306                           ;usb_device.c: 1832: byteToSend--;
 13307  003748  0100               	movlb	0	; () banked
 13308  00374A  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13309  00374C                     l1702:
 13310                           
 13311                           ; BSR set to: 0
 13312                           
 13313                           ; BSR set to: 0
 13314  00374C  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13315  00374E  B4D8               	btfsc	status,2,c
 13316  003750  0012               	return	
 13317  003752  D7DF               	goto	l1703
 13318  003754                     
 13319                           ; BSR set to: 0
 13320                           ;usb_device.c: 1838: {
 13321                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13322                           
 13323                           ; BSR set to: 0
 13324  003754  C0B0  FFF6         	movff	_inPipes,tblptrl
 13325  003758  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13326  00375C  6AF8               	clrf	tblptru,c
 13327  00375E  C2D4  FFD9         	movff	_pDst,fsr2l
 13328  003762  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13329  003766  0E0E               	movlw	(high __ramtop+-1)
 13330  003768  64F7               	cpfsgt	tblptrh,c
 13331  00376A  D003               	bra	u11517
 13332  00376C  0008               	tblrd		*
 13333  00376E  50F5               	movf	tablat,w,c
 13334  003770  D005               	bra	u11510
 13335  003772                     u11517:
 13336  003772  CFF6 FFE9          	movff	tblptrl,fsr0l
 13337  003776  CFF7 FFEA          	movff	tblptrh,fsr0h
 13338  00377A  50EF               	movf	indf0,w,c
 13339  00377C                     u11510:
 13340  00377C  6EDF               	movwf	indf2,c
 13341  00377E  0100               	movlb	0	; () banked
 13342  003780  4BB0               	infsnz	_inPipes& (0+255),f,b
 13343  003782  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13344                           
 13345                           ; BSR set to: 0
 13346  003784  0102               	movlb	2	; () banked
 13347  003786  4BD4               	infsnz	_pDst& (0+255),f,b
 13348  003788  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13349                           
 13350                           ; BSR set to: 2
 13351                           ;usb_device.c: 1840: byteToSend--;
 13352  00378A  0100               	movlb	0	; () banked
 13353  00378C  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13354  00378E                     l1706:
 13355                           
 13356                           ; BSR set to: 0
 13357                           
 13358                           ; BSR set to: 0
 13359  00378E  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13360  003790  B4D8               	btfsc	status,2,c
 13361  003792  0012               	return	
 13362  003794  D7DF               	goto	l1707
 13363  003796                     __end_of_USBCtrlTrfTxService:
 13364                           	opt stack 0
 13365                           tosu	equ	0xFFF
 13366                           tosh	equ	0xFFE
 13367                           tosl	equ	0xFFD
 13368                           pclath	equ	0xFFA
 13369                           tblptru	equ	0xFF8
 13370                           tblptrh	equ	0xFF7
 13371                           tblptrl	equ	0xFF6
 13372                           tablat	equ	0xFF5
 13373                           prodh	equ	0xFF4
 13374                           prodl	equ	0xFF3
 13375                           intcon	equ	0xFF2
 13376                           intcon2	equ	0xFF1
 13377                           intcon3	equ	0xFF0
 13378                           indf0	equ	0xFEF
 13379                           postinc0	equ	0xFEE
 13380                           plusw0	equ	0xFEB
 13381                           fsr0h	equ	0xFEA
 13382                           fsr0l	equ	0xFE9
 13383                           wreg	equ	0xFE8
 13384                           indf1	equ	0xFE7
 13385                           postinc1	equ	0xFE6
 13386                           postdec1	equ	0xFE5
 13387                           fsr1h	equ	0xFE2
 13388                           fsr1l	equ	0xFE1
 13389                           indf2	equ	0xFDF
 13390                           postinc2	equ	0xFDE
 13391                           postdec2	equ	0xFDD
 13392                           plusw2	equ	0xFDB
 13393                           fsr2h	equ	0xFDA
 13394                           fsr2l	equ	0xFD9
 13395                           status	equ	0xFD8
 13396                           
 13397 ;; *************** function _CDCTxService *****************
 13398 ;; Defined at:
 13399 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;		None
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13404 ;;  i               1   36[BANK0 ] unsigned char 
 13405 ;; Return value:  Size  Location     Type
 13406 ;;                  1    wreg      void 
 13407 ;; Registers used:
 13408 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13409 ;; Tracked objects:
 13410 ;;		On entry : 0/0
 13411 ;;		On exit  : 0/0
 13412 ;;		Unchanged: 0/0
 13413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13415 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13417 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13418 ;;Total ram usage:        2 bytes
 13419 ;; Hardware stack levels used:    1
 13420 ;; Hardware stack levels required when called:   12
 13421 ;; This function calls:
 13422 ;;		_USBTransferOnePacket
 13423 ;; This function is called by:
 13424 ;;		_UsbDevice_MainTask
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           	psect	text54
 13429  00281C                     __ptext54:
 13430                           	opt stack 0
 13431  00281C                     _CDCTxService:
 13432                           	opt stack 15
 13433                           
 13434                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13435                           ;usb_device_cdc.c: 842: uint8_t i;
 13436                           ;usb_device_cdc.c: 844: ;
 13437                           ;usb_device_cdc.c: 846: {};
 13438                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;incstack = 0
 13442  00281C  0101               	movlb	1	; () banked
 13443  00281E  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13444  002820  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13445  002822  B4D8               	btfsc	status,2,c
 13446  002824  D006               	goto	l1952
 13447                           
 13448                           ; BSR set to: 1
 13449  002826  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13450  00282A  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13451  00282E  BEDF               	btfsc	indf2,7,c
 13452  002830  0012               	return	
 13453  002832                     l1952:
 13454                           
 13455                           ; BSR set to: 1
 13456                           ;usb_device_cdc.c: 852: }
 13457                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13458                           
 13459                           ; BSR set to: 1
 13460  002832  0E03               	movlw	3
 13461  002834  0100               	movlb	0	; () banked
 13462  002836  19C6               	xorwf	_cdc_trf_state& (0+255),w,b
 13463  002838  A4D8               	btfss	status,2,c
 13464  00283A  D002               	goto	l1954
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13468  00283C  0E00               	movlw	0
 13469  00283E  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13470  002840                     l1954:
 13471                           
 13472                           ; BSR set to: 0
 13473                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13474  002840  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13475  002842  B4D8               	btfsc	status,2,c
 13476  002844  0012               	return	
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;usb_device_cdc.c: 869: }
 13480                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13481                           
 13482                           ; BSR set to: 0
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;usb_device_cdc.c: 866: {
 13486                           ;usb_device_cdc.c: 867: ;
 13487                           ;usb_device_cdc.c: 868: return;
 13488  002846  0E02               	movlw	2
 13489  002848  19C6               	xorwf	_cdc_trf_state& (0+255),w,b
 13490  00284A  A4D8               	btfss	status,2,c
 13491  00284C  D013               	goto	l1956
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;usb_device_cdc.c: 875: {
 13495                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13496  00284E  0E01               	movlw	1
 13497  002850  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13498  002852  0E00               	movlw	0
 13499  002854  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13500  002856  0E00               	movlw	0
 13501  002858  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13502  00285A  0E00               	movlw	0
 13503  00285C  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13504  00285E  0E02               	movlw	2
 13505  002860  ECF4  F020         	call	_USBTransferOnePacket
 13506  002864  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13507  002868  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13508                           
 13509                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13510  00286C  0E03               	movlw	3
 13511  00286E  0100               	movlb	0	; () banked
 13512  002870  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13513                           
 13514                           ;usb_device_cdc.c: 879: }
 13515  002872  0012               	return	
 13516  002874                     l1956:
 13517                           
 13518                           ; BSR set to: 0
 13519                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13520                           
 13521                           ; BSR set to: 0
 13522  002874  05C6               	decf	_cdc_trf_state& (0+255),w,b
 13523  002876  A4D8               	btfss	status,2,c
 13524  002878  0012               	return	
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;usb_device_cdc.c: 881: {
 13528                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13529  00287A  0E40               	movlw	64
 13530  00287C  65C5               	cpfsgt	_cdc_tx_len& (0+255),b
 13531  00287E  D003               	goto	l1959
 13532                           
 13533                           ; BSR set to: 0
 13534                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13535  002880  0E40               	movlw	64
 13536  002882  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13537  002884  D002               	goto	l1960
 13538  002886                     l1959:
 13539                           
 13540                           ; BSR set to: 0
 13541                           ;usb_device_cdc.c: 887: else
 13542                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13543  002886  C0C5  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13544  00288A                     l1960:
 13545                           
 13546                           ; BSR set to: 0
 13547                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13548                           
 13549                           ; BSR set to: 0
 13550  00288A  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13551  00288C  0800               	sublw	0
 13552  00288E  25C5               	addwf	_cdc_tx_len& (0+255),w,b
 13553  002890  6FC5               	movwf	_cdc_tx_len& (0+255),b
 13554                           
 13555                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13556  002892  0EB6               	movlw	low _cdc_data_tx
 13557  002894  0102               	movlb	2	; () banked
 13558  002896  6FC8               	movwf	_pCDCDst& (0+255),b
 13559  002898  0E07               	movlw	high _cdc_data_tx
 13560  00289A  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13561                           
 13562                           ; BSR set to: 2
 13563                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13564  00289C  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13565                           
 13566                           ; BSR set to: 2
 13567                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13568  0028A0  0101               	movlb	1	; () banked
 13569  0028A2  51DF               	movf	_cdc_mem_type& (0+255),w,b
 13570  0028A4  B4D8               	btfsc	status,2,c
 13571  0028A6  D01D               	goto	l1962
 13572  0028A8  D03D               	goto	l1966
 13573  0028AA                     
 13574                           ;usb_device_cdc.c: 901: {
 13575                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13576                           
 13577                           ; BSR set to: 1
 13578  0028AA  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13579  0028AE  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13580  0028B2  6AF8               	clrf	tblptru,c
 13581  0028B4  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13582  0028B8  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13583  0028BC  0E0E               	movlw	(high __ramtop+-1)
 13584  0028BE  64F7               	cpfsgt	tblptrh,c
 13585  0028C0  D003               	bra	u15587
 13586  0028C2  0008               	tblrd		*
 13587  0028C4  50F5               	movf	tablat,w,c
 13588  0028C6  D005               	bra	u15580
 13589  0028C8                     u15587:
 13590  0028C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 13591  0028CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 13592  0028D0  50EF               	movf	indf0,w,c
 13593  0028D2                     u15580:
 13594  0028D2  6EDF               	movwf	indf2,c
 13595                           
 13596                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13597  0028D4  0102               	movlb	2	; () banked
 13598  0028D6  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13599  0028D8  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13600                           
 13601                           ; BSR set to: 2
 13602                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13603  0028DA  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13604  0028DC  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13605                           
 13606                           ; BSR set to: 2
 13607                           ;usb_device_cdc.c: 905: i--;
 13608  0028DE  0100               	movlb	0	; () banked
 13609  0028E0  0784               	decf	CDCTxService@i& (0+255),f,b
 13610  0028E2                     l1962:
 13611                           
 13612                           ; BSR set to: 0
 13613  0028E2  0100               	movlb	0	; () banked
 13614  0028E4  5184               	movf	CDCTxService@i& (0+255),w,b
 13615  0028E6  B4D8               	btfsc	status,2,c
 13616  0028E8  D021               	goto	u15610
 13617  0028EA  D7DF               	goto	l1963
 13618  0028EC                     
 13619                           ; BSR set to: 0
 13620                           ;usb_device_cdc.c: 911: {
 13621                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13622                           
 13623                           ; BSR set to: 0
 13624  0028EC  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13625  0028F0  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13626  0028F4  6AF8               	clrf	tblptru,c
 13627  0028F6  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13628  0028FA  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13629  0028FE  0E0E               	movlw	(high __ramtop+-1)
 13630  002900  64F7               	cpfsgt	tblptrh,c
 13631  002902  D003               	bra	u15607
 13632  002904  0008               	tblrd		*
 13633  002906  50F5               	movf	tablat,w,c
 13634  002908  D005               	bra	u15600
 13635  00290A                     u15607:
 13636  00290A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13637  00290E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13638  002912  50EF               	movf	indf0,w,c
 13639  002914                     u15600:
 13640  002914  6EDF               	movwf	indf2,c
 13641                           
 13642                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13643  002916  0102               	movlb	2	; () banked
 13644  002918  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13645  00291A  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13646                           
 13647                           ; BSR set to: 2
 13648                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13649  00291C  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13650  00291E  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13651                           
 13652                           ; BSR set to: 2
 13653                           ;usb_device_cdc.c: 915: i--;
 13654  002920  0100               	movlb	0	; () banked
 13655  002922  0784               	decf	CDCTxService@i& (0+255),f,b
 13656  002924                     l1966:
 13657                           
 13658                           ; BSR set to: 0
 13659  002924  0100               	movlb	0	; () banked
 13660  002926  5184               	movf	CDCTxService@i& (0+255),w,b
 13661  002928  A4D8               	btfss	status,2,c
 13662  00292A  D7E0               	goto	l1967
 13663  00292C                     u15610:
 13664                           
 13665                           ; BSR set to: 0
 13666                           ;usb_device_cdc.c: 916: }
 13667                           ;usb_device_cdc.c: 917: }
 13668                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13669                           
 13670                           ; BSR set to: 0
 13671                           
 13672                           ; BSR set to: 0
 13673  00292C  51C5               	movf	_cdc_tx_len& (0+255),w,b
 13674  00292E  A4D8               	btfss	status,2,c
 13675  002930  D008               	goto	l1971
 13676                           
 13677                           ; BSR set to: 0
 13678                           ;usb_device_cdc.c: 924: {
 13679                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13680  002932  0E40               	movlw	64
 13681  002934  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13682  002936  A4D8               	btfss	status,2,c
 13683  002938  D002               	goto	l1970
 13684                           
 13685                           ; BSR set to: 0
 13686                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13687  00293A  0E02               	movlw	2
 13688  00293C  D001               	goto	L13
 13689  00293E                     l1970:
 13690                           
 13691                           ; BSR set to: 0
 13692                           ;usb_device_cdc.c: 927: else
 13693                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13694                           
 13695                           ; BSR set to: 0
 13696  00293E  0E03               	movlw	3
 13697  002940                     L13:
 13698  002940  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13699  002942                     l1971:
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;usb_device_cdc.c: 929: }
 13703                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13704                           
 13705                           ; BSR set to: 0
 13706                           
 13707                           ; BSR set to: 0
 13708  002942  0E01               	movlw	1
 13709  002944  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13710  002946  0EB6               	movlw	low _cdc_data_tx
 13711  002948  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13712  00294A  0E07               	movlw	high _cdc_data_tx
 13713  00294C  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13714  00294E  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13715  002952  0E02               	movlw	2
 13716  002954  ECF4  F020         	call	_USBTransferOnePacket
 13717  002958  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13718  00295C  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13719  002960  0012               	return	
 13720  002962                     __end_of_CDCTxService:
 13721                           	opt stack 0
 13722                           tosu	equ	0xFFF
 13723                           tosh	equ	0xFFE
 13724                           tosl	equ	0xFFD
 13725                           pclath	equ	0xFFA
 13726                           tblptru	equ	0xFF8
 13727                           tblptrh	equ	0xFF7
 13728                           tblptrl	equ	0xFF6
 13729                           tablat	equ	0xFF5
 13730                           prodh	equ	0xFF4
 13731                           prodl	equ	0xFF3
 13732                           intcon	equ	0xFF2
 13733                           intcon2	equ	0xFF1
 13734                           intcon3	equ	0xFF0
 13735                           indf0	equ	0xFEF
 13736                           postinc0	equ	0xFEE
 13737                           plusw0	equ	0xFEB
 13738                           fsr0h	equ	0xFEA
 13739                           fsr0l	equ	0xFE9
 13740                           wreg	equ	0xFE8
 13741                           indf1	equ	0xFE7
 13742                           postinc1	equ	0xFE6
 13743                           postdec1	equ	0xFE5
 13744                           fsr1h	equ	0xFE2
 13745                           fsr1l	equ	0xFE1
 13746                           indf2	equ	0xFDF
 13747                           postinc2	equ	0xFDE
 13748                           postdec2	equ	0xFDD
 13749                           plusw2	equ	0xFDB
 13750                           fsr2h	equ	0xFDA
 13751                           fsr2l	equ	0xFD9
 13752                           status	equ	0xFD8
 13753                           
 13754 ;; *************** function _Term_MainSm *****************
 13755 ;; Defined at:
 13756 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13757 ;; Parameters:    Size  Location     Type
 13758 ;;		None
 13759 ;; Auto vars:     Size  Location     Type
 13760 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13761 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13762 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13763 ;;  FwkBuildYear    4    0        unsigned char [4]
 13764 ;;  FwkBuildMont    4    0        unsigned char [4]
 13765 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13766 ;; Return value:  Size  Location     Type
 13767 ;;                  1    wreg      void 
 13768 ;; Registers used:
 13769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13770 ;; Tracked objects:
 13771 ;;		On entry : 0/0
 13772 ;;		On exit  : 0/0
 13773 ;;		Unchanged: 0/0
 13774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13776 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13778 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13779 ;;Total ram usage:       12 bytes
 13780 ;; Hardware stack levels used:    1
 13781 ;; Hardware stack levels required when called:   16
 13782 ;; This function calls:
 13783 ;;		_OsTmr_GetTimerStatus
 13784 ;;		_OsTmr_StartTimer
 13785 ;;		_Terminal
 13786 ;;		_memset
 13787 ;;		_putUSBUSART
 13788 ;;		_sprintf
 13789 ;;		_strcat
 13790 ;;		_strcpy
 13791 ;;		_strlen
 13792 ;;		_utoa
 13793 ;; This function is called by:
 13794 ;;		_Term_MainTask
 13795 ;; This function uses a non-reentrant model
 13796 ;;
 13797                           
 13798                           	psect	text55
 13799  0010B6                     __ptext55:
 13800                           	opt stack 0
 13801  0010B6                     _Term_MainSm:
 13802                           	opt stack 11
 13803                           
 13804                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13805                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13806                           ;term.c: 711: static UINT8 Data[50];
 13807                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13808                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13809                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13810                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13811                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13812                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13813                           ;term.c: 719: switch (TermMainSmState)
 13814                           
 13815                           ;incstack = 0
 13816  0010B6  D133               	goto	l2464
 13817  0010B8                     
 13818                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13819  0010B8  0ED2               	movlw	low Term_MainSm@TermDelay
 13820  0010BA  0100               	movlb	0	; () banked
 13821  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13822  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13823  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13824  0010C2  0ED0               	movlw	208
 13825  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13826  0010C6  0E07               	movlw	7
 13827  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13828  0010CA  0E00               	movlw	0
 13829  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13830  0010CE  0E00               	movlw	0
 13831  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13832  0010D2  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 13833                           
 13834                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13835  0010D6  0E01               	movlw	1
 13836  0010D8  0102               	movlb	2	; () banked
 13837  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13838                           
 13839                           ;term.c: 726: break;
 13840  0010DC  0012               	return	
 13841  0010DE                     
 13842                           ; BSR set to: 2
 13843                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13844                           
 13845                           ; BSR set to: 2
 13846  0010DE  0ED2               	movlw	low Term_MainSm@TermDelay
 13847  0010E0  0100               	movlb	0	; () banked
 13848  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13849  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13850  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13851  0010E8  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 13852  0010EC  06E8               	decf	wreg,f,c
 13853  0010EE  A4D8               	btfss	status,2,c
 13854  0010F0  0012               	return	
 13855                           
 13856                           ;term.c: 731: {
 13857                           ;term.c: 733: TermMainSmState = Term_InitState;
 13858  0010F2  0E02               	movlw	2
 13859  0010F4  0102               	movlb	2	; () banked
 13860  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13861                           
 13862                           ; BSR set to: 2
 13863                           ;term.c: 734: }
 13864                           ;term.c: 735: break;
 13865  0010F8  0012               	return	
 13866  0010FA                     
 13867                           ; BSR set to: 2
 13868                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13869                           
 13870                           ; BSR set to: 2
 13871  0010FA  0E1F               	movlw	31
 13872  0010FC  0100               	movlb	0	; () banked
 13873  0010FE  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13874  001100  0012               	return	
 13875                           
 13876                           ; BSR set to: 0
 13877  001102  B265               	btfsc	3941,1,c	;volatile
 13878  001104  0012               	return	
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;term.c: 743: else
 13882                           ;term.c: 744: {
 13883                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13884                           
 13885                           ; BSR set to: 0
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;term.c: 740: {
 13889                           ;term.c: 742: }
 13890  001106  0E03               	movlw	3
 13891  001108  0102               	movlb	2	; () banked
 13892  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13893                           
 13894                           ; BSR set to: 2
 13895                           ;term.c: 747: }
 13896                           ;term.c: 748: break;
 13897  00110C  0012               	return	
 13898  00110E                     
 13899                           ; BSR set to: 2
 13900                           ;term.c: 752: if((cdc_trf_state == 0))
 13901                           
 13902                           ; BSR set to: 2
 13903  00110E  0100               	movlb	0	; () banked
 13904  001110  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13905  001112  A4D8               	btfss	status,2,c
 13906  001114  0012               	return	
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;term.c: 753: {
 13910                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13911  001116  0E22               	movlw	low _Welcome
 13912  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13913  00111A  0EFD               	movlw	high _Welcome
 13914  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13915  00111E  0E88               	movlw	136
 13916  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13917  001122  EC94  F033         	call	_putUSBUSART	;wreg free
 13918                           
 13919                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13920  001126  0E04               	movlw	4
 13921  001128  0102               	movlb	2	; () banked
 13922  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13923                           
 13924                           ; BSR set to: 2
 13925                           ;term.c: 758: }
 13926                           ;term.c: 759: break;
 13927  00112C  0012               	return	
 13928  00112E                     
 13929                           ; BSR set to: 2
 13930                           ;term.c: 763: if((cdc_trf_state == 0))
 13931                           
 13932                           ; BSR set to: 2
 13933  00112E  0100               	movlb	0	; () banked
 13934  001130  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13935  001132  A4D8               	btfss	status,2,c
 13936  001134  0012               	return	
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;term.c: 764: {
 13940                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13941  001136  0E32               	movlw	low _MsgFormat
 13942  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13943  00113A  0EFC               	movlw	high _MsgFormat
 13944  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13945  00113E  0EEF               	movlw	239
 13946  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13947  001142  EC94  F033         	call	_putUSBUSART	;wreg free
 13948                           
 13949                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13950  001146  0E05               	movlw	5
 13951  001148  0102               	movlb	2	; () banked
 13952  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13953                           
 13954                           ; BSR set to: 2
 13955                           ;term.c: 769: }
 13956                           ;term.c: 770: break;
 13957  00114C  0012               	return	
 13958  00114E                     
 13959                           ; BSR set to: 2
 13960                           ;term.c: 774: if((cdc_trf_state == 0))
 13961                           
 13962                           ; BSR set to: 2
 13963  00114E  0100               	movlb	0	; () banked
 13964  001150  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13965  001152  A4D8               	btfss	status,2,c
 13966  001154  0012               	return	
 13967                           
 13968                           ; BSR set to: 0
 13969                           ;term.c: 775: {
 13970                           ;term.c: 777: memset(Data,0,50);
 13971  001156  0E61               	movlw	low Term_MainSm@Data
 13972  001158  6F7D               	movwf	memset@p1& (0+255),b
 13973  00115A  0E04               	movlw	high Term_MainSm@Data
 13974  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13975  00115E  0E00               	movlw	0
 13976  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13977  001162  0E00               	movlw	0
 13978  001164  6F7F               	movwf	memset@c& (0+255),b
 13979  001166  0E00               	movlw	0
 13980  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13981  00116A  0E32               	movlw	50
 13982  00116C  6F81               	movwf	memset@n& (0+255),b
 13983  00116E  EC3C  F032         	call	_memset	;wreg free
 13984                           
 13985                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13986  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13987  001174  0100               	movlb	0	; () banked
 13988  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13989  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13990  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13991  00117C  0E00               	movlw	0
 13992  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13993  001180  0E01               	movlw	1
 13994  001182  6F8C               	movwf	utoa@val& (0+255),b
 13995  001184  0E00               	movlw	0
 13996  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13997  001188  0E0A               	movlw	10
 13998  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13999  00118C  EC5A  F022         	call	_utoa	;wreg free
 14000                           
 14001                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 14002  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14003  001192  0100               	movlb	0	; () banked
 14004  001194  6F8A               	movwf	utoa@buf& (0+255),b
 14005  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14006  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14007  00119A  0E00               	movlw	0
 14008  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14009  00119E  0E02               	movlw	2
 14010  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 14011  0011A2  0E00               	movlw	0
 14012  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14013  0011A6  0E0A               	movlw	10
 14014  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 14015  0011AA  EC5A  F022         	call	_utoa	;wreg free
 14016                           
 14017                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 14018  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14019  0011B0  0100               	movlb	0	; () banked
 14020  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 14021  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14022  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14023  0011B8  0E00               	movlw	0
 14024  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14025  0011BC  0E00               	movlw	0
 14026  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 14027  0011C0  0E00               	movlw	0
 14028  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14029  0011C4  0E0A               	movlw	10
 14030  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 14031  0011C8  EC5A  F022         	call	_utoa	;wreg free
 14032                           
 14033                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14034  0011CC  0E61               	movlw	low Term_MainSm@Data
 14035  0011CE  0100               	movlb	0	; () banked
 14036  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 14037  0011D2  0E04               	movlw	high Term_MainSm@Data
 14038  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14039  0011D6  0ED2               	movlw	low STR_23
 14040  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 14041  0011DA  0EFE               	movlw	high STR_23
 14042  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14043  0011DE  EC0B  F032         	call	_strcpy	;wreg free
 14044                           
 14045                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14046  0011E2  0E61               	movlw	low Term_MainSm@Data
 14047  0011E4  0100               	movlb	0	; () banked
 14048  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 14049  0011E8  0E04               	movlw	high Term_MainSm@Data
 14050  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14051  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14052  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 14053  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14054  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 14055  0011F4  ECFB  F02B         	call	_strcat	;wreg free
 14056                           
 14057                           ;term.c: 784: strcat(Data,".");
 14058  0011F8  0E61               	movlw	low Term_MainSm@Data
 14059  0011FA  0100               	movlb	0	; () banked
 14060  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 14061  0011FE  0E04               	movlw	high Term_MainSm@Data
 14062  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14063  001202  0EF5               	movlw	low STR_24
 14064  001204  6F7F               	movwf	strcat@from& (0+255),b
 14065  001206  0EFF               	movlw	high STR_24
 14066  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 14067  00120A  ECFB  F02B         	call	_strcat	;wreg free
 14068                           
 14069                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14070  00120E  0E61               	movlw	low Term_MainSm@Data
 14071  001210  0100               	movlb	0	; () banked
 14072  001212  6F7D               	movwf	strcat@to& (0+255),b
 14073  001214  0E04               	movlw	high Term_MainSm@Data
 14074  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14075  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14076  00121A  6F7F               	movwf	strcat@from& (0+255),b
 14077  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14078  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14079  001220  ECFB  F02B         	call	_strcat	;wreg free
 14080                           
 14081                           ;term.c: 786: strcat(Data,".");
 14082  001224  0E61               	movlw	low Term_MainSm@Data
 14083  001226  0100               	movlb	0	; () banked
 14084  001228  6F7D               	movwf	strcat@to& (0+255),b
 14085  00122A  0E04               	movlw	high Term_MainSm@Data
 14086  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14087  00122E  0EF5               	movlw	low STR_24
 14088  001230  6F7F               	movwf	strcat@from& (0+255),b
 14089  001232  0EFF               	movlw	high STR_24
 14090  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 14091  001236  ECFB  F02B         	call	_strcat	;wreg free
 14092                           
 14093                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14094  00123A  0E61               	movlw	low Term_MainSm@Data
 14095  00123C  0100               	movlb	0	; () banked
 14096  00123E  6F7D               	movwf	strcat@to& (0+255),b
 14097  001240  0E04               	movlw	high Term_MainSm@Data
 14098  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14099  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14100  001246  6F7F               	movwf	strcat@from& (0+255),b
 14101  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14102  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14103  00124C  ECFB  F02B         	call	_strcat	;wreg free
 14104                           
 14105                           ;term.c: 788: strcat(Data,"\r\n");
 14106  001250  0E61               	movlw	low Term_MainSm@Data
 14107  001252  0100               	movlb	0	; () banked
 14108  001254  6F7D               	movwf	strcat@to& (0+255),b
 14109  001256  0E04               	movlw	high Term_MainSm@Data
 14110  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14111  00125A  0E86               	movlw	low (STR_21+39)
 14112  00125C  6F7F               	movwf	strcat@from& (0+255),b
 14113  00125E  0EFE               	movlw	high (STR_21+39)
 14114  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 14115  001262  ECFB  F02B         	call	_strcat	;wreg free
 14116                           
 14117                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14118  001266  0E61               	movlw	low Term_MainSm@Data
 14119  001268  0100               	movlb	0	; () banked
 14120  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14121  00126C  0E04               	movlw	high Term_MainSm@Data
 14122  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14123  001270  0E61               	movlw	low Term_MainSm@Data
 14124  001272  6F7D               	movwf	strlen@s& (0+255),b
 14125  001274  0E04               	movlw	high Term_MainSm@Data
 14126  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14127  001278  ECB4  F030         	call	_strlen	;wreg free
 14128  00127C  0100               	movlb	0	; () banked
 14129  00127E  517D               	movf	?_strlen& (0+255),w,b
 14130  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 14131  001282  EC94  F033         	call	_putUSBUSART	;wreg free
 14132                           
 14133                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14134  001286  0E06               	movlw	6
 14135  001288  0102               	movlb	2	; () banked
 14136  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14137                           
 14138                           ; BSR set to: 2
 14139                           ;term.c: 793: }
 14140                           ;term.c: 794: break;
 14141  00128C  0012               	return	
 14142  00128E                     
 14143                           ; BSR set to: 2
 14144                           ;term.c: 798: if((cdc_trf_state == 0))
 14145                           
 14146                           ; BSR set to: 2
 14147  00128E  0100               	movlb	0	; () banked
 14148  001290  51C6               	movf	_cdc_trf_state& (0+255),w,b
 14149  001292  A4D8               	btfss	status,2,c
 14150  001294  0012               	return	
 14151                           
 14152                           ; BSR set to: 0
 14153                           ;term.c: 799: {
 14154                           ;term.c: 801: memset(Data,0,50);
 14155  001296  0E61               	movlw	low Term_MainSm@Data
 14156  001298  6F7D               	movwf	memset@p1& (0+255),b
 14157  00129A  0E04               	movlw	high Term_MainSm@Data
 14158  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14159  00129E  0E00               	movlw	0
 14160  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 14161  0012A2  0E00               	movlw	0
 14162  0012A4  6F7F               	movwf	memset@c& (0+255),b
 14163  0012A6  0E00               	movlw	0
 14164  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 14165  0012AA  0E32               	movlw	50
 14166  0012AC  6F81               	movwf	memset@n& (0+255),b
 14167  0012AE  EC3C  F032         	call	_memset	;wreg free
 14168                           
 14169                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 27 2022");
 14170  0012B2  0E61               	movlw	low Term_MainSm@Data
 14171  0012B4  0100               	movlb	0	; () banked
 14172  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14173  0012B8  0E04               	movlw	high Term_MainSm@Data
 14174  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14175  0012BC  0E0D               	movlw	low STR_27
 14176  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14177  0012C0  0EFF               	movlw	high STR_27
 14178  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14179  0012C4  0EB6               	movlw	low STR_28
 14180  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14181  0012C8  0EFF               	movlw	high STR_28
 14182  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14183  0012CC  EC0A  F01D         	call	_sprintf	;wreg free
 14184                           
 14185                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14186  0012D0  0E61               	movlw	low Term_MainSm@Data
 14187  0012D2  0100               	movlb	0	; () banked
 14188  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14189  0012D6  0E04               	movlw	high Term_MainSm@Data
 14190  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14191  0012DA  0E61               	movlw	low Term_MainSm@Data
 14192  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14193  0012DE  0E04               	movlw	high Term_MainSm@Data
 14194  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14195  0012E2  ECB4  F030         	call	_strlen	;wreg free
 14196  0012E6  0100               	movlb	0	; () banked
 14197  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14198  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14199  0012EC  EC94  F033         	call	_putUSBUSART	;wreg free
 14200                           
 14201                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14202  0012F0  0E07               	movlw	7
 14203  0012F2  0102               	movlb	2	; () banked
 14204  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14205                           
 14206                           ; BSR set to: 2
 14207                           ;term.c: 808: }
 14208                           ;term.c: 809: break;
 14209  0012F6  0012               	return	
 14210  0012F8                     
 14211                           ; BSR set to: 2
 14212                           ;term.c: 813: if((cdc_trf_state == 0))
 14213                           
 14214                           ; BSR set to: 2
 14215  0012F8  0100               	movlb	0	; () banked
 14216  0012FA  51C6               	movf	_cdc_trf_state& (0+255),w,b
 14217  0012FC  A4D8               	btfss	status,2,c
 14218  0012FE  0012               	return	
 14219                           
 14220                           ; BSR set to: 0
 14221                           ;term.c: 814: {
 14222                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14223  001300  0E32               	movlw	low _MsgReady
 14224  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14225  001304  0EFE               	movlw	high _MsgReady
 14226  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14227  001308  0E16               	movlw	22
 14228  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14229  00130C  EC94  F033         	call	_putUSBUSART	;wreg free
 14230                           
 14231                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14232  001310  0E08               	movlw	8
 14233  001312  0102               	movlb	2	; () banked
 14234  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14235                           
 14236                           ; BSR set to: 2
 14237                           ;term.c: 819: }
 14238                           ;term.c: 820: break;
 14239  001316  0012               	return	
 14240  001318                     
 14241                           ; BSR set to: 2
 14242                           ;term.c: 824: Terminal();
 14243                           
 14244                           ; BSR set to: 2
 14245  001318  EC68  F000         	call	_Terminal	;wreg free
 14246                           
 14247                           ;term.c: 829: }
 14248                           
 14249                           ;term.c: 828: break;
 14250                           
 14251                           ;term.c: 827: default:
 14252                           
 14253                           ;term.c: 825: break;
 14254  00131C  0012               	return	
 14255  00131E                     l2464:
 14256  00131E  0102               	movlb	2	; () banked
 14257  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14258                           
 14259                           ; Switch size 1, requested type "space"
 14260                           ; Number of cases is 9, Range of values is 0 to 8
 14261                           ; switch strategies available:
 14262                           ; Name         Instructions Cycles
 14263                           ; simple_byte           28    15 (average)
 14264                           ;	Chosen strategy is simple_byte
 14265  001322  0A00               	xorlw	0	; case 0
 14266  001324  B4D8               	btfsc	status,2,c
 14267  001326  D6C8               	goto	l2465
 14268  001328  0A01               	xorlw	1	; case 1
 14269  00132A  B4D8               	btfsc	status,2,c
 14270  00132C  D6D8               	goto	l2467
 14271  00132E  0A03               	xorlw	3	; case 2
 14272  001330  B4D8               	btfsc	status,2,c
 14273  001332  D6E3               	goto	l2469
 14274  001334  0A01               	xorlw	1	; case 3
 14275  001336  B4D8               	btfsc	status,2,c
 14276  001338  D6EA               	goto	l2474
 14277  00133A  0A07               	xorlw	7	; case 4
 14278  00133C  B4D8               	btfsc	status,2,c
 14279  00133E  D6F7               	goto	l2476
 14280  001340  0A01               	xorlw	1	; case 5
 14281  001342  B4D8               	btfsc	status,2,c
 14282  001344  D704               	goto	l2478
 14283  001346  0A03               	xorlw	3	; case 6
 14284  001348  B4D8               	btfsc	status,2,c
 14285  00134A  D7A1               	goto	l2480
 14286  00134C  0A01               	xorlw	1	; case 7
 14287  00134E  B4D8               	btfsc	status,2,c
 14288  001350  D7D3               	goto	l2482
 14289  001352  0A0F               	xorlw	15	; case 8
 14290  001354  A4D8               	btfss	status,2,c
 14291  001356  0012               	return	
 14292  001358  D7DF               	goto	l2484
 14293  00135A                     __end_of_Term_MainSm:
 14294                           	opt stack 0
 14295                           tosu	equ	0xFFF
 14296                           tosh	equ	0xFFE
 14297                           tosl	equ	0xFFD
 14298                           pclath	equ	0xFFA
 14299                           tblptru	equ	0xFF8
 14300                           tblptrh	equ	0xFF7
 14301                           tblptrl	equ	0xFF6
 14302                           tablat	equ	0xFF5
 14303                           prodh	equ	0xFF4
 14304                           prodl	equ	0xFF3
 14305                           intcon	equ	0xFF2
 14306                           intcon2	equ	0xFF1
 14307                           intcon3	equ	0xFF0
 14308                           indf0	equ	0xFEF
 14309                           postinc0	equ	0xFEE
 14310                           plusw0	equ	0xFEB
 14311                           fsr0h	equ	0xFEA
 14312                           fsr0l	equ	0xFE9
 14313                           wreg	equ	0xFE8
 14314                           indf1	equ	0xFE7
 14315                           postinc1	equ	0xFE6
 14316                           postdec1	equ	0xFE5
 14317                           fsr1h	equ	0xFE2
 14318                           fsr1l	equ	0xFE1
 14319                           indf2	equ	0xFDF
 14320                           postinc2	equ	0xFDE
 14321                           postdec2	equ	0xFDD
 14322                           plusw2	equ	0xFDB
 14323                           fsr2h	equ	0xFDA
 14324                           fsr2l	equ	0xFD9
 14325                           status	equ	0xFD8
 14326                           
 14327 ;; *************** function _strlen *****************
 14328 ;; Defined at:
 14329 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14330 ;; Parameters:    Size  Location     Type
 14331 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14332 ;;		 -> Term_MainSm@Data(50), 
 14333 ;; Auto vars:     Size  Location     Type
 14334 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14335 ;;		 -> Term_MainSm@Data(50), 
 14336 ;; Return value:  Size  Location     Type
 14337 ;;                  2   29[BANK0 ] unsigned int 
 14338 ;; Registers used:
 14339 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14340 ;; Tracked objects:
 14341 ;;		On entry : 0/0
 14342 ;;		On exit  : 0/0
 14343 ;;		Unchanged: 0/0
 14344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14345 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14346 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14347 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14348 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14349 ;;Total ram usage:        6 bytes
 14350 ;; Hardware stack levels used:    1
 14351 ;; Hardware stack levels required when called:   11
 14352 ;; This function calls:
 14353 ;;		Nothing
 14354 ;; This function is called by:
 14355 ;;		_Term_MainSm
 14356 ;; This function uses a non-reentrant model
 14357 ;;
 14358                           
 14359                           	psect	text56
 14360  006168                     __ptext56:
 14361                           	opt stack 0
 14362  006168                     _strlen:
 14363                           	opt stack 15
 14364                           
 14365                           ;incstack = 0
 14366  006168  C07D  F081         	movff	strlen@s,strlen@cp
 14367  00616C  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14368  006170  D003               	goto	l3501
 14369  006172  0100               	movlb	0	; () banked
 14370  006174  4B81               	infsnz	strlen@cp& (0+255),f,b
 14371  006176  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14372  006178                     l3501:
 14373                           
 14374                           ; BSR set to: 0
 14375  006178  C081  FFD9         	movff	strlen@cp,fsr2l
 14376  00617C  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14377  006180  50DF               	movf	indf2,w,c
 14378  006182  A4D8               	btfss	status,2,c
 14379  006184  D7F6               	goto	l3502
 14380  006186  C07D  F07F         	movff	strlen@s,??_strlen
 14381  00618A  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14382  00618E  0100               	movlb	0	; () banked
 14383  006190  1F7F               	comf	??_strlen& (0+255),f,b
 14384  006192  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14385  006194  4B7F               	infsnz	??_strlen& (0+255),f,b
 14386  006196  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14387  006198  5181               	movf	strlen@cp& (0+255),w,b
 14388  00619A  257F               	addwf	??_strlen& (0+255),w,b
 14389  00619C  6F7D               	movwf	?_strlen& (0+255),b
 14390  00619E  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14391  0061A0  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14392  0061A2  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14393  0061A4  0012               	return	
 14394  0061A6                     __end_of_strlen:
 14395                           	opt stack 0
 14396                           tosu	equ	0xFFF
 14397                           tosh	equ	0xFFE
 14398                           tosl	equ	0xFFD
 14399                           pclath	equ	0xFFA
 14400                           tblptru	equ	0xFF8
 14401                           tblptrh	equ	0xFF7
 14402                           tblptrl	equ	0xFF6
 14403                           tablat	equ	0xFF5
 14404                           prodh	equ	0xFF4
 14405                           prodl	equ	0xFF3
 14406                           intcon	equ	0xFF2
 14407                           intcon2	equ	0xFF1
 14408                           intcon3	equ	0xFF0
 14409                           indf0	equ	0xFEF
 14410                           postinc0	equ	0xFEE
 14411                           plusw0	equ	0xFEB
 14412                           fsr0h	equ	0xFEA
 14413                           fsr0l	equ	0xFE9
 14414                           wreg	equ	0xFE8
 14415                           indf1	equ	0xFE7
 14416                           postinc1	equ	0xFE6
 14417                           postdec1	equ	0xFE5
 14418                           fsr1h	equ	0xFE2
 14419                           fsr1l	equ	0xFE1
 14420                           indf2	equ	0xFDF
 14421                           postinc2	equ	0xFDE
 14422                           postdec2	equ	0xFDD
 14423                           plusw2	equ	0xFDB
 14424                           fsr2h	equ	0xFDA
 14425                           fsr2l	equ	0xFD9
 14426                           status	equ	0xFD8
 14427                           
 14428 ;; *************** function _strcat *****************
 14429 ;; Defined at:
 14430 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14431 ;; Parameters:    Size  Location     Type
 14432 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14433 ;;		 -> Term_MainSm@Data(50), 
 14434 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14435 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14436 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14437 ;; Auto vars:     Size  Location     Type
 14438 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14439 ;;		 -> Term_MainSm@Data(50), 
 14440 ;; Return value:  Size  Location     Type
 14441 ;;                  2   29[BANK0 ] PTR unsigned char 
 14442 ;; Registers used:
 14443 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14444 ;; Tracked objects:
 14445 ;;		On entry : 0/0
 14446 ;;		On exit  : 0/0
 14447 ;;		Unchanged: 0/0
 14448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14449 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14452 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14453 ;;Total ram usage:        6 bytes
 14454 ;; Hardware stack levels used:    1
 14455 ;; Hardware stack levels required when called:   11
 14456 ;; This function calls:
 14457 ;;		Nothing
 14458 ;; This function is called by:
 14459 ;;		_Term_MainSm
 14460 ;; This function uses a non-reentrant model
 14461 ;;
 14462                           
 14463                           	psect	text57
 14464  0057F6                     __ptext57:
 14465                           	opt stack 0
 14466  0057F6                     _strcat:
 14467                           	opt stack 15
 14468                           
 14469                           ; BSR set to: 0
 14470                           ;incstack = 0
 14471  0057F6  C07D  F081         	movff	strcat@to,strcat@cp
 14472  0057FA  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14473  0057FE  D003               	goto	l3486
 14474  005800  0100               	movlb	0	; () banked
 14475  005802  4B81               	infsnz	strcat@cp& (0+255),f,b
 14476  005804  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14477  005806                     l3486:
 14478                           
 14479                           ; BSR set to: 0
 14480  005806  C081  FFD9         	movff	strcat@cp,fsr2l
 14481  00580A  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14482  00580E  50DF               	movf	indf2,w,c
 14483  005810  B4D8               	btfsc	status,2,c
 14484  005812  D006               	goto	l3489
 14485  005814  D7F5               	goto	l3487
 14486  005816  0100               	movlb	0	; () banked
 14487  005818  4B81               	infsnz	strcat@cp& (0+255),f,b
 14488  00581A  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14489  00581C  4B7F               	infsnz	strcat@from& (0+255),f,b
 14490  00581E  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14491  005820                     l3489:
 14492                           
 14493                           ; BSR set to: 0
 14494  005820  C07F  FFF6         	movff	strcat@from,tblptrl
 14495  005824  C080  FFF7         	movff	strcat@from+1,tblptrh
 14496  005828  6AF8               	clrf	tblptru,c
 14497  00582A  C081  FFD9         	movff	strcat@cp,fsr2l
 14498  00582E  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14499  005832  0E0E               	movlw	(high __ramtop+-1)
 14500  005834  64F7               	cpfsgt	tblptrh,c
 14501  005836  D003               	bra	u14217
 14502  005838  0008               	tblrd		*
 14503  00583A  50F5               	movf	tablat,w,c
 14504  00583C  D005               	bra	u14210
 14505  00583E                     u14217:
 14506  00583E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14507  005842  CFF7 FFEA          	movff	tblptrh,fsr0h
 14508  005846  50EF               	movf	indf0,w,c
 14509  005848                     u14210:
 14510  005848  6EDF               	movwf	indf2,c
 14511  00584A  50DF               	movf	indf2,w,c
 14512  00584C  B4D8               	btfsc	status,2,c
 14513  00584E  0012               	return	
 14514  005850  D7E2               	goto	l3490
 14515  005852                     __end_of_strcat:
 14516                           	opt stack 0
 14517                           tosu	equ	0xFFF
 14518                           tosh	equ	0xFFE
 14519                           tosl	equ	0xFFD
 14520                           pclath	equ	0xFFA
 14521                           tblptru	equ	0xFF8
 14522                           tblptrh	equ	0xFF7
 14523                           tblptrl	equ	0xFF6
 14524                           tablat	equ	0xFF5
 14525                           prodh	equ	0xFF4
 14526                           prodl	equ	0xFF3
 14527                           intcon	equ	0xFF2
 14528                           intcon2	equ	0xFF1
 14529                           intcon3	equ	0xFF0
 14530                           indf0	equ	0xFEF
 14531                           postinc0	equ	0xFEE
 14532                           plusw0	equ	0xFEB
 14533                           fsr0h	equ	0xFEA
 14534                           fsr0l	equ	0xFE9
 14535                           wreg	equ	0xFE8
 14536                           indf1	equ	0xFE7
 14537                           postinc1	equ	0xFE6
 14538                           postdec1	equ	0xFE5
 14539                           fsr1h	equ	0xFE2
 14540                           fsr1l	equ	0xFE1
 14541                           indf2	equ	0xFDF
 14542                           postinc2	equ	0xFDE
 14543                           postdec2	equ	0xFDD
 14544                           plusw2	equ	0xFDB
 14545                           fsr2h	equ	0xFDA
 14546                           fsr2l	equ	0xFD9
 14547                           status	equ	0xFD8
 14548                           
 14549 ;; *************** function _sprintf *****************
 14550 ;; Defined at:
 14551 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14554 ;;		 -> Term_MainSm@Data(50), 
 14555 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14556 ;;		 -> STR_27(17), 
 14557 ;; Auto vars:     Size  Location     Type
 14558 ;;  tmpval          4    0        struct .
 14559 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14560 ;;		 -> STR_32(7), STR_28(12), 
 14561 ;;  ap              2   36[BANK0 ] PTR void [1]
 14562 ;;		 -> ?_sprintf(2), 
 14563 ;;  len             2    0        unsigned int 
 14564 ;;  val             2    0        unsigned int 
 14565 ;;  c               1   38[BANK0 ] char 
 14566 ;;  flag            1   35[BANK0 ] unsigned char 
 14567 ;;  prec            1    0        char 
 14568 ;; Return value:  Size  Location     Type
 14569 ;;                  2   29[BANK0 ] int 
 14570 ;; Registers used:
 14571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14572 ;; Tracked objects:
 14573 ;;		On entry : 0/0
 14574 ;;		On exit  : 0/0
 14575 ;;		Unchanged: 0/0
 14576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14577 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14578 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14580 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14581 ;;Total ram usage:       12 bytes
 14582 ;; Hardware stack levels used:    1
 14583 ;; Hardware stack levels required when called:   11
 14584 ;; This function calls:
 14585 ;;		Nothing
 14586 ;; This function is called by:
 14587 ;;		_Term_MainSm
 14588 ;; This function uses a non-reentrant model
 14589 ;;
 14590                           
 14591                           	psect	text58
 14592  003A14                     __ptext58:
 14593                           	opt stack 0
 14594  003A14                     _sprintf:
 14595                           	opt stack 15
 14596                           
 14597                           ;doprnt.c: 494: va_list ap;
 14598                           ;doprnt.c: 499: signed char c;
 14599                           ;doprnt.c: 506: signed char prec;
 14600                           ;doprnt.c: 508: unsigned char flag;
 14601                           ;doprnt.c: 523: union {
 14602                           ;doprnt.c: 524: unsigned long vd;
 14603                           ;doprnt.c: 525: double integ;
 14604                           ;doprnt.c: 526: } tmpval;
 14605                           ;doprnt.c: 528: unsigned int val;
 14606                           ;doprnt.c: 529: unsigned len;
 14607                           ;doprnt.c: 530: const char * cp;
 14608                           ;doprnt.c: 533: *ap = __va_start();
 14609                           
 14610                           ;incstack = 0
 14611  003A14  0E81               	movlw	low (?_sprintf+4)
 14612  003A16  0100               	movlb	0	; () banked
 14613  003A18  6F84               	movwf	sprintf@ap& (0+255),b
 14614  003A1A  0E00               	movlw	high (?_sprintf+4)
 14615  003A1C  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14616                           
 14617                           ;doprnt.c: 536: while(c = *f++) {
 14618  003A1E  D04E               	goto	l2890
 14619  003A20                     
 14620                           ; BSR set to: 0
 14621                           ;doprnt.c: 538: if(c != '%')
 14622                           
 14623                           ; BSR set to: 0
 14624  003A20  0E25               	movlw	37
 14625  003A22  1986               	xorwf	sprintf@c& (0+255),w,b
 14626  003A24  B4D8               	btfsc	status,2,c
 14627  003A26  D009               	goto	l2880
 14628                           
 14629                           ; BSR set to: 0
 14630                           ;doprnt.c: 540: {
 14631                           ;doprnt.c: 541: ((*sp++ = (c)));
 14632  003A28  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14633  003A2C  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14634  003A30  C086  FFDF         	movff	sprintf@c,indf2
 14635                           
 14636                           ; BSR set to: 0
 14637  003A34  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14638  003A36  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14639                           
 14640                           ;doprnt.c: 542: continue;
 14641  003A38  D041               	goto	l2890
 14642  003A3A                     l2880:
 14643                           
 14644                           ; BSR set to: 0
 14645                           ;doprnt.c: 543: }
 14646                           ;doprnt.c: 548: flag = 0;
 14647                           
 14648                           ; BSR set to: 0
 14649  003A3A  0E00               	movlw	0
 14650  003A3C  6F83               	movwf	sprintf@flag& (0+255),b
 14651                           
 14652                           ;doprnt.c: 635: switch(c = *f++) {
 14653  003A3E  D02E               	goto	l2881
 14654  003A40                     
 14655                           ; BSR set to: 0
 14656                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14657                           
 14658                           ; BSR set to: 0
 14659  003A40  C084  FFD9         	movff	sprintf@ap,fsr2l
 14660  003A44  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14661  003A48  CFDE F087          	movff	postinc2,sprintf@cp
 14662  003A4C  CFDD F088          	movff	postdec2,sprintf@cp+1
 14663                           
 14664                           ; BSR set to: 0
 14665  003A50  0E02               	movlw	2
 14666  003A52  2784               	addwf	sprintf@ap& (0+255),f,b
 14667  003A54  0E00               	movlw	0
 14668  003A56  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14669                           
 14670                           ; BSR set to: 0
 14671                           ;doprnt.c: 740: if(!cp)
 14672  003A58  5187               	movf	sprintf@cp& (0+255),w,b
 14673  003A5A  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14674  003A5C  A4D8               	btfss	status,2,c
 14675  003A5E  D014               	goto	l2886
 14676                           
 14677                           ; BSR set to: 0
 14678                           ;doprnt.c: 741: cp = "(null)";
 14679  003A60  0ED8               	movlw	low STR_32
 14680  003A62  6F87               	movwf	sprintf@cp& (0+255),b
 14681  003A64  0EFF               	movlw	high STR_32
 14682  003A66  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14683                           
 14684                           ; BSR set to: 0
 14685                           ;doprnt.c: 777: while(*cp)
 14686  003A68  D00F               	goto	l2886
 14687  003A6A                     
 14688                           ; BSR set to: 0
 14689                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14690                           
 14691                           ; BSR set to: 0
 14692  003A6A  C087  FFF6         	movff	sprintf@cp,tblptrl
 14693  003A6E  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14694  003A72                     	if	0	;tblptru may be non-zero
 14695  003A72                     	endif
 14696  003A72                     	if	0	;tblptru may be non-zero
 14697  003A72                     	endif
 14698  003A72  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14699  003A76  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14700  003A7A  0008               	tblrd		*
 14701  003A7C  CFF5 FFDF          	movff	tablat,indf2
 14702                           
 14703                           ; BSR set to: 0
 14704  003A80  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14705  003A82  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14706                           
 14707                           ; BSR set to: 0
 14708  003A84  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14709  003A86  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14710  003A88                     l2886:
 14711                           
 14712                           ; BSR set to: 0
 14713                           
 14714                           ; BSR set to: 0
 14715  003A88  C087  FFF6         	movff	sprintf@cp,tblptrl
 14716  003A8C  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14717  003A90                     	if	0	;tblptru may be non-zero
 14718  003A90                     	endif
 14719  003A90                     	if	0	;tblptru may be non-zero
 14720  003A90                     	endif
 14721  003A90  0008               	tblrd		*
 14722  003A92  50F5               	movf	tablat,w,c
 14723  003A94  0900               	iorlw	0
 14724  003A96  B4D8               	btfsc	status,2,c
 14725  003A98  D011               	goto	l2890
 14726  003A9A  D7E7               	goto	l2887
 14727  003A9C                     l2881:
 14728                           
 14729                           ; BSR set to: 0
 14730                           
 14731                           ; BSR set to: 0
 14732  003A9C  C07F  FFF6         	movff	sprintf@f,tblptrl
 14733  003AA0  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14734  003AA4  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14735  003AA6  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14736  003AA8                     	if	0	;tblptru may be non-zero
 14737  003AA8                     	endif
 14738  003AA8                     	if	0	;tblptru may be non-zero
 14739  003AA8                     	endif
 14740  003AA8  0008               	tblrd		*
 14741  003AAA  CFF5 F086          	movff	tablat,sprintf@c
 14742  003AAE  5186               	movf	sprintf@c& (0+255),w,b
 14743                           
 14744                           ; Switch size 1, requested type "space"
 14745                           ; Number of cases is 2, Range of values is 0 to 115
 14746                           ; switch strategies available:
 14747                           ; Name         Instructions Cycles
 14748                           ; simple_byte            7     4 (average)
 14749                           ;	Chosen strategy is simple_byte
 14750  003AB0  0A00               	xorlw	0	; case 0
 14751  003AB2  B4D8               	btfsc	status,2,c
 14752  003AB4  D00F               	goto	u14270
 14753  003AB6  0A73               	xorlw	115	; case 115
 14754  003AB8  B4D8               	btfsc	status,2,c
 14755  003ABA  D7C2               	goto	l2884
 14756  003ABC                     l2890:
 14757                           
 14758                           ; BSR set to: 0
 14759                           
 14760                           ; BSR set to: 0
 14761                           
 14762                           ;doprnt.c: 1422: {
 14763                           
 14764                           ; BSR set to: 0
 14765  003ABC  C07F  FFF6         	movff	sprintf@f,tblptrl
 14766  003AC0  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14767  003AC4  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14768  003AC6  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14769  003AC8                     	if	0	;tblptru may be non-zero
 14770  003AC8                     	endif
 14771  003AC8                     	if	0	;tblptru may be non-zero
 14772  003AC8                     	endif
 14773  003AC8  0008               	tblrd		*
 14774  003ACA  CFF5 F086          	movff	tablat,sprintf@c
 14775  003ACE  5186               	movf	sprintf@c& (0+255),w,b
 14776  003AD0  A4D8               	btfss	status,2,c
 14777  003AD2  D7A6               	goto	l2879
 14778  003AD4                     u14270:
 14779                           
 14780                           ; BSR set to: 0
 14781                           ;doprnt.c: 1538: *sp = 0;
 14782                           
 14783                           ; BSR set to: 0
 14784                           
 14785                           ;doprnt.c: 1469: }
 14786                           ;doprnt.c: 1533: }
 14787                           ;doprnt.c: 1535: alldone:
 14788                           
 14789                           ; BSR set to: 0
 14790  003AD4  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14791  003AD8  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14792  003ADC  0E00               	movlw	0
 14793  003ADE  6EDF               	movwf	indf2,c
 14794  003AE0  0012               	return	
 14795  003AE2                     __end_of_sprintf:
 14796                           	opt stack 0
 14797                           tosu	equ	0xFFF
 14798                           tosh	equ	0xFFE
 14799                           tosl	equ	0xFFD
 14800                           pclath	equ	0xFFA
 14801                           tblptru	equ	0xFF8
 14802                           tblptrh	equ	0xFF7
 14803                           tblptrl	equ	0xFF6
 14804                           tablat	equ	0xFF5
 14805                           prodh	equ	0xFF4
 14806                           prodl	equ	0xFF3
 14807                           intcon	equ	0xFF2
 14808                           intcon2	equ	0xFF1
 14809                           intcon3	equ	0xFF0
 14810                           indf0	equ	0xFEF
 14811                           postinc0	equ	0xFEE
 14812                           plusw0	equ	0xFEB
 14813                           fsr0h	equ	0xFEA
 14814                           fsr0l	equ	0xFE9
 14815                           wreg	equ	0xFE8
 14816                           indf1	equ	0xFE7
 14817                           postinc1	equ	0xFE6
 14818                           postdec1	equ	0xFE5
 14819                           fsr1h	equ	0xFE2
 14820                           fsr1l	equ	0xFE1
 14821                           indf2	equ	0xFDF
 14822                           postinc2	equ	0xFDE
 14823                           postdec2	equ	0xFDD
 14824                           plusw2	equ	0xFDB
 14825                           fsr2h	equ	0xFDA
 14826                           fsr2l	equ	0xFD9
 14827                           status	equ	0xFD8
 14828                           
 14829 ;; *************** function _memset *****************
 14830 ;; Defined at:
 14831 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14832 ;; Parameters:    Size  Location     Type
 14833 ;;  p1              2   29[BANK0 ] PTR void 
 14834 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14835 ;;  c               2   31[BANK0 ] int 
 14836 ;;  n               2   33[BANK0 ] unsigned int 
 14837 ;; Auto vars:     Size  Location     Type
 14838 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14839 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14840 ;; Return value:  Size  Location     Type
 14841 ;;                  2   29[BANK0 ] PTR void 
 14842 ;; Registers used:
 14843 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14844 ;; Tracked objects:
 14845 ;;		On entry : 0/0
 14846 ;;		On exit  : 0/0
 14847 ;;		Unchanged: 0/0
 14848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14849 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14850 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14852 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14853 ;;Total ram usage:        8 bytes
 14854 ;; Hardware stack levels used:    1
 14855 ;; Hardware stack levels required when called:   11
 14856 ;; This function calls:
 14857 ;;		Nothing
 14858 ;; This function is called by:
 14859 ;;		_USBDeviceInit
 14860 ;;		_USBStdSetCfgHandler
 14861 ;;		_Term_MainSm
 14862 ;; This function uses a non-reentrant model
 14863 ;;
 14864                           
 14865                           	psect	text59
 14866  006478                     __ptext59:
 14867                           	opt stack 0
 14868  006478                     _memset:
 14869                           	opt stack 14
 14870                           
 14871                           ; BSR set to: 0
 14872                           ;incstack = 0
 14873  006478  C07D  F083         	movff	memset@p1,memset@p
 14874  00647C  C07E  F084         	movff	memset@p1+1,memset@p+1
 14875  006480  D009               	goto	l3360
 14876  006482                     l12885:
 14877  006482  C083  FFD9         	movff	memset@p,fsr2l
 14878  006486  C084  FFDA         	movff	memset@p+1,fsr2h
 14879  00648A  C07F  FFDF         	movff	memset@c,indf2
 14880  00648E  0100               	movlb	0	; () banked
 14881  006490  4B83               	infsnz	memset@p& (0+255),f,b
 14882  006492  2B84               	incf	(memset@p+1)& (0+255),f,b
 14883  006494                     l3360:
 14884                           
 14885                           ; BSR set to: 0
 14886  006494  0100               	movlb	0	; () banked
 14887  006496  0781               	decf	memset@n& (0+255),f,b
 14888  006498  A0D8               	btfss	status,0,c
 14889  00649A  0782               	decf	(memset@n+1)& (0+255),f,b
 14890  00649C  2981               	incf	memset@n& (0+255),w,b
 14891  00649E  E1F1               	bnz	l12885
 14892  0064A0  2982               	incf	(memset@n+1)& (0+255),w,b
 14893  0064A2  B4D8               	btfsc	status,2,c
 14894  0064A4  0012               	return	
 14895  0064A6  D7ED               	goto	l3361
 14896  0064A8                     __end_of_memset:
 14897                           	opt stack 0
 14898                           tosu	equ	0xFFF
 14899                           tosh	equ	0xFFE
 14900                           tosl	equ	0xFFD
 14901                           pclath	equ	0xFFA
 14902                           tblptru	equ	0xFF8
 14903                           tblptrh	equ	0xFF7
 14904                           tblptrl	equ	0xFF6
 14905                           tablat	equ	0xFF5
 14906                           prodh	equ	0xFF4
 14907                           prodl	equ	0xFF3
 14908                           intcon	equ	0xFF2
 14909                           intcon2	equ	0xFF1
 14910                           intcon3	equ	0xFF0
 14911                           indf0	equ	0xFEF
 14912                           postinc0	equ	0xFEE
 14913                           plusw0	equ	0xFEB
 14914                           fsr0h	equ	0xFEA
 14915                           fsr0l	equ	0xFE9
 14916                           wreg	equ	0xFE8
 14917                           indf1	equ	0xFE7
 14918                           postinc1	equ	0xFE6
 14919                           postdec1	equ	0xFE5
 14920                           fsr1h	equ	0xFE2
 14921                           fsr1l	equ	0xFE1
 14922                           indf2	equ	0xFDF
 14923                           postinc2	equ	0xFDE
 14924                           postdec2	equ	0xFDD
 14925                           plusw2	equ	0xFDB
 14926                           fsr2h	equ	0xFDA
 14927                           fsr2l	equ	0xFD9
 14928                           status	equ	0xFD8
 14929                           
 14930 ;; *************** function _Terminal *****************
 14931 ;; Defined at:
 14932 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;		None
 14935 ;; Auto vars:     Size  Location     Type
 14936 ;;  i               1   68[BANK0 ] unsigned char 
 14937 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14938 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14939 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14940 ;;  Index           1   70[BANK0 ] unsigned char 
 14941 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14942 ;; Return value:  Size  Location     Type
 14943 ;;                  1    wreg      void 
 14944 ;; Registers used:
 14945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14946 ;; Tracked objects:
 14947 ;;		On entry : 0/0
 14948 ;;		On exit  : 0/0
 14949 ;;		Unchanged: 0/0
 14950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14952 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14954 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14955 ;;Total ram usage:      455 bytes
 14956 ;; Hardware stack levels used:    1
 14957 ;; Hardware stack levels required when called:   15
 14958 ;; This function calls:
 14959 ;;		_I2cSlv_I2cReadMsgSts
 14960 ;;		_I2cSlv_ReceiveI2cMsg
 14961 ;;		_I2cSlv_SendI2cMsg
 14962 ;;		_OsTmr_Wait
 14963 ;;		_atoi
 14964 ;;		_getsUSBUSART
 14965 ;;		_itoa
 14966 ;;		_putUSBUSART
 14967 ;;		_strcpy
 14968 ;;		_strtol
 14969 ;;		_xtoi
 14970 ;; This function is called by:
 14971 ;;		_Term_MainSm
 14972 ;; This function uses a non-reentrant model
 14973 ;;
 14974                           
 14975                           	psect	text60
 14976  0000D0                     __ptext60:
 14977                           	opt stack 0
 14978  0000D0                     _Terminal:
 14979                           	opt stack 11
 14980                           
 14981                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14982                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14983                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14984                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14985                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14986                           ;term.c: 435: UINT8 Index;
 14987                           ;term.c: 436: static UINT8 Len[4];
 14988                           ;term.c: 437: static UINT8 PackageLen;
 14989                           ;term.c: 438: static UINT8 Addr[4];
 14990                           ;term.c: 439: static UINT8 SlaveAddr;
 14991                           ;term.c: 440: static PayloadType Payload[20u];
 14992                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14993                           
 14994                           ; BSR set to: 0
 14995                           ;incstack = 0
 14996  0000D0  0E00               	movlw	0
 14997  0000D2  0100               	movlb	0	; () banked
 14998  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14999                           
 15000                           ; BSR set to: 0
 15001                           ;term.c: 443: static UINT8 FormatOption = 0u;
 15002                           ;term.c: 444: static UINT8 EchoOption = 1u;
 15003                           ;term.c: 445: static SwTimerType SwTimer;
 15004                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15005  0000D6  0E1F               	movlw	31
 15006  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 15007  0000DA  0012               	return	
 15008                           
 15009                           ; BSR set to: 0
 15010  0000DC  B265               	btfsc	3941,1,c	;volatile
 15011  0000DE  0012               	return	
 15012  0000E0  D278               	goto	l2404
 15013  0000E2                     
 15014                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15015                           
 15016                           ; BSR set to: 0
 15017  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15018  0000E4  0100               	movlb	0	; () banked
 15019  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15020  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15021  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15022  0000EC  0EC8               	movlw	200
 15023  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15024  0000F0  ECD1  F025         	call	_getsUSBUSART	;wreg free
 15025  0000F4  0100               	movlb	0	; () banked
 15026  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15027                           
 15028                           ; BSR set to: 0
 15029                           ;term.c: 458: if (ReceivedBytes > 0)
 15030  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15031  0000FA  B4D8               	btfsc	status,2,c
 15032  0000FC  0012               	return	
 15033                           
 15034                           ; BSR set to: 0
 15035                           ;term.c: 459: {
 15036                           ;term.c: 461: if (EchoOption == 1u)
 15037  0000FE  0102               	movlb	2	; () banked
 15038  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 15039  000102  A4D8               	btfss	status,2,c
 15040  000104  D026               	goto	l2408
 15041                           
 15042                           ; BSR set to: 2
 15043                           ;term.c: 462: {
 15044                           ;term.c: 464: if((cdc_trf_state == 0))
 15045  000106  0100               	movlb	0	; () banked
 15046  000108  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15047  00010A  A4D8               	btfss	status,2,c
 15048  00010C  D022               	goto	l2408
 15049                           
 15050                           ; BSR set to: 0
 15051                           ;term.c: 465: {
 15052                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15053  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15054  000110  0D01               	mullw	1
 15055  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15056  000114  24F3               	addwf	prodl,w,c
 15057  000116  6ED9               	movwf	fsr2l,c
 15058  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15059  00011A  20F4               	addwfc	prodh,w,c
 15060  00011C  6EDA               	movwf	fsr2h,c
 15061  00011E  0E0D               	movlw	13
 15062  000120  6EDF               	movwf	indf2,c
 15063                           
 15064                           ; BSR set to: 0
 15065                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15066  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15067  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15068  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15069  000128  0E01               	movlw	1
 15070  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15071  00012C  0E00               	movlw	0
 15072  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15073  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15074  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15075  000134  6ED9               	movwf	fsr2l,c
 15076  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15077  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15078  00013A  6EDA               	movwf	fsr2h,c
 15079  00013C  0E0A               	movlw	10
 15080  00013E  6EDF               	movwf	indf2,c
 15081                           
 15082                           ; BSR set to: 0
 15083                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15084  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15085  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15086  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15087  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15088  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15089  00014A  0F02               	addlw	2
 15090  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15091  00014E  EC94  F033         	call	_putUSBUSART	;wreg free
 15092  000152                     l2408:
 15093                           
 15094                           ;term.c: 469: }
 15095                           ;term.c: 470: }
 15096                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15097                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15098                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15099  000152  0E53               	movlw	83
 15100  000154  010A               	movlb	10	; () banked
 15101  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15102  000158  A4D8               	btfss	status,2,c
 15103  00015A  D043               	goto	l2409
 15104                           
 15105                           ; BSR set to: 10
 15106  00015C  0E4F               	movlw	79
 15107  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15108  000160  A4D8               	btfss	status,2,c
 15109  000162  D03F               	goto	l2409
 15110                           
 15111                           ; BSR set to: 10
 15112  000164  0E3A               	movlw	58
 15113  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15114  000168  A4D8               	btfss	status,2,c
 15115  00016A  D03B               	goto	l2409
 15116                           
 15117                           ; BSR set to: 10
 15118                           ;term.c: 476: {
 15119                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15120  00016C  0E47               	movlw	71
 15121  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15122  000170  A4D8               	btfss	status,2,c
 15123  000172  0012               	return	
 15124                           
 15125                           ; BSR set to: 10
 15126  000174  0E3A               	movlw	58
 15127  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15128  000178  A4D8               	btfss	status,2,c
 15129  00017A  0012               	return	
 15130                           
 15131                           ; BSR set to: 10
 15132                           ;term.c: 479: {
 15133                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15134  00017C  0E44               	movlw	68
 15135  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15136  000180  A4D8               	btfss	status,2,c
 15137  000182  D015               	goto	l2411
 15138                           
 15139                           ; BSR set to: 10
 15140  000184  0E46               	movlw	70
 15141  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15142  000188  A4D8               	btfss	status,2,c
 15143  00018A  D011               	goto	l2411
 15144                           
 15145                           ; BSR set to: 10
 15146                           ;term.c: 482: {
 15147                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15148  00018C  0E41               	movlw	65
 15149  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15150  000190  A4D8               	btfss	status,2,c
 15151  000192  D004               	goto	l2412
 15152                           
 15153                           ; BSR set to: 10
 15154                           ;term.c: 484: {
 15155                           ;term.c: 485: FormatOption = 1u;
 15156  000194  0E01               	movlw	1
 15157  000196  0102               	movlb	2	; () banked
 15158  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15159                           
 15160                           ;term.c: 486: }
 15161  00019A  0012               	return	
 15162  00019C                     l2412:
 15163                           
 15164                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15165                           
 15166                           ; BSR set to: 2
 15167  00019C  0E42               	movlw	66
 15168  00019E  010A               	movlb	10	; () banked
 15169  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15170  0001A2  A4D8               	btfss	status,2,c
 15171  0001A4  0012               	return	
 15172                           
 15173                           ; BSR set to: 10
 15174                           ;term.c: 488: {
 15175                           ;term.c: 489: FormatOption = 0u;
 15176  0001A6  0E00               	movlw	0
 15177  0001A8  0102               	movlb	2	; () banked
 15178  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15179                           
 15180                           ; BSR set to: 2
 15181                           ;term.c: 490: }
 15182                           ;term.c: 491: }
 15183                           
 15184                           ; BSR set to: 2
 15185  0001AC  0012               	return	
 15186  0001AE                     l2411:
 15187                           
 15188                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15189                           
 15190                           ; BSR set to: 2
 15191  0001AE  0E45               	movlw	69
 15192  0001B0  010A               	movlb	10	; () banked
 15193  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15194  0001B4  A4D8               	btfss	status,2,c
 15195  0001B6  0012               	return	
 15196                           
 15197                           ; BSR set to: 10
 15198  0001B8  0E4D               	movlw	77
 15199  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15200  0001BC  A4D8               	btfss	status,2,c
 15201  0001BE  0012               	return	
 15202                           
 15203                           ; BSR set to: 10
 15204                           ;term.c: 494: {
 15205                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15206  0001C0  0E31               	movlw	49
 15207  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15208  0001C4  A4D8               	btfss	status,2,c
 15209  0001C6  D004               	goto	l2417
 15210                           
 15211                           ; BSR set to: 10
 15212                           ;term.c: 496: {
 15213                           ;term.c: 497: EchoOption = 1u;
 15214  0001C8  0E01               	movlw	1
 15215  0001CA  0102               	movlb	2	; () banked
 15216  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15217                           
 15218                           ;term.c: 498: }
 15219  0001CE  0012               	return	
 15220  0001D0                     l2417:
 15221                           
 15222                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15223                           
 15224                           ; BSR set to: 2
 15225  0001D0  0E30               	movlw	48
 15226  0001D2  010A               	movlb	10	; () banked
 15227  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15228  0001D6  A4D8               	btfss	status,2,c
 15229  0001D8  0012               	return	
 15230                           
 15231                           ; BSR set to: 10
 15232                           ;term.c: 500: {
 15233                           ;term.c: 501: EchoOption = 0u;
 15234  0001DA  0E00               	movlw	0
 15235  0001DC  0102               	movlb	2	; () banked
 15236  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15237                           
 15238                           ; BSR set to: 2
 15239                           ;term.c: 507: }
 15240                           ;term.c: 508: }
 15241                           ;term.c: 509: }
 15242                           
 15243                           ; BSR set to: 2
 15244                           
 15245                           ; BSR set to: 2
 15246                           
 15247                           ;term.c: 504: else
 15248                           ;term.c: 505: {
 15249                           
 15250                           ; BSR set to: 2
 15251                           
 15252                           ; BSR set to: 2
 15253                           ;term.c: 502: }
 15254                           ;term.c: 503: }
 15255                           
 15256                           ; BSR set to: 2
 15257  0001E0  0012               	return	
 15258  0001E2                     l2409:
 15259                           
 15260                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15261                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15262                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15263                           
 15264                           ; BSR set to: 2
 15265  0001E2  0E53               	movlw	83
 15266  0001E4  010A               	movlb	10	; () banked
 15267  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15268  0001E8  A4D8               	btfss	status,2,c
 15269  0001EA  D0D3               	goto	l2422
 15270                           
 15271                           ; BSR set to: 10
 15272  0001EC  0E42               	movlw	66
 15273  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15274  0001F0  A4D8               	btfss	status,2,c
 15275  0001F2  D0CF               	goto	l2422
 15276                           
 15277                           ; BSR set to: 10
 15278  0001F4  0E3A               	movlw	58
 15279  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15280  0001F8  A4D8               	btfss	status,2,c
 15281  0001FA  D0CB               	goto	l2422
 15282                           
 15283                           ; BSR set to: 10
 15284                           ;term.c: 513: {
 15285                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15286  0001FC  0E57               	movlw	87
 15287  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15288  000200  A4D8               	btfss	status,2,c
 15289  000202  D091               	goto	l2423
 15290                           
 15291                           ; BSR set to: 10
 15292  000204  0E3A               	movlw	58
 15293  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15294  000208  A4D8               	btfss	status,2,c
 15295  00020A  D08D               	goto	l2423
 15296                           
 15297                           ; BSR set to: 10
 15298                           ;term.c: 515: {
 15299                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15300  00020C  CA05  F3B2         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15301                           
 15302                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15303  000210  CA06  F3B3         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15304                           
 15305                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15306  000214  CA08  F3AE         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15307                           
 15308                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15309  000218  CA09  F3AF         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15310                           
 15311                           ; BSR set to: 10
 15312                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15313  00021C  0EB2               	movlw	low Terminal@Len
 15314  00021E  0100               	movlb	0	; () banked
 15315  000220  6F83               	movwf	atoi@s& (0+255),b
 15316  000222  0E03               	movlw	high Terminal@Len
 15317  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15318  000226  ECCB  F01B         	call	_atoi	;wreg free
 15319  00022A  0100               	movlb	0	; () banked
 15320  00022C  5183               	movf	?_atoi& (0+255),w,b
 15321  00022E  0102               	movlb	2	; () banked
 15322  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15323                           
 15324                           ; BSR set to: 2
 15325                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15326  000232  0EAE               	movlw	low Terminal@Addr
 15327  000234  0100               	movlb	0	; () banked
 15328  000236  6F83               	movwf	xtoi@s& (0+255),b
 15329  000238  0E03               	movlw	high Terminal@Addr
 15330  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15331  00023C  EC08  F01A         	call	_xtoi	;wreg free
 15332  000240  0100               	movlb	0	; () banked
 15333  000242  5183               	movf	?_xtoi& (0+255),w,b
 15334  000244  0102               	movlb	2	; () banked
 15335  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15336                           
 15337                           ; BSR set to: 2
 15338                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15339  000248  0E00               	movlw	0
 15340  00024A  0100               	movlb	0	; () banked
 15341  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15342  00024E  D032               	goto	l2424
 15343  000250                     
 15344                           ;term.c: 527: {
 15345                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15346                           
 15347                           ; BSR set to: 0
 15348  000250  0100               	movlb	0	; () banked
 15349  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15350  000254  0D02               	mullw	2
 15351  000256  0E0B               	movlw	11
 15352  000258  26F3               	addwf	prodl,f,c
 15353  00025A  0E00               	movlw	0
 15354  00025C  22F4               	addwfc	prodh,f,c
 15355  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15356  000260  24F3               	addwf	prodl,w,c
 15357  000262  6ED9               	movwf	fsr2l,c
 15358  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15359  000266  20F4               	addwfc	prodh,w,c
 15360  000268  6EDA               	movwf	fsr2h,c
 15361  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15362  00026C  0D04               	mullw	4
 15363  00026E  0E66               	movlw	low Terminal@Payload
 15364  000270  24F3               	addwf	prodl,w,c
 15365  000272  6EE1               	movwf	fsr1l,c
 15366  000274  0E07               	movlw	high Terminal@Payload
 15367  000276  20F4               	addwfc	prodh,w,c
 15368  000278  6EE2               	movwf	fsr1h,c
 15369  00027A  CFDF FFE7          	movff	indf2,indf1
 15370                           
 15371                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15372  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15373  000280  0D02               	mullw	2
 15374  000282  0E0C               	movlw	12
 15375  000284  26F3               	addwf	prodl,f,c
 15376  000286  0E00               	movlw	0
 15377  000288  22F4               	addwfc	prodh,f,c
 15378  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15379  00028C  24F3               	addwf	prodl,w,c
 15380  00028E  6ED9               	movwf	fsr2l,c
 15381  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15382  000292  20F4               	addwfc	prodh,w,c
 15383  000294  6EDA               	movwf	fsr2h,c
 15384  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15385  000298  0D04               	mullw	4
 15386  00029A  0E01               	movlw	1
 15387  00029C  26F3               	addwf	prodl,f,c
 15388  00029E  0E00               	movlw	0
 15389  0002A0  22F4               	addwfc	prodh,f,c
 15390  0002A2  0E66               	movlw	low Terminal@Payload
 15391  0002A4  24F3               	addwf	prodl,w,c
 15392  0002A6  6EE1               	movwf	fsr1l,c
 15393  0002A8  0E07               	movlw	high Terminal@Payload
 15394  0002AA  20F4               	addwfc	prodh,w,c
 15395  0002AC  6EE2               	movwf	fsr1h,c
 15396  0002AE  CFDF FFE7          	movff	indf2,indf1
 15397                           
 15398                           ; BSR set to: 0
 15399  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15400  0002B4                     l2424:
 15401                           
 15402                           ; BSR set to: 0
 15403                           
 15404                           ; BSR set to: 0
 15405  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15406  0002B6  0102               	movlb	2	; () banked
 15407  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15408  0002BA  B0D8               	btfsc	status,0,c
 15409  0002BC  D7C9               	goto	l2425
 15410                           
 15411                           ; BSR set to: 2
 15412                           ;term.c: 530: }
 15413                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15414                           
 15415                           ; BSR set to: 2
 15416  0002BE  0E00               	movlw	0
 15417  0002C0  0100               	movlb	0	; () banked
 15418  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15419  0002C4  D01F               	goto	l2427
 15420  0002C6                     
 15421                           ;term.c: 533: {
 15422                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15423                           
 15424                           ; BSR set to: 0
 15425  0002C6  0100               	movlb	0	; () banked
 15426  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15427  0002CA  0D04               	mullw	4
 15428  0002CC  0E66               	movlw	low Terminal@Payload
 15429  0002CE  24F3               	addwf	prodl,w,c
 15430  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15431  0002D2  0E07               	movlw	high Terminal@Payload
 15432  0002D4  20F4               	addwfc	prodh,w,c
 15433  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15434  0002D8  0E00               	movlw	0
 15435  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15436  0002DC  0E00               	movlw	0
 15437  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15438  0002E0  0E00               	movlw	0
 15439  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15440  0002E4  0E10               	movlw	16
 15441  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15442  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15443  0002EC  0100               	movlb	0	; () banked
 15444  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15445  0002F0  0D01               	mullw	1
 15446  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15447  0002F4  24F3               	addwf	prodl,w,c
 15448  0002F6  6ED9               	movwf	fsr2l,c
 15449  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15450  0002FA  20F4               	addwfc	prodh,w,c
 15451  0002FC  6EDA               	movwf	fsr2h,c
 15452  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15453                           
 15454                           ; BSR set to: 0
 15455  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15456  000304                     l2427:
 15457                           
 15458                           ; BSR set to: 0
 15459                           
 15460                           ; BSR set to: 0
 15461  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15462  000306  0102               	movlb	2	; () banked
 15463  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15464  00030A  B0D8               	btfsc	status,0,c
 15465  00030C  D7DC               	goto	l2428
 15466                           
 15467                           ; BSR set to: 2
 15468                           ;term.c: 539: }
 15469                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15470                           
 15471                           ; BSR set to: 2
 15472  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15473  000310  0100               	movlb	0	; () banked
 15474  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15475  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15476  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15477  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15478  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15479  000320  ECD3  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 15480                           
 15481                           ;term.c: 543: }
 15482  000324  0012               	return	
 15483  000326                     l2423:
 15484                           
 15485                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15486  000326  0E52               	movlw	82
 15487  000328  010A               	movlb	10	; () banked
 15488  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15489  00032C  A4D8               	btfss	status,2,c
 15490  00032E  0012               	return	
 15491                           
 15492                           ; BSR set to: 10
 15493  000330  0E3A               	movlw	58
 15494  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15495  000334  A4D8               	btfss	status,2,c
 15496  000336  0012               	return	
 15497                           
 15498                           ; BSR set to: 10
 15499                           ;term.c: 545: {
 15500                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15501  000338  CA05  F3B2         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15502                           
 15503                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15504  00033C  CA06  F3B3         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15505                           
 15506                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15507  000340  CA08  F3AE         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15508                           
 15509                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15510  000344  CA09  F3AF         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15511                           
 15512                           ; BSR set to: 10
 15513                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15514  000348  0EB2               	movlw	low Terminal@Len
 15515  00034A  0100               	movlb	0	; () banked
 15516  00034C  6F83               	movwf	atoi@s& (0+255),b
 15517  00034E  0E03               	movlw	high Terminal@Len
 15518  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15519  000352  ECCB  F01B         	call	_atoi	;wreg free
 15520  000356  0100               	movlb	0	; () banked
 15521  000358  5183               	movf	?_atoi& (0+255),w,b
 15522  00035A  0102               	movlb	2	; () banked
 15523  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15524                           
 15525                           ; BSR set to: 2
 15526                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15527  00035E  0EAE               	movlw	low Terminal@Addr
 15528  000360  0100               	movlb	0	; () banked
 15529  000362  6F83               	movwf	xtoi@s& (0+255),b
 15530  000364  0E03               	movlw	high Terminal@Addr
 15531  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15532  000368  EC08  F01A         	call	_xtoi	;wreg free
 15533  00036C  0100               	movlb	0	; () banked
 15534  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15535  000370  0102               	movlb	2	; () banked
 15536  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15537                           
 15538                           ; BSR set to: 2
 15539                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15540  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15541  000376  0100               	movlb	0	; () banked
 15542  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15543  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15544  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15545  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15546  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15547  000386  EC74  F030         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15548                           
 15549                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15550  00038A  0E01               	movlw	1
 15551  00038C  0102               	movlb	2	; () banked
 15552  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15553                           
 15554                           ; BSR set to: 2
 15555                           ;term.c: 561: }
 15556                           ;term.c: 562: }
 15557                           
 15558                           ; BSR set to: 2
 15559  000390  0012               	return	
 15560  000392                     l2422:
 15561                           
 15562                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15563                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15564                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15565                           
 15566                           ; BSR set to: 2
 15567  000392  0E54               	movlw	84
 15568  000394  010A               	movlb	10	; () banked
 15569  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15570  000398  A4D8               	btfss	status,2,c
 15571  00039A  0012               	return	
 15572                           
 15573                           ; BSR set to: 10
 15574  00039C  0E45               	movlw	69
 15575  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15576  0003A0  A4D8               	btfss	status,2,c
 15577  0003A2  0012               	return	
 15578                           
 15579                           ; BSR set to: 10
 15580  0003A4  0E4C               	movlw	76
 15581  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15582  0003A8  A4D8               	btfss	status,2,c
 15583  0003AA  0012               	return	
 15584                           
 15585                           ; BSR set to: 10
 15586                           ;term.c: 566: {
 15587                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15588  0003AC  CA03  F3B2         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15589                           
 15590                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15591  0003B0  CA04  F3B3         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15592                           
 15593                           ; BSR set to: 10
 15594                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15595  0003B4  0EB2               	movlw	low Terminal@Len
 15596  0003B6  0100               	movlb	0	; () banked
 15597  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15598  0003BA  0E03               	movlw	high Terminal@Len
 15599  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15600  0003BE  ECCB  F01B         	call	_atoi	;wreg free
 15601  0003C2  C083  F318         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15602  0003C6  C084  F319         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15603                           
 15604                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15605  0003CA  0E00               	movlw	0
 15606  0003CC  0100               	movlb	0	; () banked
 15607  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15608  0003D0  D018               	goto	l2434
 15609  0003D2                     
 15610                           ; BSR set to: 0
 15611                           ;term.c: 573: {
 15612                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15613                           
 15614                           ; BSR set to: 0
 15615  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15616  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15617  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15618  0003D8  0E05               	movlw	5
 15619  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15620  0003DC  0E00               	movlw	0
 15621  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15622  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15623  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15624  0003E4  6ED9               	movwf	fsr2l,c
 15625  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15626  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15627  0003EA  6EDA               	movwf	fsr2h,c
 15628  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15629  0003EE  0D01               	mullw	1
 15630  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15631  0003F2  24F3               	addwf	prodl,w,c
 15632  0003F4  6EE1               	movwf	fsr1l,c
 15633  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15634  0003F8  20F4               	addwfc	prodh,w,c
 15635  0003FA  6EE2               	movwf	fsr1h,c
 15636  0003FC  CFDF FFE7          	movff	indf2,indf1
 15637                           
 15638                           ; BSR set to: 0
 15639  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15640  000402                     l2434:
 15641                           
 15642                           ; BSR set to: 0
 15643                           
 15644                           ; BSR set to: 0
 15645  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15646  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15647  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15648  000408  0103               	movlb	3	; () banked
 15649  00040A  5118               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15650  00040C  0100               	movlb	0	; () banked
 15651  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15652  000410  0103               	movlb	3	; () banked
 15653  000412  5119               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15654  000414  0100               	movlb	0	; () banked
 15655  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15656  000418  B0D8               	btfsc	status,0,c
 15657  00041A  0012               	return	
 15658  00041C  D7DA               	goto	l2435
 15659  00041E                     
 15660                           ;term.c: 619: if((cdc_trf_state == 0))
 15661                           
 15662                           ; BSR set to: 0
 15663  00041E  0100               	movlb	0	; () banked
 15664  000420  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15665  000422  A4D8               	btfss	status,2,c
 15666  000424  0012               	return	
 15667                           
 15668                           ; BSR set to: 0
 15669                           ;term.c: 620: {
 15670                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15671  000426  0E53               	movlw	83
 15672  000428  0102               	movlb	2	; () banked
 15673  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15674                           
 15675                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15676  00042C  0E42               	movlw	66
 15677  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15678                           
 15679                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15680  000430  0E5B               	movlw	91
 15681  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15682                           
 15683                           ; BSR set to: 2
 15684                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15685  000434  C3AE  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15686                           
 15687                           ; BSR set to: 2
 15688                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15689  000438  C3AF  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15690                           
 15691                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15692  00043C  0E5D               	movlw	93
 15693  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15694                           
 15695                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15696  000440  0E3A               	movlw	58
 15697  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15698                           
 15699                           ; BSR set to: 2
 15700                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15701  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15702  000446  0100               	movlb	0	; () banked
 15703  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15704  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15705  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15706  00044E  0E07               	movlw	7
 15707  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15708  000452  EC94  F033         	call	_putUSBUSART	;wreg free
 15709                           
 15710                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15711  000456  0E02               	movlw	2
 15712  000458  0102               	movlb	2	; () banked
 15713  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15714                           
 15715                           ; BSR set to: 2
 15716                           ;term.c: 632: }
 15717                           ;term.c: 633: break;
 15718  00045C  0012               	return	
 15719  00045E                     
 15720                           ; BSR set to: 2
 15721                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15722                           
 15723                           ; BSR set to: 2
 15724  00045E  ECB6  F033         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15725  000462  06E8               	decf	wreg,f,c
 15726  000464  A4D8               	btfss	status,2,c
 15727  000466  D088               	goto	l2443
 15728                           
 15729                           ;term.c: 638: {
 15730                           ;term.c: 640: if (FormatOption == 1u)
 15731  000468  0102               	movlb	2	; () banked
 15732  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15733  00046C  A4D8               	btfss	status,2,c
 15734  00046E  D027               	goto	u14150
 15735                           
 15736                           ; BSR set to: 2
 15737                           ;term.c: 641: {
 15738                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15739  000470  0E00               	movlw	0
 15740  000472  0100               	movlb	0	; () banked
 15741  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15742  000476  D01E               	goto	l2445
 15743  000478                     
 15744                           ;term.c: 644: {
 15745                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15746                           
 15747                           ; BSR set to: 0
 15748  000478  0100               	movlb	0	; () banked
 15749  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15750  00047C  0D04               	mullw	4
 15751  00047E  0E66               	movlw	low Terminal@Payload
 15752  000480  24F3               	addwf	prodl,w,c
 15753  000482  6F93               	movwf	itoa@buf& (0+255),b
 15754  000484  0E07               	movlw	high Terminal@Payload
 15755  000486  20F4               	addwfc	prodh,w,c
 15756  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15757  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15758  00048C  0D01               	mullw	1
 15759  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15760  000490  24F3               	addwf	prodl,w,c
 15761  000492  6ED9               	movwf	fsr2l,c
 15762  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15763  000496  20F4               	addwfc	prodh,w,c
 15764  000498  6EDA               	movwf	fsr2h,c
 15765  00049A  50DF               	movf	indf2,w,c
 15766  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15767  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15768  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15769  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15770  0004A4  0E00               	movlw	0
 15771  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15772  0004A8  0E0A               	movlw	10
 15773  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15774  0004AC  EC0E  F030         	call	_itoa	;wreg free
 15775  0004B0  0100               	movlb	0	; () banked
 15776  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15777  0004B4                     l2445:
 15778                           
 15779                           ; BSR set to: 0
 15780                           
 15781                           ; BSR set to: 0
 15782  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15783  0004B6  0102               	movlb	2	; () banked
 15784  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15785  0004BA  B0D8               	btfsc	status,0,c
 15786  0004BC  D7DD               	goto	l2446
 15787  0004BE                     u14150:
 15788                           
 15789                           ; BSR set to: 2
 15790                           ;term.c: 646: }
 15791                           ;term.c: 647: }
 15792                           ;term.c: 650: if((cdc_trf_state == 0))
 15793                           
 15794                           ; BSR set to: 2
 15795                           
 15796                           ; BSR set to: 2
 15797  0004BE  0100               	movlb	0	; () banked
 15798  0004C0  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15799  0004C2  A4D8               	btfss	status,2,c
 15800  0004C4  0012               	return	
 15801                           
 15802                           ; BSR set to: 0
 15803                           ;term.c: 651: {
 15804                           ;term.c: 653: if (FormatOption == 1u)
 15805  0004C6  0102               	movlb	2	; () banked
 15806  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15807  0004CA  A4D8               	btfss	status,2,c
 15808  0004CC  D02B               	goto	l2449
 15809                           
 15810                           ; BSR set to: 2
 15811                           ;term.c: 654: {
 15812                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15813  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15814  0004D0  0D08               	mullw	8
 15815  0004D2  0E03               	movlw	3
 15816  0004D4  26F3               	addwf	prodl,f,c
 15817  0004D6  0E00               	movlw	0
 15818  0004D8  22F4               	addwfc	prodh,f,c
 15819  0004DA  0E66               	movlw	low Terminal@Payload
 15820  0004DC  24F3               	addwf	prodl,w,c
 15821  0004DE  6ED9               	movwf	fsr2l,c
 15822  0004E0  0E07               	movlw	high Terminal@Payload
 15823  0004E2  20F4               	addwfc	prodh,w,c
 15824  0004E4  6EDA               	movwf	fsr2h,c
 15825  0004E6  0E0D               	movlw	13
 15826  0004E8  6EDF               	movwf	indf2,c
 15827                           
 15828                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15829  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15830  0004EC  0D08               	mullw	8
 15831  0004EE  0E02               	movlw	2
 15832  0004F0  26F3               	addwf	prodl,f,c
 15833  0004F2  0E00               	movlw	0
 15834  0004F4  22F4               	addwfc	prodh,f,c
 15835  0004F6  0E66               	movlw	low Terminal@Payload
 15836  0004F8  24F3               	addwf	prodl,w,c
 15837  0004FA  6ED9               	movwf	fsr2l,c
 15838  0004FC  0E07               	movlw	high Terminal@Payload
 15839  0004FE  20F4               	addwfc	prodh,w,c
 15840  000500  6EDA               	movwf	fsr2h,c
 15841  000502  0E0A               	movlw	10
 15842  000504  6EDF               	movwf	indf2,c
 15843                           
 15844                           ; BSR set to: 2
 15845                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15846  000506  0E66               	movlw	low Terminal@Payload
 15847  000508  0100               	movlb	0	; () banked
 15848  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15849  00050C  0E07               	movlw	high Terminal@Payload
 15850  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15851  000510  0102               	movlb	2	; () banked
 15852  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15853  000514  0D02               	mullw	2
 15854  000516  50F3               	movf	prodl,w,c
 15855  000518  0F04               	addlw	4
 15856  00051A  0100               	movlb	0	; () banked
 15857  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15858  00051E  EC94  F033         	call	_putUSBUSART	;wreg free
 15859                           
 15860                           ;term.c: 659: }
 15861  000522  D026               	goto	l2450
 15862  000524                     l2449:
 15863                           
 15864                           ;term.c: 660: else
 15865                           ;term.c: 661: {
 15866                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15867  000524  0102               	movlb	2	; () banked
 15868  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15869  000528  0D01               	mullw	1
 15870  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15871  00052C  24F3               	addwf	prodl,w,c
 15872  00052E  6ED9               	movwf	fsr2l,c
 15873  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15874  000532  20F4               	addwfc	prodh,w,c
 15875  000534  6EDA               	movwf	fsr2h,c
 15876  000536  0E0D               	movlw	13
 15877  000538  6EDF               	movwf	indf2,c
 15878                           
 15879                           ; BSR set to: 2
 15880                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15881  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15882  00053C  0100               	movlb	0	; () banked
 15883  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15884  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15885  000542  0E01               	movlw	1
 15886  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15887  000546  0E00               	movlw	0
 15888  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15889  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15890  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15891  00054E  6ED9               	movwf	fsr2l,c
 15892  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15893  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15894  000554  6EDA               	movwf	fsr2h,c
 15895  000556  0E0A               	movlw	10
 15896  000558  6EDF               	movwf	indf2,c
 15897                           
 15898                           ; BSR set to: 0
 15899                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15900  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15901  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15902  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15903  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15904  000562  0102               	movlb	2	; () banked
 15905  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15906  000566  0F02               	addlw	2
 15907  000568  0100               	movlb	0	; () banked
 15908  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15909  00056C  EC94  F033         	call	_putUSBUSART	;wreg free
 15910  000570                     l2450:
 15911                           
 15912                           ;term.c: 666: }
 15913                           ;term.c: 668: TermState = Term_GetData;
 15914  000570  0E00               	movlw	0
 15915  000572  0102               	movlb	2	; () banked
 15916  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15917                           
 15918                           ; BSR set to: 2
 15919                           ;term.c: 669: }
 15920                           ;term.c: 670: }
 15921  000576  0012               	return	
 15922  000578                     l2443:
 15923                           
 15924                           ;term.c: 671: else
 15925                           ;term.c: 672: {
 15926                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15927                           
 15928                           ; BSR set to: 2
 15929  000578  0ECA               	movlw	low Terminal@SwTimer
 15930  00057A  0100               	movlb	0	; () banked
 15931  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15932  00057E  0E04               	movlw	high Terminal@SwTimer
 15933  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15934  000582  0EB8               	movlw	184
 15935  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15936  000586  0E0B               	movlw	11
 15937  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15938  00058A  0E00               	movlw	0
 15939  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15940  00058E  0E00               	movlw	0
 15941  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15942  000592  EC9A  F028         	call	_OsTmr_Wait	;wreg free
 15943  000596  06E8               	decf	wreg,f,c
 15944  000598  A4D8               	btfss	status,2,c
 15945  00059A  0012               	return	
 15946                           
 15947                           ;term.c: 675: {
 15948                           ;term.c: 677: if((cdc_trf_state == 0))
 15949  00059C  0100               	movlb	0	; () banked
 15950  00059E  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15951  0005A0  A4D8               	btfss	status,2,c
 15952  0005A2  0012               	return	
 15953                           
 15954                           ; BSR set to: 0
 15955                           ;term.c: 678: {
 15956                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15957  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15958  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15959  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15960  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15961  0005AC  0E5F               	movlw	low STR_21
 15962  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15963  0005B0  0EFE               	movlw	high STR_21
 15964  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15965  0005B4  EC0B  F032         	call	_strcpy	;wreg free
 15966                           
 15967                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15968  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15969  0005BA  0100               	movlb	0	; () banked
 15970  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15971  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15972  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15973  0005C2  0E29               	movlw	41
 15974  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15975  0005C6  EC94  F033         	call	_putUSBUSART	;wreg free
 15976                           
 15977                           ;term.c: 682: TermState = Term_GetData;
 15978  0005CA  0E00               	movlw	0
 15979  0005CC  0102               	movlb	2	; () banked
 15980  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15981                           
 15982                           ; BSR set to: 2
 15983                           ;term.c: 693: }
 15984                           
 15985                           ; BSR set to: 2
 15986                           ;term.c: 692: break;
 15987                           
 15988                           ;term.c: 691: default:
 15989                           
 15990                           ; BSR set to: 2
 15991                           ;term.c: 689: break;
 15992                           
 15993                           ;term.c: 688: case Term_ReadSlvUartData:
 15994                           
 15995                           ; BSR set to: 2
 15996                           ;term.c: 683: }
 15997                           ;term.c: 684: }
 15998                           ;term.c: 685: }
 15999                           ;term.c: 686: break;
 16000                           
 16001                           ; BSR set to: 2
 16002                           
 16003                           ; BSR set to: 2
 16004  0005D0  0012               	return	
 16005  0005D2                     l2404:
 16006                           
 16007                           ; BSR set to: 2
 16008  0005D2  0102               	movlb	2	; () banked
 16009  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 16010                           
 16011                           ; Switch size 1, requested type "space"
 16012                           ; Number of cases is 4, Range of values is 0 to 3
 16013                           ; switch strategies available:
 16014                           ; Name         Instructions Cycles
 16015                           ; simple_byte           13     7 (average)
 16016                           ;	Chosen strategy is simple_byte
 16017  0005D6  0A00               	xorlw	0	; case 0
 16018  0005D8  B4D8               	btfsc	status,2,c
 16019  0005DA  D583               	goto	l2405
 16020  0005DC  0A01               	xorlw	1	; case 1
 16021  0005DE  B4D8               	btfsc	status,2,c
 16022  0005E0  D71E               	goto	l2440
 16023  0005E2  0A03               	xorlw	3	; case 2
 16024  0005E4  B4D8               	btfsc	status,2,c
 16025  0005E6  D73B               	goto	l2442
 16026  0005E8  0A01               	xorlw	1	; case 3
 16027  0005EA  0012               	return	
 16028  0005EC                     __end_of_Terminal:
 16029                           	opt stack 0
 16030                           tosu	equ	0xFFF
 16031                           tosh	equ	0xFFE
 16032                           tosl	equ	0xFFD
 16033                           pclath	equ	0xFFA
 16034                           tblptru	equ	0xFF8
 16035                           tblptrh	equ	0xFF7
 16036                           tblptrl	equ	0xFF6
 16037                           tablat	equ	0xFF5
 16038                           prodh	equ	0xFF4
 16039                           prodl	equ	0xFF3
 16040                           intcon	equ	0xFF2
 16041                           intcon2	equ	0xFF1
 16042                           intcon3	equ	0xFF0
 16043                           indf0	equ	0xFEF
 16044                           postinc0	equ	0xFEE
 16045                           plusw0	equ	0xFEB
 16046                           fsr0h	equ	0xFEA
 16047                           fsr0l	equ	0xFE9
 16048                           wreg	equ	0xFE8
 16049                           indf1	equ	0xFE7
 16050                           postinc1	equ	0xFE6
 16051                           postdec1	equ	0xFE5
 16052                           fsr1h	equ	0xFE2
 16053                           fsr1l	equ	0xFE1
 16054                           indf2	equ	0xFDF
 16055                           postinc2	equ	0xFDE
 16056                           postdec2	equ	0xFDD
 16057                           plusw2	equ	0xFDB
 16058                           fsr2h	equ	0xFDA
 16059                           fsr2l	equ	0xFD9
 16060                           status	equ	0xFD8
 16061                           
 16062 ;; *************** function _xtoi *****************
 16063 ;; Defined at:
 16064 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16065 ;; Parameters:    Size  Location     Type
 16066 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16067 ;;		 -> Terminal@Addr(4), 
 16068 ;; Auto vars:     Size  Location     Type
 16069 ;;  val             2   40[BANK0 ] unsigned int 
 16070 ;;  c               1   42[BANK0 ] unsigned char 
 16071 ;;  sign            1   39[BANK0 ] unsigned char 
 16072 ;; Return value:  Size  Location     Type
 16073 ;;                  2   35[BANK0 ] unsigned int 
 16074 ;; Registers used:
 16075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16076 ;; Tracked objects:
 16077 ;;		On entry : 0/0
 16078 ;;		On exit  : 0/0
 16079 ;;		Unchanged: 0/0
 16080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16081 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16082 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16083 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16084 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16085 ;;Total ram usage:        8 bytes
 16086 ;; Hardware stack levels used:    1
 16087 ;; Hardware stack levels required when called:   13
 16088 ;; This function calls:
 16089 ;;		_isdigit
 16090 ;;		_isspace
 16091 ;;		_isupper
 16092 ;;		_isxdigit
 16093 ;;		_tolower
 16094 ;; This function is called by:
 16095 ;;		_Terminal
 16096 ;; This function uses a non-reentrant model
 16097 ;;
 16098                           
 16099                           	psect	text61
 16100  003410                     __ptext61:
 16101                           	opt stack 0
 16102  003410                     _xtoi:
 16103                           	opt stack 12
 16104                           
 16105                           ;incstack = 0
 16106  003410  0E00               	movlw	0
 16107  003412  0100               	movlb	0	; () banked
 16108  003414  6F87               	movwf	xtoi@sign& (0+255),b
 16109  003416  0E00               	movlw	0
 16110  003418  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16111  00341A  0E00               	movlw	0
 16112  00341C  6F88               	movwf	xtoi@val& (0+255),b
 16113  00341E  D003               	goto	l3555
 16114  003420                     
 16115                           ; BSR set to: 0
 16116  003420  0100               	movlb	0	; () banked
 16117  003422  4B83               	infsnz	xtoi@s& (0+255),f,b
 16118  003424  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16119  003426                     l3555:
 16120                           
 16121                           ; BSR set to: 0
 16122                           
 16123                           ; BSR set to: 0
 16124  003426  C083  FFD9         	movff	xtoi@s,fsr2l
 16125  00342A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16126  00342E  50DF               	movf	indf2,w,c
 16127  003430  ECDD  F032         	call	_isspace
 16128  003434  B0D8               	btfsc	status,0,c
 16129  003436  D7F4               	goto	l3556
 16130  003438  C083  FFD9         	movff	xtoi@s,fsr2l
 16131  00343C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16132  003440  0E2D               	movlw	45
 16133  003442  18DE               	xorwf	postinc2,w,c
 16134  003444  A4D8               	btfss	status,2,c
 16135  003446  D003               	goto	l3558
 16136  003448  0100               	movlb	0	; () banked
 16137  00344A  2B87               	incf	xtoi@sign& (0+255),f,b
 16138  00344C  D009               	goto	L15
 16139  00344E                     l3558:
 16140                           
 16141                           ; BSR set to: 0
 16142  00344E  C083  FFD9         	movff	xtoi@s,fsr2l
 16143  003452  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16144  003456  0E2B               	movlw	43
 16145  003458  18DE               	xorwf	postinc2,w,c
 16146  00345A  A4D8               	btfss	status,2,c
 16147  00345C  D028               	goto	l3561
 16148  00345E  0100               	movlb	0	; () banked
 16149  003460                     L15:
 16150  003460  4B83               	infsnz	xtoi@s& (0+255),f,b
 16151  003462  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16152                           
 16153                           ; BSR set to: 0
 16154                           
 16155                           ; BSR set to: 0
 16156  003464  D024               	goto	l3561
 16157  003466                     
 16158                           ; BSR set to: 0
 16159  003466  0100               	movlb	0	; () banked
 16160  003468  518A               	movf	xtoi@c& (0+255),w,b
 16161  00346A  EC83  F033         	call	_isupper
 16162  00346E  A0D8               	btfss	status,0,c
 16163  003470  D006               	goto	l3563
 16164  003472  0100               	movlb	0	; () banked
 16165  003474  518A               	movf	xtoi@c& (0+255),w,b
 16166  003476  EC74  F034         	call	_tolower
 16167  00347A  0100               	movlb	0	; () banked
 16168  00347C  6F8A               	movwf	xtoi@c& (0+255),b
 16169  00347E                     l3563:
 16170  00347E  0100               	movlb	0	; () banked
 16171  003480  518A               	movf	xtoi@c& (0+255),w,b
 16172  003482  ECA5  F033         	call	_isdigit
 16173  003486  A0D8               	btfss	status,0,c
 16174  003488  D002               	goto	l3564
 16175  00348A  0E30               	movlw	48
 16176  00348C  D001               	goto	L14
 16177  00348E                     l3564:
 16178                           
 16179                           ; BSR set to: 0
 16180  00348E  0E57               	movlw	87
 16181  003490                     L14:
 16182  003490  0100               	movlb	0	; () banked
 16183  003492  5F8A               	subwf	xtoi@c& (0+255),f,b
 16184                           
 16185                           ; BSR set to: 0
 16186  003494  3B88               	swapf	xtoi@val& (0+255),f,b
 16187  003496  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16188  003498  0EF0               	movlw	240
 16189  00349A  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16190  00349C  5188               	movf	xtoi@val& (0+255),w,b
 16191  00349E  0B0F               	andlw	15
 16192  0034A0  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16193  0034A2  0EF0               	movlw	240
 16194  0034A4  1788               	andwf	xtoi@val& (0+255),f,b
 16195  0034A6  518A               	movf	xtoi@c& (0+255),w,b
 16196  0034A8  2788               	addwf	xtoi@val& (0+255),f,b
 16197  0034AA  0E00               	movlw	0
 16198  0034AC  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16199  0034AE                     l3561:
 16200                           
 16201                           ; BSR set to: 0
 16202  0034AE  C083  FFD9         	movff	xtoi@s,fsr2l
 16203  0034B2  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16204  0034B6  0100               	movlb	0	; () banked
 16205  0034B8  4B83               	infsnz	xtoi@s& (0+255),f,b
 16206  0034BA  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16207  0034BC  50DF               	movf	indf2,w,c
 16208  0034BE  6F8A               	movwf	xtoi@c& (0+255),b
 16209  0034C0  518A               	movf	xtoi@c& (0+255),w,b
 16210  0034C2  EC2F  F031         	call	_isxdigit
 16211  0034C6  B0D8               	btfsc	status,0,c
 16212  0034C8  D7CE               	goto	l3562
 16213  0034CA  0100               	movlb	0	; () banked
 16214  0034CC  5187               	movf	xtoi@sign& (0+255),w,b
 16215  0034CE  B4D8               	btfsc	status,2,c
 16216  0034D0  D00D               	goto	l3567
 16217                           
 16218                           ; BSR set to: 0
 16219  0034D2  C088  F085         	movff	xtoi@val,??_xtoi
 16220  0034D6  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16221  0034DA  1F85               	comf	??_xtoi& (0+255),f,b
 16222  0034DC  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16223  0034DE  4B85               	infsnz	??_xtoi& (0+255),f,b
 16224  0034E0  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16225  0034E2  C085  F083         	movff	??_xtoi,?_xtoi
 16226  0034E6  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16227  0034EA  0012               	return	
 16228  0034EC                     l3567:
 16229                           
 16230                           ; BSR set to: 0
 16231  0034EC  C088  F083         	movff	xtoi@val,?_xtoi
 16232  0034F0  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16233                           
 16234                           ; BSR set to: 0
 16235  0034F4  0012               	return		;funcret
 16236  0034F6                     __end_of_xtoi:
 16237                           	opt stack 0
 16238                           tosu	equ	0xFFF
 16239                           tosh	equ	0xFFE
 16240                           tosl	equ	0xFFD
 16241                           pclath	equ	0xFFA
 16242                           tblptru	equ	0xFF8
 16243                           tblptrh	equ	0xFF7
 16244                           tblptrl	equ	0xFF6
 16245                           tablat	equ	0xFF5
 16246                           prodh	equ	0xFF4
 16247                           prodl	equ	0xFF3
 16248                           intcon	equ	0xFF2
 16249                           intcon2	equ	0xFF1
 16250                           intcon3	equ	0xFF0
 16251                           indf0	equ	0xFEF
 16252                           postinc0	equ	0xFEE
 16253                           plusw0	equ	0xFEB
 16254                           fsr0h	equ	0xFEA
 16255                           fsr0l	equ	0xFE9
 16256                           wreg	equ	0xFE8
 16257                           indf1	equ	0xFE7
 16258                           postinc1	equ	0xFE6
 16259                           postdec1	equ	0xFE5
 16260                           fsr1h	equ	0xFE2
 16261                           fsr1l	equ	0xFE1
 16262                           indf2	equ	0xFDF
 16263                           postinc2	equ	0xFDE
 16264                           postdec2	equ	0xFDD
 16265                           plusw2	equ	0xFDB
 16266                           fsr2h	equ	0xFDA
 16267                           fsr2l	equ	0xFD9
 16268                           status	equ	0xFD8
 16269                           
 16270 ;; *************** function _tolower *****************
 16271 ;; Defined at:
 16272 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16273 ;; Parameters:    Size  Location     Type
 16274 ;;  c               1    wreg     unsigned char 
 16275 ;; Auto vars:     Size  Location     Type
 16276 ;;  c               1   29[BANK0 ] unsigned char 
 16277 ;; Return value:  Size  Location     Type
 16278 ;;                  1    wreg      unsigned char 
 16279 ;; Registers used:
 16280 ;;		wreg, status,2, status,0
 16281 ;; Tracked objects:
 16282 ;;		On entry : 0/0
 16283 ;;		On exit  : 0/0
 16284 ;;		Unchanged: 0/0
 16285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16289 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16290 ;;Total ram usage:        1 bytes
 16291 ;; Hardware stack levels used:    1
 16292 ;; Hardware stack levels required when called:   11
 16293 ;; This function calls:
 16294 ;;		Nothing
 16295 ;; This function is called by:
 16296 ;;		_xtoi
 16297 ;; This function uses a non-reentrant model
 16298 ;;
 16299                           
 16300                           	psect	text62
 16301  0068E8                     __ptext62:
 16302                           	opt stack 0
 16303  0068E8                     _tolower:
 16304                           	opt stack 13
 16305                           
 16306                           ; BSR set to: 0
 16307                           ;incstack = 0
 16308                           ;tolower@c stored from wreg
 16309  0068E8  0100               	movlb	0	; () banked
 16310  0068EA  6F7D               	movwf	tolower@c& (0+255),b
 16311  0068EC  0E5B               	movlw	91
 16312  0068EE  0100               	movlb	0	; () banked
 16313  0068F0  617D               	cpfslt	tolower@c& (0+255),b
 16314  0068F2  D004               	goto	l3614
 16315                           
 16316                           ; BSR set to: 0
 16317  0068F4  0E40               	movlw	64
 16318  0068F6  657D               	cpfsgt	tolower@c& (0+255),b
 16319  0068F8  D001               	goto	l3614
 16320                           
 16321                           ; BSR set to: 0
 16322  0068FA  8B7D               	bsf	tolower@c& (0+255),5,b
 16323  0068FC                     l3614:
 16324                           
 16325                           ; BSR set to: 0
 16326                           
 16327                           ; BSR set to: 0
 16328  0068FC  517D               	movf	tolower@c& (0+255),w,b
 16329  0068FE  0012               	return	
 16330  006900                     __end_of_tolower:
 16331                           	opt stack 0
 16332                           tosu	equ	0xFFF
 16333                           tosh	equ	0xFFE
 16334                           tosl	equ	0xFFD
 16335                           pclath	equ	0xFFA
 16336                           tblptru	equ	0xFF8
 16337                           tblptrh	equ	0xFF7
 16338                           tblptrl	equ	0xFF6
 16339                           tablat	equ	0xFF5
 16340                           prodh	equ	0xFF4
 16341                           prodl	equ	0xFF3
 16342                           intcon	equ	0xFF2
 16343                           intcon2	equ	0xFF1
 16344                           intcon3	equ	0xFF0
 16345                           indf0	equ	0xFEF
 16346                           postinc0	equ	0xFEE
 16347                           plusw0	equ	0xFEB
 16348                           fsr0h	equ	0xFEA
 16349                           fsr0l	equ	0xFE9
 16350                           wreg	equ	0xFE8
 16351                           indf1	equ	0xFE7
 16352                           postinc1	equ	0xFE6
 16353                           postdec1	equ	0xFE5
 16354                           fsr1h	equ	0xFE2
 16355                           fsr1l	equ	0xFE1
 16356                           indf2	equ	0xFDF
 16357                           postinc2	equ	0xFDE
 16358                           postdec2	equ	0xFDD
 16359                           plusw2	equ	0xFDB
 16360                           fsr2h	equ	0xFDA
 16361                           fsr2l	equ	0xFD9
 16362                           status	equ	0xFD8
 16363                           
 16364 ;; *************** function _isxdigit *****************
 16365 ;; Defined at:
 16366 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16367 ;; Parameters:    Size  Location     Type
 16368 ;;  c               1    wreg     unsigned char 
 16369 ;; Auto vars:     Size  Location     Type
 16370 ;;  c               1   34[BANK0 ] unsigned char 
 16371 ;; Return value:  Size  Location     Type
 16372 ;;		None               void
 16373 ;; Registers used:
 16374 ;;		wreg, status,2, status,0, cstack
 16375 ;; Tracked objects:
 16376 ;;		On entry : 0/0
 16377 ;;		On exit  : 0/0
 16378 ;;		Unchanged: 0/0
 16379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16381 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16382 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16383 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16384 ;;Total ram usage:        3 bytes
 16385 ;; Hardware stack levels used:    1
 16386 ;; Hardware stack levels required when called:   12
 16387 ;; This function calls:
 16388 ;;		_isdigit
 16389 ;; This function is called by:
 16390 ;;		_xtoi
 16391 ;; This function uses a non-reentrant model
 16392 ;;
 16393                           
 16394                           	psect	text63
 16395  00625E                     __ptext63:
 16396                           	opt stack 0
 16397  00625E                     _isxdigit:
 16398                           	opt stack 12
 16399                           
 16400                           ; BSR set to: 0
 16401                           ;incstack = 0
 16402                           ;isxdigit@c stored from wreg
 16403  00625E  0100               	movlb	0	; () banked
 16404  006260  6F82               	movwf	isxdigit@c& (0+255),b
 16405  006262  0E01               	movlw	1
 16406  006264  0100               	movlb	0	; () banked
 16407  006266  6F81               	movwf	_isxdigit$6681& (0+255),b
 16408                           
 16409                           ; BSR set to: 0
 16410  006268  0E67               	movlw	103
 16411  00626A  6182               	cpfslt	isxdigit@c& (0+255),b
 16412  00626C  D003               	goto	u12470
 16413                           
 16414                           ; BSR set to: 0
 16415  00626E  0E61               	movlw	97
 16416  006270  6182               	cpfslt	isxdigit@c& (0+255),b
 16417  006272  D00E               	goto	l3610
 16418  006274                     u12470:
 16419                           
 16420                           ; BSR set to: 0
 16421                           
 16422                           ; BSR set to: 0
 16423  006274  0E47               	movlw	71
 16424  006276  6182               	cpfslt	isxdigit@c& (0+255),b
 16425  006278  D003               	goto	u12490
 16426                           
 16427                           ; BSR set to: 0
 16428  00627A  0E41               	movlw	65
 16429  00627C  6182               	cpfslt	isxdigit@c& (0+255),b
 16430  00627E  D008               	goto	l3610
 16431  006280                     u12490:
 16432                           
 16433                           ; BSR set to: 0
 16434                           
 16435                           ; BSR set to: 0
 16436  006280  5182               	movf	isxdigit@c& (0+255),w,b
 16437  006282  ECA5  F033         	call	_isdigit
 16438  006286  B0D8               	btfsc	status,0,c
 16439  006288  D003               	goto	l3610
 16440  00628A  0E00               	movlw	0
 16441  00628C  0100               	movlb	0	; () banked
 16442  00628E  6F81               	movwf	_isxdigit$6681& (0+255),b
 16443  006290                     l3610:
 16444                           
 16445                           ; BSR set to: 0
 16446  006290  C081  F080         	movff	_isxdigit$6681,??_isxdigit
 16447  006294  0100               	movlb	0	; () banked
 16448  006296  3180               	rrcf	??_isxdigit& (0+255),w,b
 16449  006298  0012               	return	
 16450  00629A                     __end_of_isxdigit:
 16451                           	opt stack 0
 16452                           tosu	equ	0xFFF
 16453                           tosh	equ	0xFFE
 16454                           tosl	equ	0xFFD
 16455                           pclath	equ	0xFFA
 16456                           tblptru	equ	0xFF8
 16457                           tblptrh	equ	0xFF7
 16458                           tblptrl	equ	0xFF6
 16459                           tablat	equ	0xFF5
 16460                           prodh	equ	0xFF4
 16461                           prodl	equ	0xFF3
 16462                           intcon	equ	0xFF2
 16463                           intcon2	equ	0xFF1
 16464                           intcon3	equ	0xFF0
 16465                           indf0	equ	0xFEF
 16466                           postinc0	equ	0xFEE
 16467                           plusw0	equ	0xFEB
 16468                           fsr0h	equ	0xFEA
 16469                           fsr0l	equ	0xFE9
 16470                           wreg	equ	0xFE8
 16471                           indf1	equ	0xFE7
 16472                           postinc1	equ	0xFE6
 16473                           postdec1	equ	0xFE5
 16474                           fsr1h	equ	0xFE2
 16475                           fsr1l	equ	0xFE1
 16476                           indf2	equ	0xFDF
 16477                           postinc2	equ	0xFDE
 16478                           postdec2	equ	0xFDD
 16479                           plusw2	equ	0xFDB
 16480                           fsr2h	equ	0xFDA
 16481                           fsr2l	equ	0xFD9
 16482                           status	equ	0xFD8
 16483                           
 16484 ;; *************** function _strtol *****************
 16485 ;; Defined at:
 16486 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16487 ;; Parameters:    Size  Location     Type
 16488 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16489 ;;		 -> Terminal@Payload(80), 
 16490 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16491 ;;		 -> NULL(0), 
 16492 ;;  base            2   45[BANK0 ] int 
 16493 ;; Auto vars:     Size  Location     Type
 16494 ;;  a               4   52[BANK0 ] long 
 16495 ;;  c               1   56[BANK0 ] unsigned char 
 16496 ;;  sign            1   51[BANK0 ] unsigned char 
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  4   41[BANK0 ] long 
 16499 ;; Registers used:
 16500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16501 ;; Tracked objects:
 16502 ;;		On entry : 0/0
 16503 ;;		On exit  : 0/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16506 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16507 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16508 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16509 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16510 ;;Total ram usage:       16 bytes
 16511 ;; Hardware stack levels used:    1
 16512 ;; Hardware stack levels required when called:   13
 16513 ;; This function calls:
 16514 ;;		___lmul
 16515 ;;		_isalpha
 16516 ;;		_isdigit
 16517 ;;		_isspace
 16518 ;;		_toupper
 16519 ;; This function is called by:
 16520 ;;		_Terminal
 16521 ;; This function uses a non-reentrant model
 16522 ;;
 16523                           
 16524                           	psect	text64
 16525  00181C                     __ptext64:
 16526                           	opt stack 0
 16527  00181C                     _strtol:
 16528                           	opt stack 12
 16529                           
 16530                           ; BSR set to: 0
 16531                           ;incstack = 0
 16532  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16533  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16534  001824  50DF               	movf	indf2,w,c
 16535  001826  0100               	movlb	0	; () banked
 16536  001828  6F98               	movwf	strtol@c& (0+255),b
 16537                           
 16538                           ; BSR set to: 0
 16539  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16540  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16541                           
 16542                           ; BSR set to: 0
 16543  00182E  5198               	movf	strtol@c& (0+255),w,b
 16544  001830  ECDD  F032         	call	_isspace
 16545  001834  B0D8               	btfsc	status,0,c
 16546  001836  D7F2               	goto	_strtol
 16547  001838  0E00               	movlw	0
 16548  00183A  0100               	movlb	0	; () banked
 16549  00183C  6F94               	movwf	strtol@a& (0+255),b
 16550  00183E  0E00               	movlw	0
 16551  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16552  001842  0E00               	movlw	0
 16553  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16554  001846  0E00               	movlw	0
 16555  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16556  00184A  0E00               	movlw	0
 16557  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16558                           
 16559                           ; BSR set to: 0
 16560  00184E  0E2D               	movlw	45
 16561  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16562  001852  A4D8               	btfss	status,2,c
 16563  001854  D003               	goto	l3517
 16564                           
 16565                           ; BSR set to: 0
 16566  001856  0E01               	movlw	1
 16567  001858  6F93               	movwf	strtol@sign& (0+255),b
 16568  00185A  D004               	goto	u12980
 16569  00185C                     l3517:
 16570                           
 16571                           ; BSR set to: 0
 16572                           
 16573                           ; BSR set to: 0
 16574  00185C  0E2B               	movlw	43
 16575  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16576  001860  A4D8               	btfss	status,2,c
 16577  001862  D008               	goto	l3519
 16578  001864                     u12980:
 16579                           
 16580                           ; BSR set to: 0
 16581  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16582  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16583  00186C  50DF               	movf	indf2,w,c
 16584  00186E  6F98               	movwf	strtol@c& (0+255),b
 16585                           
 16586                           ; BSR set to: 0
 16587  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16588  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16589  001874                     l3519:
 16590                           
 16591                           ; BSR set to: 0
 16592                           
 16593                           ; BSR set to: 0
 16594                           
 16595                           ; BSR set to: 0
 16596  001874  0E30               	movlw	48
 16597  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16598  001878  A4D8               	btfss	status,2,c
 16599  00187A  D02E               	goto	l3527
 16600                           
 16601                           ; BSR set to: 0
 16602  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16603  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16604  001884  50DF               	movf	indf2,w,c
 16605  001886  6F98               	movwf	strtol@c& (0+255),b
 16606                           
 16607                           ; BSR set to: 0
 16608  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16609  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16610                           
 16611                           ; BSR set to: 0
 16612  00188C  518D               	movf	strtol@base& (0+255),w,b
 16613  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16614  001890  B4D8               	btfsc	status,2,c
 16615  001892  D005               	goto	u13010
 16616                           
 16617                           ; BSR set to: 0
 16618  001894  0E10               	movlw	16
 16619  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16620  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16621  00189A  A4D8               	btfss	status,2,c
 16622  00189C  D015               	goto	l3521
 16623  00189E                     u13010:
 16624                           
 16625                           ; BSR set to: 0
 16626                           
 16627                           ; BSR set to: 0
 16628  00189E  0E78               	movlw	120
 16629  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16630  0018A2  B4D8               	btfsc	status,2,c
 16631  0018A4  D004               	goto	u13030
 16632                           
 16633                           ; BSR set to: 0
 16634  0018A6  0E58               	movlw	88
 16635  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16636  0018AA  A4D8               	btfss	status,2,c
 16637  0018AC  D00D               	goto	l3521
 16638  0018AE                     u13030:
 16639                           
 16640                           ; BSR set to: 0
 16641                           
 16642                           ; BSR set to: 0
 16643  0018AE  0E00               	movlw	0
 16644  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16645  0018B2  0E10               	movlw	16
 16646  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16647                           
 16648                           ; BSR set to: 0
 16649  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16650  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16651  0018BE  50DF               	movf	indf2,w,c
 16652  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16653                           
 16654                           ; BSR set to: 0
 16655  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16656  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16657  0018C6  D008               	goto	l3527
 16658  0018C8                     l3521:
 16659                           
 16660                           ; BSR set to: 0
 16661                           
 16662                           ; BSR set to: 0
 16663  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16664  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16665  0018CC  A4D8               	btfss	status,2,c
 16666  0018CE  D004               	goto	l3527
 16667                           
 16668                           ; BSR set to: 0
 16669  0018D0  0E00               	movlw	0
 16670  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16671  0018D4  0E08               	movlw	8
 16672  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16673  0018D8                     l3527:
 16674                           
 16675                           ; BSR set to: 0
 16676                           
 16677                           ; BSR set to: 0
 16678                           
 16679                           ; BSR set to: 0
 16680                           
 16681                           ; BSR set to: 0
 16682  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16683  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16684  0018DC  A4D8               	btfss	status,2,c
 16685  0018DE  D004               	goto	l3528
 16686                           
 16687                           ; BSR set to: 0
 16688  0018E0  0E00               	movlw	0
 16689  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16690  0018E4  0E0A               	movlw	10
 16691  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16692  0018E8                     l3528:
 16693                           
 16694                           ; BSR set to: 0
 16695                           
 16696                           ; BSR set to: 0
 16697                           
 16698                           ; BSR set to: 0
 16699  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16700  0018EA  EC54  F032         	call	_isalpha
 16701  0018EE  A0D8               	btfss	status,0,c
 16702  0018F0  D008               	goto	l3530
 16703  0018F2  0100               	movlb	0	; () banked
 16704  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16705  0018F6  EC80  F034         	call	_toupper
 16706  0018FA  0FC9               	addlw	201
 16707  0018FC  0100               	movlb	0	; () banked
 16708  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16709  001900  D009               	goto	l3533
 16710  001902                     l3530:
 16711                           
 16712                           ; BSR set to: 0
 16713  001902  0100               	movlb	0	; () banked
 16714  001904  5198               	movf	strtol@c& (0+255),w,b
 16715  001906  ECA5  F033         	call	_isdigit
 16716  00190A  A0D8               	btfss	status,0,c
 16717  00190C  D039               	goto	l3534
 16718  00190E  0E30               	movlw	48
 16719  001910  0100               	movlb	0	; () banked
 16720  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16721  001914                     l3533:
 16722                           
 16723                           ; BSR set to: 0
 16724                           
 16725                           ; BSR set to: 0
 16726                           
 16727                           ; BSR set to: 0
 16728  001914  5198               	movf	strtol@c& (0+255),w,b
 16729  001916  6F8F               	movwf	??_strtol& (0+255),b
 16730  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16731  00191A  518D               	movf	strtol@base& (0+255),w,b
 16732  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16733  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16734  001920  0A80               	xorlw	128
 16735  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16736  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16737  001926  0A80               	xorlw	128
 16738  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16739  00192A  B0D8               	btfsc	status,0,c
 16740  00192C  D029               	goto	l3534
 16741                           
 16742                           ; BSR set to: 0
 16743                           
 16744                           ; BSR set to: 0
 16745                           
 16746                           ; BSR set to: 0
 16747  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16748  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16749  001936  0E00               	movlw	0
 16750  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16751  00193A  0EFF               	movlw	-1
 16752  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16753  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16754  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16755  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16756  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16757  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16758  001950  EC55  F02C         	call	___lmul	;wreg free
 16759  001954  0100               	movlb	0	; () banked
 16760  001956  5198               	movf	strtol@c& (0+255),w,b
 16761  001958  257D               	addwf	?___lmul& (0+255),w,b
 16762  00195A  6F94               	movwf	strtol@a& (0+255),b
 16763  00195C  0E00               	movlw	0
 16764  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16765  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16766  001962  0E00               	movlw	0
 16767  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16768  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16769  001968  0E00               	movlw	0
 16770  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16771  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16772                           
 16773                           ; BSR set to: 0
 16774  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16775  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16776  001976  50DF               	movf	indf2,w,c
 16777  001978  6F98               	movwf	strtol@c& (0+255),b
 16778                           
 16779                           ; BSR set to: 0
 16780  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16781  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16782  00197E  D7B4               	goto	l3528
 16783  001980                     l3534:
 16784                           
 16785                           ; BSR set to: 0
 16786  001980  0100               	movlb	0	; () banked
 16787  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16788  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16789  001986  B4D8               	btfsc	status,2,c
 16790  001988  D00E               	goto	l3536
 16791                           
 16792                           ; BSR set to: 0
 16793  00198A  0EFF               	movlw	255
 16794  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16795  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16796  001990  0EFF               	movlw	255
 16797  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16798  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16799  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16800  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16801  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16802  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16803  0019A6                     l3536:
 16804                           
 16805                           ; BSR set to: 0
 16806                           
 16807                           ; BSR set to: 0
 16808  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16809  0019A8  B4D8               	btfsc	status,2,c
 16810  0019AA  D01A               	goto	l3537
 16811                           
 16812                           ; BSR set to: 0
 16813  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16814  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16815  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16816  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16817  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16818  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16819  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16820  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16821  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16822  0019C6  0E00               	movlw	0
 16823  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16824  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16825  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16826  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16827  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16828  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16829  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16830                           
 16831                           ; BSR set to: 0
 16832  0019DE  0012               	return	
 16833  0019E0                     l3537:
 16834                           
 16835                           ; BSR set to: 0
 16836  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16837  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16838  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16839  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16840                           
 16841                           ; BSR set to: 0
 16842  0019F0  0012               	return		;funcret
 16843  0019F2                     __end_of_strtol:
 16844                           	opt stack 0
 16845                           tosu	equ	0xFFF
 16846                           tosh	equ	0xFFE
 16847                           tosl	equ	0xFFD
 16848                           pclath	equ	0xFFA
 16849                           tblptru	equ	0xFF8
 16850                           tblptrh	equ	0xFF7
 16851                           tblptrl	equ	0xFF6
 16852                           tablat	equ	0xFF5
 16853                           prodh	equ	0xFF4
 16854                           prodl	equ	0xFF3
 16855                           intcon	equ	0xFF2
 16856                           intcon2	equ	0xFF1
 16857                           intcon3	equ	0xFF0
 16858                           indf0	equ	0xFEF
 16859                           postinc0	equ	0xFEE
 16860                           plusw0	equ	0xFEB
 16861                           fsr0h	equ	0xFEA
 16862                           fsr0l	equ	0xFE9
 16863                           wreg	equ	0xFE8
 16864                           indf1	equ	0xFE7
 16865                           postinc1	equ	0xFE6
 16866                           postdec1	equ	0xFE5
 16867                           fsr1h	equ	0xFE2
 16868                           fsr1l	equ	0xFE1
 16869                           indf2	equ	0xFDF
 16870                           postinc2	equ	0xFDE
 16871                           postdec2	equ	0xFDD
 16872                           plusw2	equ	0xFDB
 16873                           fsr2h	equ	0xFDA
 16874                           fsr2l	equ	0xFD9
 16875                           status	equ	0xFD8
 16876                           
 16877 ;; *************** function _toupper *****************
 16878 ;; Defined at:
 16879 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16880 ;; Parameters:    Size  Location     Type
 16881 ;;  c               1    wreg     unsigned char 
 16882 ;; Auto vars:     Size  Location     Type
 16883 ;;  c               1   29[BANK0 ] unsigned char 
 16884 ;; Return value:  Size  Location     Type
 16885 ;;                  1    wreg      unsigned char 
 16886 ;; Registers used:
 16887 ;;		wreg, status,2, status,0
 16888 ;; Tracked objects:
 16889 ;;		On entry : 0/0
 16890 ;;		On exit  : 0/0
 16891 ;;		Unchanged: 0/0
 16892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16896 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16897 ;;Total ram usage:        1 bytes
 16898 ;; Hardware stack levels used:    1
 16899 ;; Hardware stack levels required when called:   11
 16900 ;; This function calls:
 16901 ;;		Nothing
 16902 ;; This function is called by:
 16903 ;;		_strtol
 16904 ;; This function uses a non-reentrant model
 16905 ;;
 16906                           
 16907                           	psect	text65
 16908  006900                     __ptext65:
 16909                           	opt stack 0
 16910  006900                     _toupper:
 16911                           	opt stack 13
 16912                           
 16913                           ; BSR set to: 0
 16914                           ;incstack = 0
 16915                           ;toupper@c stored from wreg
 16916  006900  0100               	movlb	0	; () banked
 16917  006902  6F7D               	movwf	toupper@c& (0+255),b
 16918  006904  0E7B               	movlw	123
 16919  006906  0100               	movlb	0	; () banked
 16920  006908  617D               	cpfslt	toupper@c& (0+255),b
 16921  00690A  D004               	goto	l3541
 16922                           
 16923                           ; BSR set to: 0
 16924  00690C  0E60               	movlw	96
 16925  00690E  657D               	cpfsgt	toupper@c& (0+255),b
 16926  006910  D001               	goto	l3541
 16927                           
 16928                           ; BSR set to: 0
 16929  006912  9B7D               	bcf	toupper@c& (0+255),5,b
 16930  006914                     l3541:
 16931                           
 16932                           ; BSR set to: 0
 16933                           
 16934                           ; BSR set to: 0
 16935  006914  517D               	movf	toupper@c& (0+255),w,b
 16936  006916  0012               	return	
 16937  006918                     __end_of_toupper:
 16938                           	opt stack 0
 16939                           tosu	equ	0xFFF
 16940                           tosh	equ	0xFFE
 16941                           tosl	equ	0xFFD
 16942                           pclath	equ	0xFFA
 16943                           tblptru	equ	0xFF8
 16944                           tblptrh	equ	0xFF7
 16945                           tblptrl	equ	0xFF6
 16946                           tablat	equ	0xFF5
 16947                           prodh	equ	0xFF4
 16948                           prodl	equ	0xFF3
 16949                           intcon	equ	0xFF2
 16950                           intcon2	equ	0xFF1
 16951                           intcon3	equ	0xFF0
 16952                           indf0	equ	0xFEF
 16953                           postinc0	equ	0xFEE
 16954                           plusw0	equ	0xFEB
 16955                           fsr0h	equ	0xFEA
 16956                           fsr0l	equ	0xFE9
 16957                           wreg	equ	0xFE8
 16958                           indf1	equ	0xFE7
 16959                           postinc1	equ	0xFE6
 16960                           postdec1	equ	0xFE5
 16961                           fsr1h	equ	0xFE2
 16962                           fsr1l	equ	0xFE1
 16963                           indf2	equ	0xFDF
 16964                           postinc2	equ	0xFDE
 16965                           postdec2	equ	0xFDD
 16966                           plusw2	equ	0xFDB
 16967                           fsr2h	equ	0xFDA
 16968                           fsr2l	equ	0xFD9
 16969                           status	equ	0xFD8
 16970                           
 16971 ;; *************** function _isspace *****************
 16972 ;; Defined at:
 16973 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16974 ;; Parameters:    Size  Location     Type
 16975 ;;  c               1    wreg     unsigned char 
 16976 ;; Auto vars:     Size  Location     Type
 16977 ;;  c               1   31[BANK0 ] unsigned char 
 16978 ;; Return value:  Size  Location     Type
 16979 ;;		None               void
 16980 ;; Registers used:
 16981 ;;		wreg, status,2, status,0
 16982 ;; Tracked objects:
 16983 ;;		On entry : 0/0
 16984 ;;		On exit  : 0/0
 16985 ;;		Unchanged: 0/0
 16986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16988 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16989 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16990 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16991 ;;Total ram usage:        3 bytes
 16992 ;; Hardware stack levels used:    1
 16993 ;; Hardware stack levels required when called:   11
 16994 ;; This function calls:
 16995 ;;		Nothing
 16996 ;; This function is called by:
 16997 ;;		_strtol
 16998 ;;		_xtoi
 16999 ;; This function uses a non-reentrant model
 17000 ;;
 17001                           
 17002                           	psect	text66
 17003  0065BA                     __ptext66:
 17004                           	opt stack 0
 17005  0065BA                     _isspace:
 17006                           	opt stack 13
 17007                           
 17008                           ; BSR set to: 0
 17009                           ;incstack = 0
 17010                           ;isspace@c stored from wreg
 17011  0065BA  0100               	movlb	0	; () banked
 17012  0065BC  6F7F               	movwf	isspace@c& (0+255),b
 17013  0065BE  0E01               	movlw	1
 17014  0065C0  0100               	movlb	0	; () banked
 17015  0065C2  6F7E               	movwf	_isspace$6674& (0+255),b
 17016                           
 17017                           ; BSR set to: 0
 17018  0065C4  0E20               	movlw	32
 17019  0065C6  197F               	xorwf	isspace@c& (0+255),w,b
 17020  0065C8  B4D8               	btfsc	status,2,c
 17021  0065CA  D008               	goto	l3598
 17022                           
 17023                           ; BSR set to: 0
 17024  0065CC  0E0E               	movlw	14
 17025  0065CE  617F               	cpfslt	isspace@c& (0+255),b
 17026  0065D0  D003               	goto	u12380
 17027                           
 17028                           ; BSR set to: 0
 17029  0065D2  0E09               	movlw	9
 17030  0065D4  617F               	cpfslt	isspace@c& (0+255),b
 17031  0065D6  D002               	goto	l3598
 17032  0065D8                     u12380:
 17033                           
 17034                           ; BSR set to: 0
 17035                           
 17036                           ; BSR set to: 0
 17037  0065D8  0E00               	movlw	0
 17038  0065DA  6F7E               	movwf	_isspace$6674& (0+255),b
 17039  0065DC                     l3598:
 17040                           
 17041                           ; BSR set to: 0
 17042                           
 17043                           ; BSR set to: 0
 17044  0065DC  C07E  F07D         	movff	_isspace$6674,??_isspace
 17045  0065E0  317D               	rrcf	??_isspace& (0+255),w,b
 17046  0065E2  0012               	return	
 17047  0065E4                     __end_of_isspace:
 17048                           	opt stack 0
 17049                           tosu	equ	0xFFF
 17050                           tosh	equ	0xFFE
 17051                           tosl	equ	0xFFD
 17052                           pclath	equ	0xFFA
 17053                           tblptru	equ	0xFF8
 17054                           tblptrh	equ	0xFF7
 17055                           tblptrl	equ	0xFF6
 17056                           tablat	equ	0xFF5
 17057                           prodh	equ	0xFF4
 17058                           prodl	equ	0xFF3
 17059                           intcon	equ	0xFF2
 17060                           intcon2	equ	0xFF1
 17061                           intcon3	equ	0xFF0
 17062                           indf0	equ	0xFEF
 17063                           postinc0	equ	0xFEE
 17064                           plusw0	equ	0xFEB
 17065                           fsr0h	equ	0xFEA
 17066                           fsr0l	equ	0xFE9
 17067                           wreg	equ	0xFE8
 17068                           indf1	equ	0xFE7
 17069                           postinc1	equ	0xFE6
 17070                           postdec1	equ	0xFE5
 17071                           fsr1h	equ	0xFE2
 17072                           fsr1l	equ	0xFE1
 17073                           indf2	equ	0xFDF
 17074                           postinc2	equ	0xFDE
 17075                           postdec2	equ	0xFDD
 17076                           plusw2	equ	0xFDB
 17077                           fsr2h	equ	0xFDA
 17078                           fsr2l	equ	0xFD9
 17079                           status	equ	0xFD8
 17080                           
 17081 ;; *************** function _isalpha *****************
 17082 ;; Defined at:
 17083 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17084 ;; Parameters:    Size  Location     Type
 17085 ;;  c               1    wreg     unsigned char 
 17086 ;; Auto vars:     Size  Location     Type
 17087 ;;  c               1   34[BANK0 ] unsigned char 
 17088 ;; Return value:  Size  Location     Type
 17089 ;;		None               void
 17090 ;; Registers used:
 17091 ;;		wreg, status,2, status,0, cstack
 17092 ;; Tracked objects:
 17093 ;;		On entry : 0/0
 17094 ;;		On exit  : 0/0
 17095 ;;		Unchanged: 0/0
 17096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17098 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17099 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17100 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17101 ;;Total ram usage:        3 bytes
 17102 ;; Hardware stack levels used:    1
 17103 ;; Hardware stack levels required when called:   12
 17104 ;; This function calls:
 17105 ;;		_isupper
 17106 ;; This function is called by:
 17107 ;;		_strtol
 17108 ;; This function uses a non-reentrant model
 17109 ;;
 17110                           
 17111                           	psect	text67
 17112  0064A8                     __ptext67:
 17113                           	opt stack 0
 17114  0064A8                     _isalpha:
 17115                           	opt stack 12
 17116                           
 17117                           ; BSR set to: 0
 17118                           ;incstack = 0
 17119                           ;isalpha@c stored from wreg
 17120  0064A8  0100               	movlb	0	; () banked
 17121  0064AA  6F82               	movwf	isalpha@c& (0+255),b
 17122  0064AC  0E01               	movlw	1
 17123  0064AE  0100               	movlb	0	; () banked
 17124  0064B0  6F81               	movwf	_isalpha$6671& (0+255),b
 17125                           
 17126                           ; BSR set to: 0
 17127  0064B2  0E7B               	movlw	123
 17128  0064B4  6182               	cpfslt	isalpha@c& (0+255),b
 17129  0064B6  D003               	goto	u12400
 17130                           
 17131                           ; BSR set to: 0
 17132  0064B8  0E61               	movlw	97
 17133  0064BA  6182               	cpfslt	isalpha@c& (0+255),b
 17134  0064BC  D008               	goto	l3593
 17135  0064BE                     u12400:
 17136                           
 17137                           ; BSR set to: 0
 17138                           
 17139                           ; BSR set to: 0
 17140  0064BE  5182               	movf	isalpha@c& (0+255),w,b
 17141  0064C0  EC83  F033         	call	_isupper
 17142  0064C4  B0D8               	btfsc	status,0,c
 17143  0064C6  D003               	goto	l3593
 17144  0064C8  0E00               	movlw	0
 17145  0064CA  0100               	movlb	0	; () banked
 17146  0064CC  6F81               	movwf	_isalpha$6671& (0+255),b
 17147  0064CE                     l3593:
 17148                           
 17149                           ; BSR set to: 0
 17150  0064CE  C081  F080         	movff	_isalpha$6671,??_isalpha
 17151  0064D2  0100               	movlb	0	; () banked
 17152  0064D4  3180               	rrcf	??_isalpha& (0+255),w,b
 17153  0064D6  0012               	return	
 17154  0064D8                     __end_of_isalpha:
 17155                           	opt stack 0
 17156                           tosu	equ	0xFFF
 17157                           tosh	equ	0xFFE
 17158                           tosl	equ	0xFFD
 17159                           pclath	equ	0xFFA
 17160                           tblptru	equ	0xFF8
 17161                           tblptrh	equ	0xFF7
 17162                           tblptrl	equ	0xFF6
 17163                           tablat	equ	0xFF5
 17164                           prodh	equ	0xFF4
 17165                           prodl	equ	0xFF3
 17166                           intcon	equ	0xFF2
 17167                           intcon2	equ	0xFF1
 17168                           intcon3	equ	0xFF0
 17169                           indf0	equ	0xFEF
 17170                           postinc0	equ	0xFEE
 17171                           plusw0	equ	0xFEB
 17172                           fsr0h	equ	0xFEA
 17173                           fsr0l	equ	0xFE9
 17174                           wreg	equ	0xFE8
 17175                           indf1	equ	0xFE7
 17176                           postinc1	equ	0xFE6
 17177                           postdec1	equ	0xFE5
 17178                           fsr1h	equ	0xFE2
 17179                           fsr1l	equ	0xFE1
 17180                           indf2	equ	0xFDF
 17181                           postinc2	equ	0xFDE
 17182                           postdec2	equ	0xFDD
 17183                           plusw2	equ	0xFDB
 17184                           fsr2h	equ	0xFDA
 17185                           fsr2l	equ	0xFD9
 17186                           status	equ	0xFD8
 17187                           
 17188 ;; *************** function _isupper *****************
 17189 ;; Defined at:
 17190 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17191 ;; Parameters:    Size  Location     Type
 17192 ;;  c               1    wreg     unsigned char 
 17193 ;; Auto vars:     Size  Location     Type
 17194 ;;  c               1   31[BANK0 ] unsigned char 
 17195 ;; Return value:  Size  Location     Type
 17196 ;;		None               void
 17197 ;; Registers used:
 17198 ;;		wreg, status,2, status,0
 17199 ;; Tracked objects:
 17200 ;;		On entry : 0/0
 17201 ;;		On exit  : 0/0
 17202 ;;		Unchanged: 0/0
 17203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17205 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17206 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17207 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17208 ;;Total ram usage:        3 bytes
 17209 ;; Hardware stack levels used:    1
 17210 ;; Hardware stack levels required when called:   11
 17211 ;; This function calls:
 17212 ;;		Nothing
 17213 ;; This function is called by:
 17214 ;;		_xtoi
 17215 ;;		_isalpha
 17216 ;; This function uses a non-reentrant model
 17217 ;;
 17218                           
 17219                           	psect	text68
 17220  006706                     __ptext68:
 17221                           	opt stack 0
 17222  006706                     _isupper:
 17223                           	opt stack 13
 17224                           
 17225                           ; BSR set to: 0
 17226                           ;incstack = 0
 17227                           ;isupper@c stored from wreg
 17228  006706  0100               	movlb	0	; () banked
 17229  006708  6F7F               	movwf	isupper@c& (0+255),b
 17230  00670A  0E00               	movlw	0
 17231  00670C  0100               	movlb	0	; () banked
 17232  00670E  6F7E               	movwf	_isupper$6677& (0+255),b
 17233                           
 17234                           ; BSR set to: 0
 17235  006710  0E5B               	movlw	91
 17236  006712  617F               	cpfslt	isupper@c& (0+255),b
 17237  006714  D005               	goto	l3603
 17238                           
 17239                           ; BSR set to: 0
 17240  006716  0E40               	movlw	64
 17241  006718  657F               	cpfsgt	isupper@c& (0+255),b
 17242  00671A  D002               	goto	l3603
 17243                           
 17244                           ; BSR set to: 0
 17245  00671C  0E01               	movlw	1
 17246  00671E  6F7E               	movwf	_isupper$6677& (0+255),b
 17247  006720                     l3603:
 17248                           
 17249                           ; BSR set to: 0
 17250                           
 17251                           ; BSR set to: 0
 17252  006720  C07E  F07D         	movff	_isupper$6677,??_isupper
 17253  006724  317D               	rrcf	??_isupper& (0+255),w,b
 17254  006726  0012               	return	
 17255  006728                     __end_of_isupper:
 17256                           	opt stack 0
 17257                           tosu	equ	0xFFF
 17258                           tosh	equ	0xFFE
 17259                           tosl	equ	0xFFD
 17260                           pclath	equ	0xFFA
 17261                           tblptru	equ	0xFF8
 17262                           tblptrh	equ	0xFF7
 17263                           tblptrl	equ	0xFF6
 17264                           tablat	equ	0xFF5
 17265                           prodh	equ	0xFF4
 17266                           prodl	equ	0xFF3
 17267                           intcon	equ	0xFF2
 17268                           intcon2	equ	0xFF1
 17269                           intcon3	equ	0xFF0
 17270                           indf0	equ	0xFEF
 17271                           postinc0	equ	0xFEE
 17272                           plusw0	equ	0xFEB
 17273                           fsr0h	equ	0xFEA
 17274                           fsr0l	equ	0xFE9
 17275                           wreg	equ	0xFE8
 17276                           indf1	equ	0xFE7
 17277                           postinc1	equ	0xFE6
 17278                           postdec1	equ	0xFE5
 17279                           fsr1h	equ	0xFE2
 17280                           fsr1l	equ	0xFE1
 17281                           indf2	equ	0xFDF
 17282                           postinc2	equ	0xFDE
 17283                           postdec2	equ	0xFDD
 17284                           plusw2	equ	0xFDB
 17285                           fsr2h	equ	0xFDA
 17286                           fsr2l	equ	0xFD9
 17287                           status	equ	0xFD8
 17288                           
 17289 ;; *************** function _strcpy *****************
 17290 ;; Defined at:
 17291 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17292 ;; Parameters:    Size  Location     Type
 17293 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17294 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17295 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17296 ;;		 -> STR_23(20), STR_21(42), 
 17297 ;; Auto vars:     Size  Location     Type
 17298 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17299 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17300 ;; Return value:  Size  Location     Type
 17301 ;;                  2   29[BANK0 ] PTR unsigned char 
 17302 ;; Registers used:
 17303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17304 ;; Tracked objects:
 17305 ;;		On entry : 0/0
 17306 ;;		On exit  : 0/0
 17307 ;;		Unchanged: 0/0
 17308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17309 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17310 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17312 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17313 ;;Total ram usage:        6 bytes
 17314 ;; Hardware stack levels used:    1
 17315 ;; Hardware stack levels required when called:   11
 17316 ;; This function calls:
 17317 ;;		Nothing
 17318 ;; This function is called by:
 17319 ;;		_Terminal
 17320 ;;		_Term_MainSm
 17321 ;; This function uses a non-reentrant model
 17322 ;;
 17323                           
 17324                           	psect	text69
 17325  006416                     __ptext69:
 17326                           	opt stack 0
 17327  006416                     _strcpy:
 17328                           	opt stack 15
 17329                           
 17330                           ; BSR set to: 0
 17331                           ;incstack = 0
 17332  006416  C07D  F081         	movff	strcpy@to,strcpy@cp
 17333  00641A  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17334  00641E  D005               	goto	l3495
 17335  006420  0100               	movlb	0	; () banked
 17336  006422  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17337  006424  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17338  006426  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17339  006428  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17340  00642A                     l3495:
 17341                           
 17342                           ; BSR set to: 0
 17343  00642A  C07F  FFF6         	movff	strcpy@from,tblptrl
 17344  00642E  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17345  006432                     	if	0	;tblptru may be non-zero
 17346  006432                     	endif
 17347  006432                     	if	0	;tblptru may be non-zero
 17348  006432                     	endif
 17349  006432  C081  FFD9         	movff	strcpy@cp,fsr2l
 17350  006436  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17351  00643A  0008               	tblrd		*
 17352  00643C  CFF5 FFDF          	movff	tablat,indf2
 17353  006440  50DF               	movf	indf2,w,c
 17354  006442  B4D8               	btfsc	status,2,c
 17355  006444  0012               	return	
 17356  006446  D7EC               	goto	l3496
 17357  006448                     __end_of_strcpy:
 17358                           	opt stack 0
 17359                           tosu	equ	0xFFF
 17360                           tosh	equ	0xFFE
 17361                           tosl	equ	0xFFD
 17362                           pclath	equ	0xFFA
 17363                           tblptru	equ	0xFF8
 17364                           tblptrh	equ	0xFF7
 17365                           tblptrl	equ	0xFF6
 17366                           tablat	equ	0xFF5
 17367                           prodh	equ	0xFF4
 17368                           prodl	equ	0xFF3
 17369                           intcon	equ	0xFF2
 17370                           intcon2	equ	0xFF1
 17371                           intcon3	equ	0xFF0
 17372                           indf0	equ	0xFEF
 17373                           postinc0	equ	0xFEE
 17374                           plusw0	equ	0xFEB
 17375                           fsr0h	equ	0xFEA
 17376                           fsr0l	equ	0xFE9
 17377                           wreg	equ	0xFE8
 17378                           indf1	equ	0xFE7
 17379                           postinc1	equ	0xFE6
 17380                           postdec1	equ	0xFE5
 17381                           fsr1h	equ	0xFE2
 17382                           fsr1l	equ	0xFE1
 17383                           indf2	equ	0xFDF
 17384                           postinc2	equ	0xFDE
 17385                           postdec2	equ	0xFDD
 17386                           plusw2	equ	0xFDB
 17387                           fsr2h	equ	0xFDA
 17388                           fsr2l	equ	0xFD9
 17389                           status	equ	0xFD8
 17390                           
 17391 ;; *************** function _putUSBUSART *****************
 17392 ;; Defined at:
 17393 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17394 ;; Parameters:    Size  Location     Type
 17395 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17396 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17397 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17398 ;;		 -> RxBuffer(400), 
 17399 ;;  length          1   37[BANK0 ] unsigned char 
 17400 ;; Auto vars:     Size  Location     Type
 17401 ;;		None
 17402 ;; Return value:  Size  Location     Type
 17403 ;;                  1    wreg      void 
 17404 ;; Registers used:
 17405 ;;		wreg, status,2, status,0
 17406 ;; Tracked objects:
 17407 ;;		On entry : 0/0
 17408 ;;		On exit  : 0/0
 17409 ;;		Unchanged: 0/0
 17410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17411 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17414 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17415 ;;Total ram usage:        3 bytes
 17416 ;; Hardware stack levels used:    1
 17417 ;; Hardware stack levels required when called:   11
 17418 ;; This function calls:
 17419 ;;		Nothing
 17420 ;; This function is called by:
 17421 ;;		_Terminal
 17422 ;;		_Term_MainSm
 17423 ;;		_GsmGprsTerminal
 17424 ;; This function uses a non-reentrant model
 17425 ;;
 17426                           
 17427                           	psect	text70
 17428  006728                     __ptext70:
 17429                           	opt stack 0
 17430  006728                     _putUSBUSART:
 17431                           	opt stack 15
 17432                           
 17433                           ;usb_device_cdc.c: 584: ;
 17434                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17435                           
 17436                           ;incstack = 0
 17437  006728  0100               	movlb	0	; () banked
 17438  00672A  51C6               	movf	_cdc_trf_state& (0+255),w,b
 17439  00672C  A4D8               	btfss	status,2,c
 17440  00672E  0012               	return	
 17441                           
 17442                           ; BSR set to: 0
 17443                           ;usb_device_cdc.c: 586: {
 17444                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17445  006730  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17446  006734  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17447                           
 17448                           ; BSR set to: 0
 17449  006738  C085  F0C5         	movff	putUSBUSART@length,_cdc_tx_len
 17450                           
 17451                           ; BSR set to: 0
 17452  00673C  0E01               	movlw	1
 17453  00673E  0101               	movlb	1	; () banked
 17454  006740  6FDF               	movwf	_cdc_mem_type& (0+255),b
 17455                           
 17456                           ; BSR set to: 1
 17457  006742  0E01               	movlw	1
 17458  006744  0100               	movlb	0	; () banked
 17459  006746  6FC6               	movwf	_cdc_trf_state& (0+255),b
 17460  006748  0012               	return	
 17461  00674A                     __end_of_putUSBUSART:
 17462                           	opt stack 0
 17463                           tosu	equ	0xFFF
 17464                           tosh	equ	0xFFE
 17465                           tosl	equ	0xFFD
 17466                           pclath	equ	0xFFA
 17467                           tblptru	equ	0xFF8
 17468                           tblptrh	equ	0xFF7
 17469                           tblptrl	equ	0xFF6
 17470                           tablat	equ	0xFF5
 17471                           prodh	equ	0xFF4
 17472                           prodl	equ	0xFF3
 17473                           intcon	equ	0xFF2
 17474                           intcon2	equ	0xFF1
 17475                           intcon3	equ	0xFF0
 17476                           indf0	equ	0xFEF
 17477                           postinc0	equ	0xFEE
 17478                           plusw0	equ	0xFEB
 17479                           fsr0h	equ	0xFEA
 17480                           fsr0l	equ	0xFE9
 17481                           wreg	equ	0xFE8
 17482                           indf1	equ	0xFE7
 17483                           postinc1	equ	0xFE6
 17484                           postdec1	equ	0xFE5
 17485                           fsr1h	equ	0xFE2
 17486                           fsr1l	equ	0xFE1
 17487                           indf2	equ	0xFDF
 17488                           postinc2	equ	0xFDE
 17489                           postdec2	equ	0xFDD
 17490                           plusw2	equ	0xFDB
 17491                           fsr2h	equ	0xFDA
 17492                           fsr2l	equ	0xFD9
 17493                           status	equ	0xFD8
 17494                           
 17495 ;; *************** function _itoa *****************
 17496 ;; Defined at:
 17497 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17498 ;; Parameters:    Size  Location     Type
 17499 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17500 ;;		 -> Terminal@Payload(80), 
 17501 ;;  val             2   53[BANK0 ] int 
 17502 ;;  base            2   55[BANK0 ] int 
 17503 ;; Auto vars:     Size  Location     Type
 17504 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17505 ;;		 -> Terminal@Payload(80), 
 17506 ;; Return value:  Size  Location     Type
 17507 ;;                  2   51[BANK0 ] PTR unsigned char 
 17508 ;; Registers used:
 17509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17510 ;; Tracked objects:
 17511 ;;		On entry : 0/0
 17512 ;;		On exit  : 0/0
 17513 ;;		Unchanged: 0/0
 17514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17515 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17516 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17518 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;Total ram usage:        8 bytes
 17520 ;; Hardware stack levels used:    1
 17521 ;; Hardware stack levels required when called:   13
 17522 ;; This function calls:
 17523 ;;		_utoa
 17524 ;; This function is called by:
 17525 ;;		_Terminal
 17526 ;; This function uses a non-reentrant model
 17527 ;;
 17528                           
 17529                           	psect	text71
 17530  00601C                     __ptext71:
 17531                           	opt stack 0
 17532  00601C                     _itoa:
 17533                           	opt stack 12
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;incstack = 0
 17537  00601C  C093  F099         	movff	itoa@buf,itoa@cp
 17538  006020  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17539  006024  0100               	movlb	0	; () banked
 17540  006026  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17541  006028  D00C               	goto	l3243
 17542                           
 17543                           ; BSR set to: 0
 17544  00602A  C093  FFD9         	movff	itoa@buf,fsr2l
 17545  00602E  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17546  006032  0E2D               	movlw	45
 17547  006034  6EDF               	movwf	indf2,c
 17548                           
 17549                           ; BSR set to: 0
 17550  006036  4B93               	infsnz	itoa@buf& (0+255),f,b
 17551  006038  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17552                           
 17553                           ; BSR set to: 0
 17554  00603A  6D95               	negf	itoa@val& (0+255),b
 17555  00603C  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17556  00603E  B0D8               	btfsc	status,0,c
 17557  006040  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17558  006042                     l3243:
 17559                           
 17560                           ; BSR set to: 0
 17561                           
 17562                           ; BSR set to: 0
 17563  006042  C093  F08A         	movff	itoa@buf,utoa@buf
 17564  006046  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17565  00604A  C095  F08C         	movff	itoa@val,utoa@val
 17566  00604E  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17567  006052  C097  F08E         	movff	itoa@base,utoa@base
 17568  006056  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17569  00605A  EC5A  F022         	call	_utoa	;wreg free
 17570  00605E  0012               	return	
 17571  006060                     __end_of_itoa:
 17572                           	opt stack 0
 17573                           tosu	equ	0xFFF
 17574                           tosh	equ	0xFFE
 17575                           tosl	equ	0xFFD
 17576                           pclath	equ	0xFFA
 17577                           tblptru	equ	0xFF8
 17578                           tblptrh	equ	0xFF7
 17579                           tblptrl	equ	0xFF6
 17580                           tablat	equ	0xFF5
 17581                           prodh	equ	0xFF4
 17582                           prodl	equ	0xFF3
 17583                           intcon	equ	0xFF2
 17584                           intcon2	equ	0xFF1
 17585                           intcon3	equ	0xFF0
 17586                           indf0	equ	0xFEF
 17587                           postinc0	equ	0xFEE
 17588                           plusw0	equ	0xFEB
 17589                           fsr0h	equ	0xFEA
 17590                           fsr0l	equ	0xFE9
 17591                           wreg	equ	0xFE8
 17592                           indf1	equ	0xFE7
 17593                           postinc1	equ	0xFE6
 17594                           postdec1	equ	0xFE5
 17595                           fsr1h	equ	0xFE2
 17596                           fsr1l	equ	0xFE1
 17597                           indf2	equ	0xFDF
 17598                           postinc2	equ	0xFDE
 17599                           postdec2	equ	0xFDD
 17600                           plusw2	equ	0xFDB
 17601                           fsr2h	equ	0xFDA
 17602                           fsr2l	equ	0xFD9
 17603                           status	equ	0xFD8
 17604                           
 17605 ;; *************** function _utoa *****************
 17606 ;; Defined at:
 17607 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17608 ;; Parameters:    Size  Location     Type
 17609 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17610 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17611 ;;  val             2   44[BANK0 ] unsigned int 
 17612 ;;  base            2   46[BANK0 ] int 
 17613 ;; Auto vars:     Size  Location     Type
 17614 ;;  v               2   48[BANK0 ] unsigned int 
 17615 ;;  c               1   50[BANK0 ] unsigned char 
 17616 ;; Return value:  Size  Location     Type
 17617 ;;                  2   42[BANK0 ] PTR unsigned char 
 17618 ;; Registers used:
 17619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17620 ;; Tracked objects:
 17621 ;;		On entry : 0/0
 17622 ;;		On exit  : 0/0
 17623 ;;		Unchanged: 0/0
 17624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17625 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17626 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17628 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17629 ;;Total ram usage:        9 bytes
 17630 ;; Hardware stack levels used:    1
 17631 ;; Hardware stack levels required when called:   12
 17632 ;; This function calls:
 17633 ;;		___lwdiv
 17634 ;;		___lwmod
 17635 ;; This function is called by:
 17636 ;;		_Term_MainSm
 17637 ;;		_itoa
 17638 ;; This function uses a non-reentrant model
 17639 ;;
 17640                           
 17641                           	psect	text72
 17642  0044B4                     __ptext72:
 17643                           	opt stack 0
 17644  0044B4                     _utoa:
 17645                           	opt stack 14
 17646                           
 17647                           ;incstack = 0
 17648  0044B4  C08C  F090         	movff	utoa@val,utoa@v
 17649  0044B8  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17650  0044BC  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17651  0044C0  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17652  0044C4  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17653  0044C8  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17654  0044CC  EC81  F02D         	call	___lwdiv	;wreg free
 17655  0044D0  C083  F090         	movff	?___lwdiv,utoa@v
 17656  0044D4  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17657  0044D8  0100               	movlb	0	; () banked
 17658  0044DA  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17659  0044DC  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17660                           
 17661                           ; BSR set to: 0
 17662  0044DE  5190               	movf	utoa@v& (0+255),w,b
 17663  0044E0  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17664  0044E2  A4D8               	btfss	status,2,c
 17665  0044E4  D7EB               	goto	l3247
 17666                           
 17667                           ; BSR set to: 0
 17668                           
 17669                           ; BSR set to: 0
 17670  0044E6  C08A  FFD9         	movff	utoa@buf,fsr2l
 17671  0044EA  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17672  0044EE  0E00               	movlw	0
 17673  0044F0  6EDF               	movwf	indf2,c
 17674                           
 17675                           ; BSR set to: 0
 17676  0044F2  078A               	decf	utoa@buf& (0+255),f,b
 17677  0044F4  A0D8               	btfss	status,0,c
 17678  0044F6  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17679  0044F8                     
 17680                           ; BSR set to: 0
 17681                           
 17682                           ; BSR set to: 0
 17683  0044F8  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17684  0044FC  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17685  004500  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17686  004504  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17687  004508  EC30  F030         	call	___lwmod	;wreg free
 17688  00450C  0100               	movlb	0	; () banked
 17689  00450E  517D               	movf	?___lwmod& (0+255),w,b
 17690  004510  6F92               	movwf	utoa@c& (0+255),b
 17691                           
 17692                           ; BSR set to: 0
 17693  004512  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17694  004516  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17695  00451A  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17696  00451E  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17697  004522  EC81  F02D         	call	___lwdiv	;wreg free
 17698  004526  C083  F08C         	movff	?___lwdiv,utoa@val
 17699  00452A  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17700  00452E  0E09               	movlw	9
 17701  004530  0100               	movlb	0	; () banked
 17702  004532  6592               	cpfsgt	utoa@c& (0+255),b
 17703  004534  D002               	goto	l3250
 17704                           
 17705                           ; BSR set to: 0
 17706  004536  0E07               	movlw	7
 17707  004538  2792               	addwf	utoa@c& (0+255),f,b
 17708  00453A                     l3250:
 17709                           
 17710                           ; BSR set to: 0
 17711  00453A  0E30               	movlw	48
 17712  00453C  2792               	addwf	utoa@c& (0+255),f,b
 17713                           
 17714                           ; BSR set to: 0
 17715  00453E  C08A  FFD9         	movff	utoa@buf,fsr2l
 17716  004542  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17717  004546  C092  FFDF         	movff	utoa@c,indf2
 17718                           
 17719                           ; BSR set to: 0
 17720  00454A  078A               	decf	utoa@buf& (0+255),f,b
 17721  00454C  A0D8               	btfss	status,0,c
 17722  00454E  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17723                           
 17724                           ; BSR set to: 0
 17725  004550  518C               	movf	utoa@val& (0+255),w,b
 17726  004552  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17727  004554  A4D8               	btfss	status,2,c
 17728  004556  D7D0               	goto	l3249
 17729                           
 17730                           ; BSR set to: 0
 17731                           ;	Return value of _utoa is never used
 17732                           
 17733                           ; BSR set to: 0
 17734  004558  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17735  00455A  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17736  00455C  0012               	return	
 17737  00455E                     __end_of_utoa:
 17738                           	opt stack 0
 17739                           tosu	equ	0xFFF
 17740                           tosh	equ	0xFFE
 17741                           tosl	equ	0xFFD
 17742                           pclath	equ	0xFFA
 17743                           tblptru	equ	0xFF8
 17744                           tblptrh	equ	0xFF7
 17745                           tblptrl	equ	0xFF6
 17746                           tablat	equ	0xFF5
 17747                           prodh	equ	0xFF4
 17748                           prodl	equ	0xFF3
 17749                           intcon	equ	0xFF2
 17750                           intcon2	equ	0xFF1
 17751                           intcon3	equ	0xFF0
 17752                           indf0	equ	0xFEF
 17753                           postinc0	equ	0xFEE
 17754                           plusw0	equ	0xFEB
 17755                           fsr0h	equ	0xFEA
 17756                           fsr0l	equ	0xFE9
 17757                           wreg	equ	0xFE8
 17758                           indf1	equ	0xFE7
 17759                           postinc1	equ	0xFE6
 17760                           postdec1	equ	0xFE5
 17761                           fsr1h	equ	0xFE2
 17762                           fsr1l	equ	0xFE1
 17763                           indf2	equ	0xFDF
 17764                           postinc2	equ	0xFDE
 17765                           postdec2	equ	0xFDD
 17766                           plusw2	equ	0xFDB
 17767                           fsr2h	equ	0xFDA
 17768                           fsr2l	equ	0xFD9
 17769                           status	equ	0xFD8
 17770                           
 17771 ;; *************** function ___lwmod *****************
 17772 ;; Defined at:
 17773 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17774 ;; Parameters:    Size  Location     Type
 17775 ;;  dividend        2   29[BANK0 ] unsigned int 
 17776 ;;  divisor         2   31[BANK0 ] unsigned int 
 17777 ;; Auto vars:     Size  Location     Type
 17778 ;;  counter         1   33[BANK0 ] unsigned char 
 17779 ;; Return value:  Size  Location     Type
 17780 ;;                  2   29[BANK0 ] unsigned int 
 17781 ;; Registers used:
 17782 ;;		wreg, status,2, status,0
 17783 ;; Tracked objects:
 17784 ;;		On entry : 0/0
 17785 ;;		On exit  : 0/0
 17786 ;;		Unchanged: 0/0
 17787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17788 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17791 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17792 ;;Total ram usage:        5 bytes
 17793 ;; Hardware stack levels used:    1
 17794 ;; Hardware stack levels required when called:   11
 17795 ;; This function calls:
 17796 ;;		Nothing
 17797 ;; This function is called by:
 17798 ;;		_utoa
 17799 ;; This function uses a non-reentrant model
 17800 ;;
 17801                           
 17802                           	psect	text73
 17803  006060                     __ptext73:
 17804                           	opt stack 0
 17805  006060                     ___lwmod:
 17806                           	opt stack 14
 17807                           
 17808                           ; BSR set to: 0
 17809                           ;incstack = 0
 17810  006060  0100               	movlb	0	; () banked
 17811  006062  517F               	movf	___lwmod@divisor& (0+255),w,b
 17812  006064  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17813  006066  B4D8               	btfsc	status,2,c
 17814  006068  D018               	goto	l3345
 17815                           
 17816                           ; BSR set to: 0
 17817  00606A  0E01               	movlw	1
 17818  00606C  6F81               	movwf	___lwmod@counter& (0+255),b
 17819  00606E  D004               	goto	l3340
 17820  006070                     
 17821                           ; BSR set to: 0
 17822                           
 17823                           ; BSR set to: 0
 17824  006070  90D8               	bcf	status,0,c
 17825  006072  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17826  006074  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17827  006076  2B81               	incf	___lwmod@counter& (0+255),f,b
 17828  006078                     l3340:
 17829                           
 17830                           ; BSR set to: 0
 17831                           
 17832                           ; BSR set to: 0
 17833  006078  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17834  00607A  D7FA               	goto	l3341
 17835  00607C                     u12030:
 17836                           
 17837                           ; BSR set to: 0
 17838                           
 17839                           ; BSR set to: 0
 17840                           
 17841                           ; BSR set to: 0
 17842  00607C  517F               	movf	___lwmod@divisor& (0+255),w,b
 17843  00607E  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17844  006080  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17845  006082  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17846  006084  A0D8               	btfss	status,0,c
 17847  006086  D004               	goto	l3344
 17848                           
 17849                           ; BSR set to: 0
 17850  006088  517F               	movf	___lwmod@divisor& (0+255),w,b
 17851  00608A  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17852  00608C  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17853  00608E  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17854  006090                     l3344:
 17855                           
 17856                           ; BSR set to: 0
 17857                           
 17858                           ; BSR set to: 0
 17859  006090  90D8               	bcf	status,0,c
 17860  006092  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17861  006094  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17862                           
 17863                           ; BSR set to: 0
 17864  006096  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17865  006098  D7F1               	goto	u12030
 17866  00609A                     l3345:
 17867                           
 17868                           ; BSR set to: 0
 17869                           
 17870                           ; BSR set to: 0
 17871  00609A  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17872  00609E  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17873                           
 17874                           ; BSR set to: 0
 17875  0060A2  0012               	return		;funcret
 17876  0060A4                     __end_of___lwmod:
 17877                           	opt stack 0
 17878                           tosu	equ	0xFFF
 17879                           tosh	equ	0xFFE
 17880                           tosl	equ	0xFFD
 17881                           pclath	equ	0xFFA
 17882                           tblptru	equ	0xFF8
 17883                           tblptrh	equ	0xFF7
 17884                           tblptrl	equ	0xFF6
 17885                           tablat	equ	0xFF5
 17886                           prodh	equ	0xFF4
 17887                           prodl	equ	0xFF3
 17888                           intcon	equ	0xFF2
 17889                           intcon2	equ	0xFF1
 17890                           intcon3	equ	0xFF0
 17891                           indf0	equ	0xFEF
 17892                           postinc0	equ	0xFEE
 17893                           plusw0	equ	0xFEB
 17894                           fsr0h	equ	0xFEA
 17895                           fsr0l	equ	0xFE9
 17896                           wreg	equ	0xFE8
 17897                           indf1	equ	0xFE7
 17898                           postinc1	equ	0xFE6
 17899                           postdec1	equ	0xFE5
 17900                           fsr1h	equ	0xFE2
 17901                           fsr1l	equ	0xFE1
 17902                           indf2	equ	0xFDF
 17903                           postinc2	equ	0xFDE
 17904                           postdec2	equ	0xFDD
 17905                           plusw2	equ	0xFDB
 17906                           fsr2h	equ	0xFDA
 17907                           fsr2l	equ	0xFD9
 17908                           status	equ	0xFD8
 17909                           
 17910 ;; *************** function _getsUSBUSART *****************
 17911 ;; Defined at:
 17912 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17913 ;; Parameters:    Size  Location     Type
 17914 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17915 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17916 ;;  len             1   38[BANK0 ] unsigned char 
 17917 ;; Auto vars:     Size  Location     Type
 17918 ;;		None
 17919 ;; Return value:  Size  Location     Type
 17920 ;;                  1    wreg      unsigned char 
 17921 ;; Registers used:
 17922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17923 ;; Tracked objects:
 17924 ;;		On entry : 0/0
 17925 ;;		On exit  : 0/0
 17926 ;;		Unchanged: 0/0
 17927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17928 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17930 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17931 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17932 ;;Total ram usage:        4 bytes
 17933 ;; Hardware stack levels used:    1
 17934 ;; Hardware stack levels required when called:   12
 17935 ;; This function calls:
 17936 ;;		_USBTransferOnePacket
 17937 ;; This function is called by:
 17938 ;;		_Terminal
 17939 ;;		_GsmGprsTerminal
 17940 ;; This function uses a non-reentrant model
 17941 ;;
 17942                           
 17943                           	psect	text74
 17944  004BA2                     __ptext74:
 17945                           	opt stack 0
 17946  004BA2                     _getsUSBUSART:
 17947                           	opt stack 13
 17948                           
 17949                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17950                           
 17951                           ; BSR set to: 0
 17952                           ;incstack = 0
 17953  004BA2  0E00               	movlw	0
 17954  004BA4  0100               	movlb	0	; () banked
 17955  004BA6  6FC7               	movwf	_cdc_rx_len& (0+255),b
 17956                           
 17957                           ; BSR set to: 0
 17958                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17959  004BA8  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17960  004BAA  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17961  004BAC  B4D8               	btfsc	status,2,c
 17962  004BAE  D006               	goto	u12760
 17963                           
 17964                           ; BSR set to: 0
 17965  004BB0  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17966  004BB4  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17967  004BB8  BEDF               	btfsc	indf2,7,c
 17968  004BBA  D03B               	goto	l1924
 17969  004BBC                     u12760:
 17970                           
 17971                           ; BSR set to: 0
 17972                           ;usb_device_cdc.c: 493: {
 17973                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17974                           
 17975                           ; BSR set to: 0
 17976  004BBC  EE20 F001          	lfsr	2,1
 17977  004BC0  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17978  004BC2  26D9               	addwf	fsr2l,f,c
 17979  004BC4  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17980  004BC6  22DA               	addwfc	fsr2h,f,c
 17981  004BC8  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17982  004BCA  5CDE               	subwf	postinc2,w,c
 17983  004BCC  B0D8               	btfsc	status,0,c
 17984  004BCE  D008               	goto	l1927
 17985                           
 17986                           ; BSR set to: 0
 17987                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17988  004BD0  EE20 F001          	lfsr	2,1
 17989  004BD4  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17990  004BD6  26D9               	addwf	fsr2l,f,c
 17991  004BD8  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17992  004BDA  22DA               	addwfc	fsr2h,f,c
 17993  004BDC  50DF               	movf	indf2,w,c
 17994  004BDE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17995  004BE0                     l1927:
 17996                           
 17997                           ; BSR set to: 0
 17998                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17999                           
 18000                           ; BSR set to: 0
 18001  004BE0  0E00               	movlw	0
 18002  004BE2  6FC7               	movwf	_cdc_rx_len& (0+255),b
 18003  004BE4  D013               	goto	l1928
 18004  004BE6                     
 18005                           ; BSR set to: 0
 18006                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18007                           
 18008                           ; BSR set to: 0
 18009  004BE6  51C7               	movf	_cdc_rx_len& (0+255),w,b
 18010  004BE8  0D01               	mullw	1
 18011  004BEA  0E00               	movlw	low _cdc_data_rx
 18012  004BEC  24F3               	addwf	prodl,w,c
 18013  004BEE  6ED9               	movwf	fsr2l,c
 18014  004BF0  0E05               	movlw	high _cdc_data_rx
 18015  004BF2  20F4               	addwfc	prodh,w,c
 18016  004BF4  6EDA               	movwf	fsr2h,c
 18017  004BF6  51C7               	movf	_cdc_rx_len& (0+255),w,b
 18018  004BF8  0D01               	mullw	1
 18019  004BFA  50F3               	movf	prodl,w,c
 18020  004BFC  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18021  004BFE  6EE1               	movwf	fsr1l,c
 18022  004C00  50F4               	movf	prodh,w,c
 18023  004C02  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18024  004C04  6EE2               	movwf	fsr1h,c
 18025  004C06  CFDF FFE7          	movff	indf2,indf1
 18026                           
 18027                           ; BSR set to: 0
 18028  004C0A  2BC7               	incf	_cdc_rx_len& (0+255),f,b
 18029  004C0C                     l1928:
 18030                           
 18031                           ; BSR set to: 0
 18032                           
 18033                           ; BSR set to: 0
 18034  004C0C  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18035  004C0E  5DC7               	subwf	_cdc_rx_len& (0+255),w,b
 18036  004C10  A0D8               	btfss	status,0,c
 18037  004C12  D7E9               	goto	l1929
 18038                           
 18039                           ; BSR set to: 0
 18040                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18041                           
 18042                           ; BSR set to: 0
 18043  004C14  0E00               	movlw	0
 18044  004C16  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18045  004C18  0E00               	movlw	low _cdc_data_rx
 18046  004C1A  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18047  004C1C  0E05               	movlw	high _cdc_data_rx
 18048  004C1E  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18049  004C20  0E40               	movlw	64
 18050  004C22  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18051  004C24  0E02               	movlw	2
 18052  004C26  ECF4  F020         	call	_USBTransferOnePacket
 18053  004C2A  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18054  004C2E  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18055  004C32                     l1924:
 18056                           
 18057                           ;usb_device_cdc.c: 513: }
 18058                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18059  004C32  0100               	movlb	0	; () banked
 18060  004C34  51C7               	movf	_cdc_rx_len& (0+255),w,b
 18061  004C36  0012               	return	
 18062  004C38                     __end_of_getsUSBUSART:
 18063                           	opt stack 0
 18064                           tosu	equ	0xFFF
 18065                           tosh	equ	0xFFE
 18066                           tosl	equ	0xFFD
 18067                           pclath	equ	0xFFA
 18068                           tblptru	equ	0xFF8
 18069                           tblptrh	equ	0xFF7
 18070                           tblptrl	equ	0xFF6
 18071                           tablat	equ	0xFF5
 18072                           prodh	equ	0xFF4
 18073                           prodl	equ	0xFF3
 18074                           intcon	equ	0xFF2
 18075                           intcon2	equ	0xFF1
 18076                           intcon3	equ	0xFF0
 18077                           indf0	equ	0xFEF
 18078                           postinc0	equ	0xFEE
 18079                           plusw0	equ	0xFEB
 18080                           fsr0h	equ	0xFEA
 18081                           fsr0l	equ	0xFE9
 18082                           wreg	equ	0xFE8
 18083                           indf1	equ	0xFE7
 18084                           postinc1	equ	0xFE6
 18085                           postdec1	equ	0xFE5
 18086                           fsr1h	equ	0xFE2
 18087                           fsr1l	equ	0xFE1
 18088                           indf2	equ	0xFDF
 18089                           postinc2	equ	0xFDE
 18090                           postdec2	equ	0xFDD
 18091                           plusw2	equ	0xFDB
 18092                           fsr2h	equ	0xFDA
 18093                           fsr2l	equ	0xFD9
 18094                           status	equ	0xFD8
 18095                           
 18096 ;; *************** function _USBTransferOnePacket *****************
 18097 ;; Defined at:
 18098 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18099 ;; Parameters:    Size  Location     Type
 18100 ;;  ep              1    wreg     unsigned char 
 18101 ;;  dir             1   29[BANK0 ] unsigned char 
 18102 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18103 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18104 ;;  len             1   32[BANK0 ] unsigned char 
 18105 ;; Auto vars:     Size  Location     Type
 18106 ;;  ep              1   33[BANK0 ] unsigned char 
 18107 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18108 ;;		 -> NULL(0), BDT(48), 
 18109 ;; Return value:  Size  Location     Type
 18110 ;;                  2   29[BANK0 ] PTR void 
 18111 ;; Registers used:
 18112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18113 ;; Tracked objects:
 18114 ;;		On entry : 0/0
 18115 ;;		On exit  : 0/0
 18116 ;;		Unchanged: 0/0
 18117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18118 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18119 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18121 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18122 ;;Total ram usage:        7 bytes
 18123 ;; Hardware stack levels used:    1
 18124 ;; Hardware stack levels required when called:   11
 18125 ;; This function calls:
 18126 ;;		Nothing
 18127 ;; This function is called by:
 18128 ;;		_CDCInitEP
 18129 ;;		_getsUSBUSART
 18130 ;;		_CDCTxService
 18131 ;;		_USBCDCEventHandler
 18132 ;; This function uses a non-reentrant model
 18133 ;;
 18134                           
 18135                           	psect	text75
 18136  0041E8                     __ptext75:
 18137                           	opt stack 0
 18138  0041E8                     _USBTransferOnePacket:
 18139                           	opt stack 13
 18140                           
 18141                           ; BSR set to: 0
 18142                           ;incstack = 0
 18143                           ;USBTransferOnePacket@ep stored from wreg
 18144  0041E8  0100               	movlb	0	; () banked
 18145  0041EA  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18146                           
 18147                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18148                           ;usb_device.c: 1018: if(dir != 0)
 18149  0041EC  0100               	movlb	0	; () banked
 18150  0041EE  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18151  0041F0  B4D8               	btfsc	status,2,c
 18152  0041F2  D007               	goto	l1648
 18153                           
 18154                           ; BSR set to: 0
 18155                           ;usb_device.c: 1019: {
 18156                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18157  0041F4  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18158  0041F6  0D02               	mullw	2
 18159  0041F8  0EB6               	movlw	low _pBDTEntryIn
 18160  0041FA  24F3               	addwf	prodl,w,c
 18161  0041FC  6ED9               	movwf	fsr2l,c
 18162  0041FE  0E00               	movlw	high _pBDTEntryIn
 18163  004200  D006               	goto	L16
 18164  004202                     l1648:
 18165                           
 18166                           ; BSR set to: 0
 18167                           ;usb_device.c: 1023: else
 18168                           ;usb_device.c: 1024: {
 18169                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18170                           
 18171                           ; BSR set to: 0
 18172  004202  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18173  004204  0D02               	mullw	2
 18174  004206  0E06               	movlw	low _pBDTEntryOut
 18175  004208  24F3               	addwf	prodl,w,c
 18176  00420A  6ED9               	movwf	fsr2l,c
 18177  00420C  0E03               	movlw	high _pBDTEntryOut
 18178  00420E                     L16:
 18179  00420E  20F4               	addwfc	prodh,w,c
 18180  004210  6EDA               	movwf	fsr2h,c
 18181  004212  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18182  004216  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18183                           
 18184                           ; BSR set to: 0
 18185                           ;usb_device.c: 1027: }
 18186                           ;usb_device.c: 1031: if(handle == 0)
 18187                           
 18188                           ; BSR set to: 0
 18189  00421A  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18190  00421C  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18191  00421E  A4D8               	btfss	status,2,c
 18192  004220  D005               	goto	l1650
 18193                           
 18194                           ; BSR set to: 0
 18195                           ;usb_device.c: 1032: {
 18196                           ;usb_device.c: 1033: return 0;
 18197  004222  0E00               	movlw	0
 18198  004224  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18199  004226  0E00               	movlw	0
 18200  004228  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18201                           
 18202                           ; BSR set to: 0
 18203  00422A  0012               	return	
 18204  00422C                     l1650:
 18205                           
 18206                           ; BSR set to: 0
 18207                           ;usb_device.c: 1034: }
 18208                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18209                           
 18210                           ; BSR set to: 0
 18211  00422C  EE20 F002          	lfsr	2,2
 18212  004230  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18213  004232  26D9               	addwf	fsr2l,f,c
 18214  004234  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18215  004236  22DA               	addwfc	fsr2h,f,c
 18216  004238  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18217  00423C  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18218                           
 18219                           ;usb_device.c: 1048: handle->CNT = len;
 18220  004240  EE20 F001          	lfsr	2,1
 18221  004244  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18222  004246  26D9               	addwf	fsr2l,f,c
 18223  004248  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18224  00424A  22DA               	addwfc	fsr2h,f,c
 18225  00424C  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18226                           
 18227                           ; BSR set to: 0
 18228                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18229  004250  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18230  004254  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18231  004258  0E40               	movlw	64
 18232  00425A  16DF               	andwf	indf2,f,c
 18233                           
 18234                           ; BSR set to: 0
 18235                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18236  00425C  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18237  004260  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18238  004264  0E00               	movlw	0
 18239  004266  86DB               	bsf	plusw2,3,c
 18240                           
 18241                           ; BSR set to: 0
 18242                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18243  004268  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18244  00426C  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18245  004270  0E00               	movlw	0
 18246  004272  8EDB               	bsf	plusw2,7,c
 18247                           
 18248                           ; BSR set to: 0
 18249                           ;usb_device.c: 1054: if(dir != 0)
 18250  004274  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18251  004276  B4D8               	btfsc	status,2,c
 18252  004278  D007               	goto	l1652
 18253                           
 18254                           ; BSR set to: 0
 18255                           ;usb_device.c: 1055: {
 18256                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18257  00427A  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18258  00427C  0D02               	mullw	2
 18259  00427E  0EB6               	movlw	low _pBDTEntryIn
 18260  004280  24F3               	addwf	prodl,w,c
 18261  004282  6ED9               	movwf	fsr2l,c
 18262  004284  0E00               	movlw	high _pBDTEntryIn
 18263  004286  D006               	goto	L17
 18264  004288                     l1652:
 18265                           
 18266                           ; BSR set to: 0
 18267                           ;usb_device.c: 1059: else
 18268                           ;usb_device.c: 1060: {
 18269                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18270                           
 18271                           ; BSR set to: 0
 18272  004288  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18273  00428A  0D02               	mullw	2
 18274  00428C  0E06               	movlw	low _pBDTEntryOut
 18275  00428E  24F3               	addwf	prodl,w,c
 18276  004290  6ED9               	movwf	fsr2l,c
 18277  004292  0E03               	movlw	high _pBDTEntryOut
 18278  004294                     L17:
 18279  004294  20F4               	addwfc	prodh,w,c
 18280  004296  6EDA               	movwf	fsr2h,c
 18281  004298  0E04               	movlw	4
 18282  00429A  1ADF               	xorwf	indf2,f,c
 18283                           
 18284                           ; BSR set to: 0
 18285                           ;usb_device.c: 1063: }
 18286                           ;usb_device.c: 1064: return (void*)handle;
 18287                           
 18288                           ; BSR set to: 0
 18289  00429C  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18290  0042A0  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18291  0042A4  0012               	return	
 18292  0042A6                     __end_of_USBTransferOnePacket:
 18293                           	opt stack 0
 18294                           tosu	equ	0xFFF
 18295                           tosh	equ	0xFFE
 18296                           tosl	equ	0xFFD
 18297                           pclath	equ	0xFFA
 18298                           tblptru	equ	0xFF8
 18299                           tblptrh	equ	0xFF7
 18300                           tblptrl	equ	0xFF6
 18301                           tablat	equ	0xFF5
 18302                           prodh	equ	0xFF4
 18303                           prodl	equ	0xFF3
 18304                           intcon	equ	0xFF2
 18305                           intcon2	equ	0xFF1
 18306                           intcon3	equ	0xFF0
 18307                           indf0	equ	0xFEF
 18308                           postinc0	equ	0xFEE
 18309                           plusw0	equ	0xFEB
 18310                           fsr0h	equ	0xFEA
 18311                           fsr0l	equ	0xFE9
 18312                           wreg	equ	0xFE8
 18313                           indf1	equ	0xFE7
 18314                           postinc1	equ	0xFE6
 18315                           postdec1	equ	0xFE5
 18316                           fsr1h	equ	0xFE2
 18317                           fsr1l	equ	0xFE1
 18318                           indf2	equ	0xFDF
 18319                           postinc2	equ	0xFDE
 18320                           postdec2	equ	0xFDD
 18321                           plusw2	equ	0xFDB
 18322                           fsr2h	equ	0xFDA
 18323                           fsr2l	equ	0xFD9
 18324                           status	equ	0xFD8
 18325                           
 18326 ;; *************** function _atoi *****************
 18327 ;; Defined at:
 18328 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18329 ;; Parameters:    Size  Location     Type
 18330 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18331 ;;		 -> Terminal@Len(4), 
 18332 ;; Auto vars:     Size  Location     Type
 18333 ;;  a               2   40[BANK0 ] int 
 18334 ;;  sign            1   39[BANK0 ] unsigned char 
 18335 ;; Return value:  Size  Location     Type
 18336 ;;                  2   35[BANK0 ] int 
 18337 ;; Registers used:
 18338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18339 ;; Tracked objects:
 18340 ;;		On entry : 0/0
 18341 ;;		On exit  : 0/0
 18342 ;;		Unchanged: 0/0
 18343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18345 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18346 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18347 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18348 ;;Total ram usage:        7 bytes
 18349 ;; Hardware stack levels used:    1
 18350 ;; Hardware stack levels required when called:   12
 18351 ;; This function calls:
 18352 ;;		___wmul
 18353 ;;		_isdigit
 18354 ;; This function is called by:
 18355 ;;		_Terminal
 18356 ;; This function uses a non-reentrant model
 18357 ;;
 18358                           
 18359                           	psect	text76
 18360  003796                     __ptext76:
 18361                           	opt stack 0
 18362  003796                     _atoi:
 18363                           	opt stack 13
 18364                           
 18365                           ; BSR set to: 0
 18366                           ;incstack = 0
 18367  003796  D003               	goto	l3056
 18368  003798  0100               	movlb	0	; () banked
 18369  00379A  4B83               	infsnz	atoi@s& (0+255),f,b
 18370  00379C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18371  00379E                     l3056:
 18372                           
 18373                           ; BSR set to: 0
 18374  00379E  C083  FFD9         	movff	atoi@s,fsr2l
 18375  0037A2  C084  FFDA         	movff	atoi@s+1,fsr2h
 18376  0037A6  0E20               	movlw	32
 18377  0037A8  18DE               	xorwf	postinc2,w,c
 18378  0037AA  B4D8               	btfsc	status,2,c
 18379  0037AC  D7F5               	goto	l3057
 18380  0037AE  C083  FFD9         	movff	atoi@s,fsr2l
 18381  0037B2  C084  FFDA         	movff	atoi@s+1,fsr2h
 18382  0037B6  0E09               	movlw	9
 18383  0037B8  18DE               	xorwf	postinc2,w,c
 18384  0037BA  B4D8               	btfsc	status,2,c
 18385  0037BC  D7ED               	goto	l3057
 18386  0037BE  0E00               	movlw	0
 18387  0037C0  0100               	movlb	0	; () banked
 18388  0037C2  6F89               	movwf	(atoi@a+1)& (0+255),b
 18389  0037C4  0E00               	movlw	0
 18390  0037C6  6F88               	movwf	atoi@a& (0+255),b
 18391  0037C8  0E00               	movlw	0
 18392  0037CA  6F87               	movwf	atoi@sign& (0+255),b
 18393                           
 18394                           ; BSR set to: 0
 18395  0037CC  C083  FFD9         	movff	atoi@s,fsr2l
 18396  0037D0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18397  0037D4  0E2D               	movlw	45
 18398  0037D6  18DE               	xorwf	postinc2,w,c
 18399  0037D8  A4D8               	btfss	status,2,c
 18400  0037DA  D002               	goto	l3059
 18401                           
 18402                           ; BSR set to: 0
 18403  0037DC  2B87               	incf	atoi@sign& (0+255),f,b
 18404  0037DE  D026               	goto	l13941
 18405  0037E0                     l3059:
 18406                           
 18407                           ; BSR set to: 0
 18408                           
 18409                           ; BSR set to: 0
 18410  0037E0  C083  FFD9         	movff	atoi@s,fsr2l
 18411  0037E4  C084  FFDA         	movff	atoi@s+1,fsr2h
 18412  0037E8  0E2B               	movlw	43
 18413  0037EA  18DE               	xorwf	postinc2,w,c
 18414  0037EC  A4D8               	btfss	status,2,c
 18415  0037EE  D020               	goto	l3062
 18416  0037F0  D01D               	goto	l13941
 18417  0037F2                     
 18418                           ; BSR set to: 0
 18419  0037F2  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18420  0037F6  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18421  0037FA  0E00               	movlw	0
 18422  0037FC  0100               	movlb	0	; () banked
 18423  0037FE  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18424  003800  0E0A               	movlw	10
 18425  003802  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18426  003804  ECF2  F032         	call	___wmul	;wreg free
 18427  003808  C083  FFD9         	movff	atoi@s,fsr2l
 18428  00380C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18429  003810  50DF               	movf	indf2,w,c
 18430  003812  0100               	movlb	0	; () banked
 18431  003814  6F85               	movwf	??_atoi& (0+255),b
 18432  003816  6B86               	clrf	(??_atoi+1)& (0+255),b
 18433  003818  517D               	movf	?___wmul& (0+255),w,b
 18434  00381A  2785               	addwf	??_atoi& (0+255),f,b
 18435  00381C  517E               	movf	(?___wmul+1)& (0+255),w,b
 18436  00381E  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18437  003820  0ED0               	movlw	208
 18438  003822  2585               	addwf	??_atoi& (0+255),w,b
 18439  003824  6F88               	movwf	atoi@a& (0+255),b
 18440  003826  0EFF               	movlw	255
 18441  003828  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18442  00382A  6F89               	movwf	(atoi@a+1)& (0+255),b
 18443  00382C                     l13941:
 18444                           
 18445                           ; BSR set to: 0
 18446  00382C  4B83               	infsnz	atoi@s& (0+255),f,b
 18447  00382E  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18448  003830                     l3062:
 18449                           
 18450                           ; BSR set to: 0
 18451                           
 18452                           ; BSR set to: 0
 18453  003830  C083  FFD9         	movff	atoi@s,fsr2l
 18454  003834  C084  FFDA         	movff	atoi@s+1,fsr2h
 18455  003838  50DF               	movf	indf2,w,c
 18456  00383A  ECA5  F033         	call	_isdigit
 18457  00383E  B0D8               	btfsc	status,0,c
 18458  003840  D7D8               	goto	l3063
 18459  003842  0100               	movlb	0	; () banked
 18460  003844  5187               	movf	atoi@sign& (0+255),w,b
 18461  003846  B4D8               	btfsc	status,2,c
 18462  003848  D00D               	goto	l3065
 18463                           
 18464                           ; BSR set to: 0
 18465  00384A  C088  F085         	movff	atoi@a,??_atoi
 18466  00384E  C089  F086         	movff	atoi@a+1,??_atoi+1
 18467  003852  1F85               	comf	??_atoi& (0+255),f,b
 18468  003854  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18469  003856  4B85               	infsnz	??_atoi& (0+255),f,b
 18470  003858  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18471  00385A  C085  F083         	movff	??_atoi,?_atoi
 18472  00385E  C086  F084         	movff	??_atoi+1,?_atoi+1
 18473  003862  0012               	return	
 18474  003864                     l3065:
 18475                           
 18476                           ; BSR set to: 0
 18477  003864  C088  F083         	movff	atoi@a,?_atoi
 18478  003868  C089  F084         	movff	atoi@a+1,?_atoi+1
 18479                           
 18480                           ; BSR set to: 0
 18481  00386C  0012               	return		;funcret
 18482  00386E                     __end_of_atoi:
 18483                           	opt stack 0
 18484                           tosu	equ	0xFFF
 18485                           tosh	equ	0xFFE
 18486                           tosl	equ	0xFFD
 18487                           pclath	equ	0xFFA
 18488                           tblptru	equ	0xFF8
 18489                           tblptrh	equ	0xFF7
 18490                           tblptrl	equ	0xFF6
 18491                           tablat	equ	0xFF5
 18492                           prodh	equ	0xFF4
 18493                           prodl	equ	0xFF3
 18494                           intcon	equ	0xFF2
 18495                           intcon2	equ	0xFF1
 18496                           intcon3	equ	0xFF0
 18497                           indf0	equ	0xFEF
 18498                           postinc0	equ	0xFEE
 18499                           plusw0	equ	0xFEB
 18500                           fsr0h	equ	0xFEA
 18501                           fsr0l	equ	0xFE9
 18502                           wreg	equ	0xFE8
 18503                           indf1	equ	0xFE7
 18504                           postinc1	equ	0xFE6
 18505                           postdec1	equ	0xFE5
 18506                           fsr1h	equ	0xFE2
 18507                           fsr1l	equ	0xFE1
 18508                           indf2	equ	0xFDF
 18509                           postinc2	equ	0xFDE
 18510                           postdec2	equ	0xFDD
 18511                           plusw2	equ	0xFDB
 18512                           fsr2h	equ	0xFDA
 18513                           fsr2l	equ	0xFD9
 18514                           status	equ	0xFD8
 18515                           
 18516 ;; *************** function _isdigit *****************
 18517 ;; Defined at:
 18518 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18519 ;; Parameters:    Size  Location     Type
 18520 ;;  c               1    wreg     unsigned char 
 18521 ;; Auto vars:     Size  Location     Type
 18522 ;;  c               1   31[BANK0 ] unsigned char 
 18523 ;; Return value:  Size  Location     Type
 18524 ;;		None               void
 18525 ;; Registers used:
 18526 ;;		wreg, status,2, status,0
 18527 ;; Tracked objects:
 18528 ;;		On entry : 0/0
 18529 ;;		On exit  : 0/0
 18530 ;;		Unchanged: 0/0
 18531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18533 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18534 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18535 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18536 ;;Total ram usage:        3 bytes
 18537 ;; Hardware stack levels used:    1
 18538 ;; Hardware stack levels required when called:   11
 18539 ;; This function calls:
 18540 ;;		Nothing
 18541 ;; This function is called by:
 18542 ;;		_atoi
 18543 ;;		_strtol
 18544 ;;		_xtoi
 18545 ;;		_isxdigit
 18546 ;; This function uses a non-reentrant model
 18547 ;;
 18548                           
 18549                           	psect	text77
 18550  00674A                     __ptext77:
 18551                           	opt stack 0
 18552  00674A                     _isdigit:
 18553                           	opt stack 12
 18554                           
 18555                           ; BSR set to: 0
 18556                           ;incstack = 0
 18557                           ;isdigit@c stored from wreg
 18558  00674A  0100               	movlb	0	; () banked
 18559  00674C  6F7F               	movwf	isdigit@c& (0+255),b
 18560  00674E  0E00               	movlw	0
 18561  006750  0100               	movlb	0	; () banked
 18562  006752  6F7E               	movwf	_isdigit$6405& (0+255),b
 18563                           
 18564                           ; BSR set to: 0
 18565  006754  0E3A               	movlw	58
 18566  006756  617F               	cpfslt	isdigit@c& (0+255),b
 18567  006758  D005               	goto	l3237
 18568                           
 18569                           ; BSR set to: 0
 18570  00675A  0E2F               	movlw	47
 18571  00675C  657F               	cpfsgt	isdigit@c& (0+255),b
 18572  00675E  D002               	goto	l3237
 18573                           
 18574                           ; BSR set to: 0
 18575  006760  0E01               	movlw	1
 18576  006762  6F7E               	movwf	_isdigit$6405& (0+255),b
 18577  006764                     l3237:
 18578                           
 18579                           ; BSR set to: 0
 18580                           
 18581                           ; BSR set to: 0
 18582  006764  C07E  F07D         	movff	_isdigit$6405,??_isdigit
 18583  006768  317D               	rrcf	??_isdigit& (0+255),w,b
 18584  00676A  0012               	return	
 18585  00676C                     __end_of_isdigit:
 18586                           	opt stack 0
 18587                           tosu	equ	0xFFF
 18588                           tosh	equ	0xFFE
 18589                           tosl	equ	0xFFD
 18590                           pclath	equ	0xFFA
 18591                           tblptru	equ	0xFF8
 18592                           tblptrh	equ	0xFF7
 18593                           tblptrl	equ	0xFF6
 18594                           tablat	equ	0xFF5
 18595                           prodh	equ	0xFF4
 18596                           prodl	equ	0xFF3
 18597                           intcon	equ	0xFF2
 18598                           intcon2	equ	0xFF1
 18599                           intcon3	equ	0xFF0
 18600                           indf0	equ	0xFEF
 18601                           postinc0	equ	0xFEE
 18602                           plusw0	equ	0xFEB
 18603                           fsr0h	equ	0xFEA
 18604                           fsr0l	equ	0xFE9
 18605                           wreg	equ	0xFE8
 18606                           indf1	equ	0xFE7
 18607                           postinc1	equ	0xFE6
 18608                           postdec1	equ	0xFE5
 18609                           fsr1h	equ	0xFE2
 18610                           fsr1l	equ	0xFE1
 18611                           indf2	equ	0xFDF
 18612                           postinc2	equ	0xFDE
 18613                           postdec2	equ	0xFDD
 18614                           plusw2	equ	0xFDB
 18615                           fsr2h	equ	0xFDA
 18616                           fsr2l	equ	0xFD9
 18617                           status	equ	0xFD8
 18618                           
 18619 ;; *************** function _Rtcm_SetRtccDate *****************
 18620 ;; Defined at:
 18621 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18622 ;; Parameters:    Size  Location     Type
 18623 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18624 ;; Auto vars:     Size  Location     Type
 18625 ;;		None
 18626 ;; Return value:  Size  Location     Type
 18627 ;;                  1    wreg      void 
 18628 ;; Registers used:
 18629 ;;		wreg, status,2, status,0, cstack
 18630 ;; Tracked objects:
 18631 ;;		On entry : 0/0
 18632 ;;		On exit  : 0/0
 18633 ;;		Unchanged: 0/0
 18634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18635 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18638 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18639 ;;Total ram usage:        8 bytes
 18640 ;; Hardware stack levels used:    1
 18641 ;; Hardware stack levels required when called:   13
 18642 ;; This function calls:
 18643 ;;		_Rtcc_LockRtc
 18644 ;;		_Rtcc_SetRtccValue
 18645 ;;		_Rtcc_UnlockRtc
 18646 ;; This function is called by:
 18647 ;;		_Rtcm_MainTask
 18648 ;; This function uses a non-reentrant model
 18649 ;;
 18650                           
 18651                           	psect	text78
 18652  005A06                     __ptext78:
 18653                           	opt stack 0
 18654  005A06                     _Rtcm_SetRtccDate:
 18655                           	opt stack 14
 18656                           
 18657                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18658                           
 18659                           ; BSR set to: 0
 18660                           ;incstack = 0
 18661  005A06  ECE9  F034         	call	_Rtcc_UnlockRtc	;wreg free
 18662                           
 18663                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18664  005A0A  0100               	movlb	0	; () banked
 18665  005A0C  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18666  005A0E  0F30               	addlw	48
 18667  005A10  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18668  005A12  0E00               	movlw	0
 18669  005A14  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18670                           
 18671                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18672  005A18  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18673  005A1C  0E01               	movlw	1
 18674  005A1E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18675                           
 18676                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18677  005A22  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18678  005A26  0E02               	movlw	2
 18679  005A28  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18680                           
 18681                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18682  005A2C  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18683  005A30  0E03               	movlw	3
 18684  005A32  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18685                           
 18686                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18687  005A36  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18688  005A3A  0E04               	movlw	4
 18689  005A3C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18690                           
 18691                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18692  005A40  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18693  005A44  0E05               	movlw	5
 18694  005A46  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18695                           
 18696                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18697  005A4A  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18698  005A4E  0E06               	movlw	6
 18699  005A50  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18700                           
 18701                           ;rtcm.c: 191: Rtcc_LockRtc();
 18702  005A54  ECF1  F034         	call	_Rtcc_LockRtc	;wreg free
 18703  005A58  0012               	return		;funcret
 18704  005A5A                     __end_of_Rtcm_SetRtccDate:
 18705                           	opt stack 0
 18706                           tosu	equ	0xFFF
 18707                           tosh	equ	0xFFE
 18708                           tosl	equ	0xFFD
 18709                           pclath	equ	0xFFA
 18710                           tblptru	equ	0xFF8
 18711                           tblptrh	equ	0xFF7
 18712                           tblptrl	equ	0xFF6
 18713                           tablat	equ	0xFF5
 18714                           prodh	equ	0xFF4
 18715                           prodl	equ	0xFF3
 18716                           intcon	equ	0xFF2
 18717                           intcon2	equ	0xFF1
 18718                           intcon3	equ	0xFF0
 18719                           indf0	equ	0xFEF
 18720                           postinc0	equ	0xFEE
 18721                           plusw0	equ	0xFEB
 18722                           fsr0h	equ	0xFEA
 18723                           fsr0l	equ	0xFE9
 18724                           wreg	equ	0xFE8
 18725                           indf1	equ	0xFE7
 18726                           postinc1	equ	0xFE6
 18727                           postdec1	equ	0xFE5
 18728                           fsr1h	equ	0xFE2
 18729                           fsr1l	equ	0xFE1
 18730                           indf2	equ	0xFDF
 18731                           postinc2	equ	0xFDE
 18732                           postdec2	equ	0xFDD
 18733                           plusw2	equ	0xFDB
 18734                           fsr2h	equ	0xFDA
 18735                           fsr2l	equ	0xFD9
 18736                           status	equ	0xFD8
 18737                           
 18738 ;; *************** function _Rtcc_UnlockRtc *****************
 18739 ;; Defined at:
 18740 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18741 ;; Parameters:    Size  Location     Type
 18742 ;;		None
 18743 ;; Auto vars:     Size  Location     Type
 18744 ;;		None
 18745 ;; Return value:  Size  Location     Type
 18746 ;;                  1    wreg      void 
 18747 ;; Registers used:
 18748 ;;		None
 18749 ;; Tracked objects:
 18750 ;;		On entry : 0/0
 18751 ;;		On exit  : 0/0
 18752 ;;		Unchanged: 0/0
 18753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18758 ;;Total ram usage:        0 bytes
 18759 ;; Hardware stack levels used:    1
 18760 ;; Hardware stack levels required when called:   11
 18761 ;; This function calls:
 18762 ;;		Nothing
 18763 ;; This function is called by:
 18764 ;;		_Rtcm_MainTask
 18765 ;;		_Rtcm_SetRtccDate
 18766 ;;		_Rtcm_SetRtccAlarm
 18767 ;; This function uses a non-reentrant model
 18768 ;;
 18769                           
 18770                           	psect	text79
 18771  0069D2                     __ptext79:
 18772                           	opt stack 0
 18773  0069D2                     _Rtcc_UnlockRtc:
 18774                           	opt stack 15
 18775                           
 18776                           ;incstack = 0
 18777  0069D2  010F               	movlb	15	;# 
 18778  0069D4  0E55               	movlw	85	;# 
 18779  0069D6  6EA7               	movwf	4007,c	;# 
 18780  0069D8  0EAA               	movlw	170	;# 
 18781  0069DA  6EA7               	movwf	4007,c	;# 
 18782                           
 18783                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18784  0069DC  010F               	movlb	15	; () banked
 18785  0069DE  8B3F               	bsf	63,5,b	;volatile
 18786                           
 18787                           ; BSR set to: 15
 18788  0069E0  0012               	return		;funcret
 18789  0069E2                     __end_of_Rtcc_UnlockRtc:
 18790                           	opt stack 0
 18791                           tosu	equ	0xFFF
 18792                           tosh	equ	0xFFE
 18793                           tosl	equ	0xFFD
 18794                           pclath	equ	0xFFA
 18795                           tblptru	equ	0xFF8
 18796                           tblptrh	equ	0xFF7
 18797                           tblptrl	equ	0xFF6
 18798                           tablat	equ	0xFF5
 18799                           prodh	equ	0xFF4
 18800                           prodl	equ	0xFF3
 18801                           intcon	equ	0xFF2
 18802                           intcon2	equ	0xFF1
 18803                           intcon3	equ	0xFF0
 18804                           indf0	equ	0xFEF
 18805                           postinc0	equ	0xFEE
 18806                           plusw0	equ	0xFEB
 18807                           fsr0h	equ	0xFEA
 18808                           fsr0l	equ	0xFE9
 18809                           wreg	equ	0xFE8
 18810                           indf1	equ	0xFE7
 18811                           postinc1	equ	0xFE6
 18812                           postdec1	equ	0xFE5
 18813                           fsr1h	equ	0xFE2
 18814                           fsr1l	equ	0xFE1
 18815                           indf2	equ	0xFDF
 18816                           postinc2	equ	0xFDE
 18817                           postdec2	equ	0xFDD
 18818                           plusw2	equ	0xFDB
 18819                           fsr2h	equ	0xFDA
 18820                           fsr2l	equ	0xFD9
 18821                           status	equ	0xFD8
 18822                           
 18823 ;; *************** function _Rtcc_SetRtccValue *****************
 18824 ;; Defined at:
 18825 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18826 ;; Parameters:    Size  Location     Type
 18827 ;;  RtccPtrVal      1    wreg     enum E7757
 18828 ;;  Value           1   37[BANK0 ] unsigned char 
 18829 ;; Auto vars:     Size  Location     Type
 18830 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18831 ;; Return value:  Size  Location     Type
 18832 ;;                  1    wreg      void 
 18833 ;; Registers used:
 18834 ;;		wreg, status,2, status,0, cstack
 18835 ;; Tracked objects:
 18836 ;;		On entry : 0/0
 18837 ;;		On exit  : 0/0
 18838 ;;		Unchanged: 0/0
 18839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18840 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18843 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18844 ;;Total ram usage:        4 bytes
 18845 ;; Hardware stack levels used:    1
 18846 ;; Hardware stack levels required when called:   12
 18847 ;; This function calls:
 18848 ;;		___awdiv
 18849 ;;		___awmod
 18850 ;; This function is called by:
 18851 ;;		_Rtcm_SetRtccDate
 18852 ;; This function uses a non-reentrant model
 18853 ;;
 18854                           
 18855                           	psect	text80
 18856  0015EE                     __ptext80:
 18857                           	opt stack 0
 18858  0015EE                     _Rtcc_SetRtccValue:
 18859                           	opt stack 14
 18860                           
 18861                           ; BSR set to: 15
 18862                           ;incstack = 0
 18863                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18864  0015EE  0100               	movlb	0	; () banked
 18865  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18866                           
 18867                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18868  0015F2  D0FC               	goto	l441
 18869  0015F4                     l442:
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18873  0015F4  010F               	movlb	15	; () banked
 18874  0015F6  833F               	bsf	63,1,b	;volatile
 18875                           
 18876                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18877  0015F8  813F               	bsf	63,0,b	;volatile
 18878                           
 18879                           ; BSR set to: 15
 18880                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18881  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18882  0015FE  0100               	movlb	0	; () banked
 18883  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18884  001602  0E00               	movlw	0
 18885  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18886  001606  0E0A               	movlw	10
 18887  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18888  00160A  EC8A  F029         	call	___awmod	;wreg free
 18889  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18890  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18891  001616  0E0F               	movlw	15
 18892  001618  0100               	movlb	0	; () banked
 18893  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18894  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18895  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18896  001622  0E00               	movlw	0
 18897  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18898  001626  0E0A               	movlw	10
 18899  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18900  00162A  EC15  F028         	call	___awdiv	;wreg free
 18901  00162E  0100               	movlb	0	; () banked
 18902  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18903  001632  0BF0               	andlw	240
 18904  001634  0BF0               	andlw	240
 18905  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18906  001638  6E98               	movwf	3992,c	;volatile
 18907                           
 18908                           ;rtcc_drv.c: 393: break;
 18909  00163A  0012               	return	
 18910  00163C                     l444:
 18911                           
 18912                           ; BSR set to: 0
 18913                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18914  00163C  010F               	movlb	15	; () banked
 18915  00163E  833F               	bsf	63,1,b	;volatile
 18916                           
 18917                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18918  001640  913F               	bcf	63,0,b	;volatile
 18919                           
 18920                           ; BSR set to: 15
 18921                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18922  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18923  001646  0100               	movlb	0	; () banked
 18924  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18925  00164A  0E00               	movlw	0
 18926  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18927  00164E  0E0A               	movlw	10
 18928  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18929  001652  EC8A  F029         	call	___awmod	;wreg free
 18930  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18931  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18932  00165E  0E0F               	movlw	15
 18933  001660  0100               	movlb	0	; () banked
 18934  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18935  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18936  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18937  00166A  0E00               	movlw	0
 18938  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18939  00166E  0E0A               	movlw	10
 18940  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18941  001672  EC15  F028         	call	___awdiv	;wreg free
 18942  001676  0100               	movlb	0	; () banked
 18943  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18944  00167A  0BF0               	andlw	240
 18945  00167C  0BF0               	andlw	240
 18946  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18947  001680  6E99               	movwf	3993,c	;volatile
 18948                           
 18949                           ;rtcc_drv.c: 401: break;
 18950  001682  0012               	return	
 18951  001684                     l445:
 18952                           
 18953                           ; BSR set to: 0
 18954                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18955  001684  010F               	movlb	15	; () banked
 18956  001686  833F               	bsf	63,1,b	;volatile
 18957                           
 18958                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18959  001688  913F               	bcf	63,0,b	;volatile
 18960                           
 18961                           ; BSR set to: 15
 18962                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18963  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18964  00168E  0100               	movlb	0	; () banked
 18965  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18966  001692  0E00               	movlw	0
 18967  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18968  001696  0E0A               	movlw	10
 18969  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18970  00169A  EC8A  F029         	call	___awmod	;wreg free
 18971  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18972  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18973  0016A6  0E0F               	movlw	15
 18974  0016A8  0100               	movlb	0	; () banked
 18975  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18976  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18977  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18978  0016B2  0E00               	movlw	0
 18979  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18980  0016B6  0E0A               	movlw	10
 18981  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18982  0016BA  EC15  F028         	call	___awdiv	;wreg free
 18983  0016BE  0100               	movlb	0	; () banked
 18984  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18985  0016C2  0BF0               	andlw	240
 18986  0016C4  0BF0               	andlw	240
 18987  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18988  0016C8  6E98               	movwf	3992,c	;volatile
 18989                           
 18990                           ;rtcc_drv.c: 409: break;
 18991  0016CA  0012               	return	
 18992  0016CC                     l446:
 18993                           
 18994                           ; BSR set to: 0
 18995                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18996  0016CC  010F               	movlb	15	; () banked
 18997  0016CE  933F               	bcf	63,1,b	;volatile
 18998                           
 18999                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19000  0016D0  813F               	bsf	63,0,b	;volatile
 19001                           
 19002                           ; BSR set to: 15
 19003                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19004  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19005  0016D6  0100               	movlb	0	; () banked
 19006  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19007  0016DA  0E00               	movlw	0
 19008  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19009  0016DE  0E0A               	movlw	10
 19010  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19011  0016E2  EC8A  F029         	call	___awmod	;wreg free
 19012  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19013  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19014  0016EE  0E0F               	movlw	15
 19015  0016F0  0100               	movlb	0	; () banked
 19016  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19017  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19018  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19019  0016FA  0E00               	movlw	0
 19020  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19021  0016FE  0E0A               	movlw	10
 19022  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19023  001702  EC15  F028         	call	___awdiv	;wreg free
 19024  001706  0100               	movlb	0	; () banked
 19025  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19026  00170A  0BF0               	andlw	240
 19027  00170C  0BF0               	andlw	240
 19028  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19029  001710  6E99               	movwf	3993,c	;volatile
 19030                           
 19031                           ;rtcc_drv.c: 417: break;
 19032  001712  0012               	return	
 19033  001714                     l447:
 19034                           
 19035                           ; BSR set to: 0
 19036                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19037  001714  010F               	movlb	15	; () banked
 19038  001716  933F               	bcf	63,1,b	;volatile
 19039                           
 19040                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19041  001718  813F               	bsf	63,0,b	;volatile
 19042                           
 19043                           ; BSR set to: 15
 19044                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19045  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19046  00171E  0100               	movlb	0	; () banked
 19047  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19048  001722  0E00               	movlw	0
 19049  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19050  001726  0E0A               	movlw	10
 19051  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19052  00172A  EC8A  F029         	call	___awmod	;wreg free
 19053  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19054  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19055  001736  0E0F               	movlw	15
 19056  001738  0100               	movlb	0	; () banked
 19057  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19058  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19059  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19060  001742  0E00               	movlw	0
 19061  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19062  001746  0E0A               	movlw	10
 19063  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19064  00174A  EC15  F028         	call	___awdiv	;wreg free
 19065  00174E  0100               	movlb	0	; () banked
 19066  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19067  001752  0BF0               	andlw	240
 19068  001754  0BF0               	andlw	240
 19069  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19070  001758  6E98               	movwf	3992,c	;volatile
 19071                           
 19072                           ;rtcc_drv.c: 425: break;
 19073  00175A  0012               	return	
 19074  00175C                     l448:
 19075                           
 19076                           ; BSR set to: 0
 19077                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19078  00175C  010F               	movlb	15	; () banked
 19079  00175E  933F               	bcf	63,1,b	;volatile
 19080                           
 19081                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19082  001760  913F               	bcf	63,0,b	;volatile
 19083                           
 19084                           ; BSR set to: 15
 19085                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19086  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19087  001766  0100               	movlb	0	; () banked
 19088  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19089  00176A  0E00               	movlw	0
 19090  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19091  00176E  0E0A               	movlw	10
 19092  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19093  001772  EC8A  F029         	call	___awmod	;wreg free
 19094  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19095  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19096  00177E  0E0F               	movlw	15
 19097  001780  0100               	movlb	0	; () banked
 19098  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19099  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19100  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19101  00178A  0E00               	movlw	0
 19102  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19103  00178E  0E0A               	movlw	10
 19104  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19105  001792  EC15  F028         	call	___awdiv	;wreg free
 19106  001796  0100               	movlb	0	; () banked
 19107  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19108  00179A  0BF0               	andlw	240
 19109  00179C  0BF0               	andlw	240
 19110  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19111  0017A0  6E99               	movwf	3993,c	;volatile
 19112                           
 19113                           ;rtcc_drv.c: 433: break;
 19114  0017A2  0012               	return	
 19115  0017A4                     l449:
 19116                           
 19117                           ; BSR set to: 0
 19118                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19119  0017A4  010F               	movlb	15	; () banked
 19120  0017A6  933F               	bcf	63,1,b	;volatile
 19121                           
 19122                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19123  0017A8  913F               	bcf	63,0,b	;volatile
 19124                           
 19125                           ; BSR set to: 15
 19126                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19127  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19128  0017AE  0100               	movlb	0	; () banked
 19129  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19130  0017B2  0E00               	movlw	0
 19131  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19132  0017B6  0E0A               	movlw	10
 19133  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19134  0017BA  EC8A  F029         	call	___awmod	;wreg free
 19135  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19136  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19137  0017C6  0E0F               	movlw	15
 19138  0017C8  0100               	movlb	0	; () banked
 19139  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19140  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19141  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19142  0017D2  0E00               	movlw	0
 19143  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19144  0017D6  0E0A               	movlw	10
 19145  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19146  0017DA  EC15  F028         	call	___awdiv	;wreg free
 19147  0017DE  0100               	movlb	0	; () banked
 19148  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19149  0017E2  0BF0               	andlw	240
 19150  0017E4  0BF0               	andlw	240
 19151  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19152  0017E8  6E98               	movwf	3992,c	;volatile
 19153                           
 19154                           ; BSR set to: 0
 19155                           ;rtcc_drv.c: 445: }
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;rtcc_drv.c: 444: break;
 19159                           
 19160                           ;rtcc_drv.c: 443: default:
 19161                           
 19162                           ;rtcc_drv.c: 441: break;
 19163  0017EA  0012               	return	
 19164  0017EC                     l441:
 19165                           
 19166                           ; BSR set to: 0
 19167  0017EC  0100               	movlb	0	; () banked
 19168  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19169                           
 19170                           ; Switch size 1, requested type "space"
 19171                           ; Number of cases is 7, Range of values is 0 to 6
 19172                           ; switch strategies available:
 19173                           ; Name         Instructions Cycles
 19174                           ; simple_byte           22    12 (average)
 19175                           ;	Chosen strategy is simple_byte
 19176  0017F0  0A00               	xorlw	0	; case 0
 19177  0017F2  B4D8               	btfsc	status,2,c
 19178  0017F4  D6FF               	goto	l442
 19179  0017F6  0A01               	xorlw	1	; case 1
 19180  0017F8  B4D8               	btfsc	status,2,c
 19181  0017FA  D720               	goto	l444
 19182  0017FC  0A03               	xorlw	3	; case 2
 19183  0017FE  B4D8               	btfsc	status,2,c
 19184  001800  D741               	goto	l445
 19185  001802  0A01               	xorlw	1	; case 3
 19186  001804  B4D8               	btfsc	status,2,c
 19187  001806  D762               	goto	l446
 19188  001808  0A07               	xorlw	7	; case 4
 19189  00180A  B4D8               	btfsc	status,2,c
 19190  00180C  D783               	goto	l447
 19191  00180E  0A01               	xorlw	1	; case 5
 19192  001810  B4D8               	btfsc	status,2,c
 19193  001812  D7A4               	goto	l448
 19194  001814  0A03               	xorlw	3	; case 6
 19195  001816  A4D8               	btfss	status,2,c
 19196  001818  0012               	return	
 19197  00181A  D7C4               	goto	l449
 19198  00181C                     __end_of_Rtcc_SetRtccValue:
 19199                           	opt stack 0
 19200                           tosu	equ	0xFFF
 19201                           tosh	equ	0xFFE
 19202                           tosl	equ	0xFFD
 19203                           pclath	equ	0xFFA
 19204                           tblptru	equ	0xFF8
 19205                           tblptrh	equ	0xFF7
 19206                           tblptrl	equ	0xFF6
 19207                           tablat	equ	0xFF5
 19208                           prodh	equ	0xFF4
 19209                           prodl	equ	0xFF3
 19210                           intcon	equ	0xFF2
 19211                           intcon2	equ	0xFF1
 19212                           intcon3	equ	0xFF0
 19213                           indf0	equ	0xFEF
 19214                           postinc0	equ	0xFEE
 19215                           plusw0	equ	0xFEB
 19216                           fsr0h	equ	0xFEA
 19217                           fsr0l	equ	0xFE9
 19218                           wreg	equ	0xFE8
 19219                           indf1	equ	0xFE7
 19220                           postinc1	equ	0xFE6
 19221                           postdec1	equ	0xFE5
 19222                           fsr1h	equ	0xFE2
 19223                           fsr1l	equ	0xFE1
 19224                           indf2	equ	0xFDF
 19225                           postinc2	equ	0xFDE
 19226                           postdec2	equ	0xFDD
 19227                           plusw2	equ	0xFDB
 19228                           fsr2h	equ	0xFDA
 19229                           fsr2l	equ	0xFD9
 19230                           status	equ	0xFD8
 19231                           
 19232 ;; *************** function ___awmod *****************
 19233 ;; Defined at:
 19234 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19235 ;; Parameters:    Size  Location     Type
 19236 ;;  dividend        2   29[BANK0 ] int 
 19237 ;;  divisor         2   31[BANK0 ] int 
 19238 ;; Auto vars:     Size  Location     Type
 19239 ;;  sign            1   34[BANK0 ] unsigned char 
 19240 ;;  counter         1   33[BANK0 ] unsigned char 
 19241 ;; Return value:  Size  Location     Type
 19242 ;;                  2   29[BANK0 ] int 
 19243 ;; Registers used:
 19244 ;;		wreg, status,2, status,0
 19245 ;; Tracked objects:
 19246 ;;		On entry : 0/0
 19247 ;;		On exit  : 0/0
 19248 ;;		Unchanged: 0/0
 19249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19251 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19253 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19254 ;;Total ram usage:        6 bytes
 19255 ;; Hardware stack levels used:    1
 19256 ;; Hardware stack levels required when called:   11
 19257 ;; This function calls:
 19258 ;;		Nothing
 19259 ;; This function is called by:
 19260 ;;		_Rtcc_SetRtccValue
 19261 ;;		_Rtcc_SetRtccAlarm
 19262 ;; This function uses a non-reentrant model
 19263 ;;
 19264                           
 19265                           	psect	text81
 19266  005314                     __ptext81:
 19267                           	opt stack 0
 19268  005314                     ___awmod:
 19269                           	opt stack 14
 19270                           
 19271                           ; BSR set to: 0
 19272                           ;incstack = 0
 19273  005314  0E00               	movlw	0
 19274  005316  0100               	movlb	0	; () banked
 19275  005318  6F82               	movwf	___awmod@sign& (0+255),b
 19276                           
 19277                           ; BSR set to: 0
 19278  00531A  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19279  00531C  D006               	goto	l3088
 19280                           
 19281                           ; BSR set to: 0
 19282  00531E  6D7D               	negf	___awmod@dividend& (0+255),b
 19283  005320  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19284  005322  B0D8               	btfsc	status,0,c
 19285  005324  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19286                           
 19287                           ; BSR set to: 0
 19288  005326  0E01               	movlw	1
 19289  005328  6F82               	movwf	___awmod@sign& (0+255),b
 19290  00532A                     l3088:
 19291                           
 19292                           ; BSR set to: 0
 19293                           
 19294                           ; BSR set to: 0
 19295  00532A  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19296  00532C  D004               	goto	l3089
 19297                           
 19298                           ; BSR set to: 0
 19299  00532E  6D7F               	negf	___awmod@divisor& (0+255),b
 19300  005330  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19301  005332  B0D8               	btfsc	status,0,c
 19302  005334  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19303  005336                     l3089:
 19304                           
 19305                           ; BSR set to: 0
 19306                           
 19307                           ; BSR set to: 0
 19308  005336  517F               	movf	___awmod@divisor& (0+255),w,b
 19309  005338  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19310  00533A  B4D8               	btfsc	status,2,c
 19311  00533C  D018               	goto	l3096
 19312                           
 19313                           ; BSR set to: 0
 19314  00533E  0E01               	movlw	1
 19315  005340  6F81               	movwf	___awmod@counter& (0+255),b
 19316  005342  D004               	goto	l3091
 19317  005344                     
 19318                           ; BSR set to: 0
 19319                           
 19320                           ; BSR set to: 0
 19321  005344  90D8               	bcf	status,0,c
 19322  005346  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19323  005348  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19324  00534A  2B81               	incf	___awmod@counter& (0+255),f,b
 19325  00534C                     l3091:
 19326                           
 19327                           ; BSR set to: 0
 19328                           
 19329                           ; BSR set to: 0
 19330  00534C  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19331  00534E  D7FA               	goto	l3092
 19332  005350                     u13310:
 19333                           
 19334                           ; BSR set to: 0
 19335                           
 19336                           ; BSR set to: 0
 19337                           
 19338                           ; BSR set to: 0
 19339  005350  517F               	movf	___awmod@divisor& (0+255),w,b
 19340  005352  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19341  005354  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19342  005356  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19343  005358  A0D8               	btfss	status,0,c
 19344  00535A  D004               	goto	l3095
 19345                           
 19346                           ; BSR set to: 0
 19347  00535C  517F               	movf	___awmod@divisor& (0+255),w,b
 19348  00535E  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19349  005360  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19350  005362  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19351  005364                     l3095:
 19352                           
 19353                           ; BSR set to: 0
 19354                           
 19355                           ; BSR set to: 0
 19356  005364  90D8               	bcf	status,0,c
 19357  005366  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19358  005368  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19359                           
 19360                           ; BSR set to: 0
 19361  00536A  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19362  00536C  D7F1               	goto	u13310
 19363  00536E                     l3096:
 19364                           
 19365                           ; BSR set to: 0
 19366                           
 19367                           ; BSR set to: 0
 19368                           
 19369                           ; BSR set to: 0
 19370  00536E  5182               	movf	___awmod@sign& (0+255),w,b
 19371  005370  B4D8               	btfsc	status,2,c
 19372  005372  D004               	goto	l3097
 19373                           
 19374                           ; BSR set to: 0
 19375  005374  6D7D               	negf	___awmod@dividend& (0+255),b
 19376  005376  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19377  005378  B0D8               	btfsc	status,0,c
 19378  00537A  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19379  00537C                     l3097:
 19380                           
 19381                           ; BSR set to: 0
 19382                           
 19383                           ; BSR set to: 0
 19384  00537C  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19385  005380  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19386  005384  0012               	return	
 19387  005386                     __end_of___awmod:
 19388                           	opt stack 0
 19389                           tosu	equ	0xFFF
 19390                           tosh	equ	0xFFE
 19391                           tosl	equ	0xFFD
 19392                           pclath	equ	0xFFA
 19393                           tblptru	equ	0xFF8
 19394                           tblptrh	equ	0xFF7
 19395                           tblptrl	equ	0xFF6
 19396                           tablat	equ	0xFF5
 19397                           prodh	equ	0xFF4
 19398                           prodl	equ	0xFF3
 19399                           intcon	equ	0xFF2
 19400                           intcon2	equ	0xFF1
 19401                           intcon3	equ	0xFF0
 19402                           indf0	equ	0xFEF
 19403                           postinc0	equ	0xFEE
 19404                           plusw0	equ	0xFEB
 19405                           fsr0h	equ	0xFEA
 19406                           fsr0l	equ	0xFE9
 19407                           wreg	equ	0xFE8
 19408                           indf1	equ	0xFE7
 19409                           postinc1	equ	0xFE6
 19410                           postdec1	equ	0xFE5
 19411                           fsr1h	equ	0xFE2
 19412                           fsr1l	equ	0xFE1
 19413                           indf2	equ	0xFDF
 19414                           postinc2	equ	0xFDE
 19415                           postdec2	equ	0xFDD
 19416                           plusw2	equ	0xFDB
 19417                           fsr2h	equ	0xFDA
 19418                           fsr2l	equ	0xFD9
 19419                           status	equ	0xFD8
 19420                           
 19421 ;; *************** function ___awdiv *****************
 19422 ;; Defined at:
 19423 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19424 ;; Parameters:    Size  Location     Type
 19425 ;;  dividend        2   29[BANK0 ] int 
 19426 ;;  divisor         2   31[BANK0 ] int 
 19427 ;; Auto vars:     Size  Location     Type
 19428 ;;  quotient        2   35[BANK0 ] int 
 19429 ;;  sign            1   34[BANK0 ] unsigned char 
 19430 ;;  counter         1   33[BANK0 ] unsigned char 
 19431 ;; Return value:  Size  Location     Type
 19432 ;;                  2   29[BANK0 ] int 
 19433 ;; Registers used:
 19434 ;;		wreg, status,2, status,0
 19435 ;; Tracked objects:
 19436 ;;		On entry : 0/0
 19437 ;;		On exit  : 0/0
 19438 ;;		Unchanged: 0/0
 19439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19440 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19441 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19443 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19444 ;;Total ram usage:        8 bytes
 19445 ;; Hardware stack levels used:    1
 19446 ;; Hardware stack levels required when called:   11
 19447 ;; This function calls:
 19448 ;;		Nothing
 19449 ;; This function is called by:
 19450 ;;		_Rtcc_SetRtccValue
 19451 ;;		_Rtcc_SetRtccAlarm
 19452 ;; This function uses a non-reentrant model
 19453 ;;
 19454                           
 19455                           	psect	text82
 19456  00502A                     __ptext82:
 19457                           	opt stack 0
 19458  00502A                     ___awdiv:
 19459                           	opt stack 14
 19460                           
 19461                           ; BSR set to: 0
 19462                           ;incstack = 0
 19463  00502A  0E00               	movlw	0
 19464  00502C  0100               	movlb	0	; () banked
 19465  00502E  6F82               	movwf	___awdiv@sign& (0+255),b
 19466                           
 19467                           ; BSR set to: 0
 19468  005030  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19469  005032  D006               	goto	l3075
 19470                           
 19471                           ; BSR set to: 0
 19472  005034  6D7F               	negf	___awdiv@divisor& (0+255),b
 19473  005036  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19474  005038  B0D8               	btfsc	status,0,c
 19475  00503A  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19476                           
 19477                           ; BSR set to: 0
 19478  00503C  0E01               	movlw	1
 19479  00503E  6F82               	movwf	___awdiv@sign& (0+255),b
 19480  005040                     l3075:
 19481                           
 19482                           ; BSR set to: 0
 19483                           
 19484                           ; BSR set to: 0
 19485  005040  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19486  005042  D006               	goto	l3076
 19487                           
 19488                           ; BSR set to: 0
 19489  005044  6D7D               	negf	___awdiv@dividend& (0+255),b
 19490  005046  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19491  005048  B0D8               	btfsc	status,0,c
 19492  00504A  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19493                           
 19494                           ; BSR set to: 0
 19495  00504C  0E01               	movlw	1
 19496  00504E  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19497  005050                     l3076:
 19498                           
 19499                           ; BSR set to: 0
 19500                           
 19501                           ; BSR set to: 0
 19502  005050  0E00               	movlw	0
 19503  005052  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19504  005054  0E00               	movlw	0
 19505  005056  6F83               	movwf	___awdiv@quotient& (0+255),b
 19506                           
 19507                           ; BSR set to: 0
 19508  005058  517F               	movf	___awdiv@divisor& (0+255),w,b
 19509  00505A  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19510  00505C  B4D8               	btfsc	status,2,c
 19511  00505E  D01C               	goto	l3083
 19512                           
 19513                           ; BSR set to: 0
 19514  005060  0E01               	movlw	1
 19515  005062  6F81               	movwf	___awdiv@counter& (0+255),b
 19516  005064  D004               	goto	l3078
 19517  005066                     
 19518                           ; BSR set to: 0
 19519                           
 19520                           ; BSR set to: 0
 19521  005066  90D8               	bcf	status,0,c
 19522  005068  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19523  00506A  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19524  00506C  2B81               	incf	___awdiv@counter& (0+255),f,b
 19525  00506E                     l3078:
 19526                           
 19527                           ; BSR set to: 0
 19528                           
 19529                           ; BSR set to: 0
 19530  00506E  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19531  005070  D7FA               	goto	l3079
 19532  005072                     u13250:
 19533                           
 19534                           ; BSR set to: 0
 19535                           
 19536                           ; BSR set to: 0
 19537                           
 19538                           ; BSR set to: 0
 19539  005072  90D8               	bcf	status,0,c
 19540  005074  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19541  005076  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19542                           
 19543                           ; BSR set to: 0
 19544  005078  517F               	movf	___awdiv@divisor& (0+255),w,b
 19545  00507A  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19546  00507C  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19547  00507E  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19548  005080  A0D8               	btfss	status,0,c
 19549  005082  D005               	goto	l3082
 19550                           
 19551                           ; BSR set to: 0
 19552  005084  517F               	movf	___awdiv@divisor& (0+255),w,b
 19553  005086  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19554  005088  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19555  00508A  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19556                           
 19557                           ; BSR set to: 0
 19558  00508C  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19559  00508E                     l3082:
 19560                           
 19561                           ; BSR set to: 0
 19562                           
 19563                           ; BSR set to: 0
 19564  00508E  90D8               	bcf	status,0,c
 19565  005090  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19566  005092  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19567                           
 19568                           ; BSR set to: 0
 19569  005094  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19570  005096  D7ED               	goto	u13250
 19571  005098                     l3083:
 19572                           
 19573                           ; BSR set to: 0
 19574                           
 19575                           ; BSR set to: 0
 19576                           
 19577                           ; BSR set to: 0
 19578  005098  5182               	movf	___awdiv@sign& (0+255),w,b
 19579  00509A  B4D8               	btfsc	status,2,c
 19580  00509C  D004               	goto	l3084
 19581                           
 19582                           ; BSR set to: 0
 19583  00509E  6D83               	negf	___awdiv@quotient& (0+255),b
 19584  0050A0  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19585  0050A2  B0D8               	btfsc	status,0,c
 19586  0050A4  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19587  0050A6                     l3084:
 19588                           
 19589                           ; BSR set to: 0
 19590                           
 19591                           ; BSR set to: 0
 19592  0050A6  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19593  0050AA  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19594  0050AE  0012               	return	
 19595  0050B0                     __end_of___awdiv:
 19596                           	opt stack 0
 19597                           tosu	equ	0xFFF
 19598                           tosh	equ	0xFFE
 19599                           tosl	equ	0xFFD
 19600                           pclath	equ	0xFFA
 19601                           tblptru	equ	0xFF8
 19602                           tblptrh	equ	0xFF7
 19603                           tblptrl	equ	0xFF6
 19604                           tablat	equ	0xFF5
 19605                           prodh	equ	0xFF4
 19606                           prodl	equ	0xFF3
 19607                           intcon	equ	0xFF2
 19608                           intcon2	equ	0xFF1
 19609                           intcon3	equ	0xFF0
 19610                           indf0	equ	0xFEF
 19611                           postinc0	equ	0xFEE
 19612                           plusw0	equ	0xFEB
 19613                           fsr0h	equ	0xFEA
 19614                           fsr0l	equ	0xFE9
 19615                           wreg	equ	0xFE8
 19616                           indf1	equ	0xFE7
 19617                           postinc1	equ	0xFE6
 19618                           postdec1	equ	0xFE5
 19619                           fsr1h	equ	0xFE2
 19620                           fsr1l	equ	0xFE1
 19621                           indf2	equ	0xFDF
 19622                           postinc2	equ	0xFDE
 19623                           postdec2	equ	0xFDD
 19624                           plusw2	equ	0xFDB
 19625                           fsr2h	equ	0xFDA
 19626                           fsr2l	equ	0xFD9
 19627                           status	equ	0xFD8
 19628                           
 19629 ;; *************** function _Rtcc_LockRtc *****************
 19630 ;; Defined at:
 19631 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19632 ;; Parameters:    Size  Location     Type
 19633 ;;		None
 19634 ;; Auto vars:     Size  Location     Type
 19635 ;;		None
 19636 ;; Return value:  Size  Location     Type
 19637 ;;                  1    wreg      void 
 19638 ;; Registers used:
 19639 ;;		None
 19640 ;; Tracked objects:
 19641 ;;		On entry : 0/0
 19642 ;;		On exit  : 0/0
 19643 ;;		Unchanged: 0/0
 19644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19649 ;;Total ram usage:        0 bytes
 19650 ;; Hardware stack levels used:    1
 19651 ;; Hardware stack levels required when called:   11
 19652 ;; This function calls:
 19653 ;;		Nothing
 19654 ;; This function is called by:
 19655 ;;		_Rtcm_MainTask
 19656 ;;		_Rtcm_SetRtccDate
 19657 ;;		_Rtcm_SetRtccAlarm
 19658 ;; This function uses a non-reentrant model
 19659 ;;
 19660                           
 19661                           	psect	text83
 19662  0069E2                     __ptext83:
 19663                           	opt stack 0
 19664  0069E2                     _Rtcc_LockRtc:
 19665                           	opt stack 15
 19666                           
 19667                           ; BSR set to: 0
 19668                           ;incstack = 0
 19669  0069E2  010F               	movlb	15	;# 
 19670  0069E4  0E55               	movlw	85	;# 
 19671  0069E6  6EA7               	movwf	4007,c	;# 
 19672  0069E8  0EAA               	movlw	170	;# 
 19673  0069EA  6EA7               	movwf	4007,c	;# 
 19674                           
 19675                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19676  0069EC  010F               	movlb	15	; () banked
 19677  0069EE  9B3F               	bcf	63,5,b	;volatile
 19678                           
 19679                           ; BSR set to: 15
 19680  0069F0  0012               	return		;funcret
 19681  0069F2                     __end_of_Rtcc_LockRtc:
 19682                           	opt stack 0
 19683                           tosu	equ	0xFFF
 19684                           tosh	equ	0xFFE
 19685                           tosl	equ	0xFFD
 19686                           pclath	equ	0xFFA
 19687                           tblptru	equ	0xFF8
 19688                           tblptrh	equ	0xFF7
 19689                           tblptrl	equ	0xFF6
 19690                           tablat	equ	0xFF5
 19691                           prodh	equ	0xFF4
 19692                           prodl	equ	0xFF3
 19693                           intcon	equ	0xFF2
 19694                           intcon2	equ	0xFF1
 19695                           intcon3	equ	0xFF0
 19696                           indf0	equ	0xFEF
 19697                           postinc0	equ	0xFEE
 19698                           plusw0	equ	0xFEB
 19699                           fsr0h	equ	0xFEA
 19700                           fsr0l	equ	0xFE9
 19701                           wreg	equ	0xFE8
 19702                           indf1	equ	0xFE7
 19703                           postinc1	equ	0xFE6
 19704                           postdec1	equ	0xFE5
 19705                           fsr1h	equ	0xFE2
 19706                           fsr1l	equ	0xFE1
 19707                           indf2	equ	0xFDF
 19708                           postinc2	equ	0xFDE
 19709                           postdec2	equ	0xFDD
 19710                           plusw2	equ	0xFDB
 19711                           fsr2h	equ	0xFDA
 19712                           fsr2l	equ	0xFD9
 19713                           status	equ	0xFD8
 19714                           
 19715 ;; *************** function _Rtcm_GetRtccDate *****************
 19716 ;; Defined at:
 19717 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19718 ;; Parameters:    Size  Location     Type
 19719 ;;		None
 19720 ;; Auto vars:     Size  Location     Type
 19721 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19722 ;; Return value:  Size  Location     Type
 19723 ;;                  8   33[BANK0 ] struct _RtccDateType
 19724 ;; Registers used:
 19725 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19726 ;; Tracked objects:
 19727 ;;		On entry : 0/0
 19728 ;;		On exit  : 0/0
 19729 ;;		Unchanged: 0/0
 19730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19731 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19732 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19734 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19735 ;;Total ram usage:       17 bytes
 19736 ;; Hardware stack levels used:    1
 19737 ;; Hardware stack levels required when called:   12
 19738 ;; This function calls:
 19739 ;;		_Rtcc_GetRtccValue
 19740 ;; This function is called by:
 19741 ;;		_Rtcm_MainTask
 19742 ;; This function uses a non-reentrant model
 19743 ;;
 19744                           
 19745                           	psect	text84
 19746  00560C                     __ptext84:
 19747                           	opt stack 0
 19748  00560C                     _Rtcm_GetRtccDate:
 19749                           	opt stack 15
 19750                           
 19751                           ;rtcm.c: 204: RtccDateType LocalDate;
 19752                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19753                           
 19754                           ; BSR set to: 15
 19755                           ;incstack = 0
 19756  00560C  0E00               	movlw	0
 19757  00560E  EC66  F026         	call	_Rtcc_GetRtccValue
 19758  005612  0100               	movlb	0	; () banked
 19759  005614  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19760  005616  0ED0               	movlw	208
 19761  005618  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19762  00561A  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19763  00561C  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19764  00561E  0E07               	movlw	7
 19765  005620  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19766                           
 19767                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19768  005622  0E01               	movlw	1
 19769  005624  EC66  F026         	call	_Rtcc_GetRtccValue
 19770  005628  0100               	movlb	0	; () banked
 19771  00562A  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19772                           
 19773                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19774  00562C  0E02               	movlw	2
 19775  00562E  EC66  F026         	call	_Rtcc_GetRtccValue
 19776  005632  0100               	movlb	0	; () banked
 19777  005634  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19778                           
 19779                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19780  005636  0E03               	movlw	3
 19781  005638  EC66  F026         	call	_Rtcc_GetRtccValue
 19782  00563C  0100               	movlb	0	; () banked
 19783  00563E  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19784                           
 19785                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19786  005640  0E04               	movlw	4
 19787  005642  EC66  F026         	call	_Rtcc_GetRtccValue
 19788  005646  0100               	movlb	0	; () banked
 19789  005648  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19790                           
 19791                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19792  00564A  0E05               	movlw	5
 19793  00564C  EC66  F026         	call	_Rtcc_GetRtccValue
 19794  005650  0100               	movlb	0	; () banked
 19795  005652  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19796                           
 19797                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19798  005654  0E06               	movlw	6
 19799  005656  EC66  F026         	call	_Rtcc_GetRtccValue
 19800  00565A  0100               	movlb	0	; () banked
 19801  00565C  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19802                           
 19803                           ; BSR set to: 0
 19804                           ;rtcm.c: 216: return LocalDate;
 19805  00565E  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19806  005662  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19807  005666  0E07               	movlw	7
 19808  005668                     u15661:
 19809  005668  CFDB FFEB          	movff	plusw2,plusw0
 19810  00566C  06E8               	decf	wreg,f,c
 19811  00566E  E2FC               	bc	u15661
 19812  005670  0012               	return	
 19813  005672                     __end_of_Rtcm_GetRtccDate:
 19814                           	opt stack 0
 19815                           tosu	equ	0xFFF
 19816                           tosh	equ	0xFFE
 19817                           tosl	equ	0xFFD
 19818                           pclath	equ	0xFFA
 19819                           tblptru	equ	0xFF8
 19820                           tblptrh	equ	0xFF7
 19821                           tblptrl	equ	0xFF6
 19822                           tablat	equ	0xFF5
 19823                           prodh	equ	0xFF4
 19824                           prodl	equ	0xFF3
 19825                           intcon	equ	0xFF2
 19826                           intcon2	equ	0xFF1
 19827                           intcon3	equ	0xFF0
 19828                           indf0	equ	0xFEF
 19829                           postinc0	equ	0xFEE
 19830                           plusw0	equ	0xFEB
 19831                           fsr0h	equ	0xFEA
 19832                           fsr0l	equ	0xFE9
 19833                           wreg	equ	0xFE8
 19834                           indf1	equ	0xFE7
 19835                           postinc1	equ	0xFE6
 19836                           postdec1	equ	0xFE5
 19837                           fsr1h	equ	0xFE2
 19838                           fsr1l	equ	0xFE1
 19839                           indf2	equ	0xFDF
 19840                           postinc2	equ	0xFDE
 19841                           postdec2	equ	0xFDD
 19842                           plusw2	equ	0xFDB
 19843                           fsr2h	equ	0xFDA
 19844                           fsr2l	equ	0xFD9
 19845                           status	equ	0xFD8
 19846                           
 19847 ;; *************** function _Rtcc_GetRtccValue *****************
 19848 ;; Defined at:
 19849 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19850 ;; Parameters:    Size  Location     Type
 19851 ;;  RtccPtrVal      1    wreg     enum E7757
 19852 ;; Auto vars:     Size  Location     Type
 19853 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19854 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19855 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19856 ;; Return value:  Size  Location     Type
 19857 ;;                  1    wreg      unsigned char 
 19858 ;; Registers used:
 19859 ;;		wreg, status,2, status,0, prodl, prodh
 19860 ;; Tracked objects:
 19861 ;;		On entry : 0/0
 19862 ;;		On exit  : 0/0
 19863 ;;		Unchanged: 0/0
 19864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19866 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19868 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19869 ;;Total ram usage:        4 bytes
 19870 ;; Hardware stack levels used:    1
 19871 ;; Hardware stack levels required when called:   11
 19872 ;; This function calls:
 19873 ;;		Nothing
 19874 ;; This function is called by:
 19875 ;;		_Rtcm_GetRtccDate
 19876 ;; This function uses a non-reentrant model
 19877 ;;
 19878                           
 19879                           	psect	text85
 19880  004CCC                     __ptext85:
 19881                           	opt stack 0
 19882  004CCC                     _Rtcc_GetRtccValue:
 19883                           	opt stack 15
 19884                           
 19885                           ; BSR set to: 0
 19886                           ;incstack = 0
 19887                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19888  004CCC  0100               	movlb	0	; () banked
 19889  004CCE  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19890                           
 19891                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19892                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19893                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19894  004CD0  D02D               	goto	l416
 19895  004CD2                     l417:
 19896                           
 19897                           ; BSR set to: 0
 19898                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19899  004CD2  010F               	movlb	15	; () banked
 19900  004CD4  833F               	bsf	63,1,b	;volatile
 19901  004CD6                     
 19902                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19903  004CD6  813F               	bsf	63,0,b	;volatile
 19904  004CD8  D01C               	goto	L18
 19905  004CDA                     l419:
 19906                           
 19907                           ; BSR set to: 0
 19908                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19909  004CDA  010F               	movlb	15	; () banked
 19910  004CDC  833F               	bsf	63,1,b	;volatile
 19911  004CDE  D01E               	goto	L19
 19912  004CE0                     l420:
 19913                           
 19914                           ; BSR set to: 0
 19915                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19916  004CE0  010F               	movlb	15	; () banked
 19917  004CE2  833F               	bsf	63,1,b	;volatile
 19918  004CE4  D021               	goto	L22
 19919  004CE6                     l14373:
 19920                           
 19921                           ; BSR set to: 15
 19922                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19923  004CE6  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19924  004CEA  0E0F               	movlw	15
 19925  004CEC  0100               	movlb	0	; () banked
 19926  004CEE  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19927  004CF0  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19928  004CF2  0B0F               	andlw	15
 19929  004CF4  0B0F               	andlw	15
 19930  004CF6  0D0A               	mullw	10
 19931  004CF8  50F3               	movf	prodl,w,c
 19932  004CFA  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19933  004CFC  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19934                           
 19935                           ;rtcc_drv.c: 241: break;
 19936  004CFE  D02D               	goto	l418
 19937  004D00                     l421:
 19938                           
 19939                           ; BSR set to: 0
 19940                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19941  004D00  010F               	movlb	15	; () banked
 19942  004D02  933F               	bcf	63,1,b	;volatile
 19943                           
 19944                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19945  004D04  813F               	bsf	63,0,b	;volatile
 19946                           
 19947                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19948  004D06  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19949                           
 19950                           ;rtcc_drv.c: 249: break;
 19951  004D0A  D027               	goto	l418
 19952  004D0C                     l422:
 19953                           
 19954                           ; BSR set to: 0
 19955                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19956  004D0C  010F               	movlb	15	; () banked
 19957  004D0E  933F               	bcf	63,1,b	;volatile
 19958  004D10  D7E2               	goto	L20
 19959  004D12                     L18:
 19960                           
 19961                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19962  004D12  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19963  004D16  D7E7               	goto	l14373
 19964  004D18                     l423:
 19965                           
 19966                           ; BSR set to: 0
 19967                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19968  004D18  010F               	movlb	15	; () banked
 19969  004D1A  933F               	bcf	63,1,b	;volatile
 19970  004D1C                     L19:
 19971                           
 19972                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19973  004D1C  913F               	bcf	63,0,b	;volatile
 19974                           
 19975                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19976  004D1E  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19977  004D22  D7E1               	goto	l14373
 19978  004D24                     l424:
 19979                           
 19980                           ; BSR set to: 0
 19981                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19982  004D24  010F               	movlb	15	; () banked
 19983  004D26  933F               	bcf	63,1,b	;volatile
 19984  004D28                     L22:
 19985                           
 19986                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19987  004D28  913F               	bcf	63,0,b	;volatile
 19988  004D2A  D7F3               	goto	L18
 19989  004D2C                     l416:
 19990                           
 19991                           ; BSR set to: 0
 19992  004D2C  0100               	movlb	0	; () banked
 19993  004D2E  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19994                           
 19995                           ; Switch size 1, requested type "space"
 19996                           ; Number of cases is 7, Range of values is 0 to 6
 19997                           ; switch strategies available:
 19998                           ; Name         Instructions Cycles
 19999                           ; simple_byte           22    12 (average)
 20000                           ;	Chosen strategy is simple_byte
 20001  004D30  0A00               	xorlw	0	; case 0
 20002  004D32  B4D8               	btfsc	status,2,c
 20003  004D34  D7CE               	goto	l417
 20004  004D36  0A01               	xorlw	1	; case 1
 20005  004D38  B4D8               	btfsc	status,2,c
 20006  004D3A  D7CF               	goto	l419
 20007  004D3C  0A03               	xorlw	3	; case 2
 20008  004D3E  B4D8               	btfsc	status,2,c
 20009  004D40  D7CF               	goto	l420
 20010  004D42  0A01               	xorlw	1	; case 3
 20011  004D44  B4D8               	btfsc	status,2,c
 20012  004D46  D7DC               	goto	l421
 20013  004D48  0A07               	xorlw	7	; case 4
 20014  004D4A  B4D8               	btfsc	status,2,c
 20015  004D4C  D7DF               	goto	l422
 20016  004D4E  0A01               	xorlw	1	; case 5
 20017  004D50  B4D8               	btfsc	status,2,c
 20018  004D52  D7E2               	goto	l423
 20019  004D54  0A03               	xorlw	3	; case 6
 20020  004D56  B4D8               	btfsc	status,2,c
 20021  004D58  D7E5               	goto	l424
 20022  004D5A                     l418:
 20023                           
 20024                           ;rtcc_drv.c: 286: return RetValue;
 20025                           
 20026                           ; BSR set to: 0
 20027  004D5A  0100               	movlb	0	; () banked
 20028  004D5C  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20029  004D5E  0012               	return	
 20030  004D60                     __end_of_Rtcc_GetRtccValue:
 20031                           	opt stack 0
 20032                           tosu	equ	0xFFF
 20033                           tosh	equ	0xFFE
 20034                           tosl	equ	0xFFD
 20035                           pclath	equ	0xFFA
 20036                           tblptru	equ	0xFF8
 20037                           tblptrh	equ	0xFF7
 20038                           tblptrl	equ	0xFF6
 20039                           tablat	equ	0xFF5
 20040                           prodh	equ	0xFF4
 20041                           prodl	equ	0xFF3
 20042                           intcon	equ	0xFF2
 20043                           intcon2	equ	0xFF1
 20044                           intcon3	equ	0xFF0
 20045                           indf0	equ	0xFEF
 20046                           postinc0	equ	0xFEE
 20047                           plusw0	equ	0xFEB
 20048                           fsr0h	equ	0xFEA
 20049                           fsr0l	equ	0xFE9
 20050                           wreg	equ	0xFE8
 20051                           indf1	equ	0xFE7
 20052                           postinc1	equ	0xFE6
 20053                           postdec1	equ	0xFE5
 20054                           fsr1h	equ	0xFE2
 20055                           fsr1l	equ	0xFE1
 20056                           indf2	equ	0xFDF
 20057                           postinc2	equ	0xFDE
 20058                           postdec2	equ	0xFDD
 20059                           plusw2	equ	0xFDB
 20060                           fsr2h	equ	0xFDA
 20061                           fsr2l	equ	0xFD9
 20062                           status	equ	0xFD8
 20063                           
 20064 ;; *************** function _Rtcc_SetRtcStatus *****************
 20065 ;; Defined at:
 20066 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20067 ;; Parameters:    Size  Location     Type
 20068 ;;  Status          1    wreg     unsigned char 
 20069 ;; Auto vars:     Size  Location     Type
 20070 ;;  Status          1   29[BANK0 ] unsigned char 
 20071 ;; Return value:  Size  Location     Type
 20072 ;;                  1    wreg      void 
 20073 ;; Registers used:
 20074 ;;		wreg
 20075 ;; Tracked objects:
 20076 ;;		On entry : 0/0
 20077 ;;		On exit  : 0/0
 20078 ;;		Unchanged: 0/0
 20079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20083 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20084 ;;Total ram usage:        1 bytes
 20085 ;; Hardware stack levels used:    1
 20086 ;; Hardware stack levels required when called:   11
 20087 ;; This function calls:
 20088 ;;		Nothing
 20089 ;; This function is called by:
 20090 ;;		_Rtcm_MainTask
 20091 ;; This function uses a non-reentrant model
 20092 ;;
 20093                           
 20094                           	psect	text86
 20095  006930                     __ptext86:
 20096                           	opt stack 0
 20097  006930                     _Rtcc_SetRtcStatus:
 20098                           	opt stack 16
 20099                           
 20100                           ; BSR set to: 0
 20101                           ;incstack = 0
 20102                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20103  006930  0100               	movlb	0	; () banked
 20104  006932  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20105                           
 20106                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20107  006934  0100               	movlb	0	; () banked
 20108  006936  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20109  006938  D003               	bra	u14595
 20110  00693A  010F               	movlb	15	; () banked
 20111  00693C  9F3F               	bcf	63,7,b	;volatile
 20112  00693E  D002               	bra	u14596
 20113  006940                     u14595:
 20114  006940  010F               	movlb	15	; () banked
 20115  006942  8F3F               	bsf	63,7,b	;volatile
 20116  006944                     u14596:
 20117                           
 20118                           ; BSR set to: 15
 20119  006944  0012               	return		;funcret
 20120  006946                     __end_of_Rtcc_SetRtcStatus:
 20121                           	opt stack 0
 20122                           tosu	equ	0xFFF
 20123                           tosh	equ	0xFFE
 20124                           tosl	equ	0xFFD
 20125                           pclath	equ	0xFFA
 20126                           tblptru	equ	0xFF8
 20127                           tblptrh	equ	0xFF7
 20128                           tblptrl	equ	0xFF6
 20129                           tablat	equ	0xFF5
 20130                           prodh	equ	0xFF4
 20131                           prodl	equ	0xFF3
 20132                           intcon	equ	0xFF2
 20133                           intcon2	equ	0xFF1
 20134                           intcon3	equ	0xFF0
 20135                           indf0	equ	0xFEF
 20136                           postinc0	equ	0xFEE
 20137                           plusw0	equ	0xFEB
 20138                           fsr0h	equ	0xFEA
 20139                           fsr0l	equ	0xFE9
 20140                           wreg	equ	0xFE8
 20141                           indf1	equ	0xFE7
 20142                           postinc1	equ	0xFE6
 20143                           postdec1	equ	0xFE5
 20144                           fsr1h	equ	0xFE2
 20145                           fsr1l	equ	0xFE1
 20146                           indf2	equ	0xFDF
 20147                           postinc2	equ	0xFDE
 20148                           postdec2	equ	0xFDD
 20149                           plusw2	equ	0xFDB
 20150                           fsr2h	equ	0xFDA
 20151                           fsr2l	equ	0xFD9
 20152                           status	equ	0xFD8
 20153                           
 20154 ;; *************** function _Rtcc_RtcConfig *****************
 20155 ;; Defined at:
 20156 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20157 ;; Parameters:    Size  Location     Type
 20158 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20159 ;;		 -> RtcConfig(4), 
 20160 ;; Auto vars:     Size  Location     Type
 20161 ;;		None
 20162 ;; Return value:  Size  Location     Type
 20163 ;;                  1    wreg      void 
 20164 ;; Registers used:
 20165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20166 ;; Tracked objects:
 20167 ;;		On entry : 0/0
 20168 ;;		On exit  : 0/0
 20169 ;;		Unchanged: 0/0
 20170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20173 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20174 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20175 ;;Total ram usage:        3 bytes
 20176 ;; Hardware stack levels used:    1
 20177 ;; Hardware stack levels required when called:   12
 20178 ;; This function calls:
 20179 ;;		_RtccIrqInit
 20180 ;; This function is called by:
 20181 ;;		_Rtcm_MainTask
 20182 ;; This function uses a non-reentrant model
 20183 ;;
 20184                           
 20185                           	psect	text87
 20186  00489A                     __ptext87:
 20187                           	opt stack 0
 20188  00489A                     _Rtcc_RtcConfig:
 20189                           	opt stack 15
 20190                           
 20191                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20192                           
 20193                           ; BSR set to: 15
 20194                           ;incstack = 0
 20195  00489A  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20196  00489E  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20197  0048A2  50DF               	movf	indf2,w,c
 20198  0048A4  0100               	movlb	0	; () banked
 20199  0048A6  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20200  0048A8  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20201  0048AA  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20202  0048AC  010F               	movlb	15	; () banked
 20203  0048AE  513F               	movf	63,w,b	;volatile
 20204  0048B0  0100               	movlb	0	; () banked
 20205  0048B2  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20206  0048B4  0BFB               	andlw	-5
 20207  0048B6  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20208  0048B8  010F               	movlb	15	; () banked
 20209  0048BA  6F3F               	movwf	63,b	;volatile
 20210                           
 20211                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20212  0048BC  0100               	movlb	0	; () banked
 20213  0048BE  EE20 F001          	lfsr	2,1
 20214  0048C2  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20215  0048C4  26D9               	addwf	fsr2l,f,c
 20216  0048C6  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20217  0048C8  22DA               	addwfc	fsr2h,f,c
 20218  0048CA  50DF               	movf	indf2,w,c
 20219  0048CC  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20220  0048CE  0E01               	movlw	1
 20221  0048D0  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20222  0048D2  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20223  0048D4  010F               	movlb	15	; () banked
 20224  0048D6  513C               	movf	60,w,b	;volatile
 20225  0048D8  0100               	movlb	0	; () banked
 20226  0048DA  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20227  0048DC  0BFD               	andlw	-3
 20228  0048DE  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20229  0048E0  010F               	movlb	15	; () banked
 20230  0048E2  6F3C               	movwf	60,b	;volatile
 20231                           
 20232                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20233  0048E4  0100               	movlb	0	; () banked
 20234  0048E6  EE20 F001          	lfsr	2,1
 20235  0048EA  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20236  0048EC  26D9               	addwf	fsr2l,f,c
 20237  0048EE  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20238  0048F0  22DA               	addwfc	fsr2h,f,c
 20239  0048F2  50DF               	movf	indf2,w,c
 20240  0048F4  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20241  0048F6  90D8               	bcf	status,0,c
 20242  0048F8  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20243  0048FA  0E01               	movlw	1
 20244  0048FC  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20245  0048FE  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20246  004900  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20247  004902  010F               	movlb	15	; () banked
 20248  004904  513C               	movf	60,w,b	;volatile
 20249  004906  0100               	movlb	0	; () banked
 20250  004908  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20251  00490A  0BFB               	andlw	-5
 20252  00490C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20253  00490E  010F               	movlb	15	; () banked
 20254  004910  6F3C               	movwf	60,b	;volatile
 20255                           
 20256                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20257  004912  0100               	movlb	0	; () banked
 20258  004914  EE20 F002          	lfsr	2,2
 20259  004918  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20260  00491A  26D9               	addwf	fsr2l,f,c
 20261  00491C  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20262  00491E  22DA               	addwfc	fsr2h,f,c
 20263  004920  04DE               	decf	postinc2,w,c
 20264  004922  A4D8               	btfss	status,2,c
 20265  004924  0012               	return	
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;rtcc_drv.c: 115: {
 20269                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20270  004926  EE20 F003          	lfsr	2,3
 20271  00492A  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20272  00492C  26D9               	addwf	fsr2l,f,c
 20273  00492E  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20274  004930  22DA               	addwfc	fsr2h,f,c
 20275  004932  50DF               	movf	indf2,w,c
 20276  004934  ECA3  F034         	call	_RtccIrqInit
 20277  004938  0012               	return	
 20278  00493A                     __end_of_Rtcc_RtcConfig:
 20279                           	opt stack 0
 20280                           tosu	equ	0xFFF
 20281                           tosh	equ	0xFFE
 20282                           tosl	equ	0xFFD
 20283                           pclath	equ	0xFFA
 20284                           tblptru	equ	0xFF8
 20285                           tblptrh	equ	0xFF7
 20286                           tblptrl	equ	0xFF6
 20287                           tablat	equ	0xFF5
 20288                           prodh	equ	0xFF4
 20289                           prodl	equ	0xFF3
 20290                           intcon	equ	0xFF2
 20291                           intcon2	equ	0xFF1
 20292                           intcon3	equ	0xFF0
 20293                           indf0	equ	0xFEF
 20294                           postinc0	equ	0xFEE
 20295                           plusw0	equ	0xFEB
 20296                           fsr0h	equ	0xFEA
 20297                           fsr0l	equ	0xFE9
 20298                           wreg	equ	0xFE8
 20299                           indf1	equ	0xFE7
 20300                           postinc1	equ	0xFE6
 20301                           postdec1	equ	0xFE5
 20302                           fsr1h	equ	0xFE2
 20303                           fsr1l	equ	0xFE1
 20304                           indf2	equ	0xFDF
 20305                           postinc2	equ	0xFDE
 20306                           postdec2	equ	0xFDD
 20307                           plusw2	equ	0xFDB
 20308                           fsr2h	equ	0xFDA
 20309                           fsr2l	equ	0xFD9
 20310                           status	equ	0xFD8
 20311                           
 20312 ;; *************** function _RtccIrqInit *****************
 20313 ;; Defined at:
 20314 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20315 ;; Parameters:    Size  Location     Type
 20316 ;;  Priority        1    wreg     enum E7716
 20317 ;; Auto vars:     Size  Location     Type
 20318 ;;  Priority        1   29[BANK0 ] enum E7716
 20319 ;; Return value:  Size  Location     Type
 20320 ;;                  1    wreg      void 
 20321 ;; Registers used:
 20322 ;;		wreg
 20323 ;; Tracked objects:
 20324 ;;		On entry : 0/0
 20325 ;;		On exit  : 0/0
 20326 ;;		Unchanged: 0/0
 20327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20329 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20331 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20332 ;;Total ram usage:        1 bytes
 20333 ;; Hardware stack levels used:    1
 20334 ;; Hardware stack levels required when called:   11
 20335 ;; This function calls:
 20336 ;;		Nothing
 20337 ;; This function is called by:
 20338 ;;		_Rtcc_RtcConfig
 20339 ;; This function uses a non-reentrant model
 20340 ;;
 20341                           
 20342                           	psect	text88
 20343  006946                     __ptext88:
 20344                           	opt stack 0
 20345  006946                     _RtccIrqInit:
 20346                           	opt stack 15
 20347                           
 20348                           ;incstack = 0
 20349                           ;RtccIrqInit@Priority stored from wreg
 20350  006946  0100               	movlb	0	; () banked
 20351  006948  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20352                           
 20353                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20354  00694A  90A4               	bcf	4004,0,c	;volatile
 20355                           
 20356                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20357  00694C  0100               	movlb	0	; () banked
 20358  00694E  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20359  006950  D002               	bra	u13465
 20360  006952  90A5               	bcf	4005,0,c	;volatile
 20361  006954  D001               	bra	u13466
 20362  006956                     u13465:
 20363  006956  80A5               	bsf	4005,0,c	;volatile
 20364  006958                     u13466:
 20365                           
 20366                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20367  006958  80A3               	bsf	4003,0,c	;volatile
 20368  00695A  0012               	return		;funcret
 20369  00695C                     __end_of_RtccIrqInit:
 20370                           	opt stack 0
 20371                           tosu	equ	0xFFF
 20372                           tosh	equ	0xFFE
 20373                           tosl	equ	0xFFD
 20374                           pclath	equ	0xFFA
 20375                           tblptru	equ	0xFF8
 20376                           tblptrh	equ	0xFF7
 20377                           tblptrl	equ	0xFF6
 20378                           tablat	equ	0xFF5
 20379                           prodh	equ	0xFF4
 20380                           prodl	equ	0xFF3
 20381                           intcon	equ	0xFF2
 20382                           intcon2	equ	0xFF1
 20383                           intcon3	equ	0xFF0
 20384                           indf0	equ	0xFEF
 20385                           postinc0	equ	0xFEE
 20386                           plusw0	equ	0xFEB
 20387                           fsr0h	equ	0xFEA
 20388                           fsr0l	equ	0xFE9
 20389                           wreg	equ	0xFE8
 20390                           indf1	equ	0xFE7
 20391                           postinc1	equ	0xFE6
 20392                           postdec1	equ	0xFE5
 20393                           fsr1h	equ	0xFE2
 20394                           fsr1l	equ	0xFE1
 20395                           indf2	equ	0xFDF
 20396                           postinc2	equ	0xFDE
 20397                           postdec2	equ	0xFDD
 20398                           plusw2	equ	0xFDB
 20399                           fsr2h	equ	0xFDA
 20400                           fsr2l	equ	0xFD9
 20401                           status	equ	0xFD8
 20402                           
 20403 ;; *************** function _Rtcc_AlarmConfig *****************
 20404 ;; Defined at:
 20405 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20406 ;; Parameters:    Size  Location     Type
 20407 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20408 ;;		 -> AlCfg(4), 
 20409 ;; Auto vars:     Size  Location     Type
 20410 ;;		None
 20411 ;; Return value:  Size  Location     Type
 20412 ;;                  1    wreg      void 
 20413 ;; Registers used:
 20414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20415 ;; Tracked objects:
 20416 ;;		On entry : 0/0
 20417 ;;		On exit  : 0/0
 20418 ;;		Unchanged: 0/0
 20419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20422 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20423 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20424 ;;Total ram usage:        3 bytes
 20425 ;; Hardware stack levels used:    1
 20426 ;; Hardware stack levels required when called:   11
 20427 ;; This function calls:
 20428 ;;		Nothing
 20429 ;; This function is called by:
 20430 ;;		_Rtcm_MainTask
 20431 ;; This function uses a non-reentrant model
 20432 ;;
 20433                           
 20434                           	psect	text89
 20435  0054D2                     __ptext89:
 20436                           	opt stack 0
 20437  0054D2                     _Rtcc_AlarmConfig:
 20438                           	opt stack 16
 20439                           
 20440                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20441                           
 20442                           ;incstack = 0
 20443  0054D2  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20444  0054D6  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20445  0054DA  50DF               	movf	indf2,w,c
 20446  0054DC  0100               	movlb	0	; () banked
 20447  0054DE  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20448  0054E0  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20449  0054E2  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20450  0054E4  5091               	movf	3985,w,c	;volatile
 20451  0054E6  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20452  0054E8  0B7F               	andlw	-129
 20453  0054EA  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20454  0054EC  6E91               	movwf	3985,c	;volatile
 20455                           
 20456                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20457  0054EE  EE20 F001          	lfsr	2,1
 20458  0054F2  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20459  0054F4  26D9               	addwf	fsr2l,f,c
 20460  0054F6  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20461  0054F8  22DA               	addwfc	fsr2h,f,c
 20462  0054FA  50DF               	movf	indf2,w,c
 20463  0054FC  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20464  0054FE  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20465  005500  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20466  005502  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20467  005504  5091               	movf	3985,w,c	;volatile
 20468  005506  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20469  005508  0BBF               	andlw	-65
 20470  00550A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20471  00550C  6E91               	movwf	3985,c	;volatile
 20472                           
 20473                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20474  00550E  EE20 F002          	lfsr	2,2
 20475  005512  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20476  005514  26D9               	addwf	fsr2l,f,c
 20477  005516  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20478  005518  22DA               	addwfc	fsr2h,f,c
 20479  00551A  50DF               	movf	indf2,w,c
 20480  00551C  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20481  00551E  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20482  005520  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20483  005522  5091               	movf	3985,w,c	;volatile
 20484  005524  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20485  005526  0BC3               	andlw	-61
 20486  005528  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20487  00552A  6E91               	movwf	3985,c	;volatile
 20488                           
 20489                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20490  00552C  EE20 F003          	lfsr	2,3
 20491  005530  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20492  005532  26D9               	addwf	fsr2l,f,c
 20493  005534  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20494  005536  22DA               	addwfc	fsr2h,f,c
 20495  005538  50DF               	movf	indf2,w,c
 20496  00553A  6E90               	movwf	3984,c	;volatile
 20497                           
 20498                           ; BSR set to: 0
 20499  00553C  0012               	return		;funcret
 20500  00553E                     __end_of_Rtcc_AlarmConfig:
 20501                           	opt stack 0
 20502                           tosu	equ	0xFFF
 20503                           tosh	equ	0xFFE
 20504                           tosl	equ	0xFFD
 20505                           pclath	equ	0xFFA
 20506                           tblptru	equ	0xFF8
 20507                           tblptrh	equ	0xFF7
 20508                           tblptrl	equ	0xFF6
 20509                           tablat	equ	0xFF5
 20510                           prodh	equ	0xFF4
 20511                           prodl	equ	0xFF3
 20512                           intcon	equ	0xFF2
 20513                           intcon2	equ	0xFF1
 20514                           intcon3	equ	0xFF0
 20515                           indf0	equ	0xFEF
 20516                           postinc0	equ	0xFEE
 20517                           plusw0	equ	0xFEB
 20518                           fsr0h	equ	0xFEA
 20519                           fsr0l	equ	0xFE9
 20520                           wreg	equ	0xFE8
 20521                           indf1	equ	0xFE7
 20522                           postinc1	equ	0xFE6
 20523                           postdec1	equ	0xFE5
 20524                           fsr1h	equ	0xFE2
 20525                           fsr1l	equ	0xFE1
 20526                           indf2	equ	0xFDF
 20527                           postinc2	equ	0xFDE
 20528                           postdec2	equ	0xFDD
 20529                           plusw2	equ	0xFDB
 20530                           fsr2h	equ	0xFDA
 20531                           fsr2l	equ	0xFD9
 20532                           status	equ	0xFD8
 20533                           
 20534 ;; *************** function _triggerCmdFsm *****************
 20535 ;; Defined at:
 20536 ;;		line 83 in file "../Source/c/04_App/app_triggerCmd.c"
 20537 ;; Parameters:    Size  Location     Type
 20538 ;;  receivedNumb    2   17[BANK1 ] PTR unsigned char 
 20539 ;;		 -> receivedNumber(13), 
 20540 ;; Auto vars:     Size  Location     Type
 20541 ;;  numberInMemo    1   20[BANK1 ] unsigned char 
 20542 ;;  isComplete      1   19[BANK1 ] unsigned char 
 20543 ;; Return value:  Size  Location     Type
 20544 ;;                  1    wreg      unsigned char 
 20545 ;; Registers used:
 20546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20547 ;; Tracked objects:
 20548 ;;		On entry : 0/0
 20549 ;;		On exit  : 0/0
 20550 ;;		Unchanged: 0/0
 20551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20552 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20553 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20555 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20556 ;;Total ram usage:        4 bytes
 20557 ;; Hardware stack levels used:    1
 20558 ;; Hardware stack levels required when called:   18
 20559 ;; This function calls:
 20560 ;;		_isNumberInMemory
 20561 ;;		_triggerRelay
 20562 ;; This function is called by:
 20563 ;;		_MyApp_Task
 20564 ;; This function uses a non-reentrant model
 20565 ;;
 20566                           
 20567                           	psect	text90
 20568  0051B6                     __ptext90:
 20569                           	opt stack 0
 20570  0051B6                     _triggerCmdFsm:
 20571                           	opt stack 9
 20572                           
 20573                           ;app_triggerCmd.c: 85: static triggerFsmStates currentState = TRIGGER_FSM_CHECK_NUMBER;
 20574                           ;app_triggerCmd.c: 86: bool isComplete = 0;
 20575                           
 20576                           ; BSR set to: 0
 20577                           ;incstack = 0
 20578  0051B6  0E00               	movlw	0
 20579  0051B8  0101               	movlb	1	; () banked
 20580  0051BA  6F13               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20581                           
 20582                           ;app_triggerCmd.c: 87: uint8_t numberInMemory = 1;
 20583  0051BC  0E01               	movlw	1
 20584  0051BE  6F14               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20585                           
 20586                           ;app_triggerCmd.c: 89: switch (currentState)
 20587  0051C0  D026               	goto	l2861
 20588  0051C2                     
 20589                           ; BSR set to: 1
 20590                           ;app_triggerCmd.c: 93: numberInMemory = isNumberInMemory(receivedNumber);
 20591                           
 20592                           ; BSR set to: 1
 20593  0051C2  C111  F100         	movff	triggerCmdFsm@receivedNumber,isNumberInMemory@phoneNumber
 20594  0051C6  C112  F101         	movff	triggerCmdFsm@receivedNumber+1,isNumberInMemory@phoneNumber+1
 20595  0051CA  EC50  F029         	call	_isNumberInMemory	;wreg free
 20596  0051CE  0101               	movlb	1	; () banked
 20597  0051D0  6F14               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20598                           
 20599                           ; BSR set to: 1
 20600                           ;app_triggerCmd.c: 94: if (numberInMemory == 1)
 20601  0051D2  0514               	decf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20602  0051D4  A4D8               	btfss	status,2,c
 20603  0051D6  D002               	goto	l2863
 20604                           
 20605                           ; BSR set to: 1
 20606                           ;app_triggerCmd.c: 95: {
 20607                           ;app_triggerCmd.c: 96: currentState = TRIGGER_FSM_COMPLETE;
 20608  0051D8  0E03               	movlw	3
 20609  0051DA  D00D               	goto	L24
 20610  0051DC                     l2863:
 20611                           
 20612                           ; BSR set to: 1
 20613                           ;app_triggerCmd.c: 98: else if (numberInMemory != 0 && numberInMemory != 1)
 20614                           
 20615                           ; BSR set to: 1
 20616  0051DC  5114               	movf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20617  0051DE  B4D8               	btfsc	status,2,c
 20618  0051E0  D023               	goto	l2866
 20619                           
 20620                           ; BSR set to: 1
 20621  0051E2  0514               	decf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20622  0051E4  B4D8               	btfsc	status,2,c
 20623  0051E6  D020               	goto	l2866
 20624                           
 20625                           ; BSR set to: 1
 20626                           ;app_triggerCmd.c: 99: {
 20627                           ;app_triggerCmd.c: 100: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20628  0051E8  0E01               	movlw	1
 20629  0051EA  D005               	goto	L24
 20630  0051EC                     
 20631                           ; BSR set to: 1
 20632                           ;app_triggerCmd.c: 105: triggerRelay(1);
 20633                           
 20634                           ; BSR set to: 1
 20635  0051EC  0E01               	movlw	1
 20636  0051EE  EC87  F031         	call	_triggerRelay
 20637                           
 20638                           ;app_triggerCmd.c: 106: currentState = TRIGGER_FSM_DEACTIVATE_RELAY;
 20639  0051F2  0E02               	movlw	2
 20640  0051F4  D006               	goto	L25
 20641  0051F6                     L24:
 20642  0051F6  6FD5               	movwf	triggerCmdFsm@currentState& (0+255),b
 20643                           
 20644                           ;app_triggerCmd.c: 107: break;
 20645  0051F8  D017               	goto	l2866
 20646  0051FA                     
 20647                           ; BSR set to: 1
 20648                           ;app_triggerCmd.c: 111: triggerRelay(0);
 20649                           
 20650                           ; BSR set to: 1
 20651  0051FA  0E00               	movlw	0
 20652  0051FC  EC87  F031         	call	_triggerRelay
 20653                           
 20654                           ;app_triggerCmd.c: 112: currentState = TRIGGER_FSM_COMPLETE;
 20655  005200  0E03               	movlw	3
 20656  005202                     L25:
 20657  005202  0101               	movlb	1	; () banked
 20658  005204  D7F8               	goto	L24
 20659  005206                     
 20660                           ; BSR set to: 1
 20661                           ;app_triggerCmd.c: 116: isComplete = 1;
 20662                           
 20663                           ; BSR set to: 1
 20664  005206  0E01               	movlw	1
 20665  005208  6F13               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20666                           
 20667                           ;app_triggerCmd.c: 117: currentState = TRIGGER_FSM_CHECK_NUMBER;
 20668  00520A  0E00               	movlw	0
 20669  00520C  D7F4               	goto	L24
 20670  00520E                     l2861:
 20671                           
 20672                           ; BSR set to: 1
 20673                           
 20674                           ; BSR set to: 1
 20675  00520E  51D5               	movf	triggerCmdFsm@currentState& (0+255),w,b
 20676                           
 20677                           ; Switch size 1, requested type "space"
 20678                           ; Number of cases is 4, Range of values is 0 to 3
 20679                           ; switch strategies available:
 20680                           ; Name         Instructions Cycles
 20681                           ; simple_byte           13     7 (average)
 20682                           ;	Chosen strategy is simple_byte
 20683  005210  0A00               	xorlw	0	; case 0
 20684  005212  B4D8               	btfsc	status,2,c
 20685  005214  D7D6               	goto	l2862
 20686  005216  0A01               	xorlw	1	; case 1
 20687  005218  B4D8               	btfsc	status,2,c
 20688  00521A  D7E8               	goto	l2867
 20689  00521C  0A03               	xorlw	3	; case 2
 20690  00521E  B4D8               	btfsc	status,2,c
 20691  005220  D7EC               	goto	l2868
 20692  005222  0A01               	xorlw	1	; case 3
 20693  005224  B4D8               	btfsc	status,2,c
 20694  005226  D7EF               	goto	l2869
 20695  005228                     l2866:
 20696                           
 20697                           ; BSR set to: 1
 20698                           ;app_triggerCmd.c: 123: return isComplete;
 20699                           
 20700                           ; BSR set to: 1
 20701  005228  5113               	movf	triggerCmdFsm@isComplete& (0+255),w,b
 20702  00522A  0012               	return	
 20703  00522C                     __end_of_triggerCmdFsm:
 20704                           	opt stack 0
 20705                           tosu	equ	0xFFF
 20706                           tosh	equ	0xFFE
 20707                           tosl	equ	0xFFD
 20708                           pclath	equ	0xFFA
 20709                           tblptru	equ	0xFF8
 20710                           tblptrh	equ	0xFF7
 20711                           tblptrl	equ	0xFF6
 20712                           tablat	equ	0xFF5
 20713                           prodh	equ	0xFF4
 20714                           prodl	equ	0xFF3
 20715                           intcon	equ	0xFF2
 20716                           intcon2	equ	0xFF1
 20717                           intcon3	equ	0xFF0
 20718                           indf0	equ	0xFEF
 20719                           postinc0	equ	0xFEE
 20720                           plusw0	equ	0xFEB
 20721                           fsr0h	equ	0xFEA
 20722                           fsr0l	equ	0xFE9
 20723                           wreg	equ	0xFE8
 20724                           indf1	equ	0xFE7
 20725                           postinc1	equ	0xFE6
 20726                           postdec1	equ	0xFE5
 20727                           fsr1h	equ	0xFE2
 20728                           fsr1l	equ	0xFE1
 20729                           indf2	equ	0xFDF
 20730                           postinc2	equ	0xFDE
 20731                           postdec2	equ	0xFDD
 20732                           plusw2	equ	0xFDB
 20733                           fsr2h	equ	0xFDA
 20734                           fsr2l	equ	0xFD9
 20735                           status	equ	0xFD8
 20736                           
 20737 ;; *************** function _triggerRelay *****************
 20738 ;; Defined at:
 20739 ;;		line 64 in file "../Source/c/04_App/app_triggerCmd.c"
 20740 ;; Parameters:    Size  Location     Type
 20741 ;;  isRelayOn       1    wreg     unsigned char 
 20742 ;; Auto vars:     Size  Location     Type
 20743 ;;  isRelayOn       1   38[BANK0 ] unsigned char 
 20744 ;;  txBuffer        2   39[BANK0 ] unsigned char [2]
 20745 ;;  res             1   37[BANK0 ] unsigned char 
 20746 ;; Return value:  Size  Location     Type
 20747 ;;                  1    wreg      unsigned char 
 20748 ;; Registers used:
 20749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20750 ;; Tracked objects:
 20751 ;;		On entry : 0/0
 20752 ;;		On exit  : 0/0
 20753 ;;		Unchanged: 0/0
 20754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20756 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20758 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20759 ;;Total ram usage:        4 bytes
 20760 ;; Hardware stack levels used:    1
 20761 ;; Hardware stack levels required when called:   13
 20762 ;; This function calls:
 20763 ;;		_I2cSlv_SendI2cMsg
 20764 ;; This function is called by:
 20765 ;;		_triggerCmdFsm
 20766 ;; This function uses a non-reentrant model
 20767 ;;
 20768                           
 20769                           	psect	text91
 20770  00630E                     __ptext91:
 20771                           	opt stack 0
 20772  00630E                     _triggerRelay:
 20773                           	opt stack 13
 20774                           
 20775                           ; BSR set to: 1
 20776                           ;incstack = 0
 20777                           ;triggerRelay@isRelayOn stored from wreg
 20778  00630E  0100               	movlb	0	; () banked
 20779  006310  6F86               	movwf	triggerRelay@isRelayOn& (0+255),b
 20780                           
 20781                           ;app_triggerCmd.c: 66: uint8_t txBuffer[2] = {0x50, 0x00};
 20782  006312  C3D0  F087         	movff	triggerRelay@F9003,triggerRelay@txBuffer
 20783  006316  C3D1  F088         	movff	triggerRelay@F9003+1,triggerRelay@txBuffer+1
 20784                           
 20785                           ;app_triggerCmd.c: 67: uint8_t res = 0u;
 20786  00631A  0E00               	movlw	0
 20787  00631C  0100               	movlb	0	; () banked
 20788  00631E  6F85               	movwf	triggerRelay@res& (0+255),b
 20789                           
 20790                           ; BSR set to: 0
 20791                           ;app_triggerCmd.c: 68: if (isRelayOn)
 20792  006320  5186               	movf	triggerRelay@isRelayOn& (0+255),w,b
 20793  006322  B4D8               	btfsc	status,2,c
 20794  006324  D002               	goto	l2855
 20795                           
 20796                           ; BSR set to: 0
 20797                           ;app_triggerCmd.c: 69: {
 20798                           ;app_triggerCmd.c: 70: txBuffer[1] = 0x01;
 20799  006326  0E01               	movlw	1
 20800  006328  6F88               	movwf	(triggerRelay@txBuffer+1)& (0+255),b
 20801  00632A                     l2855:
 20802                           
 20803                           ; BSR set to: 0
 20804                           ;app_triggerCmd.c: 71: }
 20805                           ;app_triggerCmd.c: 72: res = I2cSlv_SendI2cMsg(txBuffer, 1, 2);
 20806                           
 20807                           ; BSR set to: 0
 20808  00632A  0E87               	movlw	low triggerRelay@txBuffer
 20809  00632C  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 20810  00632E  0E00               	movlw	high triggerRelay@txBuffer
 20811  006330  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 20812  006332  0E01               	movlw	1
 20813  006334  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
 20814  006336  0E02               	movlw	2
 20815  006338  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 20816  00633A  ECD3  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 20817  00633E  0100               	movlb	0	; () banked
 20818  006340  6F85               	movwf	triggerRelay@res& (0+255),b
 20819  006342  0012               	return	
 20820  006344                     __end_of_triggerRelay:
 20821                           	opt stack 0
 20822                           tosu	equ	0xFFF
 20823                           tosh	equ	0xFFE
 20824                           tosl	equ	0xFFD
 20825                           pclath	equ	0xFFA
 20826                           tblptru	equ	0xFF8
 20827                           tblptrh	equ	0xFF7
 20828                           tblptrl	equ	0xFF6
 20829                           tablat	equ	0xFF5
 20830                           prodh	equ	0xFF4
 20831                           prodl	equ	0xFF3
 20832                           intcon	equ	0xFF2
 20833                           intcon2	equ	0xFF1
 20834                           intcon3	equ	0xFF0
 20835                           indf0	equ	0xFEF
 20836                           postinc0	equ	0xFEE
 20837                           plusw0	equ	0xFEB
 20838                           fsr0h	equ	0xFEA
 20839                           fsr0l	equ	0xFE9
 20840                           wreg	equ	0xFE8
 20841                           indf1	equ	0xFE7
 20842                           postinc1	equ	0xFE6
 20843                           postdec1	equ	0xFE5
 20844                           fsr1h	equ	0xFE2
 20845                           fsr1l	equ	0xFE1
 20846                           indf2	equ	0xFDF
 20847                           postinc2	equ	0xFDE
 20848                           postdec2	equ	0xFDD
 20849                           plusw2	equ	0xFDB
 20850                           fsr2h	equ	0xFDA
 20851                           fsr2l	equ	0xFD9
 20852                           status	equ	0xFD8
 20853                           
 20854 ;; *************** function _initFsm *****************
 20855 ;; Defined at:
 20856 ;;		line 224 in file "../Source/c/04_App/app_init.c"
 20857 ;; Parameters:    Size  Location     Type
 20858 ;;		None
 20859 ;; Auto vars:     Size  Location     Type
 20860 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 20861 ;; Return value:  Size  Location     Type
 20862 ;;                  1    wreg      unsigned char 
 20863 ;; Registers used:
 20864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20865 ;; Tracked objects:
 20866 ;;		On entry : 0/0
 20867 ;;		On exit  : 0/0
 20868 ;;		Unchanged: 0/0
 20869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20871 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20873 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20874 ;;Total ram usage:        1 bytes
 20875 ;; Hardware stack levels used:    1
 20876 ;; Hardware stack levels required when called:   18
 20877 ;; This function calls:
 20878 ;;		_GetCallerNumber
 20879 ;;		_Led_SetLedStatus
 20880 ;;		_initEeprom
 20881 ;;		_initGprsModem
 20882 ;;		_saveNumberInMemory
 20883 ;;		_savePreamble
 20884 ;;		_waitSetupCall
 20885 ;; This function is called by:
 20886 ;;		_MyApp_Task
 20887 ;; This function uses a non-reentrant model
 20888 ;;
 20889                           
 20890                           	psect	text92
 20891  00455E                     __ptext92:
 20892                           	opt stack 0
 20893  00455E                     _initFsm:
 20894                           	opt stack 9
 20895                           
 20896                           ;app_init.c: 226: static initFsmStates currentState = INIT_FSM_MODEM;
 20897                           ;app_init.c: 227: bool isInitialized = 0;
 20898                           
 20899                           ; BSR set to: 0
 20900                           ;incstack = 0
 20901  00455E  0E00               	movlw	0
 20902  004560  0101               	movlb	1	; () banked
 20903  004562  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20904                           
 20905                           ;app_init.c: 229: switch (currentState)
 20906  004564  D03D               	goto	l2695
 20907  004566                     
 20908                           ; BSR set to: 1
 20909                           ;app_init.c: 232: if (initGprsModem())
 20910                           
 20911                           ; BSR set to: 1
 20912  004566  ECB0  F026         	call	_initGprsModem	;wreg free
 20913  00456A  0900               	iorlw	0
 20914  00456C  B4D8               	btfsc	status,2,c
 20915  00456E  D048               	goto	l2698
 20916                           
 20917                           ;app_init.c: 233: {
 20918                           ;app_init.c: 234: currentState = INIT_FSM_EEPROM;
 20919  004570  0E01               	movlw	1
 20920  004572  D027               	goto	L29
 20921  004574                     
 20922                           ; BSR set to: 1
 20923                           ;app_init.c: 239: if (initEeprom())
 20924                           
 20925                           ; BSR set to: 1
 20926  004574  ECCF  F027         	call	_initEeprom	;wreg free
 20927  004578  0900               	iorlw	0
 20928  00457A  B4D8               	btfsc	status,2,c
 20929  00457C  D041               	goto	l2698
 20930                           
 20931                           ;app_init.c: 240: {
 20932                           ;app_init.c: 241: currentState = INIT_FSM_WAIT_CMD;
 20933  00457E  0E02               	movlw	2
 20934  004580  0101               	movlb	1	; () banked
 20935  004582  6FD8               	movwf	initFsm@currentState& (0+255),b
 20936                           
 20937                           ;app_init.c: 242: setupCallTicks = 0;
 20938  004584  0E00               	movlw	0
 20939  004586  0103               	movlb	3	; () banked
 20940  004588  6FC1               	movwf	(_setupCallTicks+1)& (0+255),b
 20941  00458A  0E00               	movlw	0
 20942  00458C  6FC0               	movwf	_setupCallTicks& (0+255),b
 20943                           
 20944                           ; BSR set to: 3
 20945                           ;app_init.c: 243: }
 20946                           ;app_init.c: 244: break;
 20947  00458E  D038               	goto	l2698
 20948  004590                     
 20949                           ;app_init.c: 247: if (isMemoryEmpty)
 20950                           
 20951                           ; BSR set to: 3
 20952  004590  0101               	movlb	1	; () banked
 20953  004592  51FE               	movf	_isMemoryEmpty& (0+255),w,b
 20954  004594  B4D8               	btfsc	status,2,c
 20955  004596  D010               	goto	l2702
 20956                           
 20957                           ; BSR set to: 1
 20958                           ;app_init.c: 248: {
 20959                           ;app_init.c: 249: if (waitSetupCall())
 20960  004598  EC9E  F02E         	call	_waitSetupCall	;wreg free
 20961  00459C  0900               	iorlw	0
 20962  00459E  B4D8               	btfsc	status,2,c
 20963  0045A0  D02F               	goto	l2698
 20964                           
 20965                           ;app_init.c: 250: {
 20966                           ;app_init.c: 251: saveNumberInMemory(16, GetCallerNumber());
 20967  0045A2  ECA2  F031         	call	_GetCallerNumber	;wreg free
 20968  0045A6  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
 20969  0045AA  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
 20970  0045AE  0E10               	movlw	16
 20971  0045B0  EC67  F034         	call	_saveNumberInMemory
 20972                           
 20973                           ;app_init.c: 252: currentState = INIT_FSM_PREAMBLE;
 20974  0045B4  0E03               	movlw	3
 20975  0045B6  D005               	goto	L29
 20976  0045B8                     l2702:
 20977                           
 20978                           ; BSR set to: 1
 20979                           ;app_init.c: 256: else
 20980                           ;app_init.c: 257: {
 20981                           ;app_init.c: 258: currentState = INIT_FSM_COMPLETE;
 20982                           
 20983                           ; BSR set to: 1
 20984  0045B8  0E04               	movlw	4
 20985  0045BA  D004               	goto	L28
 20986  0045BC                     
 20987                           ; BSR set to: 1
 20988                           ;app_init.c: 263: savePreamble();
 20989                           
 20990                           ; BSR set to: 1
 20991  0045BC  EC5A  F034         	call	_savePreamble	;wreg free
 20992                           
 20993                           ;app_init.c: 264: currentState = INIT_FSM_COMPLETE;
 20994  0045C0  0E04               	movlw	4
 20995  0045C2                     L29:
 20996  0045C2  0101               	movlb	1	; () banked
 20997  0045C4                     L28:
 20998  0045C4  6FD8               	movwf	initFsm@currentState& (0+255),b
 20999                           
 21000                           ;app_init.c: 265: break;
 21001  0045C6  D01C               	goto	l2698
 21002  0045C8                     
 21003                           ; BSR set to: 1
 21004                           ;app_init.c: 268: Led_SetLedStatus(1u, LED_STS_ON);
 21005                           
 21006                           ; BSR set to: 1
 21007  0045C8  0E01               	movlw	1
 21008  0045CA  0100               	movlb	0	; () banked
 21009  0045CC  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21010  0045CE  0E01               	movlw	1
 21011  0045D0  EC6C  F032         	call	_Led_SetLedStatus
 21012                           
 21013                           ;app_init.c: 269: currentState = INIT_FSM_MODEM;
 21014  0045D4  0E00               	movlw	0
 21015  0045D6  0101               	movlb	1	; () banked
 21016  0045D8  6FD8               	movwf	initFsm@currentState& (0+255),b
 21017                           
 21018                           ; BSR set to: 1
 21019                           ;app_init.c: 270: isInitialized = 1;
 21020  0045DA  0E01               	movlw	1
 21021  0045DC  6F03               	movwf	initFsm@isInitialized& (0+255),b
 21022                           
 21023                           ; BSR set to: 1
 21024                           ;app_init.c: 275: }
 21025                           
 21026                           ; BSR set to: 1
 21027                           ;app_init.c: 274: break;
 21028                           
 21029                           ;app_init.c: 273: default:
 21030                           
 21031                           ;app_init.c: 271: break;
 21032  0045DE  D010               	goto	l2698
 21033  0045E0                     l2695:
 21034                           
 21035                           ; BSR set to: 1
 21036                           
 21037                           ; BSR set to: 1
 21038  0045E0  51D8               	movf	initFsm@currentState& (0+255),w,b
 21039                           
 21040                           ; Switch size 1, requested type "space"
 21041                           ; Number of cases is 5, Range of values is 0 to 4
 21042                           ; switch strategies available:
 21043                           ; Name         Instructions Cycles
 21044                           ; simple_byte           16     9 (average)
 21045                           ;	Chosen strategy is simple_byte
 21046  0045E2  0A00               	xorlw	0	; case 0
 21047  0045E4  B4D8               	btfsc	status,2,c
 21048  0045E6  D7BF               	goto	l2696
 21049  0045E8  0A01               	xorlw	1	; case 1
 21050  0045EA  B4D8               	btfsc	status,2,c
 21051  0045EC  D7C3               	goto	l2699
 21052  0045EE  0A03               	xorlw	3	; case 2
 21053  0045F0  B4D8               	btfsc	status,2,c
 21054  0045F2  D7CE               	goto	l2701
 21055  0045F4  0A01               	xorlw	1	; case 3
 21056  0045F6  B4D8               	btfsc	status,2,c
 21057  0045F8  D7E1               	goto	l2705
 21058  0045FA  0A07               	xorlw	7	; case 4
 21059  0045FC  B4D8               	btfsc	status,2,c
 21060  0045FE  D7E4               	goto	l2706
 21061  004600                     l2698:
 21062                           
 21063                           ;app_init.c: 276: return isInitialized;
 21064                           
 21065                           ; BSR set to: 1
 21066  004600  0101               	movlb	1	; () banked
 21067  004602  5103               	movf	initFsm@isInitialized& (0+255),w,b
 21068  004604  0012               	return	
 21069  004606                     __end_of_initFsm:
 21070                           	opt stack 0
 21071                           tosu	equ	0xFFF
 21072                           tosh	equ	0xFFE
 21073                           tosl	equ	0xFFD
 21074                           pclath	equ	0xFFA
 21075                           tblptru	equ	0xFF8
 21076                           tblptrh	equ	0xFF7
 21077                           tblptrl	equ	0xFF6
 21078                           tablat	equ	0xFF5
 21079                           prodh	equ	0xFF4
 21080                           prodl	equ	0xFF3
 21081                           intcon	equ	0xFF2
 21082                           intcon2	equ	0xFF1
 21083                           intcon3	equ	0xFF0
 21084                           indf0	equ	0xFEF
 21085                           postinc0	equ	0xFEE
 21086                           plusw0	equ	0xFEB
 21087                           fsr0h	equ	0xFEA
 21088                           fsr0l	equ	0xFE9
 21089                           wreg	equ	0xFE8
 21090                           indf1	equ	0xFE7
 21091                           postinc1	equ	0xFE6
 21092                           postdec1	equ	0xFE5
 21093                           fsr1h	equ	0xFE2
 21094                           fsr1l	equ	0xFE1
 21095                           indf2	equ	0xFDF
 21096                           postinc2	equ	0xFDE
 21097                           postdec2	equ	0xFDD
 21098                           plusw2	equ	0xFDB
 21099                           fsr2h	equ	0xFDA
 21100                           fsr2l	equ	0xFD9
 21101                           status	equ	0xFD8
 21102                           
 21103 ;; *************** function _waitSetupCall *****************
 21104 ;; Defined at:
 21105 ;;		line 194 in file "../Source/c/04_App/app_init.c"
 21106 ;; Parameters:    Size  Location     Type
 21107 ;;		None
 21108 ;; Auto vars:     Size  Location     Type
 21109 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 21110 ;; Return value:  Size  Location     Type
 21111 ;;                  1    wreg      unsigned char 
 21112 ;; Registers used:
 21113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21114 ;; Tracked objects:
 21115 ;;		On entry : 0/0
 21116 ;;		On exit  : 0/0
 21117 ;;		Unchanged: 0/0
 21118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21120 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21122 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21123 ;;Total ram usage:        1 bytes
 21124 ;; Hardware stack levels used:    1
 21125 ;; Hardware stack levels required when called:   15
 21126 ;; This function calls:
 21127 ;;		_Led_SetLedStatus
 21128 ;;		_getSetupCall
 21129 ;;		_secondsAppTimer
 21130 ;; This function is called by:
 21131 ;;		_initFsm
 21132 ;; This function uses a non-reentrant model
 21133 ;;
 21134                           
 21135                           	psect	text93
 21136  005D3C                     __ptext93:
 21137                           	opt stack 0
 21138  005D3C                     _waitSetupCall:
 21139                           	opt stack 11
 21140                           
 21141                           ;app_init.c: 196: bool isCallArrived = 0;
 21142                           
 21143                           ; BSR set to: 1
 21144                           ;incstack = 0
 21145  005D3C  0E00               	movlw	0
 21146  005D3E  0100               	movlb	0	; () banked
 21147  005D40  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21148                           
 21149                           ; BSR set to: 0
 21150                           ;app_init.c: 197: if (!secondsAppTimer(30, &setupCallTicks, 0))
 21151  005D42  0EC0               	movlw	low _setupCallTicks
 21152  005D44  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21153  005D46  0E03               	movlw	high _setupCallTicks
 21154  005D48  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21155  005D4A  0E00               	movlw	0
 21156  005D4C  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21157  005D4E  0E1E               	movlw	30
 21158  005D50  ECAB  F023         	call	_secondsAppTimer
 21159  005D54  0900               	iorlw	0
 21160  005D56  A4D8               	btfss	status,2,c
 21161  005D58  D00F               	goto	l2684
 21162                           
 21163                           ;app_init.c: 198: {
 21164                           ;app_init.c: 199: Led_SetLedStatus(1u, LED_STS_BLINK);
 21165  005D5A  0E03               	movlw	3
 21166  005D5C  0100               	movlb	0	; () banked
 21167  005D5E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21168  005D60  0E01               	movlw	1
 21169  005D62  EC6C  F032         	call	_Led_SetLedStatus
 21170                           
 21171                           ;app_init.c: 200: if (getSetupCall())
 21172  005D66  ECD7  F033         	call	_getSetupCall	;wreg free
 21173  005D6A  0900               	iorlw	0
 21174  005D6C  B4D8               	btfsc	status,2,c
 21175  005D6E  D00A               	goto	l2686
 21176                           
 21177                           ;app_init.c: 201: {
 21178                           ;app_init.c: 202: isCallArrived = 1;
 21179  005D70  0E01               	movlw	1
 21180  005D72  0100               	movlb	0	; () banked
 21181  005D74  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21182                           
 21183                           ; BSR set to: 0
 21184                           ;app_init.c: 203: }
 21185                           ;app_init.c: 204: }
 21186  005D76  D006               	goto	l2686
 21187  005D78                     l2684:
 21188                           
 21189                           ;app_init.c: 205: else
 21190                           ;app_init.c: 206: {
 21191                           ;app_init.c: 207: Led_SetLedStatus(1u, LED_STS_ON);
 21192                           
 21193                           ; BSR set to: 0
 21194  005D78  0E01               	movlw	1
 21195  005D7A  0100               	movlb	0	; () banked
 21196  005D7C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21197  005D7E  0E01               	movlw	1
 21198  005D80  EC6C  F032         	call	_Led_SetLedStatus
 21199  005D84                     l2686:
 21200                           
 21201                           ;app_init.c: 208: }
 21202                           ;app_init.c: 209: return isCallArrived;
 21203  005D84  0100               	movlb	0	; () banked
 21204  005D86  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21205  005D88  0012               	return	
 21206  005D8A                     __end_of_waitSetupCall:
 21207                           	opt stack 0
 21208                           tosu	equ	0xFFF
 21209                           tosh	equ	0xFFE
 21210                           tosl	equ	0xFFD
 21211                           pclath	equ	0xFFA
 21212                           tblptru	equ	0xFF8
 21213                           tblptrh	equ	0xFF7
 21214                           tblptrl	equ	0xFF6
 21215                           tablat	equ	0xFF5
 21216                           prodh	equ	0xFF4
 21217                           prodl	equ	0xFF3
 21218                           intcon	equ	0xFF2
 21219                           intcon2	equ	0xFF1
 21220                           intcon3	equ	0xFF0
 21221                           indf0	equ	0xFEF
 21222                           postinc0	equ	0xFEE
 21223                           plusw0	equ	0xFEB
 21224                           fsr0h	equ	0xFEA
 21225                           fsr0l	equ	0xFE9
 21226                           wreg	equ	0xFE8
 21227                           indf1	equ	0xFE7
 21228                           postinc1	equ	0xFE6
 21229                           postdec1	equ	0xFE5
 21230                           fsr1h	equ	0xFE2
 21231                           fsr1l	equ	0xFE1
 21232                           indf2	equ	0xFDF
 21233                           postinc2	equ	0xFDE
 21234                           postdec2	equ	0xFDD
 21235                           plusw2	equ	0xFDB
 21236                           fsr2h	equ	0xFDA
 21237                           fsr2l	equ	0xFD9
 21238                           status	equ	0xFD8
 21239                           
 21240 ;; *************** function _getSetupCall *****************
 21241 ;; Defined at:
 21242 ;;		line 178 in file "../Source/c/04_App/app_init.c"
 21243 ;; Parameters:    Size  Location     Type
 21244 ;;		None
 21245 ;; Auto vars:     Size  Location     Type
 21246 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21247 ;; Return value:  Size  Location     Type
 21248 ;;                  1    wreg      unsigned char 
 21249 ;; Registers used:
 21250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21251 ;; Tracked objects:
 21252 ;;		On entry : 0/0
 21253 ;;		On exit  : 0/0
 21254 ;;		Unchanged: 0/0
 21255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21259 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21260 ;;Total ram usage:        1 bytes
 21261 ;; Hardware stack levels used:    1
 21262 ;; Hardware stack levels required when called:   14
 21263 ;; This function calls:
 21264 ;;		_Mdm_HangPhoneCall
 21265 ;;		_Mdm_IsRinging
 21266 ;; This function is called by:
 21267 ;;		_waitSetupCall
 21268 ;; This function uses a non-reentrant model
 21269 ;;
 21270                           
 21271                           	psect	text94
 21272  0067AE                     __ptext94:
 21273                           	opt stack 0
 21274  0067AE                     _getSetupCall:
 21275                           	opt stack 11
 21276                           
 21277                           ;app_init.c: 180: bool isCalledReceived = 0;
 21278                           
 21279                           ; BSR set to: 0
 21280                           ;incstack = 0
 21281  0067AE  0E00               	movlw	0
 21282  0067B0  0100               	movlb	0	; () banked
 21283  0067B2  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21284                           
 21285                           ; BSR set to: 0
 21286                           ;app_init.c: 182: if (Mdm_IsRinging())
 21287  0067B4  EC3D  F033         	call	_Mdm_IsRinging	;wreg free
 21288  0067B8  0900               	iorlw	0
 21289  0067BA  B4D8               	btfsc	status,2,c
 21290  0067BC  D005               	goto	l2680
 21291                           
 21292                           ;app_init.c: 183: {
 21293                           ;app_init.c: 184: Mdm_HangPhoneCall();
 21294  0067BE  ECD7  F034         	call	_Mdm_HangPhoneCall	;wreg free
 21295                           
 21296                           ;app_init.c: 185: isCalledReceived = 1;
 21297  0067C2  0E01               	movlw	1
 21298  0067C4  0100               	movlb	0	; () banked
 21299  0067C6  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21300  0067C8                     l2680:
 21301                           
 21302                           ;app_init.c: 186: }
 21303                           ;app_init.c: 187: return isCalledReceived;
 21304                           
 21305                           ; BSR set to: 0
 21306  0067C8  0100               	movlb	0	; () banked
 21307  0067CA  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21308  0067CC  0012               	return	
 21309  0067CE                     __end_of_getSetupCall:
 21310                           	opt stack 0
 21311                           tosu	equ	0xFFF
 21312                           tosh	equ	0xFFE
 21313                           tosl	equ	0xFFD
 21314                           pclath	equ	0xFFA
 21315                           tblptru	equ	0xFF8
 21316                           tblptrh	equ	0xFF7
 21317                           tblptrl	equ	0xFF6
 21318                           tablat	equ	0xFF5
 21319                           prodh	equ	0xFF4
 21320                           prodl	equ	0xFF3
 21321                           intcon	equ	0xFF2
 21322                           intcon2	equ	0xFF1
 21323                           intcon3	equ	0xFF0
 21324                           indf0	equ	0xFEF
 21325                           postinc0	equ	0xFEE
 21326                           plusw0	equ	0xFEB
 21327                           fsr0h	equ	0xFEA
 21328                           fsr0l	equ	0xFE9
 21329                           wreg	equ	0xFE8
 21330                           indf1	equ	0xFE7
 21331                           postinc1	equ	0xFE6
 21332                           postdec1	equ	0xFE5
 21333                           fsr1h	equ	0xFE2
 21334                           fsr1l	equ	0xFE1
 21335                           indf2	equ	0xFDF
 21336                           postinc2	equ	0xFDE
 21337                           postdec2	equ	0xFDD
 21338                           plusw2	equ	0xFDB
 21339                           fsr2h	equ	0xFDA
 21340                           fsr2l	equ	0xFD9
 21341                           status	equ	0xFD8
 21342                           
 21343 ;; *************** function _savePreamble *****************
 21344 ;; Defined at:
 21345 ;;		line 212 in file "../Source/c/04_App/app_init.c"
 21346 ;; Parameters:    Size  Location     Type
 21347 ;;		None
 21348 ;; Auto vars:     Size  Location     Type
 21349 ;;		None
 21350 ;; Return value:  Size  Location     Type
 21351 ;;                  1    wreg      void 
 21352 ;; Registers used:
 21353 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21354 ;; Tracked objects:
 21355 ;;		On entry : 0/0
 21356 ;;		On exit  : 0/0
 21357 ;;		Unchanged: 0/0
 21358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21363 ;;Total ram usage:        0 bytes
 21364 ;; Hardware stack levels used:    1
 21365 ;; Hardware stack levels required when called:   14
 21366 ;; This function calls:
 21367 ;;		_Eeprom_Write
 21368 ;;		_initPreamble
 21369 ;; This function is called by:
 21370 ;;		_initFsm
 21371 ;; This function uses a non-reentrant model
 21372 ;;
 21373                           
 21374                           	psect	text95
 21375  0068B4                     __ptext95:
 21376                           	opt stack 0
 21377  0068B4                     _savePreamble:
 21378                           	opt stack 12
 21379                           
 21380                           ;app_init.c: 214: Eeprom_Write(0, initPreamble(), 4);
 21381                           
 21382                           ; BSR set to: 0
 21383                           ;incstack = 0
 21384  0068B4  EC15  F034         	call	_initPreamble	;wreg free
 21385  0068B8  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21386  0068BC  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21387  0068C0  0E04               	movlw	4
 21388  0068C2  0100               	movlb	0	; () banked
 21389  0068C4  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21390  0068C6  0E00               	movlw	0
 21391  0068C8  ECAB  F02D         	call	_Eeprom_Write
 21392  0068CC  0012               	return		;funcret
 21393  0068CE                     __end_of_savePreamble:
 21394                           	opt stack 0
 21395                           tosu	equ	0xFFF
 21396                           tosh	equ	0xFFE
 21397                           tosl	equ	0xFFD
 21398                           pclath	equ	0xFFA
 21399                           tblptru	equ	0xFF8
 21400                           tblptrh	equ	0xFF7
 21401                           tblptrl	equ	0xFF6
 21402                           tablat	equ	0xFF5
 21403                           prodh	equ	0xFF4
 21404                           prodl	equ	0xFF3
 21405                           intcon	equ	0xFF2
 21406                           intcon2	equ	0xFF1
 21407                           intcon3	equ	0xFF0
 21408                           indf0	equ	0xFEF
 21409                           postinc0	equ	0xFEE
 21410                           plusw0	equ	0xFEB
 21411                           fsr0h	equ	0xFEA
 21412                           fsr0l	equ	0xFE9
 21413                           wreg	equ	0xFE8
 21414                           indf1	equ	0xFE7
 21415                           postinc1	equ	0xFE6
 21416                           postdec1	equ	0xFE5
 21417                           fsr1h	equ	0xFE2
 21418                           fsr1l	equ	0xFE1
 21419                           indf2	equ	0xFDF
 21420                           postinc2	equ	0xFDE
 21421                           postdec2	equ	0xFDD
 21422                           plusw2	equ	0xFDB
 21423                           fsr2h	equ	0xFDA
 21424                           fsr2l	equ	0xFD9
 21425                           status	equ	0xFD8
 21426                           
 21427 ;; *************** function _initPreamble *****************
 21428 ;; Defined at:
 21429 ;;		line 284 in file "../Source/c/04_App/app_init.c"
 21430 ;; Parameters:    Size  Location     Type
 21431 ;;		None
 21432 ;; Auto vars:     Size  Location     Type
 21433 ;;		None
 21434 ;; Return value:  Size  Location     Type
 21435 ;;                  2   29[BANK0 ] PTR unsigned char 
 21436 ;; Registers used:
 21437 ;;		wreg, status,2, status,0
 21438 ;; Tracked objects:
 21439 ;;		On entry : 0/0
 21440 ;;		On exit  : 0/0
 21441 ;;		Unchanged: 0/0
 21442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21443 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21446 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21447 ;;Total ram usage:        2 bytes
 21448 ;; Hardware stack levels used:    1
 21449 ;; Hardware stack levels required when called:   11
 21450 ;; This function calls:
 21451 ;;		Nothing
 21452 ;; This function is called by:
 21453 ;;		_savePreamble
 21454 ;; This function uses a non-reentrant model
 21455 ;;
 21456                           
 21457                           	psect	text96
 21458  00682A                     __ptext96:
 21459                           	opt stack 0
 21460  00682A                     _initPreamble:
 21461                           	opt stack 14
 21462                           
 21463                           ;app_init.c: 286: memoryPreamble[0] = 'U';
 21464                           
 21465                           ;incstack = 0
 21466  00682A  0E55               	movlw	85
 21467  00682C  0103               	movlb	3	; () banked
 21468  00682E  6FAA               	movwf	_memoryPreamble& (0+255),b
 21469                           
 21470                           ;app_init.c: 287: memoryPreamble[1] = 'S';
 21471  006830  0E53               	movlw	83
 21472  006832  6FAB               	movwf	(_memoryPreamble+1)& (0+255),b
 21473                           
 21474                           ;app_init.c: 288: memoryPreamble[2] = 'I';
 21475  006834  0E49               	movlw	73
 21476  006836  6FAC               	movwf	(_memoryPreamble+2)& (0+255),b
 21477                           
 21478                           ;app_init.c: 289: memoryPreamble[3] = 'M';
 21479  006838  0E4D               	movlw	77
 21480  00683A  6FAD               	movwf	(_memoryPreamble+3)& (0+255),b
 21481                           
 21482                           ; BSR set to: 3
 21483                           ;app_init.c: 290: return memoryPreamble;
 21484  00683C  0EAA               	movlw	low _memoryPreamble
 21485  00683E  0100               	movlb	0	; () banked
 21486  006840  6F7D               	movwf	?_initPreamble& (0+255),b
 21487  006842  0E03               	movlw	high _memoryPreamble
 21488  006844  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 21489  006846  0012               	return	
 21490  006848                     __end_of_initPreamble:
 21491                           	opt stack 0
 21492                           tosu	equ	0xFFF
 21493                           tosh	equ	0xFFE
 21494                           tosl	equ	0xFFD
 21495                           pclath	equ	0xFFA
 21496                           tblptru	equ	0xFF8
 21497                           tblptrh	equ	0xFF7
 21498                           tblptrl	equ	0xFF6
 21499                           tablat	equ	0xFF5
 21500                           prodh	equ	0xFF4
 21501                           prodl	equ	0xFF3
 21502                           intcon	equ	0xFF2
 21503                           intcon2	equ	0xFF1
 21504                           intcon3	equ	0xFF0
 21505                           indf0	equ	0xFEF
 21506                           postinc0	equ	0xFEE
 21507                           plusw0	equ	0xFEB
 21508                           fsr0h	equ	0xFEA
 21509                           fsr0l	equ	0xFE9
 21510                           wreg	equ	0xFE8
 21511                           indf1	equ	0xFE7
 21512                           postinc1	equ	0xFE6
 21513                           postdec1	equ	0xFE5
 21514                           fsr1h	equ	0xFE2
 21515                           fsr1l	equ	0xFE1
 21516                           indf2	equ	0xFDF
 21517                           postinc2	equ	0xFDE
 21518                           postdec2	equ	0xFDD
 21519                           plusw2	equ	0xFDB
 21520                           fsr2h	equ	0xFDA
 21521                           fsr2l	equ	0xFD9
 21522                           status	equ	0xFD8
 21523                           
 21524 ;; *************** function _initGprsModem *****************
 21525 ;; Defined at:
 21526 ;;		line 86 in file "../Source/c/04_App/app_init.c"
 21527 ;; Parameters:    Size  Location     Type
 21528 ;;		None
 21529 ;; Auto vars:     Size  Location     Type
 21530 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 21531 ;; Return value:  Size  Location     Type
 21532 ;;                  1    wreg      unsigned char 
 21533 ;; Registers used:
 21534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21535 ;; Tracked objects:
 21536 ;;		On entry : 0/0
 21537 ;;		On exit  : 0/0
 21538 ;;		Unchanged: 0/0
 21539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21541 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21543 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21544 ;;Total ram usage:        1 bytes
 21545 ;; Hardware stack levels used:    1
 21546 ;; Hardware stack levels required when called:   14
 21547 ;; This function calls:
 21548 ;;		_Mdm_SetSmsFormat
 21549 ;;		_Uart_WriteConstString
 21550 ;;		_secondsAppTimer
 21551 ;; This function is called by:
 21552 ;;		_initFsm
 21553 ;; This function uses a non-reentrant model
 21554 ;;
 21555                           
 21556                           	psect	text97
 21557  004D60                     __ptext97:
 21558                           	opt stack 0
 21559  004D60                     _initGprsModem:
 21560                           	opt stack 12
 21561                           
 21562                           ;app_init.c: 88: static uint16_t modemCounter = 0;
 21563                           ;app_init.c: 89: static modemStates currentState = MODEM_INIT;
 21564                           ;app_init.c: 90: bool isInitialized = 0;
 21565                           
 21566                           ; BSR set to: 0
 21567                           ;incstack = 0
 21568  004D60  0E00               	movlw	0
 21569  004D62  0100               	movlb	0	; () banked
 21570  004D64  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21571                           
 21572                           ;app_init.c: 92: switch(currentState)
 21573  004D66  D035               	goto	l2652
 21574  004D68                     
 21575                           ;app_init.c: 95: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 21576                           
 21577                           ; BSR set to: 0
 21578  004D68  0E03               	movlw	3
 21579  004D6A  0100               	movlb	0	; () banked
 21580  004D6C  19D2               	xorwf	_MdmStatus& (0+255),w,b
 21581  004D6E  B4D8               	btfsc	status,2,c
 21582  004D70  D003               	goto	u14340
 21583                           
 21584                           ; BSR set to: 0
 21585  004D72  05D2               	decf	_MdmStatus& (0+255),w,b
 21586  004D74  A4D8               	btfss	status,2,c
 21587  004D76  D03B               	goto	l2658
 21588  004D78                     u14340:
 21589                           
 21590                           ; BSR set to: 0
 21591                           ;app_init.c: 96: {
 21592                           ;app_init.c: 97: if (secondsAppTimer(5, &modemCounter, 0))
 21593                           
 21594                           ; BSR set to: 0
 21595  004D78  0EBE               	movlw	low initGprsModem@modemCounter
 21596  004D7A  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21597  004D7C  0E03               	movlw	high initGprsModem@modemCounter
 21598  004D7E  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21599  004D80  0E00               	movlw	0
 21600  004D82  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21601  004D84  0E05               	movlw	5
 21602  004D86  ECAB  F023         	call	_secondsAppTimer
 21603  004D8A  0900               	iorlw	0
 21604  004D8C  B4D8               	btfsc	status,2,c
 21605  004D8E  D02F               	goto	l2658
 21606                           
 21607                           ;app_init.c: 98: {
 21608                           ;app_init.c: 99: Mdm_SetSmsFormat(1);
 21609  004D90  0E01               	movlw	1
 21610  004D92  EC76  F02E         	call	_Mdm_SetSmsFormat
 21611                           
 21612                           ;app_init.c: 100: currentState = MODEM_DELETE_SMS;
 21613  004D96  0E01               	movlw	1
 21614  004D98  D013               	goto	L31
 21615  004D9A                     
 21616                           ; BSR set to: 1
 21617                           ;app_init.c: 106: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21618                           
 21619                           ; BSR set to: 1
 21620  004D9A  0EFA               	movlw	low STR_30
 21621  004D9C  0100               	movlb	0	; () banked
 21622  004D9E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21623  004DA0  0EFE               	movlw	high STR_30
 21624  004DA2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21625  004DA4  0E01               	movlw	1
 21626  004DA6  EC52  F030         	call	_Uart_WriteConstString
 21627                           
 21628                           ;app_init.c: 107: currentState = MODEM_SET_CALLER_ID;
 21629  004DAA  0E02               	movlw	2
 21630  004DAC  D009               	goto	L31
 21631  004DAE                     
 21632                           ; BSR set to: 1
 21633                           ;app_init.c: 111: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 21634                           
 21635                           ; BSR set to: 1
 21636  004DAE  0EAA               	movlw	low STR_31
 21637  004DB0  0100               	movlb	0	; () banked
 21638  004DB2  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21639  004DB4  0EFF               	movlw	high STR_31
 21640  004DB6  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21641  004DB8  0E01               	movlw	1
 21642  004DBA  EC52  F030         	call	_Uart_WriteConstString
 21643                           
 21644                           ;app_init.c: 112: currentState = MODEM_INIT_COMPLETE;
 21645  004DBE  0E03               	movlw	3
 21646  004DC0                     L31:
 21647  004DC0  0101               	movlb	1	; () banked
 21648  004DC2  6FDA               	movwf	initGprsModem@currentState& (0+255),b
 21649                           
 21650                           ;app_init.c: 113: break;
 21651  004DC4  D014               	goto	l2658
 21652  004DC6                     
 21653                           ; BSR set to: 1
 21654                           ;app_init.c: 116: currentState = MODEM_INIT;
 21655                           
 21656                           ; BSR set to: 1
 21657  004DC6  0E00               	movlw	0
 21658  004DC8  6FDA               	movwf	initGprsModem@currentState& (0+255),b
 21659                           
 21660                           ;app_init.c: 117: isInitialized = 1;
 21661  004DCA  0E01               	movlw	1
 21662  004DCC  0100               	movlb	0	; () banked
 21663  004DCE  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21664                           
 21665                           ; BSR set to: 0
 21666                           ;app_init.c: 122: }
 21667                           
 21668                           ; BSR set to: 0
 21669                           ;app_init.c: 121: break;
 21670                           
 21671                           ;app_init.c: 120: default:
 21672                           
 21673                           ;app_init.c: 118: break;
 21674  004DD0  D00E               	goto	l2658
 21675  004DD2                     l2652:
 21676                           
 21677                           ; BSR set to: 0
 21678                           
 21679                           ; BSR set to: 0
 21680  004DD2  0101               	movlb	1	; () banked
 21681  004DD4  51DA               	movf	initGprsModem@currentState& (0+255),w,b
 21682                           
 21683                           ; Switch size 1, requested type "space"
 21684                           ; Number of cases is 4, Range of values is 0 to 3
 21685                           ; switch strategies available:
 21686                           ; Name         Instructions Cycles
 21687                           ; simple_byte           13     7 (average)
 21688                           ;	Chosen strategy is simple_byte
 21689  004DD6  0A00               	xorlw	0	; case 0
 21690  004DD8  B4D8               	btfsc	status,2,c
 21691  004DDA  D7C6               	goto	l2653
 21692  004DDC  0A01               	xorlw	1	; case 1
 21693  004DDE  B4D8               	btfsc	status,2,c
 21694  004DE0  D7DC               	goto	l2659
 21695  004DE2  0A03               	xorlw	3	; case 2
 21696  004DE4  B4D8               	btfsc	status,2,c
 21697  004DE6  D7E3               	goto	l2660
 21698  004DE8  0A01               	xorlw	1	; case 3
 21699  004DEA  B4D8               	btfsc	status,2,c
 21700  004DEC  D7EC               	goto	l2661
 21701  004DEE                     l2658:
 21702                           
 21703                           ;app_init.c: 123: return isInitialized;
 21704                           
 21705                           ; BSR set to: 1
 21706  004DEE  0100               	movlb	0	; () banked
 21707  004DF0  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 21708  004DF2  0012               	return	
 21709  004DF4                     __end_of_initGprsModem:
 21710                           	opt stack 0
 21711                           tosu	equ	0xFFF
 21712                           tosh	equ	0xFFE
 21713                           tosl	equ	0xFFD
 21714                           pclath	equ	0xFFA
 21715                           tblptru	equ	0xFF8
 21716                           tblptrh	equ	0xFF7
 21717                           tblptrl	equ	0xFF6
 21718                           tablat	equ	0xFF5
 21719                           prodh	equ	0xFF4
 21720                           prodl	equ	0xFF3
 21721                           intcon	equ	0xFF2
 21722                           intcon2	equ	0xFF1
 21723                           intcon3	equ	0xFF0
 21724                           indf0	equ	0xFEF
 21725                           postinc0	equ	0xFEE
 21726                           plusw0	equ	0xFEB
 21727                           fsr0h	equ	0xFEA
 21728                           fsr0l	equ	0xFE9
 21729                           wreg	equ	0xFE8
 21730                           indf1	equ	0xFE7
 21731                           postinc1	equ	0xFE6
 21732                           postdec1	equ	0xFE5
 21733                           fsr1h	equ	0xFE2
 21734                           fsr1l	equ	0xFE1
 21735                           indf2	equ	0xFDF
 21736                           postinc2	equ	0xFDE
 21737                           postdec2	equ	0xFDD
 21738                           plusw2	equ	0xFDB
 21739                           fsr2h	equ	0xFDA
 21740                           fsr2l	equ	0xFD9
 21741                           status	equ	0xFD8
 21742                           
 21743 ;; *************** function _secondsAppTimer *****************
 21744 ;; Defined at:
 21745 ;;		line 67 in file "../Source/c/04_App/app_utils.c"
 21746 ;; Parameters:    Size  Location     Type
 21747 ;;  seconds         1    wreg     unsigned char 
 21748 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21749 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 21750 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21751 ;; Auto vars:     Size  Location     Type
 21752 ;;  seconds         1   47[BANK0 ] unsigned char 
 21753 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21754 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21755 ;; Return value:  Size  Location     Type
 21756 ;;                  1    wreg      unsigned char 
 21757 ;; Registers used:
 21758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21759 ;; Tracked objects:
 21760 ;;		On entry : 0/0
 21761 ;;		On exit  : 0/0
 21762 ;;		Unchanged: 0/0
 21763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21764 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21765 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21766 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21767 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21768 ;;Total ram usage:        9 bytes
 21769 ;; Hardware stack levels used:    1
 21770 ;; Hardware stack levels required when called:   12
 21771 ;; This function calls:
 21772 ;;		___lwdiv
 21773 ;;		___wmul
 21774 ;; This function is called by:
 21775 ;;		_initGprsModem
 21776 ;;		_waitSetupCall
 21777 ;;		_blinkForSeconds
 21778 ;; This function uses a non-reentrant model
 21779 ;;
 21780                           
 21781                           	psect	text98
 21782  004756                     __ptext98:
 21783                           	opt stack 0
 21784  004756                     _secondsAppTimer:
 21785                           	opt stack 13
 21786                           
 21787                           ; BSR set to: 0
 21788                           ;incstack = 0
 21789                           ;secondsAppTimer@seconds stored from wreg
 21790  004756  0100               	movlb	0	; () banked
 21791  004758  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21792                           
 21793                           ;app_utils.c: 69: bool isExpired = 1;
 21794  00475A  0E01               	movlw	1
 21795  00475C  0100               	movlb	0	; () banked
 21796  00475E  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21797                           
 21798                           ; BSR set to: 0
 21799                           ;app_utils.c: 70: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 21800  004760  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21801  004764  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21802  004766  0E03               	movlw	3
 21803  004768  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21804  00476A  0EE8               	movlw	232
 21805  00476C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21806  00476E  ECF2  F032         	call	___wmul	;wreg free
 21807  004772  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21808  004776  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21809  00477A  0E00               	movlw	0
 21810  00477C  0100               	movlb	0	; () banked
 21811  00477E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21812  004780  0E64               	movlw	100
 21813  004782  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21814  004784  EC81  F02D         	call	___lwdiv	;wreg free
 21815  004788  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21816  00478C  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21817                           
 21818                           ;app_utils.c: 72: if (*counter < destinationTicks)
 21819  004790  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21820  004794  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21821  004798  0100               	movlb	0	; () banked
 21822  00479A  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21823  00479C  5CDE               	subwf	postinc2,w,c
 21824  00479E  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21825  0047A0  58DE               	subwfb	postinc2,w,c
 21826  0047A2  B0D8               	btfsc	status,0,c
 21827  0047A4  D009               	goto	l2728
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;app_utils.c: 73: {
 21831                           ;app_utils.c: 74: *counter += 1;
 21832  0047A6  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21833  0047AA  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21834  0047AE  2ADE               	incf	postinc2,f,c
 21835  0047B0  0E00               	movlw	0
 21836  0047B2  22DD               	addwfc	postdec2,f,c
 21837                           
 21838                           ; BSR set to: 0
 21839                           ;app_utils.c: 75: isExpired = 0;
 21840  0047B4  0E00               	movlw	0
 21841  0047B6  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21842  0047B8                     l2728:
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;app_utils.c: 76: }
 21846                           ;app_utils.c: 77: if (*counter == destinationTicks)
 21847                           
 21848                           ; BSR set to: 0
 21849  0047B8  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21850  0047BC  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21851  0047C0  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21852  0047C2  18DE               	xorwf	postinc2,w,c
 21853  0047C4  E117               	bnz	l14117
 21854  0047C6  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21855  0047C8  18DE               	xorwf	postinc2,w,c
 21856  0047CA  A4D8               	btfss	status,2,c
 21857  0047CC  D013               	goto	l2731
 21858                           
 21859                           ; BSR set to: 0
 21860                           ;app_utils.c: 78: {
 21861                           ;app_utils.c: 79: if (isCyclic)
 21862  0047CE  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21863  0047D0  B4D8               	btfsc	status,2,c
 21864  0047D2  D008               	goto	l2730
 21865                           
 21866                           ; BSR set to: 0
 21867                           ;app_utils.c: 80: {
 21868                           ;app_utils.c: 81: *counter = 0;
 21869  0047D4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21870  0047D8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21871  0047DC  0E00               	movlw	0
 21872  0047DE  6EDE               	movwf	postinc2,c
 21873  0047E0  0E00               	movlw	0
 21874  0047E2  D007               	goto	L32
 21875  0047E4                     l2730:
 21876                           
 21877                           ; BSR set to: 0
 21878                           ;app_utils.c: 83: else
 21879                           ;app_utils.c: 84: {
 21880                           ;app_utils.c: 85: *counter = 0xFFFF;
 21881                           
 21882                           ; BSR set to: 0
 21883  0047E4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21884  0047E8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21885  0047EC  0EFF               	movlw	255
 21886  0047EE  6EDE               	movwf	postinc2,c
 21887  0047F0  0EFF               	movlw	255
 21888  0047F2                     L32:
 21889  0047F2  6EDD               	movwf	postdec2,c
 21890  0047F4                     l2731:
 21891  0047F4                     l14117:
 21892                           
 21893                           ; BSR set to: 0
 21894                           ;app_utils.c: 86: }
 21895                           ;app_utils.c: 87: }
 21896                           ;app_utils.c: 88: return isExpired;
 21897  0047F4  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21898  0047F6  0012               	return	
 21899  0047F8                     __end_of_secondsAppTimer:
 21900                           	opt stack 0
 21901                           tosu	equ	0xFFF
 21902                           tosh	equ	0xFFE
 21903                           tosl	equ	0xFFD
 21904                           pclath	equ	0xFFA
 21905                           tblptru	equ	0xFF8
 21906                           tblptrh	equ	0xFF7
 21907                           tblptrl	equ	0xFF6
 21908                           tablat	equ	0xFF5
 21909                           prodh	equ	0xFF4
 21910                           prodl	equ	0xFF3
 21911                           intcon	equ	0xFF2
 21912                           intcon2	equ	0xFF1
 21913                           intcon3	equ	0xFF0
 21914                           indf0	equ	0xFEF
 21915                           postinc0	equ	0xFEE
 21916                           plusw0	equ	0xFEB
 21917                           fsr0h	equ	0xFEA
 21918                           fsr0l	equ	0xFE9
 21919                           wreg	equ	0xFE8
 21920                           indf1	equ	0xFE7
 21921                           postinc1	equ	0xFE6
 21922                           postdec1	equ	0xFE5
 21923                           fsr1h	equ	0xFE2
 21924                           fsr1l	equ	0xFE1
 21925                           indf2	equ	0xFDF
 21926                           postinc2	equ	0xFDE
 21927                           postdec2	equ	0xFDD
 21928                           plusw2	equ	0xFDB
 21929                           fsr2h	equ	0xFDA
 21930                           fsr2l	equ	0xFD9
 21931                           status	equ	0xFD8
 21932                           
 21933 ;; *************** function _Mdm_SetSmsFormat *****************
 21934 ;; Defined at:
 21935 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21936 ;; Parameters:    Size  Location     Type
 21937 ;;  TextFormat      1    wreg     unsigned char 
 21938 ;; Auto vars:     Size  Location     Type
 21939 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 21940 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 21941 ;;  Index           1   35[BANK0 ] unsigned char 
 21942 ;; Return value:  Size  Location     Type
 21943 ;;                  1    wreg      void 
 21944 ;; Registers used:
 21945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21946 ;; Tracked objects:
 21947 ;;		On entry : 0/0
 21948 ;;		On exit  : 0/0
 21949 ;;		Unchanged: 0/0
 21950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21952 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21954 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21955 ;;Total ram usage:       22 bytes
 21956 ;; Hardware stack levels used:    1
 21957 ;; Hardware stack levels required when called:   13
 21958 ;; This function calls:
 21959 ;;		_Uart_WriteString
 21960 ;; This function is called by:
 21961 ;;		_initGprsModem
 21962 ;; This function uses a non-reentrant model
 21963 ;;
 21964                           
 21965                           	psect	text99
 21966  005CEC                     __ptext99:
 21967                           	opt stack 0
 21968  005CEC                     _Mdm_SetSmsFormat:
 21969                           	opt stack 12
 21970                           
 21971                           ; BSR set to: 0
 21972                           ;incstack = 0
 21973                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 21974  005CEC  0100               	movlb	0	; () banked
 21975  005CEE  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 21976                           
 21977                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 21978                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 21979  005CF0  0E00               	movlw	0
 21980  005CF2  0100               	movlb	0	; () banked
 21981  005CF4  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 21982                           
 21983                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 21984  005CF6  0E41               	movlw	65
 21985  005CF8  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 21986                           
 21987                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 21988  005CFA  0E54               	movlw	84
 21989  005CFC  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 21990                           
 21991                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 21992  005CFE  0E2B               	movlw	43
 21993  005D00  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 21994                           
 21995                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 21996  005D02  0E43               	movlw	67
 21997  005D04  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 21998                           
 21999                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22000  005D06  0E4D               	movlw	77
 22001  005D08  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22002                           
 22003                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22004  005D0A  0E47               	movlw	71
 22005  005D0C  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22006                           
 22007                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22008  005D0E  0E46               	movlw	70
 22009  005D10  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22010                           
 22011                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22012  005D12  0E3D               	movlw	61
 22013  005D14  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22014                           
 22015                           ; BSR set to: 0
 22016                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22017  005D16  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22018  005D18  A4D8               	btfss	status,2,c
 22019  005D1A  D002               	goto	l1121
 22020                           
 22021                           ; BSR set to: 0
 22022                           ;mdm_gsm_gprs.c: 854: {
 22023                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22024  005D1C  0E31               	movlw	49
 22025  005D1E  D001               	goto	L33
 22026  005D20                     l1121:
 22027                           
 22028                           ; BSR set to: 0
 22029                           ;mdm_gsm_gprs.c: 857: else
 22030                           ;mdm_gsm_gprs.c: 858: {
 22031                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22032                           
 22033                           ; BSR set to: 0
 22034  005D20  0E30               	movlw	48
 22035  005D22                     L33:
 22036  005D22  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22037                           
 22038                           ; BSR set to: 0
 22039                           ;mdm_gsm_gprs.c: 860: }
 22040                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22041  005D24  0E0D               	movlw	13
 22042  005D26  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22043                           
 22044                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22045  005D28  0E00               	movlw	0
 22046  005D2A  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22047                           
 22048                           ; BSR set to: 0
 22049                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22050  005D2C  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22051  005D2E  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22052  005D30  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22053  005D32  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22054  005D34  0E01               	movlw	1
 22055  005D36  ECF2  F030         	call	_Uart_WriteString
 22056  005D3A  0012               	return		;funcret
 22057  005D3C                     __end_of_Mdm_SetSmsFormat:
 22058                           	opt stack 0
 22059                           tosu	equ	0xFFF
 22060                           tosh	equ	0xFFE
 22061                           tosl	equ	0xFFD
 22062                           pclath	equ	0xFFA
 22063                           tblptru	equ	0xFF8
 22064                           tblptrh	equ	0xFF7
 22065                           tblptrl	equ	0xFF6
 22066                           tablat	equ	0xFF5
 22067                           prodh	equ	0xFF4
 22068                           prodl	equ	0xFF3
 22069                           intcon	equ	0xFF2
 22070                           intcon2	equ	0xFF1
 22071                           intcon3	equ	0xFF0
 22072                           indf0	equ	0xFEF
 22073                           postinc0	equ	0xFEE
 22074                           plusw0	equ	0xFEB
 22075                           fsr0h	equ	0xFEA
 22076                           fsr0l	equ	0xFE9
 22077                           wreg	equ	0xFE8
 22078                           indf1	equ	0xFE7
 22079                           postinc1	equ	0xFE6
 22080                           postdec1	equ	0xFE5
 22081                           fsr1h	equ	0xFE2
 22082                           fsr1l	equ	0xFE1
 22083                           indf2	equ	0xFDF
 22084                           postinc2	equ	0xFDE
 22085                           postdec2	equ	0xFDD
 22086                           plusw2	equ	0xFDB
 22087                           fsr2h	equ	0xFDA
 22088                           fsr2l	equ	0xFD9
 22089                           status	equ	0xFD8
 22090                           
 22091 ;; *************** function _initEeprom *****************
 22092 ;; Defined at:
 22093 ;;		line 130 in file "../Source/c/04_App/app_init.c"
 22094 ;; Parameters:    Size  Location     Type
 22095 ;;		None
 22096 ;; Auto vars:     Size  Location     Type
 22097 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22098 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22099 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22100 ;; Return value:  Size  Location     Type
 22101 ;;                  1    wreg      unsigned char 
 22102 ;; Registers used:
 22103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22104 ;; Tracked objects:
 22105 ;;		On entry : 0/0
 22106 ;;		On exit  : 0/0
 22107 ;;		Unchanged: 0/0
 22108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22110 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22112 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22113 ;;Total ram usage:        3 bytes
 22114 ;; Hardware stack levels used:    1
 22115 ;; Hardware stack levels required when called:   17
 22116 ;; This function calls:
 22117 ;;		_Eeprom_Read
 22118 ;; This function is called by:
 22119 ;;		_initFsm
 22120 ;; This function uses a non-reentrant model
 22121 ;;
 22122                           
 22123                           	psect	text100
 22124  004F9E                     __ptext100:
 22125                           	opt stack 0
 22126  004F9E                     _initEeprom:
 22127                           	opt stack 9
 22128                           
 22129                           ;app_init.c: 132: const uint8_t addressToRead = 0;
 22130                           
 22131                           ;incstack = 0
 22132  004F9E  0E00               	movlw	0
 22133  004FA0  0101               	movlb	1	; () banked
 22134  004FA2  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22135                           
 22136                           ;app_init.c: 133: static eepromStates currentState = EEPROM_INIT;
 22137                           ;app_init.c: 134: EepromStsType memoryOpResult = OP_PENDING;
 22138  004FA4  0E02               	movlw	2
 22139  004FA6  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22140                           
 22141                           ;app_init.c: 135: bool isInitialized = 0;
 22142  004FA8  0E00               	movlw	0
 22143  004FAA  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22144                           
 22145                           ;app_init.c: 137: switch (currentState)
 22146  004FAC  D032               	goto	l2668
 22147  004FAE                     
 22148                           ; BSR set to: 1
 22149                           ;app_init.c: 140: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 22150                           
 22151                           ; BSR set to: 1
 22152  004FAE  0EAA               	movlw	low _memoryPreamble
 22153  004FB0  0100               	movlb	0	; () banked
 22154  004FB2  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22155  004FB4  0E03               	movlw	high _memoryPreamble
 22156  004FB6  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22157  004FB8  0E04               	movlw	4
 22158  004FBA  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22159  004FBC  0E00               	movlw	0
 22160  004FBE  EC2D  F02D         	call	_Eeprom_Read
 22161  004FC2  0101               	movlb	1	; () banked
 22162  004FC4  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22163                           
 22164                           ; BSR set to: 1
 22165                           ;app_init.c: 141: if (memoryOpResult != OP_PENDING)
 22166  004FC6  0E02               	movlw	2
 22167  004FC8  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22168  004FCA  B4D8               	btfsc	status,2,c
 22169  004FCC  D02C               	goto	l2673
 22170                           
 22171                           ; BSR set to: 1
 22172                           ;app_init.c: 142: {
 22173                           ;app_init.c: 143: if (memoryPreamble[0] == 'U' &&
 22174                           ;app_init.c: 144: memoryPreamble[1] == 'S' &&
 22175                           ;app_init.c: 145: memoryPreamble[2] == 'I' &&
 22176                           ;app_init.c: 146: memoryPreamble[3] == 'M')
 22177  004FCE  0E55               	movlw	85
 22178  004FD0  0103               	movlb	3	; () banked
 22179  004FD2  19AA               	xorwf	_memoryPreamble& (0+255),w,b
 22180  004FD4  A4D8               	btfss	status,2,c
 22181  004FD6  D00E               	goto	l2671
 22182                           
 22183                           ; BSR set to: 3
 22184  004FD8  0E53               	movlw	83
 22185  004FDA  19AB               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22186  004FDC  A4D8               	btfss	status,2,c
 22187  004FDE  D00A               	goto	l2671
 22188                           
 22189                           ; BSR set to: 3
 22190  004FE0  0E49               	movlw	73
 22191  004FE2  19AC               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22192  004FE4  A4D8               	btfss	status,2,c
 22193  004FE6  D006               	goto	l2671
 22194                           
 22195                           ; BSR set to: 3
 22196  004FE8  0E4D               	movlw	77
 22197  004FEA  19AD               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22198  004FEC  A4D8               	btfss	status,2,c
 22199  004FEE  D002               	goto	l2671
 22200                           
 22201                           ; BSR set to: 3
 22202                           ;app_init.c: 147: {
 22203                           ;app_init.c: 148: currentState = EEPROM_NOT_EMPTY;
 22204  004FF0  0E02               	movlw	2
 22205  004FF2  D001               	goto	L34
 22206  004FF4                     l2671:
 22207                           
 22208                           ;app_init.c: 150: else
 22209                           ;app_init.c: 151: {
 22210                           ;app_init.c: 152: currentState = EEPROM_EMPTY;
 22211                           
 22212                           ; BSR set to: 1
 22213  004FF4  0E01               	movlw	1
 22214  004FF6                     L34:
 22215  004FF6  0101               	movlb	1	; () banked
 22216  004FF8  D003               	goto	L35
 22217  004FFA                     
 22218                           ; BSR set to: 1
 22219                           ;app_init.c: 158: isInitialized = 1;
 22220                           
 22221                           ; BSR set to: 1
 22222  004FFA  0E01               	movlw	1
 22223  004FFC  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22224                           
 22225                           ;app_init.c: 159: currentState = EEPROM_INIT;
 22226  004FFE  0E00               	movlw	0
 22227  005000                     L35:
 22228  005000  6FD9               	movwf	initEeprom@currentState& (0+255),b
 22229                           
 22230                           ;app_init.c: 160: break;
 22231  005002  D011               	goto	l2673
 22232  005004                     
 22233                           ; BSR set to: 1
 22234                           ;app_init.c: 163: currentState = EEPROM_INIT;
 22235                           
 22236                           ; BSR set to: 1
 22237  005004  0E00               	movlw	0
 22238  005006  6FD9               	movwf	initEeprom@currentState& (0+255),b
 22239                           
 22240                           ;app_init.c: 164: isInitialized = 1;
 22241  005008  0E01               	movlw	1
 22242  00500A  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22243                           
 22244                           ;app_init.c: 165: isMemoryEmpty = 0;
 22245  00500C  0E00               	movlw	0
 22246  00500E  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 22247                           
 22248                           ; BSR set to: 1
 22249                           ;app_init.c: 170: }
 22250                           
 22251                           ; BSR set to: 1
 22252                           ;app_init.c: 169: break;
 22253                           
 22254                           ;app_init.c: 168: default:
 22255                           
 22256                           ;app_init.c: 166: break;
 22257  005010  D00A               	goto	l2673
 22258  005012                     l2668:
 22259                           
 22260                           ; BSR set to: 1
 22261                           
 22262                           ; BSR set to: 1
 22263  005012  51D9               	movf	initEeprom@currentState& (0+255),w,b
 22264                           
 22265                           ; Switch size 1, requested type "space"
 22266                           ; Number of cases is 3, Range of values is 0 to 2
 22267                           ; switch strategies available:
 22268                           ; Name         Instructions Cycles
 22269                           ; simple_byte           10     6 (average)
 22270                           ;	Chosen strategy is simple_byte
 22271  005014  0A00               	xorlw	0	; case 0
 22272  005016  B4D8               	btfsc	status,2,c
 22273  005018  D7CA               	goto	l2669
 22274  00501A  0A01               	xorlw	1	; case 1
 22275  00501C  B4D8               	btfsc	status,2,c
 22276  00501E  D7ED               	goto	l2674
 22277  005020  0A03               	xorlw	3	; case 2
 22278  005022  B4D8               	btfsc	status,2,c
 22279  005024  D7EF               	goto	l2675
 22280  005026                     l2673:
 22281                           
 22282                           ; BSR set to: 1
 22283                           ;app_init.c: 171: return isInitialized;
 22284                           
 22285                           ; BSR set to: 1
 22286  005026  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 22287  005028  0012               	return	
 22288  00502A                     __end_of_initEeprom:
 22289                           	opt stack 0
 22290                           tosu	equ	0xFFF
 22291                           tosh	equ	0xFFE
 22292                           tosl	equ	0xFFD
 22293                           pclath	equ	0xFFA
 22294                           tblptru	equ	0xFF8
 22295                           tblptrh	equ	0xFF7
 22296                           tblptrl	equ	0xFF6
 22297                           tablat	equ	0xFF5
 22298                           prodh	equ	0xFF4
 22299                           prodl	equ	0xFF3
 22300                           intcon	equ	0xFF2
 22301                           intcon2	equ	0xFF1
 22302                           intcon3	equ	0xFF0
 22303                           indf0	equ	0xFEF
 22304                           postinc0	equ	0xFEE
 22305                           plusw0	equ	0xFEB
 22306                           fsr0h	equ	0xFEA
 22307                           fsr0l	equ	0xFE9
 22308                           wreg	equ	0xFE8
 22309                           indf1	equ	0xFE7
 22310                           postinc1	equ	0xFE6
 22311                           postdec1	equ	0xFE5
 22312                           fsr1h	equ	0xFE2
 22313                           fsr1l	equ	0xFE1
 22314                           indf2	equ	0xFDF
 22315                           postinc2	equ	0xFDE
 22316                           postdec2	equ	0xFDD
 22317                           plusw2	equ	0xFDB
 22318                           fsr2h	equ	0xFDA
 22319                           fsr2l	equ	0xFD9
 22320                           status	equ	0xFD8
 22321                           
 22322 ;; *************** function _detectCmd *****************
 22323 ;; Defined at:
 22324 ;;		line 114 in file "../Source/c/04_App/app.c"
 22325 ;; Parameters:    Size  Location     Type
 22326 ;;		None
 22327 ;; Auto vars:     Size  Location     Type
 22328 ;;  currentState    1   53[BANK0 ] enum E9003
 22329 ;; Return value:  Size  Location     Type
 22330 ;;                  1    wreg      enum E9003
 22331 ;; Registers used:
 22332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22333 ;; Tracked objects:
 22334 ;;		On entry : 0/0
 22335 ;;		On exit  : 0/0
 22336 ;;		Unchanged: 0/0
 22337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22341 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22342 ;;Total ram usage:        1 bytes
 22343 ;; Hardware stack levels used:    1
 22344 ;; Hardware stack levels required when called:   14
 22345 ;; This function calls:
 22346 ;;		_GetCallerNumber
 22347 ;;		_GetLastInteractionNumber
 22348 ;;		_Mdm_GetSmsData
 22349 ;;		_Mdm_HangPhoneCall
 22350 ;;		_Mdm_IsRinging
 22351 ;;		_Mdm_IsSmsReceived
 22352 ;;		_Mdm_RequestSmsData
 22353 ;;		_StringCopy
 22354 ;;		_Uart_WriteConstString
 22355 ;;		_parseCommand
 22356 ;; This function is called by:
 22357 ;;		_MyApp_Task
 22358 ;; This function uses a non-reentrant model
 22359 ;;
 22360                           
 22361                           	psect	text101
 22362  0049D8                     __ptext101:
 22363                           	opt stack 0
 22364  0049D8                     _detectCmd:
 22365                           	opt stack 13
 22366                           
 22367                           ;app.c: 116: gateFsmStates currentState = GATE_WAIT_EVENT;
 22368                           
 22369                           ; BSR set to: 1
 22370                           ;incstack = 0
 22371  0049D8  0E01               	movlw	1
 22372  0049DA  0100               	movlb	0	; () banked
 22373  0049DC  6F95               	movwf	detectCmd@currentState& (0+255),b
 22374                           
 22375                           ; BSR set to: 0
 22376                           ;app.c: 117: if (Mdm_IsSmsReceived())
 22377  0049DE  EC2B  F033         	call	_Mdm_IsSmsReceived	;wreg free
 22378  0049E2  0900               	iorlw	0
 22379  0049E4  A4D8               	btfss	status,2,c
 22380                           
 22381                           ;app.c: 118: {
 22382                           ;app.c: 119: Mdm_RequestSmsData();
 22383  0049E6  ECF9  F034         	call	_Mdm_RequestSmsData	;wreg free
 22384                           
 22385                           ;app.c: 120: }
 22386                           ;app.c: 121: if (Mdm_GetSmsData(smsText) == SmsDataReady)
 22387  0049EA  0E93               	movlw	low _smsText
 22388  0049EC  0100               	movlb	0	; () banked
 22389  0049EE  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
 22390  0049F0  0E04               	movlw	high _smsText
 22391  0049F2  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
 22392  0049F4  EC9F  F02A         	call	_Mdm_GetSmsData	;wreg free
 22393  0049F8  06E8               	decf	wreg,f,c
 22394  0049FA  A4D8               	btfss	status,2,c
 22395  0049FC  D01D               	goto	l2583
 22396                           
 22397                           ;app.c: 122: {
 22398                           ;app.c: 123: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
 22399  0049FE  0E2F               	movlw	low STR_29
 22400  004A00  0100               	movlb	0	; () banked
 22401  004A02  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22402  004A04  0EFF               	movlw	high STR_29
 22403  004A06  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22404  004A08  0E01               	movlw	1
 22405  004A0A  EC52  F030         	call	_Uart_WriteConstString
 22406                           
 22407                           ;app.c: 124: currentState = parseCommand();
 22408  004A0E  ECA2  F017         	call	_parseCommand	;wreg free
 22409  004A12  0100               	movlb	0	; () banked
 22410  004A14  6F95               	movwf	detectCmd@currentState& (0+255),b
 22411                           
 22412                           ; BSR set to: 0
 22413                           ;app.c: 125: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
 22414  004A16  EC25  F035         	call	_GetLastInteractionNumber	;wreg free
 22415  004A1A  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
 22416  004A1E  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
 22417  004A22  0E2F               	movlw	low _receivedNumber
 22418  004A24  0100               	movlb	0	; () banked
 22419  004A26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22420  004A28  0E03               	movlw	high _receivedNumber
 22421  004A2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22422  004A2C  0E00               	movlw	0
 22423  004A2E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22424  004A30  0E0D               	movlw	13
 22425  004A32  6F89               	movwf	StringCopy@Len& (0+255),b
 22426  004A34  EC6C  F02B         	call	_StringCopy	;wreg free
 22427  004A38                     l2583:
 22428                           
 22429                           ;app.c: 126: }
 22430                           ;app.c: 127: if (Mdm_IsRinging())
 22431  004A38  EC3D  F033         	call	_Mdm_IsRinging	;wreg free
 22432  004A3C  0900               	iorlw	0
 22433  004A3E  B4D8               	btfsc	status,2,c
 22434  004A40  D016               	goto	l2584
 22435                           
 22436                           ;app.c: 128: {
 22437                           ;app.c: 129: Mdm_HangPhoneCall();
 22438  004A42  ECD7  F034         	call	_Mdm_HangPhoneCall	;wreg free
 22439                           
 22440                           ;app.c: 130: currentState = GATE_TRIGGER_CMD;
 22441  004A46  0E04               	movlw	4
 22442  004A48  0100               	movlb	0	; () banked
 22443  004A4A  6F95               	movwf	detectCmd@currentState& (0+255),b
 22444                           
 22445                           ; BSR set to: 0
 22446                           ;app.c: 131: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
 22447  004A4C  ECA2  F031         	call	_GetCallerNumber	;wreg free
 22448  004A50  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
 22449  004A54  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
 22450  004A58  0E2F               	movlw	low _receivedNumber
 22451  004A5A  0100               	movlb	0	; () banked
 22452  004A5C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22453  004A5E  0E03               	movlw	high _receivedNumber
 22454  004A60  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22455  004A62  0E00               	movlw	0
 22456  004A64  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22457  004A66  0E0D               	movlw	13
 22458  004A68  6F89               	movwf	StringCopy@Len& (0+255),b
 22459  004A6A  EC6C  F02B         	call	_StringCopy	;wreg free
 22460  004A6E                     l2584:
 22461                           
 22462                           ;app.c: 132: }
 22463                           ;app.c: 133: return currentState;
 22464  004A6E  0100               	movlb	0	; () banked
 22465  004A70  5195               	movf	detectCmd@currentState& (0+255),w,b
 22466  004A72  0012               	return	
 22467  004A74                     __end_of_detectCmd:
 22468                           	opt stack 0
 22469                           tosu	equ	0xFFF
 22470                           tosh	equ	0xFFE
 22471                           tosl	equ	0xFFD
 22472                           pclath	equ	0xFFA
 22473                           tblptru	equ	0xFF8
 22474                           tblptrh	equ	0xFF7
 22475                           tblptrl	equ	0xFF6
 22476                           tablat	equ	0xFF5
 22477                           prodh	equ	0xFF4
 22478                           prodl	equ	0xFF3
 22479                           intcon	equ	0xFF2
 22480                           intcon2	equ	0xFF1
 22481                           intcon3	equ	0xFF0
 22482                           indf0	equ	0xFEF
 22483                           postinc0	equ	0xFEE
 22484                           plusw0	equ	0xFEB
 22485                           fsr0h	equ	0xFEA
 22486                           fsr0l	equ	0xFE9
 22487                           wreg	equ	0xFE8
 22488                           indf1	equ	0xFE7
 22489                           postinc1	equ	0xFE6
 22490                           postdec1	equ	0xFE5
 22491                           fsr1h	equ	0xFE2
 22492                           fsr1l	equ	0xFE1
 22493                           indf2	equ	0xFDF
 22494                           postinc2	equ	0xFDE
 22495                           postdec2	equ	0xFDD
 22496                           plusw2	equ	0xFDB
 22497                           fsr2h	equ	0xFDA
 22498                           fsr2l	equ	0xFD9
 22499                           status	equ	0xFD8
 22500                           
 22501 ;; *************** function _parseCommand *****************
 22502 ;; Defined at:
 22503 ;;		line 74 in file "../Source/c/04_App/app.c"
 22504 ;; Parameters:    Size  Location     Type
 22505 ;;		None
 22506 ;; Auto vars:     Size  Location     Type
 22507 ;;  resetCmd        4   48[BANK0 ] const unsigned char [4]
 22508 ;;  deleteNumber    4   44[BANK0 ] const unsigned char [4]
 22509 ;;  addNumberCmd    4   40[BANK0 ] const unsigned char [4]
 22510 ;;  state           1   52[BANK0 ] enum E9003
 22511 ;; Return value:  Size  Location     Type
 22512 ;;                  1    wreg      enum E9003
 22513 ;; Registers used:
 22514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22515 ;; Tracked objects:
 22516 ;;		On entry : 0/0
 22517 ;;		On exit  : 0/0
 22518 ;;		Unchanged: 0/0
 22519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22521 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22523 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22524 ;;Total ram usage:       13 bytes
 22525 ;; Hardware stack levels used:    1
 22526 ;; Hardware stack levels required when called:   12
 22527 ;; This function calls:
 22528 ;;		_StringCompare
 22529 ;;		_isNumberValid
 22530 ;; This function is called by:
 22531 ;;		_detectCmd
 22532 ;; This function uses a non-reentrant model
 22533 ;;
 22534                           
 22535                           	psect	text102
 22536  002F44                     __ptext102:
 22537                           	opt stack 0
 22538  002F44                     _parseCommand:
 22539                           	opt stack 14
 22540                           
 22541                           ;app.c: 76: const uint8_t addNumberCmd[] = {'A', 'D', 'D', ';'};
 22542                           
 22543                           ; BSR set to: 0
 22544                           ;incstack = 0
 22545  002F44  0E2A               	movlw	low parseCommand@F9017
 22546  002F46  6EF6               	movwf	tblptrl,c
 22547  002F48                     	if	1	;There is more than 1 active tblptr byte
 22548  002F48  0EFC               	movlw	high parseCommand@F9017
 22549  002F4A  6EF7               	movwf	tblptrh,c
 22550  002F4C                     	endif
 22551  002F4C                     	if	0	;There are less than 3 active tblptr bytes
 22552  002F4C                     	endif
 22553  002F4C  0009               	tblrd		*+
 22554  002F4E  CFF5 F088          	movff	tablat,parseCommand@addNumberCmd
 22555  002F52  0009               	tblrd		*+
 22556  002F54  CFF5 F089          	movff	tablat,parseCommand@addNumberCmd+1
 22557  002F58  0009               	tblrd		*+
 22558  002F5A  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd+2
 22559  002F5E  000A               	tblrd		*-
 22560  002F60  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+3
 22561                           
 22562                           ;app.c: 77: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L', ';'};
 22563  002F64  0E26               	movlw	low parseCommand@F9019
 22564  002F66  6EF6               	movwf	tblptrl,c
 22565  002F68                     	if	1	;There is more than 1 active tblptr byte
 22566  002F68  0EFC               	movlw	high parseCommand@F9019
 22567  002F6A  6EF7               	movwf	tblptrh,c
 22568  002F6C                     	endif
 22569  002F6C                     	if	0	;There are less than 3 active tblptr bytes
 22570  002F6C                     	endif
 22571  002F6C  0009               	tblrd		*+
 22572  002F6E  CFF5 F08C          	movff	tablat,parseCommand@deleteNumberCmd
 22573  002F72  0009               	tblrd		*+
 22574  002F74  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd+1
 22575  002F78  0009               	tblrd		*+
 22576  002F7A  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+2
 22577  002F7E  000A               	tblrd		*-
 22578  002F80  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+3
 22579                           
 22580                           ;app.c: 78: const uint8_t resetCmd[] = {'R', 'E', 'S', ';'};
 22581  002F84  0E22               	movlw	low parseCommand@F9021
 22582  002F86  6EF6               	movwf	tblptrl,c
 22583  002F88                     	if	1	;There is more than 1 active tblptr byte
 22584  002F88  0EFC               	movlw	high parseCommand@F9021
 22585  002F8A  6EF7               	movwf	tblptrh,c
 22586  002F8C                     	endif
 22587  002F8C                     	if	0	;There are less than 3 active tblptr bytes
 22588  002F8C                     	endif
 22589  002F8C  0009               	tblrd		*+
 22590  002F8E  CFF5 F090          	movff	tablat,parseCommand@resetCmd
 22591  002F92  0009               	tblrd		*+
 22592  002F94  CFF5 F091          	movff	tablat,parseCommand@resetCmd+1
 22593  002F98  0009               	tblrd		*+
 22594  002F9A  CFF5 F092          	movff	tablat,parseCommand@resetCmd+2
 22595  002F9E  000A               	tblrd		*-
 22596  002FA0  CFF5 F093          	movff	tablat,parseCommand@resetCmd+3
 22597                           
 22598                           ;app.c: 79: gateFsmStates state = GATE_WAIT_EVENT;
 22599  002FA4  0E01               	movlw	1
 22600  002FA6  0100               	movlb	0	; () banked
 22601  002FA8  6F94               	movwf	parseCommand@state& (0+255),b
 22602                           
 22603                           ; BSR set to: 0
 22604                           ;app.c: 81: if (StringCompare(smsText, addNumberCmd, sizeof(addNumberCmd)))
 22605  002FAA  0E93               	movlw	low _smsText
 22606  002FAC  6F7D               	movwf	StringCompare@String1& (0+255),b
 22607  002FAE  0E04               	movlw	high _smsText
 22608  002FB0  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22609  002FB2  0E88               	movlw	low parseCommand@addNumberCmd
 22610  002FB4  6F7F               	movwf	StringCompare@String2& (0+255),b
 22611  002FB6  0E00               	movlw	high parseCommand@addNumberCmd
 22612  002FB8  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22613  002FBA  0E00               	movlw	0
 22614  002FBC  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22615  002FBE  0E04               	movlw	4
 22616  002FC0  6F81               	movwf	StringCompare@Len& (0+255),b
 22617  002FC2  ECFD  F02D         	call	_StringCompare	;wreg free
 22618  002FC6  0900               	iorlw	0
 22619  002FC8  B4D8               	btfsc	status,2,c
 22620  002FCA  D00E               	goto	l2569
 22621                           
 22622                           ;app.c: 82: {
 22623                           ;app.c: 83: if (!isNumberValid(smsText + 4))
 22624  002FCC  0E97               	movlw	low (_smsText+4)
 22625  002FCE  0100               	movlb	0	; () banked
 22626  002FD0  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22627  002FD2  0E04               	movlw	high (_smsText+4)
 22628  002FD4  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22629  002FD6  EC39  F02B         	call	_isNumberValid	;wreg free
 22630  002FDA  0900               	iorlw	0
 22631  002FDC  A4D8               	btfss	status,2,c
 22632  002FDE  D002               	goto	l2570
 22633  002FE0                     u14290:
 22634                           
 22635                           ;app.c: 84: {
 22636                           ;app.c: 85: state = GATE_WAIT_EVENT;
 22637  002FE0  0E01               	movlw	1
 22638  002FE2  D033               	goto	L39
 22639  002FE4                     l2570:
 22640                           
 22641                           ;app.c: 87: else
 22642                           ;app.c: 88: {
 22643                           ;app.c: 89: state = GATE_ADD_CMD;
 22644                           
 22645                           ; BSR set to: 0
 22646  002FE4  0E02               	movlw	2
 22647  002FE6  D031               	goto	L39
 22648  002FE8                     l2569:
 22649                           
 22650                           ;app.c: 92: else if (StringCompare(smsText, deleteNumberCmd, sizeof(deleteNumberCmd)))
 22651                           
 22652                           ; BSR set to: 0
 22653  002FE8  0E93               	movlw	low _smsText
 22654  002FEA  0100               	movlb	0	; () banked
 22655  002FEC  6F7D               	movwf	StringCompare@String1& (0+255),b
 22656  002FEE  0E04               	movlw	high _smsText
 22657  002FF0  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22658  002FF2  0E8C               	movlw	low parseCommand@deleteNumberCmd
 22659  002FF4  6F7F               	movwf	StringCompare@String2& (0+255),b
 22660  002FF6  0E00               	movlw	high parseCommand@deleteNumberCmd
 22661  002FF8  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22662  002FFA  0E00               	movlw	0
 22663  002FFC  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22664  002FFE  0E04               	movlw	4
 22665  003000  6F81               	movwf	StringCompare@Len& (0+255),b
 22666  003002  ECFD  F02D         	call	_StringCompare	;wreg free
 22667  003006  0900               	iorlw	0
 22668  003008  B4D8               	btfsc	status,2,c
 22669  00300A  D00C               	goto	l2573
 22670                           
 22671                           ;app.c: 93: {
 22672                           ;app.c: 94: if (!isNumberValid(smsText + 4))
 22673  00300C  0E97               	movlw	low (_smsText+4)
 22674  00300E  0100               	movlb	0	; () banked
 22675  003010  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22676  003012  0E04               	movlw	high (_smsText+4)
 22677  003014  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22678  003016  EC39  F02B         	call	_isNumberValid	;wreg free
 22679  00301A  0900               	iorlw	0
 22680  00301C  B4D8               	btfsc	status,2,c
 22681  00301E  D7E0               	goto	u14290
 22682                           
 22683                           ;app.c: 98: else
 22684                           ;app.c: 99: {
 22685                           ;app.c: 100: state = GATE_DEL_CMD;
 22686                           
 22687                           ; BSR set to: 0
 22688                           
 22689                           ;app.c: 97: }
 22690                           
 22691                           ;app.c: 95: {
 22692                           ;app.c: 96: state = GATE_WAIT_EVENT;
 22693  003020  0E03               	movlw	3
 22694  003022  D013               	goto	L39
 22695  003024                     l2573:
 22696                           
 22697                           ;app.c: 103: else if (StringCompare(smsText, resetCmd, sizeof(resetCmd)))
 22698                           
 22699                           ; BSR set to: 0
 22700  003024  0E93               	movlw	low _smsText
 22701  003026  0100               	movlb	0	; () banked
 22702  003028  6F7D               	movwf	StringCompare@String1& (0+255),b
 22703  00302A  0E04               	movlw	high _smsText
 22704  00302C  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22705  00302E  0E90               	movlw	low parseCommand@resetCmd
 22706  003030  6F7F               	movwf	StringCompare@String2& (0+255),b
 22707  003032  0E00               	movlw	high parseCommand@resetCmd
 22708  003034  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22709  003036  0E00               	movlw	0
 22710  003038  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22711  00303A  0E04               	movlw	4
 22712  00303C  6F81               	movwf	StringCompare@Len& (0+255),b
 22713  00303E  ECFD  F02D         	call	_StringCompare	;wreg free
 22714  003042  0900               	iorlw	0
 22715  003044  B4D8               	btfsc	status,2,c
 22716  003046  D003               	goto	l2577
 22717                           
 22718                           ;app.c: 104: {
 22719                           ;app.c: 105: state = GATE_RESET;
 22720  003048  0E05               	movlw	5
 22721  00304A                     L39:
 22722  00304A  0100               	movlb	0	; () banked
 22723  00304C  6F94               	movwf	parseCommand@state& (0+255),b
 22724  00304E                     l2577:
 22725                           
 22726                           ;app.c: 110: }
 22727                           ;app.c: 111: return state;
 22728                           
 22729                           ; BSR set to: 0
 22730                           
 22731                           ; BSR set to: 0
 22732                           
 22733                           ; BSR set to: 0
 22734                           
 22735                           ;app.c: 107: else
 22736                           ;app.c: 108: {
 22737                           
 22738                           ; BSR set to: 0
 22739  00304E  0100               	movlb	0	; () banked
 22740  003050  5194               	movf	parseCommand@state& (0+255),w,b
 22741  003052  0012               	return	
 22742  003054                     __end_of_parseCommand:
 22743                           	opt stack 0
 22744                           tosu	equ	0xFFF
 22745                           tosh	equ	0xFFE
 22746                           tosl	equ	0xFFD
 22747                           pclath	equ	0xFFA
 22748                           tblptru	equ	0xFF8
 22749                           tblptrh	equ	0xFF7
 22750                           tblptrl	equ	0xFF6
 22751                           tablat	equ	0xFF5
 22752                           prodh	equ	0xFF4
 22753                           prodl	equ	0xFF3
 22754                           intcon	equ	0xFF2
 22755                           intcon2	equ	0xFF1
 22756                           intcon3	equ	0xFF0
 22757                           indf0	equ	0xFEF
 22758                           postinc0	equ	0xFEE
 22759                           plusw0	equ	0xFEB
 22760                           fsr0h	equ	0xFEA
 22761                           fsr0l	equ	0xFE9
 22762                           wreg	equ	0xFE8
 22763                           indf1	equ	0xFE7
 22764                           postinc1	equ	0xFE6
 22765                           postdec1	equ	0xFE5
 22766                           fsr1h	equ	0xFE2
 22767                           fsr1l	equ	0xFE1
 22768                           indf2	equ	0xFDF
 22769                           postinc2	equ	0xFDE
 22770                           postdec2	equ	0xFDD
 22771                           plusw2	equ	0xFDB
 22772                           fsr2h	equ	0xFDA
 22773                           fsr2l	equ	0xFD9
 22774                           status	equ	0xFD8
 22775                           
 22776 ;; *************** function _Mdm_RequestSmsData *****************
 22777 ;; Defined at:
 22778 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22779 ;; Parameters:    Size  Location     Type
 22780 ;;		None
 22781 ;; Auto vars:     Size  Location     Type
 22782 ;;		None
 22783 ;; Return value:  Size  Location     Type
 22784 ;;                  1    wreg      void 
 22785 ;; Registers used:
 22786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22787 ;; Tracked objects:
 22788 ;;		On entry : 0/0
 22789 ;;		On exit  : 0/0
 22790 ;;		Unchanged: 0/0
 22791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22796 ;;Total ram usage:        0 bytes
 22797 ;; Hardware stack levels used:    1
 22798 ;; Hardware stack levels required when called:   12
 22799 ;; This function calls:
 22800 ;;		_GenerateEvt
 22801 ;; This function is called by:
 22802 ;;		_detectCmd
 22803 ;; This function uses a non-reentrant model
 22804 ;;
 22805                           
 22806                           	psect	text103
 22807  0069F2                     __ptext103:
 22808                           	opt stack 0
 22809  0069F2                     _Mdm_RequestSmsData:
 22810                           	opt stack 14
 22811                           
 22812                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 22813                           
 22814                           ; BSR set to: 0
 22815                           ;incstack = 0
 22816  0069F2  0EDD               	movlw	low _GetSmsText
 22817  0069F4  0100               	movlb	0	; () banked
 22818  0069F6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22819  0069F8  0E00               	movlw	high _GetSmsText
 22820  0069FA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22821  0069FC  EC8C  F034         	call	_GenerateEvt	;wreg free
 22822  006A00  0012               	return		;funcret
 22823  006A02                     __end_of_Mdm_RequestSmsData:
 22824                           	opt stack 0
 22825                           tosu	equ	0xFFF
 22826                           tosh	equ	0xFFE
 22827                           tosl	equ	0xFFD
 22828                           pclath	equ	0xFFA
 22829                           tblptru	equ	0xFF8
 22830                           tblptrh	equ	0xFF7
 22831                           tblptrl	equ	0xFF6
 22832                           tablat	equ	0xFF5
 22833                           prodh	equ	0xFF4
 22834                           prodl	equ	0xFF3
 22835                           intcon	equ	0xFF2
 22836                           intcon2	equ	0xFF1
 22837                           intcon3	equ	0xFF0
 22838                           indf0	equ	0xFEF
 22839                           postinc0	equ	0xFEE
 22840                           plusw0	equ	0xFEB
 22841                           fsr0h	equ	0xFEA
 22842                           fsr0l	equ	0xFE9
 22843                           wreg	equ	0xFE8
 22844                           indf1	equ	0xFE7
 22845                           postinc1	equ	0xFE6
 22846                           postdec1	equ	0xFE5
 22847                           fsr1h	equ	0xFE2
 22848                           fsr1l	equ	0xFE1
 22849                           indf2	equ	0xFDF
 22850                           postinc2	equ	0xFDE
 22851                           postdec2	equ	0xFDD
 22852                           plusw2	equ	0xFDB
 22853                           fsr2h	equ	0xFDA
 22854                           fsr2l	equ	0xFD9
 22855                           status	equ	0xFD8
 22856                           
 22857 ;; *************** function _Mdm_IsSmsReceived *****************
 22858 ;; Defined at:
 22859 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22860 ;; Parameters:    Size  Location     Type
 22861 ;;		None
 22862 ;; Auto vars:     Size  Location     Type
 22863 ;;  Ret             1   33[BANK0 ] enum E8930
 22864 ;; Return value:  Size  Location     Type
 22865 ;;                  1    wreg      enum E8930
 22866 ;; Registers used:
 22867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22868 ;; Tracked objects:
 22869 ;;		On entry : 0/0
 22870 ;;		On exit  : 0/0
 22871 ;;		Unchanged: 0/0
 22872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22876 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22877 ;;Total ram usage:        1 bytes
 22878 ;; Hardware stack levels used:    1
 22879 ;; Hardware stack levels required when called:   12
 22880 ;; This function calls:
 22881 ;;		_ReceiveEvt
 22882 ;; This function is called by:
 22883 ;;		_detectCmd
 22884 ;; This function uses a non-reentrant model
 22885 ;;
 22886                           
 22887                           	psect	text104
 22888  006656                     __ptext104:
 22889                           	opt stack 0
 22890  006656                     _Mdm_IsSmsReceived:
 22891                           	opt stack 14
 22892                           
 22893                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 22894                           
 22895                           ;incstack = 0
 22896  006656  0E00               	movlw	0
 22897  006658  0100               	movlb	0	; () banked
 22898  00665A  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22899                           
 22900                           ; BSR set to: 0
 22901                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 22902  00665C  0EDE               	movlw	low _SmsEvent
 22903  00665E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22904  006660  0E00               	movlw	high _SmsEvent
 22905  006662  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22906  006664  EC9B  F032         	call	_ReceiveEvt	;wreg free
 22907  006668  0900               	iorlw	0
 22908  00666A  B4D8               	btfsc	status,2,c
 22909  00666C  D003               	goto	l1136
 22910                           
 22911                           ;mdm_gsm_gprs.c: 947: {
 22912                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 22913  00666E  0E01               	movlw	1
 22914  006670  0100               	movlb	0	; () banked
 22915  006672  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22916  006674                     l1136:
 22917                           
 22918                           ;mdm_gsm_gprs.c: 949: }
 22919                           ;mdm_gsm_gprs.c: 951: return Ret;
 22920  006674  0100               	movlb	0	; () banked
 22921  006676  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 22922  006678  0012               	return	
 22923  00667A                     __end_of_Mdm_IsSmsReceived:
 22924                           	opt stack 0
 22925                           tosu	equ	0xFFF
 22926                           tosh	equ	0xFFE
 22927                           tosl	equ	0xFFD
 22928                           pclath	equ	0xFFA
 22929                           tblptru	equ	0xFF8
 22930                           tblptrh	equ	0xFF7
 22931                           tblptrl	equ	0xFF6
 22932                           tablat	equ	0xFF5
 22933                           prodh	equ	0xFF4
 22934                           prodl	equ	0xFF3
 22935                           intcon	equ	0xFF2
 22936                           intcon2	equ	0xFF1
 22937                           intcon3	equ	0xFF0
 22938                           indf0	equ	0xFEF
 22939                           postinc0	equ	0xFEE
 22940                           plusw0	equ	0xFEB
 22941                           fsr0h	equ	0xFEA
 22942                           fsr0l	equ	0xFE9
 22943                           wreg	equ	0xFE8
 22944                           indf1	equ	0xFE7
 22945                           postinc1	equ	0xFE6
 22946                           postdec1	equ	0xFE5
 22947                           fsr1h	equ	0xFE2
 22948                           fsr1l	equ	0xFE1
 22949                           indf2	equ	0xFDF
 22950                           postinc2	equ	0xFDE
 22951                           postdec2	equ	0xFDD
 22952                           plusw2	equ	0xFDB
 22953                           fsr2h	equ	0xFDA
 22954                           fsr2l	equ	0xFD9
 22955                           status	equ	0xFD8
 22956                           
 22957 ;; *************** function _Mdm_IsRinging *****************
 22958 ;; Defined at:
 22959 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22960 ;; Parameters:    Size  Location     Type
 22961 ;;		None
 22962 ;; Auto vars:     Size  Location     Type
 22963 ;;  Ret             1   33[BANK0 ] enum E8926
 22964 ;; Return value:  Size  Location     Type
 22965 ;;                  1    wreg      enum E8926
 22966 ;; Registers used:
 22967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22968 ;; Tracked objects:
 22969 ;;		On entry : 0/0
 22970 ;;		On exit  : 0/0
 22971 ;;		Unchanged: 0/0
 22972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22977 ;;Total ram usage:        1 bytes
 22978 ;; Hardware stack levels used:    1
 22979 ;; Hardware stack levels required when called:   12
 22980 ;; This function calls:
 22981 ;;		_ReceiveEvt
 22982 ;; This function is called by:
 22983 ;;		_detectCmd
 22984 ;;		_getSetupCall
 22985 ;; This function uses a non-reentrant model
 22986 ;;
 22987                           
 22988                           	psect	text105
 22989  00667A                     __ptext105:
 22990                           	opt stack 0
 22991  00667A                     _Mdm_IsRinging:
 22992                           	opt stack 12
 22993                           
 22994                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 22995                           
 22996                           ; BSR set to: 0
 22997                           ;incstack = 0
 22998  00667A  0E00               	movlw	0
 22999  00667C  0100               	movlb	0	; () banked
 23000  00667E  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23001                           
 23002                           ; BSR set to: 0
 23003                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 23004  006680  0EE0               	movlw	low _RingEvent
 23005  006682  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23006  006684  0E00               	movlw	high _RingEvent
 23007  006686  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23008  006688  EC9B  F032         	call	_ReceiveEvt	;wreg free
 23009  00668C  0900               	iorlw	0
 23010  00668E  B4D8               	btfsc	status,2,c
 23011  006690  D003               	goto	l1152
 23012                           
 23013                           ;mdm_gsm_gprs.c: 1030: {
 23014                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 23015  006692  0E01               	movlw	1
 23016  006694  0100               	movlb	0	; () banked
 23017  006696  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23018  006698                     l1152:
 23019                           
 23020                           ;mdm_gsm_gprs.c: 1032: }
 23021                           ;mdm_gsm_gprs.c: 1034: return Ret;
 23022  006698  0100               	movlb	0	; () banked
 23023  00669A  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 23024  00669C  0012               	return	
 23025  00669E                     __end_of_Mdm_IsRinging:
 23026                           	opt stack 0
 23027                           tosu	equ	0xFFF
 23028                           tosh	equ	0xFFE
 23029                           tosl	equ	0xFFD
 23030                           pclath	equ	0xFFA
 23031                           tblptru	equ	0xFF8
 23032                           tblptrh	equ	0xFF7
 23033                           tblptrl	equ	0xFF6
 23034                           tablat	equ	0xFF5
 23035                           prodh	equ	0xFF4
 23036                           prodl	equ	0xFF3
 23037                           intcon	equ	0xFF2
 23038                           intcon2	equ	0xFF1
 23039                           intcon3	equ	0xFF0
 23040                           indf0	equ	0xFEF
 23041                           postinc0	equ	0xFEE
 23042                           plusw0	equ	0xFEB
 23043                           fsr0h	equ	0xFEA
 23044                           fsr0l	equ	0xFE9
 23045                           wreg	equ	0xFE8
 23046                           indf1	equ	0xFE7
 23047                           postinc1	equ	0xFE6
 23048                           postdec1	equ	0xFE5
 23049                           fsr1h	equ	0xFE2
 23050                           fsr1l	equ	0xFE1
 23051                           indf2	equ	0xFDF
 23052                           postinc2	equ	0xFDE
 23053                           postdec2	equ	0xFDD
 23054                           plusw2	equ	0xFDB
 23055                           fsr2h	equ	0xFDA
 23056                           fsr2l	equ	0xFD9
 23057                           status	equ	0xFD8
 23058                           
 23059 ;; *************** function _Mdm_HangPhoneCall *****************
 23060 ;; Defined at:
 23061 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23062 ;; Parameters:    Size  Location     Type
 23063 ;;		None
 23064 ;; Auto vars:     Size  Location     Type
 23065 ;;		None
 23066 ;; Return value:  Size  Location     Type
 23067 ;;                  1    wreg      void 
 23068 ;; Registers used:
 23069 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23070 ;; Tracked objects:
 23071 ;;		On entry : 0/0
 23072 ;;		On exit  : 0/0
 23073 ;;		Unchanged: 0/0
 23074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23079 ;;Total ram usage:        0 bytes
 23080 ;; Hardware stack levels used:    1
 23081 ;; Hardware stack levels required when called:   13
 23082 ;; This function calls:
 23083 ;;		_Uart_WriteConstString
 23084 ;; This function is called by:
 23085 ;;		_detectCmd
 23086 ;;		_getSetupCall
 23087 ;; This function uses a non-reentrant model
 23088 ;;
 23089                           
 23090                           	psect	text106
 23091  0069AE                     __ptext106:
 23092                           	opt stack 0
 23093  0069AE                     _Mdm_HangPhoneCall:
 23094                           	opt stack 11
 23095                           
 23096                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 23097                           
 23098                           ; BSR set to: 0
 23099                           ;incstack = 0
 23100  0069AE  0EF0               	movlw	low STR_6
 23101  0069B0  0100               	movlb	0	; () banked
 23102  0069B2  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23103  0069B4  0EFF               	movlw	high STR_6
 23104  0069B6  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23105  0069B8  0E01               	movlw	1
 23106  0069BA  EC52  F030         	call	_Uart_WriteConstString
 23107  0069BE  0012               	return		;funcret
 23108  0069C0                     __end_of_Mdm_HangPhoneCall:
 23109                           	opt stack 0
 23110                           tosu	equ	0xFFF
 23111                           tosh	equ	0xFFE
 23112                           tosl	equ	0xFFD
 23113                           pclath	equ	0xFFA
 23114                           tblptru	equ	0xFF8
 23115                           tblptrh	equ	0xFF7
 23116                           tblptrl	equ	0xFF6
 23117                           tablat	equ	0xFF5
 23118                           prodh	equ	0xFF4
 23119                           prodl	equ	0xFF3
 23120                           intcon	equ	0xFF2
 23121                           intcon2	equ	0xFF1
 23122                           intcon3	equ	0xFF0
 23123                           indf0	equ	0xFEF
 23124                           postinc0	equ	0xFEE
 23125                           plusw0	equ	0xFEB
 23126                           fsr0h	equ	0xFEA
 23127                           fsr0l	equ	0xFE9
 23128                           wreg	equ	0xFE8
 23129                           indf1	equ	0xFE7
 23130                           postinc1	equ	0xFE6
 23131                           postdec1	equ	0xFE5
 23132                           fsr1h	equ	0xFE2
 23133                           fsr1l	equ	0xFE1
 23134                           indf2	equ	0xFDF
 23135                           postinc2	equ	0xFDE
 23136                           postdec2	equ	0xFDD
 23137                           plusw2	equ	0xFDB
 23138                           fsr2h	equ	0xFDA
 23139                           fsr2l	equ	0xFD9
 23140                           status	equ	0xFD8
 23141                           
 23142 ;; *************** function _Mdm_GetSmsData *****************
 23143 ;; Defined at:
 23144 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23145 ;; Parameters:    Size  Location     Type
 23146 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 23147 ;;		 -> smsText(20), 
 23148 ;; Auto vars:     Size  Location     Type
 23149 ;;  GetSmsStatus    1   49[BANK0 ] enum E8922
 23150 ;; Return value:  Size  Location     Type
 23151 ;;                  1    wreg      enum E8922
 23152 ;; Registers used:
 23153 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23154 ;; Tracked objects:
 23155 ;;		On entry : 0/0
 23156 ;;		On exit  : 0/0
 23157 ;;		Unchanged: 0/0
 23158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23159 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23162 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23163 ;;Total ram usage:        3 bytes
 23164 ;; Hardware stack levels used:    1
 23165 ;; Hardware stack levels required when called:   12
 23166 ;; This function calls:
 23167 ;;		_ReceiveEvt
 23168 ;;		_StringCopy
 23169 ;; This function is called by:
 23170 ;;		_detectCmd
 23171 ;; This function uses a non-reentrant model
 23172 ;;
 23173                           
 23174                           	psect	text107
 23175  00553E                     __ptext107:
 23176                           	opt stack 0
 23177  00553E                     _Mdm_GetSmsData:
 23178                           	opt stack 14
 23179                           
 23180                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 23181                           
 23182                           ;incstack = 0
 23183  00553E  0E00               	movlw	0
 23184  005540  0100               	movlb	0	; () banked
 23185  005542  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23186                           
 23187                           ; BSR set to: 0
 23188                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 23189  005544  0EDC               	movlw	low _SmsTxtReady
 23190  005546  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23191  005548  0E00               	movlw	high _SmsTxtReady
 23192  00554A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23193  00554C  EC9B  F032         	call	_ReceiveEvt	;wreg free
 23194  005550  0900               	iorlw	0
 23195  005552  B4D8               	btfsc	status,2,c
 23196  005554  D025               	goto	l1129
 23197                           
 23198                           ;mdm_gsm_gprs.c: 898: {
 23199                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 23200  005556  0E50               	movlw	low (_Mdm_SmsRx+80)
 23201  005558  0100               	movlb	0	; () banked
 23202  00555A  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23203  00555C  0E07               	movlw	high (_Mdm_SmsRx+80)
 23204  00555E  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23205  005560  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 23206  005564  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 23207  005568  0E01               	movlw	1
 23208  00556A  0107               	movlb	7	; () banked
 23209  00556C  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 23210  00556E  0100               	movlb	0	; () banked
 23211  005570  6F89               	movwf	StringCopy@Len& (0+255),b
 23212  005572  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 23213  005574  0E00               	movlw	0
 23214  005576  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 23215  005578  EC6C  F02B         	call	_StringCopy	;wreg free
 23216                           
 23217                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 23218  00557C  0E15               	movlw	low (_Mdm_SmsRx+21)
 23219  00557E  0100               	movlb	0	; () banked
 23220  005580  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23221  005582  0E07               	movlw	high (_Mdm_SmsRx+21)
 23222  005584  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23223  005586  0E3C               	movlw	low _callerNumber
 23224  005588  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23225  00558A  0E03               	movlw	high _callerNumber
 23226  00558C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23227  00558E  0E00               	movlw	0
 23228  005590  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23229  005592  0E0D               	movlw	13
 23230  005594  6F89               	movwf	StringCopy@Len& (0+255),b
 23231  005596  EC6C  F02B         	call	_StringCopy	;wreg free
 23232                           
 23233                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 23234  00559A  0E01               	movlw	1
 23235  00559C  0100               	movlb	0	; () banked
 23236  00559E  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23237  0055A0                     l1129:
 23238                           
 23239                           ;mdm_gsm_gprs.c: 904: }
 23240                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 23241                           
 23242                           ; BSR set to: 0
 23243  0055A0  0100               	movlb	0	; () banked
 23244  0055A2  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 23245  0055A4  0012               	return	
 23246  0055A6                     __end_of_Mdm_GetSmsData:
 23247                           	opt stack 0
 23248                           tosu	equ	0xFFF
 23249                           tosh	equ	0xFFE
 23250                           tosl	equ	0xFFD
 23251                           pclath	equ	0xFFA
 23252                           tblptru	equ	0xFF8
 23253                           tblptrh	equ	0xFF7
 23254                           tblptrl	equ	0xFF6
 23255                           tablat	equ	0xFF5
 23256                           prodh	equ	0xFF4
 23257                           prodl	equ	0xFF3
 23258                           intcon	equ	0xFF2
 23259                           intcon2	equ	0xFF1
 23260                           intcon3	equ	0xFF0
 23261                           indf0	equ	0xFEF
 23262                           postinc0	equ	0xFEE
 23263                           plusw0	equ	0xFEB
 23264                           fsr0h	equ	0xFEA
 23265                           fsr0l	equ	0xFE9
 23266                           wreg	equ	0xFE8
 23267                           indf1	equ	0xFE7
 23268                           postinc1	equ	0xFE6
 23269                           postdec1	equ	0xFE5
 23270                           fsr1h	equ	0xFE2
 23271                           fsr1l	equ	0xFE1
 23272                           indf2	equ	0xFDF
 23273                           postinc2	equ	0xFDE
 23274                           postdec2	equ	0xFDD
 23275                           plusw2	equ	0xFDB
 23276                           fsr2h	equ	0xFDA
 23277                           fsr2l	equ	0xFD9
 23278                           status	equ	0xFD8
 23279                           
 23280 ;; *************** function _GetLastInteractionNumber *****************
 23281 ;; Defined at:
 23282 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23283 ;; Parameters:    Size  Location     Type
 23284 ;;		None
 23285 ;; Auto vars:     Size  Location     Type
 23286 ;;		None
 23287 ;; Return value:  Size  Location     Type
 23288 ;;                  2   29[BANK0 ] PTR unsigned char 
 23289 ;; Registers used:
 23290 ;;		wreg, status,2, status,0
 23291 ;; Tracked objects:
 23292 ;;		On entry : 0/0
 23293 ;;		On exit  : 0/0
 23294 ;;		Unchanged: 0/0
 23295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23296 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23299 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23300 ;;Total ram usage:        2 bytes
 23301 ;; Hardware stack levels used:    1
 23302 ;; Hardware stack levels required when called:   11
 23303 ;; This function calls:
 23304 ;;		Nothing
 23305 ;; This function is called by:
 23306 ;;		_detectCmd
 23307 ;; This function uses a non-reentrant model
 23308 ;;
 23309                           
 23310                           	psect	text108
 23311  006A4A                     __ptext108:
 23312                           	opt stack 0
 23313  006A4A                     _GetLastInteractionNumber:
 23314                           	opt stack 15
 23315                           
 23316                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 23317                           
 23318                           ; BSR set to: 0
 23319                           ;incstack = 0
 23320  006A4A  0E3C               	movlw	low _callerNumber
 23321  006A4C  0100               	movlb	0	; () banked
 23322  006A4E  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 23323  006A50  0E03               	movlw	high _callerNumber
 23324  006A52  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 23325  006A54  0012               	return	
 23326  006A56                     __end_of_GetLastInteractionNumber:
 23327                           	opt stack 0
 23328                           tosu	equ	0xFFF
 23329                           tosh	equ	0xFFE
 23330                           tosl	equ	0xFFD
 23331                           pclath	equ	0xFFA
 23332                           tblptru	equ	0xFF8
 23333                           tblptrh	equ	0xFF7
 23334                           tblptrl	equ	0xFF6
 23335                           tablat	equ	0xFF5
 23336                           prodh	equ	0xFF4
 23337                           prodl	equ	0xFF3
 23338                           intcon	equ	0xFF2
 23339                           intcon2	equ	0xFF1
 23340                           intcon3	equ	0xFF0
 23341                           indf0	equ	0xFEF
 23342                           postinc0	equ	0xFEE
 23343                           plusw0	equ	0xFEB
 23344                           fsr0h	equ	0xFEA
 23345                           fsr0l	equ	0xFE9
 23346                           wreg	equ	0xFE8
 23347                           indf1	equ	0xFE7
 23348                           postinc1	equ	0xFE6
 23349                           postdec1	equ	0xFE5
 23350                           fsr1h	equ	0xFE2
 23351                           fsr1l	equ	0xFE1
 23352                           indf2	equ	0xFDF
 23353                           postinc2	equ	0xFDE
 23354                           postdec2	equ	0xFDD
 23355                           plusw2	equ	0xFDB
 23356                           fsr2h	equ	0xFDA
 23357                           fsr2l	equ	0xFD9
 23358                           status	equ	0xFD8
 23359                           
 23360 ;; *************** function _GetCallerNumber *****************
 23361 ;; Defined at:
 23362 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23363 ;; Parameters:    Size  Location     Type
 23364 ;;		None
 23365 ;; Auto vars:     Size  Location     Type
 23366 ;;		None
 23367 ;; Return value:  Size  Location     Type
 23368 ;;                  2   35[BANK0 ] PTR unsigned char 
 23369 ;; Registers used:
 23370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23371 ;; Tracked objects:
 23372 ;;		On entry : 0/0
 23373 ;;		On exit  : 0/0
 23374 ;;		Unchanged: 0/0
 23375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23379 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23380 ;;Total ram usage:        2 bytes
 23381 ;; Hardware stack levels used:    1
 23382 ;; Hardware stack levels required when called:   12
 23383 ;; This function calls:
 23384 ;;		_ClearBuffer
 23385 ;;		_ReceiveEvt
 23386 ;; This function is called by:
 23387 ;;		_detectCmd
 23388 ;;		_initFsm
 23389 ;; This function uses a non-reentrant model
 23390 ;;
 23391                           
 23392                           	psect	text109
 23393  006344                     __ptext109:
 23394                           	opt stack 0
 23395  006344                     _GetCallerNumber:
 23396                           	opt stack 14
 23397                           
 23398                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 23399                           
 23400                           ; BSR set to: 0
 23401                           ;incstack = 0
 23402  006344  0EDF               	movlw	low _ClipEvent
 23403  006346  0100               	movlb	0	; () banked
 23404  006348  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23405  00634A  0E00               	movlw	high _ClipEvent
 23406  00634C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23407  00634E  EC9B  F032         	call	_ReceiveEvt	;wreg free
 23408  006352  0900               	iorlw	0
 23409  006354  A4D8               	btfss	status,2,c
 23410  006356  D00B               	goto	l1156
 23411                           
 23412                           ;mdm_gsm_gprs.c: 1040: {
 23413                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 23414  006358  0E3C               	movlw	low _callerNumber
 23415  00635A  0100               	movlb	0	; () banked
 23416  00635C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23417  00635E  0E03               	movlw	high _callerNumber
 23418  006360  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23419  006362  0E00               	movlw	0
 23420  006364  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23421  006366  0E0D               	movlw	13
 23422  006368  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23423  00636A  ECBD  F031         	call	_ClearBuffer	;wreg free
 23424  00636E                     l1156:
 23425                           
 23426                           ;mdm_gsm_gprs.c: 1042: }
 23427                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 23428  00636E  0E3C               	movlw	low _callerNumber
 23429  006370  0100               	movlb	0	; () banked
 23430  006372  6F83               	movwf	?_GetCallerNumber& (0+255),b
 23431  006374  0E03               	movlw	high _callerNumber
 23432  006376  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 23433  006378  0012               	return	
 23434  00637A                     __end_of_GetCallerNumber:
 23435                           	opt stack 0
 23436                           tosu	equ	0xFFF
 23437                           tosh	equ	0xFFE
 23438                           tosl	equ	0xFFD
 23439                           pclath	equ	0xFFA
 23440                           tblptru	equ	0xFF8
 23441                           tblptrh	equ	0xFF7
 23442                           tblptrl	equ	0xFF6
 23443                           tablat	equ	0xFF5
 23444                           prodh	equ	0xFF4
 23445                           prodl	equ	0xFF3
 23446                           intcon	equ	0xFF2
 23447                           intcon2	equ	0xFF1
 23448                           intcon3	equ	0xFF0
 23449                           indf0	equ	0xFEF
 23450                           postinc0	equ	0xFEE
 23451                           plusw0	equ	0xFEB
 23452                           fsr0h	equ	0xFEA
 23453                           fsr0l	equ	0xFE9
 23454                           wreg	equ	0xFE8
 23455                           indf1	equ	0xFE7
 23456                           postinc1	equ	0xFE6
 23457                           postdec1	equ	0xFE5
 23458                           fsr1h	equ	0xFE2
 23459                           fsr1l	equ	0xFE1
 23460                           indf2	equ	0xFDF
 23461                           postinc2	equ	0xFDE
 23462                           postdec2	equ	0xFDD
 23463                           plusw2	equ	0xFDB
 23464                           fsr2h	equ	0xFDA
 23465                           fsr2l	equ	0xFD9
 23466                           status	equ	0xFD8
 23467                           
 23468 ;; *************** function _delCmdFsm *****************
 23469 ;; Defined at:
 23470 ;;		line 71 in file "../Source/c/04_App/app_delCmd.c"
 23471 ;; Parameters:    Size  Location     Type
 23472 ;;  receivedNumb    2   17[BANK1 ] PTR unsigned char 
 23473 ;;		 -> receivedNumber(13), 
 23474 ;;  smsText         2   19[BANK1 ] PTR unsigned char 
 23475 ;;		 -> smsText(20), 
 23476 ;; Auto vars:     Size  Location     Type
 23477 ;;  emptyNumber    13   21[BANK1 ] const unsigned char [13]
 23478 ;;  numberInMemo    1   35[BANK1 ] unsigned char 
 23479 ;;  isComplete      1   34[BANK1 ] unsigned char 
 23480 ;; Return value:  Size  Location     Type
 23481 ;;                  1    wreg      unsigned char 
 23482 ;; Registers used:
 23483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23484 ;; Tracked objects:
 23485 ;;		On entry : 0/0
 23486 ;;		On exit  : 0/0
 23487 ;;		Unchanged: 0/0
 23488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23489 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23490 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23492 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23493 ;;Total ram usage:       19 bytes
 23494 ;; Hardware stack levels used:    1
 23495 ;; Hardware stack levels required when called:   18
 23496 ;; This function calls:
 23497 ;;		_isMasterNumber
 23498 ;;		_isNumberInMemory
 23499 ;;		_saveNumberInMemory
 23500 ;; This function is called by:
 23501 ;;		_MyApp_Task
 23502 ;; This function uses a non-reentrant model
 23503 ;;
 23504                           
 23505                           	psect	text110
 23506  0047F8                     __ptext110:
 23507                           	opt stack 0
 23508  0047F8                     _delCmdFsm:
 23509                           	opt stack 9
 23510                           
 23511                           ;app_delCmd.c: 73: const uint8_t emptyNumber[((UINT8)(13))] = {0};
 23512                           
 23513                           ; BSR set to: 0
 23514                           ;incstack = 0
 23515  0047F8  0E0F               	movlw	low delCmdFsm@F9004
 23516  0047FA  6EF6               	movwf	tblptrl,c
 23517  0047FC                     	if	1	;There is more than 1 active tblptr byte
 23518  0047FC  0EFC               	movlw	high delCmdFsm@F9004
 23519  0047FE  6EF7               	movwf	tblptrh,c
 23520  004800                     	endif
 23521  004800                     	if	0	;There are less than 3 active tblptr bytes
 23522  004800                     	endif
 23523  004800  EE21  F015         	lfsr	2,delCmdFsm@emptyNumber
 23524  004804  0E0C               	movlw	12
 23525  004806                     u15900:
 23526  004806  0009               	tblrd		*+
 23527  004808  CFF5 FFDE          	movff	tablat,postinc2
 23528  00480C  06E8               	decf	wreg,f,c
 23529  00480E  E2FB               	bc	u15900
 23530                           
 23531                           ;app_delCmd.c: 74: static delFsmStates currentState = DEL_FSM_CHECK_MASTER;
 23532                           ;app_delCmd.c: 75: bool isComplete = 0;
 23533  004810  0E00               	movlw	0
 23534  004812  0101               	movlb	1	; () banked
 23535  004814  6F22               	movwf	delCmdFsm@isComplete& (0+255),b
 23536                           
 23537                           ; BSR set to: 1
 23538                           ;app_delCmd.c: 76: uint8_t numberInMemory = 1;
 23539  004816  0E01               	movlw	1
 23540  004818  6F23               	movwf	delCmdFsm@numberInMemory& (0+255),b
 23541                           
 23542                           ;app_delCmd.c: 78: switch (currentState)
 23543  00481A  D033               	goto	l2829
 23544  00481C                     
 23545                           ; BSR set to: 1
 23546                           ;app_delCmd.c: 81: if (isMasterNumber(receivedNumber) == OP_SUCCESS)
 23547                           
 23548                           ; BSR set to: 1
 23549  00481C  C111  F100         	movff	delCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23550  004820  C112  F101         	movff	delCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23551  004824  ECFC  F029         	call	_isMasterNumber	;wreg free
 23552  004828  0900               	iorlw	0
 23553  00482A  A4D8               	btfss	status,2,c
 23554  00482C  D023               	goto	l16245
 23555                           
 23556                           ;app_delCmd.c: 82: {
 23557                           ;app_delCmd.c: 83: currentState = DEL_FSM_REMOVE_NUMBER;
 23558  00482E  0E01               	movlw	1
 23559  004830                     L40:
 23560  004830  0101               	movlb	1	; () banked
 23561  004832  D025               	goto	L43
 23562  004834                     
 23563                           ; BSR set to: 1
 23564                           ;app_delCmd.c: 92: numberInMemory = isNumberInMemory(receivedNumber);
 23565                           
 23566                           ; BSR set to: 1
 23567  004834  C111  F100         	movff	delCmdFsm@receivedNumber,isNumberInMemory@phoneNumber
 23568  004838  C112  F101         	movff	delCmdFsm@receivedNumber+1,isNumberInMemory@phoneNumber+1
 23569  00483C  EC50  F029         	call	_isNumberInMemory	;wreg free
 23570  004840  0101               	movlb	1	; () banked
 23571  004842  6F23               	movwf	delCmdFsm@numberInMemory& (0+255),b
 23572                           
 23573                           ; BSR set to: 1
 23574                           ;app_delCmd.c: 93: if (numberInMemory == 1)
 23575  004844  0523               	decf	delCmdFsm@numberInMemory& (0+255),w,b
 23576  004846  A4D8               	btfss	status,2,c
 23577  004848  D002               	goto	l2835
 23578                           
 23579                           ; BSR set to: 1
 23580                           ;app_delCmd.c: 94: {
 23581                           ;app_delCmd.c: 95: currentState = DEL_FSM_COMPLETE;
 23582  00484A  0E02               	movlw	2
 23583  00484C  D018               	goto	L43
 23584  00484E                     l2835:
 23585                           
 23586                           ; BSR set to: 1
 23587                           ;app_delCmd.c: 97: else if (numberInMemory != 0 && numberInMemory != 1 && numberInMemory
      +                           != 32)
 23588                           
 23589                           ; BSR set to: 1
 23590  00484E  5123               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 23591  004850  B4D8               	btfsc	status,2,c
 23592  004852  D021               	goto	l2833
 23593                           
 23594                           ; BSR set to: 1
 23595  004854  0523               	decf	delCmdFsm@numberInMemory& (0+255),w,b
 23596  004856  B4D8               	btfsc	status,2,c
 23597  004858  D01E               	goto	l2833
 23598                           
 23599                           ; BSR set to: 1
 23600  00485A  0E20               	movlw	32
 23601  00485C  1923               	xorwf	delCmdFsm@numberInMemory& (0+255),w,b
 23602  00485E  B4D8               	btfsc	status,2,c
 23603  004860  D01A               	goto	l2833
 23604                           
 23605                           ; BSR set to: 1
 23606                           ;app_delCmd.c: 98: {
 23607                           ;app_delCmd.c: 99: saveNumberInMemory(numberInMemory, emptyNumber);
 23608  004862  0E15               	movlw	low delCmdFsm@emptyNumber
 23609  004864  0100               	movlb	0	; () banked
 23610  004866  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23611  004868  0E01               	movlw	high delCmdFsm@emptyNumber
 23612  00486A  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23613  00486C  0101               	movlb	1	; () banked
 23614  00486E  5123               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 23615  004870  EC67  F034         	call	_saveNumberInMemory
 23616  004874                     l16245:
 23617                           
 23618                           ;app_delCmd.c: 100: currentState = DEL_FSM_COMPLETE;
 23619  004874  0E02               	movlw	2
 23620  004876  D7DC               	goto	L40
 23621  004878                     
 23622                           ; BSR set to: 1
 23623                           ;app_delCmd.c: 105: isComplete = 1;
 23624                           
 23625                           ; BSR set to: 1
 23626  004878  0E01               	movlw	1
 23627  00487A  6F22               	movwf	delCmdFsm@isComplete& (0+255),b
 23628                           
 23629                           ;app_delCmd.c: 106: currentState = DEL_FSM_CHECK_MASTER;
 23630  00487C  0E00               	movlw	0
 23631  00487E                     L43:
 23632  00487E  6FD6               	movwf	delCmdFsm@currentState& (0+255),b
 23633                           
 23634                           ; BSR set to: 1
 23635                           ;app_delCmd.c: 111: }
 23636                           
 23637                           ; BSR set to: 1
 23638                           ;app_delCmd.c: 110: break;
 23639                           
 23640                           ;app_delCmd.c: 109: default:
 23641                           
 23642                           ;app_delCmd.c: 107: break;
 23643  004880  D00A               	goto	l2833
 23644  004882                     l2829:
 23645                           
 23646                           ; BSR set to: 1
 23647                           
 23648                           ; BSR set to: 1
 23649  004882  51D6               	movf	delCmdFsm@currentState& (0+255),w,b
 23650                           
 23651                           ; Switch size 1, requested type "space"
 23652                           ; Number of cases is 3, Range of values is 0 to 2
 23653                           ; switch strategies available:
 23654                           ; Name         Instructions Cycles
 23655                           ; simple_byte           10     6 (average)
 23656                           ;	Chosen strategy is simple_byte
 23657  004884  0A00               	xorlw	0	; case 0
 23658  004886  B4D8               	btfsc	status,2,c
 23659  004888  D7C9               	goto	l2830
 23660  00488A  0A01               	xorlw	1	; case 1
 23661  00488C  B4D8               	btfsc	status,2,c
 23662  00488E  D7D2               	goto	l2834
 23663  004890  0A03               	xorlw	3	; case 2
 23664  004892  B4D8               	btfsc	status,2,c
 23665  004894  D7F1               	goto	l2838
 23666  004896                     l2833:
 23667                           
 23668                           ; BSR set to: 1
 23669                           ;app_delCmd.c: 112: return isComplete;
 23670                           
 23671                           ; BSR set to: 1
 23672  004896  5122               	movf	delCmdFsm@isComplete& (0+255),w,b
 23673  004898  0012               	return	
 23674  00489A                     __end_of_delCmdFsm:
 23675                           	opt stack 0
 23676                           tosu	equ	0xFFF
 23677                           tosh	equ	0xFFE
 23678                           tosl	equ	0xFFD
 23679                           pclath	equ	0xFFA
 23680                           tblptru	equ	0xFF8
 23681                           tblptrh	equ	0xFF7
 23682                           tblptrl	equ	0xFF6
 23683                           tablat	equ	0xFF5
 23684                           prodh	equ	0xFF4
 23685                           prodl	equ	0xFF3
 23686                           intcon	equ	0xFF2
 23687                           intcon2	equ	0xFF1
 23688                           intcon3	equ	0xFF0
 23689                           indf0	equ	0xFEF
 23690                           postinc0	equ	0xFEE
 23691                           plusw0	equ	0xFEB
 23692                           fsr0h	equ	0xFEA
 23693                           fsr0l	equ	0xFE9
 23694                           wreg	equ	0xFE8
 23695                           indf1	equ	0xFE7
 23696                           postinc1	equ	0xFE6
 23697                           postdec1	equ	0xFE5
 23698                           fsr1h	equ	0xFE2
 23699                           fsr1l	equ	0xFE1
 23700                           indf2	equ	0xFDF
 23701                           postinc2	equ	0xFDE
 23702                           postdec2	equ	0xFDD
 23703                           plusw2	equ	0xFDB
 23704                           fsr2h	equ	0xFDA
 23705                           fsr2l	equ	0xFD9
 23706                           status	equ	0xFD8
 23707                           
 23708 ;; *************** function _addCmdFsm *****************
 23709 ;; Defined at:
 23710 ;;		line 72 in file "../Source/c/04_App/app_addCmd.c"
 23711 ;; Parameters:    Size  Location     Type
 23712 ;;  receivedNumb    2   17[BANK1 ] PTR unsigned char 
 23713 ;;		 -> receivedNumber(13), 
 23714 ;;  smsText         2   19[BANK1 ] PTR unsigned char 
 23715 ;;		 -> smsText(20), 
 23716 ;; Auto vars:     Size  Location     Type
 23717 ;;  numberInMemo    1   23[BANK1 ] unsigned char 
 23718 ;;  masterOpResu    1   22[BANK1 ] unsigned char 
 23719 ;;  isComplete      1   21[BANK1 ] unsigned char 
 23720 ;; Return value:  Size  Location     Type
 23721 ;;                  1    wreg      unsigned char 
 23722 ;; Registers used:
 23723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23724 ;; Tracked objects:
 23725 ;;		On entry : 0/0
 23726 ;;		On exit  : 0/0
 23727 ;;		Unchanged: 0/0
 23728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23729 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23730 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23732 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23733 ;;Total ram usage:        7 bytes
 23734 ;; Hardware stack levels used:    1
 23735 ;; Hardware stack levels required when called:   18
 23736 ;; This function calls:
 23737 ;;		_findEmptySpot
 23738 ;;		_isMasterNumber
 23739 ;;		_isNumberInMemory
 23740 ;;		_saveNumberInMemory
 23741 ;; This function is called by:
 23742 ;;		_MyApp_Task
 23743 ;; This function uses a non-reentrant model
 23744 ;;
 23745                           
 23746                           	psect	text111
 23747  003F9C                     __ptext111:
 23748                           	opt stack 0
 23749  003F9C                     _addCmdFsm:
 23750                           	opt stack 9
 23751                           
 23752                           ;app_addCmd.c: 74: static addFsmStates currentState = ADD_FSM_CHECK_MASTER;
 23753                           ;app_addCmd.c: 75: bool isComplete = 0;
 23754                           
 23755                           ; BSR set to: 1
 23756                           ;incstack = 0
 23757  003F9C  0E00               	movlw	0
 23758  003F9E  0101               	movlb	1	; () banked
 23759  003FA0  6F15               	movwf	addCmdFsm@isComplete& (0+255),b
 23760                           
 23761                           ;app_addCmd.c: 76: uint8_t numberInMemory = 1;
 23762  003FA2  0E01               	movlw	1
 23763  003FA4  6F17               	movwf	addCmdFsm@numberInMemory& (0+255),b
 23764                           
 23765                           ;app_addCmd.c: 77: uint8_t masterOpResult = OP_FAILED;
 23766  003FA6  0E01               	movlw	1
 23767  003FA8  6F16               	movwf	addCmdFsm@masterOpResult& (0+255),b
 23768                           
 23769                           ;app_addCmd.c: 79: switch (currentState)
 23770  003FAA  D04C               	goto	l2794
 23771  003FAC                     
 23772                           ; BSR set to: 1
 23773                           ;app_addCmd.c: 82: masterOpResult = isMasterNumber(receivedNumber);
 23774                           
 23775                           ; BSR set to: 1
 23776  003FAC  C111  F100         	movff	addCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23777  003FB0  C112  F101         	movff	addCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23778  003FB4  ECFC  F029         	call	_isMasterNumber	;wreg free
 23779  003FB8  0101               	movlb	1	; () banked
 23780  003FBA  6F16               	movwf	addCmdFsm@masterOpResult& (0+255),b
 23781                           
 23782                           ; BSR set to: 1
 23783                           ;app_addCmd.c: 83: if (masterOpResult == OP_SUCCESS)
 23784  003FBC  5116               	movf	addCmdFsm@masterOpResult& (0+255),w,b
 23785  003FBE  A4D8               	btfss	status,2,c
 23786  003FC0  D002               	goto	l2796
 23787                           
 23788                           ; BSR set to: 1
 23789                           ;app_addCmd.c: 84: {
 23790                           ;app_addCmd.c: 85: currentState = ADD_FSM_CHECK_DUPLICATED;
 23791  003FC2  0E01               	movlw	1
 23792  003FC4  D01B               	goto	L46
 23793  003FC6                     l2796:
 23794                           
 23795                           ; BSR set to: 1
 23796                           ;app_addCmd.c: 87: else if (masterOpResult == OP_FAILED)
 23797                           
 23798                           ; BSR set to: 1
 23799  003FC6  0516               	decf	addCmdFsm@masterOpResult& (0+255),w,b
 23800  003FC8  A4D8               	btfss	status,2,c
 23801  003FCA  D049               	goto	l2799
 23802  003FCC                     u15830:
 23803                           
 23804                           ; BSR set to: 1
 23805                           ;app_addCmd.c: 88: {
 23806                           ;app_addCmd.c: 89: currentState = ADD_FSM_COMPLETE;
 23807  003FCC  0E03               	movlw	3
 23808  003FCE  D016               	goto	L46
 23809  003FD0                     
 23810                           ; BSR set to: 1
 23811                           ;app_addCmd.c: 94: numberInMemory = isNumberInMemory(smsText + 4);
 23812                           
 23813                           ; BSR set to: 1
 23814  003FD0  0E04               	movlw	4
 23815  003FD2  2513               	addwf	addCmdFsm@smsText& (0+255),w,b
 23816  003FD4  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 23817  003FD6  0E00               	movlw	0
 23818  003FD8  2114               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23819  003FDA  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 23820  003FDC  EC50  F029         	call	_isNumberInMemory	;wreg free
 23821  003FE0  0101               	movlb	1	; () banked
 23822  003FE2  6F17               	movwf	addCmdFsm@numberInMemory& (0+255),b
 23823                           
 23824                           ; BSR set to: 1
 23825                           ;app_addCmd.c: 95: if (numberInMemory == 1)
 23826  003FE4  0517               	decf	addCmdFsm@numberInMemory& (0+255),w,b
 23827  003FE6  A4D8               	btfss	status,2,c
 23828  003FE8  D002               	goto	l2801
 23829                           
 23830                           ; BSR set to: 1
 23831                           ;app_addCmd.c: 96: {
 23832                           ;app_addCmd.c: 97: currentState = ADD_FSM_SAVE_NEW;
 23833  003FEA  0E02               	movlw	2
 23834  003FEC  D007               	goto	L46
 23835  003FEE                     l2801:
 23836                           
 23837                           ; BSR set to: 1
 23838                           ;app_addCmd.c: 99: else if (numberInMemory != 0 && numberInMemory != 1)
 23839                           
 23840                           ; BSR set to: 1
 23841  003FEE  5117               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 23842  003FF0  B4D8               	btfsc	status,2,c
 23843  003FF2  D035               	goto	l2799
 23844                           
 23845                           ; BSR set to: 1
 23846  003FF4  0517               	decf	addCmdFsm@numberInMemory& (0+255),w,b
 23847  003FF6  B4D8               	btfsc	status,2,c
 23848  003FF8  D032               	goto	l2799
 23849  003FFA  D7E8               	goto	u15830
 23850  003FFC                     L46:
 23851  003FFC  6FD7               	movwf	addCmdFsm@currentState& (0+255),b
 23852                           
 23853                           ; BSR set to: 1
 23854                           ;app_addCmd.c: 102: }
 23855                           ;app_addCmd.c: 103: break;
 23856                           
 23857                           ; BSR set to: 1
 23858  003FFE  D02F               	goto	l2799
 23859  004000                     
 23860                           ; BSR set to: 1
 23861                           ;app_addCmd.c: 106: numberInMemory = findEmptySpot();
 23862                           
 23863                           ; BSR set to: 1
 23864  004000  ECD4  F02D         	call	_findEmptySpot	;wreg free
 23865  004004  0101               	movlb	1	; () banked
 23866  004006  6F17               	movwf	addCmdFsm@numberInMemory& (0+255),b
 23867                           
 23868                           ; BSR set to: 1
 23869                           ;app_addCmd.c: 107: if (numberInMemory == 1)
 23870  004008  0517               	decf	addCmdFsm@numberInMemory& (0+255),w,b
 23871  00400A  B4D8               	btfsc	status,2,c
 23872  00400C  D7DF               	goto	u15830
 23873                           
 23874                           ; BSR set to: 1
 23875                           ;app_addCmd.c: 111: else if (numberInMemory != 0 && numberInMemory != 1)
 23876                           
 23877                           ; BSR set to: 1
 23878                           
 23879                           ;app_addCmd.c: 110: }
 23880                           
 23881                           ; BSR set to: 1
 23882                           ;app_addCmd.c: 108: {
 23883                           ;app_addCmd.c: 109: currentState = ADD_FSM_COMPLETE;
 23884  00400E  5117               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 23885  004010  B4D8               	btfsc	status,2,c
 23886  004012  D025               	goto	l2799
 23887                           
 23888                           ; BSR set to: 1
 23889  004014  0517               	decf	addCmdFsm@numberInMemory& (0+255),w,b
 23890  004016  B4D8               	btfsc	status,2,c
 23891  004018  D022               	goto	l2799
 23892                           
 23893                           ; BSR set to: 1
 23894                           ;app_addCmd.c: 112: {
 23895                           ;app_addCmd.c: 113: saveNumberInMemory(numberInMemory, smsText + 4);
 23896  00401A  0E04               	movlw	4
 23897  00401C  2513               	addwf	addCmdFsm@smsText& (0+255),w,b
 23898  00401E  0100               	movlb	0	; () banked
 23899  004020  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23900  004022  0E00               	movlw	0
 23901  004024  0101               	movlb	1	; () banked
 23902  004026  2114               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23903  004028  0100               	movlb	0	; () banked
 23904  00402A  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23905  00402C  0101               	movlb	1	; () banked
 23906  00402E  5117               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 23907  004030  EC67  F034         	call	_saveNumberInMemory
 23908                           
 23909                           ;app_addCmd.c: 114: currentState = ADD_FSM_COMPLETE;
 23910  004034  0E03               	movlw	3
 23911  004036  0101               	movlb	1	; () banked
 23912  004038  D7E1               	goto	L46
 23913  00403A                     
 23914                           ; BSR set to: 1
 23915                           ;app_addCmd.c: 119: currentState = ADD_FSM_CHECK_MASTER;
 23916                           
 23917                           ; BSR set to: 1
 23918  00403A  0E00               	movlw	0
 23919  00403C  6FD7               	movwf	addCmdFsm@currentState& (0+255),b
 23920                           
 23921                           ;app_addCmd.c: 120: isComplete = 1;
 23922  00403E  0E01               	movlw	1
 23923  004040  6F15               	movwf	addCmdFsm@isComplete& (0+255),b
 23924                           
 23925                           ; BSR set to: 1
 23926                           ;app_addCmd.c: 125: }
 23927                           
 23928                           ; BSR set to: 1
 23929                           ;app_addCmd.c: 124: break;
 23930                           
 23931                           ;app_addCmd.c: 123: default:
 23932                           
 23933                           ;app_addCmd.c: 121: break;
 23934  004042  D00D               	goto	l2799
 23935  004044                     l2794:
 23936                           
 23937                           ; BSR set to: 1
 23938                           
 23939                           ; BSR set to: 1
 23940  004044  51D7               	movf	addCmdFsm@currentState& (0+255),w,b
 23941                           
 23942                           ; Switch size 1, requested type "space"
 23943                           ; Number of cases is 4, Range of values is 0 to 3
 23944                           ; switch strategies available:
 23945                           ; Name         Instructions Cycles
 23946                           ; simple_byte           13     7 (average)
 23947                           ;	Chosen strategy is simple_byte
 23948  004046  0A00               	xorlw	0	; case 0
 23949  004048  B4D8               	btfsc	status,2,c
 23950  00404A  D7B0               	goto	l2795
 23951  00404C  0A01               	xorlw	1	; case 1
 23952  00404E  B4D8               	btfsc	status,2,c
 23953  004050  D7BF               	goto	l2800
 23954  004052  0A03               	xorlw	3	; case 2
 23955  004054  B4D8               	btfsc	status,2,c
 23956  004056  D7D4               	goto	l2804
 23957  004058  0A01               	xorlw	1	; case 3
 23958  00405A  B4D8               	btfsc	status,2,c
 23959  00405C  D7EE               	goto	l2808
 23960  00405E                     l2799:
 23961                           
 23962                           ; BSR set to: 1
 23963                           ;app_addCmd.c: 126: return isComplete;
 23964                           
 23965                           ; BSR set to: 1
 23966  00405E  5115               	movf	addCmdFsm@isComplete& (0+255),w,b
 23967  004060  0012               	return	
 23968  004062                     __end_of_addCmdFsm:
 23969                           	opt stack 0
 23970                           tosu	equ	0xFFF
 23971                           tosh	equ	0xFFE
 23972                           tosl	equ	0xFFD
 23973                           pclath	equ	0xFFA
 23974                           tblptru	equ	0xFF8
 23975                           tblptrh	equ	0xFF7
 23976                           tblptrl	equ	0xFF6
 23977                           tablat	equ	0xFF5
 23978                           prodh	equ	0xFF4
 23979                           prodl	equ	0xFF3
 23980                           intcon	equ	0xFF2
 23981                           intcon2	equ	0xFF1
 23982                           intcon3	equ	0xFF0
 23983                           indf0	equ	0xFEF
 23984                           postinc0	equ	0xFEE
 23985                           plusw0	equ	0xFEB
 23986                           fsr0h	equ	0xFEA
 23987                           fsr0l	equ	0xFE9
 23988                           wreg	equ	0xFE8
 23989                           indf1	equ	0xFE7
 23990                           postinc1	equ	0xFE6
 23991                           postdec1	equ	0xFE5
 23992                           fsr1h	equ	0xFE2
 23993                           fsr1l	equ	0xFE1
 23994                           indf2	equ	0xFDF
 23995                           postinc2	equ	0xFDE
 23996                           postdec2	equ	0xFDD
 23997                           plusw2	equ	0xFDB
 23998                           fsr2h	equ	0xFDA
 23999                           fsr2l	equ	0xFD9
 24000                           status	equ	0xFD8
 24001                           
 24002 ;; *************** function _saveNumberInMemory *****************
 24003 ;; Defined at:
 24004 ;;		line 116 in file "../Source/c/04_App/app_utils.c"
 24005 ;; Parameters:    Size  Location     Type
 24006 ;;  address         1    wreg     unsigned char 
 24007 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 24008 ;;		 -> delCmdFsm@emptyNumber(13), smsText(20), callerNumber(13), 
 24009 ;; Auto vars:     Size  Location     Type
 24010 ;;  address         1   56[BANK0 ] unsigned char 
 24011 ;; Return value:  Size  Location     Type
 24012 ;;                  1    wreg      void 
 24013 ;; Registers used:
 24014 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24015 ;; Tracked objects:
 24016 ;;		On entry : 0/0
 24017 ;;		On exit  : 0/0
 24018 ;;		Unchanged: 0/0
 24019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24023 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24024 ;;Total ram usage:        3 bytes
 24025 ;; Hardware stack levels used:    1
 24026 ;; Hardware stack levels required when called:   14
 24027 ;; This function calls:
 24028 ;;		_Eeprom_Write
 24029 ;; This function is called by:
 24030 ;;		_initFsm
 24031 ;;		_addCmdFsm
 24032 ;;		_delCmdFsm
 24033 ;; This function uses a non-reentrant model
 24034 ;;
 24035                           
 24036                           	psect	text112
 24037  0068CE                     __ptext112:
 24038                           	opt stack 0
 24039  0068CE                     _saveNumberInMemory:
 24040                           	opt stack 12
 24041                           
 24042                           ; BSR set to: 1
 24043                           ;incstack = 0
 24044                           ;saveNumberInMemory@address stored from wreg
 24045  0068CE  0100               	movlb	0	; () banked
 24046  0068D0  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 24047                           
 24048                           ;app_utils.c: 118: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 24049  0068D2  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 24050  0068D6  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 24051  0068DA  0E0D               	movlw	13
 24052  0068DC  0100               	movlb	0	; () banked
 24053  0068DE  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 24054  0068E0  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 24055  0068E2  ECAB  F02D         	call	_Eeprom_Write
 24056  0068E6  0012               	return		;funcret
 24057  0068E8                     __end_of_saveNumberInMemory:
 24058                           	opt stack 0
 24059                           tosu	equ	0xFFF
 24060                           tosh	equ	0xFFE
 24061                           tosl	equ	0xFFD
 24062                           pclath	equ	0xFFA
 24063                           tblptru	equ	0xFF8
 24064                           tblptrh	equ	0xFF7
 24065                           tblptrl	equ	0xFF6
 24066                           tablat	equ	0xFF5
 24067                           prodh	equ	0xFF4
 24068                           prodl	equ	0xFF3
 24069                           intcon	equ	0xFF2
 24070                           intcon2	equ	0xFF1
 24071                           intcon3	equ	0xFF0
 24072                           indf0	equ	0xFEF
 24073                           postinc0	equ	0xFEE
 24074                           plusw0	equ	0xFEB
 24075                           fsr0h	equ	0xFEA
 24076                           fsr0l	equ	0xFE9
 24077                           wreg	equ	0xFE8
 24078                           indf1	equ	0xFE7
 24079                           postinc1	equ	0xFE6
 24080                           postdec1	equ	0xFE5
 24081                           fsr1h	equ	0xFE2
 24082                           fsr1l	equ	0xFE1
 24083                           indf2	equ	0xFDF
 24084                           postinc2	equ	0xFDE
 24085                           postdec2	equ	0xFDD
 24086                           plusw2	equ	0xFDB
 24087                           fsr2h	equ	0xFDA
 24088                           fsr2l	equ	0xFD9
 24089                           status	equ	0xFD8
 24090                           
 24091 ;; *************** function _Eeprom_Write *****************
 24092 ;; Defined at:
 24093 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 24094 ;; Parameters:    Size  Location     Type
 24095 ;;  MemoryAddres    1    wreg     unsigned char 
 24096 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 24097 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), callerNumber(13), 
 24098 ;;  DataLength      1   49[BANK0 ] unsigned char 
 24099 ;; Auto vars:     Size  Location     Type
 24100 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 24101 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 24102 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 24103 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 24104 ;; Return value:  Size  Location     Type
 24105 ;;                  1    wreg      unsigned char 
 24106 ;; Registers used:
 24107 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24108 ;; Tracked objects:
 24109 ;;		On entry : 0/0
 24110 ;;		On exit  : 0/0
 24111 ;;		Unchanged: 0/0
 24112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24113 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24114 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24116 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24117 ;;Total ram usage:        7 bytes
 24118 ;; Hardware stack levels used:    1
 24119 ;; Hardware stack levels required when called:   13
 24120 ;; This function calls:
 24121 ;;		_I2cSlv_SendI2cMsg
 24122 ;;		_StringCopy
 24123 ;; This function is called by:
 24124 ;;		_savePreamble
 24125 ;;		_saveNumberInMemory
 24126 ;; This function uses a non-reentrant model
 24127 ;;
 24128                           
 24129                           	psect	text113
 24130  005B56                     __ptext113:
 24131                           	opt stack 0
 24132  005B56                     _Eeprom_Write:
 24133                           	opt stack 12
 24134                           
 24135                           ;incstack = 0
 24136                           ;Eeprom_Write@MemoryAddress stored from wreg
 24137  005B56  0100               	movlb	0	; () banked
 24138  005B58  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 24139                           
 24140                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 24141  005B5A  0E50               	movlw	80
 24142  005B5C  0100               	movlb	0	; () banked
 24143  005B5E  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 24144                           
 24145                           ; BSR set to: 0
 24146                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 24147  005B60  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 24148  005B62  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 24149                           
 24150                           ; BSR set to: 0
 24151                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 24152  005B64  0E00               	movlw	0
 24153  005B66  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24154                           
 24155                           ; BSR set to: 0
 24156                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 24157  005B68  0E10               	movlw	16
 24158  005B6A  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 24159  005B6C  0012               	return	
 24160                           
 24161                           ; BSR set to: 0
 24162                           ;eeprom_if.c: 85: {
 24163                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 24164  005B6E  C093  F4BB         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 24165                           
 24166                           ; BSR set to: 0
 24167                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 24168  005B72  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 24169  005B76  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 24170  005B7A  0EBC               	movlw	low (_EepromBuffer+1)
 24171  005B7C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 24172  005B7E  0E04               	movlw	high (_EepromBuffer+1)
 24173  005B80  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24174  005B82  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 24175  005B86  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 24176  005B88  EC6C  F02B         	call	_StringCopy	;wreg free
 24177                           
 24178                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 24179  005B8C  0EBB               	movlw	low _EepromBuffer
 24180  005B8E  0100               	movlb	0	; () banked
 24181  005B90  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 24182  005B92  0E04               	movlw	high _EepromBuffer
 24183  005B94  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 24184  005B96  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 24185  005B9A  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 24186  005B9E  ECD3  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 24187  005BA2  0100               	movlb	0	; () banked
 24188  005BA4  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24189                           
 24190                           ; BSR set to: 0
 24191  005BA6  0012               	return	
 24192  005BA8                     __end_of_Eeprom_Write:
 24193                           	opt stack 0
 24194                           tosu	equ	0xFFF
 24195                           tosh	equ	0xFFE
 24196                           tosl	equ	0xFFD
 24197                           pclath	equ	0xFFA
 24198                           tblptru	equ	0xFF8
 24199                           tblptrh	equ	0xFF7
 24200                           tblptrl	equ	0xFF6
 24201                           tablat	equ	0xFF5
 24202                           prodh	equ	0xFF4
 24203                           prodl	equ	0xFF3
 24204                           intcon	equ	0xFF2
 24205                           intcon2	equ	0xFF1
 24206                           intcon3	equ	0xFF0
 24207                           indf0	equ	0xFEF
 24208                           postinc0	equ	0xFEE
 24209                           plusw0	equ	0xFEB
 24210                           fsr0h	equ	0xFEA
 24211                           fsr0l	equ	0xFE9
 24212                           wreg	equ	0xFE8
 24213                           indf1	equ	0xFE7
 24214                           postinc1	equ	0xFE6
 24215                           postdec1	equ	0xFE5
 24216                           fsr1h	equ	0xFE2
 24217                           fsr1l	equ	0xFE1
 24218                           indf2	equ	0xFDF
 24219                           postinc2	equ	0xFDE
 24220                           postdec2	equ	0xFDD
 24221                           plusw2	equ	0xFDB
 24222                           fsr2h	equ	0xFDA
 24223                           fsr2l	equ	0xFD9
 24224                           status	equ	0xFD8
 24225                           
 24226 ;; *************** function _isNumberInMemory *****************
 24227 ;; Defined at:
 24228 ;;		line 143 in file "../Source/c/04_App/app_utils.c"
 24229 ;; Parameters:    Size  Location     Type
 24230 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24231 ;;		 -> receivedNumber(13), smsText(20), 
 24232 ;; Auto vars:     Size  Location     Type
 24233 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 24234 ;;  positionInMe    1   16[BANK1 ] unsigned char 
 24235 ;;  memoryOpResu    1   15[BANK1 ] enum E8246
 24236 ;; Return value:  Size  Location     Type
 24237 ;;                  1    wreg      unsigned char 
 24238 ;; Registers used:
 24239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24240 ;; Tracked objects:
 24241 ;;		On entry : 0/0
 24242 ;;		On exit  : 0/0
 24243 ;;		Unchanged: 0/0
 24244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24245 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24246 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24248 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24249 ;;Total ram usage:       17 bytes
 24250 ;; Hardware stack levels used:    1
 24251 ;; Hardware stack levels required when called:   17
 24252 ;; This function calls:
 24253 ;;		_Eeprom_Read
 24254 ;;		_StringCompare
 24255 ;;		_isNumberValid
 24256 ;; This function is called by:
 24257 ;;		_addCmdFsm
 24258 ;;		_delCmdFsm
 24259 ;;		_triggerCmdFsm
 24260 ;; This function uses a non-reentrant model
 24261 ;;
 24262                           
 24263                           	psect	text114
 24264  0052A0                     __ptext114:
 24265                           	opt stack 0
 24266  0052A0                     _isNumberInMemory:
 24267                           	opt stack 9
 24268                           
 24269                           ;app_utils.c: 145: static uint8_t currentPosition = 32;
 24270                           ;app_utils.c: 146: uint8_t positionInMemory = 0;
 24271                           
 24272                           ; BSR set to: 0
 24273                           ;incstack = 0
 24274  0052A0  0E00               	movlw	0
 24275  0052A2  0101               	movlb	1	; () banked
 24276  0052A4  6F10               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 24277                           
 24278                           ;app_utils.c: 147: uint8_t readBuffer[((UINT8)(13))];
 24279                           ;app_utils.c: 148: EepromStsType memoryOpResult = OP_PENDING;
 24280  0052A6  0E02               	movlw	2
 24281  0052A8  6F0F               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24282                           
 24283                           ; BSR set to: 1
 24284                           ;app_utils.c: 153: }
 24285                           ;app_utils.c: 154: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24286                           
 24287                           ; BSR set to: 1
 24288                           
 24289                           ; BSR set to: 1
 24290                           ;app_utils.c: 151: {
 24291                           ;app_utils.c: 152: currentPosition = 32;
 24292                           
 24293                           ;app_utils.c: 150: if (currentPosition >= 32 * 10)
 24294  0052AA  0E02               	movlw	low isNumberInMemory@readBuffer
 24295  0052AC  0100               	movlb	0	; () banked
 24296  0052AE  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24297  0052B0  0E01               	movlw	high isNumberInMemory@readBuffer
 24298  0052B2  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24299  0052B4  0E0D               	movlw	13
 24300  0052B6  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24301  0052B8  5041               	movf	isNumberInMemory@currentPosition,w,c
 24302  0052BA  EC2D  F02D         	call	_Eeprom_Read
 24303  0052BE  0101               	movlb	1	; () banked
 24304  0052C0  6F0F               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24305                           
 24306                           ; BSR set to: 1
 24307                           ;app_utils.c: 155: if (memoryOpResult != OP_PENDING)
 24308  0052C2  0E02               	movlw	2
 24309  0052C4  190F               	xorwf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24310  0052C6  B4D8               	btfsc	status,2,c
 24311  0052C8  D022               	goto	l2758
 24312                           
 24313                           ; BSR set to: 1
 24314                           ;app_utils.c: 156: {
 24315                           ;app_utils.c: 157: if (isNumberValid(readBuffer))
 24316  0052CA  0E02               	movlw	low isNumberInMemory@readBuffer
 24317  0052CC  0100               	movlb	0	; () banked
 24318  0052CE  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24319  0052D0  0E01               	movlw	high isNumberInMemory@readBuffer
 24320  0052D2  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24321  0052D4  EC39  F02B         	call	_isNumberValid	;wreg free
 24322  0052D8  0900               	iorlw	0
 24323  0052DA  B4D8               	btfsc	status,2,c
 24324  0052DC  D016               	goto	l2756
 24325                           
 24326                           ;app_utils.c: 158: {
 24327                           ;app_utils.c: 159: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24328  0052DE  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 24329  0052E2  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 24330  0052E6  0E02               	movlw	low isNumberInMemory@readBuffer
 24331  0052E8  0100               	movlb	0	; () banked
 24332  0052EA  6F7F               	movwf	StringCompare@String2& (0+255),b
 24333  0052EC  0E01               	movlw	high isNumberInMemory@readBuffer
 24334  0052EE  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24335  0052F0  0E00               	movlw	0
 24336  0052F2  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24337  0052F4  0E0D               	movlw	13
 24338  0052F6  6F81               	movwf	StringCompare@Len& (0+255),b
 24339  0052F8  ECFD  F02D         	call	_StringCompare	;wreg free
 24340  0052FC  0900               	iorlw	0
 24341  0052FE  B4D8               	btfsc	status,2,c
 24342  005300  D004               	goto	l2756
 24343                           
 24344                           ;app_utils.c: 160: {
 24345                           ;app_utils.c: 161: positionInMemory = currentPosition;
 24346  005302  C041  F110         	movff	isNumberInMemory@currentPosition,isNumberInMemory@positionInMemory
 24347                           
 24348                           ;app_utils.c: 162: currentPosition = 32 * 10;
 24349  005306  0E40               	movlw	64
 24350  005308  6E41               	movwf	isNumberInMemory@currentPosition,c
 24351  00530A                     l2756:
 24352                           
 24353                           ;app_utils.c: 167: }
 24354                           ;app_utils.c: 168: }
 24355                           ;app_utils.c: 169: currentPosition += 32;
 24356                           
 24357                           ;app_utils.c: 164: else
 24358                           ;app_utils.c: 165: {
 24359  00530A  0E20               	movlw	32
 24360  00530C  2641               	addwf	isNumberInMemory@currentPosition,f,c
 24361  00530E                     l2758:
 24362                           
 24363                           ;app_utils.c: 174: }
 24364                           ;app_utils.c: 175: return positionInMemory;
 24365  00530E  0101               	movlb	1	; () banked
 24366  005310  5110               	movf	isNumberInMemory@positionInMemory& (0+255),w,b
 24367  005312  0012               	return	
 24368  005314                     __end_of_isNumberInMemory:
 24369                           	opt stack 0
 24370                           tosu	equ	0xFFF
 24371                           tosh	equ	0xFFE
 24372                           tosl	equ	0xFFD
 24373                           pclath	equ	0xFFA
 24374                           tblptru	equ	0xFF8
 24375                           tblptrh	equ	0xFF7
 24376                           tblptrl	equ	0xFF6
 24377                           tablat	equ	0xFF5
 24378                           prodh	equ	0xFF4
 24379                           prodl	equ	0xFF3
 24380                           intcon	equ	0xFF2
 24381                           intcon2	equ	0xFF1
 24382                           intcon3	equ	0xFF0
 24383                           indf0	equ	0xFEF
 24384                           postinc0	equ	0xFEE
 24385                           plusw0	equ	0xFEB
 24386                           fsr0h	equ	0xFEA
 24387                           fsr0l	equ	0xFE9
 24388                           wreg	equ	0xFE8
 24389                           indf1	equ	0xFE7
 24390                           postinc1	equ	0xFE6
 24391                           postdec1	equ	0xFE5
 24392                           fsr1h	equ	0xFE2
 24393                           fsr1l	equ	0xFE1
 24394                           indf2	equ	0xFDF
 24395                           postinc2	equ	0xFDE
 24396                           postdec2	equ	0xFDD
 24397                           plusw2	equ	0xFDB
 24398                           fsr2h	equ	0xFDA
 24399                           fsr2l	equ	0xFD9
 24400                           status	equ	0xFD8
 24401                           
 24402 ;; *************** function _isMasterNumber *****************
 24403 ;; Defined at:
 24404 ;;		line 178 in file "../Source/c/04_App/app_utils.c"
 24405 ;; Parameters:    Size  Location     Type
 24406 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24407 ;;		 -> receivedNumber(13), 
 24408 ;; Auto vars:     Size  Location     Type
 24409 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 24410 ;;  memoryOpResu    1   15[BANK1 ] enum E8246
 24411 ;; Return value:  Size  Location     Type
 24412 ;;                  1    wreg      unsigned char 
 24413 ;; Registers used:
 24414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24415 ;; Tracked objects:
 24416 ;;		On entry : 0/0
 24417 ;;		On exit  : 0/0
 24418 ;;		Unchanged: 0/0
 24419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24420 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24421 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24423 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24424 ;;Total ram usage:       16 bytes
 24425 ;; Hardware stack levels used:    1
 24426 ;; Hardware stack levels required when called:   17
 24427 ;; This function calls:
 24428 ;;		_Eeprom_Read
 24429 ;;		_StringCompare
 24430 ;;		_isNumberValid
 24431 ;; This function is called by:
 24432 ;;		_addCmdFsm
 24433 ;;		_delCmdFsm
 24434 ;; This function uses a non-reentrant model
 24435 ;;
 24436                           
 24437                           	psect	text115
 24438  0053F8                     __ptext115:
 24439                           	opt stack 0
 24440  0053F8                     _isMasterNumber:
 24441                           	opt stack 9
 24442                           
 24443                           ;app_utils.c: 180: uint8_t readBuffer[((UINT8)(13))];
 24444                           ;app_utils.c: 181: EepromStsType memoryOpResult = OP_PENDING;
 24445                           
 24446                           ; BSR set to: 1
 24447                           ;incstack = 0
 24448  0053F8  0E02               	movlw	2
 24449  0053FA  0101               	movlb	1	; () banked
 24450  0053FC  6F0F               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24451                           
 24452                           ; BSR set to: 1
 24453                           ;app_utils.c: 183: memoryOpResult = Eeprom_Read(16, readBuffer, ((UINT8)(13)));
 24454  0053FE  0E02               	movlw	low isMasterNumber@readBuffer
 24455  005400  0100               	movlb	0	; () banked
 24456  005402  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24457  005404  0E01               	movlw	high isMasterNumber@readBuffer
 24458  005406  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24459  005408  0E0D               	movlw	13
 24460  00540A  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24461  00540C  0E10               	movlw	16
 24462  00540E  EC2D  F02D         	call	_Eeprom_Read
 24463  005412  0101               	movlb	1	; () banked
 24464  005414  6F0F               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24465                           
 24466                           ; BSR set to: 1
 24467                           ;app_utils.c: 184: if (memoryOpResult != OP_PENDING)
 24468  005416  0E02               	movlw	2
 24469  005418  190F               	xorwf	isMasterNumber@memoryOpResult& (0+255),w,b
 24470  00541A  B4D8               	btfsc	status,2,c
 24471  00541C  D021               	goto	l2764
 24472                           
 24473                           ; BSR set to: 1
 24474                           ;app_utils.c: 185: {
 24475                           ;app_utils.c: 186: memoryOpResult = OP_FAILED;
 24476  00541E  0E01               	movlw	1
 24477  005420  6F0F               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24478                           
 24479                           ; BSR set to: 1
 24480                           ;app_utils.c: 187: if (isNumberValid(readBuffer))
 24481  005422  0E02               	movlw	low isMasterNumber@readBuffer
 24482  005424  0100               	movlb	0	; () banked
 24483  005426  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24484  005428  0E01               	movlw	high isMasterNumber@readBuffer
 24485  00542A  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24486  00542C  EC39  F02B         	call	_isNumberValid	;wreg free
 24487  005430  0900               	iorlw	0
 24488  005432  B4D8               	btfsc	status,2,c
 24489  005434  D015               	goto	l2764
 24490                           
 24491                           ;app_utils.c: 188: {
 24492                           ;app_utils.c: 189: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24493  005436  C100  F07D         	movff	isMasterNumber@phoneNumber,StringCompare@String1
 24494  00543A  C101  F07E         	movff	isMasterNumber@phoneNumber+1,StringCompare@String1+1
 24495  00543E  0E02               	movlw	low isMasterNumber@readBuffer
 24496  005440  0100               	movlb	0	; () banked
 24497  005442  6F7F               	movwf	StringCompare@String2& (0+255),b
 24498  005444  0E01               	movlw	high isMasterNumber@readBuffer
 24499  005446  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24500  005448  0E00               	movlw	0
 24501  00544A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24502  00544C  0E0D               	movlw	13
 24503  00544E  6F81               	movwf	StringCompare@Len& (0+255),b
 24504  005450  ECFD  F02D         	call	_StringCompare	;wreg free
 24505  005454  0900               	iorlw	0
 24506  005456  B4D8               	btfsc	status,2,c
 24507  005458  D003               	goto	l2764
 24508                           
 24509                           ;app_utils.c: 190: {
 24510                           ;app_utils.c: 191: memoryOpResult = OP_SUCCESS;
 24511  00545A  0E00               	movlw	0
 24512  00545C  0101               	movlb	1	; () banked
 24513  00545E  6F0F               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24514  005460                     l2764:
 24515                           
 24516                           ;app_utils.c: 192: }
 24517                           ;app_utils.c: 193: }
 24518                           ;app_utils.c: 194: }
 24519                           ;app_utils.c: 195: return memoryOpResult;
 24520                           
 24521                           ; BSR set to: 1
 24522                           
 24523                           ; BSR set to: 1
 24524  005460  0101               	movlb	1	; () banked
 24525  005462  510F               	movf	isMasterNumber@memoryOpResult& (0+255),w,b
 24526  005464  0012               	return	
 24527  005466                     __end_of_isMasterNumber:
 24528                           	opt stack 0
 24529                           tosu	equ	0xFFF
 24530                           tosh	equ	0xFFE
 24531                           tosl	equ	0xFFD
 24532                           pclath	equ	0xFFA
 24533                           tblptru	equ	0xFF8
 24534                           tblptrh	equ	0xFF7
 24535                           tblptrl	equ	0xFF6
 24536                           tablat	equ	0xFF5
 24537                           prodh	equ	0xFF4
 24538                           prodl	equ	0xFF3
 24539                           intcon	equ	0xFF2
 24540                           intcon2	equ	0xFF1
 24541                           intcon3	equ	0xFF0
 24542                           indf0	equ	0xFEF
 24543                           postinc0	equ	0xFEE
 24544                           plusw0	equ	0xFEB
 24545                           fsr0h	equ	0xFEA
 24546                           fsr0l	equ	0xFE9
 24547                           wreg	equ	0xFE8
 24548                           indf1	equ	0xFE7
 24549                           postinc1	equ	0xFE6
 24550                           postdec1	equ	0xFE5
 24551                           fsr1h	equ	0xFE2
 24552                           fsr1l	equ	0xFE1
 24553                           indf2	equ	0xFDF
 24554                           postinc2	equ	0xFDE
 24555                           postdec2	equ	0xFDD
 24556                           plusw2	equ	0xFDB
 24557                           fsr2h	equ	0xFDA
 24558                           fsr2l	equ	0xFD9
 24559                           status	equ	0xFD8
 24560                           
 24561 ;; *************** function _findEmptySpot *****************
 24562 ;; Defined at:
 24563 ;;		line 198 in file "../Source/c/04_App/app_utils.c"
 24564 ;; Parameters:    Size  Location     Type
 24565 ;;		None
 24566 ;; Auto vars:     Size  Location     Type
 24567 ;;  readBuffer     13    0[BANK1 ] unsigned char [13]
 24568 ;;  positionInMe    1   14[BANK1 ] unsigned char 
 24569 ;;  memoryOpResu    1   13[BANK1 ] enum E8246
 24570 ;; Return value:  Size  Location     Type
 24571 ;;                  1    wreg      unsigned char 
 24572 ;; Registers used:
 24573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24574 ;; Tracked objects:
 24575 ;;		On entry : 0/0
 24576 ;;		On exit  : 0/0
 24577 ;;		Unchanged: 0/0
 24578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24580 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24582 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24583 ;;Total ram usage:       15 bytes
 24584 ;; Hardware stack levels used:    1
 24585 ;; Hardware stack levels required when called:   17
 24586 ;; This function calls:
 24587 ;;		_Eeprom_Read
 24588 ;;		_isNumberValid
 24589 ;; This function is called by:
 24590 ;;		_addCmdFsm
 24591 ;; This function uses a non-reentrant model
 24592 ;;
 24593                           
 24594                           	psect	text116
 24595  005BA8                     __ptext116:
 24596                           	opt stack 0
 24597  005BA8                     _findEmptySpot:
 24598                           	opt stack 9
 24599                           
 24600                           ;app_utils.c: 200: static uint8_t currentPosition = 32;
 24601                           ;app_utils.c: 201: uint8_t positionInMemory = 0;
 24602                           
 24603                           ; BSR set to: 1
 24604                           ;incstack = 0
 24605  005BA8  0E00               	movlw	0
 24606  005BAA  0101               	movlb	1	; () banked
 24607  005BAC  6F0E               	movwf	findEmptySpot@positionInMemory& (0+255),b
 24608                           
 24609                           ;app_utils.c: 202: uint8_t readBuffer[((UINT8)(13))];
 24610                           ;app_utils.c: 203: EepromStsType memoryOpResult = OP_PENDING;
 24611  005BAE  0E02               	movlw	2
 24612  005BB0  6F0D               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24613                           
 24614                           ; BSR set to: 1
 24615                           ;app_utils.c: 208: }
 24616                           ;app_utils.c: 209: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24617                           
 24618                           ; BSR set to: 1
 24619                           
 24620                           ; BSR set to: 1
 24621                           ;app_utils.c: 206: {
 24622                           ;app_utils.c: 207: currentPosition = 32;
 24623                           
 24624                           ;app_utils.c: 205: if (currentPosition >= 32 * 10)
 24625  005BB2  0E00               	movlw	low findEmptySpot@readBuffer
 24626  005BB4  0100               	movlb	0	; () banked
 24627  005BB6  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24628  005BB8  0E01               	movlw	high findEmptySpot@readBuffer
 24629  005BBA  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24630  005BBC  0E0D               	movlw	13
 24631  005BBE  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24632  005BC0  5040               	movf	findEmptySpot@currentPosition,w,c
 24633  005BC2  EC2D  F02D         	call	_Eeprom_Read
 24634  005BC6  0101               	movlb	1	; () banked
 24635  005BC8  6F0D               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24636                           
 24637                           ; BSR set to: 1
 24638                           ;app_utils.c: 210: if (memoryOpResult != OP_PENDING)
 24639  005BCA  0E02               	movlw	2
 24640  005BCC  190D               	xorwf	findEmptySpot@memoryOpResult& (0+255),w,b
 24641  005BCE  B4D8               	btfsc	status,2,c
 24642  005BD0  D011               	goto	l2774
 24643                           
 24644                           ; BSR set to: 1
 24645                           ;app_utils.c: 211: {
 24646                           ;app_utils.c: 212: if (isNumberValid(readBuffer))
 24647  005BD2  0E00               	movlw	low findEmptySpot@readBuffer
 24648  005BD4  0100               	movlb	0	; () banked
 24649  005BD6  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24650  005BD8  0E01               	movlw	high findEmptySpot@readBuffer
 24651  005BDA  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24652  005BDC  EC39  F02B         	call	_isNumberValid	;wreg free
 24653  005BE0  0900               	iorlw	0
 24654  005BE2  B4D8               	btfsc	status,2,c
 24655  005BE4  D003               	goto	l2772
 24656                           
 24657                           ;app_utils.c: 213: {
 24658                           ;app_utils.c: 214: currentPosition += 32;
 24659  005BE6  0E20               	movlw	32
 24660  005BE8  2640               	addwf	findEmptySpot@currentPosition,f,c
 24661                           
 24662                           ;app_utils.c: 215: }
 24663  005BEA  D004               	goto	l2774
 24664  005BEC                     l2772:
 24665                           
 24666                           ;app_utils.c: 216: else
 24667                           ;app_utils.c: 217: {
 24668                           ;app_utils.c: 218: positionInMemory = currentPosition;
 24669  005BEC  C040  F10E         	movff	findEmptySpot@currentPosition,findEmptySpot@positionInMemory
 24670                           
 24671                           ;app_utils.c: 219: currentPosition = 32 * 10;
 24672  005BF0  0E40               	movlw	64
 24673  005BF2  6E40               	movwf	findEmptySpot@currentPosition,c
 24674  005BF4                     l2774:
 24675                           
 24676                           ;app_utils.c: 225: }
 24677                           ;app_utils.c: 226: return positionInMemory;
 24678  005BF4  0101               	movlb	1	; () banked
 24679  005BF6  510E               	movf	findEmptySpot@positionInMemory& (0+255),w,b
 24680  005BF8  0012               	return	
 24681  005BFA                     __end_of_findEmptySpot:
 24682                           	opt stack 0
 24683                           tosu	equ	0xFFF
 24684                           tosh	equ	0xFFE
 24685                           tosl	equ	0xFFD
 24686                           pclath	equ	0xFFA
 24687                           tblptru	equ	0xFF8
 24688                           tblptrh	equ	0xFF7
 24689                           tblptrl	equ	0xFF6
 24690                           tablat	equ	0xFF5
 24691                           prodh	equ	0xFF4
 24692                           prodl	equ	0xFF3
 24693                           intcon	equ	0xFF2
 24694                           intcon2	equ	0xFF1
 24695                           intcon3	equ	0xFF0
 24696                           indf0	equ	0xFEF
 24697                           postinc0	equ	0xFEE
 24698                           plusw0	equ	0xFEB
 24699                           fsr0h	equ	0xFEA
 24700                           fsr0l	equ	0xFE9
 24701                           wreg	equ	0xFE8
 24702                           indf1	equ	0xFE7
 24703                           postinc1	equ	0xFE6
 24704                           postdec1	equ	0xFE5
 24705                           fsr1h	equ	0xFE2
 24706                           fsr1l	equ	0xFE1
 24707                           indf2	equ	0xFDF
 24708                           postinc2	equ	0xFDE
 24709                           postdec2	equ	0xFDD
 24710                           plusw2	equ	0xFDB
 24711                           fsr2h	equ	0xFDA
 24712                           fsr2l	equ	0xFD9
 24713                           status	equ	0xFD8
 24714                           
 24715 ;; *************** function _isNumberValid *****************
 24716 ;; Defined at:
 24717 ;;		line 121 in file "../Source/c/04_App/app_utils.c"
 24718 ;; Parameters:    Size  Location     Type
 24719 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 24720 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), smsText(20), 
 24721 ;; Auto vars:     Size  Location     Type
 24722 ;;  i               1   33[BANK0 ] unsigned char 
 24723 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 24724 ;; Return value:  Size  Location     Type
 24725 ;;                  1    wreg      unsigned char 
 24726 ;; Registers used:
 24727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24728 ;; Tracked objects:
 24729 ;;		On entry : 0/0
 24730 ;;		On exit  : 0/0
 24731 ;;		Unchanged: 0/0
 24732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24733 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24734 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24735 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24736 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24737 ;;Total ram usage:        5 bytes
 24738 ;; Hardware stack levels used:    1
 24739 ;; Hardware stack levels required when called:   11
 24740 ;; This function calls:
 24741 ;;		Nothing
 24742 ;; This function is called by:
 24743 ;;		_parseCommand
 24744 ;;		_isNumberInMemory
 24745 ;;		_isMasterNumber
 24746 ;;		_findEmptySpot
 24747 ;; This function uses a non-reentrant model
 24748 ;;
 24749                           
 24750                           	psect	text117
 24751  005672                     __ptext117:
 24752                           	opt stack 0
 24753  005672                     _isNumberValid:
 24754                           	opt stack 14
 24755                           
 24756                           ;app_utils.c: 123: bool isNumberOk = 0;
 24757                           
 24758                           ; BSR set to: 1
 24759                           ;incstack = 0
 24760  005672  0E00               	movlw	0
 24761  005674  0100               	movlb	0	; () banked
 24762  005676  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24763                           
 24764                           ;app_utils.c: 124: uint8_t i = 0;
 24765  005678  0E00               	movlw	0
 24766  00567A  6F81               	movwf	isNumberValid@i& (0+255),b
 24767                           
 24768                           ; BSR set to: 0
 24769                           ;app_utils.c: 125: if (phoneNumber[0] == '+')
 24770  00567C  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 24771  005680  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 24772  005684  0E2B               	movlw	43
 24773  005686  18DE               	xorwf	postinc2,w,c
 24774  005688  A4D8               	btfss	status,2,c
 24775  00568A  D024               	goto	u13170
 24776                           
 24777                           ; BSR set to: 0
 24778                           ;app_utils.c: 126: {
 24779                           ;app_utils.c: 127: for (i = 1; i < ((UINT8)(13)); i++)
 24780  00568C  0E01               	movlw	1
 24781  00568E  6F81               	movwf	isNumberValid@i& (0+255),b
 24782  005690                     l14079:
 24783                           
 24784                           ; BSR set to: 0
 24785  005690  0E0C               	movlw	12
 24786  005692  6581               	cpfsgt	isNumberValid@i& (0+255),b
 24787  005694  D001               	goto	l2744
 24788  005696  D01E               	goto	u13170
 24789  005698                     l2744:
 24790                           
 24791                           ; BSR set to: 0
 24792                           ;app_utils.c: 128: {
 24793                           ;app_utils.c: 129: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 24794                           
 24795                           ; BSR set to: 0
 24796  005698  5181               	movf	isNumberValid@i& (0+255),w,b
 24797  00569A  0D01               	mullw	1
 24798  00569C  50F3               	movf	prodl,w,c
 24799  00569E  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 24800  0056A0  6ED9               	movwf	fsr2l,c
 24801  0056A2  50F4               	movf	prodh,w,c
 24802  0056A4  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 24803  0056A6  6EDA               	movwf	fsr2h,c
 24804  0056A8  0E2F               	movlw	47
 24805  0056AA  64DF               	cpfsgt	indf2,c
 24806  0056AC  D00E               	goto	l2746
 24807                           
 24808                           ; BSR set to: 0
 24809  0056AE  5181               	movf	isNumberValid@i& (0+255),w,b
 24810  0056B0  0D01               	mullw	1
 24811  0056B2  50F3               	movf	prodl,w,c
 24812  0056B4  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 24813  0056B6  6ED9               	movwf	fsr2l,c
 24814  0056B8  50F4               	movf	prodh,w,c
 24815  0056BA  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 24816  0056BC  6EDA               	movwf	fsr2h,c
 24817  0056BE  0E3A               	movlw	58
 24818  0056C0  60DF               	cpfslt	indf2,c
 24819  0056C2  D003               	goto	l2746
 24820                           
 24821                           ; BSR set to: 0
 24822                           ;app_utils.c: 130: {
 24823                           ;app_utils.c: 131: isNumberOk = 1;
 24824  0056C4  0E01               	movlw	1
 24825  0056C6  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24826                           
 24827                           ;app_utils.c: 132: }
 24828  0056C8  D003               	goto	l2747
 24829  0056CA                     l2746:
 24830                           
 24831                           ; BSR set to: 0
 24832                           ;app_utils.c: 133: else
 24833                           ;app_utils.c: 134: {
 24834                           ;app_utils.c: 135: isNumberOk = 0;
 24835                           
 24836                           ; BSR set to: 0
 24837  0056CA  0E00               	movlw	0
 24838  0056CC  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24839                           
 24840                           ;app_utils.c: 136: break;
 24841  0056CE  D002               	goto	u13170
 24842  0056D0                     l2747:
 24843                           
 24844                           ; BSR set to: 0
 24845                           
 24846                           ; BSR set to: 0
 24847  0056D0  2B81               	incf	isNumberValid@i& (0+255),f,b
 24848  0056D2  D7DE               	goto	l14079
 24849  0056D4                     u13170:
 24850                           
 24851                           ; BSR set to: 0
 24852                           ;app_utils.c: 137: }
 24853                           ;app_utils.c: 138: }
 24854                           ;app_utils.c: 139: }
 24855                           ;app_utils.c: 140: return isNumberOk;
 24856                           
 24857                           ; BSR set to: 0
 24858                           
 24859                           ; BSR set to: 0
 24860  0056D4  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 24861  0056D6  0012               	return	
 24862  0056D8                     __end_of_isNumberValid:
 24863                           	opt stack 0
 24864                           tosu	equ	0xFFF
 24865                           tosh	equ	0xFFE
 24866                           tosl	equ	0xFFD
 24867                           pclath	equ	0xFFA
 24868                           tblptru	equ	0xFF8
 24869                           tblptrh	equ	0xFF7
 24870                           tblptrl	equ	0xFF6
 24871                           tablat	equ	0xFF5
 24872                           prodh	equ	0xFF4
 24873                           prodl	equ	0xFF3
 24874                           intcon	equ	0xFF2
 24875                           intcon2	equ	0xFF1
 24876                           intcon3	equ	0xFF0
 24877                           indf0	equ	0xFEF
 24878                           postinc0	equ	0xFEE
 24879                           plusw0	equ	0xFEB
 24880                           fsr0h	equ	0xFEA
 24881                           fsr0l	equ	0xFE9
 24882                           wreg	equ	0xFE8
 24883                           indf1	equ	0xFE7
 24884                           postinc1	equ	0xFE6
 24885                           postdec1	equ	0xFE5
 24886                           fsr1h	equ	0xFE2
 24887                           fsr1l	equ	0xFE1
 24888                           indf2	equ	0xFDF
 24889                           postinc2	equ	0xFDE
 24890                           postdec2	equ	0xFDD
 24891                           plusw2	equ	0xFDB
 24892                           fsr2h	equ	0xFDA
 24893                           fsr2l	equ	0xFD9
 24894                           status	equ	0xFD8
 24895                           
 24896 ;; *************** function _Eeprom_Read *****************
 24897 ;; Defined at:
 24898 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 24899 ;; Parameters:    Size  Location     Type
 24900 ;;  MemoryAddres    1    wreg     unsigned char 
 24901 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 24902 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(4),
      + 
 24903 ;;  DataLength      1   75[BANK0 ] unsigned char 
 24904 ;; Auto vars:     Size  Location     Type
 24905 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 24906 ;;  QuerySts        1   79[BANK0 ] enum E8932
 24907 ;;  ReadSts         1   78[BANK0 ] enum E8958
 24908 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 24909 ;; Return value:  Size  Location     Type
 24910 ;;                  1    wreg      enum E8958
 24911 ;; Registers used:
 24912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24913 ;; Tracked objects:
 24914 ;;		On entry : 0/0
 24915 ;;		On exit  : 0/0
 24916 ;;		Unchanged: 0/0
 24917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24918 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24919 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24921 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24922 ;;Total ram usage:        7 bytes
 24923 ;; Hardware stack levels used:    1
 24924 ;; Hardware stack levels required when called:   16
 24925 ;; This function calls:
 24926 ;;		_I2cSlv_QueryI2cData
 24927 ;; This function is called by:
 24928 ;;		_initEeprom
 24929 ;;		_isNumberInMemory
 24930 ;;		_isMasterNumber
 24931 ;;		_findEmptySpot
 24932 ;; This function uses a non-reentrant model
 24933 ;;
 24934                           
 24935                           	psect	text118
 24936  005A5A                     __ptext118:
 24937                           	opt stack 0
 24938  005A5A                     _Eeprom_Read:
 24939                           	opt stack 9
 24940                           
 24941                           ; BSR set to: 0
 24942                           ;incstack = 0
 24943                           ;Eeprom_Read@MemoryAddress stored from wreg
 24944  005A5A  0100               	movlb	0	; () banked
 24945  005A5C  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 24946                           
 24947                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 24948  005A5E  0E50               	movlw	80
 24949  005A60  0100               	movlb	0	; () banked
 24950  005A62  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 24951                           
 24952                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 24953  005A64  0E00               	movlw	0
 24954  005A66  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 24955                           
 24956                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 24957  005A68  0E02               	movlw	2
 24958  005A6A  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 24959                           
 24960                           ; BSR set to: 0
 24961                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 24962  005A6C  C0AC  F1FC         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 24963                           
 24964                           ; BSR set to: 0
 24965                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 24966  005A70  0EFC               	movlw	low _ReadAddress
 24967  005A72  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 24968  005A74  0E01               	movlw	high _ReadAddress
 24969  005A76  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 24970  005A78  0E01               	movlw	1
 24971  005A7A  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 24972  005A7C  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 24973  005A80  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 24974  005A84  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 24975  005A88  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 24976  005A8C  ECA1  F01C         	call	_I2cSlv_QueryI2cData	;wreg free
 24977  005A90  0100               	movlb	0	; () banked
 24978  005A92  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 24979                           
 24980                           ; BSR set to: 0
 24981                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 24982  005A94  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 24983  005A96  A4D8               	btfss	status,2,c
 24984  005A98  D002               	goto	l2037
 24985                           
 24986                           ; BSR set to: 0
 24987                           ;eeprom_if.c: 114: {
 24988                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 24989  005A9A  0E00               	movlw	0
 24990  005A9C  D005               	goto	L47
 24991  005A9E                     l2037:
 24992                           
 24993                           ; BSR set to: 0
 24994                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 24995                           
 24996                           ; BSR set to: 0
 24997  005A9E  0E02               	movlw	2
 24998  005AA0  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 24999  005AA2  A4D8               	btfss	status,2,c
 25000  005AA4  D002               	goto	l2039
 25001                           
 25002                           ; BSR set to: 0
 25003                           ;eeprom_if.c: 118: {
 25004                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 25005  005AA6  0E01               	movlw	1
 25006  005AA8                     L47:
 25007  005AA8  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 25008  005AAA                     l2039:
 25009                           
 25010                           ; BSR set to: 0
 25011                           ;eeprom_if.c: 120: }
 25012                           ;eeprom_if.c: 121: return ReadSts;
 25013                           
 25014                           ; BSR set to: 0
 25015  005AAA  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 25016  005AAC  0012               	return	
 25017  005AAE                     __end_of_Eeprom_Read:
 25018                           	opt stack 0
 25019                           tosu	equ	0xFFF
 25020                           tosh	equ	0xFFE
 25021                           tosl	equ	0xFFD
 25022                           pclath	equ	0xFFA
 25023                           tblptru	equ	0xFF8
 25024                           tblptrh	equ	0xFF7
 25025                           tblptrl	equ	0xFF6
 25026                           tablat	equ	0xFF5
 25027                           prodh	equ	0xFF4
 25028                           prodl	equ	0xFF3
 25029                           intcon	equ	0xFF2
 25030                           intcon2	equ	0xFF1
 25031                           intcon3	equ	0xFF0
 25032                           indf0	equ	0xFEF
 25033                           postinc0	equ	0xFEE
 25034                           plusw0	equ	0xFEB
 25035                           fsr0h	equ	0xFEA
 25036                           fsr0l	equ	0xFE9
 25037                           wreg	equ	0xFE8
 25038                           indf1	equ	0xFE7
 25039                           postinc1	equ	0xFE6
 25040                           postdec1	equ	0xFE5
 25041                           fsr1h	equ	0xFE2
 25042                           fsr1l	equ	0xFE1
 25043                           indf2	equ	0xFDF
 25044                           postinc2	equ	0xFDE
 25045                           postdec2	equ	0xFDD
 25046                           plusw2	equ	0xFDB
 25047                           fsr2h	equ	0xFDA
 25048                           fsr2l	equ	0xFD9
 25049                           status	equ	0xFD8
 25050                           
 25051 ;; *************** function _I2cSlv_QueryI2cData *****************
 25052 ;; Defined at:
 25053 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25054 ;; Parameters:    Size  Location     Type
 25055 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 25056 ;;		 -> ReadAddress(1), 
 25057 ;;  TxLen           1   68[BANK0 ] unsigned char 
 25058 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 25059 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(4),
      + 
 25060 ;;  RxLen           1   71[BANK0 ] unsigned char 
 25061 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 25062 ;; Auto vars:     Size  Location     Type
 25063 ;;		None
 25064 ;; Return value:  Size  Location     Type
 25065 ;;                  1    wreg      enum E8947
 25066 ;; Registers used:
 25067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25068 ;; Tracked objects:
 25069 ;;		On entry : 0/0
 25070 ;;		On exit  : 0/0
 25071 ;;		Unchanged: 0/0
 25072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25073 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25076 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25077 ;;Total ram usage:        7 bytes
 25078 ;; Hardware stack levels used:    1
 25079 ;; Hardware stack levels required when called:   15
 25080 ;; This function calls:
 25081 ;;		_I2cSlv_I2cReadMsgSts
 25082 ;;		_I2cSlv_ReceiveI2cMsg
 25083 ;;		_I2cSlv_SendI2cMsg
 25084 ;;		_OsTmr_GetTimerStatus
 25085 ;;		_OsTmr_StartTimer
 25086 ;;		_OsTmr_Wait
 25087 ;; This function is called by:
 25088 ;;		_Eeprom_Read
 25089 ;; This function uses a non-reentrant model
 25090 ;;
 25091                           
 25092                           	psect	text119
 25093  003942                     __ptext119:
 25094                           	opt stack 0
 25095  003942                     _I2cSlv_QueryI2cData:
 25096                           	opt stack 9
 25097                           
 25098                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 25099                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 25100                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 25101                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 25102                           ;i2c_slv.c: 388: switch(I2cOpState)
 25103                           
 25104                           ; BSR set to: 0
 25105                           ;incstack = 0
 25106  003942  D05B               	goto	l1440
 25107  003944                     
 25108                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 25109  003944  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 25110  003948  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 25111  00394C  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 25112  003950  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 25113  003954  ECD3  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 25114                           
 25115                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 25116  003958  0E01               	movlw	1
 25117  00395A  0101               	movlb	1	; () banked
 25118  00395C  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25119                           
 25120                           ; BSR set to: 1
 25121                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 25122  00395E  0E00               	movlw	0
 25123  003960  D04A               	goto	L51
 25124  003962                     
 25125                           ; BSR set to: 1
 25126                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 25127                           
 25128                           ; BSR set to: 1
 25129  003962  0ED5               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 25130  003964  0100               	movlb	0	; () banked
 25131  003966  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 25132  003968  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 25133  00396A  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 25134  00396C  0EF4               	movlw	244
 25135  00396E  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 25136  003970  0E01               	movlw	1
 25137  003972  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 25138  003974  0E00               	movlw	0
 25139  003976  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 25140  003978  0E00               	movlw	0
 25141  00397A  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 25142  00397C  EC9A  F028         	call	_OsTmr_Wait	;wreg free
 25143  003980  06E8               	decf	wreg,f,c
 25144  003982  A4D8               	btfss	status,2,c
 25145  003984  D036               	goto	l1448
 25146                           
 25147                           ;i2c_slv.c: 402: {
 25148                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 25149  003986  0E49               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25150  003988  0100               	movlb	0	; () banked
 25151  00398A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25152  00398C  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25153  00398E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25154  003990  0EC4               	movlw	196
 25155  003992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25156  003994  0E09               	movlw	9
 25157  003996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25158  003998  0E00               	movlw	0
 25159  00399A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25160  00399C  0E00               	movlw	0
 25161  00399E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25162  0039A0  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 25163                           
 25164                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 25165  0039A4  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 25166  0039A8  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 25167  0039AC  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 25168  0039B0  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 25169  0039B4  EC74  F030         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 25170                           
 25171                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 25172  0039B8  0E02               	movlw	2
 25173  0039BA  0101               	movlb	1	; () banked
 25174  0039BC  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25175  0039BE  D019               	goto	l1448
 25176  0039C0                     
 25177                           ; BSR set to: 1
 25178                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 25179                           
 25180                           ; BSR set to: 1
 25181  0039C0  ECB6  F033         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 25182  0039C4  06E8               	decf	wreg,f,c
 25183  0039C6  A4D8               	btfss	status,2,c
 25184  0039C8  D005               	goto	l1446
 25185                           
 25186                           ;i2c_slv.c: 414: {
 25187                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 25188  0039CA  0E00               	movlw	0
 25189  0039CC  0101               	movlb	1	; () banked
 25190  0039CE  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25191                           
 25192                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 25193  0039D0  0E01               	movlw	1
 25194  0039D2  D011               	goto	L51
 25195  0039D4                     l1446:
 25196                           
 25197                           ;i2c_slv.c: 420: else
 25198                           ;i2c_slv.c: 421: {
 25199                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 25200                           
 25201                           ; BSR set to: 1
 25202  0039D4  0E49               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25203  0039D6  0100               	movlb	0	; () banked
 25204  0039D8  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25205  0039DA  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25206  0039DC  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25207  0039DE  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 25208  0039E2  06E8               	decf	wreg,f,c
 25209  0039E4  A4D8               	btfss	status,2,c
 25210  0039E6  D005               	goto	l1448
 25211                           
 25212                           ;i2c_slv.c: 423: {
 25213                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 25214  0039E8  0E00               	movlw	0
 25215  0039EA  0101               	movlb	1	; () banked
 25216  0039EC  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25217                           
 25218                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 25219  0039EE  0E02               	movlw	2
 25220  0039F0  D002               	goto	L51
 25221  0039F2                     l1448:
 25222                           
 25223                           ;i2c_slv.c: 429: else
 25224                           ;i2c_slv.c: 430: {
 25225                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 25226                           
 25227                           ; BSR set to: 1
 25228  0039F2  0E00               	movlw	0
 25229  0039F4  0101               	movlb	1	; () banked
 25230  0039F6                     L51:
 25231  0039F6  6FE4               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 25232                           
 25233                           ; BSR set to: 1
 25234                           ;i2c_slv.c: 439: }
 25235                           
 25236                           ; BSR set to: 1
 25237                           ;i2c_slv.c: 438: break;
 25238                           
 25239                           ;i2c_slv.c: 437: default:
 25240                           
 25241                           ; BSR set to: 1
 25242                           ;i2c_slv.c: 433: }
 25243                           ;i2c_slv.c: 434: }
 25244                           ;i2c_slv.c: 435: break;
 25245                           
 25246                           ; BSR set to: 1
 25247  0039F8  D00B               	goto	l1442
 25248  0039FA                     l1440:
 25249                           
 25250                           ; BSR set to: 1
 25251  0039FA  0101               	movlb	1	; () banked
 25252  0039FC  51E5               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 25253                           
 25254                           ; Switch size 1, requested type "space"
 25255                           ; Number of cases is 3, Range of values is 0 to 2
 25256                           ; switch strategies available:
 25257                           ; Name         Instructions Cycles
 25258                           ; simple_byte           10     6 (average)
 25259                           ;	Chosen strategy is simple_byte
 25260  0039FE  0A00               	xorlw	0	; case 0
 25261  003A00  B4D8               	btfsc	status,2,c
 25262  003A02  D7A0               	goto	l1441
 25263  003A04  0A01               	xorlw	1	; case 1
 25264  003A06  B4D8               	btfsc	status,2,c
 25265  003A08  D7AC               	goto	l1443
 25266  003A0A  0A03               	xorlw	3	; case 2
 25267  003A0C  B4D8               	btfsc	status,2,c
 25268  003A0E  D7D8               	goto	l1445
 25269  003A10                     l1442:
 25270                           
 25271                           ; BSR set to: 1
 25272                           ;i2c_slv.c: 441: return Ret;
 25273                           
 25274                           ; BSR set to: 1
 25275  003A10  51E4               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 25276  003A12  0012               	return	
 25277  003A14                     __end_of_I2cSlv_QueryI2cData:
 25278                           	opt stack 0
 25279                           tosu	equ	0xFFF
 25280                           tosh	equ	0xFFE
 25281                           tosl	equ	0xFFD
 25282                           pclath	equ	0xFFA
 25283                           tblptru	equ	0xFF8
 25284                           tblptrh	equ	0xFF7
 25285                           tblptrl	equ	0xFF6
 25286                           tablat	equ	0xFF5
 25287                           prodh	equ	0xFF4
 25288                           prodl	equ	0xFF3
 25289                           intcon	equ	0xFF2
 25290                           intcon2	equ	0xFF1
 25291                           intcon3	equ	0xFF0
 25292                           indf0	equ	0xFEF
 25293                           postinc0	equ	0xFEE
 25294                           plusw0	equ	0xFEB
 25295                           fsr0h	equ	0xFEA
 25296                           fsr0l	equ	0xFE9
 25297                           wreg	equ	0xFE8
 25298                           indf1	equ	0xFE7
 25299                           postinc1	equ	0xFE6
 25300                           postdec1	equ	0xFE5
 25301                           fsr1h	equ	0xFE2
 25302                           fsr1l	equ	0xFE1
 25303                           indf2	equ	0xFDF
 25304                           postinc2	equ	0xFDE
 25305                           postdec2	equ	0xFDD
 25306                           plusw2	equ	0xFDB
 25307                           fsr2h	equ	0xFDA
 25308                           fsr2l	equ	0xFD9
 25309                           status	equ	0xFD8
 25310                           
 25311 ;; *************** function _OsTmr_Wait *****************
 25312 ;; Defined at:
 25313 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 25314 ;; Parameters:    Size  Location     Type
 25315 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 25316 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 25317 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 25318 ;; Auto vars:     Size  Location     Type
 25319 ;;  Ret             1   65[BANK0 ] enum E7749
 25320 ;; Return value:  Size  Location     Type
 25321 ;;                  1    wreg      enum E7749
 25322 ;; Registers used:
 25323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25324 ;; Tracked objects:
 25325 ;;		On entry : 0/0
 25326 ;;		On exit  : 0/0
 25327 ;;		Unchanged: 0/0
 25328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25329 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25332 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25333 ;;Total ram usage:        7 bytes
 25334 ;; Hardware stack levels used:    1
 25335 ;; Hardware stack levels required when called:   14
 25336 ;; This function calls:
 25337 ;;		_OsTmr_GetTimerStatus
 25338 ;;		_OsTmr_StartTimer
 25339 ;; This function is called by:
 25340 ;;		_I2cSlv_QueryI2cData
 25341 ;;		_Terminal
 25342 ;; This function uses a non-reentrant model
 25343 ;;
 25344                           
 25345                           	psect	text120
 25346  005134                     __ptext120:
 25347                           	opt stack 0
 25348  005134                     _OsTmr_Wait:
 25349                           	opt stack 11
 25350                           
 25351                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 25352                           
 25353                           ; BSR set to: 1
 25354                           ;incstack = 0
 25355  005134  0E00               	movlw	0
 25356  005136  0100               	movlb	0	; () banked
 25357  005138  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25358                           
 25359                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 25360  00513A  D02D               	goto	l855
 25361  00513C                     
 25362                           ; BSR set to: 0
 25363                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 25364                           
 25365                           ; BSR set to: 0
 25366  00513C  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 25367  005140  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 25368  005144  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 25369  005148  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 25370  00514C  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 25371  005150  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 25372  005154  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 25373                           
 25374                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 25375  005158  0100               	movlb	0	; () banked
 25376  00515A  EE20 F00A          	lfsr	2,10
 25377  00515E  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25378  005160  26D9               	addwf	fsr2l,f,c
 25379  005162  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25380  005164  22DA               	addwfc	fsr2h,f,c
 25381  005166  0E01               	movlw	1
 25382  005168  6EDF               	movwf	indf2,c
 25383                           
 25384                           ;os_timers.c: 165: break;
 25385  00516A  D022               	goto	l857
 25386  00516C                     
 25387                           ; BSR set to: 0
 25388                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 25389                           
 25390                           ; BSR set to: 0
 25391  00516C  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 25392  005170  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 25393  005174  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 25394  005178  06E8               	decf	wreg,f,c
 25395  00517A  A4D8               	btfss	status,2,c
 25396  00517C  D019               	goto	l857
 25397                           
 25398                           ;os_timers.c: 170: {
 25399                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 25400  00517E  0100               	movlb	0	; () banked
 25401  005180  EE20 F00A          	lfsr	2,10
 25402  005184  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25403  005186  26D9               	addwf	fsr2l,f,c
 25404  005188  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25405  00518A  22DA               	addwfc	fsr2h,f,c
 25406  00518C  0E00               	movlw	0
 25407  00518E  6EDF               	movwf	indf2,c
 25408                           
 25409                           ; BSR set to: 0
 25410                           ;os_timers.c: 174: Ret = DelayExpired;
 25411  005190  0E01               	movlw	1
 25412  005192  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25413                           
 25414                           ; BSR set to: 0
 25415                           ;os_timers.c: 180: }
 25416                           
 25417                           ; BSR set to: 0
 25418                           ;os_timers.c: 179: break;
 25419                           
 25420                           ;os_timers.c: 178: default:
 25421                           
 25422                           ; BSR set to: 0
 25423                           ;os_timers.c: 175: }
 25424                           ;os_timers.c: 176: break;
 25425  005194  D00D               	goto	l857
 25426  005196                     l855:
 25427                           
 25428                           ; BSR set to: 0
 25429                           
 25430                           ; BSR set to: 0
 25431  005196  EE20 F00A          	lfsr	2,10
 25432  00519A  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25433  00519C  26D9               	addwf	fsr2l,f,c
 25434  00519E  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25435  0051A0  22DA               	addwfc	fsr2h,f,c
 25436  0051A2  50DF               	movf	indf2,w,c
 25437                           
 25438                           ; Switch size 1, requested type "space"
 25439                           ; Number of cases is 2, Range of values is 0 to 1
 25440                           ; switch strategies available:
 25441                           ; Name         Instructions Cycles
 25442                           ; simple_byte            7     4 (average)
 25443                           ;	Chosen strategy is simple_byte
 25444  0051A4  0A00               	xorlw	0	; case 0
 25445  0051A6  B4D8               	btfsc	status,2,c
 25446  0051A8  D7C9               	goto	l856
 25447  0051AA  0A01               	xorlw	1	; case 1
 25448  0051AC  B4D8               	btfsc	status,2,c
 25449  0051AE  D7DE               	goto	l858
 25450  0051B0                     l857:
 25451                           
 25452                           ;os_timers.c: 182: return Ret;
 25453                           
 25454                           ; BSR set to: 0
 25455  0051B0  0100               	movlb	0	; () banked
 25456  0051B2  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 25457  0051B4  0012               	return	
 25458  0051B6                     __end_of_OsTmr_Wait:
 25459                           	opt stack 0
 25460                           tosu	equ	0xFFF
 25461                           tosh	equ	0xFFE
 25462                           tosl	equ	0xFFD
 25463                           pclath	equ	0xFFA
 25464                           tblptru	equ	0xFF8
 25465                           tblptrh	equ	0xFF7
 25466                           tblptrl	equ	0xFF6
 25467                           tablat	equ	0xFF5
 25468                           prodh	equ	0xFF4
 25469                           prodl	equ	0xFF3
 25470                           intcon	equ	0xFF2
 25471                           intcon2	equ	0xFF1
 25472                           intcon3	equ	0xFF0
 25473                           indf0	equ	0xFEF
 25474                           postinc0	equ	0xFEE
 25475                           plusw0	equ	0xFEB
 25476                           fsr0h	equ	0xFEA
 25477                           fsr0l	equ	0xFE9
 25478                           wreg	equ	0xFE8
 25479                           indf1	equ	0xFE7
 25480                           postinc1	equ	0xFE6
 25481                           postdec1	equ	0xFE5
 25482                           fsr1h	equ	0xFE2
 25483                           fsr1l	equ	0xFE1
 25484                           indf2	equ	0xFDF
 25485                           postinc2	equ	0xFDE
 25486                           postdec2	equ	0xFDD
 25487                           plusw2	equ	0xFDB
 25488                           fsr2h	equ	0xFDA
 25489                           fsr2l	equ	0xFD9
 25490                           status	equ	0xFD8
 25491                           
 25492 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 25493 ;; Defined at:
 25494 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25495 ;; Parameters:    Size  Location     Type
 25496 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 25497 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(4),
      + 
 25498 ;;		 -> Terminal@TermRxBuffer(50), 
 25499 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 25500 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 25501 ;; Auto vars:     Size  Location     Type
 25502 ;;  RxSts           1   36[BANK0 ] unsigned char 
 25503 ;; Return value:  Size  Location     Type
 25504 ;;                  1    wreg      unsigned char 
 25505 ;; Registers used:
 25506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25507 ;; Tracked objects:
 25508 ;;		On entry : 0/0
 25509 ;;		On exit  : 0/0
 25510 ;;		Unchanged: 0/0
 25511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25513 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25515 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25516 ;;Total ram usage:        5 bytes
 25517 ;; Hardware stack levels used:    1
 25518 ;; Hardware stack levels required when called:   12
 25519 ;; This function calls:
 25520 ;;		_GenerateEvt
 25521 ;; This function is called by:
 25522 ;;		_I2cSlv_QueryI2cData
 25523 ;;		_Terminal
 25524 ;; This function uses a non-reentrant model
 25525 ;;
 25526                           
 25527                           	psect	text121
 25528  0060E8                     __ptext121:
 25529                           	opt stack 0
 25530  0060E8                     _I2cSlv_ReceiveI2cMsg:
 25531                           	opt stack 13
 25532                           
 25533                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 25534                           
 25535                           ; BSR set to: 0
 25536                           ;incstack = 0
 25537  0060E8  0E00               	movlw	0
 25538  0060EA  0100               	movlb	0	; () banked
 25539  0060EC  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25540                           
 25541                           ; BSR set to: 0
 25542                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 25543  0060EE  0E02               	movlw	2
 25544  0060F0  19CF               	xorwf	_I2cComSts& (0+255),w,b
 25545  0060F2  B4D8               	btfsc	status,2,c
 25546  0060F4  D016               	goto	l1417
 25547                           
 25548                           ; BSR set to: 0
 25549                           ;i2c_slv.c: 294: {
 25550                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 25551  0060F6  C082  F39A         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 25552                           
 25553                           ; BSR set to: 0
 25554                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 25555  0060FA  0E01               	movlw	1
 25556  0060FC  0103               	movlb	3	; () banked
 25557  0060FE  6F9B               	movwf	(_I2cRxPacket+1)& (0+255),b
 25558                           
 25559                           ; BSR set to: 3
 25560                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 25561  006100  C083  F39E         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 25562                           
 25563                           ; BSR set to: 3
 25564                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 25565  006104  C080  F39C         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 25566  006108  C081  F39D         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 25567                           
 25568                           ; BSR set to: 3
 25569                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 25570  00610C  0ED8               	movlw	low _I2cReadDataEvt
 25571  00610E  0100               	movlb	0	; () banked
 25572  006110  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25573  006112  0E00               	movlw	high _I2cReadDataEvt
 25574  006114  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25575  006116  EC8C  F034         	call	_GenerateEvt	;wreg free
 25576                           
 25577                           ;i2c_slv.c: 304: RxSts = 1u;
 25578  00611A  0E01               	movlw	1
 25579  00611C  0100               	movlb	0	; () banked
 25580  00611E  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25581                           
 25582                           ;i2c_slv.c: 305: }
 25583  006120  0012               	return	
 25584  006122                     l1417:
 25585                           
 25586                           ; BSR set to: 0
 25587                           ;i2c_slv.c: 306: else
 25588                           ;i2c_slv.c: 307: {
 25589                           ;i2c_slv.c: 309: RxSts = 0u;
 25590                           
 25591                           ; BSR set to: 0
 25592  006122  0E00               	movlw	0
 25593  006124  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25594                           
 25595                           ; BSR set to: 0
 25596  006126  0012               	return	
 25597  006128                     __end_of_I2cSlv_ReceiveI2cMsg:
 25598                           	opt stack 0
 25599                           tosu	equ	0xFFF
 25600                           tosh	equ	0xFFE
 25601                           tosl	equ	0xFFD
 25602                           pclath	equ	0xFFA
 25603                           tblptru	equ	0xFF8
 25604                           tblptrh	equ	0xFF7
 25605                           tblptrl	equ	0xFF6
 25606                           tablat	equ	0xFF5
 25607                           prodh	equ	0xFF4
 25608                           prodl	equ	0xFF3
 25609                           intcon	equ	0xFF2
 25610                           intcon2	equ	0xFF1
 25611                           intcon3	equ	0xFF0
 25612                           indf0	equ	0xFEF
 25613                           postinc0	equ	0xFEE
 25614                           plusw0	equ	0xFEB
 25615                           fsr0h	equ	0xFEA
 25616                           fsr0l	equ	0xFE9
 25617                           wreg	equ	0xFE8
 25618                           indf1	equ	0xFE7
 25619                           postinc1	equ	0xFE6
 25620                           postdec1	equ	0xFE5
 25621                           fsr1h	equ	0xFE2
 25622                           fsr1l	equ	0xFE1
 25623                           indf2	equ	0xFDF
 25624                           postinc2	equ	0xFDE
 25625                           postdec2	equ	0xFDD
 25626                           plusw2	equ	0xFDB
 25627                           fsr2h	equ	0xFDA
 25628                           fsr2l	equ	0xFD9
 25629                           status	equ	0xFD8
 25630                           
 25631 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 25632 ;; Defined at:
 25633 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25634 ;; Parameters:    Size  Location     Type
 25635 ;;		None
 25636 ;; Auto vars:     Size  Location     Type
 25637 ;;  Result          1   33[BANK0 ] enum E8935
 25638 ;; Return value:  Size  Location     Type
 25639 ;;                  1    wreg      enum E8935
 25640 ;; Registers used:
 25641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25642 ;; Tracked objects:
 25643 ;;		On entry : 0/0
 25644 ;;		On exit  : 0/0
 25645 ;;		Unchanged: 0/0
 25646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25650 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25651 ;;Total ram usage:        1 bytes
 25652 ;; Hardware stack levels used:    1
 25653 ;; Hardware stack levels required when called:   12
 25654 ;; This function calls:
 25655 ;;		_ReceiveEvt
 25656 ;; This function is called by:
 25657 ;;		_I2cSlv_QueryI2cData
 25658 ;;		_Terminal
 25659 ;; This function uses a non-reentrant model
 25660 ;;
 25661                           
 25662                           	psect	text122
 25663  00676C                     __ptext122:
 25664                           	opt stack 0
 25665  00676C                     _I2cSlv_I2cReadMsgSts:
 25666                           	opt stack 13
 25667                           
 25668                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 25669                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 25670                           
 25671                           ; BSR set to: 0
 25672                           ;incstack = 0
 25673  00676C  0E9F               	movlw	low (_I2cRxPacket+5)
 25674  00676E  0100               	movlb	0	; () banked
 25675  006770  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25676  006772  0E03               	movlw	high (_I2cRxPacket+5)
 25677  006774  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25678  006776  EC9B  F032         	call	_ReceiveEvt	;wreg free
 25679  00677A  0900               	iorlw	0
 25680  00677C  B4D8               	btfsc	status,2,c
 25681  00677E  D002               	goto	l1422
 25682                           
 25683                           ;i2c_slv.c: 331: {
 25684                           ;i2c_slv.c: 332: Result = MessageReceived;
 25685  006780  0E01               	movlw	1
 25686  006782  D001               	goto	L52
 25687  006784                     l1422:
 25688                           
 25689                           ;i2c_slv.c: 334: else
 25690                           ;i2c_slv.c: 335: {
 25691                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 25692                           
 25693                           ; BSR set to: 0
 25694  006784  0E00               	movlw	0
 25695  006786                     L52:
 25696  006786  0100               	movlb	0	; () banked
 25697  006788  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 25698                           
 25699                           ; BSR set to: 0
 25700                           ;i2c_slv.c: 337: }
 25701                           ;i2c_slv.c: 339: return Result;
 25702  00678A  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 25703  00678C  0012               	return	
 25704  00678E                     __end_of_I2cSlv_I2cReadMsgSts:
 25705                           	opt stack 0
 25706                           tosu	equ	0xFFF
 25707                           tosh	equ	0xFFE
 25708                           tosl	equ	0xFFD
 25709                           pclath	equ	0xFFA
 25710                           tblptru	equ	0xFF8
 25711                           tblptrh	equ	0xFF7
 25712                           tblptrl	equ	0xFF6
 25713                           tablat	equ	0xFF5
 25714                           prodh	equ	0xFF4
 25715                           prodl	equ	0xFF3
 25716                           intcon	equ	0xFF2
 25717                           intcon2	equ	0xFF1
 25718                           intcon3	equ	0xFF0
 25719                           indf0	equ	0xFEF
 25720                           postinc0	equ	0xFEE
 25721                           plusw0	equ	0xFEB
 25722                           fsr0h	equ	0xFEA
 25723                           fsr0l	equ	0xFE9
 25724                           wreg	equ	0xFE8
 25725                           indf1	equ	0xFE7
 25726                           postinc1	equ	0xFE6
 25727                           postdec1	equ	0xFE5
 25728                           fsr1h	equ	0xFE2
 25729                           fsr1l	equ	0xFE1
 25730                           indf2	equ	0xFDF
 25731                           postinc2	equ	0xFDE
 25732                           postdec2	equ	0xFDD
 25733                           plusw2	equ	0xFDB
 25734                           fsr2h	equ	0xFDA
 25735                           fsr2l	equ	0xFD9
 25736                           status	equ	0xFD8
 25737                           
 25738 ;; *************** function _Led_SetLedBlinkTime *****************
 25739 ;; Defined at:
 25740 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 25741 ;; Parameters:    Size  Location     Type
 25742 ;;  Led             1    wreg     unsigned char 
 25743 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 25744 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 25745 ;; Auto vars:     Size  Location     Type
 25746 ;;  Led             1   33[BANK0 ] unsigned char 
 25747 ;; Return value:  Size  Location     Type
 25748 ;;                  1    wreg      void 
 25749 ;; Registers used:
 25750 ;;		wreg, status,2, status,0
 25751 ;; Tracked objects:
 25752 ;;		On entry : 0/0
 25753 ;;		On exit  : 0/0
 25754 ;;		Unchanged: 0/0
 25755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25756 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25759 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25760 ;;Total ram usage:        5 bytes
 25761 ;; Hardware stack levels used:    1
 25762 ;; Hardware stack levels required when called:   11
 25763 ;; This function calls:
 25764 ;;		Nothing
 25765 ;; This function is called by:
 25766 ;;		_MyApp_Task
 25767 ;; This function uses a non-reentrant model
 25768 ;;
 25769                           
 25770                           	psect	text123
 25771  005AAE                     __ptext123:
 25772                           	opt stack 0
 25773  005AAE                     _Led_SetLedBlinkTime:
 25774                           	opt stack 16
 25775                           
 25776                           ; BSR set to: 0
 25777                           ;incstack = 0
 25778                           ;Led_SetLedBlinkTime@Led stored from wreg
 25779  005AAE  0100               	movlb	0	; () banked
 25780  005AB0  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 25781                           
 25782                           ;led.c: 374: switch (Led)
 25783  005AB2  D01B               	goto	l2150
 25784  005AB4                     l2151:
 25785                           
 25786                           ; BSR set to: 0
 25787                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 25788  005AB4  C07D  F374         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 25789  005AB8  C07E  F375         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 25790                           
 25791                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 25792  005ABC  C07F  F376         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 25793  005AC0  C080  F377         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 25794                           
 25795                           ;led.c: 379: break;
 25796  005AC4  0012               	return	
 25797  005AC6                     l2153:
 25798                           
 25799                           ; BSR set to: 0
 25800                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 25801  005AC6  C07D  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 25802  005ACA  C07E  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 25803                           
 25804                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 25805  005ACE  C07F  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 25806  005AD2  C080  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 25807                           
 25808                           ;led.c: 384: break;
 25809  005AD6  0012               	return	
 25810  005AD8                     l2154:
 25811                           
 25812                           ; BSR set to: 0
 25813                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 25814  005AD8  C07D  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 25815  005ADC  C07E  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 25816                           
 25817                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 25818  005AE0  C07F  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 25819  005AE4  C080  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 25820                           
 25821                           ; BSR set to: 0
 25822                           ;led.c: 393: }
 25823                           
 25824                           ; BSR set to: 0
 25825                           ;led.c: 392: break;
 25826                           
 25827                           ;led.c: 391: default:
 25828                           
 25829                           ;led.c: 389: break;
 25830  005AE8  0012               	return	
 25831  005AEA                     l2150:
 25832                           
 25833                           ; BSR set to: 0
 25834  005AEA  0100               	movlb	0	; () banked
 25835  005AEC  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 25836                           
 25837                           ; Switch size 1, requested type "space"
 25838                           ; Number of cases is 3, Range of values is 1 to 3
 25839                           ; switch strategies available:
 25840                           ; Name         Instructions Cycles
 25841                           ; simple_byte           10     6 (average)
 25842                           ;	Chosen strategy is simple_byte
 25843  005AEE  0A01               	xorlw	1	; case 1
 25844  005AF0  B4D8               	btfsc	status,2,c
 25845  005AF2  D7E0               	goto	l2151
 25846  005AF4  0A03               	xorlw	3	; case 2
 25847  005AF6  B4D8               	btfsc	status,2,c
 25848  005AF8  D7E6               	goto	l2153
 25849  005AFA  0A01               	xorlw	1	; case 3
 25850  005AFC  A4D8               	btfss	status,2,c
 25851  005AFE  0012               	return	
 25852  005B00  D7EB               	goto	l2154
 25853  005B02                     __end_of_Led_SetLedBlinkTime:
 25854                           	opt stack 0
 25855                           tosu	equ	0xFFF
 25856                           tosh	equ	0xFFE
 25857                           tosl	equ	0xFFD
 25858                           pclath	equ	0xFFA
 25859                           tblptru	equ	0xFF8
 25860                           tblptrh	equ	0xFF7
 25861                           tblptrl	equ	0xFF6
 25862                           tablat	equ	0xFF5
 25863                           prodh	equ	0xFF4
 25864                           prodl	equ	0xFF3
 25865                           intcon	equ	0xFF2
 25866                           intcon2	equ	0xFF1
 25867                           intcon3	equ	0xFF0
 25868                           indf0	equ	0xFEF
 25869                           postinc0	equ	0xFEE
 25870                           plusw0	equ	0xFEB
 25871                           fsr0h	equ	0xFEA
 25872                           fsr0l	equ	0xFE9
 25873                           wreg	equ	0xFE8
 25874                           indf1	equ	0xFE7
 25875                           postinc1	equ	0xFE6
 25876                           postdec1	equ	0xFE5
 25877                           fsr1h	equ	0xFE2
 25878                           fsr1l	equ	0xFE1
 25879                           indf2	equ	0xFDF
 25880                           postinc2	equ	0xFDE
 25881                           postdec2	equ	0xFDD
 25882                           plusw2	equ	0xFDB
 25883                           fsr2h	equ	0xFDA
 25884                           fsr2l	equ	0xFD9
 25885                           status	equ	0xFD8
 25886                           
 25887 ;; *************** function _Eeprom_Reset *****************
 25888 ;; Defined at:
 25889 ;;		line 131 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 25890 ;; Parameters:    Size  Location     Type
 25891 ;;		None
 25892 ;; Auto vars:     Size  Location     Type
 25893 ;;  SlaveAddress    1   37[BANK0 ] const unsigned char 
 25894 ;; Return value:  Size  Location     Type
 25895 ;;                  1    wreg      unsigned char 
 25896 ;; Registers used:
 25897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25898 ;; Tracked objects:
 25899 ;;		On entry : 0/0
 25900 ;;		On exit  : 0/0
 25901 ;;		Unchanged: 0/0
 25902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25906 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25907 ;;Total ram usage:        1 bytes
 25908 ;; Hardware stack levels used:    1
 25909 ;; Hardware stack levels required when called:   13
 25910 ;; This function calls:
 25911 ;;		_ClearBuffer
 25912 ;;		_I2cSlv_SendI2cMsg
 25913 ;; This function is called by:
 25914 ;;		_MyApp_Task
 25915 ;; This function uses a non-reentrant model
 25916 ;;
 25917                           
 25918                           	psect	text124
 25919  005F06                     __ptext124:
 25920                           	opt stack 0
 25921  005F06                     _Eeprom_Reset:
 25922                           	opt stack 14
 25923                           
 25924                           ;eeprom_if.c: 133: const UINT8 SlaveAddress = 0x50;
 25925                           
 25926                           ; BSR set to: 0
 25927                           ;incstack = 0
 25928  005F06  0E50               	movlw	80
 25929  005F08  0100               	movlb	0	; () banked
 25930  005F0A  6F85               	movwf	Eeprom_Reset@SlaveAddress& (0+255),b
 25931                           
 25932                           ; BSR set to: 0
 25933                           ;eeprom_if.c: 134: static UINT8 memoryAddress = 0;
 25934                           ;eeprom_if.c: 136: EepromBuffer[0] = memoryAddress;
 25935  005F0C  C0C4  F4BB         	movff	Eeprom_Reset@memoryAddress,_EepromBuffer
 25936                           
 25937                           ; BSR set to: 0
 25938                           ;eeprom_if.c: 137: I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, 15);
 25939  005F10  0EBB               	movlw	low _EepromBuffer
 25940  005F12  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 25941  005F14  0E04               	movlw	high _EepromBuffer
 25942  005F16  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 25943  005F18  C085  F082         	movff	Eeprom_Reset@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 25944  005F1C  0E0F               	movlw	15
 25945  005F1E  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 25946  005F20  ECD3  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 25947                           
 25948                           ;eeprom_if.c: 139: memoryAddress += 16;
 25949  005F24  0E10               	movlw	16
 25950  005F26  0100               	movlb	0	; () banked
 25951  005F28  27C4               	addwf	Eeprom_Reset@memoryAddress& (0+255),f,b
 25952                           
 25953                           ; BSR set to: 0
 25954                           ;eeprom_if.c: 140: if (memoryAddress >= 224)
 25955  005F2A  0EDF               	movlw	223
 25956  005F2C  65C4               	cpfsgt	Eeprom_Reset@memoryAddress& (0+255),b
 25957  005F2E  D00D               	goto	l2045
 25958                           
 25959                           ; BSR set to: 0
 25960                           ;eeprom_if.c: 141: {
 25961                           ;eeprom_if.c: 142: ClearBuffer(EepromBuffer, 15);
 25962  005F30  0EBB               	movlw	low _EepromBuffer
 25963  005F32  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25964  005F34  0E04               	movlw	high _EepromBuffer
 25965  005F36  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25966  005F38  0E00               	movlw	0
 25967  005F3A  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25968  005F3C  0E0F               	movlw	15
 25969  005F3E  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25970  005F40  ECBD  F031         	call	_ClearBuffer	;wreg free
 25971                           
 25972                           ;eeprom_if.c: 143: memoryAddress = 0;
 25973  005F44  0E00               	movlw	0
 25974  005F46  0100               	movlb	0	; () banked
 25975  005F48  6FC4               	movwf	Eeprom_Reset@memoryAddress& (0+255),b
 25976  005F4A                     l2045:
 25977                           
 25978                           ; BSR set to: 0
 25979                           ;eeprom_if.c: 144: }
 25980                           ;eeprom_if.c: 145: return memoryAddress;
 25981                           
 25982                           ; BSR set to: 0
 25983  005F4A  51C4               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 25984  005F4C  0012               	return	
 25985  005F4E                     __end_of_Eeprom_Reset:
 25986                           	opt stack 0
 25987                           tosu	equ	0xFFF
 25988                           tosh	equ	0xFFE
 25989                           tosl	equ	0xFFD
 25990                           pclath	equ	0xFFA
 25991                           tblptru	equ	0xFF8
 25992                           tblptrh	equ	0xFF7
 25993                           tblptrl	equ	0xFF6
 25994                           tablat	equ	0xFF5
 25995                           prodh	equ	0xFF4
 25996                           prodl	equ	0xFF3
 25997                           intcon	equ	0xFF2
 25998                           intcon2	equ	0xFF1
 25999                           intcon3	equ	0xFF0
 26000                           indf0	equ	0xFEF
 26001                           postinc0	equ	0xFEE
 26002                           plusw0	equ	0xFEB
 26003                           fsr0h	equ	0xFEA
 26004                           fsr0l	equ	0xFE9
 26005                           wreg	equ	0xFE8
 26006                           indf1	equ	0xFE7
 26007                           postinc1	equ	0xFE6
 26008                           postdec1	equ	0xFE5
 26009                           fsr1h	equ	0xFE2
 26010                           fsr1l	equ	0xFE1
 26011                           indf2	equ	0xFDF
 26012                           postinc2	equ	0xFDE
 26013                           postdec2	equ	0xFDD
 26014                           plusw2	equ	0xFDB
 26015                           fsr2h	equ	0xFDA
 26016                           fsr2l	equ	0xFD9
 26017                           status	equ	0xFD8
 26018                           
 26019 ;; *************** function _I2cSlv_SendI2cMsg *****************
 26020 ;; Defined at:
 26021 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26022 ;; Parameters:    Size  Location     Type
 26023 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 26024 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 26025 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 26026 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26027 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26028 ;; Auto vars:     Size  Location     Type
 26029 ;;  TxSts           1   36[BANK0 ] unsigned char 
 26030 ;; Return value:  Size  Location     Type
 26031 ;;                  1    wreg      unsigned char 
 26032 ;; Registers used:
 26033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26034 ;; Tracked objects:
 26035 ;;		On entry : 0/0
 26036 ;;		On exit  : 0/0
 26037 ;;		Unchanged: 0/0
 26038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26042 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26043 ;;Total ram usage:        5 bytes
 26044 ;; Hardware stack levels used:    1
 26045 ;; Hardware stack levels required when called:   12
 26046 ;; This function calls:
 26047 ;;		_GenerateEvt
 26048 ;; This function is called by:
 26049 ;;		_I2cSlv_QueryI2cData
 26050 ;;		_Eeprom_Write
 26051 ;;		_Eeprom_Reset
 26052 ;;		_Terminal
 26053 ;;		_triggerRelay
 26054 ;; This function uses a non-reentrant model
 26055 ;;
 26056                           
 26057                           	psect	text125
 26058  0061A6                     __ptext125:
 26059                           	opt stack 0
 26060  0061A6                     _I2cSlv_SendI2cMsg:
 26061                           	opt stack 13
 26062                           
 26063                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 26064                           
 26065                           ; BSR set to: 0
 26066                           ;incstack = 0
 26067  0061A6  0E00               	movlw	0
 26068  0061A8  0100               	movlb	0	; () banked
 26069  0061AA  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26070                           
 26071                           ; BSR set to: 0
 26072                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 26073  0061AC  05CF               	decf	_I2cComSts& (0+255),w,b
 26074  0061AE  B4D8               	btfsc	status,2,c
 26075  0061B0  D015               	goto	l1412
 26076                           
 26077                           ; BSR set to: 0
 26078                           ;i2c_slv.c: 257: {
 26079                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 26080  0061B2  C082  F3A0         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 26081                           
 26082                           ; BSR set to: 0
 26083                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 26084  0061B6  0E00               	movlw	0
 26085  0061B8  0103               	movlb	3	; () banked
 26086  0061BA  6FA1               	movwf	(_I2cTxPacket+1)& (0+255),b
 26087                           
 26088                           ; BSR set to: 3
 26089                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 26090  0061BC  C083  F3A4         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 26091                           
 26092                           ; BSR set to: 3
 26093                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 26094  0061C0  C080  F3A2         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 26095  0061C4  C081  F3A3         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 26096                           
 26097                           ; BSR set to: 3
 26098                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 26099  0061C8  0ED9               	movlw	low _I2cWriteDataEvt
 26100  0061CA  0100               	movlb	0	; () banked
 26101  0061CC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26102  0061CE  0E00               	movlw	high _I2cWriteDataEvt
 26103  0061D0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26104  0061D2  EC8C  F034         	call	_GenerateEvt	;wreg free
 26105                           
 26106                           ;i2c_slv.c: 267: TxSts = 1u;
 26107  0061D6  0E01               	movlw	1
 26108  0061D8  0100               	movlb	0	; () banked
 26109  0061DA  D001               	goto	L53
 26110  0061DC                     l1412:
 26111                           
 26112                           ; BSR set to: 0
 26113                           ;i2c_slv.c: 269: else
 26114                           ;i2c_slv.c: 270: {
 26115                           ;i2c_slv.c: 272: TxSts = 0u;
 26116                           
 26117                           ; BSR set to: 0
 26118  0061DC  0E00               	movlw	0
 26119  0061DE                     L53:
 26120  0061DE  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26121                           
 26122                           ; BSR set to: 0
 26123                           ;i2c_slv.c: 273: }
 26124                           ;i2c_slv.c: 275: return TxSts;
 26125  0061E0  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 26126  0061E2  0012               	return	
 26127  0061E4                     __end_of_I2cSlv_SendI2cMsg:
 26128                           	opt stack 0
 26129                           tosu	equ	0xFFF
 26130                           tosh	equ	0xFFE
 26131                           tosl	equ	0xFFD
 26132                           pclath	equ	0xFFA
 26133                           tblptru	equ	0xFF8
 26134                           tblptrh	equ	0xFF7
 26135                           tblptrl	equ	0xFF6
 26136                           tablat	equ	0xFF5
 26137                           prodh	equ	0xFF4
 26138                           prodl	equ	0xFF3
 26139                           intcon	equ	0xFF2
 26140                           intcon2	equ	0xFF1
 26141                           intcon3	equ	0xFF0
 26142                           indf0	equ	0xFEF
 26143                           postinc0	equ	0xFEE
 26144                           plusw0	equ	0xFEB
 26145                           fsr0h	equ	0xFEA
 26146                           fsr0l	equ	0xFE9
 26147                           wreg	equ	0xFE8
 26148                           indf1	equ	0xFE7
 26149                           postinc1	equ	0xFE6
 26150                           postdec1	equ	0xFE5
 26151                           fsr1h	equ	0xFE2
 26152                           fsr1l	equ	0xFE1
 26153                           indf2	equ	0xFDF
 26154                           postinc2	equ	0xFDE
 26155                           postdec2	equ	0xFDD
 26156                           plusw2	equ	0xFDB
 26157                           fsr2h	equ	0xFDA
 26158                           fsr2l	equ	0xFD9
 26159                           status	equ	0xFD8
 26160                           
 26161 ;; *************** function _UartSetConfig *****************
 26162 ;; Defined at:
 26163 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26164 ;; Parameters:    Size  Location     Type
 26165 ;;		None
 26166 ;; Auto vars:     Size  Location     Type
 26167 ;;		None
 26168 ;; Return value:  Size  Location     Type
 26169 ;;                  1    wreg      void 
 26170 ;; Registers used:
 26171 ;;		wreg, status,2
 26172 ;; Tracked objects:
 26173 ;;		On entry : 0/0
 26174 ;;		On exit  : 0/0
 26175 ;;		Unchanged: 0/0
 26176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26181 ;;Total ram usage:        0 bytes
 26182 ;; Hardware stack levels used:    1
 26183 ;; Hardware stack levels required when called:   11
 26184 ;; This function calls:
 26185 ;;		Nothing
 26186 ;; This function is called by:
 26187 ;;		_Mdm_MainTask
 26188 ;; This function uses a non-reentrant model
 26189 ;;
 26190                           
 26191                           	psect	text126
 26192  005852                     __ptext126:
 26193                           	opt stack 0
 26194  005852                     _UartSetConfig:
 26195                           	opt stack 16
 26196                           
 26197                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 26198                           
 26199                           ; BSR set to: 0
 26200                           ;incstack = 0
 26201  005852  0E01               	movlw	1
 26202  005854  0103               	movlb	3	; () banked
 26203  005856  6F1A               	movwf	_UartConfig& (0+255),b
 26204                           
 26205                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 26206  005858  0E00               	movlw	0
 26207  00585A  6F1B               	movwf	(_UartConfig+1)& (0+255),b
 26208                           
 26209                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 26210  00585C  0E00               	movlw	0
 26211  00585E  6F1C               	movwf	(_UartConfig+2)& (0+255),b
 26212                           
 26213                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 26214  005860  0E00               	movlw	0
 26215  005862  6F1D               	movwf	(_UartConfig+3)& (0+255),b
 26216                           
 26217                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 26218  005864  0E00               	movlw	0
 26219  005866  6F1E               	movwf	(_UartConfig+4)& (0+255),b
 26220                           
 26221                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 26222  005868  0E00               	movlw	0
 26223  00586A  6F1F               	movwf	(_UartConfig+5)& (0+255),b
 26224                           
 26225                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 26226  00586C  0E01               	movlw	1
 26227  00586E  6F20               	movwf	(_UartConfig+6)& (0+255),b
 26228                           
 26229                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 26230  005870  0E01               	movlw	1
 26231  005872  6F21               	movwf	(_UartConfig+7)& (0+255),b
 26232                           
 26233                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 26234  005874  0E00               	movlw	0
 26235  005876  6F22               	movwf	(_UartConfig+8)& (0+255),b
 26236                           
 26237                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 26238  005878  0E00               	movlw	0
 26239  00587A  6F23               	movwf	(_UartConfig+9)& (0+255),b
 26240                           
 26241                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 26242  00587C  0E00               	movlw	0
 26243  00587E  6F24               	movwf	(_UartConfig+10)& (0+255),b
 26244                           
 26245                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 26246  005880  0E00               	movlw	0
 26247  005882  6F25               	movwf	(_UartConfig+11)& (0+255),b
 26248                           
 26249                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 26250  005884  0E01               	movlw	1
 26251  005886  6F26               	movwf	(_UartConfig+12)& (0+255),b
 26252                           
 26253                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 26254  005888  0E00               	movlw	0
 26255  00588A  6F27               	movwf	(_UartConfig+13)& (0+255),b
 26256  00588C  0E6C               	movlw	108
 26257  00588E  6F28               	movwf	(_UartConfig+14)& (0+255),b
 26258  005890  0EDC               	movlw	220
 26259  005892  6F29               	movwf	(_UartConfig+15)& (0+255),b
 26260  005894  0E02               	movlw	2
 26261  005896  6F2A               	movwf	(_UartConfig+16)& (0+255),b
 26262                           
 26263                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 26264  005898  0E80               	movlw	128
 26265  00589A  6F2B               	movwf	(_UartConfig+17)& (0+255),b
 26266  00589C  0E25               	movlw	37
 26267  00589E  6F2C               	movwf	(_UartConfig+18)& (0+255),b
 26268  0058A0  0E00               	movlw	0
 26269  0058A2  6F2D               	movwf	(_UartConfig+19)& (0+255),b
 26270  0058A4  0E00               	movlw	0
 26271  0058A6  6F2E               	movwf	(_UartConfig+20)& (0+255),b
 26272                           
 26273                           ; BSR set to: 3
 26274  0058A8  0012               	return		;funcret
 26275  0058AA                     __end_of_UartSetConfig:
 26276                           	opt stack 0
 26277                           tosu	equ	0xFFF
 26278                           tosh	equ	0xFFE
 26279                           tosl	equ	0xFFD
 26280                           pclath	equ	0xFFA
 26281                           tblptru	equ	0xFF8
 26282                           tblptrh	equ	0xFF7
 26283                           tblptrl	equ	0xFF6
 26284                           tablat	equ	0xFF5
 26285                           prodh	equ	0xFF4
 26286                           prodl	equ	0xFF3
 26287                           intcon	equ	0xFF2
 26288                           intcon2	equ	0xFF1
 26289                           intcon3	equ	0xFF0
 26290                           indf0	equ	0xFEF
 26291                           postinc0	equ	0xFEE
 26292                           plusw0	equ	0xFEB
 26293                           fsr0h	equ	0xFEA
 26294                           fsr0l	equ	0xFE9
 26295                           wreg	equ	0xFE8
 26296                           indf1	equ	0xFE7
 26297                           postinc1	equ	0xFE6
 26298                           postdec1	equ	0xFE5
 26299                           fsr1h	equ	0xFE2
 26300                           fsr1l	equ	0xFE1
 26301                           indf2	equ	0xFDF
 26302                           postinc2	equ	0xFDE
 26303                           postdec2	equ	0xFDD
 26304                           plusw2	equ	0xFDB
 26305                           fsr2h	equ	0xFDA
 26306                           fsr2l	equ	0xFD9
 26307                           status	equ	0xFD8
 26308                           
 26309 ;; *************** function _TurnOnModem *****************
 26310 ;; Defined at:
 26311 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26312 ;; Parameters:    Size  Location     Type
 26313 ;;		None
 26314 ;; Auto vars:     Size  Location     Type
 26315 ;;		None
 26316 ;; Return value:  Size  Location     Type
 26317 ;;                  1    wreg      void 
 26318 ;; Registers used:
 26319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26320 ;; Tracked objects:
 26321 ;;		On entry : 0/0
 26322 ;;		On exit  : 0/0
 26323 ;;		Unchanged: 0/0
 26324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26329 ;;Total ram usage:        0 bytes
 26330 ;; Hardware stack levels used:    1
 26331 ;; Hardware stack levels required when called:   12
 26332 ;; This function calls:
 26333 ;;		_GenerateEvt
 26334 ;; This function is called by:
 26335 ;;		_Mdm_MainTask
 26336 ;; This function uses a non-reentrant model
 26337 ;;
 26338                           
 26339                           	psect	text127
 26340  005E72                     __ptext127:
 26341                           	opt stack 0
 26342  005E72                     _TurnOnModem:
 26343                           	opt stack 15
 26344                           
 26345                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 26346                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 26347                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 26348                           
 26349                           ; BSR set to: 3
 26350                           ;incstack = 0
 26351  005E72  D01B               	goto	l1009
 26352  005E74                     
 26353                           ;mdm_gsm_gprs.c: 385: Counter++;
 26354  005E74  0102               	movlb	2	; () banked
 26355  005E76  4BDC               	infsnz	TurnOnModem@Counter& (0+255),f,b
 26356  005E78  2BDD               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 26357                           
 26358                           ; BSR set to: 2
 26359                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 26360  005E7A  0EB8               	movlw	184
 26361  005E7C  5DDC               	subwf	TurnOnModem@Counter& (0+255),w,b
 26362  005E7E  0E0B               	movlw	11
 26363  005E80  59DD               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 26364  005E82  A0D8               	btfss	status,0,c
 26365  005E84  0012               	return	
 26366                           
 26367                           ; BSR set to: 2
 26368                           ;mdm_gsm_gprs.c: 388: {
 26369                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 26370  005E86  0E01               	movlw	1
 26371  005E88  0101               	movlb	1	; () banked
 26372  005E8A  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26373                           
 26374                           ; BSR set to: 1
 26375                           ;mdm_gsm_gprs.c: 391: }
 26376                           ;mdm_gsm_gprs.c: 392: break;
 26377  005E8C  0012               	return	
 26378  005E8E                     
 26379                           ; BSR set to: 1
 26380                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 26381                           
 26382                           ; BSR set to: 1
 26383  005E8E  0EE2               	movlw	low _MdmOnOffPulseRequest
 26384  005E90  0100               	movlb	0	; () banked
 26385  005E92  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26386  005E94  0E00               	movlw	high _MdmOnOffPulseRequest
 26387  005E96  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26388  005E98  EC8C  F034         	call	_GenerateEvt	;wreg free
 26389                           
 26390                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 26391  005E9C  0E01               	movlw	1
 26392  005E9E  0100               	movlb	0	; () banked
 26393  005EA0  6FD2               	movwf	_MdmStatus& (0+255),b
 26394                           
 26395                           ; BSR set to: 0
 26396                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 26397  005EA2  0E02               	movlw	2
 26398  005EA4  0101               	movlb	1	; () banked
 26399  005EA6  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26400                           
 26401                           ; BSR set to: 1
 26402                           ;mdm_gsm_gprs.c: 408: }
 26403                           
 26404                           ; BSR set to: 1
 26405                           ;mdm_gsm_gprs.c: 407: break;
 26406                           
 26407                           ;mdm_gsm_gprs.c: 406: default:
 26408                           
 26409                           ; BSR set to: 1
 26410                           ;mdm_gsm_gprs.c: 404: break;
 26411                           
 26412                           ;mdm_gsm_gprs.c: 403: case Stop:
 26413                           
 26414                           ;mdm_gsm_gprs.c: 401: break;
 26415  005EA8  0012               	return	
 26416  005EAA                     l1009:
 26417                           
 26418                           ; BSR set to: 1
 26419  005EAA  0101               	movlb	1	; () banked
 26420  005EAC  51F4               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 26421                           
 26422                           ; Switch size 1, requested type "space"
 26423                           ; Number of cases is 3, Range of values is 0 to 2
 26424                           ; switch strategies available:
 26425                           ; Name         Instructions Cycles
 26426                           ; simple_byte           10     6 (average)
 26427                           ;	Chosen strategy is simple_byte
 26428  005EAE  0A00               	xorlw	0	; case 0
 26429  005EB0  B4D8               	btfsc	status,2,c
 26430  005EB2  D7E0               	goto	l1010
 26431  005EB4  0A01               	xorlw	1	; case 1
 26432  005EB6  B4D8               	btfsc	status,2,c
 26433  005EB8  D7EA               	goto	l1013
 26434  005EBA  0A03               	xorlw	3	; case 2
 26435  005EBC  0012               	return	
 26436  005EBE                     __end_of_TurnOnModem:
 26437                           	opt stack 0
 26438                           tosu	equ	0xFFF
 26439                           tosh	equ	0xFFE
 26440                           tosl	equ	0xFFD
 26441                           pclath	equ	0xFFA
 26442                           tblptru	equ	0xFF8
 26443                           tblptrh	equ	0xFF7
 26444                           tblptrl	equ	0xFF6
 26445                           tablat	equ	0xFF5
 26446                           prodh	equ	0xFF4
 26447                           prodl	equ	0xFF3
 26448                           intcon	equ	0xFF2
 26449                           intcon2	equ	0xFF1
 26450                           intcon3	equ	0xFF0
 26451                           indf0	equ	0xFEF
 26452                           postinc0	equ	0xFEE
 26453                           plusw0	equ	0xFEB
 26454                           fsr0h	equ	0xFEA
 26455                           fsr0l	equ	0xFE9
 26456                           wreg	equ	0xFE8
 26457                           indf1	equ	0xFE7
 26458                           postinc1	equ	0xFE6
 26459                           postdec1	equ	0xFE5
 26460                           fsr1h	equ	0xFE2
 26461                           fsr1l	equ	0xFE1
 26462                           indf2	equ	0xFDF
 26463                           postinc2	equ	0xFDE
 26464                           postdec2	equ	0xFDD
 26465                           plusw2	equ	0xFDB
 26466                           fsr2h	equ	0xFDA
 26467                           fsr2l	equ	0xFD9
 26468                           status	equ	0xFD8
 26469                           
 26470 ;; *************** function _SendSmsSm *****************
 26471 ;; Defined at:
 26472 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26473 ;; Parameters:    Size  Location     Type
 26474 ;;		None
 26475 ;; Auto vars:     Size  Location     Type
 26476 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26477 ;; Return value:  Size  Location     Type
 26478 ;;                  1    wreg      void 
 26479 ;; Registers used:
 26480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26481 ;; Tracked objects:
 26482 ;;		On entry : 0/0
 26483 ;;		On exit  : 0/0
 26484 ;;		Unchanged: 0/0
 26485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26487 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26489 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26490 ;;Total ram usage:       52 bytes
 26491 ;; Hardware stack levels used:    1
 26492 ;; Hardware stack levels required when called:   14
 26493 ;; This function calls:
 26494 ;;		_OsTmr_GetTimerStatus
 26495 ;;		_OsTmr_StartTimer
 26496 ;;		_ReceiveEvt
 26497 ;;		_StringCopy
 26498 ;;		_Uart_WriteStringLen
 26499 ;; This function is called by:
 26500 ;;		_Mdm_MainTask
 26501 ;; This function uses a non-reentrant model
 26502 ;;
 26503                           
 26504                           	psect	text128
 26505  0019F2                     __ptext128:
 26506                           	opt stack 0
 26507  0019F2                     _SendSmsSm:
 26508                           	opt stack 13
 26509                           
 26510                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 26511                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 26512                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 26513                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 26514                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 26515                           
 26516                           ;incstack = 0
 26517  0019F2  0E03               	movlw	3
 26518  0019F4  0100               	movlb	0	; () banked
 26519  0019F6  19D2               	xorwf	_MdmStatus& (0+255),w,b
 26520  0019F8  A4D8               	btfss	status,2,c
 26521  0019FA  0012               	return	
 26522  0019FC  D0C1               	goto	l1091
 26523  0019FE                     
 26524                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 26525                           
 26526                           ; BSR set to: 0
 26527  0019FE  0EE1               	movlw	low _SendSmsEvent
 26528  001A00  0100               	movlb	0	; () banked
 26529  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26530  001A04  0E00               	movlw	high _SendSmsEvent
 26531  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26532  001A08  EC9B  F032         	call	_ReceiveEvt	;wreg free
 26533  001A0C  0900               	iorlw	0
 26534  001A0E  B4D8               	btfsc	status,2,c
 26535  001A10  0012               	return	
 26536                           
 26537                           ;mdm_gsm_gprs.c: 671: {
 26538                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 26539  001A12  0E01               	movlw	1
 26540  001A14  0101               	movlb	1	; () banked
 26541  001A16  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26542                           
 26543                           ; BSR set to: 1
 26544                           ;mdm_gsm_gprs.c: 674: }
 26545                           ;mdm_gsm_gprs.c: 675: break;
 26546  001A18  0012               	return	
 26547  001A1A                     
 26548                           ; BSR set to: 1
 26549                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 26550                           
 26551                           ; BSR set to: 1
 26552  001A1A  0ECE               	movlw	low STR_5
 26553  001A1C  0100               	movlb	0	; () banked
 26554  001A1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26555  001A20  0EFF               	movlw	high STR_5
 26556  001A22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26557  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 26558  001A26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26559  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 26560  001A2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26561  001A2C  0E00               	movlw	0
 26562  001A2E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 26563  001A30  0E09               	movlw	9
 26564  001A32  6F89               	movwf	StringCopy@Len& (0+255),b
 26565  001A34  EC6C  F02B         	call	_StringCopy	;wreg free
 26566                           
 26567                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 26568  001A38  0EA7               	movlw	low _PhoneNumber
 26569  001A3A  0100               	movlb	0	; () banked
 26570  001A3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26571  001A3E  0E04               	movlw	high _PhoneNumber
 26572  001A40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26573  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 26574  001A44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26575  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 26576  001A48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26577  001A4A  C0D3  F089         	movff	_PhoneNumbLen,StringCopy@Len
 26578  001A4E  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 26579  001A50  EC6C  F02B         	call	_StringCopy	;wreg free
 26580                           
 26581                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 26582  001A54  0100               	movlb	0	; () banked
 26583  001A56  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 26584  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26585  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26586  001A5C  0E09               	movlw	9
 26587  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26588  001A60  0E00               	movlw	0
 26589  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26590  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 26591  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26592  001A68  6ED9               	movwf	fsr2l,c
 26593  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 26594  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26595  001A6E  6EDA               	movwf	fsr2h,c
 26596  001A70  0E22               	movlw	34
 26597  001A72  6EDF               	movwf	indf2,c
 26598                           
 26599                           ; BSR set to: 0
 26600                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 26601  001A74  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 26602  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26603  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26604  001A7A  0E0A               	movlw	10
 26605  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26606  001A7E  0E00               	movlw	0
 26607  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26608  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 26609  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26610  001A86  6ED9               	movwf	fsr2l,c
 26611  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 26612  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26613  001A8C  6EDA               	movwf	fsr2h,c
 26614  001A8E  0E0D               	movlw	13
 26615  001A90  6EDF               	movwf	indf2,c
 26616                           
 26617                           ; BSR set to: 0
 26618                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 26619  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 26620  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26621  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 26622  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26623  001A9A  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 26624  001A9C  0F0B               	addlw	11
 26625  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26626  001AA0  0E01               	movlw	1
 26627  001AA2  EC94  F030         	call	_Uart_WriteStringLen
 26628                           
 26629                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 26630  001AA6  0EE8               	movlw	low SendSmsSm@SwTimer
 26631  001AA8  0100               	movlb	0	; () banked
 26632  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26633  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 26634  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26635  001AB0  0EC4               	movlw	196
 26636  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26637  001AB4  0E09               	movlw	9
 26638  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26639  001AB8  0E00               	movlw	0
 26640  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26641  001ABC  0E00               	movlw	0
 26642  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26643  001AC0  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 26644                           
 26645                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 26646  001AC4  0E05               	movlw	5
 26647  001AC6  0101               	movlb	1	; () banked
 26648  001AC8  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26649                           
 26650                           ; BSR set to: 1
 26651                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 26652  001ACA  0E02               	movlw	2
 26653  001ACC  6FEF               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 26654                           
 26655                           ;mdm_gsm_gprs.c: 691: break;
 26656  001ACE  0012               	return	
 26657  001AD0                     
 26658                           ; BSR set to: 1
 26659                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 26660                           
 26661                           ; BSR set to: 1
 26662  001AD0  0E0A               	movlw	10
 26663  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 26664                           
 26665                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 26666  001AD4  0E0D               	movlw	13
 26667  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 26668                           
 26669                           ; BSR set to: 1
 26670                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 26671  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 26672  001ADA  0100               	movlb	0	; () banked
 26673  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26674  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 26675  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26676  001AE2  0E02               	movlw	2
 26677  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26678  001AE6  0E01               	movlw	1
 26679  001AE8  EC94  F030         	call	_Uart_WriteStringLen
 26680                           
 26681                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 26682  001AEC  0E03               	movlw	3
 26683  001AEE  0101               	movlb	1	; () banked
 26684  001AF0  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26685                           
 26686                           ;mdm_gsm_gprs.c: 701: break;
 26687  001AF2  0012               	return	
 26688  001AF4                     
 26689                           ; BSR set to: 1
 26690                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 26691                           
 26692                           ; BSR set to: 1
 26693  001AF4  0E3A               	movlw	low _NewStringReceived
 26694  001AF6  0100               	movlb	0	; () banked
 26695  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26696  001AFA  0E00               	movlw	high _NewStringReceived
 26697  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26698  001AFE  EC9B  F032         	call	_ReceiveEvt	;wreg free
 26699  001B02  0900               	iorlw	0
 26700  001B04  B4D8               	btfsc	status,2,c
 26701  001B06  0012               	return	
 26702                           
 26703                           ;mdm_gsm_gprs.c: 706: {
 26704                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 26705  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 26706  001B0C  0A3E               	xorlw	62
 26707  001B0E  A4D8               	btfss	status,2,c
 26708  001B10  0012               	return	
 26709                           
 26710                           ;mdm_gsm_gprs.c: 709: {
 26711                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 26712  001B12  0E04               	movlw	4
 26713  001B14  0101               	movlb	1	; () banked
 26714  001B16  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26715                           
 26716                           ; BSR set to: 1
 26717                           ;mdm_gsm_gprs.c: 712: }
 26718                           ;mdm_gsm_gprs.c: 713: }
 26719                           ;mdm_gsm_gprs.c: 714: break;
 26720                           
 26721                           ; BSR set to: 1
 26722  001B18  0012               	return	
 26723  001B1A                     
 26724                           ; BSR set to: 1
 26725                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 26726                           
 26727                           ; BSR set to: 1
 26728  001B1A  0E72               	movlw	low _MessageText
 26729  001B1C  0100               	movlb	0	; () banked
 26730  001B1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26731  001B20  0E05               	movlw	high _MessageText
 26732  001B22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26733  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 26734  001B26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26735  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 26736  001B2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26737  001B2C  C0D4  F089         	movff	_SmsLen,StringCopy@Len
 26738  001B30  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 26739  001B32  EC6C  F02B         	call	_StringCopy	;wreg free
 26740                           
 26741                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 26742  001B36  0100               	movlb	0	; () banked
 26743  001B38  51D4               	movf	_SmsLen& (0+255),w,b
 26744  001B3A  0D01               	mullw	1
 26745  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 26746  001B3E  24F3               	addwf	prodl,w,c
 26747  001B40  6ED9               	movwf	fsr2l,c
 26748  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 26749  001B44  20F4               	addwfc	prodh,w,c
 26750  001B46  6EDA               	movwf	fsr2h,c
 26751  001B48  0E1A               	movlw	26
 26752  001B4A  6EDF               	movwf	indf2,c
 26753                           
 26754                           ; BSR set to: 0
 26755                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 26756  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 26757  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26758  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 26759  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26760  001B54  29D4               	incf	_SmsLen& (0+255),w,b
 26761  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26762  001B58  0E01               	movlw	1
 26763  001B5A  EC94  F030         	call	_Uart_WriteStringLen
 26764                           
 26765                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 26766  001B5E  0E00               	movlw	0
 26767  001B60  0101               	movlb	1	; () banked
 26768  001B62  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26769                           
 26770                           ;mdm_gsm_gprs.c: 725: break;
 26771  001B64  0012               	return	
 26772  001B66                     
 26773                           ; BSR set to: 1
 26774                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 26775                           
 26776                           ; BSR set to: 1
 26777  001B66  0EE8               	movlw	low SendSmsSm@SwTimer
 26778  001B68  0100               	movlb	0	; () banked
 26779  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26780  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 26781  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26782  001B70  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 26783  001B74  06E8               	decf	wreg,f,c
 26784  001B76  A4D8               	btfss	status,2,c
 26785  001B78  0012               	return	
 26786                           
 26787                           ;mdm_gsm_gprs.c: 730: {
 26788                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 26789  001B7A  C1EF  F1F0         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 26790                           
 26791                           ;mdm_gsm_gprs.c: 738: }
 26792                           
 26793                           ;mdm_gsm_gprs.c: 737: break;
 26794                           
 26795                           ;mdm_gsm_gprs.c: 736: default:
 26796                           
 26797                           ;mdm_gsm_gprs.c: 733: }
 26798                           ;mdm_gsm_gprs.c: 734: break;
 26799  001B7E  0012               	return	
 26800  001B80                     l1091:
 26801  001B80  0101               	movlb	1	; () banked
 26802  001B82  51F0               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 26803                           
 26804                           ; Switch size 1, requested type "space"
 26805                           ; Number of cases is 6, Range of values is 0 to 5
 26806                           ; switch strategies available:
 26807                           ; Name         Instructions Cycles
 26808                           ; simple_byte           19    10 (average)
 26809                           ;	Chosen strategy is simple_byte
 26810  001B84  0A00               	xorlw	0	; case 0
 26811  001B86  B4D8               	btfsc	status,2,c
 26812  001B88  D73A               	goto	l1092
 26813  001B8A  0A01               	xorlw	1	; case 1
 26814  001B8C  B4D8               	btfsc	status,2,c
 26815  001B8E  D745               	goto	l1095
 26816  001B90  0A03               	xorlw	3	; case 2
 26817  001B92  B4D8               	btfsc	status,2,c
 26818  001B94  D79D               	goto	l1096
 26819  001B96  0A01               	xorlw	1	; case 3
 26820  001B98  B4D8               	btfsc	status,2,c
 26821  001B9A  D7AC               	goto	l1097
 26822  001B9C  0A07               	xorlw	7	; case 4
 26823  001B9E  B4D8               	btfsc	status,2,c
 26824  001BA0  D7BC               	goto	l1100
 26825  001BA2  0A01               	xorlw	1	; case 5
 26826  001BA4  A4D8               	btfss	status,2,c
 26827                           
 26828                           ; BSR set to: 1
 26829  001BA6  0012               	return	
 26830  001BA8  D7DE               	goto	l1101
 26831  001BAA                     __end_of_SendSmsSm:
 26832                           	opt stack 0
 26833                           tosu	equ	0xFFF
 26834                           tosh	equ	0xFFE
 26835                           tosl	equ	0xFFD
 26836                           pclath	equ	0xFFA
 26837                           tblptru	equ	0xFF8
 26838                           tblptrh	equ	0xFF7
 26839                           tblptrl	equ	0xFF6
 26840                           tablat	equ	0xFF5
 26841                           prodh	equ	0xFF4
 26842                           prodl	equ	0xFF3
 26843                           intcon	equ	0xFF2
 26844                           intcon2	equ	0xFF1
 26845                           intcon3	equ	0xFF0
 26846                           indf0	equ	0xFEF
 26847                           postinc0	equ	0xFEE
 26848                           plusw0	equ	0xFEB
 26849                           fsr0h	equ	0xFEA
 26850                           fsr0l	equ	0xFE9
 26851                           wreg	equ	0xFE8
 26852                           indf1	equ	0xFE7
 26853                           postinc1	equ	0xFE6
 26854                           postdec1	equ	0xFE5
 26855                           fsr1h	equ	0xFE2
 26856                           fsr1l	equ	0xFE1
 26857                           indf2	equ	0xFDF
 26858                           postinc2	equ	0xFDE
 26859                           postdec2	equ	0xFDD
 26860                           plusw2	equ	0xFDB
 26861                           fsr2h	equ	0xFDA
 26862                           fsr2l	equ	0xFD9
 26863                           status	equ	0xFD8
 26864                           
 26865 ;; *************** function _Uart_WriteStringLen *****************
 26866 ;; Defined at:
 26867 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26868 ;; Parameters:    Size  Location     Type
 26869 ;;  Module          1    wreg     unsigned char 
 26870 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 26871 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 26872 ;;  Len             1   34[BANK0 ] unsigned char 
 26873 ;; Auto vars:     Size  Location     Type
 26874 ;;  Module          1   36[BANK0 ] unsigned char 
 26875 ;;  Index           1   35[BANK0 ] unsigned char 
 26876 ;; Return value:  Size  Location     Type
 26877 ;;                  1    wreg      void 
 26878 ;; Registers used:
 26879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26880 ;; Tracked objects:
 26881 ;;		On entry : 0/0
 26882 ;;		On exit  : 0/0
 26883 ;;		Unchanged: 0/0
 26884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26885 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26888 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26889 ;;Total ram usage:        5 bytes
 26890 ;; Hardware stack levels used:    1
 26891 ;; Hardware stack levels required when called:   12
 26892 ;; This function calls:
 26893 ;;		_UartTxBufferStatus
 26894 ;;		_UartWriteByte
 26895 ;; This function is called by:
 26896 ;;		_SendSmsSm
 26897 ;;		_GsmGprsTerminal
 26898 ;; This function uses a non-reentrant model
 26899 ;;
 26900                           
 26901                           	psect	text129
 26902  006128                     __ptext129:
 26903                           	opt stack 0
 26904  006128                     _Uart_WriteStringLen:
 26905                           	opt stack 14
 26906                           
 26907                           ;incstack = 0
 26908                           ;Uart_WriteStringLen@Module stored from wreg
 26909  006128  0100               	movlb	0	; () banked
 26910  00612A  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 26911                           
 26912                           ;uart_drv.c: 544: UINT8 Index;
 26913                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 26914  00612C  0E00               	movlw	0
 26915  00612E  0100               	movlb	0	; () banked
 26916  006130  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 26917  006132  D015               	goto	l715
 26918  006134                     
 26919                           ; BSR set to: 0
 26920                           ;uart_drv.c: 547: {
 26921                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 26922                           
 26923                           ; BSR set to: 0
 26924  006134  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 26925  006138  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 26926  00613C  50DF               	movf	indf2,w,c
 26927  00613E  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 26928  006140  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 26929  006142  ECE7  F033         	call	_UartWriteByte
 26930                           
 26931                           ;uart_drv.c: 551: StringToWrite++;
 26932  006146  0100               	movlb	0	; () banked
 26933  006148  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 26934  00614A  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 26935  00614C                     
 26936                           ; BSR set to: 0
 26937                           
 26938                           ; BSR set to: 0
 26939  00614C  0100               	movlb	0	; () banked
 26940  00614E  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 26941  006150  ECC5  F02E         	call	_UartTxBufferStatus
 26942  006154  06E8               	decf	wreg,f,c
 26943  006156  B4D8               	btfsc	status,2,c
 26944  006158  D7F9               	goto	l718
 26945  00615A  0100               	movlb	0	; () banked
 26946  00615C  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 26947  00615E                     l715:
 26948                           
 26949                           ; BSR set to: 0
 26950                           
 26951                           ; BSR set to: 0
 26952  00615E  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 26953  006160  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 26954  006162  B0D8               	btfsc	status,0,c
 26955  006164  0012               	return	
 26956  006166  D7E6               	goto	l716
 26957  006168                     __end_of_Uart_WriteStringLen:
 26958                           	opt stack 0
 26959                           tosu	equ	0xFFF
 26960                           tosh	equ	0xFFE
 26961                           tosl	equ	0xFFD
 26962                           pclath	equ	0xFFA
 26963                           tblptru	equ	0xFF8
 26964                           tblptrh	equ	0xFF7
 26965                           tblptrl	equ	0xFF6
 26966                           tablat	equ	0xFF5
 26967                           prodh	equ	0xFF4
 26968                           prodl	equ	0xFF3
 26969                           intcon	equ	0xFF2
 26970                           intcon2	equ	0xFF1
 26971                           intcon3	equ	0xFF0
 26972                           indf0	equ	0xFEF
 26973                           postinc0	equ	0xFEE
 26974                           plusw0	equ	0xFEB
 26975                           fsr0h	equ	0xFEA
 26976                           fsr0l	equ	0xFE9
 26977                           wreg	equ	0xFE8
 26978                           indf1	equ	0xFE7
 26979                           postinc1	equ	0xFE6
 26980                           postdec1	equ	0xFE5
 26981                           fsr1h	equ	0xFE2
 26982                           fsr1l	equ	0xFE1
 26983                           indf2	equ	0xFDF
 26984                           postinc2	equ	0xFDE
 26985                           postdec2	equ	0xFDD
 26986                           plusw2	equ	0xFDB
 26987                           fsr2h	equ	0xFDA
 26988                           fsr2l	equ	0xFD9
 26989                           status	equ	0xFD8
 26990                           
 26991 ;; *************** function _ModemEvtParser *****************
 26992 ;; Defined at:
 26993 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26994 ;; Parameters:    Size  Location     Type
 26995 ;;		None
 26996 ;; Auto vars:     Size  Location     Type
 26997 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 26998 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 26999 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 27000 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 27001 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 27002 ;;  Match           1   71[BANK0 ] unsigned char 
 27003 ;; Return value:  Size  Location     Type
 27004 ;;                  1    wreg      void 
 27005 ;; Registers used:
 27006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27007 ;; Tracked objects:
 27008 ;;		On entry : 0/0
 27009 ;;		On exit  : 0/0
 27010 ;;		Unchanged: 0/0
 27011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27013 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27015 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27016 ;;Total ram usage:       26 bytes
 27017 ;; Hardware stack levels used:    1
 27018 ;; Hardware stack levels required when called:   12
 27019 ;; This function calls:
 27020 ;;		_GenerateEvt
 27021 ;;		_ReceiveEvt
 27022 ;;		_StringCompare
 27023 ;;		_StringCopy
 27024 ;;		_Uart_ClearRxBuffer
 27025 ;; This function is called by:
 27026 ;;		_Mdm_MainTask
 27027 ;; This function uses a non-reentrant model
 27028 ;;
 27029                           
 27030                           	psect	text130
 27031  001D32                     __ptext130:
 27032                           	opt stack 0
 27033  001D32                     _ModemEvtParser:
 27034                           	opt stack 15
 27035                           
 27036                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 27037                           
 27038                           ; BSR set to: 0
 27039                           ;incstack = 0
 27040  001D32  C3CC  F0A3         	movff	ModemEvtParser@F9110,ModemEvtParser@RingString
 27041  001D36  C3CD  F0A4         	movff	ModemEvtParser@F9110+1,ModemEvtParser@RingString+1
 27042  001D3A  C3CE  F0A5         	movff	ModemEvtParser@F9110+2,ModemEvtParser@RingString+2
 27043  001D3E  C3CF  F0A6         	movff	ModemEvtParser@F9110+3,ModemEvtParser@RingString+3
 27044                           
 27045                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 27046  001D42  EE23  F0C7         	lfsr	2,ModemEvtParser@F9112
 27047  001D46  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 27048  001D4A  0E04               	movlw	4
 27049  001D4C                     u14721:
 27050  001D4C  CFDB FFE3          	movff	plusw2,plusw1
 27051  001D50  06E8               	decf	wreg,f,c
 27052  001D52  E2FC               	bc	u14721
 27053                           
 27054                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 27055  001D54  EE23  F0C2         	lfsr	2,ModemEvtParser@F9114
 27056  001D58  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 27057  001D5C  0E04               	movlw	4
 27058  001D5E                     u14731:
 27059  001D5E  CFDB FFE3          	movff	plusw2,plusw1
 27060  001D62  06E8               	decf	wreg,f,c
 27061  001D64  E2FC               	bc	u14731
 27062                           
 27063                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 27064  001D66  EE24  F0E0         	lfsr	2,ModemEvtParser@F9116
 27065  001D6A  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 27066  001D6E  0E09               	movlw	9
 27067  001D70                     u14741:
 27068  001D70  CFDB FFE3          	movff	plusw2,plusw1
 27069  001D74  06E8               	decf	wreg,f,c
 27070  001D76  E2FC               	bc	u14741
 27071                           
 27072                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 27073  001D78  0E00               	movlw	0
 27074  001D7A  0100               	movlb	0	; () banked
 27075  001D7C  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27076                           
 27077                           ; BSR set to: 0
 27078                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 27079  001D7E  0E00               	movlw	0
 27080  001D80  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27081                           
 27082                           ; BSR set to: 0
 27083                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 27084  001D82  0E39               	movlw	low _NewMdmEvtParserRequest
 27085  001D84  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27086  001D86  0E00               	movlw	high _NewMdmEvtParserRequest
 27087  001D88  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27088  001D8A  EC9B  F032         	call	_ReceiveEvt	;wreg free
 27089  001D8E  0900               	iorlw	0
 27090  001D90  B4D8               	btfsc	status,2,c
 27091  001D92  0012               	return	
 27092                           
 27093                           ;mdm_gsm_gprs.c: 510: {
 27094                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 27095  001D94  0E00               	movlw	0
 27096  001D96  0100               	movlb	0	; () banked
 27097  001D98  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27098  001D9A                     l15361:
 27099                           
 27100                           ; BSR set to: 0
 27101  001D9A  0E03               	movlw	3
 27102  001D9C  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 27103  001D9E  D074               	goto	l1052
 27104  001DA0  D083               	goto	u14810
 27105  001DA2                     
 27106                           ; BSR set to: 0
 27107                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 27108                           
 27109                           ; BSR set to: 0
 27110  001DA2  0EA3               	movlw	low ModemEvtParser@RingString
 27111  001DA4  6F7D               	movwf	StringCompare@String1& (0+255),b
 27112  001DA6  0E00               	movlw	high ModemEvtParser@RingString
 27113  001DA8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27114  001DAA  0E58               	movlw	low _RxBuffer
 27115  001DAC  6F7F               	movwf	StringCompare@String2& (0+255),b
 27116  001DAE  0E0C               	movlw	high _RxBuffer
 27117  001DB0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27118  001DB2  0E00               	movlw	0
 27119  001DB4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27120  001DB6  0E04               	movlw	4
 27121  001DB8  6F81               	movwf	StringCompare@Len& (0+255),b
 27122  001DBA  ECFD  F02D         	call	_StringCompare	;wreg free
 27123  001DBE  0900               	iorlw	0
 27124  001DC0  B4D8               	btfsc	status,2,c
 27125  001DC2  D06F               	goto	l1055
 27126                           
 27127                           ;mdm_gsm_gprs.c: 518: {
 27128                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 27129  001DC4  0EE0               	movlw	low _RingEvent
 27130  001DC6  0100               	movlb	0	; () banked
 27131  001DC8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27132  001DCA  0E00               	movlw	high _RingEvent
 27133  001DCC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27134  001DCE  EC8C  F034         	call	_GenerateEvt	;wreg free
 27135  001DD2  D040               	goto	l15383
 27136  001DD4                     
 27137                           ; BSR set to: 0
 27138                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 27139                           
 27140                           ; BSR set to: 0
 27141  001DD4  0E99               	movlw	low ModemEvtParser@ClipString
 27142  001DD6  6F7D               	movwf	StringCompare@String1& (0+255),b
 27143  001DD8  0E00               	movlw	high ModemEvtParser@ClipString
 27144  001DDA  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27145  001DDC  0E58               	movlw	low _RxBuffer
 27146  001DDE  6F7F               	movwf	StringCompare@String2& (0+255),b
 27147  001DE0  0E0C               	movlw	high _RxBuffer
 27148  001DE2  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27149  001DE4  0E00               	movlw	0
 27150  001DE6  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27151  001DE8  0E05               	movlw	5
 27152  001DEA  6F81               	movwf	StringCompare@Len& (0+255),b
 27153  001DEC  ECFD  F02D         	call	_StringCompare	;wreg free
 27154  001DF0  0900               	iorlw	0
 27155  001DF2  B4D8               	btfsc	status,2,c
 27156  001DF4  D056               	goto	l1055
 27157                           
 27158                           ;mdm_gsm_gprs.c: 529: {
 27159                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 27160  001DF6  0E60               	movlw	low (_RxBuffer+8)
 27161  001DF8  0100               	movlb	0	; () banked
 27162  001DFA  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27163  001DFC  0E0C               	movlw	high (_RxBuffer+8)
 27164  001DFE  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27165  001E00  0E3C               	movlw	low _callerNumber
 27166  001E02  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27167  001E04  0E03               	movlw	high _callerNumber
 27168  001E06  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27169  001E08  0E00               	movlw	0
 27170  001E0A  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 27171  001E0C  0E0D               	movlw	13
 27172  001E0E  6F89               	movwf	StringCopy@Len& (0+255),b
 27173  001E10  EC6C  F02B         	call	_StringCopy	;wreg free
 27174                           
 27175                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 27176  001E14  0EDF               	movlw	low _ClipEvent
 27177  001E16  0100               	movlb	0	; () banked
 27178  001E18  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27179  001E1A  0E00               	movlw	high _ClipEvent
 27180  001E1C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27181  001E1E  EC8C  F034         	call	_GenerateEvt	;wreg free
 27182  001E22  D018               	goto	l15383
 27183  001E24                     
 27184                           ; BSR set to: 0
 27185                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 27186                           
 27187                           ; BSR set to: 0
 27188  001E24  0E9E               	movlw	low ModemEvtParser@SmsString
 27189  001E26  6F7D               	movwf	StringCompare@String1& (0+255),b
 27190  001E28  0E00               	movlw	high ModemEvtParser@SmsString
 27191  001E2A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27192  001E2C  0E58               	movlw	low _RxBuffer
 27193  001E2E  6F7F               	movwf	StringCompare@String2& (0+255),b
 27194  001E30  0E0C               	movlw	high _RxBuffer
 27195  001E32  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27196  001E34  0E00               	movlw	0
 27197  001E36  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27198  001E38  0E05               	movlw	5
 27199  001E3A  6F81               	movwf	StringCompare@Len& (0+255),b
 27200  001E3C  ECFD  F02D         	call	_StringCompare	;wreg free
 27201  001E40  0900               	iorlw	0
 27202  001E42  B4D8               	btfsc	status,2,c
 27203  001E44  D02E               	goto	l1055
 27204                           
 27205                           ;mdm_gsm_gprs.c: 541: {
 27206                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 27207  001E46  0EDE               	movlw	low _SmsEvent
 27208  001E48  0100               	movlb	0	; () banked
 27209  001E4A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27210  001E4C  0E00               	movlw	high _SmsEvent
 27211  001E4E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27212  001E50  EC8C  F034         	call	_GenerateEvt	;wreg free
 27213  001E54                     l15383:
 27214                           
 27215                           ;mdm_gsm_gprs.c: 545: Match = 1;
 27216  001E54  0E01               	movlw	1
 27217  001E56  0100               	movlb	0	; () banked
 27218  001E58  D015               	goto	L54
 27219  001E5A                     
 27220                           ; BSR set to: 0
 27221                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 27222                           
 27223                           ; BSR set to: 0
 27224  001E5A  0E8F               	movlw	low ModemEvtParser@CallReadyString
 27225  001E5C  6F7D               	movwf	StringCompare@String1& (0+255),b
 27226  001E5E  0E00               	movlw	high ModemEvtParser@CallReadyString
 27227  001E60  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27228  001E62  0E58               	movlw	low _RxBuffer
 27229  001E64  6F7F               	movwf	StringCompare@String2& (0+255),b
 27230  001E66  0E0C               	movlw	high _RxBuffer
 27231  001E68  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27232  001E6A  0E00               	movlw	0
 27233  001E6C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27234  001E6E  0E0A               	movlw	10
 27235  001E70  6F81               	movwf	StringCompare@Len& (0+255),b
 27236  001E72  ECFD  F02D         	call	_StringCompare	;wreg free
 27237  001E76  0900               	iorlw	0
 27238  001E78  B4D8               	btfsc	status,2,c
 27239  001E7A  D013               	goto	l1055
 27240                           
 27241                           ;mdm_gsm_gprs.c: 552: {
 27242                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 27243  001E7C  0E02               	movlw	2
 27244  001E7E  0100               	movlb	0	; () banked
 27245  001E80  6FD2               	movwf	_MdmStatus& (0+255),b
 27246                           
 27247                           ;mdm_gsm_gprs.c: 556: Match = 1;
 27248  001E82  0E01               	movlw	1
 27249  001E84                     L54:
 27250  001E84  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27251                           
 27252                           ; BSR set to: 0
 27253                           ;mdm_gsm_gprs.c: 562: }
 27254                           
 27255                           ; BSR set to: 0
 27256                           ;mdm_gsm_gprs.c: 561: break;
 27257                           
 27258                           ;mdm_gsm_gprs.c: 560: default:
 27259                           
 27260                           ; BSR set to: 0
 27261                           ;mdm_gsm_gprs.c: 557: }
 27262                           ;mdm_gsm_gprs.c: 558: break;
 27263  001E86  D00D               	goto	l1055
 27264  001E88                     l1052:
 27265                           
 27266                           ; BSR set to: 0
 27267                           
 27268                           ; BSR set to: 0
 27269  001E88  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 27270                           
 27271                           ; Switch size 1, requested type "space"
 27272                           ; Number of cases is 4, Range of values is 0 to 3
 27273                           ; switch strategies available:
 27274                           ; Name         Instructions Cycles
 27275                           ; simple_byte           13     7 (average)
 27276                           ;	Chosen strategy is simple_byte
 27277  001E8A  0A00               	xorlw	0	; case 0
 27278  001E8C  B4D8               	btfsc	status,2,c
 27279  001E8E  D789               	goto	l1053
 27280  001E90  0A01               	xorlw	1	; case 1
 27281  001E92  B4D8               	btfsc	status,2,c
 27282  001E94  D7C7               	goto	l1058
 27283  001E96  0A03               	xorlw	3	; case 2
 27284  001E98  B4D8               	btfsc	status,2,c
 27285  001E9A  D7DF               	goto	l1060
 27286  001E9C  0A01               	xorlw	1	; case 3
 27287  001E9E  B4D8               	btfsc	status,2,c
 27288  001EA0  D799               	goto	l1056
 27289  001EA2                     l1055:
 27290                           
 27291                           ; BSR set to: 0
 27292  001EA2  0100               	movlb	0	; () banked
 27293  001EA4  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 27294  001EA6  D779               	goto	l15361
 27295  001EA8                     u14810:
 27296                           
 27297                           ; BSR set to: 0
 27298                           ;mdm_gsm_gprs.c: 563: }
 27299                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 27300                           
 27301                           ; BSR set to: 0
 27302  001EA8  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 27303  001EAA  A4D8               	btfss	status,2,c
 27304  001EAC  0012               	return	
 27305                           
 27306                           ; BSR set to: 0
 27307                           ;mdm_gsm_gprs.c: 567: {
 27308                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 27309  001EAE  ECD8  F031         	call	_Uart_ClearRxBuffer	;wreg free
 27310  001EB2  0012               	return	
 27311  001EB4                     __end_of_ModemEvtParser:
 27312                           	opt stack 0
 27313                           tosu	equ	0xFFF
 27314                           tosh	equ	0xFFE
 27315                           tosl	equ	0xFFD
 27316                           pclath	equ	0xFFA
 27317                           tblptru	equ	0xFF8
 27318                           tblptrh	equ	0xFF7
 27319                           tblptrl	equ	0xFF6
 27320                           tablat	equ	0xFF5
 27321                           prodh	equ	0xFF4
 27322                           prodl	equ	0xFF3
 27323                           intcon	equ	0xFF2
 27324                           intcon2	equ	0xFF1
 27325                           intcon3	equ	0xFF0
 27326                           indf0	equ	0xFEF
 27327                           postinc0	equ	0xFEE
 27328                           plusw0	equ	0xFEB
 27329                           fsr0h	equ	0xFEA
 27330                           fsr0l	equ	0xFE9
 27331                           wreg	equ	0xFE8
 27332                           indf1	equ	0xFE7
 27333                           postinc1	equ	0xFE6
 27334                           postdec1	equ	0xFE5
 27335                           plusw1	equ	0xFE3
 27336                           fsr1h	equ	0xFE2
 27337                           fsr1l	equ	0xFE1
 27338                           indf2	equ	0xFDF
 27339                           postinc2	equ	0xFDE
 27340                           postdec2	equ	0xFDD
 27341                           plusw2	equ	0xFDB
 27342                           fsr2h	equ	0xFDA
 27343                           fsr2l	equ	0xFD9
 27344                           status	equ	0xFD8
 27345                           
 27346 ;; *************** function _Uart_ClearRxBuffer *****************
 27347 ;; Defined at:
 27348 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27349 ;; Parameters:    Size  Location     Type
 27350 ;;		None
 27351 ;; Auto vars:     Size  Location     Type
 27352 ;;  Index           2   29[BANK0 ] unsigned short 
 27353 ;; Return value:  Size  Location     Type
 27354 ;;                  1    wreg      void 
 27355 ;; Registers used:
 27356 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27357 ;; Tracked objects:
 27358 ;;		On entry : 0/0
 27359 ;;		On exit  : 0/0
 27360 ;;		Unchanged: 0/0
 27361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27363 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27365 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27366 ;;Total ram usage:        2 bytes
 27367 ;; Hardware stack levels used:    1
 27368 ;; Hardware stack levels required when called:   11
 27369 ;; This function calls:
 27370 ;;		Nothing
 27371 ;; This function is called by:
 27372 ;;		_ModemEvtParser
 27373 ;; This function uses a non-reentrant model
 27374 ;;
 27375                           
 27376                           	psect	text131
 27377  0063B0                     __ptext131:
 27378                           	opt stack 0
 27379  0063B0                     _Uart_ClearRxBuffer:
 27380                           	opt stack 15
 27381                           
 27382                           ;uart_drv.c: 567: UINT16 Index = 0;
 27383                           
 27384                           ;incstack = 0
 27385  0063B0  0E00               	movlw	0
 27386  0063B2  0100               	movlb	0	; () banked
 27387  0063B4  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27388  0063B6  0E00               	movlw	0
 27389  0063B8  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27390                           
 27391                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 27392  0063BA  0E00               	movlw	0
 27393  0063BC  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27394  0063BE  0E00               	movlw	0
 27395  0063C0  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27396  0063C2                     l14499:
 27397                           
 27398                           ; BSR set to: 0
 27399  0063C2  0E90               	movlw	144
 27400  0063C4  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27401  0063C6  0E01               	movlw	1
 27402  0063C8  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27403  0063CA  B0D8               	btfsc	status,0,c
 27404  0063CC  0012               	return	
 27405                           
 27406                           ; BSR set to: 0
 27407                           ;uart_drv.c: 571: {
 27408                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 27409                           
 27410                           ; BSR set to: 0
 27411                           
 27412                           ; BSR set to: 0
 27413  0063CE  0E58               	movlw	low _RxBuffer
 27414  0063D0  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27415  0063D2  6ED9               	movwf	fsr2l,c
 27416  0063D4  0E0C               	movlw	high _RxBuffer
 27417  0063D6  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27418  0063D8  6EDA               	movwf	fsr2h,c
 27419  0063DA  0E00               	movlw	0
 27420  0063DC  6EDF               	movwf	indf2,c
 27421                           
 27422                           ; BSR set to: 0
 27423  0063DE  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 27424  0063E0  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 27425  0063E2  D7EF               	goto	l14499
 27426  0063E4                     __end_of_Uart_ClearRxBuffer:
 27427                           	opt stack 0
 27428                           tosu	equ	0xFFF
 27429                           tosh	equ	0xFFE
 27430                           tosl	equ	0xFFD
 27431                           pclath	equ	0xFFA
 27432                           tblptru	equ	0xFF8
 27433                           tblptrh	equ	0xFF7
 27434                           tblptrl	equ	0xFF6
 27435                           tablat	equ	0xFF5
 27436                           prodh	equ	0xFF4
 27437                           prodl	equ	0xFF3
 27438                           intcon	equ	0xFF2
 27439                           intcon2	equ	0xFF1
 27440                           intcon3	equ	0xFF0
 27441                           indf0	equ	0xFEF
 27442                           postinc0	equ	0xFEE
 27443                           plusw0	equ	0xFEB
 27444                           fsr0h	equ	0xFEA
 27445                           fsr0l	equ	0xFE9
 27446                           wreg	equ	0xFE8
 27447                           indf1	equ	0xFE7
 27448                           postinc1	equ	0xFE6
 27449                           postdec1	equ	0xFE5
 27450                           plusw1	equ	0xFE3
 27451                           fsr1h	equ	0xFE2
 27452                           fsr1l	equ	0xFE1
 27453                           indf2	equ	0xFDF
 27454                           postinc2	equ	0xFDE
 27455                           postdec2	equ	0xFDD
 27456                           plusw2	equ	0xFDB
 27457                           fsr2h	equ	0xFDA
 27458                           fsr2l	equ	0xFD9
 27459                           status	equ	0xFD8
 27460                           
 27461 ;; *************** function _StringCompare *****************
 27462 ;; Defined at:
 27463 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27464 ;; Parameters:    Size  Location     Type
 27465 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 27466 ;;		 -> receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 27467 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 27468 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 27469 ;;		 -> isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), parseCommand@resetCmd(4), parseCommand@deleteNum
      +berCmd(4), 
 27470 ;;		 -> parseCommand@addNumberCmd(4), RxBuffer(400), 
 27471 ;;  Len             2   33[BANK0 ] unsigned short 
 27472 ;; Auto vars:     Size  Location     Type
 27473 ;;  Index           2   38[BANK0 ] unsigned short 
 27474 ;;  Result          1   37[BANK0 ] unsigned char 
 27475 ;; Return value:  Size  Location     Type
 27476 ;;                  1    wreg      unsigned char 
 27477 ;; Registers used:
 27478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27479 ;; Tracked objects:
 27480 ;;		On entry : 0/0
 27481 ;;		On exit  : 0/0
 27482 ;;		Unchanged: 0/0
 27483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27484 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27485 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27486 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27487 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27488 ;;Total ram usage:       11 bytes
 27489 ;; Hardware stack levels used:    1
 27490 ;; Hardware stack levels required when called:   11
 27491 ;; This function calls:
 27492 ;;		Nothing
 27493 ;; This function is called by:
 27494 ;;		_ModemEvtParser
 27495 ;;		_parseCommand
 27496 ;;		_isNumberInMemory
 27497 ;;		_isMasterNumber
 27498 ;; This function uses a non-reentrant model
 27499 ;;
 27500                           
 27501                           	psect	text132
 27502  005BFA                     __ptext132:
 27503                           	opt stack 0
 27504  005BFA                     _StringCompare:
 27505                           	opt stack 14
 27506                           
 27507                           ;sf.c: 77: UINT16 Index = 0;
 27508                           
 27509                           ; BSR set to: 0
 27510                           ;incstack = 0
 27511  005BFA  0E00               	movlw	0
 27512  005BFC  0100               	movlb	0	; () banked
 27513  005BFE  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27514  005C00  0E00               	movlw	0
 27515  005C02  6F86               	movwf	StringCompare@Index& (0+255),b
 27516                           
 27517                           ;sf.c: 78: UINT8 Result = 1;
 27518  005C04  0E01               	movlw	1
 27519  005C06  6F85               	movwf	StringCompare@Result& (0+255),b
 27520                           
 27521                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 27522  005C08  0E00               	movlw	0
 27523  005C0A  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27524  005C0C  0E00               	movlw	0
 27525  005C0E  6F86               	movwf	StringCompare@Index& (0+255),b
 27526  005C10  D015               	goto	l2248
 27527  005C12                     
 27528                           ; BSR set to: 0
 27529                           ;sf.c: 82: {
 27530                           ;sf.c: 83: if (String1[Index] != String2[Index])
 27531                           
 27532                           ; BSR set to: 0
 27533  005C12  5186               	movf	StringCompare@Index& (0+255),w,b
 27534  005C14  257F               	addwf	StringCompare@String2& (0+255),w,b
 27535  005C16  6ED9               	movwf	fsr2l,c
 27536  005C18  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27537  005C1A  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 27538  005C1C  6EDA               	movwf	fsr2h,c
 27539  005C1E  5186               	movf	StringCompare@Index& (0+255),w,b
 27540  005C20  257D               	addwf	StringCompare@String1& (0+255),w,b
 27541  005C22  6EE1               	movwf	fsr1l,c
 27542  005C24  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27543  005C26  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 27544  005C28  6EE2               	movwf	fsr1h,c
 27545  005C2A  50DE               	movf	postinc2,w,c
 27546  005C2C  18E6               	xorwf	postinc1,w,c
 27547  005C2E  B4D8               	btfsc	status,2,c
 27548  005C30  D003               	goto	l2250
 27549                           
 27550                           ; BSR set to: 0
 27551                           ;sf.c: 84: {
 27552                           ;sf.c: 85: Result = 0;
 27553  005C32  0E00               	movlw	0
 27554  005C34  6F85               	movwf	StringCompare@Result& (0+255),b
 27555                           
 27556                           ;sf.c: 86: break;
 27557  005C36  D008               	goto	u12630
 27558  005C38                     l2250:
 27559                           
 27560                           ; BSR set to: 0
 27561                           
 27562                           ; BSR set to: 0
 27563  005C38  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 27564  005C3A  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 27565  005C3C                     l2248:
 27566                           
 27567                           ; BSR set to: 0
 27568                           
 27569                           ; BSR set to: 0
 27570  005C3C  5181               	movf	StringCompare@Len& (0+255),w,b
 27571  005C3E  5D86               	subwf	StringCompare@Index& (0+255),w,b
 27572  005C40  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 27573  005C42  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 27574  005C44  A0D8               	btfss	status,0,c
 27575  005C46  D7E5               	goto	l2249
 27576  005C48                     u12630:
 27577                           
 27578                           ; BSR set to: 0
 27579                           ;sf.c: 87: }
 27580                           ;sf.c: 88: }
 27581                           ;sf.c: 91: return Result;
 27582                           
 27583                           ; BSR set to: 0
 27584  005C48  5185               	movf	StringCompare@Result& (0+255),w,b
 27585  005C4A  0012               	return	
 27586  005C4C                     __end_of_StringCompare:
 27587                           	opt stack 0
 27588                           tosu	equ	0xFFF
 27589                           tosh	equ	0xFFE
 27590                           tosl	equ	0xFFD
 27591                           pclath	equ	0xFFA
 27592                           tblptru	equ	0xFF8
 27593                           tblptrh	equ	0xFF7
 27594                           tblptrl	equ	0xFF6
 27595                           tablat	equ	0xFF5
 27596                           prodh	equ	0xFF4
 27597                           prodl	equ	0xFF3
 27598                           intcon	equ	0xFF2
 27599                           intcon2	equ	0xFF1
 27600                           intcon3	equ	0xFF0
 27601                           indf0	equ	0xFEF
 27602                           postinc0	equ	0xFEE
 27603                           plusw0	equ	0xFEB
 27604                           fsr0h	equ	0xFEA
 27605                           fsr0l	equ	0xFE9
 27606                           wreg	equ	0xFE8
 27607                           indf1	equ	0xFE7
 27608                           postinc1	equ	0xFE6
 27609                           postdec1	equ	0xFE5
 27610                           plusw1	equ	0xFE3
 27611                           fsr1h	equ	0xFE2
 27612                           fsr1l	equ	0xFE1
 27613                           indf2	equ	0xFDF
 27614                           postinc2	equ	0xFDE
 27615                           postdec2	equ	0xFDD
 27616                           plusw2	equ	0xFDB
 27617                           fsr2h	equ	0xFDA
 27618                           fsr2l	equ	0xFD9
 27619                           status	equ	0xFD8
 27620                           
 27621 ;; *************** function _GetSmsSm *****************
 27622 ;; Defined at:
 27623 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27624 ;; Parameters:    Size  Location     Type
 27625 ;;		None
 27626 ;; Auto vars:     Size  Location     Type
 27627 ;;		None
 27628 ;; Return value:  Size  Location     Type
 27629 ;;                  1    wreg      void 
 27630 ;; Registers used:
 27631 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27632 ;; Tracked objects:
 27633 ;;		On entry : 0/0
 27634 ;;		On exit  : 0/0
 27635 ;;		Unchanged: 0/0
 27636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27641 ;;Total ram usage:        0 bytes
 27642 ;; Hardware stack levels used:    1
 27643 ;; Hardware stack levels required when called:   13
 27644 ;; This function calls:
 27645 ;;		_ClearBuffer
 27646 ;;		_GenerateEvt
 27647 ;;		_ReceiveEvt
 27648 ;;		_StringCopy
 27649 ;;		_Uart_WriteConstString
 27650 ;; This function is called by:
 27651 ;;		_Mdm_MainTask
 27652 ;; This function uses a non-reentrant model
 27653 ;;
 27654                           
 27655                           	psect	text133
 27656  002A9A                     __ptext133:
 27657                           	opt stack 0
 27658  002A9A                     _GetSmsSm:
 27659                           	opt stack 14
 27660                           
 27661                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 27662                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 27663                           
 27664                           ; BSR set to: 0
 27665                           ;incstack = 0
 27666  002A9A  0E03               	movlw	3
 27667  002A9C  0100               	movlb	0	; () banked
 27668  002A9E  19D2               	xorwf	_MdmStatus& (0+255),w,b
 27669  002AA0  A4D8               	btfss	status,2,c
 27670  002AA2  0012               	return	
 27671  002AA4  D084               	goto	l1070
 27672  002AA6                     
 27673                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 27674                           
 27675                           ; BSR set to: 0
 27676  002AA6  0EDD               	movlw	low _GetSmsText
 27677  002AA8  0100               	movlb	0	; () banked
 27678  002AAA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27679  002AAC  0E00               	movlw	high _GetSmsText
 27680  002AAE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27681  002AB0  EC9B  F032         	call	_ReceiveEvt	;wreg free
 27682  002AB4  0900               	iorlw	0
 27683  002AB6  B4D8               	btfsc	status,2,c
 27684  002AB8  0012               	return	
 27685                           
 27686                           ;mdm_gsm_gprs.c: 596: {
 27687                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 27688  002ABA  0E01               	movlw	1
 27689  002ABC  0101               	movlb	1	; () banked
 27690  002ABE  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27691                           
 27692                           ; BSR set to: 1
 27693                           ;mdm_gsm_gprs.c: 599: }
 27694                           ;mdm_gsm_gprs.c: 600: break;
 27695  002AC0  0012               	return	
 27696  002AC2                     
 27697                           ; BSR set to: 1
 27698                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 27699                           
 27700                           ; BSR set to: 1
 27701  002AC2  0EC2               	movlw	low STR_4
 27702  002AC4  0100               	movlb	0	; () banked
 27703  002AC6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27704  002AC8  0EFF               	movlw	high STR_4
 27705  002ACA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27706  002ACC  0E01               	movlw	1
 27707  002ACE  EC52  F030         	call	_Uart_WriteConstString
 27708                           
 27709                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 27710  002AD2  0E02               	movlw	2
 27711  002AD4  0101               	movlb	1	; () banked
 27712  002AD6  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27713                           
 27714                           ;mdm_gsm_gprs.c: 607: break;
 27715  002AD8  0012               	return	
 27716  002ADA                     
 27717                           ; BSR set to: 1
 27718                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 27719                           
 27720                           ; BSR set to: 1
 27721  002ADA  0E3A               	movlw	low _NewStringReceived
 27722  002ADC  0100               	movlb	0	; () banked
 27723  002ADE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27724  002AE0  0E00               	movlw	high _NewStringReceived
 27725  002AE2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27726  002AE4  EC9B  F032         	call	_ReceiveEvt	;wreg free
 27727  002AE8  0900               	iorlw	0
 27728  002AEA  B4D8               	btfsc	status,2,c
 27729  002AEC  0012               	return	
 27730                           
 27731                           ;mdm_gsm_gprs.c: 612: {
 27732                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 27733  002AEE  CC58  FFE8         	movff	_RxBuffer,wreg
 27734  002AF2  0A2B               	xorlw	43
 27735  002AF4  A4D8               	btfss	status,2,c
 27736  002AF6  0012               	return	
 27737  002AF8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27738  002AFC  0A43               	xorlw	67
 27739  002AFE  A4D8               	btfss	status,2,c
 27740  002B00  0012               	return	
 27741  002B02  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 27742  002B06  0A4D               	xorlw	77
 27743  002B08  A4D8               	btfss	status,2,c
 27744  002B0A  0012               	return	
 27745                           
 27746                           ;mdm_gsm_gprs.c: 614: {
 27747                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 27748  002B0C  0E00               	movlw	low _Mdm_SmsRx
 27749  002B0E  0100               	movlb	0	; () banked
 27750  002B10  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27751  002B12  0E07               	movlw	high _Mdm_SmsRx
 27752  002B14  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27753  002B16  0E00               	movlw	0
 27754  002B18  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27755  002B1A  0E50               	movlw	80
 27756  002B1C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27757  002B1E  ECBD  F031         	call	_ClearBuffer	;wreg free
 27758                           
 27759                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 27760  002B22  0E58               	movlw	low _RxBuffer
 27761  002B24  0100               	movlb	0	; () banked
 27762  002B26  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27763  002B28  0E0C               	movlw	high _RxBuffer
 27764  002B2A  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27765  002B2C  0E00               	movlw	low _Mdm_SmsRx
 27766  002B2E  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27767  002B30  0E07               	movlw	high _Mdm_SmsRx
 27768  002B32  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27769  002B34  C0C2  F089         	movff	_RxLen,StringCopy@Len
 27770  002B38  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 27771  002B3C  EC6C  F02B         	call	_StringCopy	;wreg free
 27772                           
 27773                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 27774  002B40  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 27775                           
 27776                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 27777  002B44  0E03               	movlw	3
 27778  002B46  0101               	movlb	1	; () banked
 27779  002B48  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27780                           
 27781                           ; BSR set to: 1
 27782                           ;mdm_gsm_gprs.c: 622: }
 27783                           ;mdm_gsm_gprs.c: 623: }
 27784                           ;mdm_gsm_gprs.c: 624: break;
 27785                           
 27786                           ; BSR set to: 1
 27787  002B4A  0012               	return	
 27788  002B4C                     
 27789                           ; BSR set to: 1
 27790                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 27791                           
 27792                           ; BSR set to: 1
 27793  002B4C  0E3A               	movlw	low _NewStringReceived
 27794  002B4E  0100               	movlb	0	; () banked
 27795  002B50  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27796  002B52  0E00               	movlw	high _NewStringReceived
 27797  002B54  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27798  002B56  EC9B  F032         	call	_ReceiveEvt	;wreg free
 27799  002B5A  0900               	iorlw	0
 27800  002B5C  B4D8               	btfsc	status,2,c
 27801  002B5E  0012               	return	
 27802                           
 27803                           ;mdm_gsm_gprs.c: 629: {
 27804                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 27805  002B60  0E50               	movlw	low (_Mdm_SmsRx+80)
 27806  002B62  0100               	movlb	0	; () banked
 27807  002B64  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27808  002B66  0E07               	movlw	high (_Mdm_SmsRx+80)
 27809  002B68  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27810  002B6A  0E00               	movlw	0
 27811  002B6C  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27812  002B6E  0E14               	movlw	20
 27813  002B70  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27814  002B72  ECBD  F031         	call	_ClearBuffer	;wreg free
 27815                           
 27816                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 27817  002B76  0E58               	movlw	low _RxBuffer
 27818  002B78  0100               	movlb	0	; () banked
 27819  002B7A  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27820  002B7C  0E0C               	movlw	high _RxBuffer
 27821  002B7E  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27822  002B80  0E50               	movlw	low (_Mdm_SmsRx+80)
 27823  002B82  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27824  002B84  0E07               	movlw	high (_Mdm_SmsRx+80)
 27825  002B86  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27826  002B88  C0C2  F089         	movff	_RxLen,StringCopy@Len
 27827  002B8C  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 27828  002B90  EC6C  F02B         	call	_StringCopy	;wreg free
 27829                           
 27830                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 27831  002B94  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 27832                           
 27833                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 27834  002B98  0E00               	movlw	0
 27835  002B9A  0101               	movlb	1	; () banked
 27836  002B9C  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27837                           
 27838                           ; BSR set to: 1
 27839                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 27840  002B9E  0EDC               	movlw	low _SmsTxtReady
 27841  002BA0  0100               	movlb	0	; () banked
 27842  002BA2  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27843  002BA4  0E00               	movlw	high _SmsTxtReady
 27844  002BA6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27845  002BA8  EC8C  F034         	call	_GenerateEvt	;wreg free
 27846                           
 27847                           ;mdm_gsm_gprs.c: 644: }
 27848                           
 27849                           ;mdm_gsm_gprs.c: 643: break;
 27850                           
 27851                           ;mdm_gsm_gprs.c: 642: default:
 27852                           
 27853                           ;mdm_gsm_gprs.c: 639: }
 27854                           ;mdm_gsm_gprs.c: 640: break;
 27855  002BAC  0012               	return	
 27856  002BAE                     l1070:
 27857  002BAE  0101               	movlb	1	; () banked
 27858  002BB0  51F1               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 27859                           
 27860                           ; Switch size 1, requested type "space"
 27861                           ; Number of cases is 4, Range of values is 0 to 3
 27862                           ; switch strategies available:
 27863                           ; Name         Instructions Cycles
 27864                           ; simple_byte           13     7 (average)
 27865                           ;	Chosen strategy is simple_byte
 27866  002BB2  0A00               	xorlw	0	; case 0
 27867  002BB4  B4D8               	btfsc	status,2,c
 27868  002BB6  D777               	goto	l1071
 27869  002BB8  0A01               	xorlw	1	; case 1
 27870  002BBA  B4D8               	btfsc	status,2,c
 27871  002BBC  D782               	goto	l1074
 27872  002BBE  0A03               	xorlw	3	; case 2
 27873  002BC0  B4D8               	btfsc	status,2,c
 27874  002BC2  D78B               	goto	l1075
 27875  002BC4  0A01               	xorlw	1	; case 3
 27876  002BC6  A4D8               	btfss	status,2,c
 27877                           
 27878                           ; BSR set to: 1
 27879  002BC8  0012               	return	
 27880  002BCA  D7C0               	goto	l1078
 27881  002BCC                     __end_of_GetSmsSm:
 27882                           	opt stack 0
 27883                           tosu	equ	0xFFF
 27884                           tosh	equ	0xFFE
 27885                           tosl	equ	0xFFD
 27886                           pclath	equ	0xFFA
 27887                           tblptru	equ	0xFF8
 27888                           tblptrh	equ	0xFF7
 27889                           tblptrl	equ	0xFF6
 27890                           tablat	equ	0xFF5
 27891                           prodh	equ	0xFF4
 27892                           prodl	equ	0xFF3
 27893                           intcon	equ	0xFF2
 27894                           intcon2	equ	0xFF1
 27895                           intcon3	equ	0xFF0
 27896                           indf0	equ	0xFEF
 27897                           postinc0	equ	0xFEE
 27898                           plusw0	equ	0xFEB
 27899                           fsr0h	equ	0xFEA
 27900                           fsr0l	equ	0xFE9
 27901                           wreg	equ	0xFE8
 27902                           indf1	equ	0xFE7
 27903                           postinc1	equ	0xFE6
 27904                           postdec1	equ	0xFE5
 27905                           plusw1	equ	0xFE3
 27906                           fsr1h	equ	0xFE2
 27907                           fsr1l	equ	0xFE1
 27908                           indf2	equ	0xFDF
 27909                           postinc2	equ	0xFDE
 27910                           postdec2	equ	0xFDD
 27911                           plusw2	equ	0xFDB
 27912                           fsr2h	equ	0xFDA
 27913                           fsr2l	equ	0xFD9
 27914                           status	equ	0xFD8
 27915                           
 27916 ;; *************** function _ConfigureModem *****************
 27917 ;; Defined at:
 27918 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27919 ;; Parameters:    Size  Location     Type
 27920 ;;		None
 27921 ;; Auto vars:     Size  Location     Type
 27922 ;;		None
 27923 ;; Return value:  Size  Location     Type
 27924 ;;                  1    wreg      void 
 27925 ;; Registers used:
 27926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27927 ;; Tracked objects:
 27928 ;;		On entry : 0/0
 27929 ;;		On exit  : 0/0
 27930 ;;		Unchanged: 0/0
 27931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27936 ;;Total ram usage:        0 bytes
 27937 ;; Hardware stack levels used:    1
 27938 ;; Hardware stack levels required when called:   14
 27939 ;; This function calls:
 27940 ;;		_GenerateEvt
 27941 ;;		_UartSetConfigLow
 27942 ;;		_Uart_InitUartModule
 27943 ;;		_Uart_WriteConstString
 27944 ;; This function is called by:
 27945 ;;		_Mdm_MainTask
 27946 ;; This function uses a non-reentrant model
 27947 ;;
 27948                           
 27949                           	psect	text134
 27950  00386E                     __ptext134:
 27951                           	opt stack 0
 27952  00386E                     _ConfigureModem:
 27953                           	opt stack 13
 27954                           
 27955                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 27956                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 27957                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 27958                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 27959                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 27960                           
 27961                           ;incstack = 0
 27962  00386E  D056               	goto	l1027
 27963  003870                     
 27964                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 27965  003870  0E02               	movlw	2
 27966  003872  0100               	movlb	0	; () banked
 27967  003874  19D2               	xorwf	_MdmStatus& (0+255),w,b
 27968  003876  A4D8               	btfss	status,2,c
 27969  003878  0012               	return	
 27970                           
 27971                           ; BSR set to: 0
 27972                           ;mdm_gsm_gprs.c: 431: {
 27973                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 27974  00387A  0E01               	movlw	1
 27975  00387C  0101               	movlb	1	; () banked
 27976  00387E  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27977                           
 27978                           ; BSR set to: 1
 27979                           ;mdm_gsm_gprs.c: 434: }
 27980                           ;mdm_gsm_gprs.c: 435: break;
 27981  003880  0012               	return	
 27982  003882                     
 27983                           ; BSR set to: 1
 27984                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 27985                           
 27986                           ; BSR set to: 1
 27987  003882  0E75               	movlw	low STR_2
 27988  003884  0100               	movlb	0	; () banked
 27989  003886  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27990  003888  0EFF               	movlw	high STR_2
 27991  00388A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27992  00388C  0E01               	movlw	1
 27993  00388E  EC52  F030         	call	_Uart_WriteConstString
 27994                           
 27995                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 27996  003892  EC81  F02C         	call	_UartSetConfigLow	;wreg free
 27997                           
 27998                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 27999  003896  0E1A               	movlw	low _UartConfig
 28000  003898  0100               	movlb	0	; () banked
 28001  00389A  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 28002  00389C  0E03               	movlw	high _UartConfig
 28003  00389E  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 28004  0038A0  0E01               	movlw	1
 28005  0038A2  EC5E  F005         	call	_Uart_InitUartModule
 28006                           
 28007                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28008  0038A6  0E03               	movlw	3
 28009  0038A8  0102               	movlb	2	; () banked
 28010  0038AA  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28011  0038AC  0EE8               	movlw	232
 28012  0038AE  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28013                           
 28014                           ; BSR set to: 2
 28015                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 28016  0038B0  0E02               	movlw	2
 28017  0038B2  0101               	movlb	1	; () banked
 28018  0038B4  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 28019                           
 28020                           ; BSR set to: 1
 28021                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 28022  0038B6  0E04               	movlw	4
 28023  0038B8  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28024                           
 28025                           ;mdm_gsm_gprs.c: 449: break;
 28026  0038BA  0012               	return	
 28027  0038BC                     
 28028                           ; BSR set to: 1
 28029                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 28030                           
 28031                           ; BSR set to: 1
 28032  0038BC  0EDF               	movlw	low STR_3
 28033  0038BE  0100               	movlb	0	; () banked
 28034  0038C0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28035  0038C2  0EFF               	movlw	high STR_3
 28036  0038C4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28037  0038C6  0E01               	movlw	1
 28038  0038C8  EC52  F030         	call	_Uart_WriteConstString
 28039                           
 28040                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28041  0038CC  0E03               	movlw	3
 28042  0038CE  0102               	movlb	2	; () banked
 28043  0038D0  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28044  0038D2  0EE8               	movlw	232
 28045  0038D4  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28046                           
 28047                           ; BSR set to: 2
 28048                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 28049  0038D6  0E05               	movlw	5
 28050  0038D8  0101               	movlb	1	; () banked
 28051  0038DA  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 28052                           
 28053                           ; BSR set to: 1
 28054                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 28055  0038DC  0E04               	movlw	4
 28056  0038DE  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28057                           
 28058                           ;mdm_gsm_gprs.c: 459: break;
 28059  0038E0  0012               	return	
 28060  0038E2                     
 28061                           ; BSR set to: 1
 28062                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 28063                           
 28064                           ; BSR set to: 1
 28065  0038E2  0102               	movlb	2	; () banked
 28066  0038E4  4BD8               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 28067  0038E6  2BD9               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 28068                           
 28069                           ; BSR set to: 2
 28070                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 28071  0038E8  51DA               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 28072  0038EA  5DD8               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 28073  0038EC  51DB               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 28074  0038EE  59D9               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 28075  0038F0  A0D8               	btfss	status,0,c
 28076  0038F2  0012               	return	
 28077                           
 28078                           ; BSR set to: 2
 28079                           ;mdm_gsm_gprs.c: 466: {
 28080                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 28081  0038F4  0E00               	movlw	0
 28082  0038F6  6FD9               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 28083  0038F8  0E00               	movlw	0
 28084  0038FA  6FD8               	movwf	ConfigureModem@DelayCounter& (0+255),b
 28085                           
 28086                           ; BSR set to: 2
 28087                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 28088  0038FC  C1F2  F1F3         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 28089                           
 28090                           ; BSR set to: 2
 28091                           ;mdm_gsm_gprs.c: 471: }
 28092                           ;mdm_gsm_gprs.c: 472: break;
 28093  003900  0012               	return	
 28094  003902                     
 28095                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 28096                           
 28097                           ; BSR set to: 2
 28098  003902  0E03               	movlw	3
 28099  003904  0100               	movlb	0	; () banked
 28100  003906  6FD2               	movwf	_MdmStatus& (0+255),b
 28101                           
 28102                           ; BSR set to: 0
 28103                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 28104  003908  0E37               	movlw	low _MdmStsReady
 28105  00390A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28106  00390C  0E00               	movlw	high _MdmStsReady
 28107  00390E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28108  003910  EC8C  F034         	call	_GenerateEvt	;wreg free
 28109                           
 28110                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 28111  003914  0E06               	movlw	6
 28112  003916  0101               	movlb	1	; () banked
 28113  003918  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28114                           
 28115                           ; BSR set to: 1
 28116                           ;mdm_gsm_gprs.c: 488: }
 28117                           
 28118                           ; BSR set to: 1
 28119                           ;mdm_gsm_gprs.c: 487: break;
 28120                           
 28121                           ;mdm_gsm_gprs.c: 486: default:
 28122                           
 28123                           ; BSR set to: 1
 28124                           ;mdm_gsm_gprs.c: 484: break;
 28125                           
 28126                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 28127                           
 28128                           ;mdm_gsm_gprs.c: 481: break;
 28129  00391A  0012               	return	
 28130  00391C                     l1027:
 28131                           
 28132                           ; BSR set to: 1
 28133  00391C  0101               	movlb	1	; () banked
 28134  00391E  51F3               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 28135                           
 28136                           ; Switch size 1, requested type "space"
 28137                           ; Number of cases is 6, Range of values is 0 to 6
 28138                           ; switch strategies available:
 28139                           ; Name         Instructions Cycles
 28140                           ; simple_byte           19    10 (average)
 28141                           ;	Chosen strategy is simple_byte
 28142  003920  0A00               	xorlw	0	; case 0
 28143  003922  B4D8               	btfsc	status,2,c
 28144  003924  D7A5               	goto	l1028
 28145  003926  0A01               	xorlw	1	; case 1
 28146  003928  B4D8               	btfsc	status,2,c
 28147  00392A  D7AB               	goto	l1031
 28148  00392C  0A03               	xorlw	3	; case 2
 28149  00392E  B4D8               	btfsc	status,2,c
 28150  003930  D7C5               	goto	l1032
 28151  003932  0A06               	xorlw	6	; case 4
 28152  003934  B4D8               	btfsc	status,2,c
 28153  003936  D7D5               	goto	l1033
 28154  003938  0A01               	xorlw	1	; case 5
 28155  00393A  B4D8               	btfsc	status,2,c
 28156  00393C  D7E2               	goto	l1035
 28157  00393E  0A03               	xorlw	3	; case 6
 28158  003940  0012               	return	
 28159  003942                     __end_of_ConfigureModem:
 28160                           	opt stack 0
 28161                           tosu	equ	0xFFF
 28162                           tosh	equ	0xFFE
 28163                           tosl	equ	0xFFD
 28164                           pclath	equ	0xFFA
 28165                           tblptru	equ	0xFF8
 28166                           tblptrh	equ	0xFF7
 28167                           tblptrl	equ	0xFF6
 28168                           tablat	equ	0xFF5
 28169                           prodh	equ	0xFF4
 28170                           prodl	equ	0xFF3
 28171                           intcon	equ	0xFF2
 28172                           intcon2	equ	0xFF1
 28173                           intcon3	equ	0xFF0
 28174                           indf0	equ	0xFEF
 28175                           postinc0	equ	0xFEE
 28176                           plusw0	equ	0xFEB
 28177                           fsr0h	equ	0xFEA
 28178                           fsr0l	equ	0xFE9
 28179                           wreg	equ	0xFE8
 28180                           indf1	equ	0xFE7
 28181                           postinc1	equ	0xFE6
 28182                           postdec1	equ	0xFE5
 28183                           plusw1	equ	0xFE3
 28184                           fsr1h	equ	0xFE2
 28185                           fsr1l	equ	0xFE1
 28186                           indf2	equ	0xFDF
 28187                           postinc2	equ	0xFDE
 28188                           postdec2	equ	0xFDD
 28189                           plusw2	equ	0xFDB
 28190                           fsr2h	equ	0xFDA
 28191                           fsr2l	equ	0xFD9
 28192                           status	equ	0xFD8
 28193                           
 28194 ;; *************** function _Uart_InitUartModule *****************
 28195 ;; Defined at:
 28196 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28197 ;; Parameters:    Size  Location     Type
 28198 ;;  Module          1    wreg     unsigned char 
 28199 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 28200 ;;		 -> UartConfig(21), 
 28201 ;; Auto vars:     Size  Location     Type
 28202 ;;  Module          1   65[BANK0 ] unsigned char 
 28203 ;; Return value:  Size  Location     Type
 28204 ;;                  1    wreg      void 
 28205 ;; Registers used:
 28206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28207 ;; Tracked objects:
 28208 ;;		On entry : 0/0
 28209 ;;		On exit  : 0/0
 28210 ;;		Unchanged: 0/0
 28211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28214 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28215 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28216 ;;Total ram usage:        5 bytes
 28217 ;; Hardware stack levels used:    1
 28218 ;; Hardware stack levels required when called:   13
 28219 ;; This function calls:
 28220 ;;		_SetUartBaudRate
 28221 ;; This function is called by:
 28222 ;;		_ConfigureModem
 28223 ;;		_Mdm_MainTask
 28224 ;; This function uses a non-reentrant model
 28225 ;;
 28226                           
 28227                           	psect	text135
 28228  000ABC                     __ptext135:
 28229                           	opt stack 0
 28230  000ABC                     _Uart_InitUartModule:
 28231                           	opt stack 14
 28232                           
 28233                           ;incstack = 0
 28234                           ;Uart_InitUartModule@Module stored from wreg
 28235  000ABC  0100               	movlb	0	; () banked
 28236  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 28237                           
 28238                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 28239  000AC0  0100               	movlb	0	; () banked
 28240  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 28241  000AC4  A4D8               	btfss	status,2,c
 28242  000AC6  D0BE               	goto	l668
 28243                           
 28244                           ; BSR set to: 0
 28245                           ;uart_drv.c: 291: {
 28246                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 28247  000AC8  9C94               	bcf	3988,6,c	;volatile
 28248                           
 28249                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 28250  000ACA  8E94               	bsf	3988,7,c	;volatile
 28251                           
 28252                           ; BSR set to: 0
 28253                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 28254  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28255  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28256  000AD4  0E01               	movlw	1
 28257  000AD6  ECB1  F014         	call	_SetUartBaudRate
 28258                           
 28259                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 28260  000ADA  0E00               	movlw	0
 28261  000ADC  6EAD               	movwf	4013,c	;volatile
 28262                           
 28263                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28264  000ADE  0100               	movlb	0	; () banked
 28265  000AE0  EE20 F004          	lfsr	2,4
 28266  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28267  000AE6  26D9               	addwf	fsr2l,f,c
 28268  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28269  000AEA  22DA               	addwfc	fsr2h,f,c
 28270  000AEC  50DF               	movf	indf2,w,c
 28271  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28272  000AF0  0E06               	movlw	6
 28273  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28274  000AF4                     u13485:
 28275  000AF4  90D8               	bcf	status,0,c
 28276  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28277  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28278  000AFA  D7FC               	goto	u13485
 28279  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28280  000AFE  12AD               	iorwf	4013,f,c	;volatile
 28281                           
 28282                           ; BSR set to: 0
 28283                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28284  000B00  EE20 F006          	lfsr	2,6
 28285  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28286  000B06  26D9               	addwf	fsr2l,f,c
 28287  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28288  000B0A  22DA               	addwfc	fsr2h,f,c
 28289  000B0C  50DF               	movf	indf2,w,c
 28290  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28291  000B10  0E05               	movlw	5
 28292  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28293  000B14                     u13495:
 28294  000B14  90D8               	bcf	status,0,c
 28295  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28296  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28297  000B1A  D7FC               	goto	u13495
 28298  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28299  000B1E  12AD               	iorwf	4013,f,c	;volatile
 28300                           
 28301                           ; BSR set to: 0
 28302                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 28303  000B20  EE20 F001          	lfsr	2,1
 28304  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28305  000B26  26D9               	addwf	fsr2l,f,c
 28306  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28307  000B2A  22DA               	addwfc	fsr2h,f,c
 28308  000B2C  50DF               	movf	indf2,w,c
 28309  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28310  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28311  000B32  0BF0               	andlw	240
 28312  000B34  12AD               	iorwf	4013,f,c	;volatile
 28313                           
 28314                           ; BSR set to: 0
 28315                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28316  000B36  EE20 F008          	lfsr	2,8
 28317  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28318  000B3C  26D9               	addwf	fsr2l,f,c
 28319  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28320  000B40  22DA               	addwfc	fsr2h,f,c
 28321  000B42  50DF               	movf	indf2,w,c
 28322  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28323  000B46  90D8               	bcf	status,0,c
 28324  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28325  000B4A  90D8               	bcf	status,0,c
 28326  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28327  000B4E  90D8               	bcf	status,0,c
 28328  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28329  000B52  12AD               	iorwf	4013,f,c	;volatile
 28330                           
 28331                           ; BSR set to: 0
 28332                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28333  000B54  EE20 F003          	lfsr	2,3
 28334  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28335  000B5A  26D9               	addwf	fsr2l,f,c
 28336  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28337  000B5E  22DA               	addwfc	fsr2h,f,c
 28338  000B60  50DF               	movf	indf2,w,c
 28339  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28340  000B64  90D8               	bcf	status,0,c
 28341  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28342  000B68  90D8               	bcf	status,0,c
 28343  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28344  000B6C  12AD               	iorwf	4013,f,c	;volatile
 28345                           
 28346                           ; BSR set to: 0
 28347                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 28348  000B6E  0E00               	movlw	0
 28349  000B70  6EAC               	movwf	4012,c	;volatile
 28350                           
 28351                           ; BSR set to: 0
 28352                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28353  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28354  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28355  000B7A  50DF               	movf	indf2,w,c
 28356  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28357  000B7E  0E00               	movlw	0
 28358  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28359  000B82  0E80               	movlw	128
 28360  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28361  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28362  000B88  12AC               	iorwf	4012,f,c	;volatile
 28363                           
 28364                           ; BSR set to: 0
 28365                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28366  000B8A  EE20 F005          	lfsr	2,5
 28367  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28368  000B90  26D9               	addwf	fsr2l,f,c
 28369  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28370  000B94  22DA               	addwfc	fsr2h,f,c
 28371  000B96  50DF               	movf	indf2,w,c
 28372  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28373  000B9A  0E06               	movlw	6
 28374  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28375  000B9E                     u13505:
 28376  000B9E  90D8               	bcf	status,0,c
 28377  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28378  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28379  000BA4  D7FC               	goto	u13505
 28380  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28381  000BA8  12AC               	iorwf	4012,f,c	;volatile
 28382                           
 28383                           ; BSR set to: 0
 28384                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28385  000BAA  EE20 F007          	lfsr	2,7
 28386  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28387  000BB0  26D9               	addwf	fsr2l,f,c
 28388  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28389  000BB4  22DA               	addwfc	fsr2h,f,c
 28390  000BB6  50DF               	movf	indf2,w,c
 28391  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28392  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28393  000BBC  0BF0               	andlw	240
 28394  000BBE  12AC               	iorwf	4012,f,c	;volatile
 28395                           
 28396                           ; BSR set to: 0
 28397                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 28398  000BC0  0E00               	movlw	0
 28399  000BC2  6E7E               	movwf	3966,c	;volatile
 28400                           
 28401                           ; BSR set to: 0
 28402                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28403  000BC4  EE20 F002          	lfsr	2,2
 28404  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28405  000BCA  26D9               	addwf	fsr2l,f,c
 28406  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28407  000BCE  22DA               	addwfc	fsr2h,f,c
 28408  000BD0  50DF               	movf	indf2,w,c
 28409  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28410  000BD4  90D8               	bcf	status,0,c
 28411  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28412  000BD8  90D8               	bcf	status,0,c
 28413  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28414  000BDC  90D8               	bcf	status,0,c
 28415  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28416  000BE0  127E               	iorwf	3966,f,c	;volatile
 28417                           
 28418                           ; BSR set to: 0
 28419                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28420  000BE2  EE20 F00A          	lfsr	2,10
 28421  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28422  000BE8  26D9               	addwf	fsr2l,f,c
 28423  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28424  000BEC  22DA               	addwfc	fsr2h,f,c
 28425  000BEE  50DF               	movf	indf2,w,c
 28426  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28427  000BF2  90D8               	bcf	status,0,c
 28428  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28429  000BF6  127E               	iorwf	3966,f,c	;volatile
 28430                           
 28431                           ; BSR set to: 0
 28432                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 28433  000BF8  EE20 F009          	lfsr	2,9
 28434  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28435  000BFE  26D9               	addwf	fsr2l,f,c
 28436  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28437  000C02  22DA               	addwfc	fsr2h,f,c
 28438  000C04  50DF               	movf	indf2,w,c
 28439  000C06  127E               	iorwf	3966,f,c	;volatile
 28440                           
 28441                           ; BSR set to: 0
 28442                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 28443  000C08  EE20 F00B          	lfsr	2,11
 28444  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28445  000C0E  26D9               	addwf	fsr2l,f,c
 28446  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28447  000C12  22DA               	addwfc	fsr2h,f,c
 28448  000C14  50DF               	movf	indf2,w,c
 28449  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28450  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28451  000C1A  509D               	movf	3997,w,c	;volatile
 28452  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28453  000C1E  0BEF               	andlw	-17
 28454  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28455  000C22  6E9D               	movwf	3997,c	;volatile
 28456                           
 28457                           ; BSR set to: 0
 28458                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 28459  000C24  EE20 F00C          	lfsr	2,12
 28460  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28461  000C2A  26D9               	addwf	fsr2l,f,c
 28462  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28463  000C2E  22DA               	addwfc	fsr2h,f,c
 28464  000C30  50DF               	movf	indf2,w,c
 28465  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28466  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28467  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 28468  000C38  509D               	movf	3997,w,c	;volatile
 28469  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28470  000C3C  0BDF               	andlw	-33
 28471  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28472  000C40  6E9D               	movwf	3997,c	;volatile
 28473                           
 28474                           ;uart_drv.c: 326: }
 28475  000C42  0012               	return	
 28476  000C44                     l668:
 28477                           
 28478                           ; BSR set to: 0
 28479                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 28480                           
 28481                           ; BSR set to: 0
 28482  000C44  0E02               	movlw	2
 28483  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 28484  000C48  A4D8               	btfss	status,2,c
 28485  000C4A  0012               	return	
 28486                           
 28487                           ; BSR set to: 0
 28488                           ;uart_drv.c: 328: {
 28489                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 28490  000C4C  9094               	bcf	3988,0,c	;volatile
 28491                           
 28492                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 28493  000C4E  8294               	bsf	3988,1,c	;volatile
 28494                           
 28495                           ; BSR set to: 0
 28496                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 28497  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28498  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28499  000C58  0E02               	movlw	2
 28500  000C5A  ECB1  F014         	call	_SetUartBaudRate
 28501                           
 28502                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 28503  000C5E  0E00               	movlw	0
 28504  000C60  6EA8               	movwf	4008,c	;volatile
 28505                           
 28506                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28507  000C62  0100               	movlb	0	; () banked
 28508  000C64  EE20 F004          	lfsr	2,4
 28509  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28510  000C6A  26D9               	addwf	fsr2l,f,c
 28511  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28512  000C6E  22DA               	addwfc	fsr2h,f,c
 28513  000C70  50DF               	movf	indf2,w,c
 28514  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28515  000C74  0E06               	movlw	6
 28516  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28517  000C78                     u13525:
 28518  000C78  90D8               	bcf	status,0,c
 28519  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28520  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28521  000C7E  D7FC               	goto	u13525
 28522  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28523  000C82  12A8               	iorwf	4008,f,c	;volatile
 28524                           
 28525                           ; BSR set to: 0
 28526                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28527  000C84  EE20 F006          	lfsr	2,6
 28528  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28529  000C8A  26D9               	addwf	fsr2l,f,c
 28530  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28531  000C8E  22DA               	addwfc	fsr2h,f,c
 28532  000C90  50DF               	movf	indf2,w,c
 28533  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28534  000C94  0E05               	movlw	5
 28535  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28536  000C98                     u13535:
 28537  000C98  90D8               	bcf	status,0,c
 28538  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28539  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28540  000C9E  D7FC               	goto	u13535
 28541  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28542  000CA2  12A8               	iorwf	4008,f,c	;volatile
 28543                           
 28544                           ; BSR set to: 0
 28545                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 28546  000CA4  EE20 F001          	lfsr	2,1
 28547  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28548  000CAA  26D9               	addwf	fsr2l,f,c
 28549  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28550  000CAE  22DA               	addwfc	fsr2h,f,c
 28551  000CB0  50DF               	movf	indf2,w,c
 28552  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28553  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28554  000CB6  0BF0               	andlw	240
 28555  000CB8  12A8               	iorwf	4008,f,c	;volatile
 28556                           
 28557                           ; BSR set to: 0
 28558                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28559  000CBA  EE20 F008          	lfsr	2,8
 28560  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28561  000CC0  26D9               	addwf	fsr2l,f,c
 28562  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28563  000CC4  22DA               	addwfc	fsr2h,f,c
 28564  000CC6  50DF               	movf	indf2,w,c
 28565  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28566  000CCA  90D8               	bcf	status,0,c
 28567  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28568  000CCE  90D8               	bcf	status,0,c
 28569  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28570  000CD2  90D8               	bcf	status,0,c
 28571  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28572  000CD6  12A8               	iorwf	4008,f,c	;volatile
 28573                           
 28574                           ; BSR set to: 0
 28575                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28576  000CD8  EE20 F003          	lfsr	2,3
 28577  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28578  000CDE  26D9               	addwf	fsr2l,f,c
 28579  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28580  000CE2  22DA               	addwfc	fsr2h,f,c
 28581  000CE4  50DF               	movf	indf2,w,c
 28582  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28583  000CE8  90D8               	bcf	status,0,c
 28584  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28585  000CEC  90D8               	bcf	status,0,c
 28586  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28587  000CF0  12A8               	iorwf	4008,f,c	;volatile
 28588                           
 28589                           ; BSR set to: 0
 28590                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 28591  000CF2  0E00               	movlw	0
 28592  000CF4  6E9C               	movwf	3996,c	;volatile
 28593                           
 28594                           ; BSR set to: 0
 28595                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28596  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28597  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28598  000CFE  50DF               	movf	indf2,w,c
 28599  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28600  000D02  0E00               	movlw	0
 28601  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28602  000D06  0E80               	movlw	128
 28603  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28604  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28605  000D0C  129C               	iorwf	3996,f,c	;volatile
 28606                           
 28607                           ; BSR set to: 0
 28608                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28609  000D0E  EE20 F005          	lfsr	2,5
 28610  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28611  000D14  26D9               	addwf	fsr2l,f,c
 28612  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28613  000D18  22DA               	addwfc	fsr2h,f,c
 28614  000D1A  50DF               	movf	indf2,w,c
 28615  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28616  000D1E  0E06               	movlw	6
 28617  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28618  000D22                     u13545:
 28619  000D22  90D8               	bcf	status,0,c
 28620  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28621  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28622  000D28  D7FC               	goto	u13545
 28623  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28624  000D2C  129C               	iorwf	3996,f,c	;volatile
 28625                           
 28626                           ; BSR set to: 0
 28627                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28628  000D2E  EE20 F007          	lfsr	2,7
 28629  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28630  000D34  26D9               	addwf	fsr2l,f,c
 28631  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28632  000D38  22DA               	addwfc	fsr2h,f,c
 28633  000D3A  50DF               	movf	indf2,w,c
 28634  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28635  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28636  000D40  0BF0               	andlw	240
 28637  000D42  129C               	iorwf	3996,f,c	;volatile
 28638                           
 28639                           ; BSR set to: 0
 28640                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 28641  000D44  0E00               	movlw	0
 28642  000D46  6E7C               	movwf	3964,c	;volatile
 28643                           
 28644                           ; BSR set to: 0
 28645                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28646  000D48  EE20 F002          	lfsr	2,2
 28647  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28648  000D4E  26D9               	addwf	fsr2l,f,c
 28649  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28650  000D52  22DA               	addwfc	fsr2h,f,c
 28651  000D54  50DF               	movf	indf2,w,c
 28652  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28653  000D58  90D8               	bcf	status,0,c
 28654  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28655  000D5C  90D8               	bcf	status,0,c
 28656  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28657  000D60  90D8               	bcf	status,0,c
 28658  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28659  000D64  127C               	iorwf	3964,f,c	;volatile
 28660                           
 28661                           ; BSR set to: 0
 28662                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28663  000D66  EE20 F00A          	lfsr	2,10
 28664  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28665  000D6C  26D9               	addwf	fsr2l,f,c
 28666  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28667  000D70  22DA               	addwfc	fsr2h,f,c
 28668  000D72  50DF               	movf	indf2,w,c
 28669  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28670  000D76  90D8               	bcf	status,0,c
 28671  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28672  000D7A  127C               	iorwf	3964,f,c	;volatile
 28673                           
 28674                           ; BSR set to: 0
 28675                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 28676  000D7C  EE20 F009          	lfsr	2,9
 28677  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28678  000D82  26D9               	addwf	fsr2l,f,c
 28679  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28680  000D86  22DA               	addwfc	fsr2h,f,c
 28681  000D88  50DF               	movf	indf2,w,c
 28682  000D8A  127C               	iorwf	3964,f,c	;volatile
 28683                           
 28684                           ; BSR set to: 0
 28685                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 28686  000D8C  EE20 F00B          	lfsr	2,11
 28687  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28688  000D92  26D9               	addwf	fsr2l,f,c
 28689  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28690  000D96  22DA               	addwfc	fsr2h,f,c
 28691  000D98  50DF               	movf	indf2,w,c
 28692  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28693  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28694  000D9E  50A3               	movf	4003,w,c	;volatile
 28695  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28696  000DA2  0BEF               	andlw	-17
 28697  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28698  000DA6  6EA3               	movwf	4003,c	;volatile
 28699                           
 28700                           ; BSR set to: 0
 28701                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 28702  000DA8  EE20 F00C          	lfsr	2,12
 28703  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28704  000DAE  26D9               	addwf	fsr2l,f,c
 28705  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28706  000DB2  22DA               	addwfc	fsr2h,f,c
 28707  000DB4  50DF               	movf	indf2,w,c
 28708  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28709  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28710  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 28711  000DBC  50A3               	movf	4003,w,c	;volatile
 28712  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28713  000DC0  0BDF               	andlw	-33
 28714  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28715  000DC4  6EA3               	movwf	4003,c	;volatile
 28716                           
 28717                           ; BSR set to: 0
 28718  000DC6  0012               	return	
 28719  000DC8                     __end_of_Uart_InitUartModule:
 28720                           	opt stack 0
 28721                           tosu	equ	0xFFF
 28722                           tosh	equ	0xFFE
 28723                           tosl	equ	0xFFD
 28724                           pclath	equ	0xFFA
 28725                           tblptru	equ	0xFF8
 28726                           tblptrh	equ	0xFF7
 28727                           tblptrl	equ	0xFF6
 28728                           tablat	equ	0xFF5
 28729                           prodh	equ	0xFF4
 28730                           prodl	equ	0xFF3
 28731                           intcon	equ	0xFF2
 28732                           intcon2	equ	0xFF1
 28733                           intcon3	equ	0xFF0
 28734                           indf0	equ	0xFEF
 28735                           postinc0	equ	0xFEE
 28736                           plusw0	equ	0xFEB
 28737                           fsr0h	equ	0xFEA
 28738                           fsr0l	equ	0xFE9
 28739                           wreg	equ	0xFE8
 28740                           indf1	equ	0xFE7
 28741                           postinc1	equ	0xFE6
 28742                           postdec1	equ	0xFE5
 28743                           plusw1	equ	0xFE3
 28744                           fsr1h	equ	0xFE2
 28745                           fsr1l	equ	0xFE1
 28746                           indf2	equ	0xFDF
 28747                           postinc2	equ	0xFDE
 28748                           postdec2	equ	0xFDD
 28749                           plusw2	equ	0xFDB
 28750                           fsr2h	equ	0xFDA
 28751                           fsr2l	equ	0xFD9
 28752                           status	equ	0xFD8
 28753                           
 28754 ;; *************** function _SetUartBaudRate *****************
 28755 ;; Defined at:
 28756 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28757 ;; Parameters:    Size  Location     Type
 28758 ;;  Module          1    wreg     unsigned char 
 28759 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 28760 ;;		 -> UartConfig(21), 
 28761 ;; Auto vars:     Size  Location     Type
 28762 ;;  Module          1   57[BANK0 ] unsigned char 
 28763 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 28764 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 28765 ;; Return value:  Size  Location     Type
 28766 ;;                  1    wreg      void 
 28767 ;; Registers used:
 28768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28769 ;; Tracked objects:
 28770 ;;		On entry : 0/0
 28771 ;;		On exit  : 0/0
 28772 ;;		Unchanged: 0/0
 28773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28774 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28775 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28776 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28777 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28778 ;;Total ram usage:        7 bytes
 28779 ;; Hardware stack levels used:    1
 28780 ;; Hardware stack levels required when called:   12
 28781 ;; This function calls:
 28782 ;;		___lldiv
 28783 ;;		___lmul
 28784 ;; This function is called by:
 28785 ;;		_Uart_InitUartModule
 28786 ;; This function uses a non-reentrant model
 28787 ;;
 28788                           
 28789                           	psect	text136
 28790  002962                     __ptext136:
 28791                           	opt stack 0
 28792  002962                     _SetUartBaudRate:
 28793                           	opt stack 14
 28794                           
 28795                           ; BSR set to: 0
 28796                           ;incstack = 0
 28797                           ;SetUartBaudRate@Module stored from wreg
 28798  002962  0100               	movlb	0	; () banked
 28799  002964  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 28800                           
 28801                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 28802  002966  0E00               	movlw	0
 28803  002968  0100               	movlb	0	; () banked
 28804  00296A  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 28805  00296C  0E00               	movlw	0
 28806  00296E  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 28807                           
 28808                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 28809  002970  0E00               	movlw	0
 28810  002972  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 28811                           
 28812                           ; BSR set to: 0
 28813                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 28814  002974  EE20 F002          	lfsr	2,2
 28815  002978  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28816  00297A  26D9               	addwf	fsr2l,f,c
 28817  00297C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28818  00297E  22DA               	addwfc	fsr2h,f,c
 28819  002980  50DF               	movf	indf2,w,c
 28820  002982  A4D8               	btfss	status,2,c
 28821  002984  D00B               	goto	l625
 28822                           
 28823                           ; BSR set to: 0
 28824  002986  EE20 F002          	lfsr	2,2
 28825  00298A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28826  00298C  26D9               	addwf	fsr2l,f,c
 28827  00298E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28828  002990  22DA               	addwfc	fsr2h,f,c
 28829  002992  50DF               	movf	indf2,w,c
 28830  002994  A4D8               	btfss	status,2,c
 28831  002996  D002               	goto	l625
 28832                           
 28833                           ; BSR set to: 0
 28834                           ;uart_drv.c: 128: {
 28835                           ;uart_drv.c: 129: DivisionFactor = 64;
 28836  002998  0E40               	movlw	64
 28837  00299A  D039               	goto	L56
 28838  00299C                     l625:
 28839                           
 28840                           ; BSR set to: 0
 28841                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 28842                           
 28843                           ; BSR set to: 0
 28844  00299C  EE20 F002          	lfsr	2,2
 28845  0029A0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28846  0029A2  26D9               	addwf	fsr2l,f,c
 28847  0029A4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28848  0029A6  22DA               	addwfc	fsr2h,f,c
 28849  0029A8  04DE               	decf	postinc2,w,c
 28850  0029AA  A4D8               	btfss	status,2,c
 28851  0029AC  D009               	goto	l627
 28852                           
 28853                           ; BSR set to: 0
 28854  0029AE  EE20 F002          	lfsr	2,2
 28855  0029B2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28856  0029B4  26D9               	addwf	fsr2l,f,c
 28857  0029B6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28858  0029B8  22DA               	addwfc	fsr2h,f,c
 28859  0029BA  50DF               	movf	indf2,w,c
 28860  0029BC  B4D8               	btfsc	status,2,c
 28861  0029BE  D012               	goto	u12570
 28862  0029C0                     l627:
 28863                           
 28864                           ; BSR set to: 0
 28865                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 28866                           
 28867                           ; BSR set to: 0
 28868  0029C0  EE20 F002          	lfsr	2,2
 28869  0029C4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28870  0029C6  26D9               	addwf	fsr2l,f,c
 28871  0029C8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28872  0029CA  22DA               	addwfc	fsr2h,f,c
 28873  0029CC  50DF               	movf	indf2,w,c
 28874  0029CE  A4D8               	btfss	status,2,c
 28875  0029D0  D00B               	goto	l629
 28876                           
 28877                           ; BSR set to: 0
 28878  0029D2  EE20 F002          	lfsr	2,2
 28879  0029D6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28880  0029D8  26D9               	addwf	fsr2l,f,c
 28881  0029DA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28882  0029DC  22DA               	addwfc	fsr2h,f,c
 28883  0029DE  04DE               	decf	postinc2,w,c
 28884  0029E0  A4D8               	btfss	status,2,c
 28885  0029E2  D002               	goto	l629
 28886  0029E4                     u12570:
 28887                           
 28888                           ; BSR set to: 0
 28889                           ;uart_drv.c: 136: {
 28890                           ;uart_drv.c: 137: DivisionFactor = 16;
 28891  0029E4  0E10               	movlw	16
 28892  0029E6  D013               	goto	L56
 28893  0029E8                     l629:
 28894                           
 28895                           ; BSR set to: 0
 28896                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 28897                           
 28898                           ; BSR set to: 0
 28899  0029E8  EE20 F002          	lfsr	2,2
 28900  0029EC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28901  0029EE  26D9               	addwf	fsr2l,f,c
 28902  0029F0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28903  0029F2  22DA               	addwfc	fsr2h,f,c
 28904  0029F4  04DE               	decf	postinc2,w,c
 28905  0029F6  A4D8               	btfss	status,2,c
 28906  0029F8  D00B               	goto	l631
 28907                           
 28908                           ; BSR set to: 0
 28909  0029FA  EE20 F002          	lfsr	2,2
 28910  0029FE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28911  002A00  26D9               	addwf	fsr2l,f,c
 28912  002A02  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28913  002A04  22DA               	addwfc	fsr2h,f,c
 28914  002A06  04DE               	decf	postinc2,w,c
 28915  002A08  A4D8               	btfss	status,2,c
 28916  002A0A  D002               	goto	l631
 28917                           
 28918                           ; BSR set to: 0
 28919                           ;uart_drv.c: 140: {
 28920                           ;uart_drv.c: 141: DivisionFactor = 4;
 28921  002A0C  0E04               	movlw	4
 28922  002A0E                     L56:
 28923  002A0E  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 28924  002A10                     l631:
 28925                           
 28926                           ; BSR set to: 0
 28927                           ;uart_drv.c: 146: }
 28928                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 28929                           
 28930                           ; BSR set to: 0
 28931                           
 28932                           ; BSR set to: 0
 28933                           
 28934                           ; BSR set to: 0
 28935                           
 28936                           ; BSR set to: 0
 28937                           
 28938                           ;uart_drv.c: 143: else
 28939                           ;uart_drv.c: 144: {
 28940                           
 28941                           ; BSR set to: 0
 28942  002A10  EE20 F00D          	lfsr	2,13
 28943  002A14  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28944  002A16  26D9               	addwf	fsr2l,f,c
 28945  002A18  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28946  002A1A  22DA               	addwfc	fsr2h,f,c
 28947  002A1C  CFDE F089          	movff	postinc2,___lldiv@dividend
 28948  002A20  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 28949  002A24  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 28950  002A28  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 28951  002A2C  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 28952  002A2E  6F7D               	movwf	___lmul@multiplier& (0+255),b
 28953  002A30  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 28954  002A32  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 28955  002A34  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 28956  002A36  EE20 F011          	lfsr	2,17
 28957  002A3A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28958  002A3C  26D9               	addwf	fsr2l,f,c
 28959  002A3E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28960  002A40  22DA               	addwfc	fsr2h,f,c
 28961  002A42  CFDE F081          	movff	postinc2,___lmul@multiplicand
 28962  002A46  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 28963  002A4A  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 28964  002A4E  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 28965  002A52  EC55  F02C         	call	___lmul	;wreg free
 28966  002A56  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 28967  002A5A  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 28968  002A5E  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 28969  002A62  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 28970  002A66  EC58  F028         	call	___lldiv	;wreg free
 28971  002A6A  0EFF               	movlw	255
 28972  002A6C  0100               	movlb	0	; () banked
 28973  002A6E  2589               	addwf	?___lldiv& (0+255),w,b
 28974  002A70  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 28975  002A72  0EFF               	movlw	255
 28976  002A74  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 28977  002A76  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 28978                           
 28979                           ; BSR set to: 0
 28980                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 28981  002A78  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 28982  002A7A  A4D8               	btfss	status,2,c
 28983  002A7C  D005               	goto	l633
 28984                           
 28985                           ; BSR set to: 0
 28986                           ;uart_drv.c: 152: {
 28987                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 28988  002A7E  0E00               	movlw	0
 28989  002A80  6E7F               	movwf	3967,c	;volatile
 28990                           
 28991                           ; BSR set to: 0
 28992                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 28993  002A82  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 28994                           
 28995                           ;uart_drv.c: 156: }
 28996  002A86  0012               	return	
 28997  002A88                     l633:
 28998                           
 28999                           ; BSR set to: 0
 29000                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 29001                           
 29002                           ; BSR set to: 0
 29003  002A88  0E02               	movlw	2
 29004  002A8A  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 29005  002A8C  A4D8               	btfss	status,2,c
 29006  002A8E  0012               	return	
 29007                           
 29008                           ; BSR set to: 0
 29009                           ;uart_drv.c: 158: {
 29010                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 29011  002A90  0E00               	movlw	0
 29012  002A92  6E7D               	movwf	3965,c	;volatile
 29013                           
 29014                           ; BSR set to: 0
 29015                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 29016  002A94  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 29017                           
 29018                           ; BSR set to: 0
 29019  002A98  0012               	return	
 29020  002A9A                     __end_of_SetUartBaudRate:
 29021                           	opt stack 0
 29022                           tosu	equ	0xFFF
 29023                           tosh	equ	0xFFE
 29024                           tosl	equ	0xFFD
 29025                           pclath	equ	0xFFA
 29026                           tblptru	equ	0xFF8
 29027                           tblptrh	equ	0xFF7
 29028                           tblptrl	equ	0xFF6
 29029                           tablat	equ	0xFF5
 29030                           prodh	equ	0xFF4
 29031                           prodl	equ	0xFF3
 29032                           intcon	equ	0xFF2
 29033                           intcon2	equ	0xFF1
 29034                           intcon3	equ	0xFF0
 29035                           indf0	equ	0xFEF
 29036                           postinc0	equ	0xFEE
 29037                           plusw0	equ	0xFEB
 29038                           fsr0h	equ	0xFEA
 29039                           fsr0l	equ	0xFE9
 29040                           wreg	equ	0xFE8
 29041                           indf1	equ	0xFE7
 29042                           postinc1	equ	0xFE6
 29043                           postdec1	equ	0xFE5
 29044                           plusw1	equ	0xFE3
 29045                           fsr1h	equ	0xFE2
 29046                           fsr1l	equ	0xFE1
 29047                           indf2	equ	0xFDF
 29048                           postinc2	equ	0xFDE
 29049                           postdec2	equ	0xFDD
 29050                           plusw2	equ	0xFDB
 29051                           fsr2h	equ	0xFDA
 29052                           fsr2l	equ	0xFD9
 29053                           status	equ	0xFD8
 29054                           
 29055 ;; *************** function ___lmul *****************
 29056 ;; Defined at:
 29057 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 29058 ;; Parameters:    Size  Location     Type
 29059 ;;  multiplier      4   29[BANK0 ] unsigned long 
 29060 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 29061 ;; Auto vars:     Size  Location     Type
 29062 ;;  product         4   37[BANK0 ] unsigned long 
 29063 ;; Return value:  Size  Location     Type
 29064 ;;                  4   29[BANK0 ] unsigned long 
 29065 ;; Registers used:
 29066 ;;		wreg, status,2, status,0
 29067 ;; Tracked objects:
 29068 ;;		On entry : 0/0
 29069 ;;		On exit  : 0/0
 29070 ;;		Unchanged: 0/0
 29071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29072 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29073 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29075 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29076 ;;Total ram usage:       12 bytes
 29077 ;; Hardware stack levels used:    1
 29078 ;; Hardware stack levels required when called:   11
 29079 ;; This function calls:
 29080 ;;		Nothing
 29081 ;; This function is called by:
 29082 ;;		_Tmr_TmrBPrSet
 29083 ;;		_SetUartBaudRate
 29084 ;;		_strtol
 29085 ;; This function uses a non-reentrant model
 29086 ;;
 29087                           
 29088                           	psect	text137
 29089  0058AA                     __ptext137:
 29090                           	opt stack 0
 29091  0058AA                     ___lmul:
 29092                           	opt stack 15
 29093                           
 29094                           ; BSR set to: 0
 29095                           ;incstack = 0
 29096  0058AA  0E00               	movlw	0
 29097  0058AC  0100               	movlb	0	; () banked
 29098  0058AE  6F85               	movwf	___lmul@product& (0+255),b
 29099  0058B0  0E00               	movlw	0
 29100  0058B2  6F86               	movwf	(___lmul@product+1)& (0+255),b
 29101  0058B4  0E00               	movlw	0
 29102  0058B6  6F87               	movwf	(___lmul@product+2)& (0+255),b
 29103  0058B8  0E00               	movlw	0
 29104  0058BA  6F88               	movwf	(___lmul@product+3)& (0+255),b
 29105  0058BC                     
 29106                           ; BSR set to: 0
 29107                           
 29108                           ; BSR set to: 0
 29109  0058BC  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 29110  0058BE  D008               	goto	l2905
 29111                           
 29112                           ; BSR set to: 0
 29113  0058C0  5181               	movf	___lmul@multiplicand& (0+255),w,b
 29114  0058C2  2785               	addwf	___lmul@product& (0+255),f,b
 29115  0058C4  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 29116  0058C6  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 29117  0058C8  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 29118  0058CA  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 29119  0058CC  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29120  0058CE  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 29121  0058D0                     l2905:
 29122                           
 29123                           ; BSR set to: 0
 29124                           
 29125                           ; BSR set to: 0
 29126  0058D0  90D8               	bcf	status,0,c
 29127  0058D2  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 29128  0058D4  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 29129  0058D6  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 29130  0058D8  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 29131                           
 29132                           ; BSR set to: 0
 29133  0058DA  90D8               	bcf	status,0,c
 29134  0058DC  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 29135  0058DE  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 29136  0058E0  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 29137  0058E2  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 29138  0058E4  517D               	movf	___lmul@multiplier& (0+255),w,b
 29139  0058E6  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 29140  0058E8  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 29141  0058EA  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 29142  0058EC  A4D8               	btfss	status,2,c
 29143  0058EE  D7E6               	goto	l2904
 29144                           
 29145                           ; BSR set to: 0
 29146  0058F0  C085  F07D         	movff	___lmul@product,?___lmul
 29147  0058F4  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 29148  0058F8  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 29149  0058FC  C088  F080         	movff	___lmul@product+3,?___lmul+3
 29150                           
 29151                           ; BSR set to: 0
 29152  005900  0012               	return		;funcret
 29153  005902                     __end_of___lmul:
 29154                           	opt stack 0
 29155                           tosu	equ	0xFFF
 29156                           tosh	equ	0xFFE
 29157                           tosl	equ	0xFFD
 29158                           pclath	equ	0xFFA
 29159                           tblptru	equ	0xFF8
 29160                           tblptrh	equ	0xFF7
 29161                           tblptrl	equ	0xFF6
 29162                           tablat	equ	0xFF5
 29163                           prodh	equ	0xFF4
 29164                           prodl	equ	0xFF3
 29165                           intcon	equ	0xFF2
 29166                           intcon2	equ	0xFF1
 29167                           intcon3	equ	0xFF0
 29168                           indf0	equ	0xFEF
 29169                           postinc0	equ	0xFEE
 29170                           plusw0	equ	0xFEB
 29171                           fsr0h	equ	0xFEA
 29172                           fsr0l	equ	0xFE9
 29173                           wreg	equ	0xFE8
 29174                           indf1	equ	0xFE7
 29175                           postinc1	equ	0xFE6
 29176                           postdec1	equ	0xFE5
 29177                           plusw1	equ	0xFE3
 29178                           fsr1h	equ	0xFE2
 29179                           fsr1l	equ	0xFE1
 29180                           indf2	equ	0xFDF
 29181                           postinc2	equ	0xFDE
 29182                           postdec2	equ	0xFDD
 29183                           plusw2	equ	0xFDB
 29184                           fsr2h	equ	0xFDA
 29185                           fsr2l	equ	0xFD9
 29186                           status	equ	0xFD8
 29187                           
 29188 ;; *************** function _UartSetConfigLow *****************
 29189 ;; Defined at:
 29190 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29191 ;; Parameters:    Size  Location     Type
 29192 ;;		None
 29193 ;; Auto vars:     Size  Location     Type
 29194 ;;		None
 29195 ;; Return value:  Size  Location     Type
 29196 ;;                  1    wreg      void 
 29197 ;; Registers used:
 29198 ;;		wreg, status,2
 29199 ;; Tracked objects:
 29200 ;;		On entry : 0/0
 29201 ;;		On exit  : 0/0
 29202 ;;		Unchanged: 0/0
 29203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29208 ;;Total ram usage:        0 bytes
 29209 ;; Hardware stack levels used:    1
 29210 ;; Hardware stack levels required when called:   11
 29211 ;; This function calls:
 29212 ;;		Nothing
 29213 ;; This function is called by:
 29214 ;;		_ConfigureModem
 29215 ;; This function uses a non-reentrant model
 29216 ;;
 29217                           
 29218                           	psect	text138
 29219  005902                     __ptext138:
 29220                           	opt stack 0
 29221  005902                     _UartSetConfigLow:
 29222                           	opt stack 15
 29223                           
 29224                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 29225                           
 29226                           ; BSR set to: 0
 29227                           ;incstack = 0
 29228  005902  0E01               	movlw	1
 29229  005904  0103               	movlb	3	; () banked
 29230  005906  6F1A               	movwf	_UartConfig& (0+255),b
 29231                           
 29232                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 29233  005908  0E00               	movlw	0
 29234  00590A  6F1B               	movwf	(_UartConfig+1)& (0+255),b
 29235                           
 29236                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 29237  00590C  0E00               	movlw	0
 29238  00590E  6F1C               	movwf	(_UartConfig+2)& (0+255),b
 29239                           
 29240                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 29241  005910  0E00               	movlw	0
 29242  005912  6F1D               	movwf	(_UartConfig+3)& (0+255),b
 29243                           
 29244                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 29245  005914  0E00               	movlw	0
 29246  005916  6F1E               	movwf	(_UartConfig+4)& (0+255),b
 29247                           
 29248                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 29249  005918  0E00               	movlw	0
 29250  00591A  6F1F               	movwf	(_UartConfig+5)& (0+255),b
 29251                           
 29252                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 29253  00591C  0E01               	movlw	1
 29254  00591E  6F20               	movwf	(_UartConfig+6)& (0+255),b
 29255                           
 29256                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 29257  005920  0E01               	movlw	1
 29258  005922  6F21               	movwf	(_UartConfig+7)& (0+255),b
 29259                           
 29260                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 29261  005924  0E00               	movlw	0
 29262  005926  6F22               	movwf	(_UartConfig+8)& (0+255),b
 29263                           
 29264                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 29265  005928  0E00               	movlw	0
 29266  00592A  6F23               	movwf	(_UartConfig+9)& (0+255),b
 29267                           
 29268                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 29269  00592C  0E00               	movlw	0
 29270  00592E  6F24               	movwf	(_UartConfig+10)& (0+255),b
 29271                           
 29272                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 29273  005930  0E00               	movlw	0
 29274  005932  6F25               	movwf	(_UartConfig+11)& (0+255),b
 29275                           
 29276                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 29277  005934  0E01               	movlw	1
 29278  005936  6F26               	movwf	(_UartConfig+12)& (0+255),b
 29279                           
 29280                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 29281  005938  0E00               	movlw	0
 29282  00593A  6F27               	movwf	(_UartConfig+13)& (0+255),b
 29283  00593C  0E6C               	movlw	108
 29284  00593E  6F28               	movwf	(_UartConfig+14)& (0+255),b
 29285  005940  0EDC               	movlw	220
 29286  005942  6F29               	movwf	(_UartConfig+15)& (0+255),b
 29287  005944  0E02               	movlw	2
 29288  005946  6F2A               	movwf	(_UartConfig+16)& (0+255),b
 29289                           
 29290                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 29291  005948  0E80               	movlw	128
 29292  00594A  6F2B               	movwf	(_UartConfig+17)& (0+255),b
 29293  00594C  0E25               	movlw	37
 29294  00594E  6F2C               	movwf	(_UartConfig+18)& (0+255),b
 29295  005950  0E00               	movlw	0
 29296  005952  6F2D               	movwf	(_UartConfig+19)& (0+255),b
 29297  005954  0E00               	movlw	0
 29298  005956  6F2E               	movwf	(_UartConfig+20)& (0+255),b
 29299                           
 29300                           ; BSR set to: 3
 29301  005958  0012               	return		;funcret
 29302  00595A                     __end_of_UartSetConfigLow:
 29303                           	opt stack 0
 29304                           tosu	equ	0xFFF
 29305                           tosh	equ	0xFFE
 29306                           tosl	equ	0xFFD
 29307                           pclath	equ	0xFFA
 29308                           tblptru	equ	0xFF8
 29309                           tblptrh	equ	0xFF7
 29310                           tblptrl	equ	0xFF6
 29311                           tablat	equ	0xFF5
 29312                           prodh	equ	0xFF4
 29313                           prodl	equ	0xFF3
 29314                           intcon	equ	0xFF2
 29315                           intcon2	equ	0xFF1
 29316                           intcon3	equ	0xFF0
 29317                           indf0	equ	0xFEF
 29318                           postinc0	equ	0xFEE
 29319                           plusw0	equ	0xFEB
 29320                           fsr0h	equ	0xFEA
 29321                           fsr0l	equ	0xFE9
 29322                           wreg	equ	0xFE8
 29323                           indf1	equ	0xFE7
 29324                           postinc1	equ	0xFE6
 29325                           postdec1	equ	0xFE5
 29326                           plusw1	equ	0xFE3
 29327                           fsr1h	equ	0xFE2
 29328                           fsr1l	equ	0xFE1
 29329                           indf2	equ	0xFDF
 29330                           postinc2	equ	0xFDE
 29331                           postdec2	equ	0xFDD
 29332                           plusw2	equ	0xFDB
 29333                           fsr2h	equ	0xFDA
 29334                           fsr2l	equ	0xFD9
 29335                           status	equ	0xFD8
 29336                           
 29337 ;; *************** function _CheckModem *****************
 29338 ;; Defined at:
 29339 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29340 ;; Parameters:    Size  Location     Type
 29341 ;;		None
 29342 ;; Auto vars:     Size  Location     Type
 29343 ;;		None
 29344 ;; Return value:  Size  Location     Type
 29345 ;;                  1    wreg      void 
 29346 ;; Registers used:
 29347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29348 ;; Tracked objects:
 29349 ;;		On entry : 0/0
 29350 ;;		On exit  : 0/0
 29351 ;;		Unchanged: 0/0
 29352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29357 ;;Total ram usage:        0 bytes
 29358 ;; Hardware stack levels used:    1
 29359 ;; Hardware stack levels required when called:   14
 29360 ;; This function calls:
 29361 ;;		_GenerateEvt
 29362 ;;		_OsTmr_GetTimerStatus
 29363 ;;		_OsTmr_StartTimer
 29364 ;;		_ReceiveEvt
 29365 ;;		_Uart_WriteConstString
 29366 ;; This function is called by:
 29367 ;;		_Mdm_MainTask
 29368 ;; This function uses a non-reentrant model
 29369 ;;
 29370                           
 29371                           	psect	text139
 29372  002582                     __ptext139:
 29373                           	opt stack 0
 29374  002582                     _CheckModem:
 29375                           	opt stack 13
 29376                           
 29377                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 29378                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 29379                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 29380                           
 29381                           ; BSR set to: 3
 29382                           ;incstack = 0
 29383  002582  D096               	goto	l982
 29384  002584                     
 29385                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 29386  002584  0EF3               	movlw	low CheckModem@Timeout
 29387  002586  0100               	movlb	0	; () banked
 29388  002588  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29389  00258A  0E03               	movlw	high CheckModem@Timeout
 29390  00258C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29391  00258E  0ED0               	movlw	208
 29392  002590  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29393  002592  0E07               	movlw	7
 29394  002594  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29395  002596  0E00               	movlw	0
 29396  002598  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29397  00259A  0E00               	movlw	0
 29398  00259C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29399  00259E  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 29400                           
 29401                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 29402  0025A2  0E01               	movlw	1
 29403  0025A4  6E28               	movwf	CheckModem@CheckMdmSts,c
 29404                           
 29405                           ;mdm_gsm_gprs.c: 295: break;
 29406  0025A6  0012               	return	
 29407  0025A8                     
 29408                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29409  0025A8  0EF3               	movlw	low CheckModem@Timeout
 29410  0025AA  0100               	movlb	0	; () banked
 29411  0025AC  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29412  0025AE  0E03               	movlw	high CheckModem@Timeout
 29413  0025B0  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29414  0025B2  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29415  0025B6  06E8               	decf	wreg,f,c
 29416  0025B8  A4D8               	btfss	status,2,c
 29417  0025BA  0012               	return	
 29418                           
 29419                           ;mdm_gsm_gprs.c: 300: {
 29420                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 29421  0025BC  0E02               	movlw	2
 29422  0025BE  6E28               	movwf	CheckModem@CheckMdmSts,c
 29423                           
 29424                           ;mdm_gsm_gprs.c: 303: }
 29425                           ;mdm_gsm_gprs.c: 304: break;
 29426  0025C0  0012               	return	
 29427  0025C2                     
 29428                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 29429  0025C2  0EE6               	movlw	low STR_1
 29430  0025C4  0100               	movlb	0	; () banked
 29431  0025C6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29432  0025C8  0EFF               	movlw	high STR_1
 29433  0025CA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29434  0025CC  0E01               	movlw	1
 29435  0025CE  EC52  F030         	call	_Uart_WriteConstString
 29436                           
 29437                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 29438  0025D2  0EF3               	movlw	low CheckModem@Timeout
 29439  0025D4  0100               	movlb	0	; () banked
 29440  0025D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29441  0025D8  0E03               	movlw	high CheckModem@Timeout
 29442  0025DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29443  0025DC  0ED0               	movlw	208
 29444  0025DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29445  0025E0  0E07               	movlw	7
 29446  0025E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29447  0025E4  0E00               	movlw	0
 29448  0025E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29449  0025E8  0E00               	movlw	0
 29450  0025EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29451  0025EC  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 29452                           
 29453                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 29454  0025F0  0E03               	movlw	3
 29455  0025F2  6E28               	movwf	CheckModem@CheckMdmSts,c
 29456                           
 29457                           ;mdm_gsm_gprs.c: 313: break;
 29458  0025F4  0012               	return	
 29459  0025F6                     
 29460                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 29461  0025F6  0E3A               	movlw	low _NewStringReceived
 29462  0025F8  0100               	movlb	0	; () banked
 29463  0025FA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29464  0025FC  0E00               	movlw	high _NewStringReceived
 29465  0025FE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29466  002600  EC9B  F032         	call	_ReceiveEvt	;wreg free
 29467  002604  0900               	iorlw	0
 29468  002606  B4D8               	btfsc	status,2,c
 29469  002608  D02F               	goto	l989
 29470                           
 29471                           ;mdm_gsm_gprs.c: 318: {
 29472                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 29473  00260A  CC58  FFE8         	movff	_RxBuffer,wreg
 29474  00260E  0A4F               	xorlw	79
 29475  002610  A4D8               	btfss	status,2,c
 29476  002612  D005               	goto	u14640
 29477  002614  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29478  002618  0A4B               	xorlw	75
 29479  00261A  B4D8               	btfsc	status,2,c
 29480  00261C  D00A               	goto	u14660
 29481  00261E                     u14640:
 29482  00261E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29483  002622  0A4F               	xorlw	79
 29484  002624  A4D8               	btfss	status,2,c
 29485  002626  0012               	return	
 29486  002628  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 29487  00262C  0A4B               	xorlw	75
 29488  00262E  A4D8               	btfss	status,2,c
 29489  002630  0012               	return	
 29490  002632                     u14660:
 29491                           
 29492                           ;mdm_gsm_gprs.c: 321: {
 29493                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 29494  002632  0E02               	movlw	2
 29495  002634  0100               	movlb	0	; () banked
 29496  002636  6FD2               	movwf	_MdmStatus& (0+255),b
 29497                           
 29498                           ; BSR set to: 0
 29499                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 29500  002638  0EE2               	movlw	low _MdmOnOffPulseRequest
 29501  00263A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 29502  00263C  0E00               	movlw	high _MdmOnOffPulseRequest
 29503  00263E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 29504  002640  EC8C  F034         	call	_GenerateEvt	;wreg free
 29505                           
 29506                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 29507  002644  0EF3               	movlw	low CheckModem@Timeout
 29508  002646  0100               	movlb	0	; () banked
 29509  002648  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29510  00264A  0E03               	movlw	high CheckModem@Timeout
 29511  00264C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29512  00264E  0EE8               	movlw	232
 29513  002650  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29514  002652  0E03               	movlw	3
 29515  002654  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29516  002656  0E00               	movlw	0
 29517  002658  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29518  00265A  0E00               	movlw	0
 29519  00265C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29520  00265E  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 29521                           
 29522                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 29523  002662  0E04               	movlw	4
 29524  002664  6E28               	movwf	CheckModem@CheckMdmSts,c
 29525                           
 29526                           ;mdm_gsm_gprs.c: 329: }
 29527                           ;mdm_gsm_gprs.c: 330: }
 29528  002666  0012               	return	
 29529  002668                     l989:
 29530                           
 29531                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29532  002668  0EF3               	movlw	low CheckModem@Timeout
 29533  00266A  0100               	movlb	0	; () banked
 29534  00266C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29535  00266E  0E03               	movlw	high CheckModem@Timeout
 29536  002670  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29537  002672  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29538  002676  06E8               	decf	wreg,f,c
 29539  002678  A4D8               	btfss	status,2,c
 29540  00267A  0012               	return	
 29541                           
 29542                           ;mdm_gsm_gprs.c: 332: {
 29543                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 29544  00267C  0E00               	movlw	0
 29545  00267E  0100               	movlb	0	; () banked
 29546  002680  6FD2               	movwf	_MdmStatus& (0+255),b
 29547                           
 29548                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 29549  002682  0E01               	movlw	1
 29550  002684  6E29               	movwf	_ComChecCompleted,c
 29551                           
 29552                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 29553  002686  0E05               	movlw	5
 29554  002688  6E28               	movwf	CheckModem@CheckMdmSts,c
 29555                           
 29556                           ; BSR set to: 0
 29557                           ;mdm_gsm_gprs.c: 343: }
 29558                           ;mdm_gsm_gprs.c: 344: break;
 29559                           
 29560                           ; BSR set to: 0
 29561                           
 29562                           ;mdm_gsm_gprs.c: 340: else
 29563                           ;mdm_gsm_gprs.c: 341: {
 29564                           
 29565                           ; BSR set to: 0
 29566                           
 29567                           ;mdm_gsm_gprs.c: 339: }
 29568  00268A  0012               	return	
 29569  00268C                     
 29570                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29571                           
 29572                           ; BSR set to: 0
 29573  00268C  0EF3               	movlw	low CheckModem@Timeout
 29574  00268E  0100               	movlb	0	; () banked
 29575  002690  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29576  002692  0E03               	movlw	high CheckModem@Timeout
 29577  002694  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29578  002696  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29579  00269A  06E8               	decf	wreg,f,c
 29580  00269C  A4D8               	btfss	status,2,c
 29581  00269E  0012               	return	
 29582                           
 29583                           ;mdm_gsm_gprs.c: 349: {
 29584                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 29585  0026A0  0E00               	movlw	0
 29586  0026A2  0100               	movlb	0	; () banked
 29587  0026A4  6FD2               	movwf	_MdmStatus& (0+255),b
 29588                           
 29589                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 29590  0026A6  0E01               	movlw	1
 29591  0026A8  6E29               	movwf	_ComChecCompleted,c
 29592                           
 29593                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 29594  0026AA  0E05               	movlw	5
 29595  0026AC  6E28               	movwf	CheckModem@CheckMdmSts,c
 29596                           
 29597                           ; BSR set to: 0
 29598                           ;mdm_gsm_gprs.c: 365: }
 29599                           
 29600                           ; BSR set to: 0
 29601                           ;mdm_gsm_gprs.c: 364: break;
 29602                           
 29603                           ;mdm_gsm_gprs.c: 363: default:
 29604                           
 29605                           ; BSR set to: 0
 29606                           ;mdm_gsm_gprs.c: 361: break;
 29607                           
 29608                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 29609                           
 29610                           ; BSR set to: 0
 29611                           ;mdm_gsm_gprs.c: 356: }
 29612                           ;mdm_gsm_gprs.c: 357: break;
 29613  0026AE  0012               	return	
 29614  0026B0                     l982:
 29615                           
 29616                           ; BSR set to: 0
 29617  0026B0  5028               	movf	CheckModem@CheckMdmSts,w,c
 29618                           
 29619                           ; Switch size 1, requested type "space"
 29620                           ; Number of cases is 6, Range of values is 0 to 5
 29621                           ; switch strategies available:
 29622                           ; Name         Instructions Cycles
 29623                           ; simple_byte           19    10 (average)
 29624                           ;	Chosen strategy is simple_byte
 29625  0026B2  0A00               	xorlw	0	; case 0
 29626  0026B4  B4D8               	btfsc	status,2,c
 29627  0026B6  D766               	goto	l983
 29628  0026B8  0A01               	xorlw	1	; case 1
 29629  0026BA  B4D8               	btfsc	status,2,c
 29630  0026BC  D775               	goto	l985
 29631  0026BE  0A03               	xorlw	3	; case 2
 29632  0026C0  B4D8               	btfsc	status,2,c
 29633  0026C2  D77F               	goto	l987
 29634  0026C4  0A01               	xorlw	1	; case 3
 29635  0026C6  B4D8               	btfsc	status,2,c
 29636  0026C8  D796               	goto	l988
 29637  0026CA  0A07               	xorlw	7	; case 4
 29638  0026CC  B4D8               	btfsc	status,2,c
 29639  0026CE  D7DE               	goto	l998
 29640  0026D0  0A01               	xorlw	1	; case 5
 29641  0026D2  0012               	return	
 29642  0026D4                     __end_of_CheckModem:
 29643                           	opt stack 0
 29644                           tosu	equ	0xFFF
 29645                           tosh	equ	0xFFE
 29646                           tosl	equ	0xFFD
 29647                           pclath	equ	0xFFA
 29648                           tblptru	equ	0xFF8
 29649                           tblptrh	equ	0xFF7
 29650                           tblptrl	equ	0xFF6
 29651                           tablat	equ	0xFF5
 29652                           prodh	equ	0xFF4
 29653                           prodl	equ	0xFF3
 29654                           intcon	equ	0xFF2
 29655                           intcon2	equ	0xFF1
 29656                           intcon3	equ	0xFF0
 29657                           indf0	equ	0xFEF
 29658                           postinc0	equ	0xFEE
 29659                           plusw0	equ	0xFEB
 29660                           fsr0h	equ	0xFEA
 29661                           fsr0l	equ	0xFE9
 29662                           wreg	equ	0xFE8
 29663                           indf1	equ	0xFE7
 29664                           postinc1	equ	0xFE6
 29665                           postdec1	equ	0xFE5
 29666                           plusw1	equ	0xFE3
 29667                           fsr1h	equ	0xFE2
 29668                           fsr1l	equ	0xFE1
 29669                           indf2	equ	0xFDF
 29670                           postinc2	equ	0xFDE
 29671                           postdec2	equ	0xFDD
 29672                           plusw2	equ	0xFDB
 29673                           fsr2h	equ	0xFDA
 29674                           fsr2l	equ	0xFD9
 29675                           status	equ	0xFD8
 29676                           
 29677 ;; *************** function _MdmCntSm *****************
 29678 ;; Defined at:
 29679 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 29680 ;; Parameters:    Size  Location     Type
 29681 ;;		None
 29682 ;; Auto vars:     Size  Location     Type
 29683 ;;		None
 29684 ;; Return value:  Size  Location     Type
 29685 ;;                  1    wreg      void 
 29686 ;; Registers used:
 29687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29688 ;; Tracked objects:
 29689 ;;		On entry : 0/0
 29690 ;;		On exit  : 0/0
 29691 ;;		Unchanged: 0/0
 29692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29697 ;;Total ram usage:        0 bytes
 29698 ;; Hardware stack levels used:    1
 29699 ;; Hardware stack levels required when called:   12
 29700 ;; This function calls:
 29701 ;;		_InitModemInterface
 29702 ;;		_ReceiveEvt
 29703 ;; This function is called by:
 29704 ;;		_Mdm_DrvMainFn
 29705 ;; This function uses a non-reentrant model
 29706 ;;
 29707                           
 29708                           	psect	text140
 29709  004606                     __ptext140:
 29710                           	opt stack 0
 29711  004606                     _MdmCntSm:
 29712                           	opt stack 15
 29713                           
 29714                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 29715                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 29716                           ;mdm_drv.c: 204: switch (MdmCntState)
 29717                           
 29718                           ;incstack = 0
 29719  004606  D045               	goto	l315
 29720  004608                     
 29721                           ;mdm_drv.c: 208: InitModemInterface();
 29722  004608  EC49  F035         	call	_InitModemInterface	;wreg free
 29723                           
 29724                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 29725  00460C  0E01               	movlw	1
 29726  00460E  6E2C               	movwf	MdmCntSm@MdmCntState,c
 29727                           
 29728                           ;mdm_drv.c: 211: break;
 29729  004610  0012               	return	
 29730  004612                     
 29731                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 29732  004612  0EE2               	movlw	low _MdmOnOffPulseRequest
 29733  004614  0100               	movlb	0	; () banked
 29734  004616  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29735  004618  0E00               	movlw	high _MdmOnOffPulseRequest
 29736  00461A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29737  00461C  EC9B  F032         	call	_ReceiveEvt	;wreg free
 29738  004620  0900               	iorlw	0
 29739  004622  B4D8               	btfsc	status,2,c
 29740  004624  D009               	goto	l319
 29741                           
 29742                           ;mdm_drv.c: 216: {
 29743                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 29744  004626  0E02               	movlw	2
 29745  004628  6E2C               	movwf	MdmCntSm@MdmCntState,c
 29746                           
 29747                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 29748  00462A  8284               	bsf	3972,1,c	;volatile
 29749                           
 29750                           ;mdm_drv.c: 222: Counter = 0;
 29751  00462C  0E00               	movlw	0
 29752  00462E  0102               	movlb	2	; () banked
 29753  004630  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 29754  004632  0E00               	movlw	0
 29755  004634  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 29756                           
 29757                           ;mdm_drv.c: 223: }
 29758  004636  0012               	return	
 29759  004638                     l319:
 29760                           
 29761                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 29762                           
 29763                           ; BSR set to: 2
 29764  004638  0E3B               	movlw	low _MdmResetRequest
 29765  00463A  0100               	movlb	0	; () banked
 29766  00463C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29767  00463E  0E00               	movlw	high _MdmResetRequest
 29768  004640  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29769  004642  EC9B  F032         	call	_ReceiveEvt	;wreg free
 29770  004646  0900               	iorlw	0
 29771  004648  B4D8               	btfsc	status,2,c
 29772  00464A  0012               	return	
 29773                           
 29774                           ;mdm_drv.c: 225: {
 29775                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 29776  00464C  0E03               	movlw	3
 29777  00464E  6E2C               	movwf	MdmCntSm@MdmCntState,c
 29778                           
 29779                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 29780  004650  8084               	bsf	3972,0,c	;volatile
 29781                           
 29782                           ;mdm_drv.c: 231: Counter = 0;
 29783  004652  0E00               	movlw	0
 29784  004654  0102               	movlb	2	; () banked
 29785  004656  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 29786  004658  0E00               	movlw	0
 29787  00465A  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 29788                           
 29789                           ; BSR set to: 2
 29790                           ;mdm_drv.c: 236: }
 29791                           ;mdm_drv.c: 237: break;
 29792                           
 29793                           ; BSR set to: 2
 29794                           
 29795                           ;mdm_drv.c: 233: else
 29796                           ;mdm_drv.c: 234: {
 29797                           
 29798                           ; BSR set to: 2
 29799                           
 29800                           ;mdm_drv.c: 232: }
 29801  00465C  0012               	return	
 29802  00465E                     
 29803                           ;mdm_drv.c: 241: Counter++;
 29804                           
 29805                           ; BSR set to: 2
 29806  00465E  0102               	movlb	2	; () banked
 29807  004660  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 29808  004662  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 29809                           
 29810                           ; BSR set to: 2
 29811                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 29812  004664  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 29813  004666  E104               	bnz	u14560
 29814  004668  0E96               	movlw	150
 29815  00466A  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 29816  00466C  A0D8               	btfss	status,0,c
 29817  00466E  0012               	return	
 29818  004670                     u14560:
 29819                           
 29820                           ; BSR set to: 2
 29821                           ;mdm_drv.c: 244: {
 29822                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 29823  004670  9284               	bcf	3972,1,c	;volatile
 29824                           
 29825                           ; BSR set to: 2
 29826                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 29827  004672  0E01               	movlw	1
 29828  004674  6E2C               	movwf	MdmCntSm@MdmCntState,c
 29829                           
 29830                           ; BSR set to: 2
 29831                           ;mdm_drv.c: 249: }
 29832                           ;mdm_drv.c: 250: break;
 29833  004676  0012               	return	
 29834  004678                     
 29835                           ;mdm_drv.c: 254: Counter++;
 29836                           
 29837                           ; BSR set to: 2
 29838  004678  0102               	movlb	2	; () banked
 29839  00467A  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 29840  00467C  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 29841                           
 29842                           ; BSR set to: 2
 29843                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 29844  00467E  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 29845  004680  E104               	bnz	u14570
 29846  004682  0E0A               	movlw	10
 29847  004684  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 29848  004686  A0D8               	btfss	status,0,c
 29849  004688  0012               	return	
 29850  00468A                     u14570:
 29851                           
 29852                           ; BSR set to: 2
 29853                           ;mdm_drv.c: 257: {
 29854                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 29855  00468A  9084               	bcf	3972,0,c	;volatile
 29856                           
 29857                           ; BSR set to: 2
 29858                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 29859  00468C  0E01               	movlw	1
 29860  00468E  6E2C               	movwf	MdmCntSm@MdmCntState,c
 29861                           
 29862                           ; BSR set to: 2
 29863                           ;mdm_drv.c: 267: }
 29864                           
 29865                           ; BSR set to: 2
 29866                           ;mdm_drv.c: 266: break;
 29867                           
 29868                           ;mdm_drv.c: 265: default:
 29869                           
 29870                           ; BSR set to: 2
 29871                           ;mdm_drv.c: 262: }
 29872                           ;mdm_drv.c: 263: break;
 29873  004690  0012               	return	
 29874  004692                     l315:
 29875                           
 29876                           ; BSR set to: 2
 29877  004692  502C               	movf	MdmCntSm@MdmCntState,w,c
 29878                           
 29879                           ; Switch size 1, requested type "space"
 29880                           ; Number of cases is 4, Range of values is 0 to 3
 29881                           ; switch strategies available:
 29882                           ; Name         Instructions Cycles
 29883                           ; simple_byte           13     7 (average)
 29884                           ;	Chosen strategy is simple_byte
 29885  004694  0A00               	xorlw	0	; case 0
 29886  004696  B4D8               	btfsc	status,2,c
 29887  004698  D7B7               	goto	l316
 29888  00469A  0A01               	xorlw	1	; case 1
 29889  00469C  B4D8               	btfsc	status,2,c
 29890  00469E  D7B9               	goto	l318
 29891  0046A0  0A03               	xorlw	3	; case 2
 29892  0046A2  B4D8               	btfsc	status,2,c
 29893  0046A4  D7DC               	goto	l323
 29894  0046A6  0A01               	xorlw	1	; case 3
 29895  0046A8  A4D8               	btfss	status,2,c
 29896  0046AA  0012               	return	
 29897  0046AC  D7E5               	goto	l325
 29898  0046AE                     __end_of_MdmCntSm:
 29899                           	opt stack 0
 29900                           tosu	equ	0xFFF
 29901                           tosh	equ	0xFFE
 29902                           tosl	equ	0xFFD
 29903                           pclath	equ	0xFFA
 29904                           tblptru	equ	0xFF8
 29905                           tblptrh	equ	0xFF7
 29906                           tblptrl	equ	0xFF6
 29907                           tablat	equ	0xFF5
 29908                           prodh	equ	0xFF4
 29909                           prodl	equ	0xFF3
 29910                           intcon	equ	0xFF2
 29911                           intcon2	equ	0xFF1
 29912                           intcon3	equ	0xFF0
 29913                           indf0	equ	0xFEF
 29914                           postinc0	equ	0xFEE
 29915                           plusw0	equ	0xFEB
 29916                           fsr0h	equ	0xFEA
 29917                           fsr0l	equ	0xFE9
 29918                           wreg	equ	0xFE8
 29919                           indf1	equ	0xFE7
 29920                           postinc1	equ	0xFE6
 29921                           postdec1	equ	0xFE5
 29922                           plusw1	equ	0xFE3
 29923                           fsr1h	equ	0xFE2
 29924                           fsr1l	equ	0xFE1
 29925                           indf2	equ	0xFDF
 29926                           postinc2	equ	0xFDE
 29927                           postdec2	equ	0xFDD
 29928                           plusw2	equ	0xFDB
 29929                           fsr2h	equ	0xFDA
 29930                           fsr2l	equ	0xFD9
 29931                           status	equ	0xFD8
 29932                           
 29933 ;; *************** function _InitModemInterface *****************
 29934 ;; Defined at:
 29935 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 29936 ;; Parameters:    Size  Location     Type
 29937 ;;		None
 29938 ;; Auto vars:     Size  Location     Type
 29939 ;;		None
 29940 ;; Return value:  Size  Location     Type
 29941 ;;                  1    wreg      void 
 29942 ;; Registers used:
 29943 ;;		None
 29944 ;; Tracked objects:
 29945 ;;		On entry : 0/0
 29946 ;;		On exit  : 0/0
 29947 ;;		Unchanged: 0/0
 29948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29953 ;;Total ram usage:        0 bytes
 29954 ;; Hardware stack levels used:    1
 29955 ;; Hardware stack levels required when called:   11
 29956 ;; This function calls:
 29957 ;;		Nothing
 29958 ;; This function is called by:
 29959 ;;		_MdmCntSm
 29960 ;; This function uses a non-reentrant model
 29961 ;;
 29962                           
 29963                           	psect	text141
 29964  006A92                     __ptext141:
 29965                           	opt stack 0
 29966  006A92                     _InitModemInterface:
 29967                           	opt stack 15
 29968                           
 29969                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 29970                           
 29971                           ;incstack = 0
 29972  006A92  9096               	bcf	3990,0,c	;volatile
 29973                           
 29974                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 29975  006A94  9296               	bcf	3990,1,c	;volatile
 29976                           
 29977                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 29978  006A96  8496               	bsf	3990,2,c	;volatile
 29979  006A98  0012               	return		;funcret
 29980  006A9A                     __end_of_InitModemInterface:
 29981                           	opt stack 0
 29982                           tosu	equ	0xFFF
 29983                           tosh	equ	0xFFE
 29984                           tosl	equ	0xFFD
 29985                           pclath	equ	0xFFA
 29986                           tblptru	equ	0xFF8
 29987                           tblptrh	equ	0xFF7
 29988                           tblptrl	equ	0xFF6
 29989                           tablat	equ	0xFF5
 29990                           prodh	equ	0xFF4
 29991                           prodl	equ	0xFF3
 29992                           intcon	equ	0xFF2
 29993                           intcon2	equ	0xFF1
 29994                           intcon3	equ	0xFF0
 29995                           indf0	equ	0xFEF
 29996                           postinc0	equ	0xFEE
 29997                           plusw0	equ	0xFEB
 29998                           fsr0h	equ	0xFEA
 29999                           fsr0l	equ	0xFE9
 30000                           wreg	equ	0xFE8
 30001                           indf1	equ	0xFE7
 30002                           postinc1	equ	0xFE6
 30003                           postdec1	equ	0xFE5
 30004                           plusw1	equ	0xFE3
 30005                           fsr1h	equ	0xFE2
 30006                           fsr1l	equ	0xFE1
 30007                           indf2	equ	0xFDF
 30008                           postinc2	equ	0xFDE
 30009                           postdec2	equ	0xFDD
 30010                           plusw2	equ	0xFDB
 30011                           fsr2h	equ	0xFDA
 30012                           fsr2l	equ	0xFD9
 30013                           status	equ	0xFD8
 30014                           
 30015 ;; *************** function _InitGprsNetwork *****************
 30016 ;; Defined at:
 30017 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30018 ;; Parameters:    Size  Location     Type
 30019 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 30020 ;;		 -> NULL(0), 
 30021 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 30022 ;; Auto vars:     Size  Location     Type
 30023 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 30024 ;;  Index           1   50[BANK1 ] unsigned char 
 30025 ;; Return value:  Size  Location     Type
 30026 ;;                  1    wreg      enum E8925
 30027 ;; Registers used:
 30028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30029 ;; Tracked objects:
 30030 ;;		On entry : 0/0
 30031 ;;		On exit  : 0/0
 30032 ;;		Unchanged: 0/0
 30033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30034 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30035 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30036 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30037 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30038 ;;Total ram usage:       56 bytes
 30039 ;; Hardware stack levels used:    1
 30040 ;; Hardware stack levels required when called:   14
 30041 ;; This function calls:
 30042 ;;		_ClearBuffer
 30043 ;;		_OsTmr_GetTimerStatus
 30044 ;;		_OsTmr_StartTimer
 30045 ;;		_ReceiveEvt
 30046 ;;		_StringCopy
 30047 ;;		_Uart_WriteConstString
 30048 ;;		_Uart_WriteString
 30049 ;; This function is called by:
 30050 ;;		_MdmHttp_MainTask
 30051 ;; This function uses a non-reentrant model
 30052 ;;
 30053                           
 30054                           	psect	text142
 30055  000DC8                     __ptext142:
 30056                           	opt stack 0
 30057  000DC8                     _InitGprsNetwork:
 30058                           	opt stack 13
 30059                           
 30060                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 30061                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 30062                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 30063                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 30064                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 30065                           
 30066                           ;incstack = 0
 30067  000DC8  0E00               	movlw	0
 30068  000DCA  0101               	movlb	1	; () banked
 30069  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30070                           
 30071                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 30072  000DCE  D154               	goto	l1219
 30073  000DD0                     
 30074                           ; BSR set to: 1
 30075                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 30076                           
 30077                           ; BSR set to: 1
 30078  000DD0  0EDB               	movlw	low _InitNetwork
 30079  000DD2  0100               	movlb	0	; () banked
 30080  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30081  000DD6  0E00               	movlw	high _InitNetwork
 30082  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30083  000DDA  EC9B  F032         	call	_ReceiveEvt	;wreg free
 30084  000DDE  0900               	iorlw	0
 30085  000DE0  B4D8               	btfsc	status,2,c
 30086  000DE2  D166               	goto	l1222
 30087                           
 30088                           ;mdm_gsm_gprs_http.c: 137: {
 30089                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 30090  000DE4  0E01               	movlw	1
 30091  000DE6  D141               	goto	L96
 30092  000DE8                     
 30093                           ; BSR set to: 1
 30094                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 30095                           
 30096                           ; BSR set to: 1
 30097  000DE8  0E89               	movlw	low STR_8
 30098  000DEA  0100               	movlb	0	; () banked
 30099  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30100  000DEE  0EFE               	movlw	high STR_8
 30101  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30102  000DF2  0E01               	movlw	1
 30103  000DF4  EC52  F030         	call	_Uart_WriteConstString
 30104                           
 30105                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 30106  000DF8  0E07               	movlw	7
 30107  000DFA  0101               	movlb	1	; () banked
 30108  000DFC  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30109                           
 30110                           ; BSR set to: 1
 30111                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 30112  000DFE  0E02               	movlw	2
 30113  000E00  0100               	movlb	0	; () banked
 30114  000E02  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30115                           
 30116                           ; BSR set to: 0
 30117                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 30118  000E04  0EF5               	movlw	low _ConnTimeout
 30119  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30120  000E08  0E02               	movlw	high _ConnTimeout
 30121  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30122  000E0C  0E20               	movlw	32
 30123  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30124  000E10  0E4E               	movlw	78
 30125  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30126  000E14  0E00               	movlw	0
 30127  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30128  000E18  0E00               	movlw	0
 30129  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30130  000E1C  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 30131  000E20  D0C7               	goto	l15553
 30132  000E22                     
 30133                           ; BSR set to: 1
 30134                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 30135                           
 30136                           ; BSR set to: 1
 30137  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 30138  000E24  0100               	movlb	0	; () banked
 30139  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30140  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 30141  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30142  000E2C  0E00               	movlw	0
 30143  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30144  000E30  0E32               	movlw	50
 30145  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30146  000E34  ECBD  F031         	call	_ClearBuffer	;wreg free
 30147                           
 30148                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 30149  000E38  0EBD               	movlw	low STR_9
 30150  000E3A  0100               	movlb	0	; () banked
 30151  000E3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30152  000E3E  0EFE               	movlw	high STR_9
 30153  000E40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30154  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 30155  000E44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 30156  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 30157  000E48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 30158  000E4A  0E00               	movlw	0
 30159  000E4C  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30160  000E4E  0E14               	movlw	20
 30161  000E50  6F89               	movwf	StringCopy@Len& (0+255),b
 30162  000E52  EC6C  F02B         	call	_StringCopy	;wreg free
 30163                           
 30164                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 30165  000E56  0E00               	movlw	0
 30166  000E58  0101               	movlb	1	; () banked
 30167  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30168  000E5C  D01C               	goto	l1225
 30169  000E5E                     
 30170                           ; BSR set to: 1
 30171                           ;mdm_gsm_gprs_http.c: 161: {
 30172                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 30173                           
 30174                           ; BSR set to: 1
 30175  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30176  000E60  0D01               	mullw	1
 30177  000E62  50F3               	movf	prodl,w,c
 30178  000E64  0100               	movlb	0	; () banked
 30179  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 30180  000E68  6ED9               	movwf	fsr2l,c
 30181  000E6A  50F4               	movf	prodh,w,c
 30182  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 30183  000E6E  6EDA               	movwf	fsr2h,c
 30184  000E70  0101               	movlb	1	; () banked
 30185  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30186  000E74  0100               	movlb	0	; () banked
 30187  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30188  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30189  000E7A  0E14               	movlw	20
 30190  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30191  000E7E  0E00               	movlw	0
 30192  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30193  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 30194  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30195  000E86  6EE1               	movwf	fsr1l,c
 30196  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 30197  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30198  000E8C  6EE2               	movwf	fsr1h,c
 30199  000E8E  CFDF FFE7          	movff	indf2,indf1
 30200                           
 30201                           ; BSR set to: 0
 30202  000E92  0101               	movlb	1	; () banked
 30203  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 30204  000E96                     l1225:
 30205                           
 30206                           ; BSR set to: 1
 30207                           
 30208                           ; BSR set to: 1
 30209  000E96  0100               	movlb	0	; () banked
 30210  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 30211  000E9A  0101               	movlb	1	; () banked
 30212  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 30213  000E9E  A0D8               	btfss	status,0,c
 30214  000EA0  D7DE               	goto	l1226
 30215                           
 30216                           ; BSR set to: 1
 30217                           ;mdm_gsm_gprs_http.c: 163: }
 30218                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 30219                           
 30220                           ; BSR set to: 1
 30221  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30222  000EA4  0100               	movlb	0	; () banked
 30223  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30224  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30225  000EAA  0E14               	movlw	20
 30226  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30227  000EAE  0E00               	movlw	0
 30228  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30229  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 30230  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30231  000EB6  6ED9               	movwf	fsr2l,c
 30232  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 30233  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30234  000EBC  6EDA               	movwf	fsr2h,c
 30235  000EBE  0E22               	movlw	34
 30236  000EC0  6EDF               	movwf	indf2,c
 30237                           
 30238                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 30239  000EC2  0101               	movlb	1	; () banked
 30240  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30241  000EC6  0100               	movlb	0	; () banked
 30242  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30243  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30244  000ECC  0E15               	movlw	21
 30245  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30246  000ED0  0E00               	movlw	0
 30247  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30248  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 30249  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30250  000ED8  6ED9               	movwf	fsr2l,c
 30251  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 30252  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30253  000EDE  6EDA               	movwf	fsr2h,c
 30254  000EE0  0E0D               	movlw	13
 30255  000EE2  6EDF               	movwf	indf2,c
 30256                           
 30257                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 30258  000EE4  0101               	movlb	1	; () banked
 30259  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30260  000EE8  0100               	movlb	0	; () banked
 30261  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30262  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30263  000EEE  0E16               	movlw	22
 30264  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30265  000EF2  0E00               	movlw	0
 30266  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30267  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 30268  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30269  000EFA  6ED9               	movwf	fsr2l,c
 30270  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 30271  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30272  000F00  6EDA               	movwf	fsr2h,c
 30273  000F02  0E00               	movlw	0
 30274  000F04  6EDF               	movwf	indf2,c
 30275                           
 30276                           ; BSR set to: 0
 30277                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 30278  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 30279  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 30280  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 30281  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 30282  000F0E  0E01               	movlw	1
 30283  000F10  ECF2  F030         	call	_Uart_WriteString
 30284                           
 30285                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 30286  000F14  0E07               	movlw	7
 30287  000F16  0101               	movlb	1	; () banked
 30288  000F18  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30289                           
 30290                           ; BSR set to: 1
 30291                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 30292  000F1A  0E03               	movlw	3
 30293  000F1C  0100               	movlb	0	; () banked
 30294  000F1E  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30295                           
 30296                           ; BSR set to: 0
 30297                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 30298  000F20  0EF5               	movlw	low _ConnTimeout
 30299  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30300  000F24  0E02               	movlw	high _ConnTimeout
 30301  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30302  000F28  0E20               	movlw	32
 30303  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30304  000F2C  0E4E               	movlw	78
 30305  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30306  000F30  0E00               	movlw	0
 30307  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30308  000F34  0E00               	movlw	0
 30309  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30310  000F38  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 30311  000F3C  D039               	goto	l15553
 30312  000F3E                     
 30313                           ; BSR set to: 1
 30314                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 30315                           
 30316                           ; BSR set to: 1
 30317  000F3E  0E4B               	movlw	low STR_10
 30318  000F40  0100               	movlb	0	; () banked
 30319  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30320  000F44  0EFF               	movlw	high STR_10
 30321  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30322  000F48  0E01               	movlw	1
 30323  000F4A  EC52  F030         	call	_Uart_WriteConstString
 30324                           
 30325                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 30326  000F4E  0E07               	movlw	7
 30327  000F50  0101               	movlb	1	; () banked
 30328  000F52  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30329                           
 30330                           ; BSR set to: 1
 30331                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 30332  000F54  0E05               	movlw	5
 30333  000F56  0100               	movlb	0	; () banked
 30334  000F58  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30335                           
 30336                           ; BSR set to: 0
 30337                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 30338  000F5A  0EF5               	movlw	low _ConnTimeout
 30339  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30340  000F5E  0E02               	movlw	high _ConnTimeout
 30341  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30342  000F62  0E20               	movlw	32
 30343  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30344  000F66  0E4E               	movlw	78
 30345  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30346  000F6A  0E00               	movlw	0
 30347  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30348  000F6E  0E00               	movlw	0
 30349  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30350  000F72  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 30351  000F76  D01C               	goto	l15553
 30352  000F78                     
 30353                           ; BSR set to: 1
 30354                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 30355                           
 30356                           ; BSR set to: 1
 30357  000F78  0E59               	movlw	low STR_11
 30358  000F7A  0100               	movlb	0	; () banked
 30359  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30360  000F7E  0EFF               	movlw	high STR_11
 30361  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30362  000F82  0E01               	movlw	1
 30363  000F84  EC52  F030         	call	_Uart_WriteConstString
 30364                           
 30365                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 30366  000F88  0E08               	movlw	8
 30367  000F8A  0101               	movlb	1	; () banked
 30368  000F8C  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30369                           
 30370                           ; BSR set to: 1
 30371                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 30372  000F8E  0E05               	movlw	5
 30373  000F90  0100               	movlb	0	; () banked
 30374  000F92  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30375                           
 30376                           ; BSR set to: 0
 30377                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 30378  000F94  0EF5               	movlw	low _ConnTimeout
 30379  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30380  000F98  0E02               	movlw	high _ConnTimeout
 30381  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30382  000F9C  0E20               	movlw	32
 30383  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30384  000FA0  0E4E               	movlw	78
 30385  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30386  000FA4  0E00               	movlw	0
 30387  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30388  000FA8  0E00               	movlw	0
 30389  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30390  000FAC  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 30391  000FB0                     l15553:
 30392                           
 30393                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 30394  000FB0  0E01               	movlw	1
 30395  000FB2  0101               	movlb	1	; () banked
 30396  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30397                           
 30398                           ;mdm_gsm_gprs_http.c: 201: break;
 30399  000FB6  D07C               	goto	l1222
 30400  000FB8                     
 30401                           ; BSR set to: 1
 30402                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 30403                           
 30404                           ; BSR set to: 1
 30405  000FB8  0E02               	movlw	2
 30406  000FBA  D05A               	goto	L95
 30407  000FBC                     
 30408                           ; BSR set to: 1
 30409                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 30410                           
 30411                           ; BSR set to: 1
 30412  000FBC  0E3A               	movlw	low _NewStringReceived
 30413  000FBE  0100               	movlb	0	; () banked
 30414  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30415  000FC2  0E00               	movlw	high _NewStringReceived
 30416  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30417  000FC6  EC9B  F032         	call	_ReceiveEvt	;wreg free
 30418  000FCA  0900               	iorlw	0
 30419  000FCC  B4D8               	btfsc	status,2,c
 30420  000FCE  D018               	goto	l1232
 30421                           
 30422                           ;mdm_gsm_gprs_http.c: 212: {
 30423                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 30424  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 30425  000FD4  0A4F               	xorlw	79
 30426  000FD6  A4D8               	btfss	status,2,c
 30427  000FD8  D06B               	goto	l1222
 30428  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30429  000FDE  0A4B               	xorlw	75
 30430  000FE0  A4D8               	btfss	status,2,c
 30431  000FE2  D066               	goto	l1222
 30432                           
 30433                           ;mdm_gsm_gprs_http.c: 215: {
 30434                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 30435  000FE4  C0D1  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30436                           
 30437                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 30438  000FE8  0E58               	movlw	low _RxBuffer
 30439  000FEA  0100               	movlb	0	; () banked
 30440  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30441  000FEE  0E0C               	movlw	high _RxBuffer
 30442  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30443  000FF2  0E01               	movlw	1
 30444  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30445  000FF6  0E90               	movlw	144
 30446  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30447  000FFA  ECBD  F031         	call	_ClearBuffer	;wreg free
 30448                           
 30449                           ;mdm_gsm_gprs_http.c: 220: }
 30450                           ;mdm_gsm_gprs_http.c: 221: }
 30451  000FFE  D058               	goto	l1222
 30452  001000                     l1232:
 30453                           
 30454                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30455  001000  0EF5               	movlw	low _ConnTimeout
 30456  001002  0100               	movlb	0	; () banked
 30457  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30458  001006  0E02               	movlw	high _ConnTimeout
 30459  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30460  00100A  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30461  00100E  D029               	goto	L60
 30462  001010                     
 30463                           ; BSR set to: 1
 30464                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 30465                           
 30466                           ; BSR set to: 1
 30467  001010  0E3A               	movlw	low _NewStringReceived
 30468  001012  0100               	movlb	0	; () banked
 30469  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30470  001016  0E00               	movlw	high _NewStringReceived
 30471  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30472  00101A  EC9B  F032         	call	_ReceiveEvt	;wreg free
 30473  00101E  0900               	iorlw	0
 30474  001020  B4D8               	btfsc	status,2,c
 30475  001022  D018               	goto	l1237
 30476                           
 30477                           ;mdm_gsm_gprs_http.c: 232: {
 30478                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 30479  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 30480  001028  0A2B               	xorlw	43
 30481  00102A  A4D8               	btfss	status,2,c
 30482  00102C  D041               	goto	l1222
 30483  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30484  001032  0A53               	xorlw	83
 30485  001034  A4D8               	btfss	status,2,c
 30486  001036  D03C               	goto	l1222
 30487                           
 30488                           ;mdm_gsm_gprs_http.c: 235: {
 30489                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 30490  001038  C0D1  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30491                           
 30492                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 30493  00103C  0E58               	movlw	low _RxBuffer
 30494  00103E  0100               	movlb	0	; () banked
 30495  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30496  001042  0E0C               	movlw	high _RxBuffer
 30497  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30498  001046  0E01               	movlw	1
 30499  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30500  00104A  0E90               	movlw	144
 30501  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30502  00104E  ECBD  F031         	call	_ClearBuffer	;wreg free
 30503                           
 30504                           ;mdm_gsm_gprs_http.c: 240: }
 30505                           ;mdm_gsm_gprs_http.c: 241: }
 30506  001052  D02E               	goto	l1222
 30507  001054                     l1237:
 30508                           
 30509                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30510  001054  0EF5               	movlw	low _ConnTimeout
 30511  001056  0100               	movlb	0	; () banked
 30512  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30513  00105A  0E02               	movlw	high _ConnTimeout
 30514  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30515  00105E  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30516  001062                     L60:
 30517  001062  06E8               	decf	wreg,f,c
 30518  001064  A4D8               	btfss	status,2,c
 30519  001066  D024               	goto	l1222
 30520                           
 30521                           ;mdm_gsm_gprs_http.c: 243: {
 30522                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 30523  001068  0E06               	movlw	6
 30524  00106A                     L96:
 30525  00106A  0101               	movlb	1	; () banked
 30526  00106C  D003               	goto	L59
 30527  00106E                     
 30528                           ; BSR set to: 1
 30529                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 30530                           
 30531                           ; BSR set to: 1
 30532  00106E  0E03               	movlw	3
 30533  001070                     L95:
 30534  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30535                           
 30536                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 30537  001072  0E00               	movlw	0
 30538  001074                     L59:
 30539  001074  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30540                           
 30541                           ; BSR set to: 1
 30542                           ;mdm_gsm_gprs_http.c: 257: }
 30543                           
 30544                           ; BSR set to: 1
 30545                           ;mdm_gsm_gprs_http.c: 256: break;
 30546                           
 30547                           ;mdm_gsm_gprs_http.c: 255: default:
 30548                           
 30549                           ;mdm_gsm_gprs_http.c: 253: break;
 30550  001076  D01C               	goto	l1222
 30551  001078                     l1219:
 30552                           
 30553                           ; BSR set to: 1
 30554                           
 30555                           ; BSR set to: 1
 30556  001078  51EA               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 30557                           
 30558                           ; Switch size 1, requested type "space"
 30559                           ; Number of cases is 9, Range of values is 0 to 8
 30560                           ; switch strategies available:
 30561                           ; Name         Instructions Cycles
 30562                           ; simple_byte           28    15 (average)
 30563                           ;	Chosen strategy is simple_byte
 30564  00107A  0A00               	xorlw	0	; case 0
 30565  00107C  B4D8               	btfsc	status,2,c
 30566  00107E  D6A8               	goto	l1220
 30567  001080  0A01               	xorlw	1	; case 1
 30568  001082  B4D8               	btfsc	status,2,c
 30569  001084  D6B1               	goto	l1223
 30570  001086  0A03               	xorlw	3	; case 2
 30571  001088  B4D8               	btfsc	status,2,c
 30572  00108A  D6CB               	goto	l1224
 30573  00108C  0A01               	xorlw	1	; case 3
 30574  00108E  B4D8               	btfsc	status,2,c
 30575  001090  D756               	goto	l1228
 30576  001092  0A07               	xorlw	7	; case 4
 30577  001094  B4D8               	btfsc	status,2,c
 30578  001096  D770               	goto	l1229
 30579  001098  0A01               	xorlw	1	; case 5
 30580  00109A  B4D8               	btfsc	status,2,c
 30581  00109C  D78D               	goto	l1230
 30582  00109E  0A03               	xorlw	3	; case 6
 30583  0010A0  B4D8               	btfsc	status,2,c
 30584  0010A2  D7E5               	goto	l1241
 30585  0010A4  0A01               	xorlw	1	; case 7
 30586  0010A6  B4D8               	btfsc	status,2,c
 30587  0010A8  D789               	goto	l1231
 30588  0010AA  0A0F               	xorlw	15	; case 8
 30589  0010AC  B4D8               	btfsc	status,2,c
 30590  0010AE  D7B0               	goto	l1236
 30591  0010B0                     l1222:
 30592                           
 30593                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 30594                           
 30595                           ; BSR set to: 1
 30596  0010B0  0101               	movlb	1	; () banked
 30597  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 30598  0010B4  0012               	return	
 30599  0010B6                     __end_of_InitGprsNetwork:
 30600                           	opt stack 0
 30601                           tosu	equ	0xFFF
 30602                           tosh	equ	0xFFE
 30603                           tosl	equ	0xFFD
 30604                           pclath	equ	0xFFA
 30605                           tblptru	equ	0xFF8
 30606                           tblptrh	equ	0xFF7
 30607                           tblptrl	equ	0xFF6
 30608                           tablat	equ	0xFF5
 30609                           prodh	equ	0xFF4
 30610                           prodl	equ	0xFF3
 30611                           intcon	equ	0xFF2
 30612                           intcon2	equ	0xFF1
 30613                           intcon3	equ	0xFF0
 30614                           indf0	equ	0xFEF
 30615                           postinc0	equ	0xFEE
 30616                           plusw0	equ	0xFEB
 30617                           fsr0h	equ	0xFEA
 30618                           fsr0l	equ	0xFE9
 30619                           wreg	equ	0xFE8
 30620                           indf1	equ	0xFE7
 30621                           postinc1	equ	0xFE6
 30622                           postdec1	equ	0xFE5
 30623                           plusw1	equ	0xFE3
 30624                           fsr1h	equ	0xFE2
 30625                           fsr1l	equ	0xFE1
 30626                           indf2	equ	0xFDF
 30627                           postinc2	equ	0xFDE
 30628                           postdec2	equ	0xFDD
 30629                           plusw2	equ	0xFDB
 30630                           fsr2h	equ	0xFDA
 30631                           fsr2l	equ	0xFD9
 30632                           status	equ	0xFD8
 30633                           
 30634 ;; *************** function _HttpGetMethod *****************
 30635 ;; Defined at:
 30636 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30637 ;; Parameters:    Size  Location     Type
 30638 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 30639 ;;		 -> HttpGetDataLocal(5), 
 30640 ;; Auto vars:     Size  Location     Type
 30641 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 30642 ;;  Index           1  200[BANK1 ] unsigned char 
 30643 ;; Return value:  Size  Location     Type
 30644 ;;                  1    wreg      enum E8925
 30645 ;; Registers used:
 30646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30647 ;; Tracked objects:
 30648 ;;		On entry : 0/0
 30649 ;;		On exit  : 0/0
 30650 ;;		Unchanged: 0/0
 30651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30652 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30653 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30654 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30655 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30656 ;;Total ram usage:      207 bytes
 30657 ;; Hardware stack levels used:    1
 30658 ;; Hardware stack levels required when called:   14
 30659 ;; This function calls:
 30660 ;;		_ClearBuffer
 30661 ;;		_OsTmr_GetTimerStatus
 30662 ;;		_OsTmr_StartTimer
 30663 ;;		_ReceiveEvt
 30664 ;;		_StringCopy
 30665 ;;		_Uart_WriteConstString
 30666 ;;		_Uart_WriteString
 30667 ;; This function is called by:
 30668 ;;		_MdmHttp_MainTask
 30669 ;; This function uses a non-reentrant model
 30670 ;;
 30671                           
 30672                           	psect	text143
 30673  0005EC                     __ptext143:
 30674                           	opt stack 0
 30675  0005EC                     _HttpGetMethod:
 30676                           	opt stack 13
 30677                           
 30678                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 30679                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 30680                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 30681                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 30682                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 30683                           
 30684                           ; BSR set to: 1
 30685                           ;incstack = 0
 30686  0005EC  0E00               	movlw	0
 30687  0005EE  0101               	movlb	1	; () banked
 30688  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 30689                           
 30690                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 30691  0005F2  D230               	goto	l1252
 30692  0005F4                     
 30693                           ; BSR set to: 1
 30694                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 30695                           
 30696                           ; BSR set to: 1
 30697  0005F4  0EDA               	movlw	low _GetMethod
 30698  0005F6  0100               	movlb	0	; () banked
 30699  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30700  0005FA  0E00               	movlw	high _GetMethod
 30701  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30702  0005FE  EC9B  F032         	call	_ReceiveEvt	;wreg free
 30703  000602  0900               	iorlw	0
 30704  000604  B4D8               	btfsc	status,2,c
 30705  000606  D257               	goto	l1255
 30706                           
 30707                           ;mdm_gsm_gprs_http.c: 284: {
 30708                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 30709  000608  0E01               	movlw	1
 30710  00060A  D18C               	goto	L62
 30711  00060C                     
 30712                           ; BSR set to: 1
 30713                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 30714                           
 30715                           ; BSR set to: 1
 30716  00060C  0E9D               	movlw	low STR_12
 30717  00060E  0100               	movlb	0	; () banked
 30718  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30719  000612  0EFF               	movlw	high STR_12
 30720  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30721  000616  0E01               	movlw	1
 30722  000618  EC52  F030         	call	_Uart_WriteConstString
 30723                           
 30724                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 30725  00061C  0E0A               	movlw	10
 30726  00061E  0101               	movlb	1	; () banked
 30727  000620  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30728                           
 30729                           ; BSR set to: 1
 30730                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 30731  000622  0E02               	movlw	2
 30732  000624  0100               	movlb	0	; () banked
 30733  000626  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30734                           
 30735                           ; BSR set to: 0
 30736                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 30737  000628  0EF5               	movlw	low _ConnTimeout
 30738  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30739  00062C  0E02               	movlw	high _ConnTimeout
 30740  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30741  000630  0E20               	movlw	32
 30742  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30743  000634  0E4E               	movlw	78
 30744  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30745  000638  0E00               	movlw	0
 30746  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30747  00063C  0E00               	movlw	0
 30748  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30749  000640  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 30750  000644  D1AF               	goto	l15719
 30751  000646                     
 30752                           ; BSR set to: 1
 30753                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 30754                           
 30755                           ; BSR set to: 1
 30756  000646  0E67               	movlw	low STR_13
 30757  000648  0100               	movlb	0	; () banked
 30758  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30759  00064C  0EFF               	movlw	high STR_13
 30760  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30761  000650  0E01               	movlw	1
 30762  000652  EC52  F030         	call	_Uart_WriteConstString
 30763                           
 30764                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 30765  000656  0E0A               	movlw	10
 30766  000658  0101               	movlb	1	; () banked
 30767  00065A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30768                           
 30769                           ; BSR set to: 1
 30770                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 30771  00065C  0E03               	movlw	3
 30772  00065E  0100               	movlb	0	; () banked
 30773  000660  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30774                           
 30775                           ; BSR set to: 0
 30776                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 30777  000662  0EF5               	movlw	low _ConnTimeout
 30778  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30779  000666  0E02               	movlw	high _ConnTimeout
 30780  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30781  00066A  0E20               	movlw	32
 30782  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30783  00066E  0E4E               	movlw	78
 30784  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30785  000672  0E00               	movlw	0
 30786  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30787  000676  0E00               	movlw	0
 30788  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30789  00067A  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 30790  00067E  D192               	goto	l15719
 30791  000680                     
 30792                           ; BSR set to: 1
 30793                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 30794                           
 30795                           ; BSR set to: 1
 30796  000680  0EA8               	movlw	low STR_14
 30797  000682  0100               	movlb	0	; () banked
 30798  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30799  000686  0EFE               	movlw	high STR_14
 30800  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30801  00068A  0E01               	movlw	1
 30802  00068C  EC52  F030         	call	_Uart_WriteConstString
 30803                           
 30804                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 30805  000690  0E0A               	movlw	10
 30806  000692  0101               	movlb	1	; () banked
 30807  000694  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30808                           
 30809                           ; BSR set to: 1
 30810                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 30811  000696  0E04               	movlw	4
 30812  000698  0100               	movlb	0	; () banked
 30813  00069A  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30814                           
 30815                           ; BSR set to: 0
 30816                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 30817  00069C  0EF5               	movlw	low _ConnTimeout
 30818  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30819  0006A0  0E02               	movlw	high _ConnTimeout
 30820  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30821  0006A4  0E20               	movlw	32
 30822  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30823  0006A8  0E4E               	movlw	78
 30824  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30825  0006AC  0E00               	movlw	0
 30826  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30827  0006B0  0E00               	movlw	0
 30828  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30829  0006B4  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 30830  0006B8  D175               	goto	l15719
 30831  0006BA                     
 30832                           ; BSR set to: 1
 30833                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 30834                           
 30835                           ; BSR set to: 1
 30836  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 30837  0006BC  0100               	movlb	0	; () banked
 30838  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30839  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 30840  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30841  0006C4  0E00               	movlw	0
 30842  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30843  0006C8  0EC8               	movlw	200
 30844  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30845  0006CC  ECBD  F031         	call	_ClearBuffer	;wreg free
 30846                           
 30847                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 30848  0006D0  0EE6               	movlw	low STR_15
 30849  0006D2  0100               	movlb	0	; () banked
 30850  0006D4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30851  0006D6  0EFE               	movlw	high STR_15
 30852  0006D8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30853  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 30854  0006DC  6F87               	movwf	StringCopy@DestStr& (0+255),b
 30855  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 30856  0006E0  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 30857  0006E2  0E00               	movlw	0
 30858  0006E4  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30859  0006E6  0E13               	movlw	19
 30860  0006E8  6F89               	movwf	StringCopy@Len& (0+255),b
 30861  0006EA  EC6C  F02B         	call	_StringCopy	;wreg free
 30862                           
 30863                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 30864  0006EE  0E00               	movlw	0
 30865  0006F0  0101               	movlb	1	; () banked
 30866  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 30867  0006F4  D024               	goto	l1260
 30868  0006F6                     
 30869                           ; BSR set to: 1
 30870                           ;mdm_gsm_gprs_http.c: 332: {
 30871                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 30872                           
 30873                           ; BSR set to: 1
 30874  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30875  0006F8  0D01               	mullw	1
 30876  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 30877  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 30878  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 30879  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 30880  00070A  50F3               	movf	prodl,w,c
 30881  00070C  0100               	movlb	0	; () banked
 30882  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30883  000710  6ED9               	movwf	fsr2l,c
 30884  000712  50F4               	movf	prodh,w,c
 30885  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30886  000716  6EDA               	movwf	fsr2h,c
 30887  000718  0101               	movlb	1	; () banked
 30888  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30889  00071C  0100               	movlb	0	; () banked
 30890  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 30891  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 30892  000722  0E13               	movlw	19
 30893  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 30894  000726  0E00               	movlw	0
 30895  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 30896  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 30897  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 30898  00072E  6EE1               	movwf	fsr1l,c
 30899  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 30900  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 30901  000734  6EE2               	movwf	fsr1h,c
 30902  000736  CFDF FFE7          	movff	indf2,indf1
 30903                           
 30904                           ; BSR set to: 0
 30905  00073A  0101               	movlb	1	; () banked
 30906  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 30907  00073E                     l1260:
 30908                           
 30909                           ; BSR set to: 1
 30910                           
 30911                           ; BSR set to: 1
 30912  00073E  0100               	movlb	0	; () banked
 30913  000740  EE20 F002          	lfsr	2,2
 30914  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 30915  000746  26D9               	addwf	fsr2l,f,c
 30916  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 30917  00074A  22DA               	addwfc	fsr2h,f,c
 30918  00074C  50DE               	movf	postinc2,w,c
 30919  00074E  0101               	movlb	1	; () banked
 30920  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 30921  000752  A0D8               	btfss	status,0,c
 30922  000754  D7D0               	goto	l1261
 30923                           
 30924                           ; BSR set to: 1
 30925                           ;mdm_gsm_gprs_http.c: 334: }
 30926                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 30927                           
 30928                           ; BSR set to: 1
 30929  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30930  000758  0100               	movlb	0	; () banked
 30931  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 30932  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 30933  00075E  0E13               	movlw	19
 30934  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 30935  000762  0E00               	movlw	0
 30936  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 30937  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 30938  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30939  00076A  6ED9               	movwf	fsr2l,c
 30940  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 30941  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30942  000770  6EDA               	movwf	fsr2h,c
 30943  000772  0E22               	movlw	34
 30944  000774  6EDF               	movwf	indf2,c
 30945                           
 30946                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 30947  000776  0101               	movlb	1	; () banked
 30948  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30949  00077A  0100               	movlb	0	; () banked
 30950  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 30951  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 30952  000780  0E14               	movlw	20
 30953  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 30954  000784  0E00               	movlw	0
 30955  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 30956  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 30957  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30958  00078C  6ED9               	movwf	fsr2l,c
 30959  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 30960  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30961  000792  6EDA               	movwf	fsr2h,c
 30962  000794  0E0D               	movlw	13
 30963  000796  6EDF               	movwf	indf2,c
 30964                           
 30965                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 30966  000798  0101               	movlb	1	; () banked
 30967  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30968  00079C  0100               	movlb	0	; () banked
 30969  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 30970  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 30971  0007A2  0E15               	movlw	21
 30972  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 30973  0007A6  0E00               	movlw	0
 30974  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 30975  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 30976  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30977  0007AE  6ED9               	movwf	fsr2l,c
 30978  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 30979  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30980  0007B4  6EDA               	movwf	fsr2h,c
 30981  0007B6  0E00               	movlw	0
 30982  0007B8  6EDF               	movwf	indf2,c
 30983                           
 30984                           ; BSR set to: 0
 30985                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 30986  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 30987  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 30988  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 30989  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 30990  0007C2  0E01               	movlw	1
 30991  0007C4  ECF2  F030         	call	_Uart_WriteString
 30992                           
 30993                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 30994  0007C8  0E0A               	movlw	10
 30995  0007CA  0101               	movlb	1	; () banked
 30996  0007CC  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30997                           
 30998                           ; BSR set to: 1
 30999                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 31000  0007CE  0E05               	movlw	5
 31001  0007D0  0100               	movlb	0	; () banked
 31002  0007D2  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31003                           
 31004                           ; BSR set to: 0
 31005                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 31006  0007D4  0EF5               	movlw	low _ConnTimeout
 31007  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31008  0007D8  0E02               	movlw	high _ConnTimeout
 31009  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31010  0007DC  0E20               	movlw	32
 31011  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31012  0007E0  0E4E               	movlw	78
 31013  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31014  0007E4  0E00               	movlw	0
 31015  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31016  0007E8  0E00               	movlw	0
 31017  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31018  0007EC  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 31019  0007F0  D0D9               	goto	l15719
 31020  0007F2                     
 31021                           ; BSR set to: 1
 31022                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 31023                           
 31024                           ; BSR set to: 1
 31025  0007F2  0E1E               	movlw	low STR_16
 31026  0007F4  0100               	movlb	0	; () banked
 31027  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31028  0007F8  0EFF               	movlw	high STR_16
 31029  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31030  0007FC  0E01               	movlw	1
 31031  0007FE  EC52  F030         	call	_Uart_WriteConstString
 31032                           
 31033                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 31034  000802  0E0A               	movlw	10
 31035  000804  0101               	movlb	1	; () banked
 31036  000806  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31037                           
 31038                           ; BSR set to: 1
 31039                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 31040  000808  0E06               	movlw	6
 31041  00080A  0100               	movlb	0	; () banked
 31042  00080C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31043                           
 31044                           ; BSR set to: 0
 31045                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 31046  00080E  0EF5               	movlw	low _ConnTimeout
 31047  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31048  000812  0E02               	movlw	high _ConnTimeout
 31049  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31050  000816  0E20               	movlw	32
 31051  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31052  00081A  0E4E               	movlw	78
 31053  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31054  00081E  0E00               	movlw	0
 31055  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31056  000822  0E00               	movlw	0
 31057  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31058  000826  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 31059                           
 31060                           ;mdm_gsm_gprs_http.c: 358: break;
 31061  00082A  D145               	goto	l1255
 31062  00082C                     
 31063                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 31064  00082C  0E07               	movlw	7
 31065  00082E  0101               	movlb	1	; () banked
 31066  000830  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31067                           
 31068                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 31069  000832  0E09               	movlw	9
 31070  000834  0100               	movlb	0	; () banked
 31071  000836  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31072                           
 31073                           ; BSR set to: 0
 31074                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 31075  000838  0EF5               	movlw	low _ConnTimeout
 31076  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31077  00083C  0E02               	movlw	high _ConnTimeout
 31078  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31079  000840  0E20               	movlw	32
 31080  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31081  000844  0E4E               	movlw	78
 31082  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31083  000848  0E00               	movlw	0
 31084  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31085  00084C  0E00               	movlw	0
 31086  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31087  000850  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 31088                           
 31089                           ;mdm_gsm_gprs_http.c: 371: break;
 31090  000854  D130               	goto	l1255
 31091  000856                     
 31092                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 31093  000856  0E83               	movlw	low STR_17
 31094  000858  0100               	movlb	0	; () banked
 31095  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31096  00085C  0EFF               	movlw	high STR_17
 31097  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31098  000860  0E01               	movlw	1
 31099  000862  EC52  F030         	call	_Uart_WriteConstString
 31100                           
 31101                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 31102  000866  0E0D               	movlw	13
 31103  000868  0101               	movlb	1	; () banked
 31104  00086A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31105                           
 31106                           ; BSR set to: 1
 31107                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 31108  00086C  0E09               	movlw	9
 31109  00086E  0100               	movlb	0	; () banked
 31110  000870  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31111                           
 31112                           ; BSR set to: 0
 31113                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 31114  000872  0EF5               	movlw	low _ConnTimeout
 31115  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31116  000876  0E02               	movlw	high _ConnTimeout
 31117  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31118  00087A  0E20               	movlw	32
 31119  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31120  00087E  0E4E               	movlw	78
 31121  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31122  000882  0E00               	movlw	0
 31123  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31124  000886  0E00               	movlw	0
 31125  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31126  00088A  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 31127  00088E  D08A               	goto	l15719
 31128  000890                     
 31129                           ; BSR set to: 1
 31130                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 31131                           
 31132                           ; BSR set to: 1
 31133  000890  0E90               	movlw	low STR_18
 31134  000892  0100               	movlb	0	; () banked
 31135  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31136  000896  0EFF               	movlw	high STR_18
 31137  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31138  00089A  0E01               	movlw	1
 31139  00089C  EC52  F030         	call	_Uart_WriteConstString
 31140                           
 31141                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 31142  0008A0  0E0A               	movlw	10
 31143  0008A2  0101               	movlb	1	; () banked
 31144  0008A4  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31145                           
 31146                           ; BSR set to: 1
 31147                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 31148  0008A6  0E0E               	movlw	14
 31149  0008A8  0100               	movlb	0	; () banked
 31150  0008AA  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31151                           
 31152                           ; BSR set to: 0
 31153                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 31154  0008AC  0EF5               	movlw	low _ConnTimeout
 31155  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31156  0008B0  0E02               	movlw	high _ConnTimeout
 31157  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31158  0008B4  0E20               	movlw	32
 31159  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31160  0008B8  0E4E               	movlw	78
 31161  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31162  0008BC  0E00               	movlw	0
 31163  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31164  0008C0  0E00               	movlw	0
 31165  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31166  0008C4  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 31167  0008C8  D06D               	goto	l15719
 31168  0008CA                     
 31169                           ; BSR set to: 1
 31170                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 31171                           
 31172                           ; BSR set to: 1
 31173  0008CA  0E3A               	movlw	low _NewStringReceived
 31174  0008CC  0100               	movlb	0	; () banked
 31175  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31176  0008D0  0E00               	movlw	high _NewStringReceived
 31177  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31178  0008D4  EC9B  F032         	call	_ReceiveEvt	;wreg free
 31179  0008D8  0900               	iorlw	0
 31180  0008DA  B4D8               	btfsc	status,2,c
 31181  0008DC  D018               	goto	l1268
 31182                           
 31183                           ;mdm_gsm_gprs_http.c: 400: {
 31184                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 31185  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 31186  0008E2  0A4F               	xorlw	79
 31187  0008E4  A4D8               	btfss	status,2,c
 31188  0008E6  D0E7               	goto	l1255
 31189  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31190  0008EC  0A4B               	xorlw	75
 31191  0008EE  A4D8               	btfss	status,2,c
 31192  0008F0  D0E2               	goto	l1255
 31193                           
 31194                           ;mdm_gsm_gprs_http.c: 403: {
 31195                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 31196  0008F2  C0D0  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31197                           
 31198                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 31199  0008F6  0E58               	movlw	low _RxBuffer
 31200  0008F8  0100               	movlb	0	; () banked
 31201  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31202  0008FC  0E0C               	movlw	high _RxBuffer
 31203  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31204  000900  0E01               	movlw	1
 31205  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31206  000904  0E90               	movlw	144
 31207  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31208  000908  ECBD  F031         	call	_ClearBuffer	;wreg free
 31209                           
 31210                           ;mdm_gsm_gprs_http.c: 408: }
 31211                           ;mdm_gsm_gprs_http.c: 409: }
 31212  00090C  D0D4               	goto	l1255
 31213  00090E                     l1268:
 31214                           
 31215                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31216  00090E  0EF5               	movlw	low _ConnTimeout
 31217  000910  0100               	movlb	0	; () banked
 31218  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31219  000914  0E02               	movlw	high _ConnTimeout
 31220  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31221  000918  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 31222  00091C                     L63:
 31223  00091C  06E8               	decf	wreg,f,c
 31224  00091E  A4D8               	btfss	status,2,c
 31225  000920  D0CA               	goto	l1255
 31226                           
 31227                           ;mdm_gsm_gprs_http.c: 411: {
 31228                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 31229  000922  0E0F               	movlw	15
 31230  000924                     L62:
 31231  000924  0101               	movlb	1	; () banked
 31232  000926  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31233                           
 31234                           ; BSR set to: 1
 31235                           ;mdm_gsm_gprs_http.c: 414: }
 31236                           ;mdm_gsm_gprs_http.c: 415: break;
 31237                           
 31238                           ; BSR set to: 1
 31239  000928  D0C6               	goto	l1255
 31240  00092A                     
 31241                           ; BSR set to: 1
 31242                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 31243                           
 31244                           ; BSR set to: 1
 31245  00092A  0E3A               	movlw	low _NewStringReceived
 31246  00092C  0100               	movlb	0	; () banked
 31247  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31248  000930  0E00               	movlw	high _NewStringReceived
 31249  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31250  000934  EC9B  F032         	call	_ReceiveEvt	;wreg free
 31251  000938  0900               	iorlw	0
 31252  00093A  B4D8               	btfsc	status,2,c
 31253  00093C  D018               	goto	l1273
 31254                           
 31255                           ;mdm_gsm_gprs_http.c: 420: {
 31256                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31257  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 31258  000942  0A2B               	xorlw	43
 31259  000944  A4D8               	btfss	status,2,c
 31260  000946  D0B7               	goto	l1255
 31261  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31262  00094C  0A48               	xorlw	72
 31263  00094E  A4D8               	btfss	status,2,c
 31264  000950  D0B2               	goto	l1255
 31265                           
 31266                           ;mdm_gsm_gprs_http.c: 423: {
 31267                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 31268  000952  C0D0  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31269                           
 31270                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 31271  000956  0E58               	movlw	low _RxBuffer
 31272  000958  0100               	movlb	0	; () banked
 31273  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31274  00095C  0E0C               	movlw	high _RxBuffer
 31275  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31276  000960  0E01               	movlw	1
 31277  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31278  000964  0E90               	movlw	144
 31279  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31280  000968  ECBD  F031         	call	_ClearBuffer	;wreg free
 31281                           
 31282                           ;mdm_gsm_gprs_http.c: 428: }
 31283                           ;mdm_gsm_gprs_http.c: 429: }
 31284  00096C  D0A4               	goto	l1255
 31285  00096E                     l1273:
 31286                           
 31287                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31288  00096E  0EF5               	movlw	low _ConnTimeout
 31289  000970  0100               	movlb	0	; () banked
 31290  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31291  000974  0E02               	movlw	high _ConnTimeout
 31292  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31293  000978  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 31294  00097C  D7CF               	goto	L63
 31295  00097E                     
 31296                           ; BSR set to: 1
 31297                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 31298                           
 31299                           ; BSR set to: 1
 31300  00097E  0E0C               	movlw	12
 31301  000980  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31302                           
 31303                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 31304  000982  0E05               	movlw	5
 31305  000984  0100               	movlb	0	; () banked
 31306  000986  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31307                           
 31308                           ; BSR set to: 0
 31309                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 31310  000988  0EDD               	movlw	low _ConnWait
 31311  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31312  00098C  0E03               	movlw	high _ConnWait
 31313  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31314  000990  0EE8               	movlw	232
 31315  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31316  000994  0E03               	movlw	3
 31317  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31318  000998  0E00               	movlw	0
 31319  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31320  00099C  0E00               	movlw	0
 31321  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31322  0009A0  ECCC  F02B         	call	_OsTmr_StartTimer	;wreg free
 31323  0009A4                     l15719:
 31324                           
 31325                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 31326  0009A4  0E01               	movlw	1
 31327  0009A6  0101               	movlb	1	; () banked
 31328  0009A8  D053               	goto	L65
 31329  0009AA                     
 31330                           ; BSR set to: 1
 31331                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 31332                           
 31333                           ; BSR set to: 1
 31334  0009AA  0EDD               	movlw	low _ConnWait
 31335  0009AC  0100               	movlb	0	; () banked
 31336  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31337  0009B0  0E03               	movlw	high _ConnWait
 31338  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31339  0009B4  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 31340  0009B8  06E8               	decf	wreg,f,c
 31341  0009BA  A4D8               	btfss	status,2,c
 31342  0009BC  D07C               	goto	l1255
 31343                           
 31344                           ;mdm_gsm_gprs_http.c: 450: {
 31345                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 31346  0009BE  C0D0  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31347                           
 31348                           ;mdm_gsm_gprs_http.c: 453: }
 31349                           ;mdm_gsm_gprs_http.c: 454: break;
 31350  0009C2  D079               	goto	l1255
 31351  0009C4                     
 31352                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 31353  0009C4  0E3A               	movlw	low _NewStringReceived
 31354  0009C6  0100               	movlb	0	; () banked
 31355  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31356  0009CA  0E00               	movlw	high _NewStringReceived
 31357  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31358  0009CE  EC9B  F032         	call	_ReceiveEvt	;wreg free
 31359  0009D2  0900               	iorlw	0
 31360  0009D4  B4D8               	btfsc	status,2,c
 31361  0009D6  D02D               	goto	l1281
 31362                           
 31363                           ;mdm_gsm_gprs_http.c: 459: {
 31364                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31365  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 31366  0009DC  0A2B               	xorlw	43
 31367  0009DE  A4D8               	btfss	status,2,c
 31368  0009E0  D06A               	goto	l1255
 31369  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31370  0009E6  0A48               	xorlw	72
 31371  0009E8  A4D8               	btfss	status,2,c
 31372  0009EA  D065               	goto	l1255
 31373                           
 31374                           ;mdm_gsm_gprs_http.c: 462: {
 31375                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 31376  0009EC  C0D0  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31377                           
 31378                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 31379  0009F0  0E58               	movlw	low _RxBuffer
 31380  0009F2  0100               	movlb	0	; () banked
 31381  0009F4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31382  0009F6  0E0C               	movlw	high _RxBuffer
 31383  0009F8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31384  0009FA  EE20 F003          	lfsr	2,3
 31385  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 31386  000A00  26D9               	addwf	fsr2l,f,c
 31387  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 31388  000A04  22DA               	addwfc	fsr2h,f,c
 31389  000A06  CFDE F087          	movff	postinc2,StringCopy@DestStr
 31390  000A0A  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 31391  000A0E  0E01               	movlw	1
 31392  000A10  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31393  000A12  0E90               	movlw	144
 31394  000A14  6F89               	movwf	StringCopy@Len& (0+255),b
 31395  000A16  EC6C  F02B         	call	_StringCopy	;wreg free
 31396                           
 31397                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 31398  000A1A  0E58               	movlw	low _RxBuffer
 31399  000A1C  0100               	movlb	0	; () banked
 31400  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31401  000A20  0E0C               	movlw	high _RxBuffer
 31402  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31403  000A24  0E01               	movlw	1
 31404  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31405  000A28  0E90               	movlw	144
 31406  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31407  000A2C  ECBD  F031         	call	_ClearBuffer	;wreg free
 31408                           
 31409                           ;mdm_gsm_gprs_http.c: 469: }
 31410                           ;mdm_gsm_gprs_http.c: 470: }
 31411  000A30  D042               	goto	l1255
 31412  000A32                     l1281:
 31413                           
 31414                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31415  000A32  0EF5               	movlw	low _ConnTimeout
 31416  000A34  0100               	movlb	0	; () banked
 31417  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31418  000A38  0E02               	movlw	high _ConnTimeout
 31419  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31420  000A3C  ECFA  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 31421  000A40  D76D               	goto	L63
 31422  000A42                     
 31423                           ; BSR set to: 1
 31424                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 31425                           
 31426                           ; BSR set to: 1
 31427  000A42  0E00               	movlw	0
 31428  000A44  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31429                           
 31430                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 31431  000A46  0E02               	movlw	2
 31432  000A48  D003               	goto	L65
 31433  000A4A                     
 31434                           ; BSR set to: 1
 31435                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 31436                           
 31437                           ; BSR set to: 1
 31438  000A4A  0E00               	movlw	0
 31439  000A4C  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31440                           
 31441                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 31442  000A4E  0E03               	movlw	3
 31443  000A50                     L65:
 31444  000A50  6FE8               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 31445                           
 31446                           ; BSR set to: 1
 31447                           ;mdm_gsm_gprs_http.c: 494: }
 31448                           
 31449                           ; BSR set to: 1
 31450                           ;mdm_gsm_gprs_http.c: 493: break;
 31451                           
 31452                           ;mdm_gsm_gprs_http.c: 492: default:
 31453                           
 31454                           ;mdm_gsm_gprs_http.c: 490: break;
 31455  000A52  D031               	goto	l1255
 31456  000A54                     l1252:
 31457                           
 31458                           ; BSR set to: 1
 31459                           
 31460                           ; BSR set to: 1
 31461  000A54  51E9               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 31462                           
 31463                           ; Switch size 1, requested type "space"
 31464                           ; Number of cases is 16, Range of values is 0 to 15
 31465                           ; switch strategies available:
 31466                           ; Name         Instructions Cycles
 31467                           ; simple_byte           49    25 (average)
 31468                           ;	Chosen strategy is simple_byte
 31469  000A56  0A00               	xorlw	0	; case 0
 31470  000A58  B4D8               	btfsc	status,2,c
 31471  000A5A  D5CC               	goto	l1253
 31472  000A5C  0A01               	xorlw	1	; case 1
 31473  000A5E  B4D8               	btfsc	status,2,c
 31474  000A60  D5D5               	goto	l1256
 31475  000A62  0A03               	xorlw	3	; case 2
 31476  000A64  B4D8               	btfsc	status,2,c
 31477  000A66  D5EF               	goto	l1257
 31478  000A68  0A01               	xorlw	1	; case 3
 31479  000A6A  B4D8               	btfsc	status,2,c
 31480  000A6C  D609               	goto	l1258
 31481  000A6E  0A07               	xorlw	7	; case 4
 31482  000A70  B4D8               	btfsc	status,2,c
 31483  000A72  D623               	goto	l1259
 31484  000A74  0A01               	xorlw	1	; case 5
 31485  000A76  B4D8               	btfsc	status,2,c
 31486  000A78  D6BC               	goto	l1263
 31487  000A7A  0A03               	xorlw	3	; case 6
 31488  000A7C  B4D8               	btfsc	status,2,c
 31489  000A7E  D6D6               	goto	l1264
 31490  000A80  0A01               	xorlw	1	; case 7
 31491  000A82  B4D8               	btfsc	status,2,c
 31492  000A84  D752               	goto	l1272
 31493  000A86  0A0F               	xorlw	15	; case 8
 31494  000A88  B4D8               	btfsc	status,2,c
 31495  000A8A  D6E5               	goto	l1265
 31496  000A8C  0A01               	xorlw	1	; case 9
 31497  000A8E  B4D8               	btfsc	status,2,c
 31498  000A90  D6FF               	goto	l1266
 31499  000A92  0A03               	xorlw	3	; case 10
 31500  000A94  B4D8               	btfsc	status,2,c
 31501  000A96  D719               	goto	l1267
 31502  000A98  0A01               	xorlw	1	; case 11
 31503  000A9A  B4D8               	btfsc	status,2,c
 31504  000A9C  D770               	goto	l1277
 31505  000A9E  0A07               	xorlw	7	; case 12
 31506  000AA0  B4D8               	btfsc	status,2,c
 31507  000AA2  D783               	goto	l1278
 31508  000AA4  0A01               	xorlw	1	; case 13
 31509  000AA6  B4D8               	btfsc	status,2,c
 31510  000AA8  D78D               	goto	l1280
 31511  000AAA  0A03               	xorlw	3	; case 14
 31512  000AAC  B4D8               	btfsc	status,2,c
 31513  000AAE  D7C9               	goto	l1285
 31514  000AB0  0A01               	xorlw	1	; case 15
 31515  000AB2  B4D8               	btfsc	status,2,c
 31516  000AB4  D7CA               	goto	l1286
 31517  000AB6                     l1255:
 31518                           
 31519                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 31520                           
 31521                           ; BSR set to: 1
 31522  000AB6  0101               	movlb	1	; () banked
 31523  000AB8  51E8               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 31524  000ABA  0012               	return	
 31525  000ABC                     __end_of_HttpGetMethod:
 31526                           	opt stack 0
 31527                           tosu	equ	0xFFF
 31528                           tosh	equ	0xFFE
 31529                           tosl	equ	0xFFD
 31530                           pclath	equ	0xFFA
 31531                           tblptru	equ	0xFF8
 31532                           tblptrh	equ	0xFF7
 31533                           tblptrl	equ	0xFF6
 31534                           tablat	equ	0xFF5
 31535                           prodh	equ	0xFF4
 31536                           prodl	equ	0xFF3
 31537                           intcon	equ	0xFF2
 31538                           intcon2	equ	0xFF1
 31539                           intcon3	equ	0xFF0
 31540                           indf0	equ	0xFEF
 31541                           postinc0	equ	0xFEE
 31542                           plusw0	equ	0xFEB
 31543                           fsr0h	equ	0xFEA
 31544                           fsr0l	equ	0xFE9
 31545                           wreg	equ	0xFE8
 31546                           indf1	equ	0xFE7
 31547                           postinc1	equ	0xFE6
 31548                           postdec1	equ	0xFE5
 31549                           plusw1	equ	0xFE3
 31550                           fsr1h	equ	0xFE2
 31551                           fsr1l	equ	0xFE1
 31552                           indf2	equ	0xFDF
 31553                           postinc2	equ	0xFDE
 31554                           postdec2	equ	0xFDD
 31555                           plusw2	equ	0xFDB
 31556                           fsr2h	equ	0xFDA
 31557                           fsr2l	equ	0xFD9
 31558                           status	equ	0xFD8
 31559                           
 31560 ;; *************** function _Uart_WriteString *****************
 31561 ;; Defined at:
 31562 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31563 ;; Parameters:    Size  Location     Type
 31564 ;;  Module          1    wreg     unsigned char 
 31565 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 31566 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 31567 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 31568 ;; Auto vars:     Size  Location     Type
 31569 ;;  Module          1   34[BANK0 ] unsigned char 
 31570 ;; Return value:  Size  Location     Type
 31571 ;;                  1    wreg      void 
 31572 ;; Registers used:
 31573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31574 ;; Tracked objects:
 31575 ;;		On entry : 0/0
 31576 ;;		On exit  : 0/0
 31577 ;;		Unchanged: 0/0
 31578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31579 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31580 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31582 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31583 ;;Total ram usage:        3 bytes
 31584 ;; Hardware stack levels used:    1
 31585 ;; Hardware stack levels required when called:   12
 31586 ;; This function calls:
 31587 ;;		_UartTxBufferStatus
 31588 ;;		_UartWriteByte
 31589 ;; This function is called by:
 31590 ;;		_Mdm_SetSmsFormat
 31591 ;;		_InitGprsNetwork
 31592 ;;		_HttpGetMethod
 31593 ;;		_Mdm_PinUnlock
 31594 ;;		_Mdm_MakePhoneCall
 31595 ;; This function uses a non-reentrant model
 31596 ;;
 31597                           
 31598                           	psect	text144
 31599  0061E4                     __ptext144:
 31600                           	opt stack 0
 31601  0061E4                     _Uart_WriteString:
 31602                           	opt stack 12
 31603                           
 31604                           ; BSR set to: 1
 31605                           ;incstack = 0
 31606                           ;Uart_WriteString@Module stored from wreg
 31607  0061E4  0100               	movlb	0	; () banked
 31608  0061E6  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 31609                           
 31610                           ;uart_drv.c: 521: while (*StringToWrite)
 31611  0061E8  D014               	goto	u12070
 31612  0061EA                     
 31613                           ;uart_drv.c: 522: {
 31614                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 31615  0061EA  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31616  0061EE  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31617  0061F2  50DF               	movf	indf2,w,c
 31618  0061F4  0100               	movlb	0	; () banked
 31619  0061F6  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 31620  0061F8  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31621  0061FA  ECE7  F033         	call	_UartWriteByte
 31622                           
 31623                           ;uart_drv.c: 526: StringToWrite++;
 31624  0061FE  0100               	movlb	0	; () banked
 31625  006200  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 31626  006202  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 31627  006204                     
 31628                           ; BSR set to: 0
 31629                           
 31630                           ; BSR set to: 0
 31631  006204  0100               	movlb	0	; () banked
 31632  006206  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31633  006208  ECC5  F02E         	call	_UartTxBufferStatus
 31634  00620C  06E8               	decf	wreg,f,c
 31635  00620E  B4D8               	btfsc	status,2,c
 31636  006210  D7F9               	goto	l709
 31637  006212                     u12070:
 31638  006212  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31639  006216  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31640  00621A  50DF               	movf	indf2,w,c
 31641  00621C  B4D8               	btfsc	status,2,c
 31642  00621E  0012               	return	
 31643  006220  D7E4               	goto	l707
 31644  006222                     __end_of_Uart_WriteString:
 31645                           	opt stack 0
 31646                           tosu	equ	0xFFF
 31647                           tosh	equ	0xFFE
 31648                           tosl	equ	0xFFD
 31649                           pclath	equ	0xFFA
 31650                           tblptru	equ	0xFF8
 31651                           tblptrh	equ	0xFF7
 31652                           tblptrl	equ	0xFF6
 31653                           tablat	equ	0xFF5
 31654                           prodh	equ	0xFF4
 31655                           prodl	equ	0xFF3
 31656                           intcon	equ	0xFF2
 31657                           intcon2	equ	0xFF1
 31658                           intcon3	equ	0xFF0
 31659                           indf0	equ	0xFEF
 31660                           postinc0	equ	0xFEE
 31661                           plusw0	equ	0xFEB
 31662                           fsr0h	equ	0xFEA
 31663                           fsr0l	equ	0xFE9
 31664                           wreg	equ	0xFE8
 31665                           indf1	equ	0xFE7
 31666                           postinc1	equ	0xFE6
 31667                           postdec1	equ	0xFE5
 31668                           plusw1	equ	0xFE3
 31669                           fsr1h	equ	0xFE2
 31670                           fsr1l	equ	0xFE1
 31671                           indf2	equ	0xFDF
 31672                           postinc2	equ	0xFDE
 31673                           postdec2	equ	0xFDD
 31674                           plusw2	equ	0xFDB
 31675                           fsr2h	equ	0xFDA
 31676                           fsr2l	equ	0xFD9
 31677                           status	equ	0xFD8
 31678                           
 31679 ;; *************** function _Uart_WriteConstString *****************
 31680 ;; Defined at:
 31681 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31682 ;; Parameters:    Size  Location     Type
 31683 ;;  Module          1    wreg     unsigned char 
 31684 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 31685 ;;		 -> STR_31(12), STR_30(19), STR_29(14), STR_20(14), 
 31686 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 31687 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 31688 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 31689 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 31690 ;; Auto vars:     Size  Location     Type
 31691 ;;  Module          1   34[BANK0 ] unsigned char 
 31692 ;; Return value:  Size  Location     Type
 31693 ;;                  1    wreg      void 
 31694 ;; Registers used:
 31695 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31696 ;; Tracked objects:
 31697 ;;		On entry : 0/0
 31698 ;;		On exit  : 0/0
 31699 ;;		Unchanged: 0/0
 31700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31704 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31705 ;;Total ram usage:        3 bytes
 31706 ;; Hardware stack levels used:    1
 31707 ;; Hardware stack levels required when called:   12
 31708 ;; This function calls:
 31709 ;;		_UartTxBufferStatus
 31710 ;;		_UartWriteByte
 31711 ;; This function is called by:
 31712 ;;		_CheckModem
 31713 ;;		_ConfigureModem
 31714 ;;		_GetSmsSm
 31715 ;;		_Mdm_HangPhoneCall
 31716 ;;		_InitGprsNetwork
 31717 ;;		_HttpGetMethod
 31718 ;;		_detectCmd
 31719 ;;		_initGprsModem
 31720 ;;		_Mdm_GetPhoneCall
 31721 ;;		_MdmHttp_SetSsl
 31722 ;; This function uses a non-reentrant model
 31723 ;;
 31724                           
 31725                           	psect	text145
 31726  0060A4                     __ptext145:
 31727                           	opt stack 0
 31728  0060A4                     _Uart_WriteConstString:
 31729                           	opt stack 11
 31730                           
 31731                           ;incstack = 0
 31732                           ;Uart_WriteConstString@Module stored from wreg
 31733  0060A4  0100               	movlb	0	; () banked
 31734  0060A6  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 31735                           
 31736                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 31737  0060A8  D015               	goto	u11530
 31738  0060AA                     
 31739                           ;uart_drv.c: 500: {
 31740                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 31741  0060AA  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 31742  0060AE  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 31743  0060B2                     	if	0	;tblptru may be non-zero
 31744  0060B2                     	endif
 31745  0060B2                     	if	0	;tblptru may be non-zero
 31746  0060B2                     	endif
 31747  0060B2  0008               	tblrd		*
 31748  0060B4  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 31749  0060B8  0100               	movlb	0	; () banked
 31750  0060BA  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 31751  0060BC  ECE7  F033         	call	_UartWriteByte
 31752                           
 31753                           ;uart_drv.c: 504: ConstStringToWrite++;
 31754  0060C0  0100               	movlb	0	; () banked
 31755  0060C2  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 31756  0060C4  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 31757  0060C6                     
 31758                           ; BSR set to: 0
 31759                           
 31760                           ; BSR set to: 0
 31761  0060C6  0100               	movlb	0	; () banked
 31762  0060C8  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 31763  0060CA  ECC5  F02E         	call	_UartTxBufferStatus
 31764  0060CE  06E8               	decf	wreg,f,c
 31765  0060D0  B4D8               	btfsc	status,2,c
 31766  0060D2  D7F9               	goto	l700
 31767  0060D4                     u11530:
 31768  0060D4  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 31769  0060D8  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 31770  0060DC                     	if	0	;tblptru may be non-zero
 31771  0060DC                     	endif
 31772  0060DC                     	if	0	;tblptru may be non-zero
 31773  0060DC                     	endif
 31774  0060DC  0008               	tblrd		*
 31775  0060DE  50F5               	movf	tablat,w,c
 31776  0060E0  0900               	iorlw	0
 31777  0060E2  B4D8               	btfsc	status,2,c
 31778  0060E4  0012               	return	
 31779  0060E6  D7E1               	goto	l698
 31780  0060E8                     __end_of_Uart_WriteConstString:
 31781                           	opt stack 0
 31782                           tosu	equ	0xFFF
 31783                           tosh	equ	0xFFE
 31784                           tosl	equ	0xFFD
 31785                           pclath	equ	0xFFA
 31786                           tblptru	equ	0xFF8
 31787                           tblptrh	equ	0xFF7
 31788                           tblptrl	equ	0xFF6
 31789                           tablat	equ	0xFF5
 31790                           prodh	equ	0xFF4
 31791                           prodl	equ	0xFF3
 31792                           intcon	equ	0xFF2
 31793                           intcon2	equ	0xFF1
 31794                           intcon3	equ	0xFF0
 31795                           indf0	equ	0xFEF
 31796                           postinc0	equ	0xFEE
 31797                           plusw0	equ	0xFEB
 31798                           fsr0h	equ	0xFEA
 31799                           fsr0l	equ	0xFE9
 31800                           wreg	equ	0xFE8
 31801                           indf1	equ	0xFE7
 31802                           postinc1	equ	0xFE6
 31803                           postdec1	equ	0xFE5
 31804                           plusw1	equ	0xFE3
 31805                           fsr1h	equ	0xFE2
 31806                           fsr1l	equ	0xFE1
 31807                           indf2	equ	0xFDF
 31808                           postinc2	equ	0xFDE
 31809                           postdec2	equ	0xFDD
 31810                           plusw2	equ	0xFDB
 31811                           fsr2h	equ	0xFDA
 31812                           fsr2l	equ	0xFD9
 31813                           status	equ	0xFD8
 31814                           
 31815 ;; *************** function _UartWriteByte *****************
 31816 ;; Defined at:
 31817 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31818 ;; Parameters:    Size  Location     Type
 31819 ;;  Module          1    wreg     unsigned char 
 31820 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 31821 ;; Auto vars:     Size  Location     Type
 31822 ;;  Module          1   30[BANK0 ] unsigned char 
 31823 ;; Return value:  Size  Location     Type
 31824 ;;                  1    wreg      void 
 31825 ;; Registers used:
 31826 ;;		wreg, status,2, status,0
 31827 ;; Tracked objects:
 31828 ;;		On entry : 0/0
 31829 ;;		On exit  : 0/0
 31830 ;;		Unchanged: 0/0
 31831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31832 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31833 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31835 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31836 ;;Total ram usage:        2 bytes
 31837 ;; Hardware stack levels used:    1
 31838 ;; Hardware stack levels required when called:   11
 31839 ;; This function calls:
 31840 ;;		Nothing
 31841 ;; This function is called by:
 31842 ;;		_Uart_WriteConstString
 31843 ;;		_Uart_WriteString
 31844 ;;		_Uart_WriteStringLen
 31845 ;; This function uses a non-reentrant model
 31846 ;;
 31847                           
 31848                           	psect	text146
 31849  0067CE                     __ptext146:
 31850                           	opt stack 0
 31851  0067CE                     _UartWriteByte:
 31852                           	opt stack 11
 31853                           
 31854                           ;incstack = 0
 31855                           ;UartWriteByte@Module stored from wreg
 31856  0067CE  0100               	movlb	0	; () banked
 31857  0067D0  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 31858                           
 31859                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 31860  0067D2  0100               	movlb	0	; () banked
 31861  0067D4  057E               	decf	UartWriteByte@Module& (0+255),w,b
 31862  0067D6  A4D8               	btfss	status,2,c
 31863  0067D8  D003               	goto	l639
 31864                           
 31865                           ; BSR set to: 0
 31866                           ;uart_drv.c: 176: {
 31867                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 31868  0067DA  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 31869                           
 31870                           ;uart_drv.c: 179: }
 31871  0067DE  0012               	return	
 31872  0067E0                     l639:
 31873                           
 31874                           ; BSR set to: 0
 31875                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 31876                           
 31877                           ; BSR set to: 0
 31878  0067E0  0E02               	movlw	2
 31879  0067E2  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 31880  0067E4  A4D8               	btfss	status,2,c
 31881  0067E6  0012               	return	
 31882                           
 31883                           ; BSR set to: 0
 31884                           ;uart_drv.c: 181: {
 31885                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 31886  0067E8  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 31887                           
 31888                           ; BSR set to: 0
 31889  0067EC  0012               	return	
 31890  0067EE                     __end_of_UartWriteByte:
 31891                           	opt stack 0
 31892                           tosu	equ	0xFFF
 31893                           tosh	equ	0xFFE
 31894                           tosl	equ	0xFFD
 31895                           pclath	equ	0xFFA
 31896                           tblptru	equ	0xFF8
 31897                           tblptrh	equ	0xFF7
 31898                           tblptrl	equ	0xFF6
 31899                           tablat	equ	0xFF5
 31900                           prodh	equ	0xFF4
 31901                           prodl	equ	0xFF3
 31902                           intcon	equ	0xFF2
 31903                           intcon2	equ	0xFF1
 31904                           intcon3	equ	0xFF0
 31905                           indf0	equ	0xFEF
 31906                           postinc0	equ	0xFEE
 31907                           plusw0	equ	0xFEB
 31908                           fsr0h	equ	0xFEA
 31909                           fsr0l	equ	0xFE9
 31910                           wreg	equ	0xFE8
 31911                           indf1	equ	0xFE7
 31912                           postinc1	equ	0xFE6
 31913                           postdec1	equ	0xFE5
 31914                           plusw1	equ	0xFE3
 31915                           fsr1h	equ	0xFE2
 31916                           fsr1l	equ	0xFE1
 31917                           indf2	equ	0xFDF
 31918                           postinc2	equ	0xFDE
 31919                           postdec2	equ	0xFDD
 31920                           plusw2	equ	0xFDB
 31921                           fsr2h	equ	0xFDA
 31922                           fsr2l	equ	0xFD9
 31923                           status	equ	0xFD8
 31924                           
 31925 ;; *************** function _UartTxBufferStatus *****************
 31926 ;; Defined at:
 31927 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31928 ;; Parameters:    Size  Location     Type
 31929 ;;  Module          1    wreg     unsigned char 
 31930 ;; Auto vars:     Size  Location     Type
 31931 ;;  Module          1   30[BANK0 ] unsigned char 
 31932 ;;  TxBufferStat    1   31[BANK0 ] enum E9037
 31933 ;; Return value:  Size  Location     Type
 31934 ;;                  1    wreg      enum E9037
 31935 ;; Registers used:
 31936 ;;		wreg, status,2, status,0
 31937 ;; Tracked objects:
 31938 ;;		On entry : 0/0
 31939 ;;		On exit  : 0/0
 31940 ;;		Unchanged: 0/0
 31941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31945 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31946 ;;Total ram usage:        3 bytes
 31947 ;; Hardware stack levels used:    1
 31948 ;; Hardware stack levels required when called:   11
 31949 ;; This function calls:
 31950 ;;		Nothing
 31951 ;; This function is called by:
 31952 ;;		_Uart_WriteConstString
 31953 ;;		_Uart_WriteString
 31954 ;;		_Uart_WriteStringLen
 31955 ;; This function uses a non-reentrant model
 31956 ;;
 31957                           
 31958                           	psect	text147
 31959  005D8A                     __ptext147:
 31960                           	opt stack 0
 31961  005D8A                     _UartTxBufferStatus:
 31962                           	opt stack 11
 31963                           
 31964                           ; BSR set to: 0
 31965                           ;incstack = 0
 31966                           ;UartTxBufferStatus@Module stored from wreg
 31967  005D8A  0100               	movlb	0	; () banked
 31968  005D8C  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 31969                           
 31970                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 31971  005D8E  0E00               	movlw	0
 31972  005D90  0100               	movlb	0	; () banked
 31973  005D92  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 31974                           
 31975                           ; BSR set to: 0
 31976                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 31977  005D94  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 31978  005D96  A4D8               	btfss	status,2,c
 31979  005D98  D00B               	goto	l651
 31980                           
 31981                           ; BSR set to: 0
 31982                           ;uart_drv.c: 228: {
 31983                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 31984  005D9A  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 31985  005D9E  90D8               	bcf	status,0,c
 31986  005DA0  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 31987  005DA2  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 31988  005DA4  D002               	goto	l652
 31989  005DA6                     u11370:
 31990                           
 31991                           ; BSR set to: 0
 31992                           ;uart_drv.c: 231: {
 31993                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 31994  005DA6  0E01               	movlw	1
 31995  005DA8  D014               	goto	L68
 31996  005DAA                     l652:
 31997                           
 31998                           ; BSR set to: 0
 31999                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32000                           
 32001                           ; BSR set to: 0
 32002  005DAA  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 32003  005DAE  D00C               	goto	L97
 32004  005DB0                     l651:
 32005                           
 32006                           ; BSR set to: 0
 32007                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 32008                           
 32009                           ; BSR set to: 0
 32010  005DB0  0E02               	movlw	2
 32011  005DB2  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 32012  005DB4  A4D8               	btfss	status,2,c
 32013  005DB6  D00E               	goto	l660
 32014                           
 32015                           ; BSR set to: 0
 32016                           ;uart_drv.c: 244: {
 32017                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 32018  005DB8  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32019  005DBC  90D8               	bcf	status,0,c
 32020  005DBE  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32021  005DC0  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32022  005DC2  D7F1               	goto	u11370
 32023                           
 32024                           ; BSR set to: 0
 32025                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32026                           
 32027                           ; BSR set to: 0
 32028                           
 32029                           ;uart_drv.c: 249: }
 32030                           
 32031                           ; BSR set to: 0
 32032                           ;uart_drv.c: 247: {
 32033                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 32034  005DC4  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32035  005DC8                     L97:
 32036  005DC8  90D8               	bcf	status,0,c
 32037  005DCA  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32038  005DCC  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32039  005DCE  D002               	goto	l660
 32040                           
 32041                           ; BSR set to: 0
 32042                           ;uart_drv.c: 251: {
 32043                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 32044  005DD0  0E02               	movlw	2
 32045  005DD2                     L68:
 32046  005DD2  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32047  005DD4                     l660:
 32048                           
 32049                           ; BSR set to: 0
 32050                           ;uart_drv.c: 257: }
 32051                           ;uart_drv.c: 258: }
 32052                           ;uart_drv.c: 260: return TxBufferStatus;
 32053                           
 32054                           ; BSR set to: 0
 32055                           
 32056                           ; BSR set to: 0
 32057                           
 32058                           ; BSR set to: 0
 32059                           
 32060                           ; BSR set to: 0
 32061                           
 32062                           ;uart_drv.c: 254: else
 32063                           ;uart_drv.c: 255: {
 32064                           
 32065                           ; BSR set to: 0
 32066  005DD4  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 32067  005DD6  0012               	return	
 32068  005DD8                     __end_of_UartTxBufferStatus:
 32069                           	opt stack 0
 32070                           tosu	equ	0xFFF
 32071                           tosh	equ	0xFFE
 32072                           tosl	equ	0xFFD
 32073                           pclath	equ	0xFFA
 32074                           tblptru	equ	0xFF8
 32075                           tblptrh	equ	0xFF7
 32076                           tblptrl	equ	0xFF6
 32077                           tablat	equ	0xFF5
 32078                           prodh	equ	0xFF4
 32079                           prodl	equ	0xFF3
 32080                           intcon	equ	0xFF2
 32081                           intcon2	equ	0xFF1
 32082                           intcon3	equ	0xFF0
 32083                           indf0	equ	0xFEF
 32084                           postinc0	equ	0xFEE
 32085                           plusw0	equ	0xFEB
 32086                           fsr0h	equ	0xFEA
 32087                           fsr0l	equ	0xFE9
 32088                           wreg	equ	0xFE8
 32089                           indf1	equ	0xFE7
 32090                           postinc1	equ	0xFE6
 32091                           postdec1	equ	0xFE5
 32092                           plusw1	equ	0xFE3
 32093                           fsr1h	equ	0xFE2
 32094                           fsr1l	equ	0xFE1
 32095                           indf2	equ	0xFDF
 32096                           postinc2	equ	0xFDE
 32097                           postdec2	equ	0xFDD
 32098                           plusw2	equ	0xFDB
 32099                           fsr2h	equ	0xFDA
 32100                           fsr2l	equ	0xFD9
 32101                           status	equ	0xFD8
 32102                           
 32103 ;; *************** function _StringCopy *****************
 32104 ;; Defined at:
 32105 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 32106 ;; Parameters:    Size  Location     Type
 32107 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 32108 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), STR_15(20), 
 32109 ;;		 -> STR_9(21), MessageText(50), PhoneNumber(20), STR_5(10), 
 32110 ;;		 -> Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 32111 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 32112 ;;		 -> receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 32113 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 32114 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 32115 ;;  Len             2   41[BANK0 ] unsigned short 
 32116 ;; Auto vars:     Size  Location     Type
 32117 ;;  Index           2   45[BANK0 ] unsigned short 
 32118 ;; Return value:  Size  Location     Type
 32119 ;;                  1    wreg      void 
 32120 ;; Registers used:
 32121 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32122 ;; Tracked objects:
 32123 ;;		On entry : 0/0
 32124 ;;		On exit  : 0/0
 32125 ;;		Unchanged: 0/0
 32126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32127 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32128 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32129 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32130 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32131 ;;Total ram usage:       10 bytes
 32132 ;; Hardware stack levels used:    1
 32133 ;; Hardware stack levels required when called:   11
 32134 ;; This function calls:
 32135 ;;		Nothing
 32136 ;; This function is called by:
 32137 ;;		_ModemEvtParser
 32138 ;;		_GetSmsSm
 32139 ;;		_SendSmsSm
 32140 ;;		_Mdm_GetSmsData
 32141 ;;		_InitGprsNetwork
 32142 ;;		_HttpGetMethod
 32143 ;;		_Eeprom_Write
 32144 ;;		_detectCmd
 32145 ;;		_Mdm_SendSmsData
 32146 ;; This function uses a non-reentrant model
 32147 ;;
 32148                           
 32149                           	psect	text148
 32150  0056D8                     __ptext148:
 32151                           	opt stack 0
 32152  0056D8                     _StringCopy:
 32153                           	opt stack 13
 32154                           
 32155                           ;sf.c: 106: UINT16 Index = 0;
 32156                           
 32157                           ; BSR set to: 0
 32158                           ;incstack = 0
 32159  0056D8  0E00               	movlw	0
 32160  0056DA  0100               	movlb	0	; () banked
 32161  0056DC  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32162  0056DE  0E00               	movlw	0
 32163  0056E0  6F8D               	movwf	StringCopy@Index& (0+255),b
 32164                           
 32165                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 32166  0056E2  0E00               	movlw	0
 32167  0056E4  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32168  0056E6  0E00               	movlw	0
 32169  0056E8  6F8D               	movwf	StringCopy@Index& (0+255),b
 32170  0056EA  D020               	goto	l2255
 32171  0056EC                     
 32172                           ; BSR set to: 0
 32173                           ;sf.c: 110: {
 32174                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 32175                           
 32176                           ; BSR set to: 0
 32177  0056EC  518D               	movf	StringCopy@Index& (0+255),w,b
 32178  0056EE  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 32179  0056F0  6F8B               	movwf	??_StringCopy& (0+255),b
 32180  0056F2  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32181  0056F4  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 32182  0056F6  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 32183  0056F8  C08B  FFF6         	movff	??_StringCopy,tblptrl
 32184  0056FC  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 32185  005700  6AF8               	clrf	tblptru,c
 32186  005702  518D               	movf	StringCopy@Index& (0+255),w,b
 32187  005704  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 32188  005706  6ED9               	movwf	fsr2l,c
 32189  005708  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32190  00570A  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 32191  00570C  6EDA               	movwf	fsr2h,c
 32192  00570E  0E0E               	movlw	(high __ramtop+-1)
 32193  005710  64F7               	cpfsgt	tblptrh,c
 32194  005712  D003               	bra	u12097
 32195  005714  0008               	tblrd		*
 32196  005716  50F5               	movf	tablat,w,c
 32197  005718  D005               	bra	u12090
 32198  00571A                     u12097:
 32199  00571A  CFF6 FFE9          	movff	tblptrl,fsr0l
 32200  00571E  CFF7 FFEA          	movff	tblptrh,fsr0h
 32201  005722  50EF               	movf	indf0,w,c
 32202  005724                     u12090:
 32203  005724  6EDF               	movwf	indf2,c
 32204  005726  0100               	movlb	0	; () banked
 32205  005728  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 32206  00572A  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 32207  00572C                     l2255:
 32208                           
 32209                           ; BSR set to: 0
 32210                           
 32211                           ; BSR set to: 0
 32212  00572C  5189               	movf	StringCopy@Len& (0+255),w,b
 32213  00572E  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 32214  005730  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 32215  005732  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 32216  005734  B0D8               	btfsc	status,0,c
 32217  005736  0012               	return	
 32218  005738  D7D9               	goto	l2256
 32219  00573A                     __end_of_StringCopy:
 32220                           	opt stack 0
 32221                           tosu	equ	0xFFF
 32222                           tosh	equ	0xFFE
 32223                           tosl	equ	0xFFD
 32224                           pclath	equ	0xFFA
 32225                           tblptru	equ	0xFF8
 32226                           tblptrh	equ	0xFF7
 32227                           tblptrl	equ	0xFF6
 32228                           tablat	equ	0xFF5
 32229                           prodh	equ	0xFF4
 32230                           prodl	equ	0xFF3
 32231                           intcon	equ	0xFF2
 32232                           intcon2	equ	0xFF1
 32233                           intcon3	equ	0xFF0
 32234                           indf0	equ	0xFEF
 32235                           postinc0	equ	0xFEE
 32236                           plusw0	equ	0xFEB
 32237                           fsr0h	equ	0xFEA
 32238                           fsr0l	equ	0xFE9
 32239                           wreg	equ	0xFE8
 32240                           indf1	equ	0xFE7
 32241                           postinc1	equ	0xFE6
 32242                           postdec1	equ	0xFE5
 32243                           plusw1	equ	0xFE3
 32244                           fsr1h	equ	0xFE2
 32245                           fsr1l	equ	0xFE1
 32246                           indf2	equ	0xFDF
 32247                           postinc2	equ	0xFDE
 32248                           postdec2	equ	0xFDD
 32249                           plusw2	equ	0xFDB
 32250                           fsr2h	equ	0xFDA
 32251                           fsr2l	equ	0xFD9
 32252                           status	equ	0xFD8
 32253                           
 32254 ;; *************** function _OsTmr_StartTimer *****************
 32255 ;; Defined at:
 32256 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32257 ;; Parameters:    Size  Location     Type
 32258 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 32259 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32260 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32261 ;;  Timeout         4   35[BANK0 ] unsigned long 
 32262 ;; Auto vars:     Size  Location     Type
 32263 ;;		None
 32264 ;; Return value:  Size  Location     Type
 32265 ;;                  1    wreg      void 
 32266 ;; Registers used:
 32267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32268 ;; Tracked objects:
 32269 ;;		On entry : 0/0
 32270 ;;		On exit  : 0/0
 32271 ;;		Unchanged: 0/0
 32272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32273 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32276 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32277 ;;Total ram usage:        6 bytes
 32278 ;; Hardware stack levels used:    1
 32279 ;; Hardware stack levels required when called:   12
 32280 ;; This function calls:
 32281 ;;		_GetOsTickCounter
 32282 ;; This function is called by:
 32283 ;;		_OsTmr_Wait
 32284 ;;		_CheckModem
 32285 ;;		_SendSmsSm
 32286 ;;		_InitGprsNetwork
 32287 ;;		_HttpGetMethod
 32288 ;;		_I2cSlv_QueryI2cData
 32289 ;;		_Term_MainSm
 32290 ;; This function uses a non-reentrant model
 32291 ;;
 32292                           
 32293                           	psect	text149
 32294  005798                     __ptext149:
 32295                           	opt stack 0
 32296  005798                     _OsTmr_StartTimer:
 32297                           	opt stack 12
 32298                           
 32299                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 32300                           
 32301                           ; BSR set to: 0
 32302                           ;incstack = 0
 32303  005798  0100               	movlb	0	; () banked
 32304  00579A  EE20 F001          	lfsr	2,1
 32305  00579E  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32306  0057A0  26D9               	addwf	fsr2l,f,c
 32307  0057A2  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32308  0057A4  22DA               	addwfc	fsr2h,f,c
 32309  0057A6  0E00               	movlw	0
 32310  0057A8  6EDF               	movwf	indf2,c
 32311                           
 32312                           ; BSR set to: 0
 32313                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 32314  0057AA  ECE0  F034         	call	_GetOsTickCounter	;wreg free
 32315  0057AE  0100               	movlb	0	; () banked
 32316  0057B0  EE20 F002          	lfsr	2,2
 32317  0057B4  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32318  0057B6  26D9               	addwf	fsr2l,f,c
 32319  0057B8  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32320  0057BA  22DA               	addwfc	fsr2h,f,c
 32321  0057BC  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 32322  0057C0  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 32323  0057C4  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 32324  0057C8  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 32325                           
 32326                           ; BSR set to: 0
 32327                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 32328  0057CC  EE20 F006          	lfsr	2,6
 32329  0057D0  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32330  0057D2  26D9               	addwf	fsr2l,f,c
 32331  0057D4  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32332  0057D6  22DA               	addwfc	fsr2h,f,c
 32333  0057D8  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 32334  0057DC  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 32335  0057E0  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 32336  0057E4  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 32337                           
 32338                           ; BSR set to: 0
 32339                           ;os_timers.c: 127: Timer->Enabled = 1u;
 32340  0057E8  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 32341  0057EC  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 32342  0057F0  0E01               	movlw	1
 32343  0057F2  6EDF               	movwf	indf2,c
 32344                           
 32345                           ; BSR set to: 0
 32346  0057F4  0012               	return		;funcret
 32347  0057F6                     __end_of_OsTmr_StartTimer:
 32348                           	opt stack 0
 32349                           tosu	equ	0xFFF
 32350                           tosh	equ	0xFFE
 32351                           tosl	equ	0xFFD
 32352                           pclath	equ	0xFFA
 32353                           tblptru	equ	0xFF8
 32354                           tblptrh	equ	0xFF7
 32355                           tblptrl	equ	0xFF6
 32356                           tablat	equ	0xFF5
 32357                           prodh	equ	0xFF4
 32358                           prodl	equ	0xFF3
 32359                           intcon	equ	0xFF2
 32360                           intcon2	equ	0xFF1
 32361                           intcon3	equ	0xFF0
 32362                           indf0	equ	0xFEF
 32363                           postinc0	equ	0xFEE
 32364                           plusw0	equ	0xFEB
 32365                           fsr0h	equ	0xFEA
 32366                           fsr0l	equ	0xFE9
 32367                           wreg	equ	0xFE8
 32368                           indf1	equ	0xFE7
 32369                           postinc1	equ	0xFE6
 32370                           postdec1	equ	0xFE5
 32371                           plusw1	equ	0xFE3
 32372                           fsr1h	equ	0xFE2
 32373                           fsr1l	equ	0xFE1
 32374                           indf2	equ	0xFDF
 32375                           postinc2	equ	0xFDE
 32376                           postdec2	equ	0xFDD
 32377                           plusw2	equ	0xFDB
 32378                           fsr2h	equ	0xFDA
 32379                           fsr2l	equ	0xFD9
 32380                           status	equ	0xFD8
 32381                           
 32382 ;; *************** function _OsTmr_GetTimerStatus *****************
 32383 ;; Defined at:
 32384 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32385 ;; Parameters:    Size  Location     Type
 32386 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 32387 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32388 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32389 ;; Auto vars:     Size  Location     Type
 32390 ;;		None
 32391 ;; Return value:  Size  Location     Type
 32392 ;;                  1    wreg      enum E7740
 32393 ;; Registers used:
 32394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32395 ;; Tracked objects:
 32396 ;;		On entry : 0/0
 32397 ;;		On exit  : 0/0
 32398 ;;		Unchanged: 0/0
 32399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32400 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32402 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32403 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32404 ;;Total ram usage:        6 bytes
 32405 ;; Hardware stack levels used:    1
 32406 ;; Hardware stack levels required when called:   13
 32407 ;; This function calls:
 32408 ;;		_GetElapsedTime
 32409 ;; This function is called by:
 32410 ;;		_OsTmr_Wait
 32411 ;;		_CheckModem
 32412 ;;		_SendSmsSm
 32413 ;;		_InitGprsNetwork
 32414 ;;		_HttpGetMethod
 32415 ;;		_I2cSlv_QueryI2cData
 32416 ;;		_Term_MainSm
 32417 ;; This function uses a non-reentrant model
 32418 ;;
 32419                           
 32420                           	psect	text150
 32421  004DF4                     __ptext150:
 32422                           	opt stack 0
 32423  004DF4                     _OsTmr_GetTimerStatus:
 32424                           	opt stack 11
 32425                           
 32426                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 32427                           
 32428                           ; BSR set to: 0
 32429                           ;incstack = 0
 32430  004DF4  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32431  004DF8  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32432  004DFC  04DE               	decf	postinc2,w,c
 32433  004DFE  A4D8               	btfss	status,2,c
 32434  004E00  D030               	goto	l864
 32435                           
 32436                           ;os_timers.c: 197: {
 32437                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 32438  004E02  0100               	movlb	0	; () banked
 32439  004E04  EE20 F006          	lfsr	2,6
 32440  004E08  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32441  004E0A  26D9               	addwf	fsr2l,f,c
 32442  004E0C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32443  004E0E  22DA               	addwfc	fsr2h,f,c
 32444  004E10  EE10 F002          	lfsr	1,2
 32445  004E14  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32446  004E16  26E1               	addwf	fsr1l,f,c
 32447  004E18  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32448  004E1A  22E2               	addwfc	fsr1h,f,c
 32449  004E1C  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 32450  004E20  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 32451  004E24  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 32452  004E28  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 32453  004E2C  EC06  F01F         	call	_GetElapsedTime	;wreg free
 32454  004E30  50DE               	movf	postinc2,w,c
 32455  004E32  0100               	movlb	0	; () banked
 32456  004E34  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 32457  004E36  50DE               	movf	postinc2,w,c
 32458  004E38  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 32459  004E3A  50DE               	movf	postinc2,w,c
 32460  004E3C  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 32461  004E3E  50DE               	movf	postinc2,w,c
 32462  004E40  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 32463  004E42  A0D8               	btfss	status,0,c
 32464  004E44  D017               	goto	l867
 32465                           
 32466                           ; BSR set to: 0
 32467                           ;os_timers.c: 200: {
 32468                           ;os_timers.c: 202: Timer->Enabled = 0u;
 32469  004E46  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32470  004E4A  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32471  004E4E  0E00               	movlw	0
 32472  004E50  6EDF               	movwf	indf2,c
 32473                           
 32474                           ; BSR set to: 0
 32475                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 32476  004E52  EE20 F001          	lfsr	2,1
 32477  004E56  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32478  004E58  26D9               	addwf	fsr2l,f,c
 32479  004E5A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32480  004E5C  22DA               	addwfc	fsr2h,f,c
 32481  004E5E  0E01               	movlw	1
 32482  004E60  D008               	goto	L98
 32483  004E62                     l864:
 32484                           
 32485                           ;os_timers.c: 211: else
 32486                           ;os_timers.c: 212: {
 32487                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 32488                           
 32489                           ; BSR set to: 0
 32490  004E62  0100               	movlb	0	; () banked
 32491  004E64  EE20 F001          	lfsr	2,1
 32492  004E68  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32493  004E6A  26D9               	addwf	fsr2l,f,c
 32494  004E6C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32495  004E6E  22DA               	addwfc	fsr2h,f,c
 32496  004E70  0E02               	movlw	2
 32497  004E72                     L98:
 32498  004E72  6EDF               	movwf	indf2,c
 32499  004E74                     l867:
 32500                           
 32501                           ; BSR set to: 0
 32502                           ;os_timers.c: 215: }
 32503                           ;os_timers.c: 218: return Timer->Status;
 32504  004E74  EE20 F001          	lfsr	2,1
 32505  004E78  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32506  004E7A  26D9               	addwf	fsr2l,f,c
 32507  004E7C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32508  004E7E  22DA               	addwfc	fsr2h,f,c
 32509  004E80  50DF               	movf	indf2,w,c
 32510  004E82  0012               	return	
 32511  004E84                     __end_of_OsTmr_GetTimerStatus:
 32512                           	opt stack 0
 32513                           tosu	equ	0xFFF
 32514                           tosh	equ	0xFFE
 32515                           tosl	equ	0xFFD
 32516                           pclath	equ	0xFFA
 32517                           tblptru	equ	0xFF8
 32518                           tblptrh	equ	0xFF7
 32519                           tblptrl	equ	0xFF6
 32520                           tablat	equ	0xFF5
 32521                           prodh	equ	0xFF4
 32522                           prodl	equ	0xFF3
 32523                           intcon	equ	0xFF2
 32524                           intcon2	equ	0xFF1
 32525                           intcon3	equ	0xFF0
 32526                           indf0	equ	0xFEF
 32527                           postinc0	equ	0xFEE
 32528                           plusw0	equ	0xFEB
 32529                           fsr0h	equ	0xFEA
 32530                           fsr0l	equ	0xFE9
 32531                           wreg	equ	0xFE8
 32532                           indf1	equ	0xFE7
 32533                           postinc1	equ	0xFE6
 32534                           postdec1	equ	0xFE5
 32535                           plusw1	equ	0xFE3
 32536                           fsr1h	equ	0xFE2
 32537                           fsr1l	equ	0xFE1
 32538                           indf2	equ	0xFDF
 32539                           postinc2	equ	0xFDE
 32540                           postdec2	equ	0xFDD
 32541                           plusw2	equ	0xFDB
 32542                           fsr2h	equ	0xFDA
 32543                           fsr2l	equ	0xFD9
 32544                           status	equ	0xFD8
 32545                           
 32546 ;; *************** function _GetElapsedTime *****************
 32547 ;; Defined at:
 32548 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32549 ;; Parameters:    Size  Location     Type
 32550 ;;  StartTime       4   33[BANK0 ] unsigned long 
 32551 ;; Auto vars:     Size  Location     Type
 32552 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 32553 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 32554 ;; Return value:  Size  Location     Type
 32555 ;;                  4   33[BANK0 ] unsigned long 
 32556 ;; Registers used:
 32557 ;;		wreg, status,2, status,0, cstack
 32558 ;; Tracked objects:
 32559 ;;		On entry : 0/0
 32560 ;;		On exit  : 0/0
 32561 ;;		Unchanged: 0/0
 32562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32563 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32564 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32565 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32566 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32567 ;;Total ram usage:       20 bytes
 32568 ;; Hardware stack levels used:    1
 32569 ;; Hardware stack levels required when called:   12
 32570 ;; This function calls:
 32571 ;;		_GetOsTickCounter
 32572 ;; This function is called by:
 32573 ;;		_OsTmr_GetTimerStatus
 32574 ;;		_OsTmr_GetRemainingTime
 32575 ;; This function uses a non-reentrant model
 32576 ;;
 32577                           
 32578                           	psect	text151
 32579  003E0C                     __ptext151:
 32580                           	opt stack 0
 32581  003E0C                     _GetElapsedTime:
 32582                           	opt stack 11
 32583                           
 32584                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 32585                           ;os_timers.c: 87: UINT32 TimeValue;
 32586                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 32587                           
 32588                           ; BSR set to: 0
 32589                           ;incstack = 0
 32590  003E0C  ECE0  F034         	call	_GetOsTickCounter	;wreg free
 32591  003E10  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 32592  003E14  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 32593  003E18  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 32594  003E1C  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 32595                           
 32596                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 32597  003E20  0100               	movlb	0	; () banked
 32598  003E22  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 32599  003E24  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32600  003E26  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 32601  003E28  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32602  003E2A  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 32603  003E2C  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32604  003E2E  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 32605  003E30  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32606  003E32  A0D8               	btfss	status,0,c
 32607  003E34  D01D               	goto	l844
 32608                           
 32609                           ; BSR set to: 0
 32610                           ;os_timers.c: 94: {
 32611                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 32612  003E36  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 32613  003E3A  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 32614  003E3E  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 32615  003E42  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 32616  003E46  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 32617  003E48  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 32618  003E4A  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 32619  003E4C  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 32620  003E4E  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 32621  003E50  0E00               	movlw	0
 32622  003E52  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 32623  003E54  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 32624  003E56  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 32625  003E58  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32626  003E5A  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 32627  003E5C  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 32628  003E5E  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32629  003E60  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 32630  003E62  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 32631  003E64  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32632  003E66  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 32633  003E68  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 32634  003E6A  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32635  003E6C  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 32636  003E6E  D028               	goto	L69
 32637  003E70                     l844:
 32638                           
 32639                           ; BSR set to: 0
 32640                           ;os_timers.c: 97: else
 32641                           ;os_timers.c: 98: {
 32642                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 32643                           
 32644                           ; BSR set to: 0
 32645  003E70  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 32646  003E74  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 32647  003E78  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 32648  003E7C  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 32649  003E80  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 32650  003E82  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 32651  003E84  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 32652  003E86  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 32653  003E88  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 32654  003E8A  0E00               	movlw	0
 32655  003E8C  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 32656  003E8E  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 32657  003E90  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 32658  003E92  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32659  003E94  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 32660  003E96  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 32661  003E98  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32662  003E9A  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 32663  003E9C  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 32664  003E9E  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32665  003EA0  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 32666  003EA2  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 32667  003EA4  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32668  003EA6  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 32669  003EA8  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 32670  003EAA  0EFF               	movlw	255
 32671  003EAC  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 32672  003EAE  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 32673  003EB0  0EFF               	movlw	255
 32674  003EB2  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 32675  003EB4  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 32676  003EB6  0EFF               	movlw	255
 32677  003EB8  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 32678  003EBA  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 32679  003EBC  0EFF               	movlw	255
 32680  003EBE  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 32681  003EC0                     L69:
 32682  003EC0  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 32683                           
 32684                           ; BSR set to: 0
 32685                           ;os_timers.c: 100: }
 32686                           ;os_timers.c: 102: return TimeValue;
 32687                           
 32688                           ; BSR set to: 0
 32689  003EC2  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 32690  003EC6  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 32691  003ECA  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 32692  003ECE  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 32693  003ED2  0012               	return	
 32694  003ED4                     __end_of_GetElapsedTime:
 32695                           	opt stack 0
 32696                           tosu	equ	0xFFF
 32697                           tosh	equ	0xFFE
 32698                           tosl	equ	0xFFD
 32699                           pclath	equ	0xFFA
 32700                           tblptru	equ	0xFF8
 32701                           tblptrh	equ	0xFF7
 32702                           tblptrl	equ	0xFF6
 32703                           tablat	equ	0xFF5
 32704                           prodh	equ	0xFF4
 32705                           prodl	equ	0xFF3
 32706                           intcon	equ	0xFF2
 32707                           intcon2	equ	0xFF1
 32708                           intcon3	equ	0xFF0
 32709                           indf0	equ	0xFEF
 32710                           postinc0	equ	0xFEE
 32711                           plusw0	equ	0xFEB
 32712                           fsr0h	equ	0xFEA
 32713                           fsr0l	equ	0xFE9
 32714                           wreg	equ	0xFE8
 32715                           indf1	equ	0xFE7
 32716                           postinc1	equ	0xFE6
 32717                           postdec1	equ	0xFE5
 32718                           plusw1	equ	0xFE3
 32719                           fsr1h	equ	0xFE2
 32720                           fsr1l	equ	0xFE1
 32721                           indf2	equ	0xFDF
 32722                           postinc2	equ	0xFDE
 32723                           postdec2	equ	0xFDD
 32724                           plusw2	equ	0xFDB
 32725                           fsr2h	equ	0xFDA
 32726                           fsr2l	equ	0xFD9
 32727                           status	equ	0xFD8
 32728                           
 32729 ;; *************** function _GetOsTickCounter *****************
 32730 ;; Defined at:
 32731 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32732 ;; Parameters:    Size  Location     Type
 32733 ;;		None
 32734 ;; Auto vars:     Size  Location     Type
 32735 ;;		None
 32736 ;; Return value:  Size  Location     Type
 32737 ;;                  4   29[BANK0 ] unsigned long 
 32738 ;; Registers used:
 32739 ;;		None
 32740 ;; Tracked objects:
 32741 ;;		On entry : 0/0
 32742 ;;		On exit  : 0/0
 32743 ;;		Unchanged: 0/0
 32744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32745 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32748 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32749 ;;Total ram usage:        4 bytes
 32750 ;; Hardware stack levels used:    1
 32751 ;; Hardware stack levels required when called:   11
 32752 ;; This function calls:
 32753 ;;		Nothing
 32754 ;; This function is called by:
 32755 ;;		_GetElapsedTime
 32756 ;;		_OsTmr_StartTimer
 32757 ;;		_OsTmr_GetElapsedTime
 32758 ;; This function uses a non-reentrant model
 32759 ;;
 32760                           
 32761                           	psect	text152
 32762  0069C0                     __ptext152:
 32763                           	opt stack 0
 32764  0069C0                     _GetOsTickCounter:
 32765                           	opt stack 12
 32766                           
 32767                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 32768                           
 32769                           ; BSR set to: 0
 32770                           ;incstack = 0
 32771  0069C0  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 32772  0069C4  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 32773  0069C8  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 32774  0069CC  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 32775  0069D0  0012               	return		;funcret
 32776  0069D2                     __end_of_GetOsTickCounter:
 32777                           	opt stack 0
 32778                           tosu	equ	0xFFF
 32779                           tosh	equ	0xFFE
 32780                           tosl	equ	0xFFD
 32781                           pclath	equ	0xFFA
 32782                           tblptru	equ	0xFF8
 32783                           tblptrh	equ	0xFF7
 32784                           tblptrl	equ	0xFF6
 32785                           tablat	equ	0xFF5
 32786                           prodh	equ	0xFF4
 32787                           prodl	equ	0xFF3
 32788                           intcon	equ	0xFF2
 32789                           intcon2	equ	0xFF1
 32790                           intcon3	equ	0xFF0
 32791                           indf0	equ	0xFEF
 32792                           postinc0	equ	0xFEE
 32793                           plusw0	equ	0xFEB
 32794                           fsr0h	equ	0xFEA
 32795                           fsr0l	equ	0xFE9
 32796                           wreg	equ	0xFE8
 32797                           indf1	equ	0xFE7
 32798                           postinc1	equ	0xFE6
 32799                           postdec1	equ	0xFE5
 32800                           plusw1	equ	0xFE3
 32801                           fsr1h	equ	0xFE2
 32802                           fsr1l	equ	0xFE1
 32803                           indf2	equ	0xFDF
 32804                           postinc2	equ	0xFDE
 32805                           postdec2	equ	0xFDD
 32806                           plusw2	equ	0xFDB
 32807                           fsr2h	equ	0xFDA
 32808                           fsr2l	equ	0xFD9
 32809                           status	equ	0xFD8
 32810                           
 32811 ;; *************** function _ClearBuffer *****************
 32812 ;; Defined at:
 32813 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 32814 ;; Parameters:    Size  Location     Type
 32815 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 32816 ;;		 -> GsmGprsTerminal@UartBuffer(200), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(5
      +0), 
 32817 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 32818 ;;  Len             2   31[BANK0 ] unsigned short 
 32819 ;; Auto vars:     Size  Location     Type
 32820 ;;  Index           2   33[BANK0 ] unsigned short 
 32821 ;; Return value:  Size  Location     Type
 32822 ;;                  1    wreg      void 
 32823 ;; Registers used:
 32824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32825 ;; Tracked objects:
 32826 ;;		On entry : 0/0
 32827 ;;		On exit  : 0/0
 32828 ;;		Unchanged: 0/0
 32829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32833 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32834 ;;Total ram usage:        6 bytes
 32835 ;; Hardware stack levels used:    1
 32836 ;; Hardware stack levels required when called:   11
 32837 ;; This function calls:
 32838 ;;		Nothing
 32839 ;; This function is called by:
 32840 ;;		_GetSmsSm
 32841 ;;		_GetCallerNumber
 32842 ;;		_InitGprsNetwork
 32843 ;;		_HttpGetMethod
 32844 ;;		_Eeprom_Reset
 32845 ;;		_GsmGprsTerminal
 32846 ;; This function uses a non-reentrant model
 32847 ;;
 32848                           
 32849                           	psect	text153
 32850  00637A                     __ptext153:
 32851                           	opt stack 0
 32852  00637A                     _ClearBuffer:
 32853                           	opt stack 14
 32854                           
 32855                           ;sf.c: 126: UINT16 Index = 0;
 32856                           
 32857                           ;incstack = 0
 32858  00637A  0E00               	movlw	0
 32859  00637C  0100               	movlb	0	; () banked
 32860  00637E  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 32861  006380  0E00               	movlw	0
 32862  006382  6F81               	movwf	ClearBuffer@Index& (0+255),b
 32863                           
 32864                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 32865  006384  0E00               	movlw	0
 32866  006386  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 32867  006388  0E00               	movlw	0
 32868  00638A  6F81               	movwf	ClearBuffer@Index& (0+255),b
 32869  00638C  D00A               	goto	l2261
 32870  00638E                     
 32871                           ; BSR set to: 0
 32872                           ;sf.c: 130: {
 32873                           ;sf.c: 131: *(Buffer + Index) = 0;
 32874                           
 32875                           ; BSR set to: 0
 32876  00638E  5181               	movf	ClearBuffer@Index& (0+255),w,b
 32877  006390  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 32878  006392  6ED9               	movwf	fsr2l,c
 32879  006394  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 32880  006396  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 32881  006398  6EDA               	movwf	fsr2h,c
 32882  00639A  0E00               	movlw	0
 32883  00639C  6EDF               	movwf	indf2,c
 32884                           
 32885                           ; BSR set to: 0
 32886  00639E  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 32887  0063A0  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 32888  0063A2                     l2261:
 32889                           
 32890                           ; BSR set to: 0
 32891                           
 32892                           ; BSR set to: 0
 32893  0063A2  5181               	movf	ClearBuffer@Index& (0+255),w,b
 32894  0063A4  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 32895  0063A6  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 32896  0063A8  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 32897  0063AA  A0D8               	btfss	status,0,c
 32898  0063AC  0012               	return	
 32899  0063AE  D7EF               	goto	l2262
 32900  0063B0                     __end_of_ClearBuffer:
 32901                           	opt stack 0
 32902                           tosu	equ	0xFFF
 32903                           tosh	equ	0xFFE
 32904                           tosl	equ	0xFFD
 32905                           pclath	equ	0xFFA
 32906                           tblptru	equ	0xFF8
 32907                           tblptrh	equ	0xFF7
 32908                           tblptrl	equ	0xFF6
 32909                           tablat	equ	0xFF5
 32910                           prodh	equ	0xFF4
 32911                           prodl	equ	0xFF3
 32912                           intcon	equ	0xFF2
 32913                           intcon2	equ	0xFF1
 32914                           intcon3	equ	0xFF0
 32915                           indf0	equ	0xFEF
 32916                           postinc0	equ	0xFEE
 32917                           plusw0	equ	0xFEB
 32918                           fsr0h	equ	0xFEA
 32919                           fsr0l	equ	0xFE9
 32920                           wreg	equ	0xFE8
 32921                           indf1	equ	0xFE7
 32922                           postinc1	equ	0xFE6
 32923                           postdec1	equ	0xFE5
 32924                           plusw1	equ	0xFE3
 32925                           fsr1h	equ	0xFE2
 32926                           fsr1l	equ	0xFE1
 32927                           indf2	equ	0xFDF
 32928                           postinc2	equ	0xFDE
 32929                           postdec2	equ	0xFDD
 32930                           plusw2	equ	0xFDB
 32931                           fsr2h	equ	0xFDA
 32932                           fsr2l	equ	0xFD9
 32933                           status	equ	0xFD8
 32934                           
 32935 ;; *************** function _LedStateMachine *****************
 32936 ;; Defined at:
 32937 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32938 ;; Parameters:    Size  Location     Type
 32939 ;;  Led             1    wreg     unsigned char 
 32940 ;;  LedSts          2   47[BANK0 ] PTR enum E8954
 32941 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 32942 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 32943 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 32944 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 32945 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 32946 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 32947 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 32948 ;; Auto vars:     Size  Location     Type
 32949 ;;  Led             1   57[BANK0 ] unsigned char 
 32950 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 32951 ;; Return value:  Size  Location     Type
 32952 ;;                  1    wreg      unsigned char 
 32953 ;; Registers used:
 32954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32955 ;; Tracked objects:
 32956 ;;		On entry : 0/0
 32957 ;;		On exit  : 0/0
 32958 ;;		Unchanged: 0/0
 32959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32960 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32963 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32964 ;;Total ram usage:       11 bytes
 32965 ;; Hardware stack levels used:    1
 32966 ;; Hardware stack levels required when called:   13
 32967 ;; This function calls:
 32968 ;;		_LedBlinkStateMachine
 32969 ;;		_LedPulseStateMachine
 32970 ;;		_Led_SetLedStatus
 32971 ;; This function is called by:
 32972 ;;		_Led_MainTask
 32973 ;; This function uses a non-reentrant model
 32974 ;;
 32975                           
 32976                           	psect	text154
 32977  0046AE                     __ptext154:
 32978                           	opt stack 0
 32979  0046AE                     _LedStateMachine:
 32980                           	opt stack 14
 32981                           
 32982                           ; BSR set to: 0
 32983                           ;incstack = 0
 32984                           ;LedStateMachine@Led stored from wreg
 32985  0046AE  0100               	movlb	0	; () banked
 32986  0046B0  6F99               	movwf	LedStateMachine@Led& (0+255),b
 32987                           
 32988                           ;led.c: 238: UINT8 LedOutSts = 0u;
 32989  0046B2  0E00               	movlw	0
 32990  0046B4  0100               	movlb	0	; () banked
 32991  0046B6  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32992                           
 32993                           ;led.c: 241: switch (*LedSts)
 32994  0046B8  D037               	goto	l2120
 32995  0046BA                     
 32996                           ; BSR set to: 0
 32997                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 32998                           
 32999                           ; BSR set to: 0
 33000  0046BA  0E00               	movlw	0
 33001  0046BC  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33002                           
 33003                           ; BSR set to: 0
 33004                           ;led.c: 246: *LedOut = ((UINT8)(0));
 33005  0046BE  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33006  0046C2  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33007  0046C6  0E00               	movlw	0
 33008  0046C8  D007               	goto	L70
 33009  0046CA                     
 33010                           ; BSR set to: 0
 33011                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 33012                           
 33013                           ; BSR set to: 0
 33014  0046CA  0E01               	movlw	1
 33015  0046CC  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33016                           
 33017                           ; BSR set to: 0
 33018                           ;led.c: 252: *LedOut = ((UINT8)(1));
 33019  0046CE  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33020  0046D2  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33021  0046D6  0E01               	movlw	1
 33022  0046D8                     L70:
 33023  0046D8  6EDF               	movwf	indf2,c
 33024                           
 33025                           ;led.c: 253: break;
 33026  0046DA  D03A               	goto	l2122
 33027  0046DC                     
 33028                           ; BSR set to: 0
 33029                           ;led.c: 257: if (*LedOut == 1)
 33030                           
 33031                           ; BSR set to: 0
 33032  0046DC  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33033  0046E0  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33034  0046E4  04DE               	decf	postinc2,w,c
 33035  0046E6  A4D8               	btfss	status,2,c
 33036  0046E8  D006               	goto	l2125
 33037                           
 33038                           ; BSR set to: 0
 33039                           ;led.c: 258: {
 33040                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 33041  0046EA  0E00               	movlw	0
 33042  0046EC  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33043  0046EE  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33044  0046F0  EC6C  F032         	call	_Led_SetLedStatus
 33045                           
 33046                           ;led.c: 261: }
 33047  0046F4  D02D               	goto	l2122
 33048  0046F6                     l2125:
 33049                           
 33050                           ;led.c: 262: else
 33051                           ;led.c: 263: {
 33052                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 33053  0046F6  0E01               	movlw	1
 33054  0046F8  0100               	movlb	0	; () banked
 33055  0046FA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33056  0046FC  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33057  0046FE  EC6C  F032         	call	_Led_SetLedStatus
 33058                           
 33059                           ;led.c: 266: }
 33060                           ;led.c: 267: break;
 33061  004702  D026               	goto	l2122
 33062  004704                     
 33063                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 33064  004704  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 33065  004708  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 33066  00470C  EC6A  F013         	call	_LedBlinkStateMachine	;wreg free
 33067  004710  D008               	goto	L71
 33068  004712                     
 33069                           ; BSR set to: 0
 33070                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 33071                           
 33072                           ; BSR set to: 0
 33073  004712  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 33074  004716  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 33075  00471A  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 33076  00471E  EC21  F019         	call	_LedPulseStateMachine	;wreg free
 33077  004722                     L71:
 33078  004722  0100               	movlb	0	; () banked
 33079  004724  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33080                           
 33081                           ; BSR set to: 0
 33082                           ;led.c: 281: }
 33083                           
 33084                           ; BSR set to: 0
 33085                           ;led.c: 280: break;
 33086                           
 33087                           ;led.c: 279: default:
 33088                           
 33089                           ;led.c: 277: break;
 33090  004726  D014               	goto	l2122
 33091  004728                     l2120:
 33092                           
 33093                           ; BSR set to: 0
 33094                           
 33095                           ; BSR set to: 0
 33096  004728  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 33097  00472C  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 33098  004730  50DF               	movf	indf2,w,c
 33099                           
 33100                           ; Switch size 1, requested type "space"
 33101                           ; Number of cases is 5, Range of values is 0 to 4
 33102                           ; switch strategies available:
 33103                           ; Name         Instructions Cycles
 33104                           ; simple_byte           16     9 (average)
 33105                           ;	Chosen strategy is simple_byte
 33106  004732  0A00               	xorlw	0	; case 0
 33107  004734  B4D8               	btfsc	status,2,c
 33108  004736  D7C1               	goto	l2121
 33109  004738  0A01               	xorlw	1	; case 1
 33110  00473A  B4D8               	btfsc	status,2,c
 33111  00473C  D7C6               	goto	l2123
 33112  00473E  0A03               	xorlw	3	; case 2
 33113  004740  B4D8               	btfsc	status,2,c
 33114  004742  D7CC               	goto	l2124
 33115  004744  0A01               	xorlw	1	; case 3
 33116  004746  B4D8               	btfsc	status,2,c
 33117  004748  D7DD               	goto	l2127
 33118  00474A  0A07               	xorlw	7	; case 4
 33119  00474C  B4D8               	btfsc	status,2,c
 33120  00474E  D7E1               	goto	l2128
 33121  004750                     l2122:
 33122                           
 33123                           ;led.c: 283: return LedOutSts;
 33124                           
 33125                           ; BSR set to: 0
 33126  004750  0100               	movlb	0	; () banked
 33127  004752  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 33128  004754  0012               	return	
 33129  004756                     __end_of_LedStateMachine:
 33130                           	opt stack 0
 33131                           tosu	equ	0xFFF
 33132                           tosh	equ	0xFFE
 33133                           tosl	equ	0xFFD
 33134                           pclath	equ	0xFFA
 33135                           tblptru	equ	0xFF8
 33136                           tblptrh	equ	0xFF7
 33137                           tblptrl	equ	0xFF6
 33138                           tablat	equ	0xFF5
 33139                           prodh	equ	0xFF4
 33140                           prodl	equ	0xFF3
 33141                           intcon	equ	0xFF2
 33142                           intcon2	equ	0xFF1
 33143                           intcon3	equ	0xFF0
 33144                           indf0	equ	0xFEF
 33145                           postinc0	equ	0xFEE
 33146                           plusw0	equ	0xFEB
 33147                           fsr0h	equ	0xFEA
 33148                           fsr0l	equ	0xFE9
 33149                           wreg	equ	0xFE8
 33150                           indf1	equ	0xFE7
 33151                           postinc1	equ	0xFE6
 33152                           postdec1	equ	0xFE5
 33153                           plusw1	equ	0xFE3
 33154                           fsr1h	equ	0xFE2
 33155                           fsr1l	equ	0xFE1
 33156                           indf2	equ	0xFDF
 33157                           postinc2	equ	0xFDE
 33158                           postdec2	equ	0xFDD
 33159                           plusw2	equ	0xFDB
 33160                           fsr2h	equ	0xFDA
 33161                           fsr2l	equ	0xFD9
 33162                           status	equ	0xFD8
 33163                           
 33164 ;; *************** function _LedPulseStateMachine *****************
 33165 ;; Defined at:
 33166 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33167 ;; Parameters:    Size  Location     Type
 33168 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 33169 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33170 ;;  Led             1   44[BANK0 ] unsigned char 
 33171 ;; Auto vars:     Size  Location     Type
 33172 ;;		None
 33173 ;; Return value:  Size  Location     Type
 33174 ;;                  1    wreg      unsigned char 
 33175 ;; Registers used:
 33176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33177 ;; Tracked objects:
 33178 ;;		On entry : 0/0
 33179 ;;		On exit  : 0/0
 33180 ;;		Unchanged: 0/0
 33181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33182 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33185 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33186 ;;Total ram usage:        5 bytes
 33187 ;; Hardware stack levels used:    1
 33188 ;; Hardware stack levels required when called:   12
 33189 ;; This function calls:
 33190 ;;		_Led_SetLedStatus
 33191 ;;		___lwdiv
 33192 ;; This function is called by:
 33193 ;;		_LedStateMachine
 33194 ;; This function uses a non-reentrant model
 33195 ;;
 33196                           
 33197                           	psect	text155
 33198  003242                     __ptext155:
 33199                           	opt stack 0
 33200  003242                     _LedPulseStateMachine:
 33201                           	opt stack 14
 33202                           
 33203                           ;led.c: 185: switch (LedPulse->LedPulseState)
 33204                           
 33205                           ; BSR set to: 0
 33206                           ;incstack = 0
 33207  003242  D05C               	goto	l2110
 33208  003244                     
 33209                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 33210  003244  0100               	movlb	0	; () banked
 33211  003246  EE20 F001          	lfsr	2,1
 33212  00324A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33213  00324C  26D9               	addwf	fsr2l,f,c
 33214  00324E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33215  003250  22DA               	addwfc	fsr2h,f,c
 33216  003252  0E01               	movlw	1
 33217  003254  6EDF               	movwf	indf2,c
 33218                           
 33219                           ; BSR set to: 0
 33220                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 33221  003256  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33222  00325A  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33223  00325E  0E01               	movlw	1
 33224  003260  D036               	goto	L72
 33225  003262                     
 33226                           ;led.c: 196: LedPulse->LedPulseCounter++;
 33227                           
 33228                           ; BSR set to: 0
 33229  003262  0100               	movlb	0	; () banked
 33230  003264  EE20 F002          	lfsr	2,2
 33231  003268  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33232  00326A  26D9               	addwf	fsr2l,f,c
 33233  00326C  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33234  00326E  22DA               	addwfc	fsr2h,f,c
 33235  003270  2ADE               	incf	postinc2,f,c
 33236  003272  0E00               	movlw	0
 33237  003274  22DD               	addwfc	postdec2,f,c
 33238                           
 33239                           ; BSR set to: 0
 33240                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 33241  003276  EE20 F004          	lfsr	2,4
 33242  00327A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33243  00327C  26D9               	addwf	fsr2l,f,c
 33244  00327E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33245  003280  22DA               	addwfc	fsr2h,f,c
 33246  003282  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33247  003286  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33248  00328A  0E00               	movlw	0
 33249  00328C  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33250  00328E  0E32               	movlw	50
 33251  003290  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33252  003292  EC81  F02D         	call	___lwdiv	;wreg free
 33253  003296  0100               	movlb	0	; () banked
 33254  003298  EE20 F002          	lfsr	2,2
 33255  00329C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33256  00329E  26D9               	addwf	fsr2l,f,c
 33257  0032A0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33258  0032A2  22DA               	addwfc	fsr2h,f,c
 33259  0032A4  5183               	movf	?___lwdiv& (0+255),w,b
 33260  0032A6  5CDE               	subwf	postinc2,w,c
 33261  0032A8  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33262  0032AA  58DE               	subwfb	postinc2,w,c
 33263  0032AC  A0D8               	btfss	status,0,c
 33264  0032AE  D034               	goto	l2112
 33265                           
 33266                           ; BSR set to: 0
 33267                           ;led.c: 199: {
 33268                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 33269  0032B0  EE20 F002          	lfsr	2,2
 33270  0032B4  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33271  0032B6  26D9               	addwf	fsr2l,f,c
 33272  0032B8  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33273  0032BA  22DA               	addwfc	fsr2h,f,c
 33274  0032BC  0E00               	movlw	0
 33275  0032BE  6EDE               	movwf	postinc2,c
 33276  0032C0  0E00               	movlw	0
 33277  0032C2  6EDD               	movwf	postdec2,c
 33278                           
 33279                           ; BSR set to: 0
 33280                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 33281  0032C4  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33282  0032C8  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33283  0032CC  0E02               	movlw	2
 33284  0032CE                     L72:
 33285  0032CE  6EDF               	movwf	indf2,c
 33286                           
 33287                           ; BSR set to: 0
 33288                           ;led.c: 204: }
 33289                           ;led.c: 205: break;
 33290  0032D0  D023               	goto	l2112
 33291  0032D2                     
 33292                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 33293                           
 33294                           ; BSR set to: 0
 33295  0032D2  0100               	movlb	0	; () banked
 33296  0032D4  EE20 F001          	lfsr	2,1
 33297  0032D8  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33298  0032DA  26D9               	addwf	fsr2l,f,c
 33299  0032DC  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33300  0032DE  22DA               	addwfc	fsr2h,f,c
 33301  0032E0  0E00               	movlw	0
 33302  0032E2  6EDF               	movwf	indf2,c
 33303                           
 33304                           ; BSR set to: 0
 33305                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 33306  0032E4  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33307  0032E8  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33308  0032EC  0E00               	movlw	0
 33309  0032EE  6EDF               	movwf	indf2,c
 33310                           
 33311                           ; BSR set to: 0
 33312                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 33313  0032F0  0E00               	movlw	0
 33314  0032F2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33315  0032F4  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 33316  0032F6  EC6C  F032         	call	_Led_SetLedStatus
 33317                           
 33318                           ;led.c: 218: }
 33319                           
 33320                           ;led.c: 217: break;
 33321                           
 33322                           ;led.c: 216: default:
 33323                           
 33324                           ;led.c: 214: break;
 33325  0032FA  D00E               	goto	l2112
 33326  0032FC                     l2110:
 33327  0032FC  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33328  003300  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33329  003304  50DF               	movf	indf2,w,c
 33330                           
 33331                           ; Switch size 1, requested type "space"
 33332                           ; Number of cases is 3, Range of values is 0 to 2
 33333                           ; switch strategies available:
 33334                           ; Name         Instructions Cycles
 33335                           ; simple_byte           10     6 (average)
 33336                           ;	Chosen strategy is simple_byte
 33337  003306  0A00               	xorlw	0	; case 0
 33338  003308  B4D8               	btfsc	status,2,c
 33339  00330A  D79C               	goto	l2111
 33340  00330C  0A01               	xorlw	1	; case 1
 33341  00330E  B4D8               	btfsc	status,2,c
 33342  003310  D7A8               	goto	l2113
 33343  003312  0A03               	xorlw	3	; case 2
 33344  003314  B4D8               	btfsc	status,2,c
 33345  003316  D7DD               	goto	l2115
 33346  003318                     l2112:
 33347                           
 33348                           ;led.c: 221: return (LedPulse->LedOutState);
 33349  003318  0100               	movlb	0	; () banked
 33350  00331A  EE20 F001          	lfsr	2,1
 33351  00331E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33352  003320  26D9               	addwf	fsr2l,f,c
 33353  003322  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33354  003324  22DA               	addwfc	fsr2h,f,c
 33355  003326  50DF               	movf	indf2,w,c
 33356  003328  0012               	return	
 33357  00332A                     __end_of_LedPulseStateMachine:
 33358                           	opt stack 0
 33359                           tosu	equ	0xFFF
 33360                           tosh	equ	0xFFE
 33361                           tosl	equ	0xFFD
 33362                           pclath	equ	0xFFA
 33363                           tblptru	equ	0xFF8
 33364                           tblptrh	equ	0xFF7
 33365                           tblptrl	equ	0xFF6
 33366                           tablat	equ	0xFF5
 33367                           prodh	equ	0xFF4
 33368                           prodl	equ	0xFF3
 33369                           intcon	equ	0xFF2
 33370                           intcon2	equ	0xFF1
 33371                           intcon3	equ	0xFF0
 33372                           indf0	equ	0xFEF
 33373                           postinc0	equ	0xFEE
 33374                           plusw0	equ	0xFEB
 33375                           fsr0h	equ	0xFEA
 33376                           fsr0l	equ	0xFE9
 33377                           wreg	equ	0xFE8
 33378                           indf1	equ	0xFE7
 33379                           postinc1	equ	0xFE6
 33380                           postdec1	equ	0xFE5
 33381                           plusw1	equ	0xFE3
 33382                           fsr1h	equ	0xFE2
 33383                           fsr1l	equ	0xFE1
 33384                           indf2	equ	0xFDF
 33385                           postinc2	equ	0xFDE
 33386                           postdec2	equ	0xFDD
 33387                           plusw2	equ	0xFDB
 33388                           fsr2h	equ	0xFDA
 33389                           fsr2l	equ	0xFD9
 33390                           status	equ	0xFD8
 33391                           
 33392 ;; *************** function _Led_SetLedStatus *****************
 33393 ;; Defined at:
 33394 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33395 ;; Parameters:    Size  Location     Type
 33396 ;;  Led             1    wreg     unsigned char 
 33397 ;;  LedSts          1   29[BANK0 ] enum E8954
 33398 ;; Auto vars:     Size  Location     Type
 33399 ;;  Led             1   30[BANK0 ] unsigned char 
 33400 ;; Return value:  Size  Location     Type
 33401 ;;                  1    wreg      void 
 33402 ;; Registers used:
 33403 ;;		wreg, status,2, status,0
 33404 ;; Tracked objects:
 33405 ;;		On entry : 0/0
 33406 ;;		On exit  : 0/0
 33407 ;;		Unchanged: 0/0
 33408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33409 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33413 ;;Total ram usage:        2 bytes
 33414 ;; Hardware stack levels used:    1
 33415 ;; Hardware stack levels required when called:   11
 33416 ;; This function calls:
 33417 ;;		Nothing
 33418 ;; This function is called by:
 33419 ;;		_LedPulseStateMachine
 33420 ;;		_LedStateMachine
 33421 ;;		_waitSetupCall
 33422 ;;		_initFsm
 33423 ;;		_blinkForSeconds
 33424 ;; This function uses a non-reentrant model
 33425 ;;
 33426                           
 33427                           	psect	text156
 33428  0064D8                     __ptext156:
 33429                           	opt stack 0
 33430  0064D8                     _Led_SetLedStatus:
 33431                           	opt stack 14
 33432                           
 33433                           ; BSR set to: 0
 33434                           ;incstack = 0
 33435                           ;Led_SetLedStatus@Led stored from wreg
 33436  0064D8  0100               	movlb	0	; () banked
 33437  0064DA  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 33438                           
 33439                           ;led.c: 341: switch (Led)
 33440  0064DC  D009               	goto	l2141
 33441  0064DE                     l2142:
 33442                           
 33443                           ; BSR set to: 0
 33444                           ;led.c: 344: Led1Sts = LedSts;
 33445  0064DE  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 33446                           
 33447                           ;led.c: 345: break;
 33448  0064E2  0012               	return	
 33449  0064E4                     l2144:
 33450                           
 33451                           ; BSR set to: 0
 33452                           ;led.c: 348: Led2Sts = LedSts;
 33453  0064E4  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 33454                           
 33455                           ;led.c: 349: break;
 33456  0064E8  0012               	return	
 33457  0064EA                     l2145:
 33458                           
 33459                           ; BSR set to: 0
 33460                           ;led.c: 352: Led3Sts = LedSts;
 33461  0064EA  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 33462                           
 33463                           ; BSR set to: 0
 33464                           ;led.c: 357: }
 33465                           
 33466                           ; BSR set to: 0
 33467                           ;led.c: 356: break;
 33468                           
 33469                           ;led.c: 355: default:
 33470                           
 33471                           ;led.c: 353: break;
 33472  0064EE  0012               	return	
 33473  0064F0                     l2141:
 33474                           
 33475                           ; BSR set to: 0
 33476  0064F0  0100               	movlb	0	; () banked
 33477  0064F2  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 33478                           
 33479                           ; Switch size 1, requested type "space"
 33480                           ; Number of cases is 3, Range of values is 1 to 3
 33481                           ; switch strategies available:
 33482                           ; Name         Instructions Cycles
 33483                           ; simple_byte           10     6 (average)
 33484                           ;	Chosen strategy is simple_byte
 33485  0064F4  0A01               	xorlw	1	; case 1
 33486  0064F6  B4D8               	btfsc	status,2,c
 33487  0064F8  D7F2               	goto	l2142
 33488  0064FA  0A03               	xorlw	3	; case 2
 33489  0064FC  B4D8               	btfsc	status,2,c
 33490  0064FE  D7F2               	goto	l2144
 33491  006500  0A01               	xorlw	1	; case 3
 33492  006502  A4D8               	btfss	status,2,c
 33493  006504  0012               	return	
 33494  006506  D7F1               	goto	l2145
 33495  006508                     __end_of_Led_SetLedStatus:
 33496                           	opt stack 0
 33497                           tosu	equ	0xFFF
 33498                           tosh	equ	0xFFE
 33499                           tosl	equ	0xFFD
 33500                           pclath	equ	0xFFA
 33501                           tblptru	equ	0xFF8
 33502                           tblptrh	equ	0xFF7
 33503                           tblptrl	equ	0xFF6
 33504                           tablat	equ	0xFF5
 33505                           prodh	equ	0xFF4
 33506                           prodl	equ	0xFF3
 33507                           intcon	equ	0xFF2
 33508                           intcon2	equ	0xFF1
 33509                           intcon3	equ	0xFF0
 33510                           indf0	equ	0xFEF
 33511                           postinc0	equ	0xFEE
 33512                           plusw0	equ	0xFEB
 33513                           fsr0h	equ	0xFEA
 33514                           fsr0l	equ	0xFE9
 33515                           wreg	equ	0xFE8
 33516                           indf1	equ	0xFE7
 33517                           postinc1	equ	0xFE6
 33518                           postdec1	equ	0xFE5
 33519                           plusw1	equ	0xFE3
 33520                           fsr1h	equ	0xFE2
 33521                           fsr1l	equ	0xFE1
 33522                           indf2	equ	0xFDF
 33523                           postinc2	equ	0xFDE
 33524                           postdec2	equ	0xFDD
 33525                           plusw2	equ	0xFDB
 33526                           fsr2h	equ	0xFDA
 33527                           fsr2l	equ	0xFD9
 33528                           status	equ	0xFD8
 33529                           
 33530 ;; *************** function _LedBlinkStateMachine *****************
 33531 ;; Defined at:
 33532 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33533 ;; Parameters:    Size  Location     Type
 33534 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 33535 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 33536 ;; Auto vars:     Size  Location     Type
 33537 ;;		None
 33538 ;; Return value:  Size  Location     Type
 33539 ;;                  1    wreg      unsigned char 
 33540 ;; Registers used:
 33541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33542 ;; Tracked objects:
 33543 ;;		On entry : 0/0
 33544 ;;		On exit  : 0/0
 33545 ;;		Unchanged: 0/0
 33546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33547 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33549 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33550 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33551 ;;Total ram usage:        4 bytes
 33552 ;; Hardware stack levels used:    1
 33553 ;; Hardware stack levels required when called:   12
 33554 ;; This function calls:
 33555 ;;		___lwdiv
 33556 ;; This function is called by:
 33557 ;;		_LedStateMachine
 33558 ;; This function uses a non-reentrant model
 33559 ;;
 33560                           
 33561                           	psect	text157
 33562  0026D4                     __ptext157:
 33563                           	opt stack 0
 33564  0026D4                     _LedBlinkStateMachine:
 33565                           	opt stack 14
 33566                           
 33567                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 33568                           
 33569                           ; BSR set to: 0
 33570                           ;incstack = 0
 33571  0026D4  D08F               	goto	l2097
 33572  0026D6                     
 33573                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 33574  0026D6  0100               	movlb	0	; () banked
 33575  0026D8  EE20 F008          	lfsr	2,8
 33576  0026DC  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33577  0026DE  26D9               	addwf	fsr2l,f,c
 33578  0026E0  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33579  0026E2  22DA               	addwfc	fsr2h,f,c
 33580  0026E4  EE10 F001          	lfsr	1,1
 33581  0026E8  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33582  0026EA  26E1               	addwf	fsr1l,f,c
 33583  0026EC  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33584  0026EE  22E2               	addwfc	fsr1h,f,c
 33585  0026F0  CFDF FFE7          	movff	indf2,indf1
 33586                           
 33587                           ; BSR set to: 0
 33588                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 33589  0026F4  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 33590  0026F8  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 33591  0026FC  D040               	goto	L73
 33592  0026FE                     
 33593                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 33594                           
 33595                           ; BSR set to: 0
 33596  0026FE  0100               	movlb	0	; () banked
 33597  002700  EE20 F002          	lfsr	2,2
 33598  002704  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33599  002706  26D9               	addwf	fsr2l,f,c
 33600  002708  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33601  00270A  22DA               	addwfc	fsr2h,f,c
 33602  00270C  2ADE               	incf	postinc2,f,c
 33603  00270E  0E00               	movlw	0
 33604  002710  22DD               	addwfc	postdec2,f,c
 33605                           
 33606                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 33607  002712  EE20 F001          	lfsr	2,1
 33608  002716  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33609  002718  26D9               	addwf	fsr2l,f,c
 33610  00271A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33611  00271C  22DA               	addwfc	fsr2h,f,c
 33612  00271E  50DF               	movf	indf2,w,c
 33613  002720  A4D8               	btfss	status,2,c
 33614  002722  D02F               	goto	l2101
 33615                           
 33616                           ; BSR set to: 0
 33617                           ;led.c: 142: {
 33618                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 33619  002724  EE20 F006          	lfsr	2,6
 33620  002728  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33621  00272A  26D9               	addwf	fsr2l,f,c
 33622  00272C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33623  00272E  22DA               	addwfc	fsr2h,f,c
 33624  002730  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33625  002734  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33626  002738  0E00               	movlw	0
 33627  00273A  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33628  00273C  0E32               	movlw	50
 33629  00273E  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33630  002740  EC81  F02D         	call	___lwdiv	;wreg free
 33631  002744  0100               	movlb	0	; () banked
 33632  002746  EE20 F002          	lfsr	2,2
 33633  00274A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33634  00274C  26D9               	addwf	fsr2l,f,c
 33635  00274E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33636  002750  22DA               	addwfc	fsr2h,f,c
 33637  002752  5183               	movf	?___lwdiv& (0+255),w,b
 33638  002754  5CDE               	subwf	postinc2,w,c
 33639  002756  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33640  002758  58DE               	subwfb	postinc2,w,c
 33641  00275A  A0D8               	btfss	status,0,c
 33642  00275C  D056               	goto	l2099
 33643                           
 33644                           ; BSR set to: 0
 33645                           ;led.c: 145: {
 33646                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 33647  00275E  EE20 F002          	lfsr	2,2
 33648  002762  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33649  002764  26D9               	addwf	fsr2l,f,c
 33650  002766  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33651  002768  22DA               	addwfc	fsr2h,f,c
 33652  00276A  0E00               	movlw	0
 33653  00276C  6EDE               	movwf	postinc2,c
 33654  00276E  0E00               	movlw	0
 33655  002770  6EDD               	movwf	postdec2,c
 33656                           
 33657                           ;led.c: 149: LedBlink->LedOutState = OnState;
 33658  002772  EE20 F001          	lfsr	2,1
 33659  002776  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33660  002778  26D9               	addwf	fsr2l,f,c
 33661  00277A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33662  00277C  22DA               	addwfc	fsr2h,f,c
 33663  00277E                     L73:
 33664  00277E  0E01               	movlw	1
 33665  002780  D037               	goto	L74
 33666  002782                     l2101:
 33667                           
 33668                           ; BSR set to: 0
 33669                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 33670                           
 33671                           ; BSR set to: 0
 33672  002782  EE20 F001          	lfsr	2,1
 33673  002786  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33674  002788  26D9               	addwf	fsr2l,f,c
 33675  00278A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33676  00278C  22DA               	addwfc	fsr2h,f,c
 33677  00278E  04DE               	decf	postinc2,w,c
 33678  002790  A4D8               	btfss	status,2,c
 33679  002792  D03B               	goto	l2099
 33680                           
 33681                           ; BSR set to: 0
 33682                           ;led.c: 153: {
 33683                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 33684  002794  EE20 F004          	lfsr	2,4
 33685  002798  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33686  00279A  26D9               	addwf	fsr2l,f,c
 33687  00279C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33688  00279E  22DA               	addwfc	fsr2h,f,c
 33689  0027A0  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33690  0027A4  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33691  0027A8  0E00               	movlw	0
 33692  0027AA  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33693  0027AC  0E32               	movlw	50
 33694  0027AE  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33695  0027B0  EC81  F02D         	call	___lwdiv	;wreg free
 33696  0027B4  0100               	movlb	0	; () banked
 33697  0027B6  EE20 F002          	lfsr	2,2
 33698  0027BA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33699  0027BC  26D9               	addwf	fsr2l,f,c
 33700  0027BE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33701  0027C0  22DA               	addwfc	fsr2h,f,c
 33702  0027C2  5183               	movf	?___lwdiv& (0+255),w,b
 33703  0027C4  5CDE               	subwf	postinc2,w,c
 33704  0027C6  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33705  0027C8  58DE               	subwfb	postinc2,w,c
 33706  0027CA  A0D8               	btfss	status,0,c
 33707  0027CC  D01E               	goto	l2099
 33708                           
 33709                           ; BSR set to: 0
 33710                           ;led.c: 156: {
 33711                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 33712  0027CE  EE20 F002          	lfsr	2,2
 33713  0027D2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33714  0027D4  26D9               	addwf	fsr2l,f,c
 33715  0027D6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33716  0027D8  22DA               	addwfc	fsr2h,f,c
 33717  0027DA  0E00               	movlw	0
 33718  0027DC  6EDE               	movwf	postinc2,c
 33719  0027DE  0E00               	movlw	0
 33720  0027E0  6EDD               	movwf	postdec2,c
 33721                           
 33722                           ;led.c: 160: LedBlink->LedOutState = OffState;
 33723  0027E2  EE20 F001          	lfsr	2,1
 33724  0027E6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33725  0027E8  26D9               	addwf	fsr2l,f,c
 33726  0027EA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33727  0027EC  22DA               	addwfc	fsr2h,f,c
 33728  0027EE  0E00               	movlw	0
 33729  0027F0                     L74:
 33730  0027F0  6EDF               	movwf	indf2,c
 33731                           
 33732                           ; BSR set to: 0
 33733                           ;led.c: 167: }
 33734                           
 33735                           ; BSR set to: 0
 33736                           ;led.c: 166: break;
 33737                           
 33738                           ;led.c: 165: default:
 33739                           
 33740                           ; BSR set to: 0
 33741                           ;led.c: 161: }
 33742                           ;led.c: 162: }
 33743                           ;led.c: 163: break;
 33744                           
 33745                           ; BSR set to: 0
 33746                           
 33747                           ; BSR set to: 0
 33748  0027F2  D00B               	goto	l2099
 33749  0027F4                     l2097:
 33750                           
 33751                           ; BSR set to: 0
 33752  0027F4  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 33753  0027F8  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 33754  0027FC  50DF               	movf	indf2,w,c
 33755                           
 33756                           ; Switch size 1, requested type "space"
 33757                           ; Number of cases is 2, Range of values is 0 to 1
 33758                           ; switch strategies available:
 33759                           ; Name         Instructions Cycles
 33760                           ; simple_byte            7     4 (average)
 33761                           ;	Chosen strategy is simple_byte
 33762  0027FE  0A00               	xorlw	0	; case 0
 33763  002800  B4D8               	btfsc	status,2,c
 33764  002802  D769               	goto	l2098
 33765  002804  0A01               	xorlw	1	; case 1
 33766  002806  B4D8               	btfsc	status,2,c
 33767  002808  D77A               	goto	l2100
 33768  00280A                     l2099:
 33769                           
 33770                           ;led.c: 170: return (LedBlink->LedOutState);
 33771  00280A  0100               	movlb	0	; () banked
 33772  00280C  EE20 F001          	lfsr	2,1
 33773  002810  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33774  002812  26D9               	addwf	fsr2l,f,c
 33775  002814  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33776  002816  22DA               	addwfc	fsr2h,f,c
 33777  002818  50DF               	movf	indf2,w,c
 33778  00281A  0012               	return	
 33779  00281C                     __end_of_LedBlinkStateMachine:
 33780                           	opt stack 0
 33781                           tosu	equ	0xFFF
 33782                           tosh	equ	0xFFE
 33783                           tosl	equ	0xFFD
 33784                           pclath	equ	0xFFA
 33785                           tblptru	equ	0xFF8
 33786                           tblptrh	equ	0xFF7
 33787                           tblptrl	equ	0xFF6
 33788                           tablat	equ	0xFF5
 33789                           prodh	equ	0xFF4
 33790                           prodl	equ	0xFF3
 33791                           intcon	equ	0xFF2
 33792                           intcon2	equ	0xFF1
 33793                           intcon3	equ	0xFF0
 33794                           indf0	equ	0xFEF
 33795                           postinc0	equ	0xFEE
 33796                           plusw0	equ	0xFEB
 33797                           fsr0h	equ	0xFEA
 33798                           fsr0l	equ	0xFE9
 33799                           wreg	equ	0xFE8
 33800                           indf1	equ	0xFE7
 33801                           postinc1	equ	0xFE6
 33802                           postdec1	equ	0xFE5
 33803                           plusw1	equ	0xFE3
 33804                           fsr1h	equ	0xFE2
 33805                           fsr1l	equ	0xFE1
 33806                           indf2	equ	0xFDF
 33807                           postinc2	equ	0xFDE
 33808                           postdec2	equ	0xFDD
 33809                           plusw2	equ	0xFDB
 33810                           fsr2h	equ	0xFDA
 33811                           fsr2l	equ	0xFD9
 33812                           status	equ	0xFD8
 33813                           
 33814 ;; *************** function ___lwdiv *****************
 33815 ;; Defined at:
 33816 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 33817 ;; Parameters:    Size  Location     Type
 33818 ;;  dividend        2   35[BANK0 ] unsigned int 
 33819 ;;  divisor         2   37[BANK0 ] unsigned int 
 33820 ;; Auto vars:     Size  Location     Type
 33821 ;;  quotient        2   40[BANK0 ] unsigned int 
 33822 ;;  counter         1   39[BANK0 ] unsigned char 
 33823 ;; Return value:  Size  Location     Type
 33824 ;;                  2   35[BANK0 ] unsigned int 
 33825 ;; Registers used:
 33826 ;;		wreg, status,2, status,0
 33827 ;; Tracked objects:
 33828 ;;		On entry : 0/0
 33829 ;;		On exit  : 0/0
 33830 ;;		Unchanged: 0/0
 33831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33833 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33835 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33836 ;;Total ram usage:        7 bytes
 33837 ;; Hardware stack levels used:    1
 33838 ;; Hardware stack levels required when called:   11
 33839 ;; This function calls:
 33840 ;;		Nothing
 33841 ;; This function is called by:
 33842 ;;		_LedBlinkStateMachine
 33843 ;;		_LedPulseStateMachine
 33844 ;;		_secondsAppTimer
 33845 ;;		_utoa
 33846 ;; This function uses a non-reentrant model
 33847 ;;
 33848                           
 33849                           	psect	text158
 33850  005B02                     __ptext158:
 33851                           	opt stack 0
 33852  005B02                     ___lwdiv:
 33853                           	opt stack 14
 33854                           
 33855                           ; BSR set to: 0
 33856                           ;incstack = 0
 33857  005B02  0E00               	movlw	0
 33858  005B04  0100               	movlb	0	; () banked
 33859  005B06  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 33860  005B08  0E00               	movlw	0
 33861  005B0A  6F88               	movwf	___lwdiv@quotient& (0+255),b
 33862                           
 33863                           ; BSR set to: 0
 33864  005B0C  5185               	movf	___lwdiv@divisor& (0+255),w,b
 33865  005B0E  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 33866  005B10  B4D8               	btfsc	status,2,c
 33867  005B12  D01C               	goto	l3335
 33868                           
 33869                           ; BSR set to: 0
 33870  005B14  0E01               	movlw	1
 33871  005B16  6F87               	movwf	___lwdiv@counter& (0+255),b
 33872  005B18  D004               	goto	l3330
 33873  005B1A                     
 33874                           ; BSR set to: 0
 33875                           
 33876                           ; BSR set to: 0
 33877  005B1A  90D8               	bcf	status,0,c
 33878  005B1C  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 33879  005B1E  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 33880  005B20  2B87               	incf	___lwdiv@counter& (0+255),f,b
 33881  005B22                     l3330:
 33882                           
 33883                           ; BSR set to: 0
 33884                           
 33885                           ; BSR set to: 0
 33886  005B22  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 33887  005B24  D7FA               	goto	l3331
 33888  005B26                     u12000:
 33889                           
 33890                           ; BSR set to: 0
 33891                           
 33892                           ; BSR set to: 0
 33893                           
 33894                           ; BSR set to: 0
 33895  005B26  90D8               	bcf	status,0,c
 33896  005B28  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 33897  005B2A  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 33898                           
 33899                           ; BSR set to: 0
 33900  005B2C  5185               	movf	___lwdiv@divisor& (0+255),w,b
 33901  005B2E  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 33902  005B30  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 33903  005B32  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 33904  005B34  A0D8               	btfss	status,0,c
 33905  005B36  D005               	goto	l3334
 33906                           
 33907                           ; BSR set to: 0
 33908  005B38  5185               	movf	___lwdiv@divisor& (0+255),w,b
 33909  005B3A  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 33910  005B3C  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 33911  005B3E  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 33912                           
 33913                           ; BSR set to: 0
 33914  005B40  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 33915  005B42                     l3334:
 33916                           
 33917                           ; BSR set to: 0
 33918                           
 33919                           ; BSR set to: 0
 33920  005B42  90D8               	bcf	status,0,c
 33921  005B44  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 33922  005B46  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 33923                           
 33924                           ; BSR set to: 0
 33925  005B48  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 33926  005B4A  D7ED               	goto	u12000
 33927  005B4C                     l3335:
 33928                           
 33929                           ; BSR set to: 0
 33930                           
 33931                           ; BSR set to: 0
 33932  005B4C  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 33933  005B50  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 33934                           
 33935                           ; BSR set to: 0
 33936  005B54  0012               	return		;funcret
 33937  005B56                     __end_of___lwdiv:
 33938                           	opt stack 0
 33939                           tosu	equ	0xFFF
 33940                           tosh	equ	0xFFE
 33941                           tosl	equ	0xFFD
 33942                           pclath	equ	0xFFA
 33943                           tblptru	equ	0xFF8
 33944                           tblptrh	equ	0xFF7
 33945                           tblptrl	equ	0xFF6
 33946                           tablat	equ	0xFF5
 33947                           prodh	equ	0xFF4
 33948                           prodl	equ	0xFF3
 33949                           intcon	equ	0xFF2
 33950                           intcon2	equ	0xFF1
 33951                           intcon3	equ	0xFF0
 33952                           indf0	equ	0xFEF
 33953                           postinc0	equ	0xFEE
 33954                           plusw0	equ	0xFEB
 33955                           fsr0h	equ	0xFEA
 33956                           fsr0l	equ	0xFE9
 33957                           wreg	equ	0xFE8
 33958                           indf1	equ	0xFE7
 33959                           postinc1	equ	0xFE6
 33960                           postdec1	equ	0xFE5
 33961                           plusw1	equ	0xFE3
 33962                           fsr1h	equ	0xFE2
 33963                           fsr1l	equ	0xFE1
 33964                           indf2	equ	0xFDF
 33965                           postinc2	equ	0xFDE
 33966                           postdec2	equ	0xFDD
 33967                           plusw2	equ	0xFDB
 33968                           fsr2h	equ	0xFDA
 33969                           fsr2l	equ	0xFD9
 33970                           status	equ	0xFD8
 33971                           
 33972 ;; *************** function _OsAlrm_SetOsAlarm *****************
 33973 ;; Defined at:
 33974 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33975 ;; Parameters:    Size  Location     Type
 33976 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 33977 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 33978 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 33979 ;;		 -> I2cDummyTx(1), 
 33980 ;; Auto vars:     Size  Location     Type
 33981 ;;		None
 33982 ;; Return value:  Size  Location     Type
 33983 ;;                  1    wreg      void 
 33984 ;; Registers used:
 33985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33986 ;; Tracked objects:
 33987 ;;		On entry : 0/0
 33988 ;;		On exit  : 0/0
 33989 ;;		Unchanged: 0/0
 33990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33991 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33994 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33995 ;;Total ram usage:        8 bytes
 33996 ;; Hardware stack levels used:    1
 33997 ;; Hardware stack levels required when called:   12
 33998 ;; This function calls:
 33999 ;;		___wmul
 34000 ;; This function is called by:
 34001 ;;		_I2cSlv_MainTask
 34002 ;; This function uses a non-reentrant model
 34003 ;;
 34004                           
 34005                           	psect	text159
 34006  003ED4                     __ptext159:
 34007                           	opt stack 0
 34008  003ED4                     _OsAlrm_SetOsAlarm:
 34009                           	opt stack 15
 34010                           
 34011                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 34012                           
 34013                           ; BSR set to: 0
 34014                           ;incstack = 0
 34015  003ED4  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34016  003ED8  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34017  003EDC  0E00               	movlw	0
 34018  003EDE  0100               	movlb	0	; () banked
 34019  003EE0  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34020  003EE2  0E0B               	movlw	11
 34021  003EE4  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34022  003EE6  ECF2  F032         	call	___wmul	;wreg free
 34023  003EEA  0E00               	movlw	low _OsAlarms
 34024  003EEC  0100               	movlb	0	; () banked
 34025  003EEE  257D               	addwf	?___wmul& (0+255),w,b
 34026  003EF0  6ED9               	movwf	fsr2l,c
 34027  003EF2  0E06               	movlw	high _OsAlarms
 34028  003EF4  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34029  003EF6  6EDA               	movwf	fsr2h,c
 34030  003EF8  0E01               	movlw	1
 34031  003EFA  6EDF               	movwf	indf2,c
 34032                           
 34033                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 34034  003EFC  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34035  003F00  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34036  003F04  0E00               	movlw	0
 34037  003F06  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34038  003F08  0E0B               	movlw	11
 34039  003F0A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34040  003F0C  ECF2  F032         	call	___wmul	;wreg free
 34041  003F10  0E01               	movlw	1
 34042  003F12  0100               	movlb	0	; () banked
 34043  003F14  277D               	addwf	?___wmul& (0+255),f,b
 34044  003F16  0E00               	movlw	0
 34045  003F18  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34046  003F1A  0E00               	movlw	low _OsAlarms
 34047  003F1C  257D               	addwf	?___wmul& (0+255),w,b
 34048  003F1E  6ED9               	movwf	fsr2l,c
 34049  003F20  0E06               	movlw	high _OsAlarms
 34050  003F22  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34051  003F24  6EDA               	movwf	fsr2h,c
 34052  003F26  6ADE               	clrf	postinc2,c
 34053  003F28  6ADE               	clrf	postinc2,c
 34054  003F2A  6ADE               	clrf	postinc2,c
 34055  003F2C  6ADD               	clrf	postdec2,c
 34056                           
 34057                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 34058  003F2E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34059  003F32  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34060  003F36  0E00               	movlw	0
 34061  003F38  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34062  003F3A  0E0B               	movlw	11
 34063  003F3C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34064  003F3E  ECF2  F032         	call	___wmul	;wreg free
 34065  003F42  0E05               	movlw	5
 34066  003F44  0100               	movlb	0	; () banked
 34067  003F46  277D               	addwf	?___wmul& (0+255),f,b
 34068  003F48  0E00               	movlw	0
 34069  003F4A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34070  003F4C  0E00               	movlw	low _OsAlarms
 34071  003F4E  257D               	addwf	?___wmul& (0+255),w,b
 34072  003F50  6ED9               	movwf	fsr2l,c
 34073  003F52  0E06               	movlw	high _OsAlarms
 34074  003F54  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34075  003F56  6EDA               	movwf	fsr2h,c
 34076  003F58  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 34077  003F5C  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 34078  003F60  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 34079  003F64  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 34080                           
 34081                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 34082  003F68  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34083  003F6C  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34084  003F70  0E00               	movlw	0
 34085  003F72  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34086  003F74  0E0B               	movlw	11
 34087  003F76  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34088  003F78  ECF2  F032         	call	___wmul	;wreg free
 34089  003F7C  0E09               	movlw	9
 34090  003F7E  0100               	movlb	0	; () banked
 34091  003F80  277D               	addwf	?___wmul& (0+255),f,b
 34092  003F82  0E00               	movlw	0
 34093  003F84  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34094  003F86  0E00               	movlw	low _OsAlarms
 34095  003F88  257D               	addwf	?___wmul& (0+255),w,b
 34096  003F8A  6ED9               	movwf	fsr2l,c
 34097  003F8C  0E06               	movlw	high _OsAlarms
 34098  003F8E  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34099  003F90  6EDA               	movwf	fsr2h,c
 34100  003F92  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 34101  003F96  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 34102                           
 34103                           ; BSR set to: 0
 34104  003F9A  0012               	return		;funcret
 34105  003F9C                     __end_of_OsAlrm_SetOsAlarm:
 34106                           	opt stack 0
 34107                           tosu	equ	0xFFF
 34108                           tosh	equ	0xFFE
 34109                           tosl	equ	0xFFD
 34110                           pclath	equ	0xFFA
 34111                           tblptru	equ	0xFF8
 34112                           tblptrh	equ	0xFF7
 34113                           tblptrl	equ	0xFF6
 34114                           tablat	equ	0xFF5
 34115                           prodh	equ	0xFF4
 34116                           prodl	equ	0xFF3
 34117                           intcon	equ	0xFF2
 34118                           intcon2	equ	0xFF1
 34119                           intcon3	equ	0xFF0
 34120                           indf0	equ	0xFEF
 34121                           postinc0	equ	0xFEE
 34122                           plusw0	equ	0xFEB
 34123                           fsr0h	equ	0xFEA
 34124                           fsr0l	equ	0xFE9
 34125                           wreg	equ	0xFE8
 34126                           indf1	equ	0xFE7
 34127                           postinc1	equ	0xFE6
 34128                           postdec1	equ	0xFE5
 34129                           plusw1	equ	0xFE3
 34130                           fsr1h	equ	0xFE2
 34131                           fsr1l	equ	0xFE1
 34132                           indf2	equ	0xFDF
 34133                           postinc2	equ	0xFDE
 34134                           postdec2	equ	0xFDD
 34135                           plusw2	equ	0xFDB
 34136                           fsr2h	equ	0xFDA
 34137                           fsr2l	equ	0xFD9
 34138                           status	equ	0xFD8
 34139                           
 34140 ;; *************** function ___wmul *****************
 34141 ;; Defined at:
 34142 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 34143 ;; Parameters:    Size  Location     Type
 34144 ;;  multiplier      2   29[BANK0 ] unsigned int 
 34145 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 34146 ;; Auto vars:     Size  Location     Type
 34147 ;;  product         2   33[BANK0 ] unsigned int 
 34148 ;; Return value:  Size  Location     Type
 34149 ;;                  2   29[BANK0 ] unsigned int 
 34150 ;; Registers used:
 34151 ;;		wreg, status,2, status,0, prodl, prodh
 34152 ;; Tracked objects:
 34153 ;;		On entry : 0/0
 34154 ;;		On exit  : 0/0
 34155 ;;		Unchanged: 0/0
 34156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34157 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34158 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34160 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34161 ;;Total ram usage:        6 bytes
 34162 ;; Hardware stack levels used:    1
 34163 ;; Hardware stack levels required when called:   11
 34164 ;; This function calls:
 34165 ;;		Nothing
 34166 ;; This function is called by:
 34167 ;;		_OsAlrm_SetOsAlarm
 34168 ;;		_secondsAppTimer
 34169 ;;		_atoi
 34170 ;; This function uses a non-reentrant model
 34171 ;;
 34172                           
 34173                           	psect	text160
 34174  0065E4                     __ptext160:
 34175                           	opt stack 0
 34176  0065E4                     ___wmul:
 34177                           	opt stack 13
 34178                           
 34179                           ; BSR set to: 0
 34180                           ;incstack = 0
 34181  0065E4  0100               	movlb	0	; () banked
 34182  0065E6  517D               	movf	___wmul@multiplier& (0+255),w,b
 34183  0065E8  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34184  0065EA  CFF3 F081          	movff	prodl,___wmul@product
 34185  0065EE  CFF4 F082          	movff	prodh,___wmul@product+1
 34186  0065F2  517D               	movf	___wmul@multiplier& (0+255),w,b
 34187  0065F4  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 34188  0065F6  50F3               	movf	prodl,w,c
 34189  0065F8  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34190  0065FA  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 34191  0065FC  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34192  0065FE  50F3               	movf	prodl,w,c
 34193  006600  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34194                           
 34195                           ; BSR set to: 0
 34196  006602  C081  F07D         	movff	___wmul@product,?___wmul
 34197  006606  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 34198  00660A  0012               	return	
 34199  00660C                     __end_of___wmul:
 34200                           	opt stack 0
 34201                           tosu	equ	0xFFF
 34202                           tosh	equ	0xFFE
 34203                           tosl	equ	0xFFD
 34204                           pclath	equ	0xFFA
 34205                           tblptru	equ	0xFF8
 34206                           tblptrh	equ	0xFF7
 34207                           tblptrl	equ	0xFF6
 34208                           tablat	equ	0xFF5
 34209                           prodh	equ	0xFF4
 34210                           prodl	equ	0xFF3
 34211                           intcon	equ	0xFF2
 34212                           intcon2	equ	0xFF1
 34213                           intcon3	equ	0xFF0
 34214                           indf0	equ	0xFEF
 34215                           postinc0	equ	0xFEE
 34216                           plusw0	equ	0xFEB
 34217                           fsr0h	equ	0xFEA
 34218                           fsr0l	equ	0xFE9
 34219                           wreg	equ	0xFE8
 34220                           indf1	equ	0xFE7
 34221                           postinc1	equ	0xFE6
 34222                           postdec1	equ	0xFE5
 34223                           plusw1	equ	0xFE3
 34224                           fsr1h	equ	0xFE2
 34225                           fsr1l	equ	0xFE1
 34226                           indf2	equ	0xFDF
 34227                           postinc2	equ	0xFDE
 34228                           postdec2	equ	0xFDD
 34229                           plusw2	equ	0xFDB
 34230                           fsr2h	equ	0xFDA
 34231                           fsr2l	equ	0xFD9
 34232                           status	equ	0xFD8
 34233                           
 34234 ;; *************** function _I2c_InitI2cModule *****************
 34235 ;; Defined at:
 34236 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34237 ;; Parameters:    Size  Location     Type
 34238 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 34239 ;;		 -> I2cConfig(10), 
 34240 ;; Auto vars:     Size  Location     Type
 34241 ;;		None
 34242 ;; Return value:  Size  Location     Type
 34243 ;;                  1    wreg      void 
 34244 ;; Registers used:
 34245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34246 ;; Tracked objects:
 34247 ;;		On entry : 0/0
 34248 ;;		On exit  : 0/0
 34249 ;;		Unchanged: 0/0
 34250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34251 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34253 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34254 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34255 ;;Total ram usage:        4 bytes
 34256 ;; Hardware stack levels used:    1
 34257 ;; Hardware stack levels required when called:   13
 34258 ;; This function calls:
 34259 ;;		_SetBaudRate
 34260 ;; This function is called by:
 34261 ;;		_I2cSlv_MainTask
 34262 ;; This function uses a non-reentrant model
 34263 ;;
 34264                           
 34265                           	psect	text161
 34266  005386                     __ptext161:
 34267                           	opt stack 0
 34268  005386                     _I2c_InitI2cModule:
 34269                           	opt stack 14
 34270                           
 34271                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 34272                           
 34273                           ; BSR set to: 0
 34274                           ;incstack = 0
 34275  005386  8295               	bsf	3989,1,c	;volatile
 34276                           
 34277                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 34278  005388  8095               	bsf	3989,0,c	;volatile
 34279                           
 34280                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 34281  00538A  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 34282  00538E  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 34283  005392  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 34284  005396  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 34285  00539A  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 34286  00539E  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 34287  0053A2  0100               	movlb	0	; () banked
 34288  0053A4  EE20 F004          	lfsr	2,4
 34289  0053A8  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34290  0053AA  26D9               	addwf	fsr2l,f,c
 34291  0053AC  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34292  0053AE  22DA               	addwfc	fsr2h,f,c
 34293  0053B0  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 34294  0053B4  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 34295  0053B8  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 34296  0053BC  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 34297  0053C0  ECEC  F02E         	call	_SetBaudRate	;wreg free
 34298                           
 34299                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 34300  0053C4  0100               	movlb	0	; () banked
 34301  0053C6  EE20 F008          	lfsr	2,8
 34302  0053CA  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34303  0053CC  26D9               	addwf	fsr2l,f,c
 34304  0053CE  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34305  0053D0  22DA               	addwfc	fsr2h,f,c
 34306  0053D2  50DF               	movf	indf2,w,c
 34307  0053D4  1272               	iorwf	3954,f,c	;volatile
 34308                           
 34309                           ; BSR set to: 0
 34310                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 34311  0053D6  EE20 F009          	lfsr	2,9
 34312  0053DA  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34313  0053DC  26D9               	addwf	fsr2l,f,c
 34314  0053DE  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34315  0053E0  22DA               	addwfc	fsr2h,f,c
 34316  0053E2  50DF               	movf	indf2,w,c
 34317  0053E4  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 34318  0053E6  0E05               	movlw	5
 34319  0053E8  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 34320  0053EA                     u14525:
 34321  0053EA  90D8               	bcf	status,0,c
 34322  0053EC  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 34323  0053EE  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 34324  0053F0  D7FC               	goto	u14525
 34325  0053F2  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 34326  0053F4  1272               	iorwf	3954,f,c	;volatile
 34327                           
 34328                           ; BSR set to: 0
 34329  0053F6  0012               	return		;funcret
 34330  0053F8                     __end_of_I2c_InitI2cModule:
 34331                           	opt stack 0
 34332                           tosu	equ	0xFFF
 34333                           tosh	equ	0xFFE
 34334                           tosl	equ	0xFFD
 34335                           pclath	equ	0xFFA
 34336                           tblptru	equ	0xFF8
 34337                           tblptrh	equ	0xFF7
 34338                           tblptrl	equ	0xFF6
 34339                           tablat	equ	0xFF5
 34340                           prodh	equ	0xFF4
 34341                           prodl	equ	0xFF3
 34342                           intcon	equ	0xFF2
 34343                           intcon2	equ	0xFF1
 34344                           intcon3	equ	0xFF0
 34345                           indf0	equ	0xFEF
 34346                           postinc0	equ	0xFEE
 34347                           plusw0	equ	0xFEB
 34348                           fsr0h	equ	0xFEA
 34349                           fsr0l	equ	0xFE9
 34350                           wreg	equ	0xFE8
 34351                           indf1	equ	0xFE7
 34352                           postinc1	equ	0xFE6
 34353                           postdec1	equ	0xFE5
 34354                           plusw1	equ	0xFE3
 34355                           fsr1h	equ	0xFE2
 34356                           fsr1l	equ	0xFE1
 34357                           indf2	equ	0xFDF
 34358                           postinc2	equ	0xFDE
 34359                           postdec2	equ	0xFDD
 34360                           plusw2	equ	0xFDB
 34361                           fsr2h	equ	0xFDA
 34362                           fsr2l	equ	0xFD9
 34363                           status	equ	0xFD8
 34364                           
 34365 ;; *************** function _SetBaudRate *****************
 34366 ;; Defined at:
 34367 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34368 ;; Parameters:    Size  Location     Type
 34369 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 34370 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 34371 ;; Auto vars:     Size  Location     Type
 34372 ;;		None
 34373 ;; Return value:  Size  Location     Type
 34374 ;;                  1    wreg      void 
 34375 ;; Registers used:
 34376 ;;		wreg, status,2, status,0, cstack
 34377 ;; Tracked objects:
 34378 ;;		On entry : 0/0
 34379 ;;		On exit  : 0/0
 34380 ;;		Unchanged: 0/0
 34381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34382 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34384 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34385 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34386 ;;Total ram usage:       12 bytes
 34387 ;; Hardware stack levels used:    1
 34388 ;; Hardware stack levels required when called:   12
 34389 ;; This function calls:
 34390 ;;		___lldiv
 34391 ;; This function is called by:
 34392 ;;		_I2c_InitI2cModule
 34393 ;; This function uses a non-reentrant model
 34394 ;;
 34395                           
 34396                           	psect	text162
 34397  005DD8                     __ptext162:
 34398                           	opt stack 0
 34399  005DD8                     _SetBaudRate:
 34400                           	opt stack 14
 34401                           
 34402                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 34403                           
 34404                           ; BSR set to: 0
 34405                           ;incstack = 0
 34406  005DD8  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 34407  005DDC  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 34408  005DE0  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 34409  005DE4  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 34410  005DE8  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 34411  005DEC  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 34412  005DF0  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 34413  005DF4  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 34414  005DF8  0E02               	movlw	2
 34415  005DFA                     u13345:
 34416  005DFA  90D8               	bcf	status,0,c
 34417  005DFC  0100               	movlb	0	; () banked
 34418  005DFE  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 34419  005E00  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 34420  005E02  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 34421  005E04  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 34422  005E06  2EE8               	decfsz	wreg,f,c
 34423  005E08  D7F8               	goto	u13345
 34424  005E0A  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 34425  005E0E  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 34426  005E12  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 34427  005E16  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 34428  005E1A  EC58  F028         	call	___lldiv	;wreg free
 34429  005E1E  0100               	movlb	0	; () banked
 34430  005E20  0589               	decf	?___lldiv& (0+255),w,b
 34431  005E22  6E74               	movwf	3956,c	;volatile
 34432                           
 34433                           ; BSR set to: 0
 34434  005E24  0012               	return		;funcret
 34435  005E26                     __end_of_SetBaudRate:
 34436                           	opt stack 0
 34437                           tosu	equ	0xFFF
 34438                           tosh	equ	0xFFE
 34439                           tosl	equ	0xFFD
 34440                           pclath	equ	0xFFA
 34441                           tblptru	equ	0xFF8
 34442                           tblptrh	equ	0xFF7
 34443                           tblptrl	equ	0xFF6
 34444                           tablat	equ	0xFF5
 34445                           prodh	equ	0xFF4
 34446                           prodl	equ	0xFF3
 34447                           intcon	equ	0xFF2
 34448                           intcon2	equ	0xFF1
 34449                           intcon3	equ	0xFF0
 34450                           indf0	equ	0xFEF
 34451                           postinc0	equ	0xFEE
 34452                           plusw0	equ	0xFEB
 34453                           fsr0h	equ	0xFEA
 34454                           fsr0l	equ	0xFE9
 34455                           wreg	equ	0xFE8
 34456                           indf1	equ	0xFE7
 34457                           postinc1	equ	0xFE6
 34458                           postdec1	equ	0xFE5
 34459                           plusw1	equ	0xFE3
 34460                           fsr1h	equ	0xFE2
 34461                           fsr1l	equ	0xFE1
 34462                           indf2	equ	0xFDF
 34463                           postinc2	equ	0xFDE
 34464                           postdec2	equ	0xFDD
 34465                           plusw2	equ	0xFDB
 34466                           fsr2h	equ	0xFDA
 34467                           fsr2l	equ	0xFD9
 34468                           status	equ	0xFD8
 34469                           
 34470 ;; *************** function ___lldiv *****************
 34471 ;; Defined at:
 34472 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 34473 ;; Parameters:    Size  Location     Type
 34474 ;;  dividend        4   41[BANK0 ] unsigned long 
 34475 ;;  divisor         4   45[BANK0 ] unsigned long 
 34476 ;; Auto vars:     Size  Location     Type
 34477 ;;  quotient        4   49[BANK0 ] unsigned long 
 34478 ;;  counter         1   53[BANK0 ] unsigned char 
 34479 ;; Return value:  Size  Location     Type
 34480 ;;                  4   41[BANK0 ] unsigned long 
 34481 ;; Registers used:
 34482 ;;		wreg, status,2, status,0
 34483 ;; Tracked objects:
 34484 ;;		On entry : 0/0
 34485 ;;		On exit  : 0/0
 34486 ;;		Unchanged: 0/0
 34487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34488 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34489 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34491 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34492 ;;Total ram usage:       13 bytes
 34493 ;; Hardware stack levels used:    1
 34494 ;; Hardware stack levels required when called:   11
 34495 ;; This function calls:
 34496 ;;		Nothing
 34497 ;; This function is called by:
 34498 ;;		_SetBaudRate
 34499 ;;		_Tmr_TmrBPrSet
 34500 ;;		_SetUartBaudRate
 34501 ;; This function uses a non-reentrant model
 34502 ;;
 34503                           
 34504                           	psect	text163
 34505  0050B0                     __ptext163:
 34506                           	opt stack 0
 34507  0050B0                     ___lldiv:
 34508                           	opt stack 15
 34509                           
 34510                           ; BSR set to: 0
 34511                           ;incstack = 0
 34512  0050B0  0E00               	movlw	0
 34513  0050B2  0100               	movlb	0	; () banked
 34514  0050B4  6F91               	movwf	___lldiv@quotient& (0+255),b
 34515  0050B6  0E00               	movlw	0
 34516  0050B8  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 34517  0050BA  0E00               	movlw	0
 34518  0050BC  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 34519  0050BE  0E00               	movlw	0
 34520  0050C0  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 34521                           
 34522                           ; BSR set to: 0
 34523  0050C2  518D               	movf	___lldiv@divisor& (0+255),w,b
 34524  0050C4  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 34525  0050C6  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 34526  0050C8  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 34527  0050CA  B4D8               	btfsc	status,2,c
 34528  0050CC  D02A               	goto	l3282
 34529                           
 34530                           ; BSR set to: 0
 34531  0050CE  0E01               	movlw	1
 34532  0050D0  6F95               	movwf	___lldiv@counter& (0+255),b
 34533  0050D2  D006               	goto	l3277
 34534  0050D4                     
 34535                           ; BSR set to: 0
 34536                           
 34537                           ; BSR set to: 0
 34538  0050D4  90D8               	bcf	status,0,c
 34539  0050D6  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 34540  0050D8  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 34541  0050DA  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 34542  0050DC  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 34543  0050DE  2B95               	incf	___lldiv@counter& (0+255),f,b
 34544  0050E0                     l3277:
 34545                           
 34546                           ; BSR set to: 0
 34547                           
 34548                           ; BSR set to: 0
 34549  0050E0  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 34550  0050E2  D7F8               	goto	l3278
 34551  0050E4                     u12340:
 34552                           
 34553                           ; BSR set to: 0
 34554                           
 34555                           ; BSR set to: 0
 34556                           
 34557                           ; BSR set to: 0
 34558  0050E4  90D8               	bcf	status,0,c
 34559  0050E6  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 34560  0050E8  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 34561  0050EA  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 34562  0050EC  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 34563                           
 34564                           ; BSR set to: 0
 34565  0050EE  518D               	movf	___lldiv@divisor& (0+255),w,b
 34566  0050F0  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 34567  0050F2  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34568  0050F4  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 34569  0050F6  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34570  0050F8  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 34571  0050FA  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34572  0050FC  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 34573  0050FE  A0D8               	btfss	status,0,c
 34574  005100  D009               	goto	l3281
 34575                           
 34576                           ; BSR set to: 0
 34577  005102  518D               	movf	___lldiv@divisor& (0+255),w,b
 34578  005104  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 34579  005106  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34580  005108  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 34581  00510A  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34582  00510C  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 34583  00510E  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34584  005110  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 34585                           
 34586                           ; BSR set to: 0
 34587  005112  8191               	bsf	___lldiv@quotient& (0+255),0,b
 34588  005114                     l3281:
 34589                           
 34590                           ; BSR set to: 0
 34591                           
 34592                           ; BSR set to: 0
 34593  005114  90D8               	bcf	status,0,c
 34594  005116  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 34595  005118  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 34596  00511A  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 34597  00511C  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 34598                           
 34599                           ; BSR set to: 0
 34600  00511E  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 34601  005120  D7E1               	goto	u12340
 34602  005122                     l3282:
 34603                           
 34604                           ; BSR set to: 0
 34605                           
 34606                           ; BSR set to: 0
 34607  005122  C091  F089         	movff	___lldiv@quotient,?___lldiv
 34608  005126  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 34609  00512A  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 34610  00512E  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 34611                           
 34612                           ; BSR set to: 0
 34613  005132  0012               	return		;funcret
 34614  005134                     __end_of___lldiv:
 34615                           	opt stack 0
 34616                           tosu	equ	0xFFF
 34617                           tosh	equ	0xFFE
 34618                           tosl	equ	0xFFD
 34619                           pclath	equ	0xFFA
 34620                           tblptru	equ	0xFF8
 34621                           tblptrh	equ	0xFF7
 34622                           tblptrl	equ	0xFF6
 34623                           tablat	equ	0xFF5
 34624                           prodh	equ	0xFF4
 34625                           prodl	equ	0xFF3
 34626                           intcon	equ	0xFF2
 34627                           intcon2	equ	0xFF1
 34628                           intcon3	equ	0xFF0
 34629                           indf0	equ	0xFEF
 34630                           postinc0	equ	0xFEE
 34631                           plusw0	equ	0xFEB
 34632                           fsr0h	equ	0xFEA
 34633                           fsr0l	equ	0xFE9
 34634                           wreg	equ	0xFE8
 34635                           indf1	equ	0xFE7
 34636                           postinc1	equ	0xFE6
 34637                           postdec1	equ	0xFE5
 34638                           plusw1	equ	0xFE3
 34639                           fsr1h	equ	0xFE2
 34640                           fsr1l	equ	0xFE1
 34641                           indf2	equ	0xFDF
 34642                           postinc2	equ	0xFDE
 34643                           postdec2	equ	0xFDD
 34644                           plusw2	equ	0xFDB
 34645                           fsr2h	equ	0xFDA
 34646                           fsr2l	equ	0xFD9
 34647                           status	equ	0xFD8
 34648                           
 34649 ;; *************** function _I2cSetConfig *****************
 34650 ;; Defined at:
 34651 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34652 ;; Parameters:    Size  Location     Type
 34653 ;;		None
 34654 ;; Auto vars:     Size  Location     Type
 34655 ;;		None
 34656 ;; Return value:  Size  Location     Type
 34657 ;;                  1    wreg      void 
 34658 ;; Registers used:
 34659 ;;		wreg, status,2
 34660 ;; Tracked objects:
 34661 ;;		On entry : 0/0
 34662 ;;		On exit  : 0/0
 34663 ;;		Unchanged: 0/0
 34664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34669 ;;Total ram usage:        0 bytes
 34670 ;; Hardware stack levels used:    1
 34671 ;; Hardware stack levels required when called:   11
 34672 ;; This function calls:
 34673 ;;		Nothing
 34674 ;; This function is called by:
 34675 ;;		_I2cSlv_MainTask
 34676 ;; This function uses a non-reentrant model
 34677 ;;
 34678                           
 34679                           	psect	text164
 34680  006564                     __ptext164:
 34681                           	opt stack 0
 34682  006564                     _I2cSetConfig:
 34683                           	opt stack 16
 34684                           
 34685                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 34686                           
 34687                           ; BSR set to: 0
 34688                           ;incstack = 0
 34689  006564  0E80               	movlw	128
 34690  006566  0103               	movlb	3	; () banked
 34691  006568  6F54               	movwf	_I2cConfig& (0+255),b
 34692  00656A  0E1A               	movlw	26
 34693  00656C  6F55               	movwf	(_I2cConfig+1)& (0+255),b
 34694  00656E  0E06               	movlw	6
 34695  006570  6F56               	movwf	(_I2cConfig+2)& (0+255),b
 34696  006572  0E00               	movlw	0
 34697  006574  6F57               	movwf	(_I2cConfig+3)& (0+255),b
 34698                           
 34699                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 34700  006576  0E00               	movlw	0
 34701  006578  6F58               	movwf	(_I2cConfig+4)& (0+255),b
 34702  00657A  0E6C               	movlw	108
 34703  00657C  6F59               	movwf	(_I2cConfig+5)& (0+255),b
 34704  00657E  0EDC               	movlw	220
 34705  006580  6F5A               	movwf	(_I2cConfig+6)& (0+255),b
 34706  006582  0E02               	movlw	2
 34707  006584  6F5B               	movwf	(_I2cConfig+7)& (0+255),b
 34708                           
 34709                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 34710  006586  0E08               	movlw	8
 34711  006588  6F5C               	movwf	(_I2cConfig+8)& (0+255),b
 34712                           
 34713                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 34714  00658A  0E01               	movlw	1
 34715  00658C  6F5D               	movwf	(_I2cConfig+9)& (0+255),b
 34716                           
 34717                           ; BSR set to: 3
 34718  00658E  0012               	return		;funcret
 34719  006590                     __end_of_I2cSetConfig:
 34720                           	opt stack 0
 34721                           tosu	equ	0xFFF
 34722                           tosh	equ	0xFFE
 34723                           tosl	equ	0xFFD
 34724                           pclath	equ	0xFFA
 34725                           tblptru	equ	0xFF8
 34726                           tblptrh	equ	0xFF7
 34727                           tblptrl	equ	0xFF6
 34728                           tablat	equ	0xFF5
 34729                           prodh	equ	0xFF4
 34730                           prodl	equ	0xFF3
 34731                           intcon	equ	0xFF2
 34732                           intcon2	equ	0xFF1
 34733                           intcon3	equ	0xFF0
 34734                           indf0	equ	0xFEF
 34735                           postinc0	equ	0xFEE
 34736                           plusw0	equ	0xFEB
 34737                           fsr0h	equ	0xFEA
 34738                           fsr0l	equ	0xFE9
 34739                           wreg	equ	0xFE8
 34740                           indf1	equ	0xFE7
 34741                           postinc1	equ	0xFE6
 34742                           postdec1	equ	0xFE5
 34743                           plusw1	equ	0xFE3
 34744                           fsr1h	equ	0xFE2
 34745                           fsr1l	equ	0xFE1
 34746                           indf2	equ	0xFDF
 34747                           postinc2	equ	0xFDE
 34748                           postdec2	equ	0xFDD
 34749                           plusw2	equ	0xFDB
 34750                           fsr2h	equ	0xFDA
 34751                           fsr2l	equ	0xFD9
 34752                           status	equ	0xFD8
 34753                           
 34754 ;; *************** function _I2cSendMsgSm *****************
 34755 ;; Defined at:
 34756 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34757 ;; Parameters:    Size  Location     Type
 34758 ;;		None
 34759 ;; Auto vars:     Size  Location     Type
 34760 ;;		None
 34761 ;; Return value:  Size  Location     Type
 34762 ;;                  1    wreg      void 
 34763 ;; Registers used:
 34764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34765 ;; Tracked objects:
 34766 ;;		On entry : 0/0
 34767 ;;		On exit  : 0/0
 34768 ;;		Unchanged: 0/0
 34769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34774 ;;Total ram usage:        0 bytes
 34775 ;; Hardware stack levels used:    1
 34776 ;; Hardware stack levels required when called:   13
 34777 ;; This function calls:
 34778 ;;		_I2c_ReadData
 34779 ;;		_I2c_WriteData
 34780 ;;		_ReceiveEvt
 34781 ;; This function is called by:
 34782 ;;		_I2cSlv_MainTask
 34783 ;; This function uses a non-reentrant model
 34784 ;;
 34785                           
 34786                           	psect	text165
 34787  004062                     __ptext165:
 34788                           	opt stack 0
 34789  004062                     _I2cSendMsgSm:
 34790                           	opt stack 14
 34791                           
 34792                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 34793                           ;i2c_slv.c: 122: switch(I2cComState)
 34794                           
 34795                           ; BSR set to: 3
 34796                           ;incstack = 0
 34797  004062  D04F               	goto	l1382
 34798  004064                     
 34799                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 34800  004064  0ED9               	movlw	low _I2cWriteDataEvt
 34801  004066  0100               	movlb	0	; () banked
 34802  004068  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 34803  00406A  0E00               	movlw	high _I2cWriteDataEvt
 34804  00406C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 34805  00406E  EC9B  F032         	call	_ReceiveEvt	;wreg free
 34806  004072  0900               	iorlw	0
 34807  004074  B4D8               	btfsc	status,2,c
 34808  004076  D007               	goto	l1384
 34809                           
 34810                           ;i2c_slv.c: 127: {
 34811                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 34812  004078  0E01               	movlw	1
 34813  00407A  0101               	movlb	1	; () banked
 34814  00407C  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34815                           
 34816                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 34817  00407E  0E01               	movlw	1
 34818  004080  0100               	movlb	0	; () banked
 34819  004082  6FCF               	movwf	_I2cComSts& (0+255),b
 34820                           
 34821                           ;i2c_slv.c: 132: }
 34822  004084  0012               	return	
 34823  004086                     l1384:
 34824                           
 34825                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 34826                           
 34827                           ; BSR set to: 0
 34828  004086  0ED8               	movlw	low _I2cReadDataEvt
 34829  004088  0100               	movlb	0	; () banked
 34830  00408A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 34831  00408C  0E00               	movlw	high _I2cReadDataEvt
 34832  00408E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 34833  004090  EC9B  F032         	call	_ReceiveEvt	;wreg free
 34834  004094  0900               	iorlw	0
 34835  004096  B4D8               	btfsc	status,2,c
 34836  004098  D007               	goto	l1386
 34837                           
 34838                           ;i2c_slv.c: 134: {
 34839                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 34840  00409A  0E02               	movlw	2
 34841  00409C  0101               	movlb	1	; () banked
 34842  00409E  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34843                           
 34844                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 34845  0040A0  0E02               	movlw	2
 34846  0040A2  0100               	movlb	0	; () banked
 34847  0040A4  6FCF               	movwf	_I2cComSts& (0+255),b
 34848                           
 34849                           ;i2c_slv.c: 139: }
 34850  0040A6  0012               	return	
 34851  0040A8                     l1386:
 34852                           
 34853                           ;i2c_slv.c: 140: else
 34854                           ;i2c_slv.c: 141: {
 34855                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 34856                           
 34857                           ; BSR set to: 0
 34858  0040A8  0E00               	movlw	0
 34859  0040AA  0100               	movlb	0	; () banked
 34860  0040AC  6FCF               	movwf	_I2cComSts& (0+255),b
 34861                           
 34862                           ; BSR set to: 0
 34863                           ;i2c_slv.c: 144: }
 34864                           ;i2c_slv.c: 145: break;
 34865                           
 34866                           ; BSR set to: 0
 34867  0040AE  0012               	return	
 34868  0040B0                     
 34869                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 34870                           
 34871                           ; BSR set to: 0
 34872  0040B0  0EA0               	movlw	low _I2cTxPacket
 34873  0040B2  0100               	movlb	0	; () banked
 34874  0040B4  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 34875  0040B6  0E03               	movlw	high _I2cTxPacket
 34876  0040B8  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 34877  0040BA  EC5A  F00F         	call	_I2c_WriteData	;wreg free
 34878  0040BE  0900               	iorlw	0
 34879  0040C0  B4D8               	btfsc	status,2,c
 34880  0040C2  0012               	return	
 34881                           
 34882                           ;i2c_slv.c: 150: {
 34883                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 34884  0040C4  0E03               	movlw	3
 34885  0040C6  0101               	movlb	1	; () banked
 34886  0040C8  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34887                           
 34888                           ; BSR set to: 1
 34889                           ;i2c_slv.c: 153: }
 34890                           ;i2c_slv.c: 154: break;
 34891  0040CA  0012               	return	
 34892  0040CC                     
 34893                           ; BSR set to: 1
 34894                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 34895                           
 34896                           ; BSR set to: 1
 34897  0040CC  0E9A               	movlw	low _I2cRxPacket
 34898  0040CE  0100               	movlb	0	; () banked
 34899  0040D0  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 34900  0040D2  0E03               	movlw	high _I2cRxPacket
 34901  0040D4  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 34902  0040D6  EC11  F010         	call	_I2c_ReadData	;wreg free
 34903  0040DA  0900               	iorlw	0
 34904  0040DC  B4D8               	btfsc	status,2,c
 34905  0040DE  0012               	return	
 34906                           
 34907                           ;i2c_slv.c: 159: {
 34908                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 34909  0040E0  0E04               	movlw	4
 34910  0040E2  0101               	movlb	1	; () banked
 34911  0040E4  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34912                           
 34913                           ; BSR set to: 1
 34914                           ;i2c_slv.c: 162: }
 34915                           ;i2c_slv.c: 164: break;
 34916  0040E6  0012               	return	
 34917  0040E8                     
 34918                           ; BSR set to: 1
 34919                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 34920                           
 34921                           ; BSR set to: 1
 34922  0040E8  0E00               	movlw	0
 34923  0040EA  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34924                           
 34925                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 34926  0040EC  0E00               	movlw	0
 34927  0040EE  0100               	movlb	0	; () banked
 34928  0040F0  6FCF               	movwf	_I2cComSts& (0+255),b
 34929                           
 34930                           ;i2c_slv.c: 171: break;
 34931  0040F2  0012               	return	
 34932  0040F4                     
 34933                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 34934                           
 34935                           ; BSR set to: 0
 34936  0040F4  0E00               	movlw	0
 34937  0040F6  0101               	movlb	1	; () banked
 34938  0040F8  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34939                           
 34940                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 34941  0040FA  0E00               	movlw	0
 34942  0040FC  0100               	movlb	0	; () banked
 34943  0040FE  6FCF               	movwf	_I2cComSts& (0+255),b
 34944                           
 34945                           ; BSR set to: 0
 34946                           ;i2c_slv.c: 182: }
 34947                           
 34948                           ; BSR set to: 0
 34949                           ;i2c_slv.c: 181: break;
 34950                           
 34951                           ;i2c_slv.c: 180: default:
 34952                           
 34953                           ;i2c_slv.c: 178: break;
 34954  004100  0012               	return	
 34955  004102                     l1382:
 34956                           
 34957                           ; BSR set to: 0
 34958  004102  0101               	movlb	1	; () banked
 34959  004104  51E6               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 34960                           
 34961                           ; Switch size 1, requested type "space"
 34962                           ; Number of cases is 5, Range of values is 0 to 4
 34963                           ; switch strategies available:
 34964                           ; Name         Instructions Cycles
 34965                           ; simple_byte           16     9 (average)
 34966                           ;	Chosen strategy is simple_byte
 34967  004106  0A00               	xorlw	0	; case 0
 34968  004108  B4D8               	btfsc	status,2,c
 34969  00410A  D7AC               	goto	l1383
 34970  00410C  0A01               	xorlw	1	; case 1
 34971  00410E  B4D8               	btfsc	status,2,c
 34972  004110  D7CF               	goto	l1389
 34973  004112  0A03               	xorlw	3	; case 2
 34974  004114  B4D8               	btfsc	status,2,c
 34975  004116  D7DA               	goto	l1391
 34976  004118  0A01               	xorlw	1	; case 3
 34977  00411A  B4D8               	btfsc	status,2,c
 34978  00411C  D7E5               	goto	l1393
 34979  00411E  0A07               	xorlw	7	; case 4
 34980  004120  A4D8               	btfss	status,2,c
 34981  004122  0012               	return	
 34982  004124  D7E7               	goto	l1394
 34983  004126                     __end_of_I2cSendMsgSm:
 34984                           	opt stack 0
 34985                           tosu	equ	0xFFF
 34986                           tosh	equ	0xFFE
 34987                           tosl	equ	0xFFD
 34988                           pclath	equ	0xFFA
 34989                           tblptru	equ	0xFF8
 34990                           tblptrh	equ	0xFF7
 34991                           tblptrl	equ	0xFF6
 34992                           tablat	equ	0xFF5
 34993                           prodh	equ	0xFF4
 34994                           prodl	equ	0xFF3
 34995                           intcon	equ	0xFF2
 34996                           intcon2	equ	0xFF1
 34997                           intcon3	equ	0xFF0
 34998                           indf0	equ	0xFEF
 34999                           postinc0	equ	0xFEE
 35000                           plusw0	equ	0xFEB
 35001                           fsr0h	equ	0xFEA
 35002                           fsr0l	equ	0xFE9
 35003                           wreg	equ	0xFE8
 35004                           indf1	equ	0xFE7
 35005                           postinc1	equ	0xFE6
 35006                           postdec1	equ	0xFE5
 35007                           plusw1	equ	0xFE3
 35008                           fsr1h	equ	0xFE2
 35009                           fsr1l	equ	0xFE1
 35010                           indf2	equ	0xFDF
 35011                           postinc2	equ	0xFDE
 35012                           postdec2	equ	0xFDD
 35013                           plusw2	equ	0xFDB
 35014                           fsr2h	equ	0xFDA
 35015                           fsr2l	equ	0xFD9
 35016                           status	equ	0xFD8
 35017                           
 35018 ;; *************** function _ReceiveEvt *****************
 35019 ;; Defined at:
 35020 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35021 ;; Parameters:    Size  Location     Type
 35022 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 35023 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 35024 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 35025 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 35026 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 35027 ;;		 -> ActivateRiDetection(1), 
 35028 ;; Auto vars:     Size  Location     Type
 35029 ;;  EventStatus     1   32[BANK0 ] enum E7727
 35030 ;; Return value:  Size  Location     Type
 35031 ;;                  1    wreg      enum E7699
 35032 ;; Registers used:
 35033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35034 ;; Tracked objects:
 35035 ;;		On entry : 0/0
 35036 ;;		On exit  : 0/0
 35037 ;;		Unchanged: 0/0
 35038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35042 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35043 ;;Total ram usage:        4 bytes
 35044 ;; Hardware stack levels used:    1
 35045 ;; Hardware stack levels required when called:   11
 35046 ;; This function calls:
 35047 ;;		Nothing
 35048 ;; This function is called by:
 35049 ;;		_MdmCntSm
 35050 ;;		_CheckModem
 35051 ;;		_ModemEvtParser
 35052 ;;		_GetSmsSm
 35053 ;;		_SendSmsSm
 35054 ;;		_Mdm_GetSmsData
 35055 ;;		_Mdm_IsSmsReceived
 35056 ;;		_Mdm_IsRinging
 35057 ;;		_GetCallerNumber
 35058 ;;		_InitGprsNetwork
 35059 ;;		_HttpGetMethod
 35060 ;;		_I2cSendMsgSm
 35061 ;;		_I2cSlv_I2cReadMsgSts
 35062 ;;		_RiSm
 35063 ;;		_GsmGprsTerminal
 35064 ;; This function uses a non-reentrant model
 35065 ;;
 35066                           
 35067                           	psect	text166
 35068  006536                     __ptext166:
 35069                           	opt stack 0
 35070  006536                     _ReceiveEvt:
 35071                           	opt stack 13
 35072                           
 35073                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 35074                           
 35075                           ;incstack = 0
 35076  006536  0E00               	movlw	0
 35077  006538  0100               	movlb	0	; () banked
 35078  00653A  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35079                           
 35080                           ; BSR set to: 0
 35081                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 35082  00653C  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35083  006540  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35084  006544  0E02               	movlw	2
 35085  006546  18DE               	xorwf	postinc2,w,c
 35086  006548  A4D8               	btfss	status,2,c
 35087  00654A  D008               	goto	l832
 35088                           
 35089                           ; BSR set to: 0
 35090                           ;os_ser.c: 106: {
 35091                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 35092  00654C  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35093  006550  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35094  006554  0E01               	movlw	1
 35095  006556  6EDF               	movwf	indf2,c
 35096                           
 35097                           ; BSR set to: 0
 35098                           ;os_ser.c: 110: EventStatus = EventReceived;
 35099  006558  0E01               	movlw	1
 35100  00655A  D001               	goto	L75
 35101  00655C                     l832:
 35102                           
 35103                           ; BSR set to: 0
 35104                           ;os_ser.c: 112: else
 35105                           ;os_ser.c: 113: {
 35106                           ;os_ser.c: 115: EventStatus = EventIdle;
 35107                           
 35108                           ; BSR set to: 0
 35109  00655C  0E00               	movlw	0
 35110  00655E                     L75:
 35111  00655E  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35112                           
 35113                           ; BSR set to: 0
 35114                           ;os_ser.c: 116: }
 35115                           ;os_ser.c: 119: return(EventStatus);
 35116  006560  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 35117  006562  0012               	return	
 35118  006564                     __end_of_ReceiveEvt:
 35119                           	opt stack 0
 35120                           tosu	equ	0xFFF
 35121                           tosh	equ	0xFFE
 35122                           tosl	equ	0xFFD
 35123                           pclath	equ	0xFFA
 35124                           tblptru	equ	0xFF8
 35125                           tblptrh	equ	0xFF7
 35126                           tblptrl	equ	0xFF6
 35127                           tablat	equ	0xFF5
 35128                           prodh	equ	0xFF4
 35129                           prodl	equ	0xFF3
 35130                           intcon	equ	0xFF2
 35131                           intcon2	equ	0xFF1
 35132                           intcon3	equ	0xFF0
 35133                           indf0	equ	0xFEF
 35134                           postinc0	equ	0xFEE
 35135                           plusw0	equ	0xFEB
 35136                           fsr0h	equ	0xFEA
 35137                           fsr0l	equ	0xFE9
 35138                           wreg	equ	0xFE8
 35139                           indf1	equ	0xFE7
 35140                           postinc1	equ	0xFE6
 35141                           postdec1	equ	0xFE5
 35142                           plusw1	equ	0xFE3
 35143                           fsr1h	equ	0xFE2
 35144                           fsr1l	equ	0xFE1
 35145                           indf2	equ	0xFDF
 35146                           postinc2	equ	0xFDE
 35147                           postdec2	equ	0xFDD
 35148                           plusw2	equ	0xFDB
 35149                           fsr2h	equ	0xFDA
 35150                           fsr2l	equ	0xFD9
 35151                           status	equ	0xFD8
 35152                           
 35153 ;; *************** function _I2c_WriteData *****************
 35154 ;; Defined at:
 35155 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35156 ;; Parameters:    Size  Location     Type
 35157 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 35158 ;;		 -> I2cTxPacket(5), 
 35159 ;; Auto vars:     Size  Location     Type
 35160 ;;		None
 35161 ;; Return value:  Size  Location     Type
 35162 ;;                  1    wreg      enum E7740
 35163 ;; Registers used:
 35164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35165 ;; Tracked objects:
 35166 ;;		On entry : 0/0
 35167 ;;		On exit  : 0/0
 35168 ;;		Unchanged: 0/0
 35169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35172 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35173 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35174 ;;Total ram usage:        4 bytes
 35175 ;; Hardware stack levels used:    1
 35176 ;; Hardware stack levels required when called:   12
 35177 ;; This function calls:
 35178 ;;		_CheckAckStatus
 35179 ;;		_CheckTxStatus
 35180 ;;		_StartCondition
 35181 ;;		_StopCondition
 35182 ;;		_WriteByte
 35183 ;; This function is called by:
 35184 ;;		_I2cSendMsgSm
 35185 ;; This function uses a non-reentrant model
 35186 ;;
 35187                           
 35188                           	psect	text167
 35189  001EB4                     __ptext167:
 35190                           	opt stack 0
 35191  001EB4                     _I2c_WriteData:
 35192                           	opt stack 14
 35193                           
 35194                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 35195                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 35196                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 35197                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 35198                           ;i2c_drv.c: 260: switch (I2cWriteState)
 35199                           
 35200                           ; BSR set to: 0
 35201                           ;incstack = 0
 35202  001EB4  D095               	goto	l160
 35203  001EB6                     
 35204                           ;i2c_drv.c: 264: StartCondition();
 35205  001EB6  EC57  F035         	call	_StartCondition	;wreg free
 35206                           
 35207                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 35208  001EBA  0E00               	movlw	0
 35209  001EBC  6E33               	movwf	I2c_WriteData@WriteStatus,c
 35210                           
 35211                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 35212  001EBE  0E01               	movlw	1
 35213  001EC0  D084               	goto	L82
 35214  001EC2                     
 35215                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 35216  001EC2  0100               	movlb	0	; () banked
 35217  001EC4  EE20 F001          	lfsr	2,1
 35218  001EC8  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35219  001ECA  26D9               	addwf	fsr2l,f,c
 35220  001ECC  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35221  001ECE  22DA               	addwfc	fsr2h,f,c
 35222  001ED0  50DF               	movf	indf2,w,c
 35223  001ED2  6F80               	movwf	??_I2c_WriteData& (0+255),b
 35224  001ED4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35225  001ED8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35226  001EDC  50DF               	movf	indf2,w,c
 35227  001EDE  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 35228  001EE0  90D8               	bcf	status,0,c
 35229  001EE2  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 35230  001EE4  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 35231  001EE6  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35232  001EEA  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35233  001EEE  6EDF               	movwf	indf2,c
 35234                           
 35235                           ; BSR set to: 0
 35236                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 35237  001EF0  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35238  001EF4  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35239  001EF8  50DF               	movf	indf2,w,c
 35240  001EFA  EC35  F035         	call	_WriteByte
 35241                           
 35242                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 35243  001EFE  0E02               	movlw	2
 35244  001F00  6E36               	movwf	I2c_WriteData@I2cWriteState,c
 35245  001F02                     
 35246                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 35247  001F02  EC3F  F035         	call	_CheckTxStatus	;wreg free
 35248  001F06  0900               	iorlw	0
 35249  001F08  A4D8               	btfss	status,2,c
 35250  001F0A  D089               	goto	l162
 35251                           
 35252                           ;i2c_drv.c: 282: {
 35253                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 35254  001F0C  0E03               	movlw	3
 35255  001F0E  D01A               	goto	L84
 35256  001F10                     
 35257                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 35258  001F10  0100               	movlb	0	; () banked
 35259  001F12  EE20 F002          	lfsr	2,2
 35260  001F16  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35261  001F18  26D9               	addwf	fsr2l,f,c
 35262  001F1A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35263  001F1C  22DA               	addwfc	fsr2h,f,c
 35264  001F1E  CFDE F080          	movff	postinc2,??_I2c_WriteData
 35265  001F22  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 35266  001F26  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 35267  001F2A  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 35268  001F2E  50DF               	movf	indf2,w,c
 35269  001F30  EC35  F035         	call	_WriteByte
 35270                           
 35271                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 35272  001F34  0E04               	movlw	4
 35273  001F36  D049               	goto	L82
 35274  001F38                     
 35275                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 35276  001F38  EC3F  F035         	call	_CheckTxStatus	;wreg free
 35277  001F3C  0900               	iorlw	0
 35278  001F3E  A4D8               	btfss	status,2,c
 35279  001F40  D06E               	goto	l162
 35280                           
 35281                           ;i2c_drv.c: 300: {
 35282                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 35283  001F42  0E05               	movlw	5
 35284  001F44                     L84:
 35285  001F44  6E35               	movwf	I2c_WriteData@I2cNextState,c
 35286                           
 35287                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 35288  001F46  0E08               	movlw	8
 35289  001F48  D040               	goto	L82
 35290  001F4A                     
 35291                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 35292  001F4A  0100               	movlb	0	; () banked
 35293  001F4C  EE20 F004          	lfsr	2,4
 35294  001F50  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35295  001F52  26D9               	addwf	fsr2l,f,c
 35296  001F54  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35297  001F56  22DA               	addwfc	fsr2h,f,c
 35298  001F58  50DF               	movf	indf2,w,c
 35299  001F5A  B4D8               	btfsc	status,2,c
 35300  001F5C  D010               	goto	l170
 35301                           
 35302                           ; BSR set to: 0
 35303                           ;i2c_drv.c: 310: {
 35304                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 35305  001F5E  EE20 F004          	lfsr	2,4
 35306  001F62  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35307  001F64  26D9               	addwf	fsr2l,f,c
 35308  001F66  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35309  001F68  22DA               	addwfc	fsr2h,f,c
 35310  001F6A  06DF               	decf	indf2,f,c
 35311                           
 35312                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 35313  001F6C  EE20 F002          	lfsr	2,2
 35314  001F70  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35315  001F72  26D9               	addwf	fsr2l,f,c
 35316  001F74  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35317  001F76  22DA               	addwfc	fsr2h,f,c
 35318  001F78  2ADE               	incf	postinc2,f,c
 35319  001F7A  0E00               	movlw	0
 35320  001F7C  22DD               	addwfc	postdec2,f,c
 35321  001F7E                     l170:
 35322                           
 35323                           ; BSR set to: 0
 35324                           ;i2c_drv.c: 315: }
 35325                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 35326  001F7E  EE20 F004          	lfsr	2,4
 35327  001F82  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35328  001F84  26D9               	addwf	fsr2l,f,c
 35329  001F86  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35330  001F88  22DA               	addwfc	fsr2h,f,c
 35331  001F8A  50DF               	movf	indf2,w,c
 35332  001F8C  A4D8               	btfss	status,2,c
 35333  001F8E  D002               	goto	l171
 35334                           
 35335                           ; BSR set to: 0
 35336                           ;i2c_drv.c: 319: {
 35337                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 35338  001F90  0E06               	movlw	6
 35339  001F92  D01B               	goto	L82
 35340  001F94                     l171:
 35341                           
 35342                           ; BSR set to: 0
 35343                           ;i2c_drv.c: 323: else
 35344                           ;i2c_drv.c: 324: {
 35345                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 35346                           
 35347                           ; BSR set to: 0
 35348  001F94  0E03               	movlw	3
 35349  001F96  D019               	goto	L82
 35350  001F98                     
 35351                           ;i2c_drv.c: 332: StopCondition();
 35352                           
 35353                           ; BSR set to: 0
 35354  001F98  EC55  F035         	call	_StopCondition	;wreg free
 35355                           
 35356                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 35357  001F9C  0E07               	movlw	7
 35358  001F9E  D015               	goto	L82
 35359  001FA0                     
 35360                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 35361  001FA0  0E00               	movlw	0
 35362  001FA2  6E36               	movwf	I2c_WriteData@I2cWriteState,c
 35363                           
 35364                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 35365  001FA4  0E00               	movlw	0
 35366  001FA6  6E35               	movwf	I2c_WriteData@I2cNextState,c
 35367                           
 35368                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 35369  001FA8  0E02               	movlw	2
 35370  001FAA  D018               	goto	L83
 35371  001FAC                     
 35372                           ;i2c_drv.c: 347: TentativeCounter++;
 35373  001FAC  2A34               	incf	I2c_WriteData@TentativeCounter,f,c
 35374                           
 35375                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 35376  001FAE  EC44  F035         	call	_CheckAckStatus	;wreg free
 35377  001FB2  0900               	iorlw	0
 35378  001FB4  A4D8               	btfss	status,2,c
 35379  001FB6  D005               	goto	l176
 35380                           
 35381                           ;i2c_drv.c: 350: {
 35382                           ;i2c_drv.c: 352: TentativeCounter = 0;
 35383  001FB8  0E00               	movlw	0
 35384  001FBA  6E34               	movwf	I2c_WriteData@TentativeCounter,c
 35385                           
 35386                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 35387  001FBC  C035  F036         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 35388                           
 35389                           ;i2c_drv.c: 355: }
 35390  001FC0  D02E               	goto	l162
 35391  001FC2                     l176:
 35392                           
 35393                           ;i2c_drv.c: 356: else
 35394                           ;i2c_drv.c: 357: {
 35395                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 35396  001FC2  0E02               	movlw	2
 35397  001FC4  6434               	cpfsgt	I2c_WriteData@TentativeCounter,c
 35398  001FC6  D02B               	goto	l162
 35399                           
 35400                           ;i2c_drv.c: 360: {
 35401                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 35402  001FC8  0E09               	movlw	9
 35403  001FCA                     L82:
 35404  001FCA  6E36               	movwf	I2c_WriteData@I2cWriteState,c
 35405                           
 35406                           ;i2c_drv.c: 363: }
 35407                           ;i2c_drv.c: 364: }
 35408                           ;i2c_drv.c: 365: break;
 35409  001FCC  D028               	goto	l162
 35410  001FCE                     
 35411                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 35412  001FCE  0E00               	movlw	0
 35413  001FD0  6E36               	movwf	I2c_WriteData@I2cWriteState,c
 35414                           
 35415                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 35416  001FD2  0E00               	movlw	0
 35417  001FD4  6E35               	movwf	I2c_WriteData@I2cNextState,c
 35418                           
 35419                           ;i2c_drv.c: 372: TentativeCounter = 0;
 35420  001FD6  0E00               	movlw	0
 35421  001FD8  6E34               	movwf	I2c_WriteData@TentativeCounter,c
 35422                           
 35423                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 35424  001FDA  0E01               	movlw	1
 35425  001FDC                     L83:
 35426  001FDC  6E33               	movwf	I2c_WriteData@WriteStatus,c
 35427                           
 35428                           ;i2c_drv.c: 379: }
 35429                           
 35430                           ;i2c_drv.c: 378: break;
 35431                           
 35432                           ;i2c_drv.c: 377: default:
 35433                           
 35434                           ;i2c_drv.c: 375: break;
 35435  001FDE  D01F               	goto	l162
 35436  001FE0                     l160:
 35437  001FE0  5036               	movf	I2c_WriteData@I2cWriteState,w,c
 35438                           
 35439                           ; Switch size 1, requested type "space"
 35440                           ; Number of cases is 10, Range of values is 0 to 9
 35441                           ; switch strategies available:
 35442                           ; Name         Instructions Cycles
 35443                           ; simple_byte           31    16 (average)
 35444                           ;	Chosen strategy is simple_byte
 35445  001FE2  0A00               	xorlw	0	; case 0
 35446  001FE4  B4D8               	btfsc	status,2,c
 35447  001FE6  D767               	goto	l161
 35448  001FE8  0A01               	xorlw	1	; case 1
 35449  001FEA  B4D8               	btfsc	status,2,c
 35450  001FEC  D76A               	goto	l163
 35451  001FEE  0A03               	xorlw	3	; case 2
 35452  001FF0  B4D8               	btfsc	status,2,c
 35453  001FF2  D787               	goto	l164
 35454  001FF4  0A01               	xorlw	1	; case 3
 35455  001FF6  B4D8               	btfsc	status,2,c
 35456  001FF8  D78B               	goto	l166
 35457  001FFA  0A07               	xorlw	7	; case 4
 35458  001FFC  B4D8               	btfsc	status,2,c
 35459  001FFE  D79C               	goto	l167
 35460  002000  0A01               	xorlw	1	; case 5
 35461  002002  B4D8               	btfsc	status,2,c
 35462  002004  D7A2               	goto	l169
 35463  002006  0A03               	xorlw	3	; case 6
 35464  002008  B4D8               	btfsc	status,2,c
 35465  00200A  D7C6               	goto	l173
 35466  00200C  0A01               	xorlw	1	; case 7
 35467  00200E  B4D8               	btfsc	status,2,c
 35468  002010  D7C7               	goto	l174
 35469  002012  0A0F               	xorlw	15	; case 8
 35470  002014  B4D8               	btfsc	status,2,c
 35471  002016  D7CA               	goto	l175
 35472  002018  0A01               	xorlw	1	; case 9
 35473  00201A  B4D8               	btfsc	status,2,c
 35474  00201C  D7D8               	goto	l179
 35475  00201E                     l162:
 35476                           
 35477                           ;i2c_drv.c: 382: return WriteStatus;
 35478  00201E  5033               	movf	I2c_WriteData@WriteStatus,w,c
 35479  002020  0012               	return	
 35480  002022                     __end_of_I2c_WriteData:
 35481                           	opt stack 0
 35482                           tosu	equ	0xFFF
 35483                           tosh	equ	0xFFE
 35484                           tosl	equ	0xFFD
 35485                           pclath	equ	0xFFA
 35486                           tblptru	equ	0xFF8
 35487                           tblptrh	equ	0xFF7
 35488                           tblptrl	equ	0xFF6
 35489                           tablat	equ	0xFF5
 35490                           prodh	equ	0xFF4
 35491                           prodl	equ	0xFF3
 35492                           intcon	equ	0xFF2
 35493                           intcon2	equ	0xFF1
 35494                           intcon3	equ	0xFF0
 35495                           indf0	equ	0xFEF
 35496                           postinc0	equ	0xFEE
 35497                           plusw0	equ	0xFEB
 35498                           fsr0h	equ	0xFEA
 35499                           fsr0l	equ	0xFE9
 35500                           wreg	equ	0xFE8
 35501                           indf1	equ	0xFE7
 35502                           postinc1	equ	0xFE6
 35503                           postdec1	equ	0xFE5
 35504                           plusw1	equ	0xFE3
 35505                           fsr1h	equ	0xFE2
 35506                           fsr1l	equ	0xFE1
 35507                           indf2	equ	0xFDF
 35508                           postinc2	equ	0xFDE
 35509                           postdec2	equ	0xFDD
 35510                           plusw2	equ	0xFDB
 35511                           fsr2h	equ	0xFDA
 35512                           fsr2l	equ	0xFD9
 35513                           status	equ	0xFD8
 35514                           
 35515 ;; *************** function _I2c_ReadData *****************
 35516 ;; Defined at:
 35517 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35518 ;; Parameters:    Size  Location     Type
 35519 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 35520 ;;		 -> I2cRxPacket(6), 
 35521 ;; Auto vars:     Size  Location     Type
 35522 ;;		None
 35523 ;; Return value:  Size  Location     Type
 35524 ;;                  1    wreg      enum E7787
 35525 ;; Registers used:
 35526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35527 ;; Tracked objects:
 35528 ;;		On entry : 0/0
 35529 ;;		On exit  : 0/0
 35530 ;;		Unchanged: 0/0
 35531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35532 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35534 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35535 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35536 ;;Total ram usage:        4 bytes
 35537 ;; Hardware stack levels used:    1
 35538 ;; Hardware stack levels required when called:   12
 35539 ;; This function calls:
 35540 ;;		_CheckAckStatus
 35541 ;;		_CheckTxStatus
 35542 ;;		_EnableReceiver
 35543 ;;		_GenerateEvt
 35544 ;;		_ReadByte
 35545 ;;		_SetAckStatus
 35546 ;;		_StartCondition
 35547 ;;		_StopCondition
 35548 ;;		_WriteByte
 35549 ;; This function is called by:
 35550 ;;		_I2cSendMsgSm
 35551 ;; This function uses a non-reentrant model
 35552 ;;
 35553                           
 35554                           	psect	text168
 35555  002022                     __ptext168:
 35556                           	opt stack 0
 35557  002022                     _I2c_ReadData:
 35558                           	opt stack 14
 35559                           
 35560                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 35561                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 35562                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 35563                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 35564                           ;i2c_drv.c: 402: switch (I2cReadState)
 35565                           
 35566                           ;incstack = 0
 35567  002022  D090               	goto	l192
 35568  002024                     
 35569                           ;i2c_drv.c: 406: StartCondition();
 35570  002024  EC57  F035         	call	_StartCondition	;wreg free
 35571                           
 35572                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 35573  002028  0E00               	movlw	0
 35574  00202A  6E2F               	movwf	I2c_ReadData@ReadStatus,c
 35575                           
 35576                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 35577  00202C  0E01               	movlw	1
 35578  00202E  D083               	goto	L92
 35579  002030                     
 35580                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 35581  002030  0100               	movlb	0	; () banked
 35582  002032  EE20 F001          	lfsr	2,1
 35583  002036  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35584  002038  26D9               	addwf	fsr2l,f,c
 35585  00203A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35586  00203C  22DA               	addwfc	fsr2h,f,c
 35587  00203E  50DF               	movf	indf2,w,c
 35588  002040  6F82               	movwf	??_I2c_ReadData& (0+255),b
 35589  002042  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35590  002046  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35591  00204A  50DF               	movf	indf2,w,c
 35592  00204C  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 35593  00204E  90D8               	bcf	status,0,c
 35594  002050  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 35595  002052  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 35596  002054  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35597  002058  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35598  00205C  6EDF               	movwf	indf2,c
 35599                           
 35600                           ; BSR set to: 0
 35601                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 35602  00205E  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35603  002062  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35604  002066  50DF               	movf	indf2,w,c
 35605  002068  EC35  F035         	call	_WriteByte
 35606                           
 35607                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 35608  00206C  0E02               	movlw	2
 35609  00206E  D063               	goto	L92
 35610  002070                     
 35611                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 35612  002070  EC3F  F035         	call	_CheckTxStatus	;wreg free
 35613  002074  0900               	iorlw	0
 35614  002076  A4D8               	btfss	status,2,c
 35615  002078  D081               	goto	l194
 35616                           
 35617                           ;i2c_drv.c: 425: {
 35618                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 35619  00207A  0E03               	movlw	3
 35620  00207C  D05C               	goto	L92
 35621  00207E                     
 35622                           ;i2c_drv.c: 433: TentativeCounter++;
 35623  00207E  2A30               	incf	I2c_ReadData@TentativeCounter,f,c
 35624                           
 35625                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 35626  002080  EC44  F035         	call	_CheckAckStatus	;wreg free
 35627  002084  0900               	iorlw	0
 35628  002086  A4D8               	btfss	status,2,c
 35629  002088  D004               	goto	l199
 35630                           
 35631                           ;i2c_drv.c: 436: {
 35632                           ;i2c_drv.c: 438: TentativeCounter = 0;
 35633  00208A  0E00               	movlw	0
 35634  00208C  6E30               	movwf	I2c_ReadData@TentativeCounter,c
 35635  00208E                     
 35636                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 35637  00208E  0E04               	movlw	4
 35638  002090  D052               	goto	L92
 35639  002092                     l199:
 35640                           
 35641                           ;i2c_drv.c: 442: else
 35642                           ;i2c_drv.c: 443: {
 35643                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 35644  002092  0E02               	movlw	2
 35645  002094  6430               	cpfsgt	I2c_ReadData@TentativeCounter,c
 35646  002096  D072               	goto	l194
 35647                           
 35648                           ;i2c_drv.c: 446: {
 35649                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 35650  002098  0E08               	movlw	8
 35651  00209A  D04D               	goto	L92
 35652  00209C                     
 35653                           ;i2c_drv.c: 455: EnableReceiver();
 35654  00209C  EC59  F035         	call	_EnableReceiver	;wreg free
 35655                           
 35656                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 35657  0020A0  0E05               	movlw	5
 35658  0020A2  D049               	goto	L92
 35659  0020A4                     
 35660                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 35661  0020A4  EC3F  F035         	call	_CheckTxStatus	;wreg free
 35662  0020A8  0900               	iorlw	0
 35663  0020AA  A4D8               	btfss	status,2,c
 35664  0020AC  D067               	goto	l194
 35665                           
 35666                           ;i2c_drv.c: 463: {
 35667                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 35668  0020AE  0100               	movlb	0	; () banked
 35669  0020B0  EE20 F002          	lfsr	2,2
 35670  0020B4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35671  0020B6  26D9               	addwf	fsr2l,f,c
 35672  0020B8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35673  0020BA  22DA               	addwfc	fsr2h,f,c
 35674  0020BC  CFDE F082          	movff	postinc2,??_I2c_ReadData
 35675  0020C0  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 35676  0020C4  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 35677  0020C8  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 35678  0020CC  EC3A  F035         	call	_ReadByte	;wreg free
 35679  0020D0  6EDF               	movwf	indf2,c
 35680                           
 35681                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 35682  0020D2  0100               	movlb	0	; () banked
 35683  0020D4  EE20 F002          	lfsr	2,2
 35684  0020D8  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35685  0020DA  26D9               	addwf	fsr2l,f,c
 35686  0020DC  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35687  0020DE  22DA               	addwfc	fsr2h,f,c
 35688  0020E0  2ADE               	incf	postinc2,f,c
 35689  0020E2  0E00               	movlw	0
 35690  0020E4  22DD               	addwfc	postdec2,f,c
 35691                           
 35692                           ; BSR set to: 0
 35693                           ;i2c_drv.c: 469: DataCounter++;
 35694  0020E6  2A31               	incf	I2c_ReadData@DataCounter,f,c
 35695                           
 35696                           ; BSR set to: 0
 35697                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 35698  0020E8  0E06               	movlw	6
 35699  0020EA  D025               	goto	L92
 35700  0020EC                     
 35701                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 35702                           
 35703                           ; BSR set to: 0
 35704  0020EC  0100               	movlb	0	; () banked
 35705  0020EE  EE20 F004          	lfsr	2,4
 35706  0020F2  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35707  0020F4  26D9               	addwf	fsr2l,f,c
 35708  0020F6  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35709  0020F8  22DA               	addwfc	fsr2h,f,c
 35710  0020FA  50DE               	movf	postinc2,w,c
 35711  0020FC  5C31               	subwf	I2c_ReadData@DataCounter,w,c
 35712  0020FE  A0D8               	btfss	status,0,c
 35713  002100  D008               	goto	l206
 35714                           
 35715                           ; BSR set to: 0
 35716                           ;i2c_drv.c: 478: {
 35717                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 35718  002102  0E01               	movlw	1
 35719  002104  ECC4  F034         	call	_SetAckStatus
 35720                           
 35721                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 35722  002108  0E07               	movlw	7
 35723  00210A  6E32               	movwf	I2c_ReadData@I2cReadState,c
 35724                           
 35725                           ;i2c_drv.c: 484: DataCounter = 0;
 35726  00210C  0E00               	movlw	0
 35727  00210E  6E31               	movwf	I2c_ReadData@DataCounter,c
 35728                           
 35729                           ;i2c_drv.c: 485: }
 35730  002110  D035               	goto	l194
 35731  002112                     l206:
 35732                           
 35733                           ;i2c_drv.c: 486: else
 35734                           ;i2c_drv.c: 487: {
 35735                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 35736  002112  0E00               	movlw	0
 35737  002114  ECC4  F034         	call	_SetAckStatus
 35738  002118  D7BA               	goto	L93
 35739  00211A                     
 35740                           ;i2c_drv.c: 497: StopCondition();
 35741  00211A  EC55  F035         	call	_StopCondition	;wreg free
 35742                           
 35743                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 35744  00211E  0E02               	movlw	2
 35745  002120  6E2F               	movwf	I2c_ReadData@ReadStatus,c
 35746                           
 35747                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 35748  002122  0E05               	movlw	5
 35749  002124  0100               	movlb	0	; () banked
 35750  002126  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 35751  002128  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 35752  00212A  0E00               	movlw	0
 35753  00212C  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35754  00212E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 35755  002130  EC8C  F034         	call	_GenerateEvt	;wreg free
 35756                           
 35757                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 35758  002134  0E00               	movlw	0
 35759  002136                     L92:
 35760  002136  6E32               	movwf	I2c_ReadData@I2cReadState,c
 35761                           
 35762                           ;i2c_drv.c: 504: break;
 35763  002138  D021               	goto	l194
 35764  00213A                     
 35765                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 35766  00213A  0E00               	movlw	0
 35767  00213C  6E32               	movwf	I2c_ReadData@I2cReadState,c
 35768                           
 35769                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 35770  00213E  0E01               	movlw	1
 35771  002140  6E2F               	movwf	I2c_ReadData@ReadStatus,c
 35772                           
 35773                           ;i2c_drv.c: 515: }
 35774                           
 35775                           ;i2c_drv.c: 514: break;
 35776                           
 35777                           ;i2c_drv.c: 513: default:
 35778                           
 35779                           ;i2c_drv.c: 511: break;
 35780  002142  D01C               	goto	l194
 35781  002144                     l192:
 35782  002144  5032               	movf	I2c_ReadData@I2cReadState,w,c
 35783                           
 35784                           ; Switch size 1, requested type "space"
 35785                           ; Number of cases is 9, Range of values is 0 to 8
 35786                           ; switch strategies available:
 35787                           ; Name         Instructions Cycles
 35788                           ; simple_byte           28    15 (average)
 35789                           ;	Chosen strategy is simple_byte
 35790  002146  0A00               	xorlw	0	; case 0
 35791  002148  B4D8               	btfsc	status,2,c
 35792  00214A  D76C               	goto	l193
 35793  00214C  0A01               	xorlw	1	; case 1
 35794  00214E  B4D8               	btfsc	status,2,c
 35795  002150  D76F               	goto	l195
 35796  002152  0A03               	xorlw	3	; case 2
 35797  002154  B4D8               	btfsc	status,2,c
 35798  002156  D78C               	goto	l196
 35799  002158  0A01               	xorlw	1	; case 3
 35800  00215A  B4D8               	btfsc	status,2,c
 35801  00215C  D790               	goto	l198
 35802  00215E  0A07               	xorlw	7	; case 4
 35803  002160  B4D8               	btfsc	status,2,c
 35804  002162  D79C               	goto	l202
 35805  002164  0A01               	xorlw	1	; case 5
 35806  002166  B4D8               	btfsc	status,2,c
 35807  002168  D79D               	goto	l203
 35808  00216A  0A03               	xorlw	3	; case 6
 35809  00216C  B4D8               	btfsc	status,2,c
 35810  00216E  D7BE               	goto	l205
 35811  002170  0A01               	xorlw	1	; case 7
 35812  002172  B4D8               	btfsc	status,2,c
 35813  002174  D7D2               	goto	l208
 35814  002176  0A0F               	xorlw	15	; case 8
 35815  002178  B4D8               	btfsc	status,2,c
 35816  00217A  D7DF               	goto	l209
 35817  00217C                     l194:
 35818                           
 35819                           ;i2c_drv.c: 518: return ReadStatus;
 35820  00217C  502F               	movf	I2c_ReadData@ReadStatus,w,c
 35821  00217E  0012               	return	
 35822  002180                     __end_of_I2c_ReadData:
 35823                           	opt stack 0
 35824                           tosu	equ	0xFFF
 35825                           tosh	equ	0xFFE
 35826                           tosl	equ	0xFFD
 35827                           pclath	equ	0xFFA
 35828                           tblptru	equ	0xFF8
 35829                           tblptrh	equ	0xFF7
 35830                           tblptrl	equ	0xFF6
 35831                           tablat	equ	0xFF5
 35832                           prodh	equ	0xFF4
 35833                           prodl	equ	0xFF3
 35834                           intcon	equ	0xFF2
 35835                           intcon2	equ	0xFF1
 35836                           intcon3	equ	0xFF0
 35837                           indf0	equ	0xFEF
 35838                           postinc0	equ	0xFEE
 35839                           plusw0	equ	0xFEB
 35840                           fsr0h	equ	0xFEA
 35841                           fsr0l	equ	0xFE9
 35842                           wreg	equ	0xFE8
 35843                           indf1	equ	0xFE7
 35844                           postinc1	equ	0xFE6
 35845                           postdec1	equ	0xFE5
 35846                           plusw1	equ	0xFE3
 35847                           fsr1h	equ	0xFE2
 35848                           fsr1l	equ	0xFE1
 35849                           indf2	equ	0xFDF
 35850                           postinc2	equ	0xFDE
 35851                           postdec2	equ	0xFDD
 35852                           plusw2	equ	0xFDB
 35853                           fsr2h	equ	0xFDA
 35854                           fsr2l	equ	0xFD9
 35855                           status	equ	0xFD8
 35856                           
 35857 ;; *************** function _WriteByte *****************
 35858 ;; Defined at:
 35859 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35860 ;; Parameters:    Size  Location     Type
 35861 ;;  Byte            1    wreg     unsigned char 
 35862 ;; Auto vars:     Size  Location     Type
 35863 ;;  Byte            1   29[BANK0 ] unsigned char 
 35864 ;; Return value:  Size  Location     Type
 35865 ;;                  1    wreg      void 
 35866 ;; Registers used:
 35867 ;;		wreg
 35868 ;; Tracked objects:
 35869 ;;		On entry : 0/0
 35870 ;;		On exit  : 0/0
 35871 ;;		Unchanged: 0/0
 35872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35876 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35877 ;;Total ram usage:        1 bytes
 35878 ;; Hardware stack levels used:    1
 35879 ;; Hardware stack levels required when called:   11
 35880 ;; This function calls:
 35881 ;;		Nothing
 35882 ;; This function is called by:
 35883 ;;		_I2c_WriteData
 35884 ;;		_I2c_ReadData
 35885 ;; This function uses a non-reentrant model
 35886 ;;
 35887                           
 35888                           	psect	text169
 35889  006A6A                     __ptext169:
 35890                           	opt stack 0
 35891  006A6A                     _WriteByte:
 35892                           	opt stack 14
 35893                           
 35894                           ;incstack = 0
 35895                           ;WriteByte@Byte stored from wreg
 35896  006A6A  0100               	movlb	0	; () banked
 35897  006A6C  6F7D               	movwf	WriteByte@Byte& (0+255),b
 35898                           
 35899                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 35900  006A6E  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 35901  006A72  0012               	return		;funcret
 35902  006A74                     __end_of_WriteByte:
 35903                           	opt stack 0
 35904                           tosu	equ	0xFFF
 35905                           tosh	equ	0xFFE
 35906                           tosl	equ	0xFFD
 35907                           pclath	equ	0xFFA
 35908                           tblptru	equ	0xFF8
 35909                           tblptrh	equ	0xFF7
 35910                           tblptrl	equ	0xFF6
 35911                           tablat	equ	0xFF5
 35912                           prodh	equ	0xFF4
 35913                           prodl	equ	0xFF3
 35914                           intcon	equ	0xFF2
 35915                           intcon2	equ	0xFF1
 35916                           intcon3	equ	0xFF0
 35917                           indf0	equ	0xFEF
 35918                           postinc0	equ	0xFEE
 35919                           plusw0	equ	0xFEB
 35920                           fsr0h	equ	0xFEA
 35921                           fsr0l	equ	0xFE9
 35922                           wreg	equ	0xFE8
 35923                           indf1	equ	0xFE7
 35924                           postinc1	equ	0xFE6
 35925                           postdec1	equ	0xFE5
 35926                           plusw1	equ	0xFE3
 35927                           fsr1h	equ	0xFE2
 35928                           fsr1l	equ	0xFE1
 35929                           indf2	equ	0xFDF
 35930                           postinc2	equ	0xFDE
 35931                           postdec2	equ	0xFDD
 35932                           plusw2	equ	0xFDB
 35933                           fsr2h	equ	0xFDA
 35934                           fsr2l	equ	0xFD9
 35935                           status	equ	0xFD8
 35936                           
 35937 ;; *************** function _StopCondition *****************
 35938 ;; Defined at:
 35939 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35940 ;; Parameters:    Size  Location     Type
 35941 ;;		None
 35942 ;; Auto vars:     Size  Location     Type
 35943 ;;		None
 35944 ;; Return value:  Size  Location     Type
 35945 ;;                  1    wreg      void 
 35946 ;; Registers used:
 35947 ;;		status,2, status,0
 35948 ;; Tracked objects:
 35949 ;;		On entry : 0/0
 35950 ;;		On exit  : 0/0
 35951 ;;		Unchanged: 0/0
 35952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35957 ;;Total ram usage:        0 bytes
 35958 ;; Hardware stack levels used:    1
 35959 ;; Hardware stack levels required when called:   11
 35960 ;; This function calls:
 35961 ;;		Nothing
 35962 ;; This function is called by:
 35963 ;;		_I2c_WriteData
 35964 ;;		_I2c_ReadData
 35965 ;; This function uses a non-reentrant model
 35966 ;;
 35967                           
 35968                           	psect	text170
 35969  006AAA                     __ptext170:
 35970                           	opt stack 0
 35971  006AAA                     _StopCondition:
 35972                           	opt stack 14
 35973                           
 35974                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 35975                           
 35976                           ;incstack = 0
 35977  006AAA  8471               	bsf	3953,2,c	;volatile
 35978  006AAC  0012               	return		;funcret
 35979  006AAE                     __end_of_StopCondition:
 35980                           	opt stack 0
 35981                           tosu	equ	0xFFF
 35982                           tosh	equ	0xFFE
 35983                           tosl	equ	0xFFD
 35984                           pclath	equ	0xFFA
 35985                           tblptru	equ	0xFF8
 35986                           tblptrh	equ	0xFF7
 35987                           tblptrl	equ	0xFF6
 35988                           tablat	equ	0xFF5
 35989                           prodh	equ	0xFF4
 35990                           prodl	equ	0xFF3
 35991                           intcon	equ	0xFF2
 35992                           intcon2	equ	0xFF1
 35993                           intcon3	equ	0xFF0
 35994                           indf0	equ	0xFEF
 35995                           postinc0	equ	0xFEE
 35996                           plusw0	equ	0xFEB
 35997                           fsr0h	equ	0xFEA
 35998                           fsr0l	equ	0xFE9
 35999                           wreg	equ	0xFE8
 36000                           indf1	equ	0xFE7
 36001                           postinc1	equ	0xFE6
 36002                           postdec1	equ	0xFE5
 36003                           plusw1	equ	0xFE3
 36004                           fsr1h	equ	0xFE2
 36005                           fsr1l	equ	0xFE1
 36006                           indf2	equ	0xFDF
 36007                           postinc2	equ	0xFDE
 36008                           postdec2	equ	0xFDD
 36009                           plusw2	equ	0xFDB
 36010                           fsr2h	equ	0xFDA
 36011                           fsr2l	equ	0xFD9
 36012                           status	equ	0xFD8
 36013                           
 36014 ;; *************** function _StartCondition *****************
 36015 ;; Defined at:
 36016 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36017 ;; Parameters:    Size  Location     Type
 36018 ;;		None
 36019 ;; Auto vars:     Size  Location     Type
 36020 ;;		None
 36021 ;; Return value:  Size  Location     Type
 36022 ;;                  1    wreg      void 
 36023 ;; Registers used:
 36024 ;;		status,2, status,0
 36025 ;; Tracked objects:
 36026 ;;		On entry : 0/0
 36027 ;;		On exit  : 0/0
 36028 ;;		Unchanged: 0/0
 36029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36034 ;;Total ram usage:        0 bytes
 36035 ;; Hardware stack levels used:    1
 36036 ;; Hardware stack levels required when called:   11
 36037 ;; This function calls:
 36038 ;;		Nothing
 36039 ;; This function is called by:
 36040 ;;		_I2c_WriteData
 36041 ;;		_I2c_ReadData
 36042 ;; This function uses a non-reentrant model
 36043 ;;
 36044                           
 36045                           	psect	text171
 36046  006AAE                     __ptext171:
 36047                           	opt stack 0
 36048  006AAE                     _StartCondition:
 36049                           	opt stack 14
 36050                           
 36051                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 36052                           
 36053                           ;incstack = 0
 36054  006AAE  8071               	bsf	3953,0,c	;volatile
 36055  006AB0  0012               	return		;funcret
 36056  006AB2                     __end_of_StartCondition:
 36057                           	opt stack 0
 36058                           tosu	equ	0xFFF
 36059                           tosh	equ	0xFFE
 36060                           tosl	equ	0xFFD
 36061                           pclath	equ	0xFFA
 36062                           tblptru	equ	0xFF8
 36063                           tblptrh	equ	0xFF7
 36064                           tblptrl	equ	0xFF6
 36065                           tablat	equ	0xFF5
 36066                           prodh	equ	0xFF4
 36067                           prodl	equ	0xFF3
 36068                           intcon	equ	0xFF2
 36069                           intcon2	equ	0xFF1
 36070                           intcon3	equ	0xFF0
 36071                           indf0	equ	0xFEF
 36072                           postinc0	equ	0xFEE
 36073                           plusw0	equ	0xFEB
 36074                           fsr0h	equ	0xFEA
 36075                           fsr0l	equ	0xFE9
 36076                           wreg	equ	0xFE8
 36077                           indf1	equ	0xFE7
 36078                           postinc1	equ	0xFE6
 36079                           postdec1	equ	0xFE5
 36080                           plusw1	equ	0xFE3
 36081                           fsr1h	equ	0xFE2
 36082                           fsr1l	equ	0xFE1
 36083                           indf2	equ	0xFDF
 36084                           postinc2	equ	0xFDE
 36085                           postdec2	equ	0xFDD
 36086                           plusw2	equ	0xFDB
 36087                           fsr2h	equ	0xFDA
 36088                           fsr2l	equ	0xFD9
 36089                           status	equ	0xFD8
 36090                           
 36091 ;; *************** function _SetAckStatus *****************
 36092 ;; Defined at:
 36093 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36094 ;; Parameters:    Size  Location     Type
 36095 ;;  AckSts          1    wreg     unsigned char 
 36096 ;; Auto vars:     Size  Location     Type
 36097 ;;  AckSts          1   29[BANK0 ] unsigned char 
 36098 ;; Return value:  Size  Location     Type
 36099 ;;                  1    wreg      void 
 36100 ;; Registers used:
 36101 ;;		wreg
 36102 ;; Tracked objects:
 36103 ;;		On entry : 0/0
 36104 ;;		On exit  : 0/0
 36105 ;;		Unchanged: 0/0
 36106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36108 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36110 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36111 ;;Total ram usage:        1 bytes
 36112 ;; Hardware stack levels used:    1
 36113 ;; Hardware stack levels required when called:   11
 36114 ;; This function calls:
 36115 ;;		Nothing
 36116 ;; This function is called by:
 36117 ;;		_I2c_ReadData
 36118 ;; This function uses a non-reentrant model
 36119 ;;
 36120                           
 36121                           	psect	text172
 36122  006988                     __ptext172:
 36123                           	opt stack 0
 36124  006988                     _SetAckStatus:
 36125                           	opt stack 14
 36126                           
 36127                           ;incstack = 0
 36128                           ;SetAckStatus@AckSts stored from wreg
 36129  006988  0100               	movlb	0	; () banked
 36130  00698A  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 36131                           
 36132                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 36133  00698C  0100               	movlb	0	; () banked
 36134  00698E  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 36135  006990  D002               	bra	u12515
 36136  006992  9A71               	bcf	3953,5,c	;volatile
 36137  006994  D001               	bra	u12516
 36138  006996                     u12515:
 36139  006996  8A71               	bsf	3953,5,c	;volatile
 36140  006998                     u12516:
 36141                           
 36142                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 36143  006998  8871               	bsf	3953,4,c	;volatile
 36144  00699A  0012               	return		;funcret
 36145  00699C                     __end_of_SetAckStatus:
 36146                           	opt stack 0
 36147                           tosu	equ	0xFFF
 36148                           tosh	equ	0xFFE
 36149                           tosl	equ	0xFFD
 36150                           pclath	equ	0xFFA
 36151                           tblptru	equ	0xFF8
 36152                           tblptrh	equ	0xFF7
 36153                           tblptrl	equ	0xFF6
 36154                           tablat	equ	0xFF5
 36155                           prodh	equ	0xFF4
 36156                           prodl	equ	0xFF3
 36157                           intcon	equ	0xFF2
 36158                           intcon2	equ	0xFF1
 36159                           intcon3	equ	0xFF0
 36160                           indf0	equ	0xFEF
 36161                           postinc0	equ	0xFEE
 36162                           plusw0	equ	0xFEB
 36163                           fsr0h	equ	0xFEA
 36164                           fsr0l	equ	0xFE9
 36165                           wreg	equ	0xFE8
 36166                           indf1	equ	0xFE7
 36167                           postinc1	equ	0xFE6
 36168                           postdec1	equ	0xFE5
 36169                           plusw1	equ	0xFE3
 36170                           fsr1h	equ	0xFE2
 36171                           fsr1l	equ	0xFE1
 36172                           indf2	equ	0xFDF
 36173                           postinc2	equ	0xFDE
 36174                           postdec2	equ	0xFDD
 36175                           plusw2	equ	0xFDB
 36176                           fsr2h	equ	0xFDA
 36177                           fsr2l	equ	0xFD9
 36178                           status	equ	0xFD8
 36179                           
 36180 ;; *************** function _ReadByte *****************
 36181 ;; Defined at:
 36182 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36183 ;; Parameters:    Size  Location     Type
 36184 ;;		None
 36185 ;; Auto vars:     Size  Location     Type
 36186 ;;  Byte            1   29[BANK0 ] unsigned char 
 36187 ;; Return value:  Size  Location     Type
 36188 ;;                  1    wreg      unsigned char 
 36189 ;; Registers used:
 36190 ;;		wreg, status,2
 36191 ;; Tracked objects:
 36192 ;;		On entry : 0/0
 36193 ;;		On exit  : 0/0
 36194 ;;		Unchanged: 0/0
 36195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36197 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36199 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36200 ;;Total ram usage:        1 bytes
 36201 ;; Hardware stack levels used:    1
 36202 ;; Hardware stack levels required when called:   11
 36203 ;; This function calls:
 36204 ;;		Nothing
 36205 ;; This function is called by:
 36206 ;;		_I2c_ReadData
 36207 ;; This function uses a non-reentrant model
 36208 ;;
 36209                           
 36210                           	psect	text173
 36211  006A74                     __ptext173:
 36212                           	opt stack 0
 36213  006A74                     _ReadByte:
 36214                           	opt stack 14
 36215                           
 36216                           ;i2c_drv.c: 207: UINT8 Byte;
 36217                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 36218                           
 36219                           ;incstack = 0
 36220  006A74  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 36221                           
 36222                           ;i2c_drv.c: 213: return Byte;
 36223  006A78  0100               	movlb	0	; () banked
 36224  006A7A  517D               	movf	ReadByte@Byte& (0+255),w,b
 36225  006A7C  0012               	return	
 36226  006A7E                     __end_of_ReadByte:
 36227                           	opt stack 0
 36228                           tosu	equ	0xFFF
 36229                           tosh	equ	0xFFE
 36230                           tosl	equ	0xFFD
 36231                           pclath	equ	0xFFA
 36232                           tblptru	equ	0xFF8
 36233                           tblptrh	equ	0xFF7
 36234                           tblptrl	equ	0xFF6
 36235                           tablat	equ	0xFF5
 36236                           prodh	equ	0xFF4
 36237                           prodl	equ	0xFF3
 36238                           intcon	equ	0xFF2
 36239                           intcon2	equ	0xFF1
 36240                           intcon3	equ	0xFF0
 36241                           indf0	equ	0xFEF
 36242                           postinc0	equ	0xFEE
 36243                           plusw0	equ	0xFEB
 36244                           fsr0h	equ	0xFEA
 36245                           fsr0l	equ	0xFE9
 36246                           wreg	equ	0xFE8
 36247                           indf1	equ	0xFE7
 36248                           postinc1	equ	0xFE6
 36249                           postdec1	equ	0xFE5
 36250                           plusw1	equ	0xFE3
 36251                           fsr1h	equ	0xFE2
 36252                           fsr1l	equ	0xFE1
 36253                           indf2	equ	0xFDF
 36254                           postinc2	equ	0xFDE
 36255                           postdec2	equ	0xFDD
 36256                           plusw2	equ	0xFDB
 36257                           fsr2h	equ	0xFDA
 36258                           fsr2l	equ	0xFD9
 36259                           status	equ	0xFD8
 36260                           
 36261 ;; *************** function _GenerateEvt *****************
 36262 ;; Defined at:
 36263 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36264 ;; Parameters:    Size  Location     Type
 36265 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 36266 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36267 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36268 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36269 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36270 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36271 ;; Auto vars:     Size  Location     Type
 36272 ;;  EventStatus     1   31[BANK0 ] enum E7727
 36273 ;; Return value:  Size  Location     Type
 36274 ;;                  1    wreg      enum E7699
 36275 ;; Registers used:
 36276 ;;		wreg, fsr2l, fsr2h, status,2
 36277 ;; Tracked objects:
 36278 ;;		On entry : 0/0
 36279 ;;		On exit  : 0/0
 36280 ;;		Unchanged: 0/0
 36281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36282 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36285 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36286 ;;Total ram usage:        3 bytes
 36287 ;; Hardware stack levels used:    1
 36288 ;; Hardware stack levels required when called:   11
 36289 ;; This function calls:
 36290 ;;		Nothing
 36291 ;; This function is called by:
 36292 ;;		_I2c_ReadData
 36293 ;;		_CheckModem
 36294 ;;		_TurnOnModem
 36295 ;;		_ConfigureModem
 36296 ;;		_ModemEvtParser
 36297 ;;		_GetSmsSm
 36298 ;;		_Mdm_RequestSmsData
 36299 ;;		_I2cSlv_SendI2cMsg
 36300 ;;		_I2cSlv_ReceiveI2cMsg
 36301 ;;		_RiSm
 36302 ;;		_Mdm_SendSmsData
 36303 ;;		_MdmHttp_InitGprsNetwork
 36304 ;;		_MdmHttp_GetMethod
 36305 ;;		_Alarm
 36306 ;; This function uses a non-reentrant model
 36307 ;;
 36308                           
 36309                           	psect	text174
 36310  006918                     __ptext174:
 36311                           	opt stack 0
 36312  006918                     _GenerateEvt:
 36313                           	opt stack 13
 36314                           
 36315                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36316                           
 36317                           ; BSR set to: 0
 36318                           ;incstack = 0
 36319  006918  0E00               	movlw	0
 36320  00691A  0100               	movlb	0	; () banked
 36321  00691C  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36322                           
 36323                           ; BSR set to: 0
 36324                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36325  00691E  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 36326  006922  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 36327  006926  0E02               	movlw	2
 36328  006928  6EDF               	movwf	indf2,c
 36329                           
 36330                           ; BSR set to: 0
 36331                           ;os_ser.c: 83: EventStatus = EventSent;
 36332  00692A  0E02               	movlw	2
 36333  00692C  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36334  00692E  0012               	return	
 36335  006930                     __end_of_GenerateEvt:
 36336                           	opt stack 0
 36337                           tosu	equ	0xFFF
 36338                           tosh	equ	0xFFE
 36339                           tosl	equ	0xFFD
 36340                           pclath	equ	0xFFA
 36341                           tblptru	equ	0xFF8
 36342                           tblptrh	equ	0xFF7
 36343                           tblptrl	equ	0xFF6
 36344                           tablat	equ	0xFF5
 36345                           prodh	equ	0xFF4
 36346                           prodl	equ	0xFF3
 36347                           intcon	equ	0xFF2
 36348                           intcon2	equ	0xFF1
 36349                           intcon3	equ	0xFF0
 36350                           indf0	equ	0xFEF
 36351                           postinc0	equ	0xFEE
 36352                           plusw0	equ	0xFEB
 36353                           fsr0h	equ	0xFEA
 36354                           fsr0l	equ	0xFE9
 36355                           wreg	equ	0xFE8
 36356                           indf1	equ	0xFE7
 36357                           postinc1	equ	0xFE6
 36358                           postdec1	equ	0xFE5
 36359                           plusw1	equ	0xFE3
 36360                           fsr1h	equ	0xFE2
 36361                           fsr1l	equ	0xFE1
 36362                           indf2	equ	0xFDF
 36363                           postinc2	equ	0xFDE
 36364                           postdec2	equ	0xFDD
 36365                           plusw2	equ	0xFDB
 36366                           fsr2h	equ	0xFDA
 36367                           fsr2l	equ	0xFD9
 36368                           status	equ	0xFD8
 36369                           
 36370 ;; *************** function _EnableReceiver *****************
 36371 ;; Defined at:
 36372 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36373 ;; Parameters:    Size  Location     Type
 36374 ;;		None
 36375 ;; Auto vars:     Size  Location     Type
 36376 ;;		None
 36377 ;; Return value:  Size  Location     Type
 36378 ;;                  1    wreg      void 
 36379 ;; Registers used:
 36380 ;;		status,2, status,0
 36381 ;; Tracked objects:
 36382 ;;		On entry : 0/0
 36383 ;;		On exit  : 0/0
 36384 ;;		Unchanged: 0/0
 36385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36390 ;;Total ram usage:        0 bytes
 36391 ;; Hardware stack levels used:    1
 36392 ;; Hardware stack levels required when called:   11
 36393 ;; This function calls:
 36394 ;;		Nothing
 36395 ;; This function is called by:
 36396 ;;		_I2c_ReadData
 36397 ;; This function uses a non-reentrant model
 36398 ;;
 36399                           
 36400                           	psect	text175
 36401  006AB2                     __ptext175:
 36402                           	opt stack 0
 36403  006AB2                     _EnableReceiver:
 36404                           	opt stack 14
 36405                           
 36406                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 36407                           
 36408                           ; BSR set to: 0
 36409                           ;incstack = 0
 36410  006AB2  8671               	bsf	3953,3,c	;volatile
 36411  006AB4  0012               	return		;funcret
 36412  006AB6                     __end_of_EnableReceiver:
 36413                           	opt stack 0
 36414                           tosu	equ	0xFFF
 36415                           tosh	equ	0xFFE
 36416                           tosl	equ	0xFFD
 36417                           pclath	equ	0xFFA
 36418                           tblptru	equ	0xFF8
 36419                           tblptrh	equ	0xFF7
 36420                           tblptrl	equ	0xFF6
 36421                           tablat	equ	0xFF5
 36422                           prodh	equ	0xFF4
 36423                           prodl	equ	0xFF3
 36424                           intcon	equ	0xFF2
 36425                           intcon2	equ	0xFF1
 36426                           intcon3	equ	0xFF0
 36427                           indf0	equ	0xFEF
 36428                           postinc0	equ	0xFEE
 36429                           plusw0	equ	0xFEB
 36430                           fsr0h	equ	0xFEA
 36431                           fsr0l	equ	0xFE9
 36432                           wreg	equ	0xFE8
 36433                           indf1	equ	0xFE7
 36434                           postinc1	equ	0xFE6
 36435                           postdec1	equ	0xFE5
 36436                           plusw1	equ	0xFE3
 36437                           fsr1h	equ	0xFE2
 36438                           fsr1l	equ	0xFE1
 36439                           indf2	equ	0xFDF
 36440                           postinc2	equ	0xFDE
 36441                           postdec2	equ	0xFDD
 36442                           plusw2	equ	0xFDB
 36443                           fsr2h	equ	0xFDA
 36444                           fsr2l	equ	0xFD9
 36445                           status	equ	0xFD8
 36446                           
 36447 ;; *************** function _CheckTxStatus *****************
 36448 ;; Defined at:
 36449 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36450 ;; Parameters:    Size  Location     Type
 36451 ;;		None
 36452 ;; Auto vars:     Size  Location     Type
 36453 ;;		None
 36454 ;; Return value:  Size  Location     Type
 36455 ;;                  1    wreg      unsigned char 
 36456 ;; Registers used:
 36457 ;;		wreg, status,2, status,0
 36458 ;; Tracked objects:
 36459 ;;		On entry : 0/0
 36460 ;;		On exit  : 0/0
 36461 ;;		Unchanged: 0/0
 36462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36467 ;;Total ram usage:        0 bytes
 36468 ;; Hardware stack levels used:    1
 36469 ;; Hardware stack levels required when called:   11
 36470 ;; This function calls:
 36471 ;;		Nothing
 36472 ;; This function is called by:
 36473 ;;		_I2c_WriteData
 36474 ;;		_I2c_ReadData
 36475 ;; This function uses a non-reentrant model
 36476 ;;
 36477                           
 36478                           	psect	text176
 36479  006A7E                     __ptext176:
 36480                           	opt stack 0
 36481  006A7E                     _CheckTxStatus:
 36482                           	opt stack 14
 36483                           
 36484                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 36485                           
 36486                           ;incstack = 0
 36487  006A7E  4073               	rrncf	3955,w,c	;volatile
 36488  006A80  42E8               	rrncf	wreg,f,c
 36489  006A82  0B3F               	andlw	63
 36490  006A84  0B01               	andlw	1
 36491  006A86  0012               	return	
 36492  006A88                     __end_of_CheckTxStatus:
 36493                           	opt stack 0
 36494                           tosu	equ	0xFFF
 36495                           tosh	equ	0xFFE
 36496                           tosl	equ	0xFFD
 36497                           pclath	equ	0xFFA
 36498                           tblptru	equ	0xFF8
 36499                           tblptrh	equ	0xFF7
 36500                           tblptrl	equ	0xFF6
 36501                           tablat	equ	0xFF5
 36502                           prodh	equ	0xFF4
 36503                           prodl	equ	0xFF3
 36504                           intcon	equ	0xFF2
 36505                           intcon2	equ	0xFF1
 36506                           intcon3	equ	0xFF0
 36507                           indf0	equ	0xFEF
 36508                           postinc0	equ	0xFEE
 36509                           plusw0	equ	0xFEB
 36510                           fsr0h	equ	0xFEA
 36511                           fsr0l	equ	0xFE9
 36512                           wreg	equ	0xFE8
 36513                           indf1	equ	0xFE7
 36514                           postinc1	equ	0xFE6
 36515                           postdec1	equ	0xFE5
 36516                           plusw1	equ	0xFE3
 36517                           fsr1h	equ	0xFE2
 36518                           fsr1l	equ	0xFE1
 36519                           indf2	equ	0xFDF
 36520                           postinc2	equ	0xFDE
 36521                           postdec2	equ	0xFDD
 36522                           plusw2	equ	0xFDB
 36523                           fsr2h	equ	0xFDA
 36524                           fsr2l	equ	0xFD9
 36525                           status	equ	0xFD8
 36526                           
 36527 ;; *************** function _CheckAckStatus *****************
 36528 ;; Defined at:
 36529 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36530 ;; Parameters:    Size  Location     Type
 36531 ;;		None
 36532 ;; Auto vars:     Size  Location     Type
 36533 ;;		None
 36534 ;; Return value:  Size  Location     Type
 36535 ;;                  1    wreg      unsigned char 
 36536 ;; Registers used:
 36537 ;;		wreg, status,2, status,0
 36538 ;; Tracked objects:
 36539 ;;		On entry : 0/0
 36540 ;;		On exit  : 0/0
 36541 ;;		Unchanged: 0/0
 36542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36547 ;;Total ram usage:        0 bytes
 36548 ;; Hardware stack levels used:    1
 36549 ;; Hardware stack levels required when called:   11
 36550 ;; This function calls:
 36551 ;;		Nothing
 36552 ;; This function is called by:
 36553 ;;		_I2c_WriteData
 36554 ;;		_I2c_ReadData
 36555 ;; This function uses a non-reentrant model
 36556 ;;
 36557                           
 36558                           	psect	text177
 36559  006A88                     __ptext177:
 36560                           	opt stack 0
 36561  006A88                     _CheckAckStatus:
 36562                           	opt stack 14
 36563                           
 36564                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 36565                           
 36566                           ;incstack = 0
 36567  006A88  4471               	rlncf	3953,w,c	;volatile
 36568  006A8A  46E8               	rlncf	wreg,f,c
 36569  006A8C  0B03               	andlw	3
 36570  006A8E  0B01               	andlw	1
 36571  006A90  0012               	return	
 36572  006A92                     __end_of_CheckAckStatus:
 36573                           	opt stack 0
 36574                           tosu	equ	0xFFF
 36575                           tosh	equ	0xFFE
 36576                           tosl	equ	0xFFD
 36577                           pclath	equ	0xFFA
 36578                           tblptru	equ	0xFF8
 36579                           tblptrh	equ	0xFF7
 36580                           tblptrl	equ	0xFF6
 36581                           tablat	equ	0xFF5
 36582                           prodh	equ	0xFF4
 36583                           prodl	equ	0xFF3
 36584                           intcon	equ	0xFF2
 36585                           intcon2	equ	0xFF1
 36586                           intcon3	equ	0xFF0
 36587                           indf0	equ	0xFEF
 36588                           postinc0	equ	0xFEE
 36589                           plusw0	equ	0xFEB
 36590                           fsr0h	equ	0xFEA
 36591                           fsr0l	equ	0xFE9
 36592                           wreg	equ	0xFE8
 36593                           indf1	equ	0xFE7
 36594                           postinc1	equ	0xFE6
 36595                           postdec1	equ	0xFE5
 36596                           plusw1	equ	0xFE3
 36597                           fsr1h	equ	0xFE2
 36598                           fsr1l	equ	0xFE1
 36599                           indf2	equ	0xFDF
 36600                           postinc2	equ	0xFDE
 36601                           postdec2	equ	0xFDD
 36602                           plusw2	equ	0xFDB
 36603                           fsr2h	equ	0xFDA
 36604                           fsr2l	equ	0xFD9
 36605                           status	equ	0xFD8
 36606                           
 36607 ;; *************** function _LowPriorityIsr *****************
 36608 ;; Defined at:
 36609 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 36610 ;; Parameters:    Size  Location     Type
 36611 ;;		None
 36612 ;; Auto vars:     Size  Location     Type
 36613 ;;		None
 36614 ;; Return value:  Size  Location     Type
 36615 ;;                  1    wreg      void 
 36616 ;; Registers used:
 36617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36618 ;; Tracked objects:
 36619 ;;		On entry : 0/0
 36620 ;;		On exit  : 0/0
 36621 ;;		Unchanged: 0/0
 36622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36625 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36626 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36627 ;;Total ram usage:       21 bytes
 36628 ;; Hardware stack levels used:    1
 36629 ;; Hardware stack levels required when called:   10
 36630 ;; This function calls:
 36631 ;;		_Tmr_Tmr2Isr
 36632 ;; This function is called by:
 36633 ;;		Interrupt level 1
 36634 ;; This function uses a non-reentrant model
 36635 ;;
 36636                           
 36637                           	psect	intcodelo
 36638  000018                     __pintcodelo:
 36639                           	opt stack 0
 36640  000018                     _LowPriorityIsr:
 36641                           	opt stack 8
 36642                           
 36643                           ;incstack = 0
 36644  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 36645  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 36646  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 36647  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 36648  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 36649  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 36650  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 36651  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 36652  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 36653  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 36654  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 36655  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 36656  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 36657  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 36658  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 36659  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 36660  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 36661  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 36662  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 36663  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 36664  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 36665  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 36666                           
 36667                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 36668  00006E  B29E               	btfsc	3998,1,c	;volatile
 36669                           
 36670                           ;irq.c: 259: {
 36671                           ;irq.c: 261: Tmr_Tmr2Isr();
 36672  000070  EC4F  F033         	call	_Tmr_Tmr2Isr	;wreg free
 36673  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 36674  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 36675  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 36676  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 36677  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 36678  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 36679  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 36680  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 36681  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 36682  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 36683  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 36684  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 36685  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 36686  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 36687  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 36688  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 36689  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 36690  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 36691  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 36692  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 36693  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 36694  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 36695  0000CA  0010               	retfie	
 36696  0000CC                     __end_of_LowPriorityIsr:
 36697                           	opt stack 0
 36698                           tosu	equ	0xFFF
 36699                           tosh	equ	0xFFE
 36700                           tosl	equ	0xFFD
 36701                           pclatu	equ	0xFFB
 36702                           pclath	equ	0xFFA
 36703                           tblptru	equ	0xFF8
 36704                           tblptrh	equ	0xFF7
 36705                           tblptrl	equ	0xFF6
 36706                           tablat	equ	0xFF5
 36707                           prodh	equ	0xFF4
 36708                           prodl	equ	0xFF3
 36709                           intcon	equ	0xFF2
 36710                           intcon2	equ	0xFF1
 36711                           intcon3	equ	0xFF0
 36712                           indf0	equ	0xFEF
 36713                           postinc0	equ	0xFEE
 36714                           plusw0	equ	0xFEB
 36715                           fsr0h	equ	0xFEA
 36716                           fsr0l	equ	0xFE9
 36717                           wreg	equ	0xFE8
 36718                           indf1	equ	0xFE7
 36719                           postinc1	equ	0xFE6
 36720                           postdec1	equ	0xFE5
 36721                           plusw1	equ	0xFE3
 36722                           fsr1h	equ	0xFE2
 36723                           fsr1l	equ	0xFE1
 36724                           bsr	equ	0xFE0
 36725                           indf2	equ	0xFDF
 36726                           postinc2	equ	0xFDE
 36727                           postdec2	equ	0xFDD
 36728                           plusw2	equ	0xFDB
 36729                           fsr2h	equ	0xFDA
 36730                           fsr2l	equ	0xFD9
 36731                           status	equ	0xFD8
 36732                           
 36733 ;; *************** function _Tmr_Tmr2Isr *****************
 36734 ;; Defined at:
 36735 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 36736 ;; Parameters:    Size  Location     Type
 36737 ;;		None
 36738 ;; Auto vars:     Size  Location     Type
 36739 ;;		None
 36740 ;; Return value:  Size  Location     Type
 36741 ;;                  1    wreg      void 
 36742 ;; Registers used:
 36743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36744 ;; Tracked objects:
 36745 ;;		On entry : 0/0
 36746 ;;		On exit  : 0/0
 36747 ;;		Unchanged: 0/0
 36748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36753 ;;Total ram usage:        0 bytes
 36754 ;; Hardware stack levels used:    1
 36755 ;; Hardware stack levels required when called:    9
 36756 ;; This function calls:
 36757 ;;		Absolute function
 36758 ;;		_Sch_SchmIntService
 36759 ;; This function is called by:
 36760 ;;		_LowPriorityIsr
 36761 ;; This function uses a non-reentrant model
 36762 ;;
 36763                           
 36764                           	psect	text179
 36765  00669E                     __ptext179:
 36766                           	opt stack 0
 36767  00669E                     _Tmr_Tmr2Isr:
 36768                           	opt stack 8
 36769                           
 36770                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 36771                           
 36772                           ;incstack = 0
 36773  00669E  929E               	bcf	3998,1,c	;volatile
 36774                           
 36775                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 36776  0066A0  0101               	movlb	1	; () banked
 36777  0066A2  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 36778  0066A4  11D4               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 36779  0066A6  B4D8               	btfsc	status,2,c
 36780  0066A8  0012               	return	
 36781                           
 36782                           ; BSR set to: 1
 36783                           ;tmr_drv.c: 315: {
 36784                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 36785  0066AA  D801               	call	i1u1626_28
 36786  0066AC  0012               	return	
 36787  0066AE                     i1u1626_28:
 36788  0066AE  0005               	push	
 36789  0066B0  6EFA               	movwf	pclath,c
 36790  0066B2  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 36791  0066B4  6EFD               	movwf	tosl,c
 36792  0066B6  51D4               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 36793  0066B8  6EFE               	movwf	tosh,c
 36794  0066BA  50F8               	movf	tblptru,w,c
 36795  0066BC  6EFF               	movwf	tosu,c
 36796  0066BE  50FA               	movf	pclath,w,c
 36797  0066C0  0012               	return		;indir
 36798  0066C2                     __end_of_Tmr_Tmr2Isr:
 36799                           	opt stack 0
 36800                           tosu	equ	0xFFF
 36801                           tosh	equ	0xFFE
 36802                           tosl	equ	0xFFD
 36803                           pclatu	equ	0xFFB
 36804                           pclath	equ	0xFFA
 36805                           tblptru	equ	0xFF8
 36806                           tblptrh	equ	0xFF7
 36807                           tblptrl	equ	0xFF6
 36808                           tablat	equ	0xFF5
 36809                           prodh	equ	0xFF4
 36810                           prodl	equ	0xFF3
 36811                           intcon	equ	0xFF2
 36812                           intcon2	equ	0xFF1
 36813                           intcon3	equ	0xFF0
 36814                           indf0	equ	0xFEF
 36815                           postinc0	equ	0xFEE
 36816                           plusw0	equ	0xFEB
 36817                           fsr0h	equ	0xFEA
 36818                           fsr0l	equ	0xFE9
 36819                           wreg	equ	0xFE8
 36820                           indf1	equ	0xFE7
 36821                           postinc1	equ	0xFE6
 36822                           postdec1	equ	0xFE5
 36823                           plusw1	equ	0xFE3
 36824                           fsr1h	equ	0xFE2
 36825                           fsr1l	equ	0xFE1
 36826                           bsr	equ	0xFE0
 36827                           indf2	equ	0xFDF
 36828                           postinc2	equ	0xFDE
 36829                           postdec2	equ	0xFDD
 36830                           plusw2	equ	0xFDB
 36831                           fsr2h	equ	0xFDA
 36832                           fsr2l	equ	0xFD9
 36833                           status	equ	0xFD8
 36834                           
 36835 ;; *************** function _Sch_SchmIntService *****************
 36836 ;; Defined at:
 36837 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 36838 ;; Parameters:    Size  Location     Type
 36839 ;;		None
 36840 ;; Auto vars:     Size  Location     Type
 36841 ;;		None
 36842 ;; Return value:  Size  Location     Type
 36843 ;;                  1    wreg      void 
 36844 ;; Registers used:
 36845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36846 ;; Tracked objects:
 36847 ;;		On entry : 0/0
 36848 ;;		On exit  : 0/0
 36849 ;;		Unchanged: 0/0
 36850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36855 ;;Total ram usage:        0 bytes
 36856 ;; Hardware stack levels used:    1
 36857 ;; Hardware stack levels required when called:    8
 36858 ;; This function calls:
 36859 ;;		_OsAlrm_ProcessOsAlarms
 36860 ;;		_UpdateOsCounters
 36861 ;;		_UpdateSchFlag
 36862 ;; This function is called by:
 36863 ;;		_SystemInit
 36864 ;;		_Tmr_Tmr2Isr
 36865 ;; This function uses a non-reentrant model
 36866 ;;
 36867                           
 36868                           	psect	text180
 36869  006A22                     __ptext180:
 36870                           	opt stack 0
 36871  006A22                     _Sch_SchmIntService:
 36872                           	opt stack 8
 36873                           
 36874                           ;os_sched.c: 217: UpdateSchFlag();
 36875                           
 36876                           ;incstack = 0
 36877  006A22  EC24  F034         	call	_UpdateSchFlag	;wreg free
 36878                           
 36879                           ;os_sched.c: 219: UpdateOsCounters();
 36880  006A26  EC01  F035         	call	_UpdateOsCounters	;wreg free
 36881                           
 36882                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 36883  006A2A  EC16  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 36884  006A2E  0012               	return		;funcret
 36885  006A30                     __end_of_Sch_SchmIntService:
 36886                           	opt stack 0
 36887                           tosu	equ	0xFFF
 36888                           tosh	equ	0xFFE
 36889                           tosl	equ	0xFFD
 36890                           pclatu	equ	0xFFB
 36891                           pclath	equ	0xFFA
 36892                           tblptru	equ	0xFF8
 36893                           tblptrh	equ	0xFF7
 36894                           tblptrl	equ	0xFF6
 36895                           tablat	equ	0xFF5
 36896                           prodh	equ	0xFF4
 36897                           prodl	equ	0xFF3
 36898                           intcon	equ	0xFF2
 36899                           intcon2	equ	0xFF1
 36900                           intcon3	equ	0xFF0
 36901                           indf0	equ	0xFEF
 36902                           postinc0	equ	0xFEE
 36903                           plusw0	equ	0xFEB
 36904                           fsr0h	equ	0xFEA
 36905                           fsr0l	equ	0xFE9
 36906                           wreg	equ	0xFE8
 36907                           indf1	equ	0xFE7
 36908                           postinc1	equ	0xFE6
 36909                           postdec1	equ	0xFE5
 36910                           plusw1	equ	0xFE3
 36911                           fsr1h	equ	0xFE2
 36912                           fsr1l	equ	0xFE1
 36913                           bsr	equ	0xFE0
 36914                           indf2	equ	0xFDF
 36915                           postinc2	equ	0xFDE
 36916                           postdec2	equ	0xFDD
 36917                           plusw2	equ	0xFDB
 36918                           fsr2h	equ	0xFDA
 36919                           fsr2l	equ	0xFD9
 36920                           status	equ	0xFD8
 36921                           
 36922 ;; *************** function _UpdateSchFlag *****************
 36923 ;; Defined at:
 36924 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 36925 ;; Parameters:    Size  Location     Type
 36926 ;;		None
 36927 ;; Auto vars:     Size  Location     Type
 36928 ;;		None
 36929 ;; Return value:  Size  Location     Type
 36930 ;;                  1    wreg      void 
 36931 ;; Registers used:
 36932 ;;		wreg, status,2, status,0
 36933 ;; Tracked objects:
 36934 ;;		On entry : 0/0
 36935 ;;		On exit  : 0/0
 36936 ;;		Unchanged: 0/0
 36937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36942 ;;Total ram usage:        0 bytes
 36943 ;; Hardware stack levels used:    1
 36944 ;; Hardware stack levels required when called:    4
 36945 ;; This function calls:
 36946 ;;		Nothing
 36947 ;; This function is called by:
 36948 ;;		_Sch_SchmIntService
 36949 ;; This function uses a non-reentrant model
 36950 ;;
 36951                           
 36952                           	psect	text181
 36953  006848                     __ptext181:
 36954                           	opt stack 0
 36955  006848                     _UpdateSchFlag:
 36956                           	opt stack 11
 36957                           
 36958                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 36959                           ;os_sched.c: 138: InterruptCounter++;
 36960                           
 36961                           ;incstack = 0
 36962  006848  0102               	movlb	2	; () banked
 36963  00684A  4BDE               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 36964  00684C  2BDF               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 36965                           
 36966                           ; BSR set to: 2
 36967                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 36968  00684E  51DE               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 36969  006850  11DF               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 36970  006852  B4D8               	btfsc	status,2,c
 36971  006854  0012               	return	
 36972                           
 36973                           ; BSR set to: 2
 36974                           ;os_sched.c: 141: {
 36975                           ;os_sched.c: 143: InterruptCounter = 0;
 36976  006856  0E00               	movlw	0
 36977  006858  6FDF               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 36978  00685A  0E00               	movlw	0
 36979  00685C  6FDE               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 36980                           
 36981                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 36982  00685E  0E00               	movlw	0
 36983  006860  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 36984  006862  0012               	return	
 36985  006864                     __end_of_UpdateSchFlag:
 36986                           	opt stack 0
 36987                           tosu	equ	0xFFF
 36988                           tosh	equ	0xFFE
 36989                           tosl	equ	0xFFD
 36990                           pclatu	equ	0xFFB
 36991                           pclath	equ	0xFFA
 36992                           tblptru	equ	0xFF8
 36993                           tblptrh	equ	0xFF7
 36994                           tblptrl	equ	0xFF6
 36995                           tablat	equ	0xFF5
 36996                           prodh	equ	0xFF4
 36997                           prodl	equ	0xFF3
 36998                           intcon	equ	0xFF2
 36999                           intcon2	equ	0xFF1
 37000                           intcon3	equ	0xFF0
 37001                           indf0	equ	0xFEF
 37002                           postinc0	equ	0xFEE
 37003                           plusw0	equ	0xFEB
 37004                           fsr0h	equ	0xFEA
 37005                           fsr0l	equ	0xFE9
 37006                           wreg	equ	0xFE8
 37007                           indf1	equ	0xFE7
 37008                           postinc1	equ	0xFE6
 37009                           postdec1	equ	0xFE5
 37010                           plusw1	equ	0xFE3
 37011                           fsr1h	equ	0xFE2
 37012                           fsr1l	equ	0xFE1
 37013                           bsr	equ	0xFE0
 37014                           indf2	equ	0xFDF
 37015                           postinc2	equ	0xFDE
 37016                           postdec2	equ	0xFDD
 37017                           plusw2	equ	0xFDB
 37018                           fsr2h	equ	0xFDA
 37019                           fsr2l	equ	0xFD9
 37020                           status	equ	0xFD8
 37021                           
 37022 ;; *************** function _UpdateOsCounters *****************
 37023 ;; Defined at:
 37024 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37025 ;; Parameters:    Size  Location     Type
 37026 ;;		None
 37027 ;; Auto vars:     Size  Location     Type
 37028 ;;		None
 37029 ;; Return value:  Size  Location     Type
 37030 ;;                  1    wreg      void 
 37031 ;; Registers used:
 37032 ;;		wreg, status,2, status,0
 37033 ;; Tracked objects:
 37034 ;;		On entry : 0/0
 37035 ;;		On exit  : 0/0
 37036 ;;		Unchanged: 0/0
 37037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37042 ;;Total ram usage:        0 bytes
 37043 ;; Hardware stack levels used:    1
 37044 ;; Hardware stack levels required when called:    4
 37045 ;; This function calls:
 37046 ;;		Nothing
 37047 ;; This function is called by:
 37048 ;;		_Sch_SchmIntService
 37049 ;; This function uses a non-reentrant model
 37050 ;;
 37051                           
 37052                           	psect	text182
 37053  006A02                     __ptext182:
 37054                           	opt stack 0
 37055  006A02                     _UpdateOsCounters:
 37056                           	opt stack 11
 37057                           
 37058                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 37059                           
 37060                           ; BSR set to: 2
 37061                           ;incstack = 0
 37062  006A02  0E01               	movlw	1
 37063  006A04  0103               	movlb	3	; () banked
 37064  006A06  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 37065  006A08  0E00               	movlw	0
 37066  006A0A  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 37067  006A0C  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 37068  006A0E  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 37069                           
 37070                           ; BSR set to: 3
 37071  006A10  0012               	return		;funcret
 37072  006A12                     __end_of_UpdateOsCounters:
 37073                           	opt stack 0
 37074                           tosu	equ	0xFFF
 37075                           tosh	equ	0xFFE
 37076                           tosl	equ	0xFFD
 37077                           pclatu	equ	0xFFB
 37078                           pclath	equ	0xFFA
 37079                           tblptru	equ	0xFF8
 37080                           tblptrh	equ	0xFF7
 37081                           tblptrl	equ	0xFF6
 37082                           tablat	equ	0xFF5
 37083                           prodh	equ	0xFF4
 37084                           prodl	equ	0xFF3
 37085                           intcon	equ	0xFF2
 37086                           intcon2	equ	0xFF1
 37087                           intcon3	equ	0xFF0
 37088                           indf0	equ	0xFEF
 37089                           postinc0	equ	0xFEE
 37090                           plusw0	equ	0xFEB
 37091                           fsr0h	equ	0xFEA
 37092                           fsr0l	equ	0xFE9
 37093                           wreg	equ	0xFE8
 37094                           indf1	equ	0xFE7
 37095                           postinc1	equ	0xFE6
 37096                           postdec1	equ	0xFE5
 37097                           plusw1	equ	0xFE3
 37098                           fsr1h	equ	0xFE2
 37099                           fsr1l	equ	0xFE1
 37100                           bsr	equ	0xFE0
 37101                           indf2	equ	0xFDF
 37102                           postinc2	equ	0xFDE
 37103                           postdec2	equ	0xFDD
 37104                           plusw2	equ	0xFDB
 37105                           fsr2h	equ	0xFDA
 37106                           fsr2l	equ	0xFD9
 37107                           status	equ	0xFD8
 37108                           
 37109 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 37110 ;; Defined at:
 37111 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37112 ;; Parameters:    Size  Location     Type
 37113 ;;		None
 37114 ;; Auto vars:     Size  Location     Type
 37115 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 37116 ;; Return value:  Size  Location     Type
 37117 ;;                  1    wreg      void 
 37118 ;; Registers used:
 37119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37120 ;; Tracked objects:
 37121 ;;		On entry : 0/0
 37122 ;;		On exit  : 0/0
 37123 ;;		Unchanged: 0/0
 37124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37127 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37128 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37129 ;;Total ram usage:       10 bytes
 37130 ;; Hardware stack levels used:    1
 37131 ;; Hardware stack levels required when called:    7
 37132 ;; This function calls:
 37133 ;;		_I2cDummyTx
 37134 ;;		_OsAlrm_ClearOsAlarm
 37135 ;;		i1___wmul
 37136 ;; This function is called by:
 37137 ;;		_Sch_SchmIntService
 37138 ;; This function uses a non-reentrant model
 37139 ;;
 37140                           
 37141                           	psect	text183
 37142  00242C                     __ptext183:
 37143                           	opt stack 0
 37144  00242C                     _OsAlrm_ProcessOsAlarms:
 37145                           	opt stack 8
 37146                           
 37147                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 37148                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 37149                           
 37150                           ; BSR set to: 3
 37151                           ;incstack = 0
 37152  00242C  0E00               	movlw	0
 37153  00242E  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 37154  002430  0E00               	movlw	0
 37155  002432  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 37156  002434  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37157  002436  E105               	bnz	i1u1601_20
 37158  002438  0E14               	movlw	20
 37159  00243A  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37160  00243C  B0D8               	btfsc	status,0,c
 37161  00243E  0012               	return	
 37162  002440  D001               	goto	i1l742
 37163  002442                     i1u1601_20:
 37164  002442  0012               	return	
 37165  002444                     i1l742:
 37166                           
 37167                           ;os_alarms.c: 121: {
 37168                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 37169  002444  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37170  002448  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37171  00244C  0E00               	movlw	0
 37172  00244E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37173  002450  0E0B               	movlw	11
 37174  002452  6E1B               	movwf	i1___wmul@multiplicand,c
 37175  002454  EC06  F033         	call	i1___wmul	;wreg free
 37176  002458  0E00               	movlw	low _OsAlarms
 37177  00245A  2419               	addwf	?i1___wmul,w,c
 37178  00245C  6ED9               	movwf	fsr2l,c
 37179  00245E  0E06               	movlw	high _OsAlarms
 37180  002460  201A               	addwfc	?i1___wmul+1,w,c
 37181  002462  6EDA               	movwf	fsr2h,c
 37182  002464  04DE               	decf	postinc2,w,c
 37183  002466  A4D8               	btfss	status,2,c
 37184  002468  D086               	goto	i1u1605_29
 37185                           
 37186                           ;os_alarms.c: 124: {
 37187                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 37188  00246A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37189  00246E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37190  002472  0E00               	movlw	0
 37191  002474  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37192  002476  0E0B               	movlw	11
 37193  002478  6E1B               	movwf	i1___wmul@multiplicand,c
 37194  00247A  EC06  F033         	call	i1___wmul	;wreg free
 37195  00247E  0E01               	movlw	1
 37196  002480  2619               	addwf	?i1___wmul,f,c
 37197  002482  0E00               	movlw	0
 37198  002484  221A               	addwfc	?i1___wmul+1,f,c
 37199  002486  0E00               	movlw	low _OsAlarms
 37200  002488  2419               	addwf	?i1___wmul,w,c
 37201  00248A  6ED9               	movwf	fsr2l,c
 37202  00248C  0E06               	movlw	high _OsAlarms
 37203  00248E  201A               	addwfc	?i1___wmul+1,w,c
 37204  002490  6EDA               	movwf	fsr2h,c
 37205  002492  2ADE               	incf	postinc2,f,c
 37206  002494  0E00               	movlw	0
 37207  002496  22DE               	addwfc	postinc2,f,c
 37208  002498  22DE               	addwfc	postinc2,f,c
 37209  00249A  22DE               	addwfc	postinc2,f,c
 37210                           
 37211                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 37212  00249C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37213  0024A0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37214  0024A4  0E00               	movlw	0
 37215  0024A6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37216  0024A8  0E0B               	movlw	11
 37217  0024AA  6E1B               	movwf	i1___wmul@multiplicand,c
 37218  0024AC  EC06  F033         	call	i1___wmul	;wreg free
 37219  0024B0  0E05               	movlw	5
 37220  0024B2  2619               	addwf	?i1___wmul,f,c
 37221  0024B4  0E00               	movlw	0
 37222  0024B6  221A               	addwfc	?i1___wmul+1,f,c
 37223  0024B8  0E00               	movlw	low _OsAlarms
 37224  0024BA  2419               	addwf	?i1___wmul,w,c
 37225  0024BC  6ED9               	movwf	fsr2l,c
 37226  0024BE  0E06               	movlw	high _OsAlarms
 37227  0024C0  201A               	addwfc	?i1___wmul+1,w,c
 37228  0024C2  6EDA               	movwf	fsr2h,c
 37229  0024C4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37230  0024C8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37231  0024CC  0E00               	movlw	0
 37232  0024CE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37233  0024D0  0E0B               	movlw	11
 37234  0024D2  6E1B               	movwf	i1___wmul@multiplicand,c
 37235  0024D4  EC06  F033         	call	i1___wmul	;wreg free
 37236  0024D8  0E01               	movlw	1
 37237  0024DA  2619               	addwf	?i1___wmul,f,c
 37238  0024DC  0E00               	movlw	0
 37239  0024DE  221A               	addwfc	?i1___wmul+1,f,c
 37240  0024E0  0E00               	movlw	low _OsAlarms
 37241  0024E2  2419               	addwf	?i1___wmul,w,c
 37242  0024E4  6EE1               	movwf	fsr1l,c
 37243  0024E6  0E06               	movlw	high _OsAlarms
 37244  0024E8  201A               	addwfc	?i1___wmul+1,w,c
 37245  0024EA  6EE2               	movwf	fsr1h,c
 37246  0024EC  50DE               	movf	postinc2,w,c
 37247  0024EE  5CE6               	subwf	postinc1,w,c
 37248  0024F0  50DE               	movf	postinc2,w,c
 37249  0024F2  58E6               	subwfb	postinc1,w,c
 37250  0024F4  50DE               	movf	postinc2,w,c
 37251  0024F6  58E6               	subwfb	postinc1,w,c
 37252  0024F8  50DE               	movf	postinc2,w,c
 37253  0024FA  58E6               	subwfb	postinc1,w,c
 37254  0024FC  A0D8               	btfss	status,0,c
 37255  0024FE  D03B               	goto	i1u1605_29
 37256                           
 37257                           ;os_alarms.c: 129: {
 37258                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 37259  002500  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37260  002502  ECAD  F02C         	call	_OsAlrm_ClearOsAlarm
 37261                           
 37262                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 37263  002506  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37264  00250A  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37265  00250E  0E00               	movlw	0
 37266  002510  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37267  002512  0E0B               	movlw	11
 37268  002514  6E1B               	movwf	i1___wmul@multiplicand,c
 37269  002516  EC06  F033         	call	i1___wmul	;wreg free
 37270  00251A  0E09               	movlw	9
 37271  00251C  2619               	addwf	?i1___wmul,f,c
 37272  00251E  0E00               	movlw	0
 37273  002520  221A               	addwfc	?i1___wmul+1,f,c
 37274  002522  0E00               	movlw	low _OsAlarms
 37275  002524  2419               	addwf	?i1___wmul,w,c
 37276  002526  6ED9               	movwf	fsr2l,c
 37277  002528  0E06               	movlw	high _OsAlarms
 37278  00252A  201A               	addwfc	?i1___wmul+1,w,c
 37279  00252C  6EDA               	movwf	fsr2h,c
 37280  00252E  50DE               	movf	postinc2,w,c
 37281  002530  10DE               	iorwf	postinc2,w,c
 37282  002532  B4D8               	btfsc	status,2,c
 37283  002534  D020               	goto	i1u1605_29
 37284                           
 37285                           ;os_alarms.c: 134: {
 37286                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 37287  002536  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37288  00253A  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37289  00253E  0E00               	movlw	0
 37290  002540  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37291  002542  0E0B               	movlw	11
 37292  002544  6E1B               	movwf	i1___wmul@multiplicand,c
 37293  002546  EC06  F033         	call	i1___wmul	;wreg free
 37294  00254A  0E09               	movlw	9
 37295  00254C  2619               	addwf	?i1___wmul,f,c
 37296  00254E  0E00               	movlw	0
 37297  002550  221A               	addwfc	?i1___wmul+1,f,c
 37298  002552  0E00               	movlw	low _OsAlarms
 37299  002554  2419               	addwf	?i1___wmul,w,c
 37300  002556  6ED9               	movwf	fsr2l,c
 37301  002558  0E06               	movlw	high _OsAlarms
 37302  00255A  201A               	addwfc	?i1___wmul+1,w,c
 37303  00255C  6EDA               	movwf	fsr2h,c
 37304  00255E  D801               	call	i1u1605_28
 37305  002560  D00A               	goto	i1u1605_29
 37306  002562                     i1u1605_28:
 37307  002562  0005               	push	
 37308  002564  6EFA               	movwf	pclath,c
 37309  002566  50DE               	movf	postinc2,w,c
 37310  002568  6EFD               	movwf	tosl,c
 37311  00256A  50DE               	movf	postinc2,w,c
 37312  00256C  6EFE               	movwf	tosh,c
 37313  00256E  50F8               	movf	tblptru,w,c
 37314  002570  6EFF               	movwf	tosu,c
 37315  002572  50FA               	movf	pclath,w,c
 37316  002574  0012               	return		;indir
 37317  002576                     i1u1605_29:
 37318  002576  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 37319  002578  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 37320  00257A  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37321  00257C  E101               	bnz	i1l747
 37322  00257E  D75C               	goto	L94
 37323  002580                     i1l747:
 37324  002580  0012               	return		;funcret
 37325  002582                     __end_of_OsAlrm_ProcessOsAlarms:
 37326                           	opt stack 0
 37327                           tosu	equ	0xFFF
 37328                           tosh	equ	0xFFE
 37329                           tosl	equ	0xFFD
 37330                           pclatu	equ	0xFFB
 37331                           pclath	equ	0xFFA
 37332                           tblptru	equ	0xFF8
 37333                           tblptrh	equ	0xFF7
 37334                           tblptrl	equ	0xFF6
 37335                           tablat	equ	0xFF5
 37336                           prodh	equ	0xFF4
 37337                           prodl	equ	0xFF3
 37338                           intcon	equ	0xFF2
 37339                           intcon2	equ	0xFF1
 37340                           intcon3	equ	0xFF0
 37341                           indf0	equ	0xFEF
 37342                           postinc0	equ	0xFEE
 37343                           plusw0	equ	0xFEB
 37344                           fsr0h	equ	0xFEA
 37345                           fsr0l	equ	0xFE9
 37346                           wreg	equ	0xFE8
 37347                           indf1	equ	0xFE7
 37348                           postinc1	equ	0xFE6
 37349                           postdec1	equ	0xFE5
 37350                           plusw1	equ	0xFE3
 37351                           fsr1h	equ	0xFE2
 37352                           fsr1l	equ	0xFE1
 37353                           bsr	equ	0xFE0
 37354                           indf2	equ	0xFDF
 37355                           postinc2	equ	0xFDE
 37356                           postdec2	equ	0xFDD
 37357                           plusw2	equ	0xFDB
 37358                           fsr2h	equ	0xFDA
 37359                           fsr2l	equ	0xFD9
 37360                           status	equ	0xFD8
 37361                           
 37362 ;; *************** function i1___wmul *****************
 37363 ;; Defined at:
 37364 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 37365 ;; Parameters:    Size  Location     Type
 37366 ;;  multiplier      2   24[COMRAM] unsigned int 
 37367 ;;  multiplicand    2   26[COMRAM] unsigned int 
 37368 ;; Auto vars:     Size  Location     Type
 37369 ;;  __wmul          2   28[COMRAM] unsigned int 
 37370 ;; Return value:  Size  Location     Type
 37371 ;;                  2   24[COMRAM] unsigned int 
 37372 ;; Registers used:
 37373 ;;		wreg, status,2, status,0, prodl, prodh
 37374 ;; Tracked objects:
 37375 ;;		On entry : 0/0
 37376 ;;		On exit  : 0/0
 37377 ;;		Unchanged: 0/0
 37378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37383 ;;Total ram usage:        6 bytes
 37384 ;; Hardware stack levels used:    1
 37385 ;; Hardware stack levels required when called:    4
 37386 ;; This function calls:
 37387 ;;		Nothing
 37388 ;; This function is called by:
 37389 ;;		_OsAlrm_ProcessOsAlarms
 37390 ;; This function uses a non-reentrant model
 37391 ;;
 37392                           
 37393                           	psect	text184
 37394  00660C                     __ptext184:
 37395                           	opt stack 0
 37396  00660C                     i1___wmul:
 37397                           	opt stack 10
 37398                           
 37399                           ;incstack = 0
 37400  00660C  5019               	movf	i1___wmul@multiplier,w,c
 37401  00660E  021B               	mulwf	i1___wmul@multiplicand,c
 37402  006610  CFF3 F01D          	movff	prodl,i1___wmul@product
 37403  006614  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 37404  006618  5019               	movf	i1___wmul@multiplier,w,c
 37405  00661A  021C               	mulwf	i1___wmul@multiplicand+1,c
 37406  00661C  50F3               	movf	prodl,w,c
 37407  00661E  261E               	addwf	i1___wmul@product+1,f,c
 37408  006620  501A               	movf	i1___wmul@multiplier+1,w,c
 37409  006622  021B               	mulwf	i1___wmul@multiplicand,c
 37410  006624  50F3               	movf	prodl,w,c
 37411  006626  261E               	addwf	i1___wmul@product+1,f,c
 37412  006628  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 37413  00662C  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 37414  006630  0012               	return	
 37415  006632                     __end_ofi1___wmul:
 37416                           	opt stack 0
 37417                           tosu	equ	0xFFF
 37418                           tosh	equ	0xFFE
 37419                           tosl	equ	0xFFD
 37420                           pclatu	equ	0xFFB
 37421                           pclath	equ	0xFFA
 37422                           tblptru	equ	0xFF8
 37423                           tblptrh	equ	0xFF7
 37424                           tblptrl	equ	0xFF6
 37425                           tablat	equ	0xFF5
 37426                           prodh	equ	0xFF4
 37427                           prodl	equ	0xFF3
 37428                           intcon	equ	0xFF2
 37429                           intcon2	equ	0xFF1
 37430                           intcon3	equ	0xFF0
 37431                           indf0	equ	0xFEF
 37432                           postinc0	equ	0xFEE
 37433                           plusw0	equ	0xFEB
 37434                           fsr0h	equ	0xFEA
 37435                           fsr0l	equ	0xFE9
 37436                           wreg	equ	0xFE8
 37437                           indf1	equ	0xFE7
 37438                           postinc1	equ	0xFE6
 37439                           postdec1	equ	0xFE5
 37440                           plusw1	equ	0xFE3
 37441                           fsr1h	equ	0xFE2
 37442                           fsr1l	equ	0xFE1
 37443                           bsr	equ	0xFE0
 37444                           indf2	equ	0xFDF
 37445                           postinc2	equ	0xFDE
 37446                           postdec2	equ	0xFDD
 37447                           plusw2	equ	0xFDB
 37448                           fsr2h	equ	0xFDA
 37449                           fsr2l	equ	0xFD9
 37450                           status	equ	0xFD8
 37451                           
 37452 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 37453 ;; Defined at:
 37454 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37455 ;; Parameters:    Size  Location     Type
 37456 ;;  OsAlarmId       1    wreg     unsigned char 
 37457 ;; Auto vars:     Size  Location     Type
 37458 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 37459 ;; Return value:  Size  Location     Type
 37460 ;;                  1    wreg      void 
 37461 ;; Registers used:
 37462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37463 ;; Tracked objects:
 37464 ;;		On entry : 0/0
 37465 ;;		On exit  : 0/0
 37466 ;;		Unchanged: 0/0
 37467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37472 ;;Total ram usage:        1 bytes
 37473 ;; Hardware stack levels used:    1
 37474 ;; Hardware stack levels required when called:    4
 37475 ;; This function calls:
 37476 ;;		Nothing
 37477 ;; This function is called by:
 37478 ;;		_OsAlrm_ProcessOsAlarms
 37479 ;; This function uses a non-reentrant model
 37480 ;;
 37481                           
 37482                           	psect	text185
 37483  00595A                     __ptext185:
 37484                           	opt stack 0
 37485  00595A                     _OsAlrm_ClearOsAlarm:
 37486                           	opt stack 10
 37487                           
 37488                           ;incstack = 0
 37489                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 37490  00595A  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 37491                           
 37492                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 37493  00595C  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37494  00595E  0D0B               	mullw	11
 37495  005960  0E00               	movlw	low _OsAlarms
 37496  005962  24F3               	addwf	prodl,w,c
 37497  005964  6ED9               	movwf	fsr2l,c
 37498  005966  0E06               	movlw	high _OsAlarms
 37499  005968  20F4               	addwfc	prodh,w,c
 37500  00596A  6EDA               	movwf	fsr2h,c
 37501  00596C  0E00               	movlw	0
 37502  00596E  6EDF               	movwf	indf2,c
 37503                           
 37504                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 37505  005970  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37506  005972  0D0B               	mullw	11
 37507  005974  0E01               	movlw	1
 37508  005976  26F3               	addwf	prodl,f,c
 37509  005978  0E00               	movlw	0
 37510  00597A  22F4               	addwfc	prodh,f,c
 37511  00597C  0E00               	movlw	low _OsAlarms
 37512  00597E  24F3               	addwf	prodl,w,c
 37513  005980  6ED9               	movwf	fsr2l,c
 37514  005982  0E06               	movlw	high _OsAlarms
 37515  005984  20F4               	addwfc	prodh,w,c
 37516  005986  6EDA               	movwf	fsr2h,c
 37517  005988  6ADE               	clrf	postinc2,c
 37518  00598A  6ADE               	clrf	postinc2,c
 37519  00598C  6ADE               	clrf	postinc2,c
 37520  00598E  6ADD               	clrf	postdec2,c
 37521                           
 37522                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 37523  005990  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37524  005992  0D0B               	mullw	11
 37525  005994  0E05               	movlw	5
 37526  005996  26F3               	addwf	prodl,f,c
 37527  005998  0E00               	movlw	0
 37528  00599A  22F4               	addwfc	prodh,f,c
 37529  00599C  0E00               	movlw	low _OsAlarms
 37530  00599E  24F3               	addwf	prodl,w,c
 37531  0059A0  6ED9               	movwf	fsr2l,c
 37532  0059A2  0E06               	movlw	high _OsAlarms
 37533  0059A4  20F4               	addwfc	prodh,w,c
 37534  0059A6  6EDA               	movwf	fsr2h,c
 37535  0059A8  6ADE               	clrf	postinc2,c
 37536  0059AA  6ADE               	clrf	postinc2,c
 37537  0059AC  6ADE               	clrf	postinc2,c
 37538  0059AE  6ADD               	clrf	postdec2,c
 37539  0059B0  0012               	return		;funcret
 37540  0059B2                     __end_of_OsAlrm_ClearOsAlarm:
 37541                           	opt stack 0
 37542                           tosu	equ	0xFFF
 37543                           tosh	equ	0xFFE
 37544                           tosl	equ	0xFFD
 37545                           pclatu	equ	0xFFB
 37546                           pclath	equ	0xFFA
 37547                           tblptru	equ	0xFF8
 37548                           tblptrh	equ	0xFF7
 37549                           tblptrl	equ	0xFF6
 37550                           tablat	equ	0xFF5
 37551                           prodh	equ	0xFF4
 37552                           prodl	equ	0xFF3
 37553                           intcon	equ	0xFF2
 37554                           intcon2	equ	0xFF1
 37555                           intcon3	equ	0xFF0
 37556                           indf0	equ	0xFEF
 37557                           postinc0	equ	0xFEE
 37558                           plusw0	equ	0xFEB
 37559                           fsr0h	equ	0xFEA
 37560                           fsr0l	equ	0xFE9
 37561                           wreg	equ	0xFE8
 37562                           indf1	equ	0xFE7
 37563                           postinc1	equ	0xFE6
 37564                           postdec1	equ	0xFE5
 37565                           plusw1	equ	0xFE3
 37566                           fsr1h	equ	0xFE2
 37567                           fsr1l	equ	0xFE1
 37568                           bsr	equ	0xFE0
 37569                           indf2	equ	0xFDF
 37570                           postinc2	equ	0xFDE
 37571                           postdec2	equ	0xFDD
 37572                           plusw2	equ	0xFDB
 37573                           fsr2h	equ	0xFDA
 37574                           fsr2l	equ	0xFD9
 37575                           status	equ	0xFD8
 37576                           
 37577 ;; *************** function _I2cDummyTx *****************
 37578 ;; Defined at:
 37579 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 37580 ;; Parameters:    Size  Location     Type
 37581 ;;		None
 37582 ;; Auto vars:     Size  Location     Type
 37583 ;;		None
 37584 ;; Return value:  Size  Location     Type
 37585 ;;                  1    wreg      void 
 37586 ;; Registers used:
 37587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37588 ;; Tracked objects:
 37589 ;;		On entry : 0/0
 37590 ;;		On exit  : 0/0
 37591 ;;		Unchanged: 0/0
 37592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37597 ;;Total ram usage:        0 bytes
 37598 ;; Hardware stack levels used:    1
 37599 ;; Hardware stack levels required when called:    6
 37600 ;; This function calls:
 37601 ;;		i1_I2cSlv_SendI2cMsg
 37602 ;; This function is called by:
 37603 ;;		_I2cSlv_MainTask
 37604 ;;		_OsAlrm_ProcessOsAlarms
 37605 ;; This function uses a non-reentrant model
 37606 ;;
 37607                           
 37608                           	psect	text186
 37609  006864                     __ptext186:
 37610                           	opt stack 0
 37611  006864                     _I2cDummyTx:
 37612                           	opt stack 8
 37613                           
 37614                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 37615                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 37616                           
 37617                           ;incstack = 0
 37618  006864  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 37619  006866  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 37620  006868  0E01               	movlw	high I2cDummyTx@DummyBuffer
 37621  00686A  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 37622  00686C  0E00               	movlw	0
 37623  00686E  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 37624  006870  0E01               	movlw	1
 37625  006872  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 37626  006874  EC6A  F031         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 37627                           
 37628                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 37629  006878  0E01               	movlw	1
 37630  00687A  0101               	movlb	1	; () banked
 37631  00687C  6FE7               	movwf	_I2cBusStatus& (0+255),b
 37632                           
 37633                           ; BSR set to: 1
 37634  00687E  0012               	return		;funcret
 37635  006880                     __end_of_I2cDummyTx:
 37636                           	opt stack 0
 37637                           tosu	equ	0xFFF
 37638                           tosh	equ	0xFFE
 37639                           tosl	equ	0xFFD
 37640                           pclatu	equ	0xFFB
 37641                           pclath	equ	0xFFA
 37642                           tblptru	equ	0xFF8
 37643                           tblptrh	equ	0xFF7
 37644                           tblptrl	equ	0xFF6
 37645                           tablat	equ	0xFF5
 37646                           prodh	equ	0xFF4
 37647                           prodl	equ	0xFF3
 37648                           intcon	equ	0xFF2
 37649                           intcon2	equ	0xFF1
 37650                           intcon3	equ	0xFF0
 37651                           indf0	equ	0xFEF
 37652                           postinc0	equ	0xFEE
 37653                           plusw0	equ	0xFEB
 37654                           fsr0h	equ	0xFEA
 37655                           fsr0l	equ	0xFE9
 37656                           wreg	equ	0xFE8
 37657                           indf1	equ	0xFE7
 37658                           postinc1	equ	0xFE6
 37659                           postdec1	equ	0xFE5
 37660                           plusw1	equ	0xFE3
 37661                           fsr1h	equ	0xFE2
 37662                           fsr1l	equ	0xFE1
 37663                           bsr	equ	0xFE0
 37664                           indf2	equ	0xFDF
 37665                           postinc2	equ	0xFDE
 37666                           postdec2	equ	0xFDD
 37667                           plusw2	equ	0xFDB
 37668                           fsr2h	equ	0xFDA
 37669                           fsr2l	equ	0xFD9
 37670                           status	equ	0xFD8
 37671                           
 37672 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 37673 ;; Defined at:
 37674 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 37675 ;; Parameters:    Size  Location     Type
 37676 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 37677 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 37678 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 37679 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 37680 ;;  DataLenght      1   30[COMRAM] unsigned char 
 37681 ;; Auto vars:     Size  Location     Type
 37682 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 37683 ;; Return value:  Size  Location     Type
 37684 ;;                  1    wreg      unsigned char 
 37685 ;; Registers used:
 37686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37687 ;; Tracked objects:
 37688 ;;		On entry : 0/0
 37689 ;;		On exit  : 0/0
 37690 ;;		Unchanged: 0/0
 37691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37695 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37696 ;;Total ram usage:        5 bytes
 37697 ;; Hardware stack levels used:    1
 37698 ;; Hardware stack levels required when called:    5
 37699 ;; This function calls:
 37700 ;;		i1_GenerateEvt
 37701 ;; This function is called by:
 37702 ;;		_I2cDummyTx
 37703 ;; This function uses a non-reentrant model
 37704 ;;
 37705                           
 37706                           	psect	text187
 37707  0062D4                     __ptext187:
 37708                           	opt stack 0
 37709  0062D4                     i1_I2cSlv_SendI2cMsg:
 37710                           	opt stack 8
 37711                           
 37712                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 37713                           
 37714                           ; BSR set to: 1
 37715                           ;incstack = 0
 37716  0062D4  0E00               	movlw	0
 37717  0062D6  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37718                           
 37719                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 37720  0062D8  0100               	movlb	0	; () banked
 37721  0062DA  05CF               	decf	_I2cComSts& (0+255),w,b
 37722  0062DC  B4D8               	btfsc	status,2,c
 37723  0062DE  D014               	goto	i1l1412
 37724                           
 37725                           ; BSR set to: 0
 37726                           ;i2c_slv.c: 257: {
 37727                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 37728  0062E0  C01E  F3A0         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 37729                           
 37730                           ; BSR set to: 0
 37731                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 37732  0062E4  0E00               	movlw	0
 37733  0062E6  0103               	movlb	3	; () banked
 37734  0062E8  6FA1               	movwf	(_I2cTxPacket+1)& (0+255),b
 37735                           
 37736                           ; BSR set to: 3
 37737                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 37738  0062EA  C01F  F3A4         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 37739                           
 37740                           ; BSR set to: 3
 37741                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 37742  0062EE  C01C  F3A2         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 37743  0062F2  C01D  F3A3         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 37744                           
 37745                           ; BSR set to: 3
 37746                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 37747  0062F6  0ED9               	movlw	low _I2cWriteDataEvt
 37748  0062F8  6E19               	movwf	i1GenerateEvt@Event,c
 37749  0062FA  0E00               	movlw	high _I2cWriteDataEvt
 37750  0062FC  6E1A               	movwf	i1GenerateEvt@Event+1,c
 37751  0062FE  ECAE  F034         	call	i1_GenerateEvt	;wreg free
 37752                           
 37753                           ;i2c_slv.c: 267: TxSts = 1u;
 37754  006302  0E01               	movlw	1
 37755  006304  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37756                           
 37757                           ;i2c_slv.c: 268: }
 37758  006306  0012               	return	
 37759  006308                     i1l1412:
 37760                           
 37761                           ;i2c_slv.c: 269: else
 37762                           ;i2c_slv.c: 270: {
 37763                           ;i2c_slv.c: 272: TxSts = 0u;
 37764  006308  0E00               	movlw	0
 37765  00630A  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37766  00630C  0012               	return	
 37767  00630E                     __end_ofi1_I2cSlv_SendI2cMsg:
 37768                           	opt stack 0
 37769                           tosu	equ	0xFFF
 37770                           tosh	equ	0xFFE
 37771                           tosl	equ	0xFFD
 37772                           pclatu	equ	0xFFB
 37773                           pclath	equ	0xFFA
 37774                           tblptru	equ	0xFF8
 37775                           tblptrh	equ	0xFF7
 37776                           tblptrl	equ	0xFF6
 37777                           tablat	equ	0xFF5
 37778                           prodh	equ	0xFF4
 37779                           prodl	equ	0xFF3
 37780                           intcon	equ	0xFF2
 37781                           intcon2	equ	0xFF1
 37782                           intcon3	equ	0xFF0
 37783                           indf0	equ	0xFEF
 37784                           postinc0	equ	0xFEE
 37785                           plusw0	equ	0xFEB
 37786                           fsr0h	equ	0xFEA
 37787                           fsr0l	equ	0xFE9
 37788                           wreg	equ	0xFE8
 37789                           indf1	equ	0xFE7
 37790                           postinc1	equ	0xFE6
 37791                           postdec1	equ	0xFE5
 37792                           plusw1	equ	0xFE3
 37793                           fsr1h	equ	0xFE2
 37794                           fsr1l	equ	0xFE1
 37795                           bsr	equ	0xFE0
 37796                           indf2	equ	0xFDF
 37797                           postinc2	equ	0xFDE
 37798                           postdec2	equ	0xFDD
 37799                           plusw2	equ	0xFDB
 37800                           fsr2h	equ	0xFDA
 37801                           fsr2l	equ	0xFD9
 37802                           status	equ	0xFD8
 37803                           
 37804 ;; *************** function i1_GenerateEvt *****************
 37805 ;; Defined at:
 37806 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 37807 ;; Parameters:    Size  Location     Type
 37808 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 37809 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37810 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37811 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37812 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37813 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37814 ;; Auto vars:     Size  Location     Type
 37815 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 37816 ;; Return value:  Size  Location     Type
 37817 ;;                  1    wreg      enum E7699
 37818 ;; Registers used:
 37819 ;;		wreg, fsr2l, fsr2h, status,2
 37820 ;; Tracked objects:
 37821 ;;		On entry : 0/0
 37822 ;;		On exit  : 0/0
 37823 ;;		Unchanged: 0/0
 37824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37828 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37829 ;;Total ram usage:        3 bytes
 37830 ;; Hardware stack levels used:    1
 37831 ;; Hardware stack levels required when called:    4
 37832 ;; This function calls:
 37833 ;;		Nothing
 37834 ;; This function is called by:
 37835 ;;		i1_I2cSlv_SendI2cMsg
 37836 ;; This function uses a non-reentrant model
 37837 ;;
 37838                           
 37839                           	psect	text188
 37840  00695C                     __ptext188:
 37841                           	opt stack 0
 37842  00695C                     i1_GenerateEvt:
 37843                           	opt stack 8
 37844                           
 37845                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 37846                           
 37847                           ;incstack = 0
 37848  00695C  0E00               	movlw	0
 37849  00695E  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 37850                           
 37851                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 37852  006960  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 37853  006964  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 37854  006968  0E02               	movlw	2
 37855  00696A  6EDF               	movwf	indf2,c
 37856                           
 37857                           ;os_ser.c: 83: EventStatus = EventSent;
 37858  00696C  0E02               	movlw	2
 37859  00696E  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 37860  006970  0012               	return	
 37861  006972                     __end_ofi1_GenerateEvt:
 37862                           	opt stack 0
 37863                           tosu	equ	0xFFF
 37864                           tosh	equ	0xFFE
 37865                           tosl	equ	0xFFD
 37866                           pclatu	equ	0xFFB
 37867                           pclath	equ	0xFFA
 37868                           tblptru	equ	0xFF8
 37869                           tblptrh	equ	0xFF7
 37870                           tblptrl	equ	0xFF6
 37871                           tablat	equ	0xFF5
 37872                           prodh	equ	0xFF4
 37873                           prodl	equ	0xFF3
 37874                           intcon	equ	0xFF2
 37875                           intcon2	equ	0xFF1
 37876                           intcon3	equ	0xFF0
 37877                           indf0	equ	0xFEF
 37878                           postinc0	equ	0xFEE
 37879                           plusw0	equ	0xFEB
 37880                           fsr0h	equ	0xFEA
 37881                           fsr0l	equ	0xFE9
 37882                           wreg	equ	0xFE8
 37883                           indf1	equ	0xFE7
 37884                           postinc1	equ	0xFE6
 37885                           postdec1	equ	0xFE5
 37886                           plusw1	equ	0xFE3
 37887                           fsr1h	equ	0xFE2
 37888                           fsr1l	equ	0xFE1
 37889                           bsr	equ	0xFE0
 37890                           indf2	equ	0xFDF
 37891                           postinc2	equ	0xFDE
 37892                           postdec2	equ	0xFDD
 37893                           plusw2	equ	0xFDB
 37894                           fsr2h	equ	0xFDA
 37895                           fsr2l	equ	0xFD9
 37896                           status	equ	0xFD8
 37897                           
 37898 ;; *************** function _HighPriorityIsr *****************
 37899 ;; Defined at:
 37900 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 37901 ;; Parameters:    Size  Location     Type
 37902 ;;		None
 37903 ;; Auto vars:     Size  Location     Type
 37904 ;;		None
 37905 ;; Return value:  Size  Location     Type
 37906 ;;                  1    wreg      void 
 37907 ;; Registers used:
 37908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37909 ;; Tracked objects:
 37910 ;;		On entry : 0/0
 37911 ;;		On exit  : 0/0
 37912 ;;		Unchanged: 0/0
 37913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37916 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37917 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37918 ;;Total ram usage:       18 bytes
 37919 ;; Hardware stack levels used:    1
 37920 ;; Hardware stack levels required when called:    3
 37921 ;; This function calls:
 37922 ;;		_Mcu_Int0Isr
 37923 ;;		_Mcu_Int1Isr
 37924 ;;		_Rtcc_RtcIsr
 37925 ;;		_Uart_Uart1RxIsr
 37926 ;; This function is called by:
 37927 ;;		Interrupt level 2
 37928 ;; This function uses a non-reentrant model
 37929 ;;
 37930                           
 37931                           	psect	intcode
 37932  000008                     __pintcode:
 37933                           	opt stack 0
 37934  000008                     _HighPriorityIsr:
 37935                           	opt stack 8
 37936                           
 37937                           ;incstack = 0
 37938  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 37939  00000A  EF04  F022         	goto	int_func
 37940                           tosu	equ	0xFFF
 37941                           tosh	equ	0xFFE
 37942                           tosl	equ	0xFFD
 37943                           pclatu	equ	0xFFB
 37944                           pclath	equ	0xFFA
 37945                           tblptru	equ	0xFF8
 37946                           tblptrh	equ	0xFF7
 37947                           tblptrl	equ	0xFF6
 37948                           tablat	equ	0xFF5
 37949                           prodh	equ	0xFF4
 37950                           prodl	equ	0xFF3
 37951                           intcon	equ	0xFF2
 37952                           intcon2	equ	0xFF1
 37953                           intcon3	equ	0xFF0
 37954                           indf0	equ	0xFEF
 37955                           postinc0	equ	0xFEE
 37956                           plusw0	equ	0xFEB
 37957                           fsr0h	equ	0xFEA
 37958                           fsr0l	equ	0xFE9
 37959                           wreg	equ	0xFE8
 37960                           indf1	equ	0xFE7
 37961                           postinc1	equ	0xFE6
 37962                           postdec1	equ	0xFE5
 37963                           plusw1	equ	0xFE3
 37964                           fsr1h	equ	0xFE2
 37965                           fsr1l	equ	0xFE1
 37966                           bsr	equ	0xFE0
 37967                           indf2	equ	0xFDF
 37968                           postinc2	equ	0xFDE
 37969                           postdec2	equ	0xFDD
 37970                           plusw2	equ	0xFDB
 37971                           fsr2h	equ	0xFDA
 37972                           fsr2l	equ	0xFD9
 37973                           status	equ	0xFD8
 37974                           
 37975                           	psect	intcode_body
 37976  004408                     __pintcode_body:
 37977                           	opt stack 8
 37978  004408                     int_func:
 37979                           	opt stack 8
 37980  004408  CFFA F007          	movff	pclath,??_HighPriorityIsr
 37981  00440C  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 37982  004410  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 37983  004414  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 37984  004418  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 37985  00441C  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 37986  004420  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 37987  004424  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 37988  004428  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 37989  00442C  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 37990  004430  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 37991  004434  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 37992  004438  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 37993  00443C  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 37994  004440  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 37995  004444  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 37996  004448  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 37997  00444C  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 37998                           
 37999                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 38000  004450  B2F2               	btfsc	intcon,1,c	;volatile
 38001                           
 38002                           ;irq.c: 158: {
 38003                           ;irq.c: 160: Mcu_Int0Isr();
 38004  004452  EC5F  F035         	call	_Mcu_Int0Isr	;wreg free
 38005                           
 38006                           ;irq.c: 161: }
 38007                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 38008  004456  B0F0               	btfsc	intcon3,0,c	;volatile
 38009                           
 38010                           ;irq.c: 167: {
 38011                           ;irq.c: 169: Mcu_Int1Isr();
 38012  004458  EC5D  F035         	call	_Mcu_Int1Isr	;wreg free
 38013                           
 38014                           ;irq.c: 170: }
 38015                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 38016  00445C  B0A4               	btfsc	4004,0,c	;volatile
 38017                           
 38018                           ;irq.c: 203: {
 38019                           ;irq.c: 205: Rtcc_RtcIsr();
 38020  00445E  EC5B  F035         	call	_Rtcc_RtcIsr	;wreg free
 38021                           
 38022                           ;irq.c: 206: }
 38023                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 38024  004462  BA9E               	btfsc	3998,5,c	;volatile
 38025                           
 38026                           ;irq.c: 212: {
 38027                           ;irq.c: 214: Uart_Uart1RxIsr();
 38028  004464  EC09  F035         	call	_Uart_Uart1RxIsr	;wreg free
 38029  004468  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 38030  00446C  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 38031  004470  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 38032  004474  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 38033  004478  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 38034  00447C  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 38035  004480  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 38036  004484  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 38037  004488  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 38038  00448C  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 38039  004490  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 38040  004494  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 38041  004498  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 38042  00449C  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 38043  0044A0  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 38044  0044A4  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 38045  0044A8  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 38046  0044AC  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 38047  0044B0  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38048  0044B2  0011               	retfie		f
 38049  0044B4                     __end_of_HighPriorityIsr:
 38050                           	opt stack 0
 38051                           tosu	equ	0xFFF
 38052                           tosh	equ	0xFFE
 38053                           tosl	equ	0xFFD
 38054                           pclatu	equ	0xFFB
 38055                           pclath	equ	0xFFA
 38056                           tblptru	equ	0xFF8
 38057                           tblptrh	equ	0xFF7
 38058                           tblptrl	equ	0xFF6
 38059                           tablat	equ	0xFF5
 38060                           prodh	equ	0xFF4
 38061                           prodl	equ	0xFF3
 38062                           intcon	equ	0xFF2
 38063                           intcon2	equ	0xFF1
 38064                           intcon3	equ	0xFF0
 38065                           indf0	equ	0xFEF
 38066                           postinc0	equ	0xFEE
 38067                           plusw0	equ	0xFEB
 38068                           fsr0h	equ	0xFEA
 38069                           fsr0l	equ	0xFE9
 38070                           wreg	equ	0xFE8
 38071                           indf1	equ	0xFE7
 38072                           postinc1	equ	0xFE6
 38073                           postdec1	equ	0xFE5
 38074                           plusw1	equ	0xFE3
 38075                           fsr1h	equ	0xFE2
 38076                           fsr1l	equ	0xFE1
 38077                           bsr	equ	0xFE0
 38078                           indf2	equ	0xFDF
 38079                           postinc2	equ	0xFDE
 38080                           postdec2	equ	0xFDD
 38081                           plusw2	equ	0xFDB
 38082                           fsr2h	equ	0xFDA
 38083                           fsr2l	equ	0xFD9
 38084                           status	equ	0xFD8
 38085                           
 38086 ;; *************** function _Uart_Uart1RxIsr *****************
 38087 ;; Defined at:
 38088 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38089 ;; Parameters:    Size  Location     Type
 38090 ;;		None
 38091 ;; Auto vars:     Size  Location     Type
 38092 ;;		None
 38093 ;; Return value:  Size  Location     Type
 38094 ;;                  1    wreg      void 
 38095 ;; Registers used:
 38096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38097 ;; Tracked objects:
 38098 ;;		On entry : 0/0
 38099 ;;		On exit  : 0/0
 38100 ;;		Unchanged: 0/0
 38101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38106 ;;Total ram usage:        0 bytes
 38107 ;; Hardware stack levels used:    1
 38108 ;; Hardware stack levels required when called:    2
 38109 ;; This function calls:
 38110 ;;		_Uart_MdmGsmGprsReadService
 38111 ;; This function is called by:
 38112 ;;		_HighPriorityIsr
 38113 ;; This function uses a non-reentrant model
 38114 ;;
 38115                           
 38116                           	psect	text190
 38117  006A12                     __ptext190:
 38118                           	opt stack 0
 38119  006A12                     _Uart_Uart1RxIsr:
 38120                           	opt stack 8
 38121                           
 38122                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 38123                           ;uart_drv.c: 590: UartRxData = RCREG1;
 38124                           
 38125                           ;incstack = 0
 38126  006A12  CFAF F02A          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 38127                           
 38128                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 38129  006A16  C02A  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 38130  006A1A  0E01               	movlw	1
 38131  006A1C  EC3D  F01E         	call	_Uart_MdmGsmGprsReadService
 38132  006A20  0012               	return		;funcret
 38133  006A22                     __end_of_Uart_Uart1RxIsr:
 38134                           	opt stack 0
 38135                           tosu	equ	0xFFF
 38136                           tosh	equ	0xFFE
 38137                           tosl	equ	0xFFD
 38138                           pclatu	equ	0xFFB
 38139                           pclath	equ	0xFFA
 38140                           tblptru	equ	0xFF8
 38141                           tblptrh	equ	0xFF7
 38142                           tblptrl	equ	0xFF6
 38143                           tablat	equ	0xFF5
 38144                           prodh	equ	0xFF4
 38145                           prodl	equ	0xFF3
 38146                           intcon	equ	0xFF2
 38147                           intcon2	equ	0xFF1
 38148                           intcon3	equ	0xFF0
 38149                           indf0	equ	0xFEF
 38150                           postinc0	equ	0xFEE
 38151                           plusw0	equ	0xFEB
 38152                           fsr0h	equ	0xFEA
 38153                           fsr0l	equ	0xFE9
 38154                           wreg	equ	0xFE8
 38155                           indf1	equ	0xFE7
 38156                           postinc1	equ	0xFE6
 38157                           postdec1	equ	0xFE5
 38158                           plusw1	equ	0xFE3
 38159                           fsr1h	equ	0xFE2
 38160                           fsr1l	equ	0xFE1
 38161                           bsr	equ	0xFE0
 38162                           indf2	equ	0xFDF
 38163                           postinc2	equ	0xFDE
 38164                           postdec2	equ	0xFDD
 38165                           plusw2	equ	0xFDB
 38166                           fsr2h	equ	0xFDA
 38167                           fsr2l	equ	0xFD9
 38168                           status	equ	0xFD8
 38169                           
 38170 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 38171 ;; Defined at:
 38172 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38173 ;; Parameters:    Size  Location     Type
 38174 ;;  Module          1    wreg     unsigned char 
 38175 ;;  UartData        1    3[COMRAM] unsigned char 
 38176 ;; Auto vars:     Size  Location     Type
 38177 ;;  Module          1    0[COMRAM] unsigned char 
 38178 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 38179 ;; Return value:  Size  Location     Type
 38180 ;;                  1    wreg      void 
 38181 ;; Registers used:
 38182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38183 ;; Tracked objects:
 38184 ;;		On entry : 0/0
 38185 ;;		On exit  : 0/0
 38186 ;;		Unchanged: 0/0
 38187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38188 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38191 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38192 ;;Total ram usage:        3 bytes
 38193 ;; Hardware stack levels used:    1
 38194 ;; Hardware stack levels required when called:    1
 38195 ;; This function calls:
 38196 ;;		i2_GenerateEvt
 38197 ;; This function is called by:
 38198 ;;		_Uart_Uart1RxIsr
 38199 ;; This function uses a non-reentrant model
 38200 ;;
 38201                           
 38202                           	psect	text191
 38203  003C7A                     __ptext191:
 38204                           	opt stack 0
 38205  003C7A                     _Uart_MdmGsmGprsReadService:
 38206                           	opt stack 8
 38207                           
 38208                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 38209                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 38210                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 38211                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 38212                           
 38213                           ;incstack = 0
 38214  003C7A  0E00               	movlw	0
 38215  003C7C  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38216  003C7E  0E00               	movlw	0
 38217  003C80  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38218                           
 38219                           ;uart_drv.c: 383: switch (RxState)
 38220  003C82  D058               	goto	i2l680
 38221  003C84                     
 38222                           ;uart_drv.c: 387: if (UartData == '\r')
 38223  003C84  0E0D               	movlw	13
 38224  003C86  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38225  003C88  A4D8               	btfss	status,2,c
 38226  003C8A  D003               	goto	i2l682
 38227                           
 38228                           ;uart_drv.c: 388: {
 38229                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 38230  003C8C  0E01               	movlw	1
 38231  003C8E  6E2B               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38232                           
 38233                           ;uart_drv.c: 391: }
 38234  003C90  0012               	return	
 38235  003C92                     i2l682:
 38236                           
 38237                           ;uart_drv.c: 392: else
 38238                           ;uart_drv.c: 393: {
 38239                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 38240  003C92  0E90               	movlw	144
 38241  003C94  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38242  003C96  0E01               	movlw	1
 38243  003C98  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38244  003C9A  B0D8               	btfsc	status,0,c
 38245  003C9C  0012               	return	
 38246                           
 38247                           ;uart_drv.c: 395: {
 38248                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 38249  003C9E  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38250  003CA0  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38251  003CA2  6ED9               	movwf	fsr2l,c
 38252  003CA4  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38253  003CA6  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38254  003CA8  6EDA               	movwf	fsr2h,c
 38255  003CAA  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 38256                           
 38257                           ;uart_drv.c: 399: RxCounter++;
 38258  003CAE  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 38259  003CB0  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 38260                           
 38261                           ;uart_drv.c: 400: }
 38262                           ;uart_drv.c: 401: }
 38263                           ;uart_drv.c: 402: break;
 38264  003CB2  0012               	return	
 38265  003CB4                     
 38266                           ;uart_drv.c: 406: if (UartData == '\n')
 38267  003CB4  0E0A               	movlw	10
 38268  003CB6  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38269  003CB8  A4D8               	btfss	status,2,c
 38270  003CBA  D035               	goto	i2l688
 38271                           
 38272                           ;uart_drv.c: 407: {
 38273                           ;uart_drv.c: 409: if (RxCounter > 0)
 38274  003CBC  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38275  003CBE  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38276  003CC0  B4D8               	btfsc	status,2,c
 38277  003CC2  D031               	goto	i2l688
 38278                           
 38279                           ;uart_drv.c: 410: {
 38280                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 38281  003CC4  0E00               	movlw	0
 38282  003CC6  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38283  003CC8  0E00               	movlw	0
 38284  003CCA  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38285  003CCC  D010               	goto	i2l689
 38286  003CCE                     
 38287                           ;uart_drv.c: 413: {
 38288                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 38289  003CCE  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38290  003CD0  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38291  003CD2  6ED9               	movwf	fsr2l,c
 38292  003CD4  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38293  003CD6  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38294  003CD8  6EDA               	movwf	fsr2h,c
 38295  003CDA  0E58               	movlw	low _RxBuffer
 38296  003CDC  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38297  003CDE  6EE1               	movwf	fsr1l,c
 38298  003CE0  0E0C               	movlw	high _RxBuffer
 38299  003CE2  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38300  003CE4  6EE2               	movwf	fsr1h,c
 38301  003CE6  CFDF FFE7          	movff	indf2,indf1
 38302  003CEA  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 38303  003CEC  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 38304  003CEE                     i2l689:
 38305  003CEE  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38306  003CF0  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38307  003CF2  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38308  003CF4  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38309  003CF6  A0D8               	btfss	status,0,c
 38310  003CF8  D7EA               	goto	i2l690
 38311                           
 38312                           ;uart_drv.c: 415: }
 38313                           ;uart_drv.c: 417: RxLen = RxCounter;
 38314  003CFA  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 38315  003CFE  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 38316                           
 38317                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 38318  003D02  0E3A               	movlw	low _NewStringReceived
 38319  003D04  6E01               	movwf	i2GenerateEvt@Event,c
 38320  003D06  0E00               	movlw	high _NewStringReceived
 38321  003D08  6E02               	movwf	i2GenerateEvt@Event+1,c
 38322  003D0A  ECB9  F034         	call	i2_GenerateEvt	;wreg free
 38323                           
 38324                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 38325  003D0E  0E39               	movlw	low _NewMdmEvtParserRequest
 38326  003D10  6E01               	movwf	i2GenerateEvt@Event,c
 38327  003D12  0E00               	movlw	high _NewMdmEvtParserRequest
 38328  003D14  6E02               	movwf	i2GenerateEvt@Event+1,c
 38329  003D16  ECB9  F034         	call	i2_GenerateEvt	;wreg free
 38330                           
 38331                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 38332  003D1A  0E38               	movlw	low _NewStringMdmTerminal
 38333  003D1C  6E01               	movwf	i2GenerateEvt@Event,c
 38334  003D1E  0E00               	movlw	high _NewStringMdmTerminal
 38335  003D20  6E02               	movwf	i2GenerateEvt@Event+1,c
 38336  003D22  ECB9  F034         	call	i2_GenerateEvt	;wreg free
 38337  003D26                     i2l688:
 38338                           
 38339                           ;uart_drv.c: 427: }
 38340                           ;uart_drv.c: 429: RxState = ReadData;
 38341                           
 38342                           ;uart_drv.c: 424: else
 38343                           ;uart_drv.c: 425: {
 38344                           
 38345                           ;uart_drv.c: 422: }
 38346                           ;uart_drv.c: 423: }
 38347  003D26  0E00               	movlw	0
 38348  003D28  6E2B               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38349                           
 38350                           ;uart_drv.c: 431: RxCounter = 0;
 38351  003D2A  0E00               	movlw	0
 38352  003D2C  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 38353  003D2E  0E00               	movlw	0
 38354  003D30  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 38355                           
 38356                           ;uart_drv.c: 436: }
 38357                           
 38358                           ;uart_drv.c: 435: break;
 38359                           
 38360                           ;uart_drv.c: 434: default:
 38361                           
 38362                           ;uart_drv.c: 432: break;
 38363  003D32  0012               	return	
 38364  003D34                     i2l680:
 38365  003D34  502B               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 38366                           
 38367                           ; Switch size 1, requested type "space"
 38368                           ; Number of cases is 2, Range of values is 0 to 1
 38369                           ; switch strategies available:
 38370                           ; Name         Instructions Cycles
 38371                           ; simple_byte            7     4 (average)
 38372                           ;	Chosen strategy is simple_byte
 38373  003D36  0A00               	xorlw	0	; case 0
 38374  003D38  B4D8               	btfsc	status,2,c
 38375  003D3A  D7A4               	goto	i2l681
 38376  003D3C  0A01               	xorlw	1	; case 1
 38377  003D3E  A4D8               	btfss	status,2,c
 38378  003D40  0012               	return	
 38379  003D42  D7B8               	goto	i2l686
 38380  003D44                     __end_of_Uart_MdmGsmGprsReadService:
 38381                           	opt stack 0
 38382                           tosu	equ	0xFFF
 38383                           tosh	equ	0xFFE
 38384                           tosl	equ	0xFFD
 38385                           pclatu	equ	0xFFB
 38386                           pclath	equ	0xFFA
 38387                           tblptru	equ	0xFF8
 38388                           tblptrh	equ	0xFF7
 38389                           tblptrl	equ	0xFF6
 38390                           tablat	equ	0xFF5
 38391                           prodh	equ	0xFF4
 38392                           prodl	equ	0xFF3
 38393                           intcon	equ	0xFF2
 38394                           intcon2	equ	0xFF1
 38395                           intcon3	equ	0xFF0
 38396                           indf0	equ	0xFEF
 38397                           postinc0	equ	0xFEE
 38398                           plusw0	equ	0xFEB
 38399                           fsr0h	equ	0xFEA
 38400                           fsr0l	equ	0xFE9
 38401                           wreg	equ	0xFE8
 38402                           indf1	equ	0xFE7
 38403                           postinc1	equ	0xFE6
 38404                           postdec1	equ	0xFE5
 38405                           plusw1	equ	0xFE3
 38406                           fsr1h	equ	0xFE2
 38407                           fsr1l	equ	0xFE1
 38408                           bsr	equ	0xFE0
 38409                           indf2	equ	0xFDF
 38410                           postinc2	equ	0xFDE
 38411                           postdec2	equ	0xFDD
 38412                           plusw2	equ	0xFDB
 38413                           fsr2h	equ	0xFDA
 38414                           fsr2l	equ	0xFD9
 38415                           status	equ	0xFD8
 38416                           
 38417 ;; *************** function i2_GenerateEvt *****************
 38418 ;; Defined at:
 38419 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 38420 ;; Parameters:    Size  Location     Type
 38421 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 38422 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 38423 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 38424 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 38425 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 38426 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 38427 ;; Auto vars:     Size  Location     Type
 38428 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 38429 ;; Return value:  Size  Location     Type
 38430 ;;                  1    wreg      enum E7699
 38431 ;; Registers used:
 38432 ;;		wreg, fsr2l, fsr2h, status,2
 38433 ;; Tracked objects:
 38434 ;;		On entry : 0/0
 38435 ;;		On exit  : 0/0
 38436 ;;		Unchanged: 0/0
 38437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38441 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38442 ;;Total ram usage:        3 bytes
 38443 ;; Hardware stack levels used:    1
 38444 ;; This function calls:
 38445 ;;		Nothing
 38446 ;; This function is called by:
 38447 ;;		_Uart_MdmGsmGprsReadService
 38448 ;; This function uses a non-reentrant model
 38449 ;;
 38450                           
 38451                           	psect	text192
 38452  006972                     __ptext192:
 38453                           	opt stack 0
 38454  006972                     i2_GenerateEvt:
 38455                           	opt stack 8
 38456                           
 38457                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38458                           
 38459                           ;incstack = 0
 38460  006972  0E00               	movlw	0
 38461  006974  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38462                           
 38463                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38464  006976  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 38465  00697A  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 38466  00697E  0E02               	movlw	2
 38467  006980  6EDF               	movwf	indf2,c
 38468                           
 38469                           ;os_ser.c: 83: EventStatus = EventSent;
 38470  006982  0E02               	movlw	2
 38471  006984  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38472  006986  0012               	return	
 38473  006988                     __end_ofi2_GenerateEvt:
 38474                           	opt stack 0
 38475                           tosu	equ	0xFFF
 38476                           tosh	equ	0xFFE
 38477                           tosl	equ	0xFFD
 38478                           pclatu	equ	0xFFB
 38479                           pclath	equ	0xFFA
 38480                           tblptru	equ	0xFF8
 38481                           tblptrh	equ	0xFF7
 38482                           tblptrl	equ	0xFF6
 38483                           tablat	equ	0xFF5
 38484                           prodh	equ	0xFF4
 38485                           prodl	equ	0xFF3
 38486                           intcon	equ	0xFF2
 38487                           intcon2	equ	0xFF1
 38488                           intcon3	equ	0xFF0
 38489                           indf0	equ	0xFEF
 38490                           postinc0	equ	0xFEE
 38491                           plusw0	equ	0xFEB
 38492                           fsr0h	equ	0xFEA
 38493                           fsr0l	equ	0xFE9
 38494                           wreg	equ	0xFE8
 38495                           indf1	equ	0xFE7
 38496                           postinc1	equ	0xFE6
 38497                           postdec1	equ	0xFE5
 38498                           plusw1	equ	0xFE3
 38499                           fsr1h	equ	0xFE2
 38500                           fsr1l	equ	0xFE1
 38501                           bsr	equ	0xFE0
 38502                           indf2	equ	0xFDF
 38503                           postinc2	equ	0xFDE
 38504                           postdec2	equ	0xFDD
 38505                           plusw2	equ	0xFDB
 38506                           fsr2h	equ	0xFDA
 38507                           fsr2l	equ	0xFD9
 38508                           status	equ	0xFD8
 38509                           
 38510 ;; *************** function _Rtcc_RtcIsr *****************
 38511 ;; Defined at:
 38512 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 38513 ;; Parameters:    Size  Location     Type
 38514 ;;		None
 38515 ;; Auto vars:     Size  Location     Type
 38516 ;;		None
 38517 ;; Return value:  Size  Location     Type
 38518 ;;                  1    wreg      void 
 38519 ;; Registers used:
 38520 ;;		wreg, status,2, status,0
 38521 ;; Tracked objects:
 38522 ;;		On entry : 0/0
 38523 ;;		On exit  : 0/0
 38524 ;;		Unchanged: 0/0
 38525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38530 ;;Total ram usage:        0 bytes
 38531 ;; Hardware stack levels used:    1
 38532 ;; This function calls:
 38533 ;;		Nothing
 38534 ;; This function is called by:
 38535 ;;		_HighPriorityIsr
 38536 ;; This function uses a non-reentrant model
 38537 ;;
 38538                           
 38539                           	psect	text193
 38540  006AB6                     __ptext193:
 38541                           	opt stack 0
 38542  006AB6                     _Rtcc_RtcIsr:
 38543                           	opt stack 10
 38544                           
 38545                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 38546                           
 38547                           ;incstack = 0
 38548  006AB6  90A4               	bcf	4004,0,c	;volatile
 38549  006AB8  0012               	return	
 38550  006ABA                     __end_of_Rtcc_RtcIsr:
 38551                           	opt stack 0
 38552                           tosu	equ	0xFFF
 38553                           tosh	equ	0xFFE
 38554                           tosl	equ	0xFFD
 38555                           pclatu	equ	0xFFB
 38556                           pclath	equ	0xFFA
 38557                           tblptru	equ	0xFF8
 38558                           tblptrh	equ	0xFF7
 38559                           tblptrl	equ	0xFF6
 38560                           tablat	equ	0xFF5
 38561                           prodh	equ	0xFF4
 38562                           prodl	equ	0xFF3
 38563                           intcon	equ	0xFF2
 38564                           intcon2	equ	0xFF1
 38565                           intcon3	equ	0xFF0
 38566                           indf0	equ	0xFEF
 38567                           postinc0	equ	0xFEE
 38568                           plusw0	equ	0xFEB
 38569                           fsr0h	equ	0xFEA
 38570                           fsr0l	equ	0xFE9
 38571                           wreg	equ	0xFE8
 38572                           indf1	equ	0xFE7
 38573                           postinc1	equ	0xFE6
 38574                           postdec1	equ	0xFE5
 38575                           plusw1	equ	0xFE3
 38576                           fsr1h	equ	0xFE2
 38577                           fsr1l	equ	0xFE1
 38578                           bsr	equ	0xFE0
 38579                           indf2	equ	0xFDF
 38580                           postinc2	equ	0xFDE
 38581                           postdec2	equ	0xFDD
 38582                           plusw2	equ	0xFDB
 38583                           fsr2h	equ	0xFDA
 38584                           fsr2l	equ	0xFD9
 38585                           status	equ	0xFD8
 38586                           
 38587 ;; *************** function _Mcu_Int1Isr *****************
 38588 ;; Defined at:
 38589 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 38590 ;; Parameters:    Size  Location     Type
 38591 ;;		None
 38592 ;; Auto vars:     Size  Location     Type
 38593 ;;		None
 38594 ;; Return value:  Size  Location     Type
 38595 ;;                  1    wreg      void 
 38596 ;; Registers used:
 38597 ;;		wreg, status,2, status,0
 38598 ;; Tracked objects:
 38599 ;;		On entry : 0/0
 38600 ;;		On exit  : 0/0
 38601 ;;		Unchanged: 0/0
 38602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38607 ;;Total ram usage:        0 bytes
 38608 ;; Hardware stack levels used:    1
 38609 ;; This function calls:
 38610 ;;		Nothing
 38611 ;; This function is called by:
 38612 ;;		_HighPriorityIsr
 38613 ;; This function uses a non-reentrant model
 38614 ;;
 38615                           
 38616                           	psect	text194
 38617  006ABA                     __ptext194:
 38618                           	opt stack 0
 38619  006ABA                     _Mcu_Int1Isr:
 38620                           	opt stack 10
 38621                           
 38622                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 38623                           
 38624                           ;incstack = 0
 38625  006ABA  90F0               	bcf	intcon3,0,c	;volatile
 38626  006ABC  0012               	return	
 38627  006ABE                     __end_of_Mcu_Int1Isr:
 38628                           	opt stack 0
 38629                           tosu	equ	0xFFF
 38630                           tosh	equ	0xFFE
 38631                           tosl	equ	0xFFD
 38632                           pclatu	equ	0xFFB
 38633                           pclath	equ	0xFFA
 38634                           tblptru	equ	0xFF8
 38635                           tblptrh	equ	0xFF7
 38636                           tblptrl	equ	0xFF6
 38637                           tablat	equ	0xFF5
 38638                           prodh	equ	0xFF4
 38639                           prodl	equ	0xFF3
 38640                           intcon	equ	0xFF2
 38641                           intcon2	equ	0xFF1
 38642                           intcon3	equ	0xFF0
 38643                           indf0	equ	0xFEF
 38644                           postinc0	equ	0xFEE
 38645                           plusw0	equ	0xFEB
 38646                           fsr0h	equ	0xFEA
 38647                           fsr0l	equ	0xFE9
 38648                           wreg	equ	0xFE8
 38649                           indf1	equ	0xFE7
 38650                           postinc1	equ	0xFE6
 38651                           postdec1	equ	0xFE5
 38652                           plusw1	equ	0xFE3
 38653                           fsr1h	equ	0xFE2
 38654                           fsr1l	equ	0xFE1
 38655                           bsr	equ	0xFE0
 38656                           indf2	equ	0xFDF
 38657                           postinc2	equ	0xFDE
 38658                           postdec2	equ	0xFDD
 38659                           plusw2	equ	0xFDB
 38660                           fsr2h	equ	0xFDA
 38661                           fsr2l	equ	0xFD9
 38662                           status	equ	0xFD8
 38663                           
 38664 ;; *************** function _Mcu_Int0Isr *****************
 38665 ;; Defined at:
 38666 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 38667 ;; Parameters:    Size  Location     Type
 38668 ;;		None
 38669 ;; Auto vars:     Size  Location     Type
 38670 ;;		None
 38671 ;; Return value:  Size  Location     Type
 38672 ;;                  1    wreg      void 
 38673 ;; Registers used:
 38674 ;;		wreg, status,2, status,0
 38675 ;; Tracked objects:
 38676 ;;		On entry : 0/0
 38677 ;;		On exit  : 0/0
 38678 ;;		Unchanged: 0/0
 38679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38684 ;;Total ram usage:        0 bytes
 38685 ;; Hardware stack levels used:    1
 38686 ;; This function calls:
 38687 ;;		Nothing
 38688 ;; This function is called by:
 38689 ;;		_HighPriorityIsr
 38690 ;; This function uses a non-reentrant model
 38691 ;;
 38692                           
 38693                           	psect	text195
 38694  006ABE                     __ptext195:
 38695                           	opt stack 0
 38696  006ABE                     _Mcu_Int0Isr:
 38697                           	opt stack 10
 38698                           
 38699                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 38700                           
 38701                           ;incstack = 0
 38702  006ABE  92F2               	bcf	intcon,1,c	;volatile
 38703  006AC0  0012               	return	
 38704  006AC2                     __end_of_Mcu_Int0Isr:
 38705                           	opt stack 0
 38706                           tosu	equ	0xFFF
 38707                           tosh	equ	0xFFE
 38708                           tosl	equ	0xFFD
 38709                           pclatu	equ	0xFFB
 38710                           pclath	equ	0xFFA
 38711                           tblptru	equ	0xFF8
 38712                           tblptrh	equ	0xFF7
 38713                           tblptrl	equ	0xFF6
 38714                           tablat	equ	0xFF5
 38715                           prodh	equ	0xFF4
 38716                           prodl	equ	0xFF3
 38717                           intcon	equ	0xFF2
 38718                           intcon2	equ	0xFF1
 38719                           intcon3	equ	0xFF0
 38720                           indf0	equ	0xFEF
 38721                           postinc0	equ	0xFEE
 38722                           plusw0	equ	0xFEB
 38723                           fsr0h	equ	0xFEA
 38724                           fsr0l	equ	0xFE9
 38725                           wreg	equ	0xFE8
 38726                           indf1	equ	0xFE7
 38727                           postinc1	equ	0xFE6
 38728                           postdec1	equ	0xFE5
 38729                           plusw1	equ	0xFE3
 38730                           fsr1h	equ	0xFE2
 38731                           fsr1l	equ	0xFE1
 38732                           bsr	equ	0xFE0
 38733                           indf2	equ	0xFDF
 38734                           postinc2	equ	0xFDE
 38735                           postdec2	equ	0xFDD
 38736                           plusw2	equ	0xFDB
 38737                           fsr2h	equ	0xFDA
 38738                           fsr2l	equ	0xFD9
 38739                           status	equ	0xFD8
 38740                           tosu	equ	0xFFF
 38741                           tosh	equ	0xFFE
 38742                           tosl	equ	0xFFD
 38743                           pclatu	equ	0xFFB
 38744                           pclath	equ	0xFFA
 38745                           tblptru	equ	0xFF8
 38746                           tblptrh	equ	0xFF7
 38747                           tblptrl	equ	0xFF6
 38748                           tablat	equ	0xFF5
 38749                           prodh	equ	0xFF4
 38750                           prodl	equ	0xFF3
 38751                           intcon	equ	0xFF2
 38752                           intcon2	equ	0xFF1
 38753                           intcon3	equ	0xFF0
 38754                           indf0	equ	0xFEF
 38755                           postinc0	equ	0xFEE
 38756                           plusw0	equ	0xFEB
 38757                           fsr0h	equ	0xFEA
 38758                           fsr0l	equ	0xFE9
 38759                           wreg	equ	0xFE8
 38760                           indf1	equ	0xFE7
 38761                           postinc1	equ	0xFE6
 38762                           postdec1	equ	0xFE5
 38763                           plusw1	equ	0xFE3
 38764                           fsr1h	equ	0xFE2
 38765                           fsr1l	equ	0xFE1
 38766                           bsr	equ	0xFE0
 38767                           indf2	equ	0xFDF
 38768                           postinc2	equ	0xFDE
 38769                           postdec2	equ	0xFDD
 38770                           plusw2	equ	0xFDB
 38771                           fsr2h	equ	0xFDA
 38772                           fsr2l	equ	0xFD9
 38773                           status	equ	0xFD8
 38774                           
 38775                           	psect	text196
 38776  000000                     __ptext196:
 38777                           	opt stack 0
 38778                           tosu	equ	0xFFF
 38779                           tosh	equ	0xFFE
 38780                           tosl	equ	0xFFD
 38781                           pclatu	equ	0xFFB
 38782                           pclath	equ	0xFFA
 38783                           tblptru	equ	0xFF8
 38784                           tblptrh	equ	0xFF7
 38785                           tblptrl	equ	0xFF6
 38786                           tablat	equ	0xFF5
 38787                           prodh	equ	0xFF4
 38788                           prodl	equ	0xFF3
 38789                           intcon	equ	0xFF2
 38790                           intcon2	equ	0xFF1
 38791                           intcon3	equ	0xFF0
 38792                           indf0	equ	0xFEF
 38793                           postinc0	equ	0xFEE
 38794                           plusw0	equ	0xFEB
 38795                           fsr0h	equ	0xFEA
 38796                           fsr0l	equ	0xFE9
 38797                           wreg	equ	0xFE8
 38798                           indf1	equ	0xFE7
 38799                           postinc1	equ	0xFE6
 38800                           postdec1	equ	0xFE5
 38801                           plusw1	equ	0xFE3
 38802                           fsr1h	equ	0xFE2
 38803                           fsr1l	equ	0xFE1
 38804                           bsr	equ	0xFE0
 38805                           indf2	equ	0xFDF
 38806                           postinc2	equ	0xFDE
 38807                           postdec2	equ	0xFDD
 38808                           plusw2	equ	0xFDB
 38809                           fsr2h	equ	0xFDA
 38810                           fsr2l	equ	0xFD9
 38811                           status	equ	0xFD8
 38812                           
 38813                           	psect	rparam
 38814  0000                     tosu	equ	0xFFF
 38815                           tosh	equ	0xFFE
 38816                           tosl	equ	0xFFD
 38817                           pclatu	equ	0xFFB
 38818                           pclath	equ	0xFFA
 38819                           tblptru	equ	0xFF8
 38820                           tblptrh	equ	0xFF7
 38821                           tblptrl	equ	0xFF6
 38822                           tablat	equ	0xFF5
 38823                           prodh	equ	0xFF4
 38824                           prodl	equ	0xFF3
 38825                           intcon	equ	0xFF2
 38826                           intcon2	equ	0xFF1
 38827                           intcon3	equ	0xFF0
 38828                           indf0	equ	0xFEF
 38829                           postinc0	equ	0xFEE
 38830                           plusw0	equ	0xFEB
 38831                           fsr0h	equ	0xFEA
 38832                           fsr0l	equ	0xFE9
 38833                           wreg	equ	0xFE8
 38834                           indf1	equ	0xFE7
 38835                           postinc1	equ	0xFE6
 38836                           postdec1	equ	0xFE5
 38837                           plusw1	equ	0xFE3
 38838                           fsr1h	equ	0xFE2
 38839                           fsr1l	equ	0xFE1
 38840                           bsr	equ	0xFE0
 38841                           indf2	equ	0xFDF
 38842                           postinc2	equ	0xFDE
 38843                           postdec2	equ	0xFDD
 38844                           plusw2	equ	0xFDB
 38845                           fsr2h	equ	0xFDA
 38846                           fsr2l	equ	0xFD9
 38847                           status	equ	0xFD8
 38848                           
 38849                           	psect	temp
 38850  000042                     btemp:
 38851                           	opt stack 0
 38852  000042                     	ds	1
 38853  0000                     int$flags	set	btemp
 38854  0000                     wtemp6	set	btemp+1
 38855                           tosu	equ	0xFFF
 38856                           tosh	equ	0xFFE
 38857                           tosl	equ	0xFFD
 38858                           pclatu	equ	0xFFB
 38859                           pclath	equ	0xFFA
 38860                           tblptru	equ	0xFF8
 38861                           tblptrh	equ	0xFF7
 38862                           tblptrl	equ	0xFF6
 38863                           tablat	equ	0xFF5
 38864                           prodh	equ	0xFF4
 38865                           prodl	equ	0xFF3
 38866                           intcon	equ	0xFF2
 38867                           intcon2	equ	0xFF1
 38868                           intcon3	equ	0xFF0
 38869                           indf0	equ	0xFEF
 38870                           postinc0	equ	0xFEE
 38871                           plusw0	equ	0xFEB
 38872                           fsr0h	equ	0xFEA
 38873                           fsr0l	equ	0xFE9
 38874                           wreg	equ	0xFE8
 38875                           indf1	equ	0xFE7
 38876                           postinc1	equ	0xFE6
 38877                           postdec1	equ	0xFE5
 38878                           plusw1	equ	0xFE3
 38879                           fsr1h	equ	0xFE2
 38880                           fsr1l	equ	0xFE1
 38881                           bsr	equ	0xFE0
 38882                           indf2	equ	0xFDF
 38883                           postinc2	equ	0xFDE
 38884                           postdec2	equ	0xFDD
 38885                           plusw2	equ	0xFDB
 38886                           fsr2h	equ	0xFDA
 38887                           fsr2l	equ	0xFD9
 38888                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    592
    Data        167
    BSS         2360
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      2     256
    BANK4           192      4     174
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    delCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    triggerCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    delCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    addCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    addCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    isMasterNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), smsText(BANK4[20]), callerNumber(BANK3[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 4
		 -> memoryPreamble(BANK3[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), STR_15(CODE[20]), 
		 -> STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), STR_5(CODE[10]), 
		 -> Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), parseCommand@resetCmd(BANK0[4]), parseCommand@deleteNumberCmd(BANK0[4]), 
		 -> parseCommand@addNumberCmd(BANK0[4]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8954 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), callerNumber(BANK3[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[12]), STR_30(CODE[19]), STR_29(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _triggerRelay->_I2cSlv_SendI2cMsg
    _waitSetupCall->_secondsAppTimer
    _savePreamble->_Eeprom_Write
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _detectCmd->_parseCommand
    _parseCommand->_StringCompare
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _saveNumberInMemory->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _isNumberInMemory->_Eeprom_Read
    _isMasterNumber->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Eeprom_Reset->_I2cSlv_SendI2cMsg
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_delCmdFsm
    _triggerCmdFsm->_isNumberInMemory
    _initFsm->_initEeprom
    _delCmdFsm->_isNumberInMemory
    _addCmdFsm->_isNumberInMemory
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_InitializeTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1187007
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0 1182376
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  591281
                                              0 BANK3      1     1      0
                                              0 BANK4      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  591095
                                              0 BANK3      2     2      0
                                              0 BANK4      1     1      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59354
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59354
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   42144
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0  325311
                       _Eeprom_Reset
                _Led_SetLedBlinkTime
                          _addCmdFsm
                          _delCmdFsm
                          _detectCmd
                            _initFsm
                      _triggerCmdFsm
 ---------------------------------------------------------------------------------
 (4) _triggerCmdFsm                                        4     2      2   33674
                                             17 BANK1      4     2      2
                   _isNumberInMemory
                       _triggerRelay
 ---------------------------------------------------------------------------------
 (5) _triggerRelay                                         4     4      0    4141
                                             37 BANK0      4     4      0
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   84592
                                              3 BANK1      1     1      0
                    _GetCallerNumber
                   _Led_SetLedStatus
                         _initEeprom
                      _initGprsModem
                 _saveNumberInMemory
                       _savePreamble
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (5) _waitSetupCall                                        1     1      0   17638
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _getSetupCall                                         1     1      0    5527
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (5) _savePreamble                                         0     0      0    9862
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (6) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15578
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24954
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (4) _detectCmd                                            1     1      0   35708
                                             53 BANK0      1     1      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                         _StringCopy
              _Uart_WriteConstString
                       _parseCommand
 ---------------------------------------------------------------------------------
 (5) _parseCommand                                        13    13      0    3986
                                             40 BANK0     13    13      0
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (5) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (5) _Mdm_GetSmsData                                       3     1      2    8061
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _delCmdFsm                                           19    15      4   69127
                                             17 BANK1     19    15      4
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _addCmdFsm                                            7     3      4   95099
                                             17 BANK1      7     3      4
                      _findEmptySpot
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (5) _saveNumberInMemory                                   3     1      2   10236
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write                                         7     4      3    9862
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (5) _isNumberInMemory                                    17    15      2   29262
                                              0 BANK1     17    15      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isMasterNumber                                      16    14      2   29124
                                              0 BANK1     16    14      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _findEmptySpot                                       15    15      0   25845
                                              0 BANK1     15    15      0
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (6) _isNumberValid                                        5     3      2     786
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24874
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23807
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _Eeprom_Reset                                         1     1      0    6686
                                             37 BANK0      1     1      0
                        _ClearBuffer
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    4023
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73780
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13450
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _StringCompare                                       11     5      6    3040
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15392
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   43139
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21606
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21533
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (9) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (9) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7139
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7139
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2773
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     956
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      2     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      AE      14       90.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     990       8        0.0%
DATA                 0      0     CB0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr  2 08:57:57 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 595A  
                              _USB_SD_Ptr FC1C                            ??_getSetupCall 0083  
               __size_of_Mdm_SetSmsFormat 0050                           ?_isMasterNumber 0100  
                    __size_of_TurnOnModem 004C                           ??_UpdateSchFlag 0019  
                      _Mcu_StartSystemPll 67EE               Mdm_SetSmsFormat@UartMessage 0084  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 22D6  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 002F  
                                     l202 209C                                       l203 20A4  
                                     l205 20EC                                       l206 2112  
                                     l208 211A                                       l160 1FE0  
                                     l209 213A                                       l161 1EB6  
                                     l162 201E                                       l170 1F7E  
                                     l171 1F94                                       l163 1EC2  
                                     l315 4692                                       l323 465E  
                                     l164 1F02                                       l316 4608  
                                     l420 4CE0                                       l500 4B90  
                                     l173 1F98                                       l325 4678  
                                     l421 4D00                                       l237 67FA  
                                     l174 1FA0                                       l166 1F10  
                                     l318 4612                                       l422 4D0C  
             __end_of_USBStdGetDscHandler 2CFA                                       l510 4B62  
                                     l502 4B22                                       l175 1FAC  
                                     l167 1F38                                       l319 4638  
                                     l423 4D18                                       l511 4B52  
                                     l503 4B12                                       l192 2144  
                                     l176 1FC2                                       l416 4D2C  
                                     l424 4D24                                       l512 4B76  
                                     l504 4B38                                       l520 5E60  
                                     l193 2024                                       l169 1F4A  
                                     l417 4CD2                                       l441 17EC  
                                     l513 4B56                                       l505 4B16  
                                     l521 5E2C                                       l194 217C  
                                     l418 4D5A                                       l442 15F4  
                                     l514 4B5C                                       l506 4B1C  
                                     l530 31D0                                       l195 2030  
                                     l179 1FCE                                       l419 4CDA  
                                     l523 5E46                                       l531 3236  
                                     l196 2070                                       l700 60C6  
                                     l444 163C                                       l532 31FC  
                                     l445 1684                                       l541 6798  
                                     l198 207E                                       l446 16CC  
                                     l199 2092                                       l631 2A10  
                                     l447 1714                                       l448 175C  
                                     l528 323C                                       l633 2A88  
                                     l625 299C                                       l449 17A4  
                                     l529 3228                                       l538 679C  
                                     l546 3D9C                                       l651 5DB0  
                                     l707 61EA                                       l627 29C0  
                                     l715 615E                                       l539 6794  
                                     l547 3DB8                                       l660 5DD4  
                                     l652 5DAA                                       l716 6134  
                                     l709 6204                                       l629 29E8  
                                     l718 614C                                       l639 67E0  
                                     l832 655C                                       l844 3E70  
                                     l668 0C44                                       _BDT 000400  
                                     l790 6816                                       l855 5196  
                                     l775 2E1C                                       l864 4E62  
                                     l856 513C                                       l857 51B0  
                                     l698 60AA                                       l858 516C  
                                     l867 4E74                                       l982 26B0  
                                     l983 2584                                       l985 25A8  
                                     l987 25C2                                       l988 25F6  
                                     l989 2668                                       l998 268C  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                 __end_of_HighPriorityIsr 44B4                            ??_Mdm_MainTask 00A9  
                     ?_Mcu_StartSystemPll 0001                                _USBSuspend 63E4  
                            ___awmod@sign 0082                      USBStdSetCfgHandler@i 0091  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8              I2cSlv_ReceiveI2cMsg@RxBuffer 0080  
                          _USBDeviceTasks 1BAA                              __CFG_IESO$ON 000000  
                          _USBDeviceState 00CE               Rtcc_AlarmConfig@AlarmConfig 007D  
            __end_of_I2cSlv_ReceiveI2cMsg 6128                             ??_Mcu_Int0Isr 0001  
                           ??_Mcu_Int1Isr 0001                     ??_USBCtrlTrfRxService 007D  
                          ??_getsUSBUSART 0087                  USBEnableEndpoint@options 0085  
                              _CheckModem 2582             findEmptySpot@positionInMemory 010E  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 5E74  
         InitGprsNetwork@GprsNetInitState 01EA                                      l1100 1B1A  
                                    l1101 1B66                                      l1013 5E8E  
                                    l1110 5CB4                               RiSm@Counter 02E2  
                                    l1031 3882                                      l1111 5CC8  
                                    l1032 38BC                                      l2000 5748  
                                    l1033 38E2                                      l1009 5EAA  
                                    l1121 5D20                                      l1027 391C  
                                    l1035 3902                                      l1107 5CDA  
                                    l2100 26FE                                      l1220 0DD0  
                                    l1028 3870                                      l1052 1E88  
                                    l1060 1E5A                                      l1108 5C9E  
                                    l2101 2782                                      l1053 1DA2  
                                    l2110 32FC                                      l1222 10B0  
                                    l1230 0FB8                                      l1070 2BAE  
                                    l2006 573C                                      l2111 3244  
                                    l1231 0FBC                                      l1223 0DE8  
                                    l1071 2AA6                                      l1055 1EA2  
                                    l2112 3318                                      l2120 4728  
                                    l1232 1000                                      l1224 0E22  
                                    l1056 1DD4                                      l1152 6698  
                                    l1136 6674                                      l2008 5742  
                                    l2113 3262                                      l2121 46BA  
                                    l1241 106E                                      l1225 0E96  
                                    l1129 55A0                                      l2122 4750  
                                    l1226 0E5E                                      l1074 2AC2  
                                    l1058 1E24                                      l2115 32D2  
                                    l2123 46CA                                      l1219 1078  
                                    l1075 2ADA                                      l1091 1B80  
                                    l2124 46DC                                      l1252 0A54  
                                    l1260 073E                                      l1236 1010  
                                    l1228 0F3E                                      l1092 19FE  
                                    l1412 61DC                                      l1156 636E  
                                    l1404 59F4                                      l2220 4E86  
                                    l2141 64F0                                      l2125 46F6  
                                    l1261 06F6                                      l1253 05F4  
                                    l1237 1054                                      l1229 0F78  
                                    l2045 5F4A                                      l2037 5A9E  
                                    l1405 59B4                                      l2133 3B9C  
                                    l2142 64DE                                      l1078 2B4C  
                                    l2150 5AEA                                      l1422 6784  
                                    l2134 3AE4                                      l2222 4EEC  
                                    l2127 4704                                      l1255 0AB6  
                                    l1263 07F2                                      l1095 1A1A  
                                    l2151 5AB4                                      l2039 5AAA  
                                    l1407 59EE                                      l2144 64E4  
                                    l2128 4712                                      l1280 09C4  
                                    l1272 092A                                      l1264 082C  
                                    l1256 060C                                      l1096 1AD0  
                                    l1440 39FA                                      l2136 3AF2  
                                    l2145 64EA                                      l1281 0A32  
                                    l1273 096E                                      l1265 0856  
                                    l1257 0646                                      l1097 1AF4  
                                    l2153 5AC6                                      l1417 6122  
                                    l1441 3944                                      l1266 0890  
                                    l1258 0680                                      l2250 5C38  
                                    l2154 5AD8                                      l1442 3A10  
                                    l1267 08CA                                      l1259 06BA  
                                    l1443 3962                                      l2411 01AE  
                                    l1291 5F82                                      l2219 4F00  
                                    l1268 090E                                      l2404 05D2  
                                    l2412 019C                                      l1700 36E8  
                                    l1604 2320                                      l1620 1BF2  
                                    l2261 63A2                                      l1285 0A42  
                                    l1277 097E                                      l1445 39C0  
                                    l2405 00E2                                      l1621 1C02  
                                    l1382 4102                                      l2262 638E  
                                    l1286 0A4A                                      l1278 09AA  
                                    l1446 39D4                                      l3062 3830  
                                    l2422 0392                                      l1702 374C  
                                    l1606 2348                                      l1630 1CA0  
                                    l1622 1C0A                                      l2510 66C4  
                                    l1294 5F50                                      l1391 40CC  
                                    l1383 4064                                      l2255 572C  
                                    l3063 37F2                                      l2423 0326  
                                    l1703 3712                                      l1631 1CAC  
                                    l1623 1C20                                      l1615 1BD6  
                                    l1384 4086                                      l2256 56EC  
                                    l2248 5C3C                                      l1448 39F2  
                                    l3056 379E                                      l2440 041E  
                                    l2424 02B4                                      l2408 0152  
                                    l1608 2388                                      l1640 1D28  
                                    l1624 1C2C                                      l1616 1BCC  
                                    l2512 66CC                                      l1393 40E8  
                                    l2097 27F4                                      l2249 5C12  
                                    l3065 3864                                      l3057 3798  
                                    l2425 0250                                      l2409 01E2  
                                    l2417 01D0                                      l1713 2E7C  
                                    l1633 1CC0                                      l1617 1BCA  
                                    l2601 3550                                      l1394 40F4  
                                    l1386 40A8                                      l3330 5B22  
                                    l2098 26D6                                      l3082 508E  
                                    l1650 422C                                      l3250 453A  
                                    l2450 0570                                      l2442 045E  
                                    l2434 0402                                      l1706 378E  
                                    l1714 2E56                                      l1626 1C54  
                                    l3331 5B1A                                      l2099 280A  
                                    l3083 5098                                      l3075 5040  
                                    l3091 534C                                      l3059 37E0  
                                    l3243 6042                                      l2443 0578  
                                    l2435 03D2                                      l2427 0304  
                                    l1707 3754                                      l1643 5FEC  
                                    l1811 35F4                                      l2603 3572  
                                    l3084 50A6                                      l3076 5050  
                                    l3092 5344                                      l1652 4288  
                                    l3340 6078                                      l2428 02C6  
                                    l1716 2EF4                                      l1644 5FFC  
                                    l1740 2CD2                                      l1812 35FA  
                                    l1636 1CE6                                      l1628 1C6A  
              USBConfigureEndpoint@handle 0083                                      l1389 40B0  
                                    l2701 4590                                      l3237 6764  
                                    l3341 6070                                      l2445 04B4  
                                    l3501 6178                                      l1717 2EDA  
                                    l1733 2CE2                                      l1725 3378  
                                    l1813 3600                                      l1629 1C76  
                                    l2509 66D2                                      l2605 358C  
                                    l3334 5B42                                      l2702 45B8  
                                    l3078 506E                                      l2446 0478  
                                    l3502 6172                                      l1902 43E4  
                                    l1830 143E                                      l1742 2CDA  
                                    l1734 2BDE                                      l1750 4342  
                                    l1814 3614                                      l1638 1D0A  
                                    l3335 5B4C                                      l3079 5066  
                                    l3095 5364                                      l3247 44BC  
                                    l1903 437E                                      l1831 1440  
                                    l1751 42C4                                      l1727 33EC  
                                    l1815 361A                                      l2800 3FD0  
                                    l3096 536E                                      l3088 532A  
                                    l1648 4202                                      l3344 6090  
                                    l3360 6494                                      l2464 131E  
                                    l2480 128E                                      l1840 153E  
                                    l1832 145C                                      l1736 2BF2  
                                    l1752 42CA                                      l1808 367A  
                                    l1760 5FD4                                      l3281 5114  
                                    l2801 3FEE                                      l2705 45BC  
                                    l3097 537C                                      l3089 5336  
                                    l3345 609A                                      l3249 44F8  
                                    l3521 18C8                                      l2449 0524  
                                    l3361 6482                                      l2465 10B8  
                                    l1905 4396                                      l1841 15BA  
                                    l1825 137E                                      l1737 2C7A  
                                    l1753 42EA                                      l1817 3620  
                                    l1809 35EA                                      l1673 498A  
                                    l1761 5FD2                                      l3282 5122  
                                    l2570 2FE4                                      l2730 47E4  
                                    l2706 45C8                                      l3530 1902  
                                    l3610 6290                                      l2482 12F8  
                                    l2474 110E                                      l1906 43A4  
                                    l1834 14EA                                      l1826 1384  
                                    l1746 432C                                      l1818 363E  
                                    l3354 5EF2                                      l2731 47F4  
                                    l3603 6720                                      l2467 10DE  
                                    l1667 3BF6                                      l1907 43C2  
                                    l1739 2C82                                      l1747 42B2  
                                    l1819 365A                                      l1675 49A4  
                                    l3355 5ED0                                      l2804 4000  
                                    l2652 4DD2                                      l2660 4DAE  
                                    l1924 4C32                                      l2484 1318  
                                    l2476 112E                                      l1908 43DA  
                                    l1844 1570                                      l1836 14B2  
                                    l1828 13F6                                      l1684 30D4  
                                    l2492 689C                                      l3277 50E0  
                                    l2573 3024                                      l2661 4DC6  
                                    l2653 4D68                                      l3541 6914  
                                    l3533 1914                                      l3517 185C  
                                    l2469 10FA                                      l1837 14D0  
                                    l1685 307C                                      l3278 50D4  
                                    l2830 481C                                      l3534 1980  
                                    l3614 68FC                                      l2478 114E  
                                    l1846 15C6                                      l1774 4CBA  
                                    l2590 35C8                                      l2583 4A38  
                                    l2671 4FF4                                      l1927 4BE0  
                                    l3527 18D8                                      l3519 1874  
                                    l1679 4ADA                                      l1839 1532  
                                    l1775 4CB4                                      l2591 34F8  
                                    l2904 58BC                                      l2744 5698  
                                    l2808 403A                                      l2584 4A6E  
                                    l2728 47B8                                      l2680 67C8  
                                    l1928 4C0C                                      l3536 19A6  
                                    l3528 18E8                                      l1960 288A  
                                    l1952 2832                                      l1768 62C8  
                                    l2905 58D0                                      l2833 4896  
                                    l2577 304E                                      l2569 2FE8  
                                    l2673 5026                                      l1929 4BE6  
                                    l3537 19E0                                      l3561 34AE  
                                    l1793 4158                                      l1785 55B6  
                                    l1689 30FE                                      l1769 62C6  
                                    l2489 68A2                                      l2746 56CA  
                                    l2834 4834                                      l2674 4FFA  
                                    l2658 4DEE                                      l3562 3466  
                                    l3490 5816                                      l1970 293E  
                                    l1962 28E2                                      l1954 2840  
                                    l1698 36DE                                      l1794 415E  
                                    l2594 359E                                      l2747 56D0  
                                    l2835 484E                                      l2675 5004  
                                    l2659 4D9A                                      l3563 347E  
                                    l3555 3426                                      l1971 2942  
                                    l1963 28AA                                      l1795 41DA  
                                    l1787 5604                                      l2595 3512  
                                    l2772 5BEC                                      l2764 5460  
                                    l2756 530A                                      l2668 5012  
                                    l2684 5D78                                      l3564 348E  
                                    l3556 3420                                      l1956 2874  
                                    l1796 41A0                                      l2829 4882  
                                    l2669 4FAE                                      l2861 520E  
                                    l2774 5BF4                                      l2758 530E  
                                    l2838 4878                                      l2686 5D84  
                                    l2862 51C2                                      l3558 344E  
                                    l3486 5806                                      l1966 2924  
                                    l1798 41C0                                      l2598 3524  
                                    l2695 45E0                                      l2855 632A  
                                    l2863 51DC                                      l3495 642A  
                                    l3567 34EC                                      l3487 5800  
                                    l1967 28EC                                      l1959 2886  
                                    l2599 352E                __size_of_Mdm_IsSmsReceived 0024  
                                    l2696 4566                                      l3496 6420  
                                    l2880 3A3A                                      l1992 6644  
                              _Led1OutSts 01FA                                      l3593 64CE  
                                    l2881 3A9C                                      l3489 5820  
                                    l1993 6634                                      l2794 4044  
                                    l2698 4600                                      l2866 5228  
                                    l2890 3ABC                                      l2795 3FAC  
                                    l2699 4574                                      l2867 51EC  
                                    l1995 663A                                      l2796 3FC6  
                                    l2868 51FA                                      l2884 3A40  
                                    l2869 5206                                      l3598 65DC  
                                    l2886 3A88                                      l2799 405E  
                                    l2887 3A6A                                      l2879 3A20  
                                    STR_1 FFE6                                      STR_2 FF75  
                                    STR_3 FFDF                                      STR_4 FFC2  
                                    STR_5 FFCE                                      STR_6 FFF0  
                                    STR_7 FFEB                                      STR_8 FE89  
                                    STR_9 FEBD                                _Led2OutSts 01F8  
                              _Led3OutSts 01F6                     ??_USBCtrlTrfTxService 007D  
                                    u9025 5E36                                      u9026 5E38  
                                    u9035 5E42                                      u9036 5E44  
                                    u9045 5E50                                      u9046 5E52  
                                    u9055 5E5C                                      _UCFG 000F39  
                                    u9056 5E5E                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                __size_of_Uart_Uart1RxIsr 0010                                      _UEIR 000F63  
                                    _UCON 000F65                                _AlarmEvent 01F5  
                          ?_StopCondition 0001                              _triggerRelay 630E  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 0314  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 6A92  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0030               Led_SetLedBlinkTime@OnTimeMs 007D  
            findEmptySpot@currentPosition 0040    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D4                      _NewStringMdmTerminal 0038  
                                    _atoi 3796                                      _main 6A3E  
                         ??_Mdm_IsRinging 0081                                      _itoa 601C  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 637A  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 030C                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 44B4  
                                    _xtoi 3410                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 6A9A               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4CCC               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 6168  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC                       __end_of_Eeprom_Read 5AAE  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 6930                             _isNumberValid 5672  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
        isNumberInMemory@positionInMemory 0110                __end_of_USBCheckStdRequest 36BE  
                         _Rtcm_SystemDate 0459                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 69D2         __size_of_GetLastInteractionNumber 000C  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                 ?_GetLastInteractionNumber 007D  
                          _GetElapsedTime 3E0C             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
                     StringCopy@SourceStr 0085               __end_of_OsAlrm_ClearOsAlarm 59B2  
                Eeprom_Write@SlaveAddress 0094                     addCmdFsm@currentState 01D7  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                waitSetupCall@isCallArrived 0093  
                     __size_of_I2cDummyTx 001C                          ??_Mdm_GetSmsData 0091  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 61E4                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAB                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DD  
                                   l12155 67FA                                     l14117 47F4  
                                   l13095 3370                                     l14079 5690  
                                   l12923 36E8                                     l15235 323C  
                                   l14373 4CE6                                     l15361 1D9A  
                                   l16245 4874                                     l13941 382C  
                                   l12885 6482                                     l15383 1E54  
                                   l13759 5ED0                                     l14559 2318  
                                   l15553 0FB0                                     l14499 63C2  
                                   l14587 2380                                     l15719 09A4  
                                   l16475 5236                                     l16805 5762  
                                   l16807 5792                                     l15871 1CB8  
                                   l16487 2D04                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 50B0                                     STR_10 FF4B  
                                   STR_11 FF59                                     STR_12 FF9D  
                                   STR_20 FF3D                                     STR_13 FF67  
                                   STR_21 FE5F                                     STR_30 FEFA  
                                   STR_14 FEA8                                     STR_31 FFAA  
                                   STR_15 FEE6                                     STR_23 FED2  
                                   STR_24 FFF5                                     STR_32 FFD8  
                                   STR_16 FF1E                                     STR_25 FFF5  
                                   STR_17 FF83                                     STR_26 FE86  
                                   STR_18 FF90                                     STR_27 FF0D  
                                   STR_28 FFB6                           __end_of___awmod 5386  
                                   STR_29 FF2F                             _triggerCmdFsm 51B6  
       __size_of_USBCtrlEPServiceComplete 0100                           __end_of___lldiv 5134  
                                   ?_utoa 008A                                     u12000 5B26  
                                   u12030 607C                                     u13010 189E  
                         ___awdiv@divisor 007F                                     u12070 6212  
                                   u13030 18AE                                     u11510 377C  
                                   u12400 64BE                                     u12090 5724  
                                   u11370 5DA6                                     u11530 60D4  
                  __end_of_USBDeviceTasks 1D32                                     u12340 50E4  
                                   u11700 2C44                                     u11517 3772  
                                   u10645 659E                                     u13310 5350  
                                   u11710 2C74                                     u10646 65A0  
                                   u10655 65AA                                     ?_xtoi 0083  
                                   u10656 65AC                                     u12097 571A  
                                   u10665 65B6                                     u13170 56D4  
                                   u13250 5072                                     u14210 5848  
                                   u11490 373A                                     u11730 2CC6  
                                   u10666 65B8                                     u12515 6996  
                                   u11707 2C3A                                     u12516 6998  
                                   u12380 65D8                                     u11660 33A4  
                                   u11717 2C6A                                     u12630 5C48  
                                   u12470 6274                                     u14150 04BE  
                                   u13345 5DFA                                     u13505 0B9E  
                                   u14217 583E                                     u11497 3730  
                                   u11737 2CBC                                     u12570 29E4  
                                   u12490 6280                                     u14340 4D78  
                                   u13525 0C78                                     u16101 4EDE  
                                   u14270 3AD4                                     u11950 1554  
                                   u13630 233C                                     u13535 0C98  
                                   u16111 4EF6                                     u12760 4BBC  
                                   u13545 0D22                                     u13465 6956  
                                   u14290 2FE0                                     u13466 6958  
               ?_USBCtrlEPServiceComplete 0001                                     u13660 23E4  
                                   u14525 53EA                                     u13485 0AF4  
                                   u13495 0B14                                     u14535 69AA  
                                   u14560 4670                                     u14640 261E  
                                   u15600 2914                                     u14536 69AC  
                                   u14721 1D4C                                     u14570 468A  
                                   u14810 1EA8                                     u15610 292C  
                                   u14731 1D5E                                     u14660 2632  
                                   u12980 1864                                     u16228 2DD0  
                                   u14741 1D70                                     u16229 2DFE  
                                   u15607 290A                                     u15490 1D2E  
                                   u14595 6940                                     u15900 4806  
                                   u14596 6944                                     u15580 28D2  
                                   u16188 526C                                     u15661 5668  
                                   u16189 529A                                     u15830 3FCC  
                                   u15587 28C8                           __end_of___lwdiv 5B56  
                         __end_of___lwmod 60A4                 TurnOnModem@TurnOnMdmState 01F4  
                      ??_UpdateOsCounters 0019                                     i1l742 2444  
                                   i1l747 2580                                     i2l680 3D34  
                                   i2l681 3C84                                     i2l690 3CCE  
                                   i2l682 3C92                                     i2l686 3CB4  
                                   i2l688 3D26                                     i2l689 3CEE  
                                   _UADDR 000F38                           ___awdiv@counter 0081  
                                   _AlCfg 03B6              Led_SetLedBlinkTime@OffTimeMs 007F  
                 I2cSendMsgSm@I2cComState 01E6                                     _USTAT 000F64  
                 __end_of_LedStateMachine 4756        __size_of_USBCtrlEPAllowStatusStage 00CC  
                     ___lmul@multiplicand 0081                      ??_InitModemInterface 007D  
                                   _RxLen 00C2           __end_of_USBCtrlEPAllowDataStage 49D8  
                           _StringCompare 5BFA                                     _sd000 FE5B  
                                   _sd001 FE14                                     _sd002 FDEE  
          ?_USBIncrement1msInternalTimers 0001               Rtcc_GetRtccValue@RtccPtrVal 007E  
                    __end_of_Led_MainTask 3BAE                               _ApnLenLocal 01EE  
                  ??_OsTmr_GetTimerStatus 0097              LedPulseStateMachine@LedPulse 008A  
                         __end_of_initFsm 4606                           __end_of_isalpha 64D8  
                         __end_of_isdigit 676C                 saveNumberInMemory@address 0098  
                                   atoi@a 0088                                     atoi@s 0083  
                  Eeprom_Write@DataLength 0091                               _ClearBuffer 637A  
                         __end_of_isspace 65E4               I2cSlv_QueryI2cData@RxBuffer 00A5  
              I2c_WriteData@I2cWriteState 0036                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 6728  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 6632                      triggerRelay@txBuffer 0087  
               __end_of_Rtcc_GetRtccValue 4D60               I2cSlv_QueryI2cData@TxBuffer 00A2  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 54D2  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 59B2                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                                     wtemp6 0043  
                         __end_of_sprintf 3AE2                           __end_of_tolower 6900  
                     __end_of_Mcu_Int0Isr 6AC2                       __end_of_Mcu_Int1Isr 6ABE  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 6918                      __end_of_Eeprom_Reset 5F4E  
                  __end_of_GetElapsedTime 3ED4                     __end_of_UartSetConfig 58AA  
                    __end_of_Eeprom_Write 5BA8                          delCmdFsm@smsText 0113  
                  __size_of_initGprsModem 0094                            ?_isNumberValid 007D  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 68B4                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2BCC                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 6590  
                          _InitSchedTimer 6508                           __initialization 2180  
             __size_of_saveNumberInMemory 001A                          __end_of_MdmCntSm 46AE  
                    __end_of_I2c_ReadData 2180                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 4126                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 34F6                              __end_of_atoi 386E  
                            __end_of_main 6A4A                       StringCompare@Result 0085  
                            __end_of_itoa 6060                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01DE                              __end_of_utoa 455E  
                            __end_of_xtoi 34F6                  __end_of_Rtcm_SetRtccDate 5A5A  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 6A7E              __size_of_I2cSlv_QueryI2cData 00D2  
                    Term_MainSm@TermDelay 03D2                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE49                 __size_of_USBCtrlEPService 0094  
                          ?_triggerCmdFsm 0111                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4BA2  
                           ?_initPreamble 007D                                _ReceiveEvt 6536  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 69F2                            ?_StringCompare 007D  
                        __end_of_Terminal 05EC                      initFsm@isInitialized 0103  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 5134                              _cdc_mem_type 01DF  
                      ??_Mcu_ConfigExtInt 007D                          addCmdFsm@smsText 0113  
                       CheckModem@Timeout 03F3                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00BC  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 3D44  
              _Uart_MdmGsmGprsReadService 3C7A                __end_of_UsbDevice_MainTask 6656  
                         getsUSBUSART@len 0086                      __end_of_getSetupCall 67CE  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 67EE  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 5A5A  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1412 6308                               _GenerateEvt 6918  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                     triggerRelay@isRelayOn 0086  
               Uart_Uart1RxIsr@UartRxData 002A                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC30                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                        ?_GetCallerNumber 0083                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F5  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 553E  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 6536  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 6AB2                                _UartConfig 031A  
                    __end_of_Mdm_MainTask 5CEC                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CD                             ??_Term_MainSm 00A7  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 5F94                                    _SmsLen 00D4  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 5E26  
                                  ___lmul 58AA                      _I2cSlv_ReceiveI2cMsg 60E8  
                      TurnOnModem@Counter 02DC                              ?_putUSBUSART 0083  
                                  ___wmul 65E4                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                        _Mdm_SetSmsFormat 5CEC                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 5AAE                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 4C38                      ??_Mdm_RequestSmsData 0080  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                 isMasterNumber@phoneNumber 0100  
                       _USBEnableEndpoint 5FD8           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                     addCmdFsm@isComplete 0115                                    _memcpy 5EBE  
                  __size_of_HttpGetMethod 04D0                                    _memset 6478  
                                  clear_0 2238                                    clear_1 224A  
                                  clear_2 2256                                    clear_3 2262  
                                  clear_4 226E                                    clear_5 227A  
                       parseCommand@F9021 FC22                                    clear_6 2286  
                                  clear_7 2292                                    clear_8 229E  
                                  clear_9 22AA                         parseCommand@F9017 FC2A  
                       parseCommand@F9019 FC26                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E6                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01EB                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01F1  
                      ?_USBEnableEndpoint 0085                            ??_initPreamble 007F  
                                  _strcat 57F6                                    _strcpy 6416  
                                  _strlen 6168                                    _strtol 181C  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 629A                  HttpGetMethod@UartMessage 0100  
                               ??_initFsm 00B0                             _initGprsModem 4D60  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                            __pdataCOMRAM 0040                                 ??_isalpha 0080  
                               ??_isdigit 007D                            ??_SetAckStatus 007D  
                     ModemEvtParser@F9110 03CC                       ModemEvtParser@F9112 03C7  
                     ModemEvtParser@F9114 03C2                       ModemEvtParser@F9116 04E0  
                            _CDCTxService 281C                       MdmCntSm@MdmCntState 002C  
              Mdm_SetSmsFormat@TextFormat 0098                          ?_LedStateMachine 008F  
                            __mediumconst FC0E                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                              _callerNumber 033C  
                                  tblptrh 000FF7                                 ??_isupper 007D  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 6AAA                       ??_USBEnableEndpoint 0086  
                             _MdmStsReady 0037                   __end_of_I2cSlv_MainTask 5A06  
                         _InitGprsNetwork 0DC8                             ??_Tmr_Tmr2Isr 0023  
                            ??_I2cDummyTx 0021                 OsTmr_GetTimerStatus@Timer 0095  
                             _Mcu_Int0Isr 6ABE                               _Mcu_Int1Isr 6ABA  
                    ?_Led_SetLedBlinkTime 007D                        __size_of_addCmdFsm 00C6  
                               ??_sprintf 0083                                 ??_tolower 007D  
                       parseCommand@state 0094                    __size_of_ScheduleTasks 0126  
                 delCmdFsm@receivedNumber 0111                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 00A7  
                    _controlTransferState 00CC                     __end_ofi1_GenerateEvt 6972  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 4F12  
              __size_of_Rtcc_GetRtccValue 0094                             ?_parseCommand 0001  
                      _ExtInt1IsrCallback 02E4                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 22C8  
                      Eeprom_Read@ReadSts 00AE                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                           ??_isNumberValid 007F  
                  __end_of_EnableReceiver 6AB6                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01FC                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 5DD8  
                        ??_isMasterNumber 00B0           I2cSlv_QueryI2cData@TimeoutTimer 0349  
                    Terminal@FormatOption 02ED                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 56D8                            __pcstackBANK10 0A00  
                      __size_of_delCmdFsm 00A2                  isMasterNumber@readBuffer 0102  
                   I2cDummyTx@DummyBuffer 01FD                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032                       initFsm@currentState 01D8  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02E0  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 601C                               _InitNetwork 00DB  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE5F                             __end_of_sd001 FE32  
                           __end_of_sd002 FE14                              __pidataBANK1 6AC4  
                            __pidataBANK2 6A30                              __pidataBANK3 6222  
                            __pidataBANK4 6A56                              __pidataBANK5 5C4C  
               __end_ofparseCommand@F9021 FC26                 __end_ofparseCommand@F9017 FC2E  
               __end_ofparseCommand@F9019 FC2A                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 60A4  
                     __size_of_CheckModem 0152                           ??_triggerCmdFsm 00B0  
              __end_of_Uart_ClearRxBuffer 63E4             __size_of_USBConfigureEndpoint 0098  
             parseCommand@deleteNumberCmd 008C                   addCmdFsm@numberInMemory 0117  
                __size_of_InitializeTasks 0074                        __end_of_I2cDummyTx 6880  
             __end_of_USBCtrlTrfInHandler 41E8                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                 __size_of_isNumberInMemory 0074  
                     __end_of_Term_MainSm 135A                 initGprsModem@currentState 01DA  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 695C  
                      __size_of_detectCmd 009C                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01E5  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 003E  
                              _SystemInit 6448                                _cdc_notice 044F  
                   __end_of_Tmr_TmrBPrSet 3242                     __end_of_waitSetupCall 5D8A  
                     __end_of_Rtcc_RtcIsr 6ABA                                _cdc_rx_len 00C7  
                       __end_of_MsgFormat FD22                                _cdc_tx_len 00C5  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 630E  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01E0  
                          ClearBuffer@Len 007F                           _secondsAppTimer 4756  
        __end_of_GetLastInteractionNumber 6A56                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 6590                    _USBStdGetStatusHandler 42A6  
                       __end_of_SendSmsSm 1BAA                     __size_of_Eeprom_Reset 0048  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01ED  
                          _Rtcc_RtcConfig 489A                     __size_of_Eeprom_Write 0052  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                          ??_parseCommand 0088                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 0572  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 6988  
             isNumberInMemory@phoneNumber 0100                  __end_of_Uart_WriteString 6222  
                 addCmdFsm@masterOpResult 0116              getSetupCall@isCalledReceived 0083  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 66C2                               _SetBaudRate 5DD8  
                           ?_savePreamble 0001                     __end_of_findEmptySpot 5BFA  
               initGprsModem@modemCounter 03BE               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01EF                               _pBDTEntryIn 00B6  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 3154  
                               ?_TmrBInit 007D                             _CheckTxStatus 6A7E  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                                 ?_Terminal 0001  
                    Eeprom_Write@WriteSts 0092                                   ?___lmul 007D  
                            _Led_MainTask 3AE2                            _Rtcc_UnlockRtc 69D2  
                            _I2cBusStatus 01E7                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2CFA  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 2022  
                       __end_of_addCmdFsm 4062                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE49  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4C38  
                   __end_of_UpdateSchFlag 6864                              _EepromBuffer 04BB  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D9  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 2F44  
                       __end_of_WriteByte 6A74                        _USBCheckStdRequest 35DA  
                       _configDescriptor1 FDAB                              _Eeprom_Reset 5F06  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04A7  
                            _Eeprom_Write 5B56                     __size_of_getSetupCall 0020  
             __end_of_USBCtrlTrfTxService 3796                         triggerRelay@F9003 03D0  
                     _USBStdSetCfgHandler 332A                         __end_of_delCmdFsm 489A  
                 __size_of_ConfigureModem 00D4                    I2cSlv_QueryI2cData@Ret 01E4  
               Eeprom_Write@MemoryAddress 0093                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 6564                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 493A  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 008F  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2022  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 4062                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DC            __end_of_Pm_DsReleasePinControl 6AA0  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 00E4                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E2                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 0028                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FB                       _I2cSlv_QueryI2cData 3942  
                                 _Led2Sts 01F9                                   _Led3Sts 01F7  
              __end_of_Sch_SchmIntService 6A30                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 008F                             _cdc_trf_state 00C6  
                              ??_ReadByte 007D                            ??_savePreamble 0096  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 6AA6  
                    __end_of_initPreamble 6848                    initEeprom@currentState 01D9  
                       __end_of_detectCmd 4A74                          _ComChecCompleted 0029  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 669E  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                               ?_StringCopy 0085  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 00D8  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 5466                    __end_of_Rtcc_UnlockRtc 69E2  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 699C                                _initEeprom 4F9E  
                             _Term_MainSm 10B6   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD22                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 680C                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 6946             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 502A                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 5314                                   ___lldiv 50B0  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                 triggerCmdFsm@isComplete 0113                                   ___lwdiv 5B02  
                       ??_USBStallHandler 007D                                   ___lwmod 6060  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                              _getSetupCall 67AE  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 6AB6                      __size_of_putUSBUSART 0022  
                                 __pcinit 2180                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CF  
                     __end_of_TurnOnModem 5EBE                           __size_of_memset 0030  
                 initEeprom@isInitialized 0102                                 _I2cConfig 0354  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDEE  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 0091  
                             Terminal@Len 03B2                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 6A3E                                   __ptext1 6448  
                                 __ptext2 6A60                                   __ptext3 6A9A  
                                 __ptext4 67EE                                   __ptext5 6880  
                                 __ptext6 6590                                   __ptext7 6508  
                                 __ptext8 3D44                                   __ptext9 3154  
                                 _inPipes 00B0                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 47F8  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                                 _initFsm 455E                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 64A8  
                                 _isdigit 674A            isNumberInMemory@memoryOpResult 010F  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B0  
                             ?_SystemInit 0001                                   clear_10 22B6  
                                 clear_11 22C2                          ___awmod@dividend 007D  
                       ??_InitializeTasks 03FE                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 01D3       __end_of_Tmr_RegisterTmr2IsrCallback 6A6A  
             _Tmr_RegisterTmr2IsrCallback 6A60                                   _isspace 65BA  
                            _Mdm_MainTask 5C9C                                   _isupper 6706  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                                   _smsText 0493  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 242C                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC30                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 669E                                   _sprintf 3A14  
                                 _tolower 68E8           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 6A12                          _HttpGetDataLocal 03A5  
                __end_of_Mdm_SetSmsFormat 5D3C                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 4408                                   _toupper 6900  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 22C8                              _getsUSBUSART 4BA2  
                            ?_Eeprom_Read 00A9                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00DC               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC22       Irq_InitIntController@PerInt_LowPInt 007E  
               triggerCmdFsm@currentState 01D5                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC0E  
                          _ModemEvtParser 1D32                                   int_func 4408  
                               i1u1601_20 2442                           _USB1msTickCount 0310  
         _dummy_encapsulated_cmd_response 0379                                 i1u1605_28 2562  
                               i1u1605_29 2576                  _GetLastInteractionNumber 6A4A  
                               i1u1626_28 66AE                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                __end_of_saveNumberInMemory 68E8  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 682A  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 15EE                         _Rtcc_SetRtcStatus 6930  
                     _ActivateRiDetection 003F                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 6416  
                           StringCopy@Len 0089                         ?_MdmHttp_MainTask 0001  
                I2cSlv_QueryI2cData@RxLen 00A7                   _USBCtrlEPAllowDataStage 493A  
                      _UsbDevice_MainTask 6632                  I2cSlv_QueryI2cData@TxLen 00A4  
                            _Mcu_ClearWdg 6AA6                 Eeprom_Reset@memoryAddress 00C4  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     ??_I2cSlv_QueryI2cData 00A9  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 3054                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01E8                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 26D4                           _RtccIsrCallback 02E8  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F3  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
                        _isNumberInMemory 52A0                      __end_of_parseCommand 3054  
              _USBStatusStageEnabledFlag1 00C8                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 66E4  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0300                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                         _Mdm_HangPhoneCall 69AE  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 678E  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 0087  
                        __CFG_CPUDIV$OSC1 000000                        ?_Mdm_HangPhoneCall 0001  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02EA  
                        _HttpGetMethodSts 01EC                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                  isNumberValid@phoneNumber 007D  
                      _BothEP0OutUOWNsSet 01E1                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 0068                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0035                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 1EB4  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D6                     __end_of_StopCondition 6AAE  
                __size_of_HighPriorityIsr 44AC                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 0370  
                               _Led2Blink 0367                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 035E              __end_of_USBTransferOnePacket 42A6  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0394  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 6946  
                               _Led2Pulse 038E                                 _Led3Pulse 0388  
                       _I2cSlv_SendI2cMsg 61A6           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                           ??_ScheduleTasks 04EA  
                          _Tmr_TmrBConfig 3D44                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 69AE                         _OsAlrm_SetOsAlarm 3ED4  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 5E26  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 5E72                                 _ClipEvent 00DF  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
           saveNumberInMemory@phoneNumber 0096                                 _GetMethod 00DA  
                  _USBCtrlTrfSetupHandler 4F12                        ?_OsAlrm_SetOsAlarm 0083  
                Eeprom_Reset@SlaveAddress 0085                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 242C     __end_of_USBIncrement1msInternalTimers 6706  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 66E4  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 5902  
                          _CheckAckStatus 6A88                            __end_of___wmul 660C  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 69C0  
                           __pidataCOMRAM 6AC2               triggerCmdFsm@numberInMemory 0114  
                  __size_of_UartWriteByte 0020                   addCmdFsm@receivedNumber 0111  
                          __end_of_memcpy 5F06                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002B                            __end_of_memset 64A8  
                      _UartTxBufferStatus 5D8A                       ??_OsAlrm_SetOsAlarm 008B  
                    __end_of_savePreamble 68CE                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E2  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6A22  
                               _MdmStatus 00D2                            __end_of_strcat 5852  
                          __end_of_strcpy 6448                            __end_of_strlen 61A6  
                          __end_of_strtol 19F2                       start_initialization 2180  
         isNumberInMemory@currentPosition 0041                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 386E  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003B  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 63B0  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4B0C                     __size_of_initPreamble 001E  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC32  
                      __end_of_MyApp_Task 35DA                          _UpdateOsCounters 6A02  
                         ?_ModemEvtParser 0001                             ?_triggerRelay 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3C7A                 __end_of_I2cSlv_SendI2cMsg 61E4  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4CCC                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 69F2  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3E0C                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 3F9C                    __end_of_Tmr_TmrBIrqSet 5E72  
                               _TaskTable 05A4                                 _RingEvent 00E0  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D5                     __end_of_isNumberValid 56D8  
            isMasterNumber@memoryOpResult 010F                         __size_of_ReadByte 000A  
                               _RtcConfig 03BA                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 5852  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 6564  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 689A  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 6A92  
                                ??___lmul 0085                             _isxdigit$6681 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2BCC                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 51B6                        HttpGetMethod@Index 01C8  
                             __pdataBANK1 01FE                               __pdataBANK2 02F3  
                             __pdataBANK3 03C2                isNumberInMemory@readBuffer 0102  
                             __pdataBANK4 04E0                               __pdataBANK5 05A4  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                   detectCmd@currentState 0095                     __end_of_triggerCmdFsm 522C  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                               _addCmdFsm 3F9C                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 5B02                    __end_of_ConfigureModem 3942  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D7  
          __end_of_USBStdGetStatusHandler 4358                              _initPreamble 682A  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC32  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5C4C                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200                             __pcstackBANK3 03FE  
            __size_of_USBCtrlTrfInHandler 00C2                             __pcstackBANK4 04EA  
                         RiSm@MdmDrvState 002D                              _SetAckStatus 6988  
                            _isalpha$6671 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 6A6A                       __size_of_initEeprom 008C  
                            _isdigit$6405 007E                      ?_USBStdGetDscHandler 0001  
           UpdateSchFlag@InterruptCounter 02DE                            ??_triggerRelay 0085  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 6128  
                               _delCmdFsm 47F8       InitGprsNetwork@GprsNetInitNextState 00D1  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 67CE  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 62D4  
            __end_of_LedBlinkStateMachine 281C                               sprintf@flag 0083  
                    __size_of_Eeprom_Read 0054                           _USBStallHandler 5F94  
                              ?_SendSmsSm 0001                              _pBDTEntryOut 0306  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 00A0                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 6880                __end_of_USBCheckCDCRequest 4408  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 595A  
                         ?_Tmr_TmrBIrqSet 007D                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 67AE  
                            ??_StringCopy 008B                          _Led_SetLedStatus 64D8  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 676C                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_parseCommand 0110  
                  __size_of_waitSetupCall 004E                                 _detectCmd 49D8  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
             findEmptySpot@memoryOpResult 010D             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC0E                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 4F9E                                 __ptext101 49D8  
                               __ptext110 47F8                                 __ptext102 2F44  
                               __ptext111 3F9C                                 __ptext103 69F2  
                               __ptext120 5134                                 __ptext112 68CE  
                               __ptext104 6656                                 __ptext121 60E8  
                               __ptext113 5B56                                 __ptext105 667A  
                               __ptext130 1D32                                 __ptext122 676C  
                               __ptext114 52A0                                 __ptext106 69AE  
                           Terminal@Index 00A6                                 __ptext131 63B0  
                               __ptext123 5AAE                                 __ptext115 53F8  
                               __ptext107 553E                                 __ptext140 4606  
                               __ptext132 5BFA                                 __ptext124 5F06  
                               __ptext116 5BA8                                 __ptext108 6A4A  
                               __ptext141 6A92                                 __ptext133 2A9A  
                               __ptext125 61A6                                 __ptext117 5672  
                               __ptext109 6344                                 __ptext150 4DF4  
                               __ptext142 0DC8                                 __ptext134 386E  
                               __ptext126 5852                                 __ptext118 5A5A  
                               __ptext151 3E0C                                 __ptext143 05EC  
                               __ptext135 0ABC                                 __ptext127 5E72  
                               __ptext119 3942                                 __ptext160 65E4  
                               __ptext152 69C0                                 __ptext144 61E4  
                               __ptext136 2962                                 __ptext128 19F2  
                               __ptext161 5386                                 __ptext153 637A  
                               __ptext145 60A4                                 __ptext137 58AA  
                               __ptext129 6128                                 __ptext170 6AAA  
                               __ptext162 5DD8                                 __ptext154 46AE  
                               __ptext146 67CE                                 __ptext138 5902  
                               __ptext171 6AAE                                 __ptext163 50B0  
                               __ptext155 3242                                 __ptext147 5D8A  
                               __ptext139 2582                                 __ptext180 6A22  
                               __ptext172 6988                                 __ptext164 6564  
                               __ptext156 64D8                                 __ptext148 56D8  
                               __ptext181 6848                                 __ptext173 6A74  
                               __ptext165 4062                                 __ptext157 26D4  
                               __ptext149 5798                                 __ptext190 6A12  
                               __ptext182 6A02                                 __ptext174 6918  
                               __ptext166 6536                                 __ptext158 5B02  
                               __ptext191 3C7A                                 __ptext183 242C  
                               __ptext175 6AB2                                 __ptext167 1EB4  
                               __ptext159 3ED4                                 __ptext192 6972  
                               __ptext184 660C                                 __ptext176 6A7E  
                               __ptext168 2022                                 __ptext193 6AB6  
                               __ptext185 595A                                 __ptext177 6A88  
                               __ptext169 6A6A                                 __ptext194 6ABA  
                               __ptext186 6864                                 __ptext195 6ABE  
                               __ptext187 62D4                                 __ptext179 669E  
                                ?___awmod 007D                        _Sch_SchmIntService 6A22  
                               __ptext196 0000                                 __ptext188 695C  
                         _InitializeTasks 522C                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                   findEmptySpot@readBuffer 0100  
                         _CallClosedEvent 003C                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                 isNumberValid@isNumberOk 0080                   __size_of_isMasterNumber 006E  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 04D5  
                              ?_addCmdFsm 0111                   Eeprom_Write@WriteBuffer 008F  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 039A                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 41E8  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                                  ?_initFsm 0001  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 03A0            InitializeTasks@ActiveTaskIndex 04EA  
                  __size_of_findEmptySpot 0052                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 553E  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                ??_GetLastInteractionNumber 007F  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 560C                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 560C  
              ConfigureModem@DelayCounter 02D8                        __end_of_StringCopy 573A  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00E1  
                         Terminal@SwTimer 04CA                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054                            _setupCallTicks 03C0  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                ?_delCmdFsm 0111  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02DA  
                        _OsTmr_StartTimer 5798                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E                  __end_of_isNumberInMemory 5314  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 695C                __end_of_Mcu_StartSystemPll 680C  
                            _parseCommand 2F44                              _PhoneNumbLen 00D3  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 66C2  
                           _Rtcm_MainTask 4E84                            ___wmul@product 0081  
                ModemEvtParser@ClipString 0099                          SendSmsSm@SwTimer 03E8  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 01F3  
         HttpGetMethod@GetMethodNextState 00D0                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 5386                         _IncomingCallEvent 003D  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 6478                                  _RCONbits 000FD0  
                              ?_detectCmd 0001                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001                     __size_of_savePreamble 001A  
            __end_of_OsTmr_GetTimerStatus 4E84                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A8  
                    _USBConfigureEndpoint 4A74                     delCmdFsm@currentState 01D6  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 68CE                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 2582                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 660C                     __end_of_initGprsModem 4DF4  
                     ??_I2c_InitI2cModule 00A4                            delCmdFsm@F9004 FC0F  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 6A9A  
                  __end_of_Mdm_GetSmsData 55A6                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E3                                  _ApnLocal 02D6  
                          _StartCondition 6AAE                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0081               HttpGetMethod@GetMethodState 01E9  
                           _Tmr_TmrBPrSet 3154                             _waitSetupCall 5D3C  
                     ?_saveNumberInMemory 0096                         _NewStringReceived 003A  
                            _isspace$6674 007E                          _UartSetConfigLow 5902  
                                _GetSmsSm 2A9A                   __end_of_USBStallHandler 5FD8  
                    Mdm_DrvMainFn@Options 0001                            _memoryPreamble 03AA  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DD  
                                _MdmCntSm 4606                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 2194  
                               copy_data1 21B4                                 copy_data2 21D4  
                               copy_data3 220C              __end_of_LedPulseStateMachine 332A  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 3410                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 6A74  
                           i2_GenerateEvt 6972                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE5B  
               __end_of_I2c_InitI2cModule 53F8                                  _MsgReady FE32  
                         ??_Term_MainTask 00A7                              _savePreamble 68B4  
                 __end_of_InitializeTasks 52A0                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001                            isNumberValid@i 0081  
                           _findEmptySpot 5BA8               __end_of_I2cSlv_QueryI2cData 3A14  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 4B0C                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                      ??_saveNumberInMemory 0098  
                            ?_TurnOnModem 0001                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DE  
                         _SetUartBaudRate 2962              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EB4                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 6A12  
                    __end_of_triggerRelay 6344                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EE                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                  __end_ofdelCmdFsm@F9004 FC1C                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                             ??_addCmdFsm 00B0                             _UpdateSchFlag 6848  
                     __end_of_putUSBUSART 674A                               _line_coding 0381  
                            _Rtcc_LockRtc 69E2              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 26D4               triggerCmdFsm@receivedNumber 0111  
                  __end_of_StartCondition 6AB2                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01F0  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 0088  
                         ?_Mdm_GetSmsData 008F                  I2c_WriteData@WriteStatus 0033  
                            _isupper$6677 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0031                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 00A8                            ?_waitSetupCall 0001  
                        ??_ModemEvtParser 008F                          _GetOsTickCounter 69C0  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0188                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03AE                  ModemEvtParser@RingString 00A3  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 5E26  
                                __ptext11 678E                                  __ptext20 6632  
                                __ptext12 4B0C                                  __ptext21 5F4E  
                                __ptext13 680C                           ??_UartWriteByte 007E  
                                __ptext30 63E4                                  __ptext22 5C9C  
                                __ptext14 2CFA                                  __ptext31 5F94  
                                __ptext23 59B2                                  __ptext15 522C  
                                __ptext40 332A                                  __ptext32 66E4  
                                __ptext24 6AA0                                  __ptext16 34F6  
                                __ptext41 42A6                                  __ptext33 22D6  
                                __ptext25 66C2                                  __ptext17 689A  
                                __ptext50 2E20                                  __ptext42 2BCC  
                                __ptext34 4C38                                  __ptext26 699C  
                                __ptext18 4E84                                  __ptext51 3BAE  
                                __ptext43 135A                                  __ptext35 5EBE  
                                __ptext27 6AA6                                  __ptext19 3AE2  
                                __ptext60 00D0                                  __ptext52 4126  
                                __ptext44 573A                                  __ptext36 4F12  
                                __ptext28 1BAA                                  __ptext61 3410  
                                __ptext53 36BE                                  __ptext45 4358  
                                __ptext37 3054                                  __ptext29 629A  
                                __ptext70 6728                                  __ptext62 68E8  
                                __ptext54 281C                                  __ptext46 5466  
                                __ptext38 493A                                  __ptext71 601C  
                                __ptext63 625E                                  __ptext55 10B6  
                                __ptext47 5FD8                                  __ptext39 35DA  
                                __ptext80 15EE                                  __ptext72 44B4  
                                __ptext64 181C                                  __ptext56 6168  
                                __ptext48 4A74                                  __ptext81 5314  
                                __ptext73 6060                                  __ptext65 6900  
                                __ptext57 57F6                                  __ptext49 55A6  
                                __ptext90 51B6                                  __ptext82 502A  
                                __ptext74 4BA2                                  __ptext66 65BA  
                                __ptext58 3A14                                  __ptext91 630E  
                                __ptext83 69E2                                  __ptext75 41E8  
                                __ptext67 64A8                                  __ptext59 6478  
                                __ptext92 455E                                  __ptext84 560C  
                                __ptext76 3796                                  __ptext68 6706  
                                __ptext93 5D3C                                  __ptext85 4CCC  
                                __ptext77 674A                                  __ptext69 6416  
                                __ptext94 67AE                                  __ptext86 6930  
                                __ptext78 5A06                                  __ptext95 68B4  
                                __ptext87 489A                                  __ptext79 69D2  
                                __ptext96 682A                                  __ptext88 6946  
                                __ptext97 4D60                                  __ptext89 54D2  
                                __ptext98 4756                                  __ptext99 5CEC  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 6864                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 502A                     __end_of_HttpGetMethod 0ABC  
                    delCmdFsm@emptyNumber 0115                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                               ??_delCmdFsm 00B0  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                           triggerRelay@res 0085  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 002E  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                       _Mdm_IsSmsReceived 6656               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 4F9E                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
               Mdm_GetSmsData@MessageText 008F                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                            ?_findEmptySpot 0001  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 6A88  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 6AA0  
                      ??_USBCtrlEPService 0097                                  _isxdigit 625E  
                           _Mdm_IsRinging 667A                       _USBCtrlTrfInHandler 4126  
                I2c_ReadData@I2cReadState 0032                __end_of_Mdm_RequestSmsData 6A02  
                             ??_detectCmd 0095                     __end_of_ScheduleTasks 2E20  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 55A6  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 008D                 _USBCtrlEPAllowStatusStage 3BAE  
                     ??_Mdm_IsSmsReceived 0081                            _receivedNumber 032F  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 03FE  
                              strtol@sign 0093                           Term_MainSm@Data 0461  
                     delCmdFsm@isComplete 0122                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
                          _isMasterNumber 53F8                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 62D4  
                __end_of_Mcu_ConfigExtInt 689A                             ?_Eeprom_Reset 0001  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00C9  
                CDCTxService@byte_to_send 0085                             ?_Eeprom_Write 008F  
           I2c_WriteData@TentativeCounter 0034                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 678E                  __end_of_Led_SetLedStatus 6508  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 5A06  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 667A  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    parseCommand@resetCmd 0090                      _OsTmr_GetTimerStatus 4DF4  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0156  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5798  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 573A                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2A9A  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084                    MyApp_Task@currentState 01DB  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 009E  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 60E8  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                         _GetCallerNumber 6344                  __end_of_Rtcm_GetRtccDate 5672  
                             _putUSBUSART 6728                 Eeprom_Write@CommandLength 0095  
                     _USBCtrlTrfRxService 2E20                    __end_of_isMasterNumber 5466  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 629A                             ?_getSetupCall 0001  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 57F6  
                    _LedPulseStateMachine 3242                        _USBCheckCDCRequest 4358  
                     _USBCtrlTrfTxService 36BE                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                            ??_Eeprom_Reset 0085  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                           _isMemoryEmpty 01FE                            ??_Eeprom_Write 0092  
                        _Rtcc_AlarmConfig 54D2                           ??_Tmr_TmrBPrSet 009A  
                         ??_waitSetupCall 0093                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01DD  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 5F4E  
                  __size_of_isNumberValid 0066                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 65BA  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                 delCmdFsm@numberInMemory 0123                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CB                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 0039       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                           ??_Eeprom_Read 00AC                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 46AE          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                         ??_findEmptySpot 00B0                             _StopCondition 6AAA  
                   ??i1_I2cSlv_SendI2cMsg 0020                         ?_isNumberInMemory 0100  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 00CA  
                        Mdm_IsRinging@Ret 0081                    __size_of_triggerCmdFsm 0076  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 63B0  
                    __end_of_CDCTxService 2962                        ??_isNumberInMemory 00B0  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC2E                     __size_of_triggerRelay 0036  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F2                   _UsbMasterPhoneNumberLen 0318  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 699C  
