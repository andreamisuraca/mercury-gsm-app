

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr  2 20:43:47 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1,group=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	text169,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	text171,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	text178,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	text180,global,reloc=2,class=CODE,delta=1
   218                           	psect	text181,global,reloc=2,class=CODE,delta=1
   219                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   220                           	psect	text183,global,reloc=2,class=CODE,delta=1
   221                           	psect	text184,global,reloc=2,class=CODE,delta=1
   222                           	psect	text185,global,reloc=2,class=CODE,delta=1
   223                           	psect	text186,global,reloc=2,class=CODE,delta=1
   224                           	psect	text187,global,reloc=2,class=CODE,delta=1
   225                           	psect	text188,global,reloc=2,class=CODE,delta=1
   226                           	psect	text189,global,reloc=2,class=CODE,delta=1
   227                           	psect	text190,global,reloc=2,class=CODE,delta=1
   228                           	psect	text191,global,reloc=2,class=CODE,delta=1
   229                           	psect	text192,global,reloc=2,class=CODE,delta=1
   230                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   231                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   232                           	psect	text194,global,reloc=2,class=CODE,delta=1
   233                           	psect	text195,global,reloc=2,class=CODE,delta=1
   234                           	psect	text196,global,reloc=2,class=CODE,delta=1
   235                           	psect	text197,global,reloc=2,class=CODE,delta=1
   236                           	psect	text198,global,reloc=2,class=CODE,delta=1
   237                           	psect	text199,global,reloc=2,class=CODE,delta=1
   238                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   239                           	psect	text200,global,reloc=2,class=CODE,delta=1
   240                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   241                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   242                           	dabs	1,0x400,48,_BDT
   243                           	dabs	1,0x438,8,_CtrlTrfData
   244                           	dabs	1,0x430,8,_SetupPkt
   245  0000                     
   246                           ; Version 1.45
   247                           ; Generated 16/11/2017 GMT
   248                           ; 
   249                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   250                           ; All rights reserved.
   251                           ; 
   252                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   253                           ; 
   254                           ; Redistribution and use in source and binary forms, with or without modification, are
   255                           ; permitted provided that the following conditions are met:
   256                           ; 
   257                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   258                           ;        conditions and the following disclaimer.
   259                           ; 
   260                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   261                           ;        of conditions and the following disclaimer in the documentation and/or other
   262                           ;        materials provided with the distribution.
   263                           ; 
   264                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   265                           ;        software without specific prior written permission.
   266                           ; 
   267                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   268                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   269                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   270                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   271                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   272                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   273                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   274                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   275                           ; 
   276                           ; 
   277                           ; Code-generator required, PIC18F46J50 Definitions
   278                           ; 
   279                           ; SFR Addresses
   280  0000                     
   281                           	psect	idataBANK0
   282  006DC4                     __pidataBANK0:
   283                           	opt stack 0
   284                           
   285                           ;initializer for findEmptySpot@currentPosition
   286  006DC4  20                 	db	32
   287                           
   288                           ;initializer for isNumberInMemory@currentPosition
   289  006DC5  20                 	db	32
   290                           
   291                           ;initializer for MyApp_Task@isCmdSuccessfull
   292  006DC6  01                 	db	1
   293                           
   294                           	psect	idataBANK1
   295  006DC7                     __pidataBANK1:
   296                           	opt stack 0
   297                           
   298                           ;initializer for _isMemoryEmpty
   299  006DC7  01                 	db	1
   300                           
   301                           ;initializer for InitGprsNetwork@GprsInitSts
   302  006DC8  01                 	db	1
   303                           
   304                           	psect	idataBANK2
   305  006D16                     __pidataBANK2:
   306                           	opt stack 0
   307                           
   308                           ;initializer for Terminal@EchoOption
   309  006D16  01                 	db	1
   310                           
   311                           ;initializer for _MainSystemTimebaseFlag
   312  006D17  01                 	db	1
   313                           
   314                           ;initializer for _ConnTimeout
   315  006D18  00                 	db	0
   316  006D19  01                 	db	1
   317  006D1A  0000               	dw	0
   318  006D1C  0000               	dw	0
   319  006D1E  0000               	dw	0
   320  006D20  0000               	dw	0
   321  006D22  00                 	db	0
   322                           
   323                           ;initializer for _relayBuffer
   324  006D23  50                 	db	80
   325  006D24  00                 	db	0
   326                           
   327                           	psect	idataBANK3
   328  006516                     __pidataBANK3:
   329                           	opt stack 0
   330                           
   331                           ;initializer for ModemEvtParser@F9115
   332  006516  2B                 	db	43
   333  006517  43                 	db	67
   334  006518  4D                 	db	77
   335  006519  54                 	db	84
   336  00651A  49                 	db	73
   337                           
   338                           ;initializer for ModemEvtParser@F9113
   339  00651B  2B                 	db	43
   340  00651C  43                 	db	67
   341  00651D  4C                 	db	76
   342  00651E  49                 	db	73
   343  00651F  50                 	db	80
   344                           
   345                           ;initializer for ModemEvtParser@F9111
   346  006520  52                 	db	82
   347  006521  49                 	db	73
   348  006522  4E                 	db	78
   349  006523  47                 	db	71
   350                           
   351                           ;initializer for Term_MainSm@TermDelay
   352  006524  01                 	db	1
   353  006525  01                 	db	1
   354  006526  0000               	dw	0
   355  006528  0000               	dw	0
   356  00652A  0000               	dw	0
   357  00652C  0000               	dw	0
   358  00652E  00                 	db	0
   359                           
   360                           ;initializer for _ConnWait
   361  00652F  00                 	db	0
   362  006530  01                 	db	1
   363  006531  0000               	dw	0
   364  006533  0000               	dw	0
   365  006535  0000               	dw	0
   366  006537  0000               	dw	0
   367  006539  00                 	db	0
   368                           
   369                           ;initializer for SendSmsSm@SwTimer
   370  00653A  01                 	db	1
   371  00653B  01                 	db	1
   372  00653C  0000               	dw	0
   373  00653E  0000               	dw	0
   374  006540  0000               	dw	0
   375  006542  0000               	dw	0
   376  006544  00                 	db	0
   377                           
   378                           ;initializer for CheckModem@Timeout
   379  006545  00                 	db	0
   380  006546  01                 	db	1
   381  006547  0000               	dw	0
   382  006549  0000               	dw	0
   383  00654B  0000               	dw	0
   384  00654D  0000               	dw	0
   385  00654F  00                 	db	0
   386                           
   387                           ;initializer for _blinkInSeconds
   388  006550  FFFF               	dw	65535
   389                           
   390                           	psect	idataBANK4
   391  006D58                     __pidataBANK4:
   392                           	opt stack 0
   393                           
   394                           ;initializer for ModemEvtParser@F9117
   395  006D58  43                 	db	67
   396  006D59  61                 	db	97
   397  006D5A  6C                 	db	108
   398  006D5B  6C                 	db	108
   399  006D5C  20                 	db	32
   400  006D5D  52                 	db	82
   401  006D5E  65                 	db	101
   402  006D5F  61                 	db	97
   403  006D60  64                 	db	100
   404  006D61  79                 	db	121
   405                           
   406                           	psect	idataBANK5
   407  005F00                     __pidataBANK5:
   408                           	opt stack 0
   409                           
   410                           ;initializer for _TaskTable
   411  005F00  A2                 	db	low _Mdm_DrvMainFn
   412  005F01  6D                 	db	high _Mdm_DrvMainFn
   413  005F02  00                 	db	0
   414  005F03  0000               	dw	0
   415  005F05  000A               	dw	10
   416  005F07  00                 	db	0
   417  005F08  B8                 	db	low _I2cSlv_MainTask
   418  005F09  5C                 	db	high _I2cSlv_MainTask
   419  005F0A  00                 	db	0
   420  005F0B  0000               	dw	0
   421  005F0D  0001               	dw	1
   422  005F0F  00                 	db	0
   423  005F10  50                 	db	low _Mdm_MainTask
   424  005F11  5F                 	db	high _Mdm_MainTask
   425  005F12  00                 	db	0
   426  005F13  0000               	dw	0
   427  005F15  0001               	dw	1
   428  005F17  00                 	db	0
   429  005F18  02                 	db	low _MdmHttp_MainTask
   430  005F19  62                 	db	high _MdmHttp_MainTask
   431  005F1A  00                 	db	0
   432  005F1B  0000               	dw	0
   433  005F1D  0001               	dw	1
   434  005F1F  00                 	db	0
   435  005F20  26                 	db	low _UsbDevice_MainTask
   436  005F21  69                 	db	high _UsbDevice_MainTask
   437  005F22  00                 	db	0
   438  005F23  0000               	dw	0
   439  005F25  0001               	dw	1
   440  005F27  00                 	db	0
   441  005F28  B6                 	db	low _Wdg_MainTask
   442  005F29  69                 	db	high _Wdg_MainTask
   443  005F2A  00                 	db	0
   444  005F2B  0000               	dw	0
   445  005F2D  0064               	dw	100
   446  005F2F  00                 	db	0
   447  005F30  FA                 	db	low _Led_MainTask
   448  005F31  3D                 	db	high _Led_MainTask
   449  005F32  00                 	db	0
   450  005F33  0000               	dw	0
   451  005F35  0032               	dw	50
   452  005F37  00                 	db	0
   453  005F38  2C                 	db	low _Rtcm_MainTask
   454  005F39  52                 	db	high _Rtcm_MainTask
   455  005F3A  00                 	db	0
   456  005F3B  0000               	dw	0
   457  005F3D  0064               	dw	100
   458  005F3F  00                 	db	0
   459  005F40  8E                 	db	low _Term_MainTask
   460  005F41  6B                 	db	high _Term_MainTask
   461  005F42  00                 	db	0
   462  005F43  0000               	dw	0
   463  005F45  0001               	dw	1
   464  005F47  00                 	db	0
   465  005F48  E8                 	db	low _MyApp_Task
   466  005F49  26                 	db	high _MyApp_Task
   467  005F4A  00                 	db	0
   468  005F4B  0000               	dw	0
   469  005F4D  0064               	dw	100
   470  005F4F  00                 	db	0
   471                           
   472                           	psect	mediumconst
   473  00FC0E                     __pmediumconst:
   474                           	opt stack 0
   475  00FC0E  00                 	db	0
   476  00FC0F                     delCmdFsm@F9016:
   477                           	opt stack 0
   478  00FC0F  00                 	db	0
   479  00FC10  00                 	db	0
   480  00FC11  00                 	db	0
   481  00FC12  00                 	db	0
   482  00FC13  00                 	db	0
   483  00FC14  00                 	db	0
   484  00FC15  00                 	db	0
   485  00FC16  00                 	db	0
   486  00FC17  00                 	db	0
   487  00FC18  00                 	db	0
   488  00FC19  00                 	db	0
   489  00FC1A  00                 	db	0
   490  00FC1B  00                 	db	0
   491  00FC1C                     __end_ofdelCmdFsm@F9016:
   492                           	opt stack 0
   493  00FC1C                     _USB_SD_Ptr:
   494                           	opt stack 0
   495  00FC1C  5B                 	db	low _sd000
   496  00FC1D  FE                 	db	high _sd000
   497  00FC1E  14                 	db	low _sd001
   498  00FC1F  FE                 	db	high _sd001
   499  00FC20  EE                 	db	low _sd002
   500  00FC21  FD                 	db	high _sd002
   501  00FC22                     __end_of_USB_SD_Ptr:
   502                           	opt stack 0
   503  00FC22                     parseCommand@F9038:
   504                           	opt stack 0
   505  00FC22  52                 	db	82
   506  00FC23  45                 	db	69
   507  00FC24  53                 	db	83
   508  00FC25  3B                 	db	59
   509  00FC26                     __end_ofparseCommand@F9038:
   510                           	opt stack 0
   511  00FC26                     parseCommand@F9036:
   512                           	opt stack 0
   513  00FC26  44                 	db	68
   514  00FC27  45                 	db	69
   515  00FC28  4C                 	db	76
   516  00FC29  3B                 	db	59
   517  00FC2A                     __end_ofparseCommand@F9036:
   518                           	opt stack 0
   519  00FC2A                     parseCommand@F9034:
   520                           	opt stack 0
   521  00FC2A  41                 	db	65
   522  00FC2B  44                 	db	68
   523  00FC2C  44                 	db	68
   524  00FC2D  3B                 	db	59
   525  00FC2E                     __end_ofparseCommand@F9034:
   526                           	opt stack 0
   527  00FC2E                     _USB_CD_Ptr:
   528                           	opt stack 0
   529  00FC2E  AB                 	db	low _configDescriptor1
   530  00FC2F  FD                 	db	high _configDescriptor1
   531  00FC30                     __end_of_USB_CD_Ptr:
   532                           	opt stack 0
   533  00FC30                     _TaskNumber:
   534                           	opt stack 0
   535  00FC30  000A               	dw	10
   536  00FC32                     __end_of_TaskNumber:
   537                           	opt stack 0
   538  00FC32                     _MsgFormat:
   539                           	opt stack 0
   540  00FC32  48                 	db	72
   541  00FC33  6F                 	db	111
   542  00FC34  73                 	db	115
   543  00FC35  74                 	db	116
   544  00FC36  20                 	db	32
   545  00FC37  6D                 	db	109
   546  00FC38  65                 	db	101
   547  00FC39  73                 	db	115
   548  00FC3A  73                 	db	115
   549  00FC3B  61                 	db	97
   550  00FC3C  67                 	db	103
   551  00FC3D  65                 	db	101
   552  00FC3E  20                 	db	32
   553  00FC3F  66                 	db	102
   554  00FC40  6F                 	db	111
   555  00FC41  72                 	db	114
   556  00FC42  6D                 	db	109
   557  00FC43  61                 	db	97
   558  00FC44  74                 	db	116
   559  00FC45  3A                 	db	58
   560  00FC46  20                 	db	32
   561  00FC47  0D                 	db	13
   562  00FC48  0A                 	db	10
   563  00FC49  5B                 	db	91
   564  00FC4A  6F                 	db	111
   565  00FC4B  70                 	db	112
   566  00FC4C  5F                 	db	95
   567  00FC4D  74                 	db	116
   568  00FC4E  79                 	db	121
   569  00FC4F  70                 	db	112
   570  00FC50  65                 	db	101
   571  00FC51  5D                 	db	93
   572  00FC52  3A                 	db	58
   573  00FC53  5B                 	db	91
   574  00FC54  6F                 	db	111
   575  00FC55  70                 	db	112
   576  00FC56  5D                 	db	93
   577  00FC57  3A                 	db	58
   578  00FC58  5B                 	db	91
   579  00FC59  6C                 	db	108
   580  00FC5A  65                 	db	101
   581  00FC5B  6E                 	db	110
   582  00FC5C  5D                 	db	93
   583  00FC5D  3A                 	db	58
   584  00FC5E  5B                 	db	91
   585  00FC5F  61                 	db	97
   586  00FC60  64                 	db	100
   587  00FC61  64                 	db	100
   588  00FC62  72                 	db	114
   589  00FC63  5D                 	db	93
   590  00FC64  3A                 	db	58
   591  00FC65  5B                 	db	91
   592  00FC66  70                 	db	112
   593  00FC67  61                 	db	97
   594  00FC68  79                 	db	121
   595  00FC69  6C                 	db	108
   596  00FC6A  6F                 	db	111
   597  00FC6B  61                 	db	97
   598  00FC6C  64                 	db	100
   599  00FC6D  5D                 	db	93
   600  00FC6E  0D                 	db	13
   601  00FC6F  0A                 	db	10
   602  00FC70  0D                 	db	13
   603  00FC71  0A                 	db	10
   604  00FC72  5B                 	db	91
   605  00FC73  6F                 	db	111
   606  00FC74  70                 	db	112
   607  00FC75  5F                 	db	95
   608  00FC76  74                 	db	116
   609  00FC77  79                 	db	121
   610  00FC78  70                 	db	112
   611  00FC79  65                 	db	101
   612  00FC7A  5D                 	db	93
   613  00FC7B  20                 	db	32
   614  00FC7C  3D                 	db	61
   615  00FC7D  20                 	db	32
   616  00FC7E  53                 	db	83
   617  00FC7F  4F                 	db	79
   618  00FC80  2C                 	db	44
   619  00FC81  53                 	db	83
   620  00FC82  42                 	db	66
   621  00FC83  0D                 	db	13
   622  00FC84  0A                 	db	10
   623  00FC85  5B                 	db	91
   624  00FC86  6F                 	db	111
   625  00FC87  70                 	db	112
   626  00FC88  5D                 	db	93
   627  00FC89  20                 	db	32
   628  00FC8A  3D                 	db	61
   629  00FC8B  20                 	db	32
   630  00FC8C  52                 	db	82
   631  00FC8D  3A                 	db	58
   632  00FC8E  20                 	db	32
   633  00FC8F  72                 	db	114
   634  00FC90  65                 	db	101
   635  00FC91  61                 	db	97
   636  00FC92  64                 	db	100
   637  00FC93  2C                 	db	44
   638  00FC94  57                 	db	87
   639  00FC95  3A                 	db	58
   640  00FC96  20                 	db	32
   641  00FC97  77                 	db	119
   642  00FC98  72                 	db	114
   643  00FC99  69                 	db	105
   644  00FC9A  74                 	db	116
   645  00FC9B  65                 	db	101
   646  00FC9C  0D                 	db	13
   647  00FC9D  0A                 	db	10
   648  00FC9E  5B                 	db	91
   649  00FC9F  6C                 	db	108
   650  00FCA0  65                 	db	101
   651  00FCA1  6E                 	db	110
   652  00FCA2  5D                 	db	93
   653  00FCA3  20                 	db	32
   654  00FCA4  3D                 	db	61
   655  00FCA5  20                 	db	32
   656  00FCA6  32                 	db	50
   657  00FCA7  20                 	db	32
   658  00FCA8  62                 	db	98
   659  00FCA9  79                 	db	121
   660  00FCAA  74                 	db	116
   661  00FCAB  65                 	db	101
   662  00FCAC  20                 	db	32
   663  00FCAD  41                 	db	65
   664  00FCAE  53                 	db	83
   665  00FCAF  43                 	db	67
   666  00FCB0  49                 	db	73
   667  00FCB1  49                 	db	73
   668  00FCB2  0D                 	db	13
   669  00FCB3  0A                 	db	10
   670  00FCB4  5B                 	db	91
   671  00FCB5  61                 	db	97
   672  00FCB6  64                 	db	100
   673  00FCB7  64                 	db	100
   674  00FCB8  72                 	db	114
   675  00FCB9  5D                 	db	93
   676  00FCBA  20                 	db	32
   677  00FCBB  3D                 	db	61
   678  00FCBC  20                 	db	32
   679  00FCBD  32                 	db	50
   680  00FCBE  20                 	db	32
   681  00FCBF  62                 	db	98
   682  00FCC0  79                 	db	121
   683  00FCC1  74                 	db	116
   684  00FCC2  65                 	db	101
   685  00FCC3  20                 	db	32
   686  00FCC4  41                 	db	65
   687  00FCC5  53                 	db	83
   688  00FCC6  43                 	db	67
   689  00FCC7  49                 	db	73
   690  00FCC8  49                 	db	73
   691  00FCC9  0D                 	db	13
   692  00FCCA  0A                 	db	10
   693  00FCCB  5B                 	db	91
   694  00FCCC  70                 	db	112
   695  00FCCD  61                 	db	97
   696  00FCCE  79                 	db	121
   697  00FCCF  6C                 	db	108
   698  00FCD0  6F                 	db	111
   699  00FCD1  61                 	db	97
   700  00FCD2  64                 	db	100
   701  00FCD3  5D                 	db	93
   702  00FCD4  20                 	db	32
   703  00FCD5  3D                 	db	61
   704  00FCD6  20                 	db	32
   705  00FCD7  6D                 	db	109
   706  00FCD8  61                 	db	97
   707  00FCD9  78                 	db	120
   708  00FCDA  20                 	db	32
   709  00FCDB  32                 	db	50
   710  00FCDC  30                 	db	48
   711  00FCDD  20                 	db	32
   712  00FCDE  62                 	db	98
   713  00FCDF  79                 	db	121
   714  00FCE0  74                 	db	116
   715  00FCE1  65                 	db	101
   716  00FCE2  20                 	db	32
   717  00FCE3  41                 	db	65
   718  00FCE4  53                 	db	83
   719  00FCE5  43                 	db	67
   720  00FCE6  49                 	db	73
   721  00FCE7  49                 	db	73
   722  00FCE8  0D                 	db	13
   723  00FCE9  0A                 	db	10
   724  00FCEA  0D                 	db	13
   725  00FCEB  0A                 	db	10
   726  00FCEC  54                 	db	84
   727  00FCED  65                 	db	101
   728  00FCEE  72                 	db	114
   729  00FCEF  6D                 	db	109
   730  00FCF0  69                 	db	105
   731  00FCF1  6E                 	db	110
   732  00FCF2  61                 	db	97
   733  00FCF3  6C                 	db	108
   734  00FCF4  20                 	db	32
   735  00FCF5  4D                 	db	77
   736  00FCF6  6F                 	db	111
   737  00FCF7  64                 	db	100
   738  00FCF8  65                 	db	101
   739  00FCF9  3A                 	db	58
   740  00FCFA  20                 	db	32
   741  00FCFB  43                 	db	67
   742  00FCFC  4F                 	db	79
   743  00FCFD  4D                 	db	77
   744  00FCFE  4D                 	db	77
   745  00FCFF  41                 	db	65
   746  00FD00  4E                 	db	78
   747  00FD01  44                 	db	68
   748  00FD02  20                 	db	32
   749  00FD03  4D                 	db	77
   750  00FD04  4F                 	db	79
   751  00FD05  44                 	db	68
   752  00FD06  45                 	db	69
   753  00FD07  0D                 	db	13
   754  00FD08  0A                 	db	10
   755  00FD09  4D                 	db	77
   756  00FD0A  6F                 	db	111
   757  00FD0B  64                 	db	100
   758  00FD0C  65                 	db	101
   759  00FD0D  6D                 	db	109
   760  00FD0E  20                 	db	32
   761  00FD0F  54                 	db	84
   762  00FD10  79                 	db	121
   763  00FD11  70                 	db	112
   764  00FD12  65                 	db	101
   765  00FD13  3A                 	db	58
   766  00FD14  20                 	db	32
   767  00FD15  47                 	db	71
   768  00FD16  53                 	db	83
   769  00FD17  4D                 	db	77
   770  00FD18  2F                 	db	47
   771  00FD19  47                 	db	71
   772  00FD1A  50                 	db	80
   773  00FD1B  52                 	db	82
   774  00FD1C  53                 	db	83
   775  00FD1D  0D                 	db	13
   776  00FD1E  0A                 	db	10
   777  00FD1F  0D                 	db	13
   778  00FD20  0A                 	db	10
   779  00FD21  00                 	db	0
   780  00FD22                     __end_of_MsgFormat:
   781                           	opt stack 0
   782  00FD22                     _Welcome:
   783                           	opt stack 0
   784  00FD22  2A                 	db	42
   785  00FD23  2A                 	db	42
   786  00FD24  2A                 	db	42
   787  00FD25  2A                 	db	42
   788  00FD26  2A                 	db	42
   789  00FD27  2A                 	db	42
   790  00FD28  2A                 	db	42
   791  00FD29  2A                 	db	42
   792  00FD2A  2A                 	db	42
   793  00FD2B  2A                 	db	42
   794  00FD2C  2A                 	db	42
   795  00FD2D  2A                 	db	42
   796  00FD2E  2A                 	db	42
   797  00FD2F  2A                 	db	42
   798  00FD30  2A                 	db	42
   799  00FD31  2A                 	db	42
   800  00FD32  2A                 	db	42
   801  00FD33  2A                 	db	42
   802  00FD34  2A                 	db	42
   803  00FD35  2A                 	db	42
   804  00FD36  2A                 	db	42
   805  00FD37  2A                 	db	42
   806  00FD38  2A                 	db	42
   807  00FD39  2A                 	db	42
   808  00FD3A  2A                 	db	42
   809  00FD3B  2A                 	db	42
   810  00FD3C  2A                 	db	42
   811  00FD3D  2A                 	db	42
   812  00FD3E  2A                 	db	42
   813  00FD3F  2A                 	db	42
   814  00FD40  2A                 	db	42
   815  00FD41  2A                 	db	42
   816  00FD42  2A                 	db	42
   817  00FD43  2A                 	db	42
   818  00FD44  2A                 	db	42
   819  00FD45  2A                 	db	42
   820  00FD46  2A                 	db	42
   821  00FD47  2A                 	db	42
   822  00FD48  2A                 	db	42
   823  00FD49  2A                 	db	42
   824  00FD4A  2A                 	db	42
   825  00FD4B  2A                 	db	42
   826  00FD4C  2A                 	db	42
   827  00FD4D  2A                 	db	42
   828  00FD4E  2A                 	db	42
   829  00FD4F  2A                 	db	42
   830  00FD50  2A                 	db	42
   831  00FD51  2A                 	db	42
   832  00FD52  2A                 	db	42
   833  00FD53  0D                 	db	13
   834  00FD54  0A                 	db	10
   835  00FD55  20                 	db	32
   836  00FD56  20                 	db	32
   837  00FD57  20                 	db	32
   838  00FD58  20                 	db	32
   839  00FD59  20                 	db	32
   840  00FD5A  20                 	db	32
   841  00FD5B  20                 	db	32
   842  00FD5C  20                 	db	32
   843  00FD5D  20                 	db	32
   844  00FD5E  20                 	db	32
   845  00FD5F  20                 	db	32
   846  00FD60  20                 	db	32
   847  00FD61  20                 	db	32
   848  00FD62  20                 	db	32
   849  00FD63  20                 	db	32
   850  00FD64  20                 	db	32
   851  00FD65  20                 	db	32
   852  00FD66  20                 	db	32
   853  00FD67  4D                 	db	77
   854  00FD68  45                 	db	69
   855  00FD69  52                 	db	82
   856  00FD6A  43                 	db	67
   857  00FD6B  55                 	db	85
   858  00FD6C  52                 	db	82
   859  00FD6D  59                 	db	89
   860  00FD6E  20                 	db	32
   861  00FD6F  53                 	db	83
   862  00FD70  59                 	db	89
   863  00FD71  53                 	db	83
   864  00FD72  54                 	db	84
   865  00FD73  45                 	db	69
   866  00FD74  4D                 	db	77
   867  00FD75  0D                 	db	13
   868  00FD76  0A                 	db	10
   869  00FD77  2A                 	db	42
   870  00FD78  2A                 	db	42
   871  00FD79  2A                 	db	42
   872  00FD7A  2A                 	db	42
   873  00FD7B  2A                 	db	42
   874  00FD7C  2A                 	db	42
   875  00FD7D  2A                 	db	42
   876  00FD7E  2A                 	db	42
   877  00FD7F  2A                 	db	42
   878  00FD80  2A                 	db	42
   879  00FD81  2A                 	db	42
   880  00FD82  2A                 	db	42
   881  00FD83  2A                 	db	42
   882  00FD84  2A                 	db	42
   883  00FD85  2A                 	db	42
   884  00FD86  2A                 	db	42
   885  00FD87  2A                 	db	42
   886  00FD88  2A                 	db	42
   887  00FD89  2A                 	db	42
   888  00FD8A  2A                 	db	42
   889  00FD8B  2A                 	db	42
   890  00FD8C  2A                 	db	42
   891  00FD8D  2A                 	db	42
   892  00FD8E  2A                 	db	42
   893  00FD8F  2A                 	db	42
   894  00FD90  2A                 	db	42
   895  00FD91  2A                 	db	42
   896  00FD92  2A                 	db	42
   897  00FD93  2A                 	db	42
   898  00FD94  2A                 	db	42
   899  00FD95  2A                 	db	42
   900  00FD96  2A                 	db	42
   901  00FD97  2A                 	db	42
   902  00FD98  2A                 	db	42
   903  00FD99  2A                 	db	42
   904  00FD9A  2A                 	db	42
   905  00FD9B  2A                 	db	42
   906  00FD9C  2A                 	db	42
   907  00FD9D  2A                 	db	42
   908  00FD9E  2A                 	db	42
   909  00FD9F  2A                 	db	42
   910  00FDA0  2A                 	db	42
   911  00FDA1  2A                 	db	42
   912  00FDA2  2A                 	db	42
   913  00FDA3  2A                 	db	42
   914  00FDA4  2A                 	db	42
   915  00FDA5  2A                 	db	42
   916  00FDA6  2A                 	db	42
   917  00FDA7  2A                 	db	42
   918  00FDA8  0D                 	db	13
   919  00FDA9  0A                 	db	10
   920  00FDAA  00                 	db	0
   921  00FDAB                     __end_of_Welcome:
   922                           	opt stack 0
   923  00FDAB                     _configDescriptor1:
   924                           	opt stack 0
   925  00FDAB  09                 	db	9
   926  00FDAC  02                 	db	2
   927  00FDAD  43                 	db	67
   928  00FDAE  00                 	db	0
   929  00FDAF  02                 	db	2
   930  00FDB0  01                 	db	1
   931  00FDB1  00                 	db	0
   932  00FDB2  C0                 	db	192
   933  00FDB3  32                 	db	50
   934  00FDB4  09                 	db	9
   935  00FDB5  04                 	db	4
   936  00FDB6  00                 	db	0
   937  00FDB7  00                 	db	0
   938  00FDB8  01                 	db	1
   939  00FDB9  02                 	db	2
   940  00FDBA  02                 	db	2
   941  00FDBB  01                 	db	1
   942  00FDBC  00                 	db	0
   943  00FDBD  05                 	db	5
   944  00FDBE  24                 	db	36
   945  00FDBF  00                 	db	0
   946  00FDC0  10                 	db	16
   947  00FDC1  01                 	db	1
   948  00FDC2  04                 	db	4
   949  00FDC3  24                 	db	36
   950  00FDC4  02                 	db	2
   951  00FDC5  02                 	db	2
   952  00FDC6  05                 	db	5
   953  00FDC7  24                 	db	36
   954  00FDC8  06                 	db	6
   955  00FDC9  00                 	db	0
   956  00FDCA  01                 	db	1
   957  00FDCB  05                 	db	5
   958  00FDCC  24                 	db	36
   959  00FDCD  01                 	db	1
   960  00FDCE  00                 	db	0
   961  00FDCF  01                 	db	1
   962  00FDD0  07                 	db	7
   963  00FDD1  05                 	db	5
   964  00FDD2  81                 	db	129
   965  00FDD3  03                 	db	3
   966  00FDD4  08                 	db	8
   967  00FDD5  00                 	db	0
   968  00FDD6  02                 	db	2
   969  00FDD7  09                 	db	9
   970  00FDD8  04                 	db	4
   971  00FDD9  01                 	db	1
   972  00FDDA  00                 	db	0
   973  00FDDB  02                 	db	2
   974  00FDDC  0A                 	db	10
   975  00FDDD  00                 	db	0
   976  00FDDE  00                 	db	0
   977  00FDDF  00                 	db	0
   978  00FDE0  07                 	db	7
   979  00FDE1  05                 	db	5
   980  00FDE2  02                 	db	2
   981  00FDE3  02                 	db	2
   982  00FDE4  40                 	db	64
   983  00FDE5  00                 	db	0
   984  00FDE6  00                 	db	0
   985  00FDE7  07                 	db	7
   986  00FDE8  05                 	db	5
   987  00FDE9  82                 	db	130
   988  00FDEA  02                 	db	2
   989  00FDEB  40                 	db	64
   990  00FDEC  00                 	db	0
   991  00FDED  00                 	db	0
   992  00FDEE                     __end_of_configDescriptor1:
   993                           	opt stack 0
   994  00FDEE                     _sd002:
   995                           	opt stack 0
   996  00FDEE  26                 	db	38
   997  00FDEF  03                 	db	3
   998  00FDF0  0054               	dw	84
   999  00FDF2  0065               	dw	101
  1000  00FDF4  0072               	dw	114
  1001  00FDF6  006D               	dw	109
  1002  00FDF8  0069               	dw	105
  1003  00FDFA  006E               	dw	110
  1004  00FDFC  0061               	dw	97
  1005  00FDFE  006C               	dw	108
  1006  00FE00  0020               	dw	32
  1007  00FE02  0049               	dw	73
  1008  00FE04  006E               	dw	110
  1009  00FE06  0074               	dw	116
  1010  00FE08  0065               	dw	101
  1011  00FE0A  0072               	dw	114
  1012  00FE0C  0066               	dw	102
  1013  00FE0E  0061               	dw	97
  1014  00FE10  0063               	dw	99
  1015  00FE12  0065               	dw	101
  1016  00FE14                     __end_of_sd002:
  1017                           	opt stack 0
  1018  00FE14                     _sd001:
  1019                           	opt stack 0
  1020  00FE14  1E                 	db	30
  1021  00FE15  03                 	db	3
  1022  00FE16  004D               	dw	77
  1023  00FE18  0065               	dw	101
  1024  00FE1A  0072               	dw	114
  1025  00FE1C  0063               	dw	99
  1026  00FE1E  0075               	dw	117
  1027  00FE20  0072               	dw	114
  1028  00FE22  0079               	dw	121
  1029  00FE24  0020               	dw	32
  1030  00FE26  0053               	dw	83
  1031  00FE28  0079               	dw	121
  1032  00FE2A  0073               	dw	115
  1033  00FE2C  0074               	dw	116
  1034  00FE2E  0065               	dw	101
  1035  00FE30  006D               	dw	109
  1036  00FE32                     __end_of_sd001:
  1037                           	opt stack 0
  1038  00FE32                     _MsgReady:
  1039                           	opt stack 0
  1040  00FE32  0D                 	db	13
  1041  00FE33  0A                 	db	10
  1042  00FE34  53                 	db	83
  1043  00FE35  79                 	db	121
  1044  00FE36  73                 	db	115
  1045  00FE37  74                 	db	116
  1046  00FE38  65                 	db	101
  1047  00FE39  6D                 	db	109
  1048  00FE3A  20                 	db	32
  1049  00FE3B  52                 	db	82
  1050  00FE3C  65                 	db	101
  1051  00FE3D  61                 	db	97
  1052  00FE3E  64                 	db	100
  1053  00FE3F  79                 	db	121
  1054  00FE40  2E                 	db	46
  1055  00FE41  2E                 	db	46
  1056  00FE42  2E                 	db	46
  1057  00FE43  20                 	db	32
  1058  00FE44  0D                 	db	13
  1059  00FE45  0A                 	db	10
  1060  00FE46  0D                 	db	13
  1061  00FE47  0A                 	db	10
  1062  00FE48  00                 	db	0
  1063  00FE49                     __end_of_MsgReady:
  1064                           	opt stack 0
  1065  00FE49                     _device_dsc:
  1066                           	opt stack 0
  1067  00FE49  12                 	db	18
  1068  00FE4A  01                 	db	1
  1069  00FE4B  0200               	dw	512
  1070  00FE4D  02                 	db	2
  1071  00FE4E  00                 	db	0
  1072  00FE4F  00                 	db	0
  1073  00FE50  08                 	db	8
  1074  00FE51  04D8               	dw	1240
  1075  00FE53  000A               	dw	10
  1076  00FE55  0100               	dw	256
  1077  00FE57  01                 	db	1
  1078  00FE58  02                 	db	2
  1079  00FE59  00                 	db	0
  1080  00FE5A  01                 	db	1
  1081  00FE5B                     __end_of_device_dsc:
  1082                           	opt stack 0
  1083  00FE5B                     _sd000:
  1084                           	opt stack 0
  1085  00FE5B  04                 	db	4
  1086  00FE5C  03                 	db	3
  1087  00FE5D  0409               	dw	1033
  1088  00FE5F                     __end_of_sd000:
  1089                           	opt stack 0
  1090  0000                     _RPINR1	set	3815
  1091  0000                     _UEP0bits	set	3878
  1092  0000                     _UIEbits	set	3894
  1093  0000                     _UADDR	set	3896
  1094  0000                     _UIE	set	3894
  1095  0000                     _UEIE	set	3895
  1096  0000                     _UCFG	set	3897
  1097  0000                     _RTCCAL	set	3902
  1098  0000                     _PADCFG1bits	set	3900
  1099  0000                     _RTCCFGbits	set	3903
  1100  0000                     _DSCONLbits	set	3916
  1101  0000                     _DSGPR1	set	3919
  1102  0000                     _DSGPR0	set	3918
  1103  0000                     _DSCONHbits	set	3917
  1104  0000                     _ANCON1bits	set	3913
  1105  0000                     _UEP1	set	3879
  1106  0000                     _UEP0	set	3878
  1107  0000                     _T1CONbits	set	4045
  1108  0000                     _PORTDbits	set	3971
  1109  0000                     _USTAT	set	3940
  1110  0000                     _PIR2bits	set	4001
  1111  0000                     _UCON	set	3941
  1112  0000                     _UIRbits	set	3938
  1113  0000                     _UCONbits	set	3941
  1114  0000                     _UIR	set	3938
  1115  0000                     _UEIR	set	3939
  1116  0000                     _PIE2bits	set	4000
  1117  0000                     _BAUDCON2	set	3964
  1118  0000                     _RCSTA2	set	3996
  1119  0000                     _BAUDCON1	set	3966
  1120  0000                     _RCSTA1	set	4012
  1121  0000                     _TRISCbits	set	3988
  1122  0000                     _TXSTA2	set	4008
  1123  0000                     _TXSTA1	set	4013
  1124  0000                     _RCREG2	set	4010
  1125  0000                     _RCREG1	set	4015
  1126  0000                     _TXREG2	set	4009
  1127  0000                     _TXREG1	set	4014
  1128  0000                     _SPBRG2	set	4011
  1129  0000                     _SPBRGH2	set	3965
  1130  0000                     _SPBRG1	set	4016
  1131  0000                     _SPBRGH1	set	3967
  1132  0000                     _PR4	set	3959
  1133  0000                     _PR2	set	4043
  1134  0000                     _PIE1bits	set	3997
  1135  0000                     _IPR1bits	set	3999
  1136  0000                     _T4CONbits	set	3958
  1137  0000                     _T2CONbits	set	4042
  1138  0000                     _ALRMVALL	set	3982
  1139  0000                     _ALRMVALH	set	3983
  1140  0000                     _RTCVALH	set	3993
  1141  0000                     _RTCVALL	set	3992
  1142  0000                     _ALRMRPTbits	set	3984
  1143  0000                     _ALRMCFGbits	set	3985
  1144  0000                     _PIE3bits	set	4003
  1145  0000                     _IPR3bits	set	4005
  1146  0000                     _OSCCONbits	set	4051
  1147  0000                     _PORTEbits	set	3972
  1148  0000                     _TRISEbits	set	3990
  1149  0000                     _WDTCONbits	set	4032
  1150  0000                     _INTCON2bits	set	4081
  1151  0000                     _TRISBbits	set	3987
  1152  0000                     _OSCTUNEbits	set	3995
  1153  0000                     _SSP2CON1	set	3954
  1154  0000                     _TRISDbits	set	3989
  1155  0000                     _SSP2BUF	set	3957
  1156  0000                     _SSP2CON2bits	set	3953
  1157  0000                     _SSP2STAT	set	3955
  1158  0000                     _SSP2CON2	set	3953
  1159  0000                     _SSP2ADD	set	3956
  1160  0000                     _PIR1bits	set	3998
  1161  0000                     _PIR3bits	set	4004
  1162  0000                     _INTCON3bits	set	4080
  1163  0000                     _INTCONbits	set	4082
  1164  0000                     _RCONbits	set	4048
  1165  00FE5F                     STR_21:
  1166  00FE5F  20                 	db	32
  1167  00FE60  4C                 	db	76	;'L'
  1168  00FE61  61                 	db	97	;'a'
  1169  00FE62  7A                 	db	122	;'z'
  1170  00FE63  79                 	db	121	;'y'
  1171  00FE64  20                 	db	32
  1172  00FE65  64                 	db	100	;'d'
  1173  00FE66  65                 	db	101	;'e'
  1174  00FE67  76                 	db	118	;'v'
  1175  00FE68  69                 	db	105	;'i'
  1176  00FE69  63                 	db	99	;'c'
  1177  00FE6A  65                 	db	101	;'e'
  1178  00FE6B  2E                 	db	46
  1179  00FE6C  2E                 	db	46
  1180  00FE6D  2E                 	db	46
  1181  00FE6E  79                 	db	121	;'y'
  1182  00FE6F  6F                 	db	111	;'o'
  1183  00FE70  75                 	db	117	;'u'
  1184  00FE71  27                 	db	39
  1185  00FE72  76                 	db	118	;'v'
  1186  00FE73  65                 	db	101	;'e'
  1187  00FE74  20                 	db	32
  1188  00FE75  62                 	db	98	;'b'
  1189  00FE76  65                 	db	101	;'e'
  1190  00FE77  65                 	db	101	;'e'
  1191  00FE78  6E                 	db	110	;'n'
  1192  00FE79  20                 	db	32
  1193  00FE7A  74                 	db	116	;'t'
  1194  00FE7B  69                 	db	105	;'i'
  1195  00FE7C  6D                 	db	109	;'m'
  1196  00FE7D  65                 	db	101	;'e'
  1197  00FE7E  64                 	db	100	;'d'
  1198  00FE7F  2D                 	db	45
  1199  00FE80  6F                 	db	111	;'o'
  1200  00FE81  75                 	db	117	;'u'
  1201  00FE82  74                 	db	116	;'t'
  1202  00FE83  21                 	db	33
  1203  00FE84  21                 	db	33
  1204  00FE85  21                 	db	33
  1205  00FE86  0D                 	db	13
  1206  00FE87  0A                 	db	10
  1207  00FE88  00                 	db	0
  1208  00FE89                     STR_8:
  1209  00FE89  41                 	db	65	;'A'
  1210  00FE8A  54                 	db	84	;'T'
  1211  00FE8B  2B                 	db	43
  1212  00FE8C  53                 	db	83	;'S'
  1213  00FE8D  41                 	db	65	;'A'
  1214  00FE8E  50                 	db	80	;'P'
  1215  00FE8F  42                 	db	66	;'B'
  1216  00FE90  52                 	db	82	;'R'
  1217  00FE91  3D                 	db	61	;'='
  1218  00FE92  33                 	db	51	;'3'
  1219  00FE93  2C                 	db	44
  1220  00FE94  31                 	db	49	;'1'
  1221  00FE95  2C                 	db	44
  1222  00FE96  22                 	db	34
  1223  00FE97  43                 	db	67	;'C'
  1224  00FE98  6F                 	db	111	;'o'
  1225  00FE99  6E                 	db	110	;'n'
  1226  00FE9A  74                 	db	116	;'t'
  1227  00FE9B  79                 	db	121	;'y'
  1228  00FE9C  70                 	db	112	;'p'
  1229  00FE9D  65                 	db	101	;'e'
  1230  00FE9E  22                 	db	34
  1231  00FE9F  2C                 	db	44
  1232  00FEA0  22                 	db	34
  1233  00FEA1  47                 	db	71	;'G'
  1234  00FEA2  50                 	db	80	;'P'
  1235  00FEA3  52                 	db	82	;'R'
  1236  00FEA4  53                 	db	83	;'S'
  1237  00FEA5  22                 	db	34
  1238  00FEA6  0D                 	db	13
  1239  00FEA7  00                 	db	0
  1240  00FEA8                     STR_14:
  1241  00FEA8  41                 	db	65	;'A'
  1242  00FEA9  54                 	db	84	;'T'
  1243  00FEAA  2B                 	db	43
  1244  00FEAB  48                 	db	72	;'H'
  1245  00FEAC  54                 	db	84	;'T'
  1246  00FEAD  54                 	db	84	;'T'
  1247  00FEAE  50                 	db	80	;'P'
  1248  00FEAF  50                 	db	80	;'P'
  1249  00FEB0  41                 	db	65	;'A'
  1250  00FEB1  52                 	db	82	;'R'
  1251  00FEB2  41                 	db	65	;'A'
  1252  00FEB3  3D                 	db	61	;'='
  1253  00FEB4  22                 	db	34
  1254  00FEB5  43                 	db	67	;'C'
  1255  00FEB6  49                 	db	73	;'I'
  1256  00FEB7  44                 	db	68	;'D'
  1257  00FEB8  22                 	db	34
  1258  00FEB9  2C                 	db	44
  1259  00FEBA  31                 	db	49	;'1'
  1260  00FEBB  0D                 	db	13
  1261  00FEBC  00                 	db	0
  1262  00FEBD                     STR_9:
  1263  00FEBD  41                 	db	65	;'A'
  1264  00FEBE  54                 	db	84	;'T'
  1265  00FEBF  2B                 	db	43
  1266  00FEC0  53                 	db	83	;'S'
  1267  00FEC1  41                 	db	65	;'A'
  1268  00FEC2  50                 	db	80	;'P'
  1269  00FEC3  42                 	db	66	;'B'
  1270  00FEC4  52                 	db	82	;'R'
  1271  00FEC5  3D                 	db	61	;'='
  1272  00FEC6  33                 	db	51	;'3'
  1273  00FEC7  2C                 	db	44
  1274  00FEC8  31                 	db	49	;'1'
  1275  00FEC9  2C                 	db	44
  1276  00FECA  22                 	db	34
  1277  00FECB  41                 	db	65	;'A'
  1278  00FECC  50                 	db	80	;'P'
  1279  00FECD  4E                 	db	78	;'N'
  1280  00FECE  22                 	db	34
  1281  00FECF  2C                 	db	44
  1282  00FED0  22                 	db	34
  1283  00FED1  00                 	db	0
  1284  00FED2                     STR_23:
  1285  00FED2  46                 	db	70	;'F'
  1286  00FED3  72                 	db	114	;'r'
  1287  00FED4  61                 	db	97	;'a'
  1288  00FED5  6D                 	db	109	;'m'
  1289  00FED6  65                 	db	101	;'e'
  1290  00FED7  77                 	db	119	;'w'
  1291  00FED8  6F                 	db	111	;'o'
  1292  00FED9  72                 	db	114	;'r'
  1293  00FEDA  6B                 	db	107	;'k'
  1294  00FEDB  20                 	db	32
  1295  00FEDC  56                 	db	86	;'V'
  1296  00FEDD  65                 	db	101	;'e'
  1297  00FEDE  72                 	db	114	;'r'
  1298  00FEDF  73                 	db	115	;'s'
  1299  00FEE0  69                 	db	105	;'i'
  1300  00FEE1  6F                 	db	111	;'o'
  1301  00FEE2  6E                 	db	110	;'n'
  1302  00FEE3  3A                 	db	58	;':'
  1303  00FEE4  20                 	db	32
  1304  00FEE5  00                 	db	0
  1305  00FEE6                     STR_15:
  1306  00FEE6  41                 	db	65	;'A'
  1307  00FEE7  54                 	db	84	;'T'
  1308  00FEE8  2B                 	db	43
  1309  00FEE9  48                 	db	72	;'H'
  1310  00FEEA  54                 	db	84	;'T'
  1311  00FEEB  54                 	db	84	;'T'
  1312  00FEEC  50                 	db	80	;'P'
  1313  00FEED  50                 	db	80	;'P'
  1314  00FEEE  41                 	db	65	;'A'
  1315  00FEEF  52                 	db	82	;'R'
  1316  00FEF0  41                 	db	65	;'A'
  1317  00FEF1  3D                 	db	61	;'='
  1318  00FEF2  22                 	db	34
  1319  00FEF3  55                 	db	85	;'U'
  1320  00FEF4  52                 	db	82	;'R'
  1321  00FEF5  4C                 	db	76	;'L'
  1322  00FEF6  22                 	db	34
  1323  00FEF7  2C                 	db	44
  1324  00FEF8  22                 	db	34
  1325  00FEF9  00                 	db	0
  1326  00FEFA                     STR_30:
  1327  00FEFA  41                 	db	65	;'A'
  1328  00FEFB  54                 	db	84	;'T'
  1329  00FEFC  2B                 	db	43
  1330  00FEFD  43                 	db	67	;'C'
  1331  00FEFE  4D                 	db	77	;'M'
  1332  00FEFF  47                 	db	71	;'G'
  1333  00FF00  44                 	db	68	;'D'
  1334  00FF01  41                 	db	65	;'A'
  1335  00FF02  3D                 	db	61	;'='
  1336  00FF03  44                 	db	68	;'D'
  1337  00FF04  45                 	db	69	;'E'
  1338  00FF05  4C                 	db	76	;'L'
  1339  00FF06  20                 	db	32
  1340  00FF07  41                 	db	65	;'A'
  1341  00FF08  4C                 	db	76	;'L'
  1342  00FF09  4C                 	db	76	;'L'
  1343  00FF0A  0D                 	db	13
  1344  00FF0B  0A                 	db	10
  1345  00FF0C  00                 	db	0
  1346  00FF0D                     STR_27:
  1347  00FF0D  42                 	db	66	;'B'
  1348  00FF0E  75                 	db	117	;'u'
  1349  00FF0F  69                 	db	105	;'i'
  1350  00FF10  6C                 	db	108	;'l'
  1351  00FF11  64                 	db	100	;'d'
  1352  00FF12  20                 	db	32
  1353  00FF13  44                 	db	68	;'D'
  1354  00FF14  61                 	db	97	;'a'
  1355  00FF15  74                 	db	116	;'t'
  1356  00FF16  65                 	db	101	;'e'
  1357  00FF17  3A                 	db	58	;':'
  1358  00FF18  20                 	db	32
  1359  00FF19  25                 	db	37
  1360  00FF1A  73                 	db	115	;'s'
  1361  00FF1B  0D                 	db	13
  1362  00FF1C  0A                 	db	10
  1363  00FF1D  00                 	db	0
  1364  00FF1E                     STR_16:
  1365  00FF1E  41                 	db	65	;'A'
  1366  00FF1F  54                 	db	84	;'T'
  1367  00FF20  2B                 	db	43
  1368  00FF21  48                 	db	72	;'H'
  1369  00FF22  54                 	db	84	;'T'
  1370  00FF23  54                 	db	84	;'T'
  1371  00FF24  50                 	db	80	;'P'
  1372  00FF25  41                 	db	65	;'A'
  1373  00FF26  43                 	db	67	;'C'
  1374  00FF27  54                 	db	84	;'T'
  1375  00FF28  49                 	db	73	;'I'
  1376  00FF29  4F                 	db	79	;'O'
  1377  00FF2A  4E                 	db	78	;'N'
  1378  00FF2B  3D                 	db	61	;'='
  1379  00FF2C  30                 	db	48	;'0'
  1380  00FF2D  0D                 	db	13
  1381  00FF2E  00                 	db	0
  1382  00FF2F                     STR_29:
  1383  00FF2F  41                 	db	65	;'A'
  1384  00FF30  54                 	db	84	;'T'
  1385  00FF31  2B                 	db	43
  1386  00FF32  43                 	db	67	;'C'
  1387  00FF33  4D                 	db	77	;'M'
  1388  00FF34  47                 	db	71	;'G'
  1389  00FF35  44                 	db	68	;'D'
  1390  00FF36  3D                 	db	61	;'='
  1391  00FF37  31                 	db	49	;'1'
  1392  00FF38  2C                 	db	44
  1393  00FF39  30                 	db	48	;'0'
  1394  00FF3A  0D                 	db	13
  1395  00FF3B  0A                 	db	10
  1396  00FF3C  00                 	db	0
  1397  00FF3D  41                 	db	65	;'A'
  1398  00FF3E  54                 	db	84	;'T'
  1399  00FF3F  2B                 	db	43
  1400  00FF40  48                 	db	72	;'H'
  1401  00FF41  54                 	db	84	;'T'
  1402  00FF42  54                 	db	84	;'T'
  1403  00FF43  50                 	db	80	;'P'
  1404  00FF44  53                 	db	83	;'S'
  1405  00FF45  53                 	db	83	;'S'
  1406  00FF46  4C                 	db	76	;'L'
  1407  00FF47  3D                 	db	61	;'='
  1408  00FF48  30                 	db	48	;'0'
  1409  00FF49  0D                 	db	13
  1410  00FF4A  00                 	db	0
  1411  00FF4B                     STR_10:
  1412  00FF4B  41                 	db	65	;'A'
  1413  00FF4C  54                 	db	84	;'T'
  1414  00FF4D  2B                 	db	43
  1415  00FF4E  53                 	db	83	;'S'
  1416  00FF4F  41                 	db	65	;'A'
  1417  00FF50  50                 	db	80	;'P'
  1418  00FF51  42                 	db	66	;'B'
  1419  00FF52  52                 	db	82	;'R'
  1420  00FF53  3D                 	db	61	;'='
  1421  00FF54  31                 	db	49	;'1'
  1422  00FF55  2C                 	db	44
  1423  00FF56  31                 	db	49	;'1'
  1424  00FF57  0D                 	db	13
  1425  00FF58  00                 	db	0
  1426  00FF59                     STR_11:
  1427  00FF59  41                 	db	65	;'A'
  1428  00FF5A  54                 	db	84	;'T'
  1429  00FF5B  2B                 	db	43
  1430  00FF5C  53                 	db	83	;'S'
  1431  00FF5D  41                 	db	65	;'A'
  1432  00FF5E  50                 	db	80	;'P'
  1433  00FF5F  42                 	db	66	;'B'
  1434  00FF60  52                 	db	82	;'R'
  1435  00FF61  3D                 	db	61	;'='
  1436  00FF62  32                 	db	50	;'2'
  1437  00FF63  2C                 	db	44
  1438  00FF64  31                 	db	49	;'1'
  1439  00FF65  0D                 	db	13
  1440  00FF66  00                 	db	0
  1441  00FF67                     STR_13:
  1442  00FF67  41                 	db	65	;'A'
  1443  00FF68  54                 	db	84	;'T'
  1444  00FF69  2B                 	db	43
  1445  00FF6A  48                 	db	72	;'H'
  1446  00FF6B  54                 	db	84	;'T'
  1447  00FF6C  54                 	db	84	;'T'
  1448  00FF6D  50                 	db	80	;'P'
  1449  00FF6E  53                 	db	83	;'S'
  1450  00FF6F  53                 	db	83	;'S'
  1451  00FF70  4C                 	db	76	;'L'
  1452  00FF71  3D                 	db	61	;'='
  1453  00FF72  31                 	db	49	;'1'
  1454  00FF73  0D                 	db	13
  1455  00FF74  00                 	db	0
  1456  00FF75                     STR_2:
  1457  00FF75  41                 	db	65	;'A'
  1458  00FF76  54                 	db	84	;'T'
  1459  00FF77  2B                 	db	43
  1460  00FF78  49                 	db	73	;'I'
  1461  00FF79  50                 	db	80	;'P'
  1462  00FF7A  52                 	db	82	;'R'
  1463  00FF7B  3D                 	db	61	;'='
  1464  00FF7C  39                 	db	57	;'9'
  1465  00FF7D  36                 	db	54	;'6'
  1466  00FF7E  30                 	db	48	;'0'
  1467  00FF7F  30                 	db	48	;'0'
  1468  00FF80  0D                 	db	13
  1469  00FF81  0A                 	db	10
  1470  00FF82  00                 	db	0
  1471  00FF83                     STR_17:
  1472  00FF83  41                 	db	65	;'A'
  1473  00FF84  54                 	db	84	;'T'
  1474  00FF85  2B                 	db	43
  1475  00FF86  48                 	db	72	;'H'
  1476  00FF87  54                 	db	84	;'T'
  1477  00FF88  54                 	db	84	;'T'
  1478  00FF89  50                 	db	80	;'P'
  1479  00FF8A  52                 	db	82	;'R'
  1480  00FF8B  45                 	db	69	;'E'
  1481  00FF8C  41                 	db	65	;'A'
  1482  00FF8D  44                 	db	68	;'D'
  1483  00FF8E  0D                 	db	13
  1484  00FF8F  00                 	db	0
  1485  00FF90                     STR_18:
  1486  00FF90  41                 	db	65	;'A'
  1487  00FF91  54                 	db	84	;'T'
  1488  00FF92  2B                 	db	43
  1489  00FF93  48                 	db	72	;'H'
  1490  00FF94  54                 	db	84	;'T'
  1491  00FF95  54                 	db	84	;'T'
  1492  00FF96  50                 	db	80	;'P'
  1493  00FF97  54                 	db	84	;'T'
  1494  00FF98  45                 	db	69	;'E'
  1495  00FF99  52                 	db	82	;'R'
  1496  00FF9A  4D                 	db	77	;'M'
  1497  00FF9B  0D                 	db	13
  1498  00FF9C  00                 	db	0
  1499  00FF9D                     STR_12:
  1500  00FF9D  41                 	db	65	;'A'
  1501  00FF9E  54                 	db	84	;'T'
  1502  00FF9F  2B                 	db	43
  1503  00FFA0  48                 	db	72	;'H'
  1504  00FFA1  54                 	db	84	;'T'
  1505  00FFA2  54                 	db	84	;'T'
  1506  00FFA3  50                 	db	80	;'P'
  1507  00FFA4  49                 	db	73	;'I'
  1508  00FFA5  4E                 	db	78	;'N'
  1509  00FFA6  49                 	db	73	;'I'
  1510  00FFA7  54                 	db	84	;'T'
  1511  00FFA8  0D                 	db	13
  1512  00FFA9  00                 	db	0
  1513  00FFAA                     STR_31:
  1514  00FFAA  41                 	db	65	;'A'
  1515  00FFAB  54                 	db	84	;'T'
  1516  00FFAC  2B                 	db	43
  1517  00FFAD  43                 	db	67	;'C'
  1518  00FFAE  4C                 	db	76	;'L'
  1519  00FFAF  49                 	db	73	;'I'
  1520  00FFB0  50                 	db	80	;'P'
  1521  00FFB1  3D                 	db	61	;'='
  1522  00FFB2  31                 	db	49	;'1'
  1523  00FFB3  0D                 	db	13
  1524  00FFB4  0A                 	db	10
  1525  00FFB5  00                 	db	0
  1526  00FFB6                     STR_28:
  1527  00FFB6  41                 	db	65	;'A'
  1528  00FFB7  70                 	db	112	;'p'
  1529  00FFB8  72                 	db	114	;'r'
  1530  00FFB9  20                 	db	32
  1531  00FFBA  20                 	db	32
  1532  00FFBB  32                 	db	50	;'2'
  1533  00FFBC  20                 	db	32
  1534  00FFBD  32                 	db	50	;'2'
  1535  00FFBE  30                 	db	48	;'0'
  1536  00FFBF  32                 	db	50	;'2'
  1537  00FFC0  32                 	db	50	;'2'
  1538  00FFC1  00                 	db	0
  1539  00FFC2                     STR_4:
  1540  00FFC2  41                 	db	65	;'A'
  1541  00FFC3  54                 	db	84	;'T'
  1542  00FFC4  2B                 	db	43
  1543  00FFC5  43                 	db	67	;'C'
  1544  00FFC6  4D                 	db	77	;'M'
  1545  00FFC7  47                 	db	71	;'G'
  1546  00FFC8  52                 	db	82	;'R'
  1547  00FFC9  3D                 	db	61	;'='
  1548  00FFCA  31                 	db	49	;'1'
  1549  00FFCB  0D                 	db	13
  1550  00FFCC  0A                 	db	10
  1551  00FFCD  00                 	db	0
  1552  00FFCE                     STR_5:
  1553  00FFCE  41                 	db	65	;'A'
  1554  00FFCF  54                 	db	84	;'T'
  1555  00FFD0  2B                 	db	43
  1556  00FFD1  43                 	db	67	;'C'
  1557  00FFD2  4D                 	db	77	;'M'
  1558  00FFD3  47                 	db	71	;'G'
  1559  00FFD4  53                 	db	83	;'S'
  1560  00FFD5  3D                 	db	61	;'='
  1561  00FFD6  22                 	db	34
  1562  00FFD7  00                 	db	0
  1563  00FFD8                     STR_32:
  1564  00FFD8  28                 	db	40
  1565  00FFD9  6E                 	db	110	;'n'
  1566  00FFDA  75                 	db	117	;'u'
  1567  00FFDB  6C                 	db	108	;'l'
  1568  00FFDC  6C                 	db	108	;'l'
  1569  00FFDD  29                 	db	41
  1570  00FFDE  00                 	db	0
  1571  00FFDF                     STR_3:
  1572  00FFDF  41                 	db	65	;'A'
  1573  00FFE0  54                 	db	84	;'T'
  1574  00FFE1  45                 	db	69	;'E'
  1575  00FFE2  30                 	db	48	;'0'
  1576  00FFE3  0D                 	db	13
  1577  00FFE4  0A                 	db	10
  1578  00FFE5  00                 	db	0
  1579  00FFE6                     STR_1:
  1580  00FFE6  41                 	db	65	;'A'
  1581  00FFE7  54                 	db	84	;'T'
  1582  00FFE8  0D                 	db	13
  1583  00FFE9  0A                 	db	10
  1584  00FFEA  00                 	db	0
  1585  00FFEB  41                 	db	65	;'A'
  1586  00FFEC  54                 	db	84	;'T'
  1587  00FFED  41                 	db	65	;'A'
  1588  00FFEE  0D                 	db	13
  1589  00FFEF  00                 	db	0
  1590  00FFF0                     STR_6:
  1591  00FFF0  41                 	db	65	;'A'
  1592  00FFF1  54                 	db	84	;'T'
  1593  00FFF2  48                 	db	72	;'H'
  1594  00FFF3  0D                 	db	13
  1595  00FFF4  00                 	db	0
  1596  00FFF5                     STR_24:
  1597  00FFF5  2E                 	db	46
  1598  00FFF6  00                 	db	0
  1599  0000                     
  1600                           ; #config settings
  1601  00FFF7  00                 	db	0	; dummy byte at the end
  1602  0000                     
  1603                           	psect	cinit
  1604  0022E4                     __pcinit:
  1605                           	opt stack 0
  1606  0022E4                     start_initialization:
  1607                           	opt stack 0
  1608  0022E4                     __initialization:
  1609                           	opt stack 0
  1610                           
  1611                           ; Initialize objects allocated to BANK5 (80 bytes)
  1612                           ; load TBLPTR registers with __pidataBANK5
  1613  0022E4  0E00               	movlw	low __pidataBANK5
  1614  0022E6  6EF6               	movwf	tblptrl,c
  1615  0022E8  0E5F               	movlw	high __pidataBANK5
  1616  0022EA  6EF7               	movwf	tblptrh,c
  1617  0022EC  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1618  0022EE  6EF8               	movwf	tblptru,c
  1619  0022F0  EE05  F0A4         	lfsr	0,__pdataBANK5
  1620  0022F4  EE10 F050          	lfsr	1,80
  1621  0022F8                     copy_data0:
  1622  0022F8  0009               	tblrd		*+
  1623  0022FA  CFF5 FFEE          	movff	tablat,postinc0
  1624  0022FE  50E5               	movf	postdec1,w,c
  1625  002300  50E1               	movf	fsr1l,w,c
  1626  002302  E1FA               	bnz	copy_data0
  1627                           
  1628                           ; Initialize objects allocated to BANK3 (60 bytes)
  1629                           ; load TBLPTR registers with __pidataBANK3
  1630  002304  0E16               	movlw	low __pidataBANK3
  1631  002306  6EF6               	movwf	tblptrl,c
  1632  002308  0E65               	movlw	high __pidataBANK3
  1633  00230A  6EF7               	movwf	tblptrh,c
  1634  00230C  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1635  00230E  6EF8               	movwf	tblptru,c
  1636  002310  EE03  F0C3         	lfsr	0,__pdataBANK3
  1637  002314  EE10 F03C          	lfsr	1,60
  1638  002318                     copy_data1:
  1639  002318  0009               	tblrd		*+
  1640  00231A  CFF5 FFEE          	movff	tablat,postinc0
  1641  00231E  50E5               	movf	postdec1,w,c
  1642  002320  50E1               	movf	fsr1l,w,c
  1643  002322  E1FA               	bnz	copy_data1
  1644                           
  1645                           ; Initialize objects allocated to BANK2 (15 bytes)
  1646                           ; load TBLPTR registers with __pidataBANK2
  1647  002324  0E16               	movlw	low __pidataBANK2
  1648  002326  6EF6               	movwf	tblptrl,c
  1649  002328  0E6D               	movlw	high __pidataBANK2
  1650  00232A  6EF7               	movwf	tblptrh,c
  1651  00232C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1652  00232E  6EF8               	movwf	tblptru,c
  1653  002330  EE02  F0F1         	lfsr	0,__pdataBANK2
  1654  002334  EE10 F00F          	lfsr	1,15
  1655  002338                     copy_data2:
  1656  002338  0009               	tblrd		*+
  1657  00233A  CFF5 FFEE          	movff	tablat,postinc0
  1658  00233E  50E5               	movf	postdec1,w,c
  1659  002340  50E1               	movf	fsr1l,w,c
  1660  002342  E1FA               	bnz	copy_data2
  1661                           
  1662                           ; Initialize objects allocated to BANK1 (2 bytes)
  1663                           ; load TBLPTR registers with __pidataBANK1
  1664  002344  0EC7               	movlw	low __pidataBANK1
  1665  002346  6EF6               	movwf	tblptrl,c
  1666  002348  0E6D               	movlw	high __pidataBANK1
  1667  00234A  6EF7               	movwf	tblptrh,c
  1668  00234C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1669  00234E  6EF8               	movwf	tblptru,c
  1670  002350  0009               	tblrd		*+	;fetch initializer
  1671  002352  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1672  002356  0009               	tblrd		*+	;fetch initializer
  1673  002358  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1674                           
  1675                           ; Initialize objects allocated to BANK4 (10 bytes)
  1676                           ; load TBLPTR registers with __pidataBANK4
  1677  00235C  0E58               	movlw	low __pidataBANK4
  1678  00235E  6EF6               	movwf	tblptrl,c
  1679  002360  0E6D               	movlw	high __pidataBANK4
  1680  002362  6EF7               	movwf	tblptrh,c
  1681  002364  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1682  002366  6EF8               	movwf	tblptru,c
  1683  002368  EE04  F0F6         	lfsr	0,__pdataBANK4
  1684  00236C  EE10 F00A          	lfsr	1,10
  1685  002370                     copy_data3:
  1686  002370  0009               	tblrd		*+
  1687  002372  CFF5 FFEE          	movff	tablat,postinc0
  1688  002376  50E5               	movf	postdec1,w,c
  1689  002378  50E1               	movf	fsr1l,w,c
  1690  00237A  E1FA               	bnz	copy_data3
  1691                           
  1692                           ; Initialize objects allocated to BANK0 (3 bytes)
  1693                           ; load TBLPTR registers with __pidataBANK0
  1694  00237C  0EC4               	movlw	low __pidataBANK0
  1695  00237E  6EF6               	movwf	tblptrl,c
  1696  002380  0E6D               	movlw	high __pidataBANK0
  1697  002382  6EF7               	movwf	tblptrh,c
  1698  002384  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1699  002386  6EF8               	movwf	tblptru,c
  1700  002388  0009               	tblrd		*+	;fetch initializer
  1701  00238A  CFF5 F0E0          	movff	tablat,__pdataBANK0
  1702  00238E  0009               	tblrd		*+	;fetch initializer
  1703  002390  CFF5 F0E1          	movff	tablat,__pdataBANK0+1
  1704  002394  0009               	tblrd		*+	;fetch initializer
  1705  002396  CFF5 F0E2          	movff	tablat,__pdataBANK0+2
  1706                           
  1707                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1708  00239A  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1709  00239E  EE13 F020          	lfsr	1,800
  1710  0023A2                     clear_0:
  1711  0023A2  6AEE               	clrf	postinc0,c
  1712  0023A4  50E5               	movf	postdec1,w,c
  1713  0023A6  50E1               	movf	fsr1l,w,c
  1714  0023A8  E1FC               	bnz	clear_0
  1715  0023AA  50E2               	movf	fsr1h,w,c
  1716  0023AC  E1FA               	bnz	clear_0
  1717                           
  1718                           ; Clear objects allocated to BANK9 (200 bytes)
  1719  0023AE  EE09  F000         	lfsr	0,__pbssBANK9
  1720  0023B2  0EC8               	movlw	200
  1721  0023B4                     clear_1:
  1722  0023B4  6AEE               	clrf	postinc0,c
  1723  0023B6  06E8               	decf	wreg,f,c
  1724  0023B8  E1FD               	bnz	clear_1
  1725                           
  1726                           ; Clear objects allocated to BANK8 (200 bytes)
  1727  0023BA  EE08  F000         	lfsr	0,__pbssBANK8
  1728  0023BE  0EC8               	movlw	200
  1729  0023C0                     clear_2:
  1730  0023C0  6AEE               	clrf	postinc0,c
  1731  0023C2  06E8               	decf	wreg,f,c
  1732  0023C4  E1FD               	bnz	clear_2
  1733                           
  1734                           ; Clear objects allocated to BANK7 (246 bytes)
  1735  0023C6  EE07  F000         	lfsr	0,__pbssBANK7
  1736  0023CA  0EF6               	movlw	246
  1737  0023CC                     clear_3:
  1738  0023CC  6AEE               	clrf	postinc0,c
  1739  0023CE  06E8               	decf	wreg,f,c
  1740  0023D0  E1FD               	bnz	clear_3
  1741                           
  1742                           ; Clear objects allocated to BANK6 (220 bytes)
  1743  0023D2  EE06  F000         	lfsr	0,__pbssBANK6
  1744  0023D6  0EDC               	movlw	220
  1745  0023D8                     clear_4:
  1746  0023D8  6AEE               	clrf	postinc0,c
  1747  0023DA  06E8               	decf	wreg,f,c
  1748  0023DC  E1FD               	bnz	clear_4
  1749                           
  1750                           ; Clear objects allocated to BANK5 (164 bytes)
  1751  0023DE  EE05  F000         	lfsr	0,__pbssBANK5
  1752  0023E2  0EA4               	movlw	164
  1753  0023E4                     clear_5:
  1754  0023E4  6AEE               	clrf	postinc0,c
  1755  0023E6  06E8               	decf	wreg,f,c
  1756  0023E8  E1FD               	bnz	clear_5
  1757                           
  1758                           ; Clear objects allocated to BANK3 (195 bytes)
  1759  0023EA  EE03  F000         	lfsr	0,__pbssBANK3
  1760  0023EE  0EC3               	movlw	195
  1761  0023F0                     clear_6:
  1762  0023F0  6AEE               	clrf	postinc0,c
  1763  0023F2  06E8               	decf	wreg,f,c
  1764  0023F4  E1FD               	bnz	clear_6
  1765                           
  1766                           ; Clear objects allocated to BANK2 (40 bytes)
  1767  0023F6  EE02  F0C9         	lfsr	0,__pbssBANK2
  1768  0023FA  0E28               	movlw	40
  1769  0023FC                     clear_7:
  1770  0023FC  6AEE               	clrf	postinc0,c
  1771  0023FE  06E8               	decf	wreg,f,c
  1772  002400  E1FD               	bnz	clear_7
  1773                           
  1774                           ; Clear objects allocated to BANK1 (53 bytes)
  1775  002402  EE01  F0C9         	lfsr	0,__pbssBANK1
  1776  002406  0E35               	movlw	53
  1777  002408                     clear_8:
  1778  002408  6AEE               	clrf	postinc0,c
  1779  00240A  06E8               	decf	wreg,f,c
  1780  00240C  E1FD               	bnz	clear_8
  1781                           
  1782                           ; Clear objects allocated to BANK4 (182 bytes)
  1783  00240E  EE04  F040         	lfsr	0,__pbssBANK4
  1784  002412  0EB6               	movlw	182
  1785  002414                     clear_9:
  1786  002414  6AEE               	clrf	postinc0,c
  1787  002416  06E8               	decf	wreg,f,c
  1788  002418  E1FD               	bnz	clear_9
  1789                           
  1790                           ; Clear objects allocated to BANK0 (48 bytes)
  1791  00241A  EE00  F0B0         	lfsr	0,__pbssBANK0
  1792  00241E  0E30               	movlw	48
  1793  002420                     clear_10:
  1794  002420  6AEE               	clrf	postinc0,c
  1795  002422  06E8               	decf	wreg,f,c
  1796  002424  E1FD               	bnz	clear_10
  1797                           
  1798                           ; Clear objects allocated to COMRAM (31 bytes)
  1799  002426  EE00  F023         	lfsr	0,__pbssCOMRAM
  1800  00242A  0E1F               	movlw	31
  1801  00242C                     clear_11:
  1802  00242C  6AEE               	clrf	postinc0,c
  1803  00242E  06E8               	decf	wreg,f,c
  1804  002430  E1FD               	bnz	clear_11
  1805  002432                     end_of_initialization:
  1806                           	opt stack 0
  1807  002432                     __end_of__initialization:
  1808                           	opt stack 0
  1809  002432  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1810  002434  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1811  002436  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1812  002438  6EF8               	movwf	tblptru,c
  1813  00243A  0100               	movlb	0
  1814  00243C  EF9A  F036         	goto	_main	;jump to C main() function
  1815                           tblptru	equ	0xFF8
  1816                           tblptrh	equ	0xFF7
  1817                           tblptrl	equ	0xFF6
  1818                           tablat	equ	0xFF5
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           postdec1	equ	0xFE5
  1822                           fsr1h	equ	0xFE2
  1823                           fsr1l	equ	0xFE1
  1824                           
  1825                           	psect	bssCOMRAM
  1826  000023                     __pbssCOMRAM:
  1827                           	opt stack 0
  1828  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1829                           	opt stack 0
  1830  000023                     	ds	2
  1831  000025                     _USBDeferOUTDataStagePackets:
  1832                           	opt stack 0
  1833  000025                     	ds	1
  1834  000026                     _USBDeferINDataStagePackets:
  1835                           	opt stack 0
  1836  000026                     	ds	1
  1837  000027                     _USBStatusStageEnabledFlag2:
  1838                           	opt stack 0
  1839  000027                     	ds	1
  1840  000028                     _USBStatusStageEnabledFlag1:
  1841                           	opt stack 0
  1842  000028                     	ds	1
  1843  000029                     _USBStatusStageTimeoutCounter:
  1844                           	opt stack 0
  1845  000029                     	ds	1
  1846  00002A                     InitGprsNetwork@GprsNetInitNextState:
  1847                           	opt stack 0
  1848  00002A                     	ds	1
  1849  00002B                     _ComChecCompleted:
  1850                           	opt stack 0
  1851  00002B                     	ds	1
  1852  00002C                     Uart_Uart1RxIsr@UartRxData:
  1853                           	opt stack 0
  1854  00002C                     	ds	1
  1855  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1856                           	opt stack 0
  1857  00002D                     	ds	1
  1858  00002E                     MdmCntSm@MdmCntState:
  1859                           	opt stack 0
  1860  00002E                     	ds	1
  1861  00002F                     RiSm@MdmDrvState:
  1862                           	opt stack 0
  1863  00002F                     	ds	1
  1864  000030                     _Mmd_RingIndicator:
  1865                           	opt stack 0
  1866  000030                     	ds	1
  1867  000031                     I2c_ReadData@ReadStatus:
  1868                           	opt stack 0
  1869  000031                     	ds	1
  1870  000032                     I2c_ReadData@TentativeCounter:
  1871                           	opt stack 0
  1872  000032                     	ds	1
  1873  000033                     I2c_ReadData@DataCounter:
  1874                           	opt stack 0
  1875  000033                     	ds	1
  1876  000034                     I2c_ReadData@I2cReadState:
  1877                           	opt stack 0
  1878  000034                     	ds	1
  1879  000035                     I2c_WriteData@WriteStatus:
  1880                           	opt stack 0
  1881  000035                     	ds	1
  1882  000036                     I2c_WriteData@TentativeCounter:
  1883                           	opt stack 0
  1884  000036                     	ds	1
  1885  000037                     I2c_WriteData@I2cNextState:
  1886                           	opt stack 0
  1887  000037                     	ds	1
  1888  000038                     I2c_WriteData@I2cWriteState:
  1889                           	opt stack 0
  1890  000038                     	ds	1
  1891  000039                     _I2cReadDataEvt:
  1892                           	opt stack 0
  1893  000039                     	ds	1
  1894  00003A                     _NewStringMdmTerminal:
  1895                           	opt stack 0
  1896  00003A                     	ds	1
  1897  00003B                     _NewMdmEvtParserRequest:
  1898                           	opt stack 0
  1899  00003B                     	ds	1
  1900  00003C                     _NewStringReceived:
  1901                           	opt stack 0
  1902  00003C                     	ds	1
  1903  00003D                     _MdmResetRequest:
  1904                           	opt stack 0
  1905  00003D                     	ds	1
  1906  00003E                     _CallClosedEvent:
  1907                           	opt stack 0
  1908  00003E                     	ds	1
  1909  00003F                     _IncomingCallEvent:
  1910                           	opt stack 0
  1911  00003F                     	ds	1
  1912  000040                     _NewSmsEvent:
  1913                           	opt stack 0
  1914  000040                     	ds	1
  1915  000041                     _ActivateRiDetection:
  1916                           	opt stack 0
  1917  000041                     	ds	1
  1918                           tblptru	equ	0xFF8
  1919                           tblptrh	equ	0xFF7
  1920                           tblptrl	equ	0xFF6
  1921                           tablat	equ	0xFF5
  1922                           postinc0	equ	0xFEE
  1923                           wreg	equ	0xFE8
  1924                           postdec1	equ	0xFE5
  1925                           fsr1h	equ	0xFE2
  1926                           fsr1l	equ	0xFE1
  1927                           
  1928                           	psect	bssBANK0
  1929  0000B0                     __pbssBANK0:
  1930                           	opt stack 0
  1931  0000B0                     _inPipes:
  1932                           	opt stack 0
  1933  0000B0                     	ds	6
  1934  0000B6                     _pBDTEntryIn:
  1935                           	opt stack 0
  1936  0000B6                     	ds	6
  1937  0000BC                     _CDCDataOutHandle:
  1938                           	opt stack 0
  1939  0000BC                     	ds	2
  1940  0000BE                     _pBDTEntryEP0OutNext:
  1941                           	opt stack 0
  1942  0000BE                     	ds	2
  1943  0000C0                     _pBDTEntryEP0OutCurrent:
  1944                           	opt stack 0
  1945  0000C0                     	ds	2
  1946  0000C2                     _RxLen:
  1947                           	opt stack 0
  1948  0000C2                     	ds	2
  1949  0000C4                     findEmptySpot@currentState:
  1950                           	opt stack 0
  1951  0000C4                     	ds	1
  1952  0000C5                     isNumberInMemory@currentState:
  1953                           	opt stack 0
  1954  0000C5                     	ds	1
  1955  0000C6                     Eeprom_Reset@memoryAddress:
  1956                           	opt stack 0
  1957  0000C6                     	ds	1
  1958  0000C7                     _cdc_tx_len:
  1959                           	opt stack 0
  1960  0000C7                     	ds	1
  1961  0000C8                     _cdc_trf_state:
  1962                           	opt stack 0
  1963  0000C8                     	ds	1
  1964  0000C9                     _cdc_rx_len:
  1965                           	opt stack 0
  1966  0000C9                     	ds	1
  1967  0000CA                     _USBDeferStatusStagePacket:
  1968                           	opt stack 0
  1969  0000CA                     	ds	1
  1970  0000CB                     _endpoint_number:
  1971                           	opt stack 0
  1972  0000CB                     	ds	1
  1973  0000CC                     _controlTransferState:
  1974                           	opt stack 0
  1975  0000CC                     	ds	1
  1976  0000CD                     _shortPacketStatus:
  1977                           	opt stack 0
  1978  0000CD                     	ds	1
  1979  0000CE                     _USBDeviceState:
  1980                           	opt stack 0
  1981  0000CE                     	ds	1
  1982  0000CF                     _I2cComSts:
  1983                           	opt stack 0
  1984  0000CF                     	ds	1
  1985  0000D0                     HttpGetMethod@GetMethodNextState:
  1986                           	opt stack 0
  1987  0000D0                     	ds	1
  1988  0000D1                     _MdmStatus:
  1989                           	opt stack 0
  1990  0000D1                     	ds	1
  1991  0000D2                     _PhoneNumbLen:
  1992                           	opt stack 0
  1993  0000D2                     	ds	1
  1994  0000D3                     _SmsLen:
  1995                           	opt stack 0
  1996  0000D3                     	ds	1
  1997  0000D4                     _SystemState:
  1998                           	opt stack 0
  1999  0000D4                     	ds	1
  2000  0000D5                     _USTATcopy:
  2001                           	opt stack 0
  2002  0000D5                     	ds	1
  2003  0000D6                     _USBActiveConfiguration:
  2004                           	opt stack 0
  2005  0000D6                     	ds	1
  2006  0000D7                     _I2cWriteDataEvt:
  2007                           	opt stack 0
  2008  0000D7                     	ds	1
  2009  0000D8                     _InitNetwork:
  2010                           	opt stack 0
  2011  0000D8                     	ds	1
  2012  0000D9                     _SmsTxtReady:
  2013                           	opt stack 0
  2014  0000D9                     	ds	1
  2015  0000DA                     _GetSmsText:
  2016                           	opt stack 0
  2017  0000DA                     	ds	1
  2018  0000DB                     _SmsEvent:
  2019                           	opt stack 0
  2020  0000DB                     	ds	1
  2021  0000DC                     _ClipEvent:
  2022                           	opt stack 0
  2023  0000DC                     	ds	1
  2024  0000DD                     _RingEvent:
  2025                           	opt stack 0
  2026  0000DD                     	ds	1
  2027  0000DE                     _SendSmsEvent:
  2028                           	opt stack 0
  2029  0000DE                     	ds	1
  2030  0000DF                     _MdmOnOffPulseRequest:
  2031                           	opt stack 0
  2032  0000DF                     	ds	1
  2033                           tblptru	equ	0xFF8
  2034                           tblptrh	equ	0xFF7
  2035                           tblptrl	equ	0xFF6
  2036                           tablat	equ	0xFF5
  2037                           postinc0	equ	0xFEE
  2038                           wreg	equ	0xFE8
  2039                           postdec1	equ	0xFE5
  2040                           fsr1h	equ	0xFE2
  2041                           fsr1l	equ	0xFE1
  2042                           
  2043                           	psect	dataBANK0
  2044  0000E0                     __pdataBANK0:
  2045                           	opt stack 0
  2046  0000E0                     findEmptySpot@currentPosition:
  2047                           	opt stack 0
  2048  0000E0                     	ds	1
  2049  0000E1                     isNumberInMemory@currentPosition:
  2050                           	opt stack 0
  2051  0000E1                     	ds	1
  2052  0000E2                     MyApp_Task@isCmdSuccessfull:
  2053                           	opt stack 0
  2054  0000E2                     	ds	1
  2055                           tblptru	equ	0xFF8
  2056                           tblptrh	equ	0xFF7
  2057                           tblptrl	equ	0xFF6
  2058                           tablat	equ	0xFF5
  2059                           postinc0	equ	0xFEE
  2060                           wreg	equ	0xFE8
  2061                           postdec1	equ	0xFE5
  2062                           fsr1h	equ	0xFE2
  2063                           fsr1l	equ	0xFE1
  2064                           
  2065                           	psect	bssBANK1
  2066  0001C9                     __pbssBANK1:
  2067                           	opt stack 0
  2068  0001C9                     _outPipes:
  2069                           	opt stack 0
  2070  0001C9                     	ds	8
  2071  0001D1                     _CDCDataInHandle:
  2072                           	opt stack 0
  2073  0001D1                     	ds	2
  2074  0001D3                     resCmdFsm@currentState:
  2075                           	opt stack 0
  2076  0001D3                     	ds	1
  2077  0001D4                     triggerCmdFsm@currentState:
  2078                           	opt stack 0
  2079  0001D4                     	ds	1
  2080  0001D5                     delCmdFsm@currentState:
  2081                           	opt stack 0
  2082  0001D5                     	ds	1
  2083  0001D6                     addCmdFsm@currentState:
  2084                           	opt stack 0
  2085  0001D6                     	ds	1
  2086  0001D7                     initFsm@currentState:
  2087                           	opt stack 0
  2088  0001D7                     	ds	1
  2089  0001D8                     initEeprom@currentState:
  2090                           	opt stack 0
  2091  0001D8                     	ds	1
  2092  0001D9                     initGprsModem@currentState:
  2093                           	opt stack 0
  2094  0001D9                     	ds	1
  2095  0001DA                     MyApp_Task@currentState:
  2096                           	opt stack 0
  2097  0001DA                     	ds	1
  2098  0001DB                     GsmGprsTerminal@SMS:
  2099                           	opt stack 0
  2100  0001DB                     	ds	1
  2101  0001DC                     _cdc_mem_type:
  2102                           	opt stack 0
  2103  0001DC                     	ds	1
  2104  0001DD                     _USBTicksSinceSuspendEnd:
  2105                           	opt stack 0
  2106  0001DD                     	ds	1
  2107  0001DE                     _BothEP0OutUOWNsSet:
  2108                           	opt stack 0
  2109  0001DE                     	ds	1
  2110  0001DF                     _USBBusIsSuspended:
  2111                           	opt stack 0
  2112  0001DF                     	ds	1
  2113  0001E0                     _RemoteWakeup:
  2114                           	opt stack 0
  2115  0001E0                     	ds	1
  2116  0001E1                     I2cSlv_QueryI2cData@Ret:
  2117                           	opt stack 0
  2118  0001E1                     	ds	1
  2119  0001E2                     I2cSlv_QueryI2cData@I2cOpState:
  2120                           	opt stack 0
  2121  0001E2                     	ds	1
  2122  0001E3                     I2cSendMsgSm@I2cComState:
  2123                           	opt stack 0
  2124  0001E3                     	ds	1
  2125  0001E4                     _I2cBusStatus:
  2126                           	opt stack 0
  2127  0001E4                     	ds	1
  2128  0001E5                     HttpGetMethod@GetMOutSts:
  2129                           	opt stack 0
  2130  0001E5                     	ds	1
  2131  0001E6                     HttpGetMethod@GetMethodState:
  2132                           	opt stack 0
  2133  0001E6                     	ds	1
  2134  0001E7                     InitGprsNetwork@GprsNetInitState:
  2135                           	opt stack 0
  2136  0001E7                     	ds	1
  2137  0001E8                     _PostMethod:
  2138                           	opt stack 0
  2139  0001E8                     	ds	1
  2140  0001E9                     _HttpGetMethodSts:
  2141                           	opt stack 0
  2142  0001E9                     	ds	1
  2143  0001EA                     _GprsNetworkSts:
  2144                           	opt stack 0
  2145  0001EA                     	ds	1
  2146  0001EB                     _ApnLenLocal:
  2147                           	opt stack 0
  2148  0001EB                     	ds	1
  2149  0001EC                     SendSmsSm@SendSms_NextState:
  2150                           	opt stack 0
  2151  0001EC                     	ds	1
  2152  0001ED                     SendSmsSm@SendSms_State:
  2153                           	opt stack 0
  2154  0001ED                     	ds	1
  2155  0001EE                     GetSmsSm@GetSmsState:
  2156                           	opt stack 0
  2157  0001EE                     	ds	1
  2158  0001EF                     ConfigureModem@NextState:
  2159                           	opt stack 0
  2160  0001EF                     	ds	1
  2161  0001F0                     ConfigureModem@MdmConfigState:
  2162                           	opt stack 0
  2163  0001F0                     	ds	1
  2164  0001F1                     TurnOnModem@TurnOnMdmState:
  2165                           	opt stack 0
  2166  0001F1                     	ds	1
  2167  0001F2                     CheckModem@CheckMdmSts:
  2168                           	opt stack 0
  2169  0001F2                     	ds	1
  2170  0001F3                     _AlarmEvent:
  2171                           	opt stack 0
  2172  0001F3                     	ds	1
  2173  0001F4                     _Led3OutSts:
  2174                           	opt stack 0
  2175  0001F4                     	ds	1
  2176  0001F5                     _Led3Sts:
  2177                           	opt stack 0
  2178  0001F5                     	ds	1
  2179  0001F6                     _Led2OutSts:
  2180                           	opt stack 0
  2181  0001F6                     	ds	1
  2182  0001F7                     _Led2Sts:
  2183                           	opt stack 0
  2184  0001F7                     	ds	1
  2185  0001F8                     _Led1OutSts:
  2186                           	opt stack 0
  2187  0001F8                     	ds	1
  2188  0001F9                     _Led1Sts:
  2189                           	opt stack 0
  2190  0001F9                     	ds	1
  2191  0001FA                     _ReadAddress:
  2192                           	opt stack 0
  2193  0001FA                     	ds	1
  2194  0001FB                     I2cDummyTx@DummyBuffer:
  2195                           	opt stack 0
  2196  0001FB                     	ds	1
  2197  0001FC                     _GetMethod:
  2198                           	opt stack 0
  2199  0001FC                     	ds	1
  2200  0001FD                     _MdmStsReady:
  2201                           	opt stack 0
  2202  0001FD                     	ds	1
  2203                           tblptru	equ	0xFF8
  2204                           tblptrh	equ	0xFF7
  2205                           tblptrl	equ	0xFF6
  2206                           tablat	equ	0xFF5
  2207                           postinc0	equ	0xFEE
  2208                           wreg	equ	0xFE8
  2209                           postdec1	equ	0xFE5
  2210                           fsr1h	equ	0xFE2
  2211                           fsr1l	equ	0xFE1
  2212                           
  2213                           	psect	dataBANK1
  2214  0001FE                     __pdataBANK1:
  2215                           	opt stack 0
  2216  0001FE                     _isMemoryEmpty:
  2217                           	opt stack 0
  2218  0001FE                     	ds	1
  2219  0001FF                     InitGprsNetwork@GprsInitSts:
  2220                           	opt stack 0
  2221  0001FF                     	ds	1
  2222                           tblptru	equ	0xFF8
  2223                           tblptrh	equ	0xFF7
  2224                           tblptrl	equ	0xFF6
  2225                           tablat	equ	0xFF5
  2226                           postinc0	equ	0xFEE
  2227                           wreg	equ	0xFE8
  2228                           postdec1	equ	0xFE5
  2229                           fsr1h	equ	0xFE2
  2230                           fsr1l	equ	0xFE1
  2231                           
  2232                           	psect	bssBANK2
  2233  0002C9                     __pbssBANK2:
  2234                           	opt stack 0
  2235  0002C9                     _pCDCDst:
  2236                           	opt stack 0
  2237  0002C9                     	ds	3
  2238  0002CC                     _pCDCSrc:
  2239                           	opt stack 0
  2240  0002CC                     	ds	3
  2241  0002CF                     _ep_data_out:
  2242                           	opt stack 0
  2243  0002CF                     	ds	3
  2244  0002D2                     _ep_data_in:
  2245                           	opt stack 0
  2246  0002D2                     	ds	3
  2247  0002D5                     _pDst:
  2248                           	opt stack 0
  2249  0002D5                     	ds	2
  2250  0002D7                     UpdateSchFlag@InterruptCounter:
  2251                           	opt stack 0
  2252  0002D7                     	ds	2
  2253  0002D9                     MdmCntSm@Counter:
  2254                           	opt stack 0
  2255  0002D9                     	ds	2
  2256  0002DB                     RiSm@Counter:
  2257                           	opt stack 0
  2258  0002DB                     	ds	2
  2259  0002DD                     _ExtInt1IsrCallback:
  2260                           	opt stack 0
  2261  0002DD                     	ds	2
  2262  0002DF                     _ExtInt0IsrCallback:
  2263                           	opt stack 0
  2264  0002DF                     	ds	2
  2265  0002E1                     _RtccIsrCallback:
  2266                           	opt stack 0
  2267  0002E1                     	ds	2
  2268  0002E3                     _Tmr4IsrCallback:
  2269                           	opt stack 0
  2270  0002E3                     	ds	2
  2271  0002E5                     _Tmr2IsrCallback:
  2272                           	opt stack 0
  2273  0002E5                     	ds	2
  2274  0002E7                     Term_MainSm@TermMainSmState:
  2275                           	opt stack 0
  2276  0002E7                     	ds	1
  2277  0002E8                     Terminal@FormatOption:
  2278                           	opt stack 0
  2279  0002E8                     	ds	1
  2280  0002E9                     Terminal@SlaveAddr:
  2281                           	opt stack 0
  2282  0002E9                     	ds	1
  2283  0002EA                     Terminal@PackageLen:
  2284                           	opt stack 0
  2285  0002EA                     	ds	1
  2286  0002EB                     Terminal@TermState:
  2287                           	opt stack 0
  2288  0002EB                     	ds	1
  2289  0002EC                     	ds	1
  2290  0002ED                     _IsUsbNumberReceived:
  2291                           	opt stack 0
  2292  0002ED                     	ds	1
  2293  0002EE                     _control_signal_bitmap:
  2294                           	opt stack 0
  2295  0002EE                     	ds	1
  2296  0002EF                     _USBAlternateInterface:
  2297                           	opt stack 0
  2298  0002EF                     	ds	2
  2299                           tblptru	equ	0xFF8
  2300                           tblptrh	equ	0xFF7
  2301                           tblptrl	equ	0xFF6
  2302                           tablat	equ	0xFF5
  2303                           postinc0	equ	0xFEE
  2304                           wreg	equ	0xFE8
  2305                           postdec1	equ	0xFE5
  2306                           fsr1h	equ	0xFE2
  2307                           fsr1l	equ	0xFE1
  2308                           
  2309                           	psect	dataBANK2
  2310  0002F1                     __pdataBANK2:
  2311                           	opt stack 0
  2312  0002F1                     Terminal@EchoOption:
  2313                           	opt stack 0
  2314  0002F1                     	ds	1
  2315  0002F2                     _MainSystemTimebaseFlag:
  2316                           	opt stack 0
  2317  0002F2                     	ds	1
  2318  0002F3                     _ConnTimeout:
  2319                           	opt stack 0
  2320  0002F3                     	ds	11
  2321  0002FE                     _relayBuffer:
  2322                           	opt stack 0
  2323  0002FE                     	ds	2
  2324                           tblptru	equ	0xFF8
  2325                           tblptrh	equ	0xFF7
  2326                           tblptrl	equ	0xFF6
  2327                           tablat	equ	0xFF5
  2328                           postinc0	equ	0xFEE
  2329                           wreg	equ	0xFE8
  2330                           postdec1	equ	0xFE5
  2331                           fsr1h	equ	0xFE2
  2332                           fsr1l	equ	0xFE1
  2333                           
  2334                           	psect	bssBANK3
  2335  000300                     __pbssBANK3:
  2336                           	opt stack 0
  2337  000300                     _Rtcm_RtccAlarm:
  2338                           	opt stack 0
  2339  000300                     	ds	6
  2340  000306                     _pBDTEntryOut:
  2341                           	opt stack 0
  2342  000306                     	ds	6
  2343  00030C                     _BaudRateGen:
  2344                           	opt stack 0
  2345  00030C                     	ds	4
  2346  000310                     _USB1msTickCount:
  2347                           	opt stack 0
  2348  000310                     	ds	4
  2349  000314                     _OsTmr_OsTickCounter:
  2350                           	opt stack 0
  2351  000314                     	ds	4
  2352  000318                     _secondCounter:
  2353                           	opt stack 0
  2354  000318                     	ds	2
  2355  00031A                     _UsbMasterPhoneNumberLen:
  2356                           	opt stack 0
  2357  00031A                     	ds	2
  2358  00031C                     _ApnLocal:
  2359                           	opt stack 0
  2360  00031C                     	ds	2
  2361  00031E                     ConfigureModem@DelayCounter:
  2362                           	opt stack 0
  2363  00031E                     	ds	2
  2364  000320                     ConfigureModem@DelayValueMs:
  2365                           	opt stack 0
  2366  000320                     	ds	2
  2367  000322                     TurnOnModem@Counter:
  2368                           	opt stack 0
  2369  000322                     	ds	2
  2370  000324                     _UartConfig:
  2371                           	opt stack 0
  2372  000324                     	ds	21
  2373  000339                     _readBuffer:
  2374                           	opt stack 0
  2375  000339                     	ds	13
  2376  000346                     _receivedNumber:
  2377                           	opt stack 0
  2378  000346                     	ds	13
  2379  000353                     I2cSlv_QueryI2cData@TimeoutTimer:
  2380                           	opt stack 0
  2381  000353                     	ds	11
  2382  00035E                     _I2cConfig:
  2383                           	opt stack 0
  2384  00035E                     	ds	10
  2385  000368                     _Led2Blink:
  2386                           	opt stack 0
  2387  000368                     	ds	9
  2388  000371                     _Led1Blink:
  2389                           	opt stack 0
  2390  000371                     	ds	9
  2391  00037A                     _dummy_encapsulated_cmd_response:
  2392                           	opt stack 0
  2393  00037A                     	ds	8
  2394  000382                     _line_coding:
  2395                           	opt stack 0
  2396  000382                     	ds	7
  2397  000389                     _Led3Pulse:
  2398                           	opt stack 0
  2399  000389                     	ds	6
  2400  00038F                     _Led2Pulse:
  2401                           	opt stack 0
  2402  00038F                     	ds	6
  2403  000395                     _Led1Pulse:
  2404                           	opt stack 0
  2405  000395                     	ds	6
  2406  00039B                     _I2cRxPacket:
  2407                           	opt stack 0
  2408  00039B                     	ds	6
  2409  0003A1                     _I2cTxPacket:
  2410                           	opt stack 0
  2411  0003A1                     	ds	5
  2412  0003A6                     _HttpGetDataLocal:
  2413                           	opt stack 0
  2414  0003A6                     	ds	5
  2415  0003AB                     _memoryPreamble:
  2416                           	opt stack 0
  2417  0003AB                     	ds	4
  2418  0003AF                     Terminal@Addr:
  2419                           	opt stack 0
  2420  0003AF                     	ds	4
  2421  0003B3                     Terminal@Len:
  2422                           	opt stack 0
  2423  0003B3                     	ds	4
  2424  0003B7                     _AlCfg:
  2425                           	opt stack 0
  2426  0003B7                     	ds	4
  2427  0003BB                     _RtcConfig:
  2428                           	opt stack 0
  2429  0003BB                     	ds	4
  2430  0003BF                     initGprsModem@modemCounter:
  2431                           	opt stack 0
  2432  0003BF                     	ds	2
  2433  0003C1                     _setupCallTicks:
  2434                           	opt stack 0
  2435  0003C1                     	ds	2
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           postinc0	equ	0xFEE
  2441                           wreg	equ	0xFE8
  2442                           postdec1	equ	0xFE5
  2443                           fsr1h	equ	0xFE2
  2444                           fsr1l	equ	0xFE1
  2445                           
  2446                           	psect	dataBANK3
  2447  0003C3                     __pdataBANK3:
  2448                           	opt stack 0
  2449  0003C3                     ModemEvtParser@F9115:
  2450                           	opt stack 0
  2451  0003C3                     	ds	5
  2452  0003C8                     ModemEvtParser@F9113:
  2453                           	opt stack 0
  2454  0003C8                     	ds	5
  2455  0003CD                     ModemEvtParser@F9111:
  2456                           	opt stack 0
  2457  0003CD                     	ds	4
  2458  0003D1                     Term_MainSm@TermDelay:
  2459                           	opt stack 0
  2460  0003D1                     	ds	11
  2461  0003DC                     _ConnWait:
  2462                           	opt stack 0
  2463  0003DC                     	ds	11
  2464  0003E7                     SendSmsSm@SwTimer:
  2465                           	opt stack 0
  2466  0003E7                     	ds	11
  2467  0003F2                     CheckModem@Timeout:
  2468                           	opt stack 0
  2469  0003F2                     	ds	11
  2470  0003FD                     _blinkInSeconds:
  2471                           	opt stack 0
  2472  0003FD                     	ds	2
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           postinc0	equ	0xFEE
  2478                           wreg	equ	0xFE8
  2479                           postdec1	equ	0xFE5
  2480                           fsr1h	equ	0xFE2
  2481                           fsr1l	equ	0xFE1
  2482                           
  2483                           	psect	bssBANK4
  2484  000440                     __pbssBANK4:
  2485                           	opt stack 0
  2486  000440                     _cdc_notice:
  2487                           	opt stack 0
  2488  000440                     	ds	10
  2489  00044A                     _Rtcm_SystemDate:
  2490                           	opt stack 0
  2491  00044A                     	ds	8
  2492  000452                     Term_MainSm@Data:
  2493                           	opt stack 0
  2494  000452                     	ds	50
  2495  000484                     _smsText:
  2496                           	opt stack 0
  2497  000484                     	ds	20
  2498  000498                     _PhoneNumber:
  2499                           	opt stack 0
  2500  000498                     	ds	20
  2501  0004AC                     _UsbMasterPhoneNumber:
  2502                           	opt stack 0
  2503  0004AC                     	ds	15
  2504  0004BB                     _EepromBuffer:
  2505                           	opt stack 0
  2506  0004BB                     	ds	15
  2507  0004CA                     _callerNumber:
  2508                           	opt stack 0
  2509  0004CA                     	ds	13
  2510  0004D7                     Terminal@SwTimer:
  2511                           	opt stack 0
  2512  0004D7                     	ds	11
  2513  0004E2                     I2cSlv_QueryI2cData@QueryTimer:
  2514                           	opt stack 0
  2515  0004E2                     	ds	11
  2516  0004ED                     _Led3Blink:
  2517                           	opt stack 0
  2518  0004ED                     	ds	9
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           postdec1	equ	0xFE5
  2526                           fsr1h	equ	0xFE2
  2527                           fsr1l	equ	0xFE1
  2528                           
  2529                           	psect	dataBANK4
  2530  0004F6                     __pdataBANK4:
  2531                           	opt stack 0
  2532  0004F6                     ModemEvtParser@F9117:
  2533                           	opt stack 0
  2534  0004F6                     	ds	10
  2535                           tblptru	equ	0xFF8
  2536                           tblptrh	equ	0xFF7
  2537                           tblptrl	equ	0xFF6
  2538                           tablat	equ	0xFF5
  2539                           postinc0	equ	0xFEE
  2540                           wreg	equ	0xFE8
  2541                           postdec1	equ	0xFE5
  2542                           fsr1h	equ	0xFE2
  2543                           fsr1l	equ	0xFE1
  2544                           
  2545                           	psect	bssBANK5
  2546  000500                     __pbssBANK5:
  2547                           	opt stack 0
  2548  000500                     _cdc_data_rx:
  2549                           	opt stack 0
  2550  000500                     	ds	64
  2551  000540                     Terminal@TermRxBuffer:
  2552                           	opt stack 0
  2553  000540                     	ds	50
  2554  000572                     _MessageText:
  2555                           	opt stack 0
  2556  000572                     	ds	50
  2557                           tblptru	equ	0xFF8
  2558                           tblptrh	equ	0xFF7
  2559                           tblptrl	equ	0xFF6
  2560                           tablat	equ	0xFF5
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           postdec1	equ	0xFE5
  2564                           fsr1h	equ	0xFE2
  2565                           fsr1l	equ	0xFE1
  2566                           
  2567                           	psect	dataBANK5
  2568  0005A4                     __pdataBANK5:
  2569                           	opt stack 0
  2570  0005A4                     _TaskTable:
  2571                           	opt stack 0
  2572  0005A4                     	ds	80
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           postdec1	equ	0xFE5
  2580                           fsr1h	equ	0xFE2
  2581                           fsr1l	equ	0xFE1
  2582                           
  2583                           	psect	bssBANK6
  2584  000600                     __pbssBANK6:
  2585                           	opt stack 0
  2586  000600                     _OsAlarms:
  2587                           	opt stack 0
  2588  000600                     	ds	220
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           postinc0	equ	0xFEE
  2594                           wreg	equ	0xFE8
  2595                           postdec1	equ	0xFE5
  2596                           fsr1h	equ	0xFE2
  2597                           fsr1l	equ	0xFE1
  2598                           
  2599                           	psect	bssBANK7
  2600  000700                     __pbssBANK7:
  2601                           	opt stack 0
  2602  000700                     _Mdm_SmsRx:
  2603                           	opt stack 0
  2604  000700                     	ds	102
  2605  000766                     Terminal@Payload:
  2606                           	opt stack 0
  2607  000766                     	ds	80
  2608  0007B6                     _cdc_data_tx:
  2609                           	opt stack 0
  2610  0007B6                     	ds	64
  2611                           tblptru	equ	0xFF8
  2612                           tblptrh	equ	0xFF7
  2613                           tblptrl	equ	0xFF6
  2614                           tablat	equ	0xFF5
  2615                           postinc0	equ	0xFEE
  2616                           wreg	equ	0xFE8
  2617                           postdec1	equ	0xFE5
  2618                           fsr1h	equ	0xFE2
  2619                           fsr1l	equ	0xFE1
  2620                           
  2621                           	psect	bssBANK8
  2622  000800                     __pbssBANK8:
  2623                           	opt stack 0
  2624  000800                     GsmGprsTerminal@UsbBuffer:
  2625                           	opt stack 0
  2626  000800                     	ds	200
  2627                           tblptru	equ	0xFF8
  2628                           tblptrh	equ	0xFF7
  2629                           tblptrl	equ	0xFF6
  2630                           tablat	equ	0xFF5
  2631                           postinc0	equ	0xFEE
  2632                           wreg	equ	0xFE8
  2633                           postdec1	equ	0xFE5
  2634                           fsr1h	equ	0xFE2
  2635                           fsr1l	equ	0xFE1
  2636                           
  2637                           	psect	bssBANK9
  2638  000900                     __pbssBANK9:
  2639                           	opt stack 0
  2640  000900                     GsmGprsTerminal@UartBuffer:
  2641                           	opt stack 0
  2642  000900                     	ds	200
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           postdec1	equ	0xFE5
  2650                           fsr1h	equ	0xFE2
  2651                           fsr1l	equ	0xFE1
  2652                           
  2653                           	psect	bssBIGRAMl
  2654  000AC8                     __pbssBIGRAMl:
  2655                           	opt stack 0
  2656  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2657                           	opt stack 0
  2658  000AC8                     	ds	400
  2659  000C58                     _RxBuffer:
  2660                           	opt stack 0
  2661  000C58                     	ds	400
  2662                           tblptru	equ	0xFF8
  2663                           tblptrh	equ	0xFF7
  2664                           tblptrl	equ	0xFF6
  2665                           tablat	equ	0xFF5
  2666                           postinc0	equ	0xFEE
  2667                           wreg	equ	0xFE8
  2668                           postdec1	equ	0xFE5
  2669                           fsr1h	equ	0xFE2
  2670                           fsr1l	equ	0xFE1
  2671                           
  2672                           	psect	cstackBANK10
  2673  000A00                     __pcstackBANK10:
  2674                           	opt stack 0
  2675  000A00                     Terminal@UsbRxBuffer:
  2676                           	opt stack 0
  2677                           
  2678                           ; 200 bytes @ 0x0
  2679  000A00                     	ds	200
  2680                           tblptru	equ	0xFF8
  2681                           tblptrh	equ	0xFF7
  2682                           tblptrl	equ	0xFF6
  2683                           tablat	equ	0xFF5
  2684                           postinc0	equ	0xFEE
  2685                           wreg	equ	0xFE8
  2686                           postdec1	equ	0xFE5
  2687                           fsr1h	equ	0xFE2
  2688                           fsr1l	equ	0xFE1
  2689                           
  2690                           	psect	cstackBANK5
  2691  0005F4                     __pcstackBANK5:
  2692                           	opt stack 0
  2693  0005F4                     ??_InitializeTasks:
  2694  0005F4                     ??_ScheduleTasks:
  2695                           
  2696                           ; 1 bytes @ 0x0
  2697  0005F4                     	ds	4
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           postinc0	equ	0xFEE
  2703                           wreg	equ	0xFE8
  2704                           postdec1	equ	0xFE5
  2705                           fsr1h	equ	0xFE2
  2706                           fsr1l	equ	0xFE1
  2707                           
  2708                           	psect	cstackBANK2
  2709  000200                     __pcstackBANK2:
  2710                           	opt stack 0
  2711  000200                     Terminal@UsbTxBuffer:
  2712                           	opt stack 0
  2713                           
  2714                           ; 200 bytes @ 0x0
  2715  000200                     	ds	200
  2716  0002C8                     InitializeTasks@ActiveTaskIndex:
  2717                           	opt stack 0
  2718  0002C8                     ScheduleTasks@ActiveTaskIndex:
  2719                           	opt stack 0
  2720                           
  2721                           ; 1 bytes @ 0xC8
  2722  0002C8                     	ds	1
  2723                           tblptru	equ	0xFF8
  2724                           tblptrh	equ	0xFF7
  2725                           tblptrl	equ	0xFF6
  2726                           tablat	equ	0xFF5
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           postdec1	equ	0xFE5
  2730                           fsr1h	equ	0xFE2
  2731                           fsr1l	equ	0xFE1
  2732                           
  2733                           	psect	cstackBANK1
  2734  000100                     __pcstackBANK1:
  2735                           	opt stack 0
  2736  000100                     initEeprom@addressToRead:
  2737                           	opt stack 0
  2738  000100                     isNumberInMemory@phoneNumber:
  2739                           	opt stack 0
  2740  000100                     isMasterNumber@phoneNumber:
  2741                           	opt stack 0
  2742  000100                     findEmptySpot@positionInMemory:
  2743                           	opt stack 0
  2744  000100                     SendSmsSm@UartMessage:
  2745                           	opt stack 0
  2746  000100                     InitGprsNetwork@UartMessage:
  2747                           	opt stack 0
  2748  000100                     Terminal@TermTxBuffer:
  2749                           	opt stack 0
  2750  000100                     HttpGetMethod@UartMessage:
  2751                           	opt stack 0
  2752                           
  2753                           ; 200 bytes @ 0x0
  2754  000100                     	ds	1
  2755  000101                     initEeprom@memoryOpResult:
  2756                           	opt stack 0
  2757                           
  2758                           ; 1 bytes @ 0x1
  2759  000101                     	ds	1
  2760  000102                     initEeprom@isInitialized:
  2761                           	opt stack 0
  2762  000102                     isMasterNumber@memoryOpResult:
  2763                           	opt stack 0
  2764  000102                     findEmptySpot@memoryOpResult:
  2765                           	opt stack 0
  2766  000102                     isNumberInMemory@positionInMemory:
  2767                           	opt stack 0
  2768                           
  2769                           ; 2 bytes @ 0x2
  2770  000102                     	ds	1
  2771  000103                     initFsm@isCmdSuccessfull:
  2772                           	opt stack 0
  2773  000103                     resCmdFsm@receivedNumber:
  2774                           	opt stack 0
  2775                           
  2776                           ; 2 bytes @ 0x3
  2777  000103                     	ds	1
  2778  000104                     isNumberInMemory@memoryOpResult:
  2779                           	opt stack 0
  2780                           
  2781                           ; 1 bytes @ 0x4
  2782  000104                     	ds	1
  2783  000105                     initFsm@isInitialized:
  2784                           	opt stack 0
  2785  000105                     addCmdFsm@receivedNumber:
  2786                           	opt stack 0
  2787  000105                     delCmdFsm@receivedNumber:
  2788                           	opt stack 0
  2789  000105                     triggerCmdFsm@receivedNumber:
  2790                           	opt stack 0
  2791  000105                     resCmdFsm@isCmdSuccessfull:
  2792                           	opt stack 0
  2793                           
  2794                           ; 2 bytes @ 0x5
  2795  000105                     	ds	2
  2796  000107                     triggerCmdFsm@isComplete:
  2797                           	opt stack 0
  2798  000107                     resCmdFsm@isComplete:
  2799                           	opt stack 0
  2800  000107                     addCmdFsm@smsText:
  2801                           	opt stack 0
  2802  000107                     delCmdFsm@smsText:
  2803                           	opt stack 0
  2804                           
  2805                           ; 2 bytes @ 0x7
  2806  000107                     	ds	1
  2807  000108                     triggerCmdFsm@numberInMemory:
  2808                           	opt stack 0
  2809  000108                     resCmdFsm@masterOpResult:
  2810                           	opt stack 0
  2811                           
  2812                           ; 1 bytes @ 0x8
  2813  000108                     	ds	1
  2814  000109                     triggerCmdFsm@masterOpResult:
  2815                           	opt stack 0
  2816  000109                     addCmdFsm@isCmdSuccessfull:
  2817                           	opt stack 0
  2818  000109                     delCmdFsm@isCmdSuccessfull:
  2819                           	opt stack 0
  2820                           
  2821                           ; 2 bytes @ 0x9
  2822  000109                     	ds	1
  2823  00010A                     triggerCmdFsm@searchNumber:
  2824                           	opt stack 0
  2825                           
  2826                           ; 1 bytes @ 0xA
  2827  00010A                     	ds	1
  2828  00010B                     addCmdFsm@isComplete:
  2829                           	opt stack 0
  2830  00010B                     delCmdFsm@emptyNumber:
  2831                           	opt stack 0
  2832                           
  2833                           ; 13 bytes @ 0xB
  2834  00010B                     	ds	1
  2835  00010C                     addCmdFsm@masterOpResult:
  2836                           	opt stack 0
  2837                           
  2838                           ; 1 bytes @ 0xC
  2839  00010C                     	ds	1
  2840  00010D                     addCmdFsm@numberInMemory:
  2841                           	opt stack 0
  2842                           
  2843                           ; 1 bytes @ 0xD
  2844  00010D                     	ds	1
  2845  00010E                     addCmdFsm@searchNumber:
  2846                           	opt stack 0
  2847                           
  2848                           ; 1 bytes @ 0xE
  2849  00010E                     	ds	10
  2850  000118                     delCmdFsm@isComplete:
  2851                           	opt stack 0
  2852                           
  2853                           ; 1 bytes @ 0x18
  2854  000118                     	ds	1
  2855  000119                     delCmdFsm@masterOpResult:
  2856                           	opt stack 0
  2857                           
  2858                           ; 1 bytes @ 0x19
  2859  000119                     	ds	1
  2860  00011A                     delCmdFsm@numberInMemory:
  2861                           	opt stack 0
  2862                           
  2863                           ; 1 bytes @ 0x1A
  2864  00011A                     	ds	1
  2865  00011B                     delCmdFsm@searchNumber:
  2866                           	opt stack 0
  2867                           
  2868                           ; 1 bytes @ 0x1B
  2869  00011B                     	ds	23
  2870  000132                     InitGprsNetwork@Index:
  2871                           	opt stack 0
  2872  000132                     Term_MainSm@FwkMajorStr:
  2873                           	opt stack 0
  2874                           
  2875                           ; 4 bytes @ 0x32
  2876  000132                     	ds	4
  2877  000136                     Term_MainSm@FwkMinorStr:
  2878                           	opt stack 0
  2879                           
  2880                           ; 4 bytes @ 0x36
  2881  000136                     	ds	4
  2882  00013A                     Term_MainSm@FwkBuildStr:
  2883                           	opt stack 0
  2884                           
  2885                           ; 4 bytes @ 0x3A
  2886  00013A                     	ds	142
  2887  0001C8                     HttpGetMethod@Index:
  2888                           	opt stack 0
  2889                           
  2890                           ; 1 bytes @ 0xC8
  2891  0001C8                     	ds	1
  2892                           tblptru	equ	0xFF8
  2893                           tblptrh	equ	0xFF7
  2894                           tblptrl	equ	0xFF6
  2895                           tablat	equ	0xFF5
  2896                           postinc0	equ	0xFEE
  2897                           wreg	equ	0xFE8
  2898                           postdec1	equ	0xFE5
  2899                           fsr1h	equ	0xFE2
  2900                           fsr1l	equ	0xFE1
  2901                           
  2902                           	psect	cstackBANK0
  2903  000060                     __pcstackBANK0:
  2904                           	opt stack 0
  2905  000060                     
  2906                           ; 1 bytes @ 0x0
  2907  000060                     	ds	8
  2908  000068                     ??_LowPriorityIsr:
  2909                           
  2910                           ; 1 bytes @ 0x8
  2911  000068                     	ds	21
  2912  00007D                     ??_isdigit:
  2913  00007D                     ??_isspace:
  2914  00007D                     ??_isupper:
  2915  00007D                     ??_Rtcc_GetRtccValue:
  2916  00007D                     ??_UartTxBufferStatus:
  2917  00007D                     ??_USBStdGetDscHandler:
  2918  00007D                     ??_USBStdGetStatusHandler:
  2919  00007D                     ?_GetLastInteractionNumber:
  2920                           	opt stack 0
  2921  00007D                     ?_USBTransferOnePacket:
  2922                           	opt stack 0
  2923  00007D                     ?_strlen:
  2924                           	opt stack 0
  2925  00007D                     ?_sprintf:
  2926                           	opt stack 0
  2927  00007D                     ?_initPreamble:
  2928                           	opt stack 0
  2929  00007D                     ?___wmul:
  2930                           	opt stack 0
  2931  00007D                     ?___awdiv:
  2932                           	opt stack 0
  2933  00007D                     ?___awmod:
  2934                           	opt stack 0
  2935  00007D                     ?___lwmod:
  2936                           	opt stack 0
  2937  00007D                     ?_GetOsTickCounter:
  2938                           	opt stack 0
  2939  00007D                     ?___lmul:
  2940                           	opt stack 0
  2941  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2942                           	opt stack 0
  2943  00007D                     SetAckStatus@AckSts:
  2944                           	opt stack 0
  2945  00007D                     WriteByte@Byte:
  2946                           	opt stack 0
  2947  00007D                     ReadByte@Byte:
  2948                           	opt stack 0
  2949  00007D                     Mcu_SetWdgSts@WdgSts:
  2950                           	opt stack 0
  2951  00007D                     RtccIrqInit@Priority:
  2952                           	opt stack 0
  2953  00007D                     Rtcc_SetRtcStatus@Status:
  2954                           	opt stack 0
  2955  00007D                     TmrBInit@Prescaler:
  2956                           	opt stack 0
  2957  00007D                     Tmr_TmrBIrqSet@Priority:
  2958                           	opt stack 0
  2959  00007D                     Tmr_StartTmr@TmrNumb:
  2960                           	opt stack 0
  2961  00007D                     UartWriteByte@ByteToWrite:
  2962                           	opt stack 0
  2963  00007D                     USBTransferOnePacket@dir:
  2964                           	opt stack 0
  2965  00007D                     USBConfigureEndpoint@direction:
  2966                           	opt stack 0
  2967  00007D                     USBCtrlTrfTxService@byteToSend:
  2968                           	opt stack 0
  2969  00007D                     USBCtrlTrfRxService@i:
  2970                           	opt stack 0
  2971  00007D                     Led_SetLedStatus@LedSts:
  2972                           	opt stack 0
  2973  00007D                     toupper@c:
  2974                           	opt stack 0
  2975  00007D                     tolower@c:
  2976                           	opt stack 0
  2977  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2978                           	opt stack 0
  2979  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2980                           	opt stack 0
  2981  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2982                           	opt stack 0
  2983  00007D                     Uart_ClearRxBuffer@Index:
  2984                           	opt stack 0
  2985  00007D                     GenerateEvt@Event:
  2986                           	opt stack 0
  2987  00007D                     ReceiveEvt@Event:
  2988                           	opt stack 0
  2989  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2990                           	opt stack 0
  2991  00007D                     StringCompare@String1:
  2992                           	opt stack 0
  2993  00007D                     ClearBuffer@Buffer:
  2994                           	opt stack 0
  2995  00007D                     isNumberValid@phoneNumber:
  2996                           	opt stack 0
  2997  00007D                     sprintf@sp:
  2998                           	opt stack 0
  2999  00007D                     ___wmul@multiplier:
  3000                           	opt stack 0
  3001  00007D                     ___awdiv@dividend:
  3002                           	opt stack 0
  3003  00007D                     ___awmod@dividend:
  3004                           	opt stack 0
  3005  00007D                     ___lwmod@dividend:
  3006                           	opt stack 0
  3007  00007D                     memcpy@d1:
  3008                           	opt stack 0
  3009  00007D                     memset@p1:
  3010                           	opt stack 0
  3011  00007D                     strcat@to:
  3012                           	opt stack 0
  3013  00007D                     strcpy@to:
  3014                           	opt stack 0
  3015  00007D                     strlen@s:
  3016                           	opt stack 0
  3017  00007D                     ___lmul@multiplier:
  3018                           	opt stack 0
  3019                           
  3020                           ; 4 bytes @ 0x1D
  3021  00007D                     	ds	1
  3022  00007E                     ??_USBConfigureEndpoint:
  3023  00007E                     Irq_InitIntController@PerInt_LowPInt:
  3024                           	opt stack 0
  3025  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  3026                           	opt stack 0
  3027  00007E                     TmrBInit@Postscaler:
  3028                           	opt stack 0
  3029  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  3030                           	opt stack 0
  3031  00007E                     UartWriteByte@Module:
  3032                           	opt stack 0
  3033  00007E                     UartTxBufferStatus@Module:
  3034                           	opt stack 0
  3035  00007E                     USBCtrlTrfRxService@byteToRead:
  3036                           	opt stack 0
  3037  00007E                     USBCtrlTrfInHandler@lastDTS:
  3038                           	opt stack 0
  3039  00007E                     Led_SetLedStatus@Led:
  3040                           	opt stack 0
  3041  00007E                     _isdigit$6498:
  3042                           	opt stack 0
  3043  00007E                     _isspace$6767:
  3044                           	opt stack 0
  3045  00007E                     _isupper$6770:
  3046                           	opt stack 0
  3047  00007E                     I2c_WriteData@WritePacket:
  3048                           	opt stack 0
  3049  00007E                     Rtcc_RtcConfig@RtcConfig:
  3050                           	opt stack 0
  3051  00007E                     USBTransferOnePacket@data:
  3052                           	opt stack 0
  3053  00007E                     USBStdGetStatusHandler@p:
  3054                           	opt stack 0
  3055                           
  3056                           ; 2 bytes @ 0x1E
  3057  00007E                     	ds	1
  3058  00007F                     ??_strlen:
  3059  00007F                     ??_Rtcc_AlarmConfig:
  3060  00007F                     ??_TmrBInit:
  3061  00007F                     Irq_InitIntController@IntPriorityEn:
  3062                           	opt stack 0
  3063  00007F                     Rtcc_GetRtccValue@RetValue:
  3064                           	opt stack 0
  3065  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3066                           	opt stack 0
  3067  00007F                     UartTxBufferStatus@TxBufferStatus:
  3068                           	opt stack 0
  3069  00007F                     GenerateEvt@EventStatus:
  3070                           	opt stack 0
  3071  00007F                     isdigit@c:
  3072                           	opt stack 0
  3073  00007F                     isspace@c:
  3074                           	opt stack 0
  3075  00007F                     isupper@c:
  3076                           	opt stack 0
  3077  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3078                           	opt stack 0
  3079  00007F                     StringCompare@String2:
  3080                           	opt stack 0
  3081  00007F                     ClearBuffer@Len:
  3082                           	opt stack 0
  3083  00007F                     sprintf@f:
  3084                           	opt stack 0
  3085  00007F                     ___wmul@multiplicand:
  3086                           	opt stack 0
  3087  00007F                     ___awdiv@divisor:
  3088                           	opt stack 0
  3089  00007F                     ___awmod@divisor:
  3090                           	opt stack 0
  3091  00007F                     ___lwmod@divisor:
  3092                           	opt stack 0
  3093  00007F                     memcpy@s1:
  3094                           	opt stack 0
  3095  00007F                     memset@c:
  3096                           	opt stack 0
  3097  00007F                     strcat@from:
  3098                           	opt stack 0
  3099  00007F                     strcpy@from:
  3100                           	opt stack 0
  3101                           
  3102                           ; 2 bytes @ 0x1F
  3103  00007F                     	ds	1
  3104  000080                     ??_isalpha:
  3105  000080                     ??_isxdigit:
  3106  000080                     ??_I2c_WriteData:
  3107  000080                     ??_Rtcc_RtcConfig:
  3108  000080                     Rtcc_GetRtccValue@RegValue:
  3109                           	opt stack 0
  3110  000080                     TmrBInit@TmrNumb:
  3111                           	opt stack 0
  3112  000080                     ReceiveEvt@EventStatus:
  3113                           	opt stack 0
  3114  000080                     USBTransferOnePacket@len:
  3115                           	opt stack 0
  3116  000080                     isNumberValid@isNumberOk:
  3117                           	opt stack 0
  3118  000080                     I2c_ReadData@ReadPacket:
  3119                           	opt stack 0
  3120  000080                     Uart_WriteConstString@ConstStringToWrite:
  3121                           	opt stack 0
  3122  000080                     Uart_WriteString@StringToWrite:
  3123                           	opt stack 0
  3124  000080                     Uart_WriteStringLen@StringToWrite:
  3125                           	opt stack 0
  3126  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3127                           	opt stack 0
  3128  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3129                           	opt stack 0
  3130                           
  3131                           ; 2 bytes @ 0x20
  3132  000080                     	ds	1
  3133  000081                     ?_GetElapsedTime:
  3134                           	opt stack 0
  3135  000081                     ?_Rtcm_GetRtccDate:
  3136                           	opt stack 0
  3137  000081                     Mdm_IsSmsReceived@Ret:
  3138                           	opt stack 0
  3139  000081                     Mdm_IsRinging@Ret:
  3140                           	opt stack 0
  3141  000081                     I2cSlv_I2cReadMsgSts@Result:
  3142                           	opt stack 0
  3143  000081                     USBTransferOnePacket@ep:
  3144                           	opt stack 0
  3145  000081                     Led_SetLedBlinkTime@Led:
  3146                           	opt stack 0
  3147  000081                     isNumberValid@i:
  3148                           	opt stack 0
  3149  000081                     ___awdiv@counter:
  3150                           	opt stack 0
  3151  000081                     ___awmod@counter:
  3152                           	opt stack 0
  3153  000081                     ___lwmod@counter:
  3154                           	opt stack 0
  3155  000081                     _isalpha$6764:
  3156                           	opt stack 0
  3157  000081                     _isxdigit$6774:
  3158                           	opt stack 0
  3159  000081                     OsTmr_StartTimer@Timer:
  3160                           	opt stack 0
  3161  000081                     StringCompare@Len:
  3162                           	opt stack 0
  3163  000081                     ClearBuffer@Index:
  3164                           	opt stack 0
  3165  000081                     ___wmul@product:
  3166                           	opt stack 0
  3167  000081                     memcpy@n:
  3168                           	opt stack 0
  3169  000081                     memset@n:
  3170                           	opt stack 0
  3171  000081                     strcat@cp:
  3172                           	opt stack 0
  3173  000081                     strcpy@cp:
  3174                           	opt stack 0
  3175  000081                     strlen@cp:
  3176                           	opt stack 0
  3177  000081                     GetElapsedTime@StartTime:
  3178                           	opt stack 0
  3179  000081                     ___lmul@multiplicand:
  3180                           	opt stack 0
  3181                           
  3182                           ; 4 bytes @ 0x21
  3183  000081                     	ds	1
  3184  000082                     ??_I2c_ReadData:
  3185  000082                     Uart_WriteConstString@Module:
  3186                           	opt stack 0
  3187  000082                     Uart_WriteString@Module:
  3188                           	opt stack 0
  3189  000082                     Uart_WriteStringLen@Len:
  3190                           	opt stack 0
  3191  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3192                           	opt stack 0
  3193  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3194                           	opt stack 0
  3195  000082                     USBConfigureEndpoint@EPNum:
  3196                           	opt stack 0
  3197  000082                     ___awdiv@sign:
  3198                           	opt stack 0
  3199  000082                     ___awmod@sign:
  3200                           	opt stack 0
  3201  000082                     isalpha@c:
  3202                           	opt stack 0
  3203  000082                     isxdigit@c:
  3204                           	opt stack 0
  3205  000082                     USBTransferOnePacket@handle:
  3206                           	opt stack 0
  3207                           
  3208                           ; 2 bytes @ 0x22
  3209  000082                     	ds	1
  3210  000083                     ?_GetCallerNumber:
  3211                           	opt stack 0
  3212  000083                     ?_atoi:
  3213                           	opt stack 0
  3214  000083                     ?_xtoi:
  3215                           	opt stack 0
  3216  000083                     ?___lwdiv:
  3217                           	opt stack 0
  3218  000083                     Uart_WriteStringLen@Index:
  3219                           	opt stack 0
  3220  000083                     Mdm_SetSmsFormat@Index:
  3221                           	opt stack 0
  3222  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3223                           	opt stack 0
  3224  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3225                           	opt stack 0
  3226  000083                     getSetupCall@isCalledReceived:
  3227                           	opt stack 0
  3228  000083                     sprintf@flag:
  3229                           	opt stack 0
  3230  000083                     memcpy@tmp:
  3231                           	opt stack 0
  3232  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3233                           	opt stack 0
  3234  000083                     USBConfigureEndpoint@handle:
  3235                           	opt stack 0
  3236  000083                     putUSBUSART@data:
  3237                           	opt stack 0
  3238  000083                     atoi@s:
  3239                           	opt stack 0
  3240  000083                     ___awdiv@quotient:
  3241                           	opt stack 0
  3242  000083                     ___lwdiv@dividend:
  3243                           	opt stack 0
  3244  000083                     memset@p:
  3245                           	opt stack 0
  3246  000083                     xtoi@s:
  3247                           	opt stack 0
  3248  000083                     OsTmr_StartTimer@Timeout:
  3249                           	opt stack 0
  3250                           
  3251                           ; 4 bytes @ 0x23
  3252  000083                     	ds	1
  3253  000084                     Uart_WriteStringLen@Module:
  3254                           	opt stack 0
  3255  000084                     I2cSlv_SendI2cMsg@TxSts:
  3256                           	opt stack 0
  3257  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3258                           	opt stack 0
  3259  000084                     CDCTxService@i:
  3260                           	opt stack 0
  3261  000084                     getsUSBUSART@buffer:
  3262                           	opt stack 0
  3263  000084                     sprintf@ap:
  3264                           	opt stack 0
  3265  000084                     memcpy@d:
  3266                           	opt stack 0
  3267  000084                     Mdm_SetSmsFormat@UartMessage:
  3268                           	opt stack 0
  3269                           
  3270                           ; 20 bytes @ 0x24
  3271  000084                     	ds	1
  3272  000085                     ??_atoi:
  3273  000085                     ??_xtoi:
  3274  000085                     ??_GetElapsedTime:
  3275  000085                     Rtcc_SetRtccValue@Value:
  3276                           	opt stack 0
  3277  000085                     USBDeviceInit@i:
  3278                           	opt stack 0
  3279  000085                     USBEnableEndpoint@options:
  3280                           	opt stack 0
  3281  000085                     putUSBUSART@length:
  3282                           	opt stack 0
  3283  000085                     CDCTxService@byte_to_send:
  3284                           	opt stack 0
  3285  000085                     Eeprom_Reset@SlaveAddress:
  3286                           	opt stack 0
  3287  000085                     StringCompare@Result:
  3288                           	opt stack 0
  3289  000085                     triggerRelay@res:
  3290                           	opt stack 0
  3291  000085                     StringCopy@SourceStr:
  3292                           	opt stack 0
  3293  000085                     ___lwdiv@divisor:
  3294                           	opt stack 0
  3295  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3296                           	opt stack 0
  3297  000085                     ___lmul@product:
  3298                           	opt stack 0
  3299                           
  3300                           ; 4 bytes @ 0x25
  3301  000085                     	ds	1
  3302  000086                     ??_Rtcc_SetRtccValue:
  3303  000086                     getsUSBUSART@len:
  3304                           	opt stack 0
  3305  000086                     triggerRelay@isRelayOn:
  3306                           	opt stack 0
  3307  000086                     sprintf@c:
  3308                           	opt stack 0
  3309  000086                     USBEnableEndpoint@p:
  3310                           	opt stack 0
  3311  000086                     StringCompare@Index:
  3312                           	opt stack 0
  3313  000086                     memcpy@s:
  3314                           	opt stack 0
  3315                           
  3316                           ; 2 bytes @ 0x26
  3317  000086                     	ds	1
  3318  000087                     atoi@sign:
  3319                           	opt stack 0
  3320  000087                     ___lwdiv@counter:
  3321                           	opt stack 0
  3322  000087                     xtoi@sign:
  3323                           	opt stack 0
  3324  000087                     StringCopy@DestStr:
  3325                           	opt stack 0
  3326  000087                     sprintf@cp:
  3327                           	opt stack 0
  3328                           
  3329                           ; 2 bytes @ 0x27
  3330  000087                     	ds	1
  3331  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3332                           	opt stack 0
  3333  000088                     USBEnableEndpoint@ep:
  3334                           	opt stack 0
  3335  000088                     atoi@a:
  3336                           	opt stack 0
  3337  000088                     ___lwdiv@quotient:
  3338                           	opt stack 0
  3339  000088                     xtoi@val:
  3340                           	opt stack 0
  3341  000088                     parseCommand@addNumberCmd:
  3342                           	opt stack 0
  3343                           
  3344                           ; 4 bytes @ 0x28
  3345  000088                     	ds	1
  3346  000089                     ??_Rtcm_GetRtccDate:
  3347  000089                     ?_strtol:
  3348                           	opt stack 0
  3349  000089                     ?___lldiv:
  3350                           	opt stack 0
  3351  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3352                           	opt stack 0
  3353  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3354                           	opt stack 0
  3355  000089                     StringCopy@Len:
  3356                           	opt stack 0
  3357  000089                     strtol@s:
  3358                           	opt stack 0
  3359  000089                     ___lldiv@dividend:
  3360                           	opt stack 0
  3361  000089                     Rtcm_SetRtccDate@Date:
  3362                           	opt stack 0
  3363                           
  3364                           ; 8 bytes @ 0x29
  3365  000089                     	ds	1
  3366  00008A                     xtoi@c:
  3367                           	opt stack 0
  3368  00008A                     LedBlinkStateMachine@LedBlink:
  3369                           	opt stack 0
  3370  00008A                     LedPulseStateMachine@LedPulse:
  3371                           	opt stack 0
  3372  00008A                     secondsAppTimer@counter:
  3373                           	opt stack 0
  3374  00008A                     utoa@buf:
  3375                           	opt stack 0
  3376  00008A                     Rtcm_GetRtccDate@LocalDate:
  3377                           	opt stack 0
  3378                           
  3379                           ; 8 bytes @ 0x2A
  3380  00008A                     	ds	1
  3381  00008B                     ??_StringCopy:
  3382  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3383                           	opt stack 0
  3384  00008B                     strtol@endptr:
  3385                           	opt stack 0
  3386                           
  3387                           ; 2 bytes @ 0x2B
  3388  00008B                     	ds	1
  3389  00008C                     LedPulseStateMachine@Led:
  3390                           	opt stack 0
  3391  00008C                     secondsAppTimer@isCyclic:
  3392                           	opt stack 0
  3393  00008C                     utoa@val:
  3394                           	opt stack 0
  3395  00008C                     parseCommand@deleteNumberCmd:
  3396                           	opt stack 0
  3397                           
  3398                           ; 4 bytes @ 0x2C
  3399  00008C                     	ds	1
  3400  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3401                           	opt stack 0
  3402  00008D                     StringCopy@Index:
  3403                           	opt stack 0
  3404  00008D                     strtol@base:
  3405                           	opt stack 0
  3406  00008D                     GetElapsedTime@TimeValue:
  3407                           	opt stack 0
  3408  00008D                     ___lldiv@divisor:
  3409                           	opt stack 0
  3410                           
  3411                           ; 4 bytes @ 0x2D
  3412  00008D                     	ds	1
  3413  00008E                     utoa@base:
  3414                           	opt stack 0
  3415                           
  3416                           ; 2 bytes @ 0x2E
  3417  00008E                     	ds	1
  3418  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3419  00008F                     ??_strtol:
  3420  00008F                     secondsAppTimer@seconds:
  3421                           	opt stack 0
  3422  00008F                     Mdm_GetSmsData@MessageText:
  3423                           	opt stack 0
  3424  00008F                     Eeprom_Write@WriteBuffer:
  3425                           	opt stack 0
  3426  00008F                     LedStateMachine@LedSts:
  3427                           	opt stack 0
  3428  00008F                     ModemEvtParser@CallReadyString:
  3429                           	opt stack 0
  3430                           
  3431                           ; 10 bytes @ 0x2F
  3432  00008F                     	ds	1
  3433  000090                     secondsAppTimer@isExpired:
  3434                           	opt stack 0
  3435  000090                     utoa@v:
  3436                           	opt stack 0
  3437  000090                     parseCommand@resetCmd:
  3438                           	opt stack 0
  3439                           
  3440                           ; 4 bytes @ 0x30
  3441  000090                     	ds	1
  3442  000091                     ??_USBStdFeatureReqHandler:
  3443  000091                     Mdm_GetSmsData@GetSmsStatus:
  3444                           	opt stack 0
  3445  000091                     USBStdSetCfgHandler@i:
  3446                           	opt stack 0
  3447  000091                     Eeprom_Write@DataLength:
  3448                           	opt stack 0
  3449  000091                     LedStateMachine@LedOut:
  3450                           	opt stack 0
  3451  000091                     secondsAppTimer@destinationTicks:
  3452                           	opt stack 0
  3453  000091                     GetElapsedTime@CurrentTimestamp:
  3454                           	opt stack 0
  3455  000091                     ___lldiv@quotient:
  3456                           	opt stack 0
  3457                           
  3458                           ; 4 bytes @ 0x31
  3459  000091                     	ds	1
  3460  000092                     Eeprom_Write@WriteSts:
  3461                           	opt stack 0
  3462  000092                     utoa@c:
  3463                           	opt stack 0
  3464  000092                     USBStdFeatureReqHandler@pUEP:
  3465                           	opt stack 0
  3466                           
  3467                           ; 2 bytes @ 0x32
  3468  000092                     	ds	1
  3469  000093                     Eeprom_Write@MemoryAddress:
  3470                           	opt stack 0
  3471  000093                     waitSetupCall@isCallArrived:
  3472                           	opt stack 0
  3473  000093                     cmdVisualEffet@isCmdSuccessfull:
  3474                           	opt stack 0
  3475  000093                     strtol@sign:
  3476                           	opt stack 0
  3477  000093                     LedStateMachine@LedBlink:
  3478                           	opt stack 0
  3479  000093                     itoa@buf:
  3480                           	opt stack 0
  3481                           
  3482                           ; 2 bytes @ 0x33
  3483  000093                     	ds	1
  3484  000094                     USBStdFeatureReqHandler@current_ep_data:
  3485                           	opt stack 0
  3486  000094                     Eeprom_Write@SlaveAddress:
  3487                           	opt stack 0
  3488  000094                     parseCommand@state:
  3489                           	opt stack 0
  3490  000094                     cmdVisualEffet@seconds:
  3491                           	opt stack 0
  3492  000094                     strtol@a:
  3493                           	opt stack 0
  3494                           
  3495                           ; 4 bytes @ 0x34
  3496  000094                     	ds	1
  3497  000095                     Eeprom_Write@CommandLength:
  3498                           	opt stack 0
  3499  000095                     detectCmd@currentState:
  3500                           	opt stack 0
  3501  000095                     ___lldiv@counter:
  3502                           	opt stack 0
  3503  000095                     OsTmr_GetTimerStatus@Timer:
  3504                           	opt stack 0
  3505  000095                     USBStdFeatureReqHandler@p:
  3506                           	opt stack 0
  3507  000095                     LedStateMachine@LedPulse:
  3508                           	opt stack 0
  3509  000095                     itoa@val:
  3510                           	opt stack 0
  3511                           
  3512                           ; 2 bytes @ 0x35
  3513  000095                     	ds	1
  3514  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3515                           	opt stack 0
  3516  000096                     SetUartBaudRate@UartConfig:
  3517                           	opt stack 0
  3518  000096                     saveNumberInMemory@phoneNumber:
  3519                           	opt stack 0
  3520  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3521                           	opt stack 0
  3522                           
  3523                           ; 4 bytes @ 0x36
  3524  000096                     	ds	1
  3525  000097                     ??_USBCtrlEPService:
  3526  000097                     itoa@base:
  3527                           	opt stack 0
  3528                           
  3529                           ; 2 bytes @ 0x37
  3530  000097                     	ds	1
  3531  000098                     Tmr_TmrBPrSet@Prescaler:
  3532                           	opt stack 0
  3533  000098                     Mdm_SetSmsFormat@TextFormat:
  3534                           	opt stack 0
  3535  000098                     USBDeviceTasks@i:
  3536                           	opt stack 0
  3537  000098                     LedStateMachine@LedOutSts:
  3538                           	opt stack 0
  3539  000098                     saveNumberInMemory@address:
  3540                           	opt stack 0
  3541  000098                     strtol@c:
  3542                           	opt stack 0
  3543                           
  3544                           ; 1 bytes @ 0x38
  3545  000098                     	ds	1
  3546  000099                     Tmr_TmrBPrSet@Postscaler:
  3547                           	opt stack 0
  3548  000099                     SetUartBaudRate@Module:
  3549                           	opt stack 0
  3550  000099                     LedStateMachine@Led:
  3551                           	opt stack 0
  3552  000099                     initGprsModem@isInitialized:
  3553                           	opt stack 0
  3554  000099                     detectUsbNumber@isCmdSuccessfull:
  3555                           	opt stack 0
  3556  000099                     itoa@cp:
  3557                           	opt stack 0
  3558  000099                     ModemEvtParser@ClipString:
  3559                           	opt stack 0
  3560                           
  3561                           ; 5 bytes @ 0x39
  3562  000099                     	ds	1
  3563  00009A                     ??_Led_MainTask:
  3564  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3565                           	opt stack 0
  3566  00009A                     SetUartBaudRate@BaudRateRegister:
  3567                           	opt stack 0
  3568  00009A                     SetBaudRate@McuClockHz:
  3569                           	opt stack 0
  3570                           
  3571                           ; 4 bytes @ 0x3A
  3572  00009A                     	ds	1
  3573  00009B                     ??_SendSmsSm:
  3574  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3575                           	opt stack 0
  3576  00009B                     detectUsbNumber@isActionPerformed:
  3577                           	opt stack 0
  3578  00009B                     OsTmr_Wait@WaitTimer:
  3579                           	opt stack 0
  3580  00009B                     InitGprsNetwork@Apn:
  3581                           	opt stack 0
  3582  00009B                     HttpGetMethod@GetData:
  3583                           	opt stack 0
  3584                           
  3585                           ; 2 bytes @ 0x3B
  3586  00009B                     	ds	1
  3587  00009C                     SetUartBaudRate@DivisionFactor:
  3588                           	opt stack 0
  3589  00009C                     Tmr_TmrBPrSet@Divisor:
  3590                           	opt stack 0
  3591                           
  3592                           ; 4 bytes @ 0x3C
  3593  00009C                     	ds	1
  3594  00009D                     ??_HttpGetMethod:
  3595  00009D                     InitGprsNetwork@ApnLen:
  3596                           	opt stack 0
  3597  00009D                     Uart_InitUartModule@UartConfig:
  3598                           	opt stack 0
  3599  00009D                     OsTmr_Wait@DelayMs:
  3600                           	opt stack 0
  3601                           
  3602                           ; 4 bytes @ 0x3D
  3603  00009D                     	ds	1
  3604  00009E                     ??_SetBaudRate:
  3605  00009E                     ??_InitGprsNetwork:
  3606  00009E                     ModemEvtParser@SmsString:
  3607                           	opt stack 0
  3608                           
  3609                           ; 5 bytes @ 0x3E
  3610  00009E                     	ds	1
  3611  00009F                     ??_Uart_InitUartModule:
  3612                           
  3613                           ; 1 bytes @ 0x3F
  3614  00009F                     	ds	1
  3615  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3616                           	opt stack 0
  3617                           
  3618                           ; 2 bytes @ 0x40
  3619  0000A0                     	ds	1
  3620  0000A1                     Uart_InitUartModule@Module:
  3621                           	opt stack 0
  3622  0000A1                     OsTmr_Wait@Ret:
  3623                           	opt stack 0
  3624                           
  3625                           ; 1 bytes @ 0x41
  3626  0000A1                     	ds	1
  3627  0000A2                     ??_Terminal:
  3628  0000A2                     I2c_InitI2cModule@I2cConfig:
  3629                           	opt stack 0
  3630  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3631                           	opt stack 0
  3632                           
  3633                           ; 2 bytes @ 0x42
  3634  0000A2                     	ds	1
  3635  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3636                           	opt stack 0
  3637  0000A3                     ModemEvtParser@RingString:
  3638                           	opt stack 0
  3639                           
  3640                           ; 4 bytes @ 0x43
  3641  0000A3                     	ds	1
  3642  0000A4                     ??_I2c_InitI2cModule:
  3643  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3644                           	opt stack 0
  3645  0000A4                     Terminal@i:
  3646                           	opt stack 0
  3647  0000A4                     InitSchedTimer@TmrBConfig:
  3648                           	opt stack 0
  3649                           
  3650                           ; 7 bytes @ 0x44
  3651  0000A4                     	ds	1
  3652  0000A5                     Terminal@ReceivedBytes:
  3653                           	opt stack 0
  3654  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3655                           	opt stack 0
  3656                           
  3657                           ; 2 bytes @ 0x45
  3658  0000A5                     	ds	1
  3659  0000A6                     Terminal@Index:
  3660                           	opt stack 0
  3661                           
  3662                           ; 1 bytes @ 0x46
  3663  0000A6                     	ds	1
  3664  0000A7                     ModemEvtParser@Match:
  3665                           	opt stack 0
  3666  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3667                           	opt stack 0
  3668                           
  3669                           ; 1 bytes @ 0x47
  3670  0000A7                     	ds	1
  3671  0000A8                     ModemEvtParser@CompareIdx:
  3672                           	opt stack 0
  3673  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3674                           	opt stack 0
  3675                           
  3676                           ; 1 bytes @ 0x48
  3677  0000A8                     	ds	1
  3678  0000A9                     Eeprom_Read@ReadBuffer:
  3679                           	opt stack 0
  3680                           
  3681                           ; 2 bytes @ 0x49
  3682  0000A9                     	ds	2
  3683  0000AB                     Eeprom_Read@DataLength:
  3684                           	opt stack 0
  3685                           
  3686                           ; 1 bytes @ 0x4B
  3687  0000AB                     	ds	1
  3688  0000AC                     Eeprom_Read@MemoryAddress:
  3689                           	opt stack 0
  3690                           
  3691                           ; 1 bytes @ 0x4C
  3692  0000AC                     	ds	1
  3693  0000AD                     Eeprom_Read@SlaveAddress:
  3694                           	opt stack 0
  3695                           
  3696                           ; 1 bytes @ 0x4D
  3697  0000AD                     	ds	1
  3698  0000AE                     Eeprom_Read@ReadSts:
  3699                           	opt stack 0
  3700                           
  3701                           ; 1 bytes @ 0x4E
  3702  0000AE                     	ds	1
  3703  0000AF                     Eeprom_Read@QuerySts:
  3704                           	opt stack 0
  3705                           
  3706                           ; 1 bytes @ 0x4F
  3707  0000AF                     	ds	1
  3708  0000B0                     tblptru	equ	0xFF8
  3709                           tblptrh	equ	0xFF7
  3710                           tblptrl	equ	0xFF6
  3711                           tablat	equ	0xFF5
  3712                           postinc0	equ	0xFEE
  3713                           wreg	equ	0xFE8
  3714                           postdec1	equ	0xFE5
  3715                           fsr1h	equ	0xFE2
  3716                           fsr1l	equ	0xFE1
  3717                           
  3718                           ; 1 bytes @ 0x50
  3719                           
  3720                           	psect	cstackCOMRAM
  3721  000001                     __pcstackCOMRAM:
  3722                           	opt stack 0
  3723  000001                     i2GenerateEvt@Event:
  3724                           	opt stack 0
  3725                           
  3726                           ; 2 bytes @ 0x0
  3727  000001                     	ds	2
  3728  000003                     i2GenerateEvt@EventStatus:
  3729                           	opt stack 0
  3730                           
  3731                           ; 1 bytes @ 0x2
  3732  000003                     	ds	1
  3733  000004                     Uart_MdmGsmGprsReadService@UartData:
  3734                           	opt stack 0
  3735                           
  3736                           ; 1 bytes @ 0x3
  3737  000004                     	ds	1
  3738  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3739                           	opt stack 0
  3740                           
  3741                           ; 2 bytes @ 0x4
  3742  000005                     	ds	2
  3743  000007                     ??_HighPriorityIsr:
  3744                           
  3745                           ; 1 bytes @ 0x6
  3746  000007                     	ds	18
  3747  000019                     ?i1___wmul:
  3748                           	opt stack 0
  3749  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3750                           	opt stack 0
  3751  000019                     i1GenerateEvt@Event:
  3752                           	opt stack 0
  3753  000019                     i1___wmul@multiplier:
  3754                           	opt stack 0
  3755                           
  3756                           ; 2 bytes @ 0x18
  3757  000019                     	ds	2
  3758  00001B                     i1GenerateEvt@EventStatus:
  3759                           	opt stack 0
  3760  00001B                     i1___wmul@multiplicand:
  3761                           	opt stack 0
  3762                           
  3763                           ; 2 bytes @ 0x1A
  3764  00001B                     	ds	1
  3765  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3766                           	opt stack 0
  3767                           
  3768                           ; 2 bytes @ 0x1B
  3769  00001C                     	ds	1
  3770  00001D                     i1___wmul@product:
  3771                           	opt stack 0
  3772                           
  3773                           ; 2 bytes @ 0x1C
  3774  00001D                     	ds	1
  3775  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3776                           	opt stack 0
  3777                           
  3778                           ; 1 bytes @ 0x1D
  3779  00001E                     	ds	1
  3780  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3781                           	opt stack 0
  3782                           
  3783                           ; 1 bytes @ 0x1E
  3784  00001F                     	ds	1
  3785  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3786                           	opt stack 0
  3787                           
  3788                           ; 1 bytes @ 0x1F
  3789  000020                     	ds	1
  3790  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3791                           	opt stack 0
  3792                           
  3793                           ; 2 bytes @ 0x20
  3794  000021                     	ds	2
  3795  000023                     tblptru	equ	0xFF8
  3796                           tblptrh	equ	0xFF7
  3797                           tblptrl	equ	0xFF6
  3798                           tablat	equ	0xFF5
  3799                           postinc0	equ	0xFEE
  3800                           wreg	equ	0xFE8
  3801                           postdec1	equ	0xFE5
  3802                           fsr1h	equ	0xFE2
  3803                           fsr1l	equ	0xFE1
  3804                           
  3805                           ; 1 bytes @ 0x22
  3806 ;;
  3807 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3808 ;;
  3809 ;; *************** function _main *****************
  3810 ;; Defined at:
  3811 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2   14[None  ] short 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3829 ;;Total ram usage:        0 bytes
  3830 ;; Hardware stack levels required when called:   23
  3831 ;; This function calls:
  3832 ;;		_Sch_MainScheduler
  3833 ;;		_SystemInit
  3834 ;; This function is called by:
  3835 ;;		Startup code after reset
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text0
  3840  006D34                     __ptext0:
  3841                           	opt stack 0
  3842  006D34                     _main:
  3843                           	opt stack 8
  3844                           
  3845                           ;main.c: 61: SystemInit();
  3846                           
  3847                           ;incstack = 0
  3848  006D34  EC9E  F033         	call	_SystemInit	;wreg free
  3849                           
  3850                           ;main.c: 64: Sch_MainScheduler();
  3851  006D38  EC80  F035         	call	_Sch_MainScheduler	;wreg free
  3852                           
  3853                           ;main.c: 67: return 0;
  3854                           ;	Return value of _main is never used
  3855  006D3C  EF66  F000         	goto	start
  3856  006D40                     __end_of_main:
  3857                           	opt stack 0
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           postdec1	equ	0xFE5
  3865                           fsr1h	equ	0xFE2
  3866                           fsr1l	equ	0xFE1
  3867                           
  3868 ;; *************** function _SystemInit *****************
  3869 ;; Defined at:
  3870 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3888 ;;Total ram usage:        0 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:   15
  3891 ;; This function calls:
  3892 ;;		_InitSchedTimer
  3893 ;;		_Irq_InitIntController
  3894 ;;		_Mcu_ConfigExtInt
  3895 ;;		_Mcu_StartSystemPll
  3896 ;;		_Pm_DsReleasePinControl
  3897 ;;		_Tmr_RegisterTmr2IsrCallback
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text1
  3904  00673C                     __ptext1:
  3905                           	opt stack 0
  3906  00673C                     _SystemInit:
  3907                           	opt stack 15
  3908                           
  3909                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3910                           
  3911                           ;incstack = 0
  3912  00673C  ECCE  F036         	call	_Pm_DsReleasePinControl	;wreg free
  3913                           
  3914                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3915  006740  EC71  F035         	call	_Mcu_StartSystemPll	;wreg free
  3916                           
  3917                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3918  006744  0E01               	movlw	1
  3919  006746  0100               	movlb	0	; () banked
  3920  006748  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3921  00674A  0E01               	movlw	1
  3922  00674C  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3923  00674E  0E01               	movlw	1
  3924  006750  EC42  F034         	call	_Irq_InitIntController
  3925                           
  3926                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3927  006754  0E26               	movlw	low _Sch_SchmIntService
  3928  006756  0100               	movlb	0	; () banked
  3929  006758  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3930  00675A  0E6D               	movlw	high _Sch_SchmIntService
  3931  00675C  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3932  00675E  ECB1  F036         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3933                           
  3934                           ;sys_init.c: 132: InitSchedTimer();
  3935  006762  ECFE  F033         	call	_InitSchedTimer	;wreg free
  3936                           
  3937                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3938  006766  ECBA  F035         	call	_Mcu_ConfigExtInt	;wreg free
  3939  00676A  0012               	return		;funcret
  3940  00676C                     __end_of_SystemInit:
  3941                           	opt stack 0
  3942                           tblptru	equ	0xFF8
  3943                           tblptrh	equ	0xFF7
  3944                           tblptrl	equ	0xFF6
  3945                           tablat	equ	0xFF5
  3946                           postinc0	equ	0xFEE
  3947                           wreg	equ	0xFE8
  3948                           postdec1	equ	0xFE5
  3949                           fsr1h	equ	0xFE2
  3950                           fsr1l	equ	0xFE1
  3951                           
  3952 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3953 ;; Defined at:
  3954 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3957 ;;		 -> Sch_SchmIntService(1), 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3969 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3972 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3973 ;;Total ram usage:        2 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:   11
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_SystemInit
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text2
  3984  006D62                     __ptext2:
  3985                           	opt stack 0
  3986  006D62                     _Tmr_RegisterTmr2IsrCallback:
  3987                           	opt stack 18
  3988                           
  3989                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3990                           
  3991                           ;incstack = 0
  3992  006D62  C07D  F2E5         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3993  006D66  C07E  F2E6         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3994  006D6A  0012               	return		;funcret
  3995  006D6C                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3996                           	opt stack 0
  3997                           tblptru	equ	0xFF8
  3998                           tblptrh	equ	0xFF7
  3999                           tblptrl	equ	0xFF6
  4000                           tablat	equ	0xFF5
  4001                           postinc0	equ	0xFEE
  4002                           wreg	equ	0xFE8
  4003                           postdec1	equ	0xFE5
  4004                           fsr1h	equ	0xFE2
  4005                           fsr1l	equ	0xFE1
  4006                           
  4007 ;; *************** function _Pm_DsReleasePinControl *****************
  4008 ;; Defined at:
  4009 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		None
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;Total ram usage:        0 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:   11
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_SystemInit
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text3
  4038  006D9C                     __ptext3:
  4039                           	opt stack 0
  4040  006D9C                     _Pm_DsReleasePinControl:
  4041                           	opt stack 18
  4042                           
  4043                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  4044                           
  4045                           ;incstack = 0
  4046  006D9C  010F               	movlb	15	; () banked
  4047  006D9E  914C               	bcf	76,0,b	;volatile
  4048                           
  4049                           ; BSR set to: 15
  4050  006DA0  0012               	return		;funcret
  4051  006DA2                     __end_of_Pm_DsReleasePinControl:
  4052                           	opt stack 0
  4053                           tblptru	equ	0xFF8
  4054                           tblptrh	equ	0xFF7
  4055                           tblptrl	equ	0xFF6
  4056                           tablat	equ	0xFF5
  4057                           postinc0	equ	0xFEE
  4058                           wreg	equ	0xFE8
  4059                           postdec1	equ	0xFE5
  4060                           fsr1h	equ	0xFE2
  4061                           fsr1l	equ	0xFE1
  4062                           
  4063 ;; *************** function _Mcu_StartSystemPll *****************
  4064 ;; Defined at:
  4065 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4083 ;;Total ram usage:        2 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:   11
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_SystemInit
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text4
  4094  006AE2                     __ptext4:
  4095                           	opt stack 0
  4096  006AE2                     _Mcu_StartSystemPll:
  4097                           	opt stack 18
  4098                           
  4099                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4100                           
  4101                           ; BSR set to: 15
  4102                           ;incstack = 0
  4103  006AE2  0E03               	movlw	3
  4104  006AE4  0100               	movlb	0	; () banked
  4105  006AE6  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4106  006AE8  0EE8               	movlw	232
  4107  006AEA  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4111  006AEC  8C9B               	bsf	3995,6,c	;volatile
  4112  006AEE                     l12509:
  4113                           
  4114                           ; BSR set to: 0
  4115  006AEE  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4116  006AF0  A0D8               	btfss	status,0,c
  4117  006AF2  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4118  006AF4  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4119  006AF6  E1FB               	bnz	l12509
  4120  006AF8  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4121  006AFA  B4D8               	btfsc	status,2,c
  4122  006AFC  0012               	return	
  4123  006AFE  D7F7               	goto	l237
  4124  006B00                     __end_of_Mcu_StartSystemPll:
  4125                           	opt stack 0
  4126                           tblptru	equ	0xFF8
  4127                           tblptrh	equ	0xFF7
  4128                           tblptrl	equ	0xFF6
  4129                           tablat	equ	0xFF5
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           postdec1	equ	0xFE5
  4133                           fsr1h	equ	0xFE2
  4134                           fsr1l	equ	0xFE1
  4135                           status	equ	0xFD8
  4136                           
  4137 ;; *************** function _Mcu_ConfigExtInt *****************
  4138 ;; Defined at:
  4139 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;		None
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4157 ;;Total ram usage:        0 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:   11
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_SystemInit
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text5
  4168  006B74                     __ptext5:
  4169                           	opt stack 0
  4170  006B74                     _Mcu_ConfigExtInt:
  4171                           	opt stack 18
  4172                           
  4173                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;incstack = 0
  4177  006B74  8093               	bsf	3987,0,c	;volatile
  4178                           
  4179                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4180  006B76  8695               	bsf	3989,3,c	;volatile
  4181                           
  4182                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4183  006B78  010F               	movlb	15	; () banked
  4184  006B7A  8949               	bsf	73,4,b	;volatile
  4185                           
  4186                           ; BSR set to: 15
  4187                           ;mcu_drv.c: 108: RPINR1 = 20;
  4188  006B7C  0E14               	movlw	20
  4189  006B7E  010E               	movlb	14	; () banked
  4190  006B80  6FE7               	movwf	231,b	;volatile
  4191                           
  4192                           ; BSR set to: 14
  4193                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4194  006B82  88F2               	bsf	intcon,4,c	;volatile
  4195                           
  4196                           ; BSR set to: 14
  4197                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4198  006B84  86F0               	bsf	intcon3,3,c	;volatile
  4199                           
  4200                           ; BSR set to: 14
  4201                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4202  006B86  8CF0               	bsf	intcon3,6,c	;volatile
  4203                           
  4204                           ; BSR set to: 14
  4205                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4206  006B88  9CF1               	bcf	intcon2,6,c	;volatile
  4207                           
  4208                           ; BSR set to: 14
  4209                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4210  006B8A  9AF1               	bcf	intcon2,5,c	;volatile
  4211                           
  4212                           ; BSR set to: 14
  4213  006B8C  0012               	return		;funcret
  4214  006B8E                     __end_of_Mcu_ConfigExtInt:
  4215                           	opt stack 0
  4216                           tblptru	equ	0xFF8
  4217                           tblptrh	equ	0xFF7
  4218                           tblptrl	equ	0xFF6
  4219                           tablat	equ	0xFF5
  4220                           intcon	equ	0xFF2
  4221                           intcon2	equ	0xFF1
  4222                           intcon3	equ	0xFF0
  4223                           postinc0	equ	0xFEE
  4224                           wreg	equ	0xFE8
  4225                           postdec1	equ	0xFE5
  4226                           fsr1h	equ	0xFE2
  4227                           fsr1l	equ	0xFE1
  4228                           status	equ	0xFD8
  4229                           
  4230 ;; *************** function _Irq_InitIntController *****************
  4231 ;; Defined at:
  4232 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  IntPriorityE    1    wreg     enum E7720
  4235 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4236 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4248 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4249 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4251 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4252 ;;Total ram usage:        3 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:   11
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_SystemInit
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text6
  4263  006884                     __ptext6:
  4264                           	opt stack 0
  4265  006884                     _Irq_InitIntController:
  4266                           	opt stack 18
  4267                           
  4268                           ; BSR set to: 14
  4269                           ;incstack = 0
  4270                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4271  006884  0100               	movlb	0	; () banked
  4272  006886  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4273                           
  4274                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4275  006888  0100               	movlb	0	; () banked
  4276  00688A  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4277  00688C  D002               	bra	u10975
  4278  00688E  9ED0               	bcf	4048,7,c	;volatile
  4279  006890  D001               	bra	u10976
  4280  006892                     u10975:
  4281  006892  8ED0               	bsf	4048,7,c	;volatile
  4282  006894                     u10976:
  4283                           
  4284                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4285  006894  0100               	movlb	0	; () banked
  4286  006896  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4287  006898  D002               	bra	u10985
  4288  00689A  9EF2               	bcf	intcon,7,c	;volatile
  4289  00689C  D001               	bra	u10986
  4290  00689E                     u10985:
  4291  00689E  8EF2               	bsf	intcon,7,c	;volatile
  4292  0068A0                     u10986:
  4293                           
  4294                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4295  0068A0  0100               	movlb	0	; () banked
  4296  0068A2  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4297  0068A4  D002               	bra	u10995
  4298  0068A6  9CF2               	bcf	intcon,6,c	;volatile
  4299  0068A8  D001               	bra	u10996
  4300  0068AA                     u10995:
  4301  0068AA  8CF2               	bsf	intcon,6,c	;volatile
  4302  0068AC                     u10996:
  4303  0068AC  0012               	return		;funcret
  4304  0068AE                     __end_of_Irq_InitIntController:
  4305                           	opt stack 0
  4306                           tblptru	equ	0xFF8
  4307                           tblptrh	equ	0xFF7
  4308                           tblptrl	equ	0xFF6
  4309                           tablat	equ	0xFF5
  4310                           intcon	equ	0xFF2
  4311                           intcon2	equ	0xFF1
  4312                           intcon3	equ	0xFF0
  4313                           postinc0	equ	0xFEE
  4314                           wreg	equ	0xFE8
  4315                           postdec1	equ	0xFE5
  4316                           fsr1h	equ	0xFE2
  4317                           fsr1l	equ	0xFE1
  4318                           status	equ	0xFD8
  4319                           
  4320 ;; *************** function _InitSchedTimer *****************
  4321 ;; Defined at:
  4322 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;		None
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      void 
  4329 ;; Registers used:
  4330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4337 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4339 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4340 ;;Total ram usage:        7 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:   14
  4343 ;; This function calls:
  4344 ;;		_Tmr_TmrBConfig
  4345 ;; This function is called by:
  4346 ;;		_SystemInit
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text7
  4351  0067FC                     __ptext7:
  4352                           	opt stack 0
  4353  0067FC                     _InitSchedTimer:
  4354                           	opt stack 15
  4355                           
  4356                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4357                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4358                           
  4359                           ;incstack = 0
  4360  0067FC  0E04               	movlw	4
  4361  0067FE  0100               	movlb	0	; () banked
  4362  006800  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4363                           
  4364                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4365  006802  0E0C               	movlw	12
  4366  006804  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4367                           
  4368                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4369  006806  0E00               	movlw	0
  4370  006808  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4371                           
  4372                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4373  00680A  0E01               	movlw	1
  4374  00680C  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4375                           
  4376                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4377  00680E  0E03               	movlw	3
  4378  006810  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4379  006812  0EE8               	movlw	232
  4380  006814  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4381                           
  4382                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4383  006816  0E01               	movlw	1
  4384  006818  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4388  00681A  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4389  00681C  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4390  00681E  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4391  006820  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4392  006822  0E02               	movlw	2
  4393  006824  EC2E  F020         	call	_Tmr_TmrBConfig
  4394  006828  0012               	return		;funcret
  4395  00682A                     __end_of_InitSchedTimer:
  4396                           	opt stack 0
  4397                           tblptru	equ	0xFF8
  4398                           tblptrh	equ	0xFF7
  4399                           tblptrl	equ	0xFF6
  4400                           tablat	equ	0xFF5
  4401                           intcon	equ	0xFF2
  4402                           intcon2	equ	0xFF1
  4403                           intcon3	equ	0xFF0
  4404                           postinc0	equ	0xFEE
  4405                           wreg	equ	0xFE8
  4406                           postdec1	equ	0xFE5
  4407                           fsr1h	equ	0xFE2
  4408                           fsr1l	equ	0xFE1
  4409                           status	equ	0xFD8
  4410                           
  4411 ;; *************** function _Tmr_TmrBConfig *****************
  4412 ;; Defined at:
  4413 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  TmrNumb         1    wreg     unsigned char 
  4416 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4417 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4431 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4432 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4433 ;;Total ram usage:        4 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:   13
  4436 ;; This function calls:
  4437 ;;		_TmrBInit
  4438 ;;		_Tmr_StartTmr
  4439 ;;		_Tmr_TmrBIrqSet
  4440 ;;		_Tmr_TmrBPrSet
  4441 ;; This function is called by:
  4442 ;;		_InitSchedTimer
  4443 ;;		_InitAuxTimer
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text8
  4448  00405C                     __ptext8:
  4449                           	opt stack 0
  4450  00405C                     _Tmr_TmrBConfig:
  4451                           	opt stack 15
  4452                           
  4453                           ;incstack = 0
  4454                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4455  00405C  0100               	movlb	0	; () banked
  4456  00405E  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4457                           
  4458                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4459  004060  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4460  004064  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4461  004068  50DF               	movf	indf2,w,c
  4462  00406A  0100               	movlb	0	; () banked
  4463  00406C  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4464  00406E  EE20 F001          	lfsr	2,1
  4465  004072  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4466  004074  26D9               	addwf	fsr2l,f,c
  4467  004076  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4468  004078  22DA               	addwfc	fsr2h,f,c
  4469  00407A  50DF               	movf	indf2,w,c
  4470  00407C  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4471  00407E  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4472  004080  ECC7  F026         	call	_TmrBInit
  4473                           
  4474                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4475  004084  0100               	movlb	0	; () banked
  4476  004086  EE20 F002          	lfsr	2,2
  4477  00408A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4478  00408C  26D9               	addwf	fsr2l,f,c
  4479  00408E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4480  004090  22DA               	addwfc	fsr2h,f,c
  4481  004092  04DE               	decf	postinc2,w,c
  4482  004094  A4D8               	btfss	status,2,c
  4483  004096  D00E               	goto	l546
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;tmr_drv.c: 277: {
  4487                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4488  004098  EE20 F003          	lfsr	2,3
  4489  00409C  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4490  00409E  26D9               	addwf	fsr2l,f,c
  4491  0040A0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4492  0040A2  22DA               	addwfc	fsr2h,f,c
  4493  0040A4  50DF               	movf	indf2,w,c
  4494  0040A6  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4495  0040A8  0E01               	movlw	1
  4496  0040AA  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4497  0040AC  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4498  0040AE  EC6D  F030         	call	_Tmr_TmrBIrqSet
  4499                           
  4500                           ;tmr_drv.c: 280: }
  4501  0040B2  D00E               	goto	l547
  4502  0040B4                     l546:
  4503                           
  4504                           ;tmr_drv.c: 281: else
  4505                           ;tmr_drv.c: 282: {
  4506                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4507  0040B4  0100               	movlb	0	; () banked
  4508  0040B6  EE20 F003          	lfsr	2,3
  4509  0040BA  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4510  0040BC  26D9               	addwf	fsr2l,f,c
  4511  0040BE  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4512  0040C0  22DA               	addwfc	fsr2h,f,c
  4513  0040C2  50DF               	movf	indf2,w,c
  4514  0040C4  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4515  0040C6  0E00               	movlw	0
  4516  0040C8  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4517  0040CA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4518  0040CC  EC6D  F030         	call	_Tmr_TmrBIrqSet
  4519  0040D0                     l547:
  4520                           
  4521                           ;tmr_drv.c: 285: }
  4522                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4523  0040D0  0100               	movlb	0	; () banked
  4524  0040D2  EE20 F004          	lfsr	2,4
  4525  0040D6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4526  0040D8  26D9               	addwf	fsr2l,f,c
  4527  0040DA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4528  0040DC  22DA               	addwfc	fsr2h,f,c
  4529  0040DE  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4530  0040E2  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4531  0040E6  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4532  0040EA  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4533  0040EE  50DF               	movf	indf2,w,c
  4534  0040F0  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4535  0040F2  EE20 F001          	lfsr	2,1
  4536  0040F6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4537  0040F8  26D9               	addwf	fsr2l,f,c
  4538  0040FA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4539  0040FC  22DA               	addwfc	fsr2h,f,c
  4540  0040FE  50DF               	movf	indf2,w,c
  4541  004100  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4542  004102  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4543  004104  EC59  F019         	call	_Tmr_TmrBPrSet
  4544                           
  4545                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4546  004108  0100               	movlb	0	; () banked
  4547  00410A  EE20 F006          	lfsr	2,6
  4548  00410E  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4549  004110  26D9               	addwf	fsr2l,f,c
  4550  004112  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4551  004114  22DA               	addwfc	fsr2h,f,c
  4552  004116  04DE               	decf	postinc2,w,c
  4553  004118  A4D8               	btfss	status,2,c
  4554  00411A  0012               	return	
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;tmr_drv.c: 290: {
  4558                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4559  00411C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4560  00411E  EC41  F035         	call	_Tmr_StartTmr
  4561                           
  4562                           ;tmr_drv.c: 293: }
  4563  004122  0012               	return	
  4564  004124                     __end_of_Tmr_TmrBConfig:
  4565                           	opt stack 0
  4566                           tblptru	equ	0xFF8
  4567                           tblptrh	equ	0xFF7
  4568                           tblptrl	equ	0xFF6
  4569                           tablat	equ	0xFF5
  4570                           intcon	equ	0xFF2
  4571                           intcon2	equ	0xFF1
  4572                           intcon3	equ	0xFF0
  4573                           postinc0	equ	0xFEE
  4574                           wreg	equ	0xFE8
  4575                           postdec1	equ	0xFE5
  4576                           fsr1h	equ	0xFE2
  4577                           fsr1l	equ	0xFE1
  4578                           indf2	equ	0xFDF
  4579                           postinc2	equ	0xFDE
  4580                           postdec2	equ	0xFDD
  4581                           fsr2h	equ	0xFDA
  4582                           fsr2l	equ	0xFD9
  4583                           status	equ	0xFD8
  4584                           
  4585 ;; *************** function _Tmr_TmrBPrSet *****************
  4586 ;; Defined at:
  4587 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  TmrNumb         1    wreg     unsigned char 
  4590 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4591 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4592 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4595 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4596 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  1    wreg      enum E7736
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4606 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4607 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4610 ;;Total ram usage:       10 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:   12
  4613 ;; This function calls:
  4614 ;;		___lldiv
  4615 ;;		___lmul
  4616 ;; This function is called by:
  4617 ;;		_Tmr_TmrBConfig
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text9
  4622  0032B2                     __ptext9:
  4623                           	opt stack 0
  4624  0032B2                     _Tmr_TmrBPrSet:
  4625                           	opt stack 15
  4626                           
  4627                           ;incstack = 0
  4628                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4629  0032B2  0100               	movlb	0	; () banked
  4630  0032B4  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4631                           
  4632                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4633                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4634  0032B6  0E00               	movlw	0
  4635  0032B8  0100               	movlb	0	; () banked
  4636  0032BA  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4637  0032BC  0E00               	movlw	0
  4638  0032BE  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4639  0032C0  0E00               	movlw	0
  4640  0032C2  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4641  0032C4  0E00               	movlw	0
  4642  0032C6  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4646  0032C8  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4647  0032CA  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4648  0032CC  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4649  0032D0  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4650  0032D4  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4651  0032D6  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4652  0032D8  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4653  0032DC  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4654  0032E0  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4655  0032E2  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4656  0032E4  ECAD  F02D         	call	___lmul	;wreg free
  4657  0032E8  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4658  0032EC  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4659  0032F0  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4660  0032F4  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4661                           
  4662                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4663  0032F8  0E00               	movlw	0
  4664  0032FA  0100               	movlb	0	; () banked
  4665  0032FC  6F89               	movwf	___lldiv@dividend& (0+255),b
  4666  0032FE  0E1B               	movlw	27
  4667  003300  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4668  003302  0EB7               	movlw	183
  4669  003304  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4670  003306  0E00               	movlw	0
  4671  003308  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4672  00330A  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4673  00330E  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4674  003312  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4675  003316  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4676  00331A  ECE6  F029         	call	___lldiv	;wreg free
  4677  00331E  0100               	movlb	0	; () banked
  4678  003320  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4679  003322  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4680  003324  E13A               	bnz	l15651
  4681  003326  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4682  003328  A0D8               	btfss	status,0,c
  4683  00332A  D02D               	goto	l529
  4684  00332C  D036               	goto	l528
  4685  00332E                     
  4686                           ; BSR set to: 0
  4687                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4688                           
  4689                           ; BSR set to: 0
  4690  00332E  0E00               	movlw	0
  4691  003330  6F89               	movwf	___lldiv@dividend& (0+255),b
  4692  003332  0E1B               	movlw	27
  4693  003334  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4694  003336  0EB7               	movlw	183
  4695  003338  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4696  00333A  0E00               	movlw	0
  4697  00333C  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4698  00333E  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4699  003342  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4700  003346  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4701  00334A  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4702  00334E  ECE6  F029         	call	___lldiv	;wreg free
  4703  003352  0100               	movlb	0	; () banked
  4704  003354  5189               	movf	?___lldiv& (0+255),w,b
  4705  003356  6ECB               	movwf	4043,c	;volatile
  4706                           
  4707                           ;tmr_drv.c: 210: break;
  4708  003358  D01D               	goto	l531
  4709  00335A                     
  4710                           ; BSR set to: 0
  4711                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4712                           
  4713                           ; BSR set to: 0
  4714  00335A  0E00               	movlw	0
  4715  00335C  6F89               	movwf	___lldiv@dividend& (0+255),b
  4716  00335E  0E1B               	movlw	27
  4717  003360  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4718  003362  0EB7               	movlw	183
  4719  003364  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4720  003366  0E00               	movlw	0
  4721  003368  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4722  00336A  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4723  00336E  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4724  003372  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4725  003376  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4726  00337A  ECE6  F029         	call	___lldiv	;wreg free
  4727  00337E  0100               	movlb	0	; () banked
  4728  003380  5189               	movf	?___lldiv& (0+255),w,b
  4729  003382  6E77               	movwf	3959,c	;volatile
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;tmr_drv.c: 219: }
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;tmr_drv.c: 218: break;
  4736                           
  4737                           ;tmr_drv.c: 217: default:
  4738                           
  4739                           ;tmr_drv.c: 215: break;
  4740  003384  D007               	goto	l531
  4741  003386                     l529:
  4742                           
  4743                           ; BSR set to: 0
  4744                           
  4745                           ; BSR set to: 0
  4746  003386  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4747                           
  4748                           ; Switch size 1, requested type "space"
  4749                           ; Number of cases is 2, Range of values is 2 to 4
  4750                           ; switch strategies available:
  4751                           ; Name         Instructions Cycles
  4752                           ; simple_byte            7     4 (average)
  4753                           ;	Chosen strategy is simple_byte
  4754  003388  0A02               	xorlw	2	; case 2
  4755  00338A  B4D8               	btfsc	status,2,c
  4756  00338C  D7D0               	goto	l530
  4757  00338E  0A06               	xorlw	6	; case 4
  4758  003390  B4D8               	btfsc	status,2,c
  4759  003392  D7E3               	goto	l532
  4760  003394                     l531:
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4764                           
  4765                           ; BSR set to: 0
  4766  003394  0E00               	movlw	0
  4767  003396  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4768                           
  4769                           ;tmr_drv.c: 223: }
  4770  003398  0012               	return	
  4771  00339A                     l528:
  4772  00339A                     l15651:
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;tmr_drv.c: 224: else
  4776                           ;tmr_drv.c: 225: {
  4777                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4778  00339A  0E01               	movlw	1
  4779  00339C  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4780                           
  4781                           ; BSR set to: 0
  4782  00339E  0012               	return	
  4783  0033A0                     __end_of_Tmr_TmrBPrSet:
  4784                           	opt stack 0
  4785                           tblptru	equ	0xFF8
  4786                           tblptrh	equ	0xFF7
  4787                           tblptrl	equ	0xFF6
  4788                           tablat	equ	0xFF5
  4789                           prodh	equ	0xFF4
  4790                           prodl	equ	0xFF3
  4791                           intcon	equ	0xFF2
  4792                           intcon2	equ	0xFF1
  4793                           intcon3	equ	0xFF0
  4794                           postinc0	equ	0xFEE
  4795                           wreg	equ	0xFE8
  4796                           postdec1	equ	0xFE5
  4797                           fsr1h	equ	0xFE2
  4798                           fsr1l	equ	0xFE1
  4799                           indf2	equ	0xFDF
  4800                           postinc2	equ	0xFDE
  4801                           postdec2	equ	0xFDD
  4802                           fsr2h	equ	0xFDA
  4803                           fsr2l	equ	0xFD9
  4804                           status	equ	0xFD8
  4805                           
  4806 ;; *************** function _Tmr_TmrBIrqSet *****************
  4807 ;; Defined at:
  4808 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  TmrNumb         1    wreg     unsigned char 
  4811 ;;  Priority        1   29[BANK0 ] enum E7716
  4812 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      void 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4827 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;Total ram usage:        3 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:   11
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_Tmr_TmrBConfig
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text10
  4839  0060DA                     __ptext10:
  4840                           	opt stack 0
  4841  0060DA                     _Tmr_TmrBIrqSet:
  4842                           	opt stack 16
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;incstack = 0
  4846                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4847  0060DA  0100               	movlb	0	; () banked
  4848  0060DC  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4849                           
  4850                           ;tmr_drv.c: 156: switch (TmrNumb)
  4851  0060DE  D01A               	goto	l520
  4852  0060E0                     l521:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4856  0060E0  929E               	bcf	3998,1,c	;volatile
  4857                           
  4858                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4859  0060E2  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4860  0060E4  D002               	bra	u9275
  4861  0060E6  929F               	bcf	3999,1,c	;volatile
  4862  0060E8  D001               	bra	u9276
  4863  0060EA                     u9275:
  4864  0060EA  829F               	bsf	3999,1,c	;volatile
  4865  0060EC                     u9276:
  4866                           
  4867                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4868  0060EC  0100               	movlb	0	; () banked
  4869  0060EE  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4870  0060F0  D002               	bra	u9285
  4871  0060F2  929D               	bcf	3997,1,c	;volatile
  4872  0060F4  D001               	bra	u9286
  4873  0060F6                     u9285:
  4874  0060F6  829D               	bsf	3997,1,c	;volatile
  4875  0060F8                     u9286:
  4876                           
  4877                           ;tmr_drv.c: 165: break;
  4878  0060F8  0012               	return	
  4879  0060FA                     l523:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4883  0060FA  96A4               	bcf	4004,3,c	;volatile
  4884                           
  4885                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4886  0060FC  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4887  0060FE  D002               	bra	u9295
  4888  006100  96A5               	bcf	4005,3,c	;volatile
  4889  006102  D001               	bra	u9296
  4890  006104                     u9295:
  4891  006104  86A5               	bsf	4005,3,c	;volatile
  4892  006106                     u9296:
  4893                           
  4894                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4895  006106  0100               	movlb	0	; () banked
  4896  006108  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4897  00610A  D002               	bra	u9305
  4898  00610C  96A3               	bcf	4003,3,c	;volatile
  4899  00610E  D001               	bra	u9306
  4900  006110                     u9305:
  4901  006110  86A3               	bsf	4003,3,c	;volatile
  4902  006112                     u9306:
  4903                           
  4904                           ;tmr_drv.c: 178: }
  4905                           
  4906                           ;tmr_drv.c: 177: break;
  4907                           
  4908                           ;tmr_drv.c: 176: default:
  4909                           
  4910                           ;tmr_drv.c: 174: break;
  4911  006112  0012               	return	
  4912  006114                     l520:
  4913  006114  0100               	movlb	0	; () banked
  4914  006116  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4915                           
  4916                           ; Switch size 1, requested type "space"
  4917                           ; Number of cases is 2, Range of values is 2 to 4
  4918                           ; switch strategies available:
  4919                           ; Name         Instructions Cycles
  4920                           ; simple_byte            7     4 (average)
  4921                           ;	Chosen strategy is simple_byte
  4922  006118  0A02               	xorlw	2	; case 2
  4923  00611A  B4D8               	btfsc	status,2,c
  4924  00611C  D7E1               	goto	l521
  4925  00611E  0A06               	xorlw	6	; case 4
  4926  006120  A4D8               	btfss	status,2,c
  4927  006122  0012               	return	
  4928  006124  D7EA               	goto	l523
  4929  006126                     __end_of_Tmr_TmrBIrqSet:
  4930                           	opt stack 0
  4931                           tblptru	equ	0xFF8
  4932                           tblptrh	equ	0xFF7
  4933                           tblptrl	equ	0xFF6
  4934                           tablat	equ	0xFF5
  4935                           prodh	equ	0xFF4
  4936                           prodl	equ	0xFF3
  4937                           intcon	equ	0xFF2
  4938                           intcon2	equ	0xFF1
  4939                           intcon3	equ	0xFF0
  4940                           postinc0	equ	0xFEE
  4941                           wreg	equ	0xFE8
  4942                           postdec1	equ	0xFE5
  4943                           fsr1h	equ	0xFE2
  4944                           fsr1l	equ	0xFE1
  4945                           indf2	equ	0xFDF
  4946                           postinc2	equ	0xFDE
  4947                           postdec2	equ	0xFDD
  4948                           fsr2h	equ	0xFDA
  4949                           fsr2l	equ	0xFD9
  4950                           status	equ	0xFD8
  4951                           
  4952 ;; *************** function _Tmr_StartTmr *****************
  4953 ;; Defined at:
  4954 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  TmrNumb         1    wreg     unsigned char 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4971 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4972 ;;Total ram usage:        1 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:   11
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_Tmr_TmrBConfig
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text11
  4983  006A82                     __ptext11:
  4984                           	opt stack 0
  4985  006A82                     _Tmr_StartTmr:
  4986                           	opt stack 16
  4987                           
  4988                           ;incstack = 0
  4989                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4990  006A82  0100               	movlb	0	; () banked
  4991  006A84  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4992                           
  4993                           ;tmr_drv.c: 245: switch (TmrNumb)
  4994  006A86  D004               	goto	l538
  4995  006A88                     l539:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4999  006A88  84CA               	bsf	4042,2,c	;volatile
  5000                           
  5001                           ;tmr_drv.c: 250: break;
  5002  006A8A  0012               	return	
  5003  006A8C                     l541:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  5007  006A8C  8476               	bsf	3958,2,c	;volatile
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;tmr_drv.c: 259: }
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;tmr_drv.c: 258: break;
  5014                           
  5015                           ;tmr_drv.c: 257: default:
  5016                           
  5017                           ;tmr_drv.c: 255: break;
  5018  006A8E  0012               	return	
  5019  006A90                     l538:
  5020                           
  5021                           ; BSR set to: 0
  5022  006A90  0100               	movlb	0	; () banked
  5023  006A92  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  5024                           
  5025                           ; Switch size 1, requested type "space"
  5026                           ; Number of cases is 2, Range of values is 2 to 4
  5027                           ; switch strategies available:
  5028                           ; Name         Instructions Cycles
  5029                           ; simple_byte            7     4 (average)
  5030                           ;	Chosen strategy is simple_byte
  5031  006A94  0A02               	xorlw	2	; case 2
  5032  006A96  B4D8               	btfsc	status,2,c
  5033  006A98  D7F7               	goto	l539
  5034  006A9A  0A06               	xorlw	6	; case 4
  5035  006A9C  A4D8               	btfss	status,2,c
  5036  006A9E  0012               	return	
  5037  006AA0  D7F5               	goto	l541
  5038  006AA2                     __end_of_Tmr_StartTmr:
  5039                           	opt stack 0
  5040                           tblptru	equ	0xFF8
  5041                           tblptrh	equ	0xFF7
  5042                           tblptrl	equ	0xFF6
  5043                           tablat	equ	0xFF5
  5044                           prodh	equ	0xFF4
  5045                           prodl	equ	0xFF3
  5046                           intcon	equ	0xFF2
  5047                           intcon2	equ	0xFF1
  5048                           intcon3	equ	0xFF0
  5049                           postinc0	equ	0xFEE
  5050                           wreg	equ	0xFE8
  5051                           postdec1	equ	0xFE5
  5052                           fsr1h	equ	0xFE2
  5053                           fsr1l	equ	0xFE1
  5054                           indf2	equ	0xFDF
  5055                           postinc2	equ	0xFDE
  5056                           postdec2	equ	0xFDD
  5057                           fsr2h	equ	0xFDA
  5058                           fsr2l	equ	0xFD9
  5059                           status	equ	0xFD8
  5060                           
  5061 ;; *************** function _TmrBInit *****************
  5062 ;; Defined at:
  5063 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  TmrNumb         1    wreg     unsigned char 
  5066 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  5067 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5081 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5082 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5083 ;;Total ram usage:        4 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:   11
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_Tmr_TmrBConfig
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text12
  5094  004D8E                     __ptext12:
  5095                           	opt stack 0
  5096  004D8E                     _TmrBInit:
  5097                           	opt stack 16
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;incstack = 0
  5101                           ;TmrBInit@TmrNumb stored from wreg
  5102  004D8E  0100               	movlb	0	; () banked
  5103  004D90  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5104                           
  5105                           ;tmr_drv.c: 75: switch (TmrNumb)
  5106  004D92  D03F               	goto	l500
  5107  004D94                     l503:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5111  004D94  90CA               	bcf	4042,0,c	;volatile
  5112  004D96  D001               	goto	L1
  5113  004D98                     l505:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5117  004D98  80CA               	bsf	4042,0,c	;volatile
  5118  004D9A                     L1:
  5119                           
  5120                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5121  004D9A  92CA               	bcf	4042,1,c	;volatile
  5122                           
  5123                           ;tmr_drv.c: 91: break;
  5124  004D9C  D00E               	goto	l504
  5125  004D9E                     l506:
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5129  004D9E  80CA               	bsf	4042,0,c	;volatile
  5130                           
  5131                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5132  004DA0  82CA               	bsf	4042,1,c	;volatile
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;tmr_drv.c: 100: }
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;tmr_drv.c: 99: break;
  5139                           
  5140                           ;tmr_drv.c: 98: default:
  5141                           
  5142                           ;tmr_drv.c: 96: break;
  5143  004DA2  D00B               	goto	l504
  5144  004DA4                     
  5145                           ; BSR set to: 0
  5146  004DA4  0100               	movlb	0	; () banked
  5147  004DA6  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5148                           
  5149                           ; Switch size 1, requested type "space"
  5150                           ; Number of cases is 3, Range of values is 1 to 16
  5151                           ; switch strategies available:
  5152                           ; Name         Instructions Cycles
  5153                           ; simple_byte           10     6 (average)
  5154                           ;	Chosen strategy is simple_byte
  5155  004DA8  0A01               	xorlw	1	; case 1
  5156  004DAA  B4D8               	btfsc	status,2,c
  5157  004DAC  D7F3               	goto	l503
  5158  004DAE  0A05               	xorlw	5	; case 4
  5159  004DB0  B4D8               	btfsc	status,2,c
  5160  004DB2  D7F2               	goto	l505
  5161  004DB4  0A14               	xorlw	20	; case 16
  5162  004DB6  B4D8               	btfsc	status,2,c
  5163  004DB8  D7F2               	goto	l506
  5164  004DBA                     l504:
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5168                           
  5169                           ; BSR set to: 0
  5170  004DBA  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5171  004DBE  0EFF               	movlw	255
  5172  004DC0  277F               	addwf	??_TmrBInit& (0+255),f,b
  5173  004DC2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5174  004DC4  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5175  004DC6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5176  004DC8  50CA               	movf	4042,w,c	;volatile
  5177  004DCA  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5178  004DCC  0B87               	andlw	-121
  5179  004DCE  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5180  004DD0  6ECA               	movwf	4042,c	;volatile
  5181                           
  5182                           ;tmr_drv.c: 104: break;
  5183  004DD2  0012               	return	
  5184  004DD4                     l511:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5188  004DD4  9076               	bcf	3958,0,c	;volatile
  5189  004DD6  D001               	goto	L2
  5190  004DD8                     l513:
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5194  004DD8  8076               	bsf	3958,0,c	;volatile
  5195  004DDA                     L2:
  5196                           
  5197                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5198  004DDA  9276               	bcf	3958,1,c	;volatile
  5199                           
  5200                           ;tmr_drv.c: 120: break;
  5201  004DDC  D00D               	goto	l512
  5202  004DDE                     l514:
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5206  004DDE  8076               	bsf	3958,0,c	;volatile
  5207                           
  5208                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5209  004DE0  8276               	bsf	3958,1,c	;volatile
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;tmr_drv.c: 129: }
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;tmr_drv.c: 128: break;
  5216                           
  5217                           ;tmr_drv.c: 127: default:
  5218                           
  5219                           ;tmr_drv.c: 125: break;
  5220  004DE2  D00A               	goto	l512
  5221  004DE4                     
  5222                           ; BSR set to: 0
  5223                           
  5224                           ; BSR set to: 0
  5225  004DE4  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5226                           
  5227                           ; Switch size 1, requested type "space"
  5228                           ; Number of cases is 3, Range of values is 1 to 16
  5229                           ; switch strategies available:
  5230                           ; Name         Instructions Cycles
  5231                           ; simple_byte           10     6 (average)
  5232                           ;	Chosen strategy is simple_byte
  5233  004DE6  0A01               	xorlw	1	; case 1
  5234  004DE8  B4D8               	btfsc	status,2,c
  5235  004DEA  D7F4               	goto	l511
  5236  004DEC  0A05               	xorlw	5	; case 4
  5237  004DEE  B4D8               	btfsc	status,2,c
  5238  004DF0  D7F3               	goto	l513
  5239  004DF2  0A14               	xorlw	20	; case 16
  5240  004DF4  B4D8               	btfsc	status,2,c
  5241  004DF6  D7F3               	goto	l514
  5242  004DF8                     l512:
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5246                           
  5247                           ; BSR set to: 0
  5248  004DF8  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5249  004DFC  0EFF               	movlw	255
  5250  004DFE  277F               	addwf	??_TmrBInit& (0+255),f,b
  5251  004E00  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5252  004E02  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5253  004E04  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5254  004E06  5076               	movf	3958,w,c	;volatile
  5255  004E08  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5256  004E0A  0B87               	andlw	-121
  5257  004E0C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5258  004E0E  6E76               	movwf	3958,c	;volatile
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;tmr_drv.c: 137: }
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;tmr_drv.c: 136: break;
  5265                           
  5266                           ;tmr_drv.c: 135: default:
  5267                           
  5268                           ;tmr_drv.c: 133: break;
  5269  004E10  0012               	return	
  5270  004E12                     l500:
  5271                           
  5272                           ; BSR set to: 0
  5273  004E12  0100               	movlb	0	; () banked
  5274  004E14  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5275                           
  5276                           ; Switch size 1, requested type "space"
  5277                           ; Number of cases is 2, Range of values is 2 to 4
  5278                           ; switch strategies available:
  5279                           ; Name         Instructions Cycles
  5280                           ; simple_byte            7     4 (average)
  5281                           ;	Chosen strategy is simple_byte
  5282  004E16  0A02               	xorlw	2	; case 2
  5283  004E18  B4D8               	btfsc	status,2,c
  5284  004E1A  D7C4               	goto	l502
  5285  004E1C  0A06               	xorlw	6	; case 4
  5286  004E1E  A4D8               	btfss	status,2,c
  5287  004E20  0012               	return	
  5288  004E22  D7E0               	goto	l510
  5289  004E24                     __end_of_TmrBInit:
  5290                           	opt stack 0
  5291                           tblptru	equ	0xFF8
  5292                           tblptrh	equ	0xFF7
  5293                           tblptrl	equ	0xFF6
  5294                           tablat	equ	0xFF5
  5295                           prodh	equ	0xFF4
  5296                           prodl	equ	0xFF3
  5297                           intcon	equ	0xFF2
  5298                           intcon2	equ	0xFF1
  5299                           intcon3	equ	0xFF0
  5300                           postinc0	equ	0xFEE
  5301                           wreg	equ	0xFE8
  5302                           postdec1	equ	0xFE5
  5303                           fsr1h	equ	0xFE2
  5304                           fsr1l	equ	0xFE1
  5305                           indf2	equ	0xFDF
  5306                           postinc2	equ	0xFDE
  5307                           postdec2	equ	0xFDD
  5308                           fsr2h	equ	0xFDA
  5309                           fsr2l	equ	0xFD9
  5310                           status	equ	0xFD8
  5311                           
  5312 ;; *************** function _Sch_MainScheduler *****************
  5313 ;; Defined at:
  5314 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5332 ;;Total ram usage:        0 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:   22
  5335 ;; This function calls:
  5336 ;;		_InitializeTasks
  5337 ;;		_ScheduleTasks
  5338 ;; This function is called by:
  5339 ;;		_main
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text13
  5344  006B00                     __ptext13:
  5345                           	opt stack 0
  5346  006B00                     _Sch_MainScheduler:
  5347                           	opt stack 8
  5348                           
  5349                           ;os_sched.c: 178: InitializeTasks();
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;incstack = 0
  5353  006B00  ECA8  F02A         	call	_InitializeTasks	;wreg free
  5354                           
  5355                           ;os_sched.c: 180: SystemState = RunningState;
  5356  006B04  0E01               	movlw	1
  5357  006B06  0100               	movlb	0	; () banked
  5358  006B08  6FD4               	movwf	_SystemState& (0+255),b
  5359  006B0A                     
  5360                           ;os_sched.c: 188: {
  5361                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5362                           
  5363                           ; BSR set to: 0
  5364  006B0A  0102               	movlb	2	; () banked
  5365  006B0C  51F2               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5366  006B0E  A4D8               	btfss	status,2,c
  5367  006B10  D7FC               	goto	l790
  5368                           
  5369                           ; BSR set to: 2
  5370                           ;os_sched.c: 191: {
  5371                           ;os_sched.c: 196: ScheduleTasks();
  5372  006B12  EC2D  F017         	call	_ScheduleTasks	;wreg free
  5373                           
  5374                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5375  006B16  0E01               	movlw	1
  5376  006B18  0102               	movlb	2	; () banked
  5377  006B1A  6FF2               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5378                           
  5379                           ; BSR set to: 2
  5380                           
  5381                           ; BSR set to: 2
  5382  006B1C  D7F6               	goto	l790
  5383  006B1E                     __end_of_Sch_MainScheduler:
  5384                           	opt stack 0
  5385                           tblptru	equ	0xFF8
  5386                           tblptrh	equ	0xFF7
  5387                           tblptrl	equ	0xFF6
  5388                           tablat	equ	0xFF5
  5389                           prodh	equ	0xFF4
  5390                           prodl	equ	0xFF3
  5391                           intcon	equ	0xFF2
  5392                           intcon2	equ	0xFF1
  5393                           intcon3	equ	0xFF0
  5394                           postinc0	equ	0xFEE
  5395                           wreg	equ	0xFE8
  5396                           postdec1	equ	0xFE5
  5397                           fsr1h	equ	0xFE2
  5398                           fsr1l	equ	0xFE1
  5399                           indf2	equ	0xFDF
  5400                           postinc2	equ	0xFDE
  5401                           postdec2	equ	0xFDD
  5402                           fsr2h	equ	0xFDA
  5403                           fsr2l	equ	0xFD9
  5404                           status	equ	0xFD8
  5405                           
  5406 ;; *************** function _ScheduleTasks *****************
  5407 ;; Defined at:
  5408 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5423 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       4       0       0       0       0       0       
      +0       0       0       0
  5425 ;;      Totals:         0       0       0       1       0       0       4       0       0       0       0       0       
      +0       0       0       0
  5426 ;;Total ram usage:        5 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:   21
  5429 ;; This function calls:
  5430 ;;		_I2cSlv_MainTask
  5431 ;;		_Led_MainTask
  5432 ;;		_MdmHttp_MainTask
  5433 ;;		_Mdm_DrvMainFn
  5434 ;;		_Mdm_MainTask
  5435 ;;		_MyApp_Task
  5436 ;;		_Rtcm_MainTask
  5437 ;;		_Term_MainTask
  5438 ;;		_UsbDevice_MainTask
  5439 ;;		_Wdg_MainTask
  5440 ;; This function is called by:
  5441 ;;		_Sch_MainScheduler
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text14
  5446  002E5A                     __ptext14:
  5447                           	opt stack 0
  5448  002E5A                     _ScheduleTasks:
  5449                           	opt stack 8
  5450                           
  5451                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5452                           
  5453                           ; BSR set to: 2
  5454                           ;incstack = 0
  5455  002E5A  0E00               	movlw	0
  5456  002E5C  0102               	movlb	2	; () banked
  5457  002E5E  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5458                           
  5459                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5460  002E60  0E00               	movlw	0
  5461  002E62  6FC8               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5462  002E64                     l16967:
  5463                           
  5464                           ; BSR set to: 2
  5465  002E64  0E30               	movlw	low _TaskNumber
  5466  002E66  6EF6               	movwf	tblptrl,c
  5467  002E68                     	if	1	;There is more than 1 active tblptr byte
  5468  002E68  0EFC               	movlw	high _TaskNumber
  5469  002E6A  6EF7               	movwf	tblptrh,c
  5470  002E6C                     	endif
  5471  002E6C                     	if	0	;There are less than 3 active tblptr bytes
  5472  002E6C                     	endif
  5473  002E6C  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5474  002E6E  0105               	movlb	5	; () banked
  5475  002E70  6FF4               	movwf	??_ScheduleTasks& (0+255),b
  5476  002E72  6BF5               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5477  002E74  0009               	tblrd		*+
  5478  002E76  50F5               	movf	tablat,w,c
  5479  002E78  5DF4               	subwf	??_ScheduleTasks& (0+255),w,b
  5480  002E7A  0009               	tblrd		*+
  5481  002E7C  50F5               	movf	tablat,w,c
  5482  002E7E  59F5               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5483  002E80  B0D8               	btfsc	status,0,c
  5484  002E82  0012               	return	
  5485                           
  5486                           ; BSR set to: 5
  5487                           ;os_sched.c: 106: {
  5488                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5489                           
  5490                           ; BSR set to: 5
  5491                           
  5492                           ; BSR set to: 5
  5493  002E84  0102               	movlb	2	; () banked
  5494  002E86  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5495  002E88  0D08               	mullw	8
  5496  002E8A  0E03               	movlw	3
  5497  002E8C  26F3               	addwf	prodl,f,c
  5498  002E8E  0E00               	movlw	0
  5499  002E90  22F4               	addwfc	prodh,f,c
  5500  002E92  0EA4               	movlw	low _TaskTable
  5501  002E94  24F3               	addwf	prodl,w,c
  5502  002E96  6ED9               	movwf	fsr2l,c
  5503  002E98  0E05               	movlw	high _TaskTable
  5504  002E9A  20F4               	addwfc	prodh,w,c
  5505  002E9C  6EDA               	movwf	fsr2h,c
  5506  002E9E  2ADE               	incf	postinc2,f,c
  5507  002EA0  0E00               	movlw	0
  5508  002EA2  22DD               	addwfc	postdec2,f,c
  5509                           
  5510                           ; BSR set to: 2
  5511                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5512  002EA4  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5513  002EA6  0D08               	mullw	8
  5514  002EA8  0E05               	movlw	5
  5515  002EAA  26F3               	addwf	prodl,f,c
  5516  002EAC  0E00               	movlw	0
  5517  002EAE  22F4               	addwfc	prodh,f,c
  5518  002EB0  0EA4               	movlw	low _TaskTable
  5519  002EB2  24F3               	addwf	prodl,w,c
  5520  002EB4  6ED9               	movwf	fsr2l,c
  5521  002EB6  0E05               	movlw	high _TaskTable
  5522  002EB8  20F4               	addwfc	prodh,w,c
  5523  002EBA  6EDA               	movwf	fsr2h,c
  5524  002EBC  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5525  002EBE  0D08               	mullw	8
  5526  002EC0  0E03               	movlw	3
  5527  002EC2  26F3               	addwf	prodl,f,c
  5528  002EC4  0E00               	movlw	0
  5529  002EC6  22F4               	addwfc	prodh,f,c
  5530  002EC8  0EA4               	movlw	low _TaskTable
  5531  002ECA  24F3               	addwf	prodl,w,c
  5532  002ECC  6EE1               	movwf	fsr1l,c
  5533  002ECE  0E05               	movlw	high _TaskTable
  5534  002ED0  20F4               	addwfc	prodh,w,c
  5535  002ED2  6EE2               	movwf	fsr1h,c
  5536  002ED4  50DE               	movf	postinc2,w,c
  5537  002ED6  5CE6               	subwf	postinc1,w,c
  5538  002ED8  50DE               	movf	postinc2,w,c
  5539  002EDA  58E6               	subwfb	postinc1,w,c
  5540  002EDC  A0D8               	btfss	status,0,c
  5541  002EDE  D04E               	goto	l775
  5542                           
  5543                           ; BSR set to: 2
  5544                           ;os_sched.c: 111: {
  5545                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5546  002EE0  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5547  002EE2  0D08               	mullw	8
  5548  002EE4  0E03               	movlw	3
  5549  002EE6  26F3               	addwf	prodl,f,c
  5550  002EE8  0E00               	movlw	0
  5551  002EEA  22F4               	addwfc	prodh,f,c
  5552  002EEC  0EA4               	movlw	low _TaskTable
  5553  002EEE  24F3               	addwf	prodl,w,c
  5554  002EF0  6ED9               	movwf	fsr2l,c
  5555  002EF2  0E05               	movlw	high _TaskTable
  5556  002EF4  20F4               	addwfc	prodh,w,c
  5557  002EF6  6EDA               	movwf	fsr2h,c
  5558  002EF8  0E00               	movlw	0
  5559  002EFA  6EDE               	movwf	postinc2,c
  5560  002EFC  0E00               	movlw	0
  5561  002EFE  6EDD               	movwf	postdec2,c
  5562                           
  5563                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5564  002F00  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5565  002F02  0D08               	mullw	8
  5566  002F04  0E02               	movlw	2
  5567  002F06  26F3               	addwf	prodl,f,c
  5568  002F08  0E00               	movlw	0
  5569  002F0A  22F4               	addwfc	prodh,f,c
  5570  002F0C  0EA4               	movlw	low _TaskTable
  5571  002F0E  24F3               	addwf	prodl,w,c
  5572  002F10  6ED9               	movwf	fsr2l,c
  5573  002F12  0E05               	movlw	high _TaskTable
  5574  002F14  20F4               	addwfc	prodh,w,c
  5575  002F16  6EDA               	movwf	fsr2h,c
  5576  002F18  0E01               	movlw	1
  5577  002F1A  6EDF               	movwf	indf2,c
  5578                           
  5579                           ; BSR set to: 2
  5580                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5581  002F1C  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5582  002F1E  0D08               	mullw	8
  5583  002F20  0EA4               	movlw	low _TaskTable
  5584  002F22  24F3               	addwf	prodl,w,c
  5585  002F24  6ED9               	movwf	fsr2l,c
  5586  002F26  0E05               	movlw	high _TaskTable
  5587  002F28  20F4               	addwfc	prodh,w,c
  5588  002F2A  6EDA               	movwf	fsr2h,c
  5589  002F2C  D801               	call	u16718
  5590  002F2E  D017               	goto	u16719
  5591  002F30                     u16718:
  5592  002F30  0005               	push	
  5593  002F32  6EFA               	movwf	pclath,c
  5594  002F34  50DE               	movf	postinc2,w,c
  5595  002F36  6EFD               	movwf	tosl,c
  5596  002F38  50DE               	movf	postinc2,w,c
  5597  002F3A  6EFE               	movwf	tosh,c
  5598  002F3C  50F8               	movf	tblptru,w,c
  5599  002F3E  6EFF               	movwf	tosu,c
  5600  002F40  50FA               	movf	pclath,w,c
  5601  002F42  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5602  002F44  0D08               	mullw	8
  5603  002F46  0E07               	movlw	7
  5604  002F48  26F3               	addwf	prodl,f,c
  5605  002F4A  0E00               	movlw	0
  5606  002F4C  22F4               	addwfc	prodh,f,c
  5607  002F4E  0EA4               	movlw	low _TaskTable
  5608  002F50  24F3               	addwf	prodl,w,c
  5609  002F52  6ED9               	movwf	fsr2l,c
  5610  002F54  0E05               	movlw	high _TaskTable
  5611  002F56  20F4               	addwfc	prodh,w,c
  5612  002F58  6EDA               	movwf	fsr2h,c
  5613  002F5A  50DF               	movf	indf2,w,c
  5614  002F5C  0012               	return		;indir
  5615  002F5E                     u16719:
  5616                           
  5617                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5618  002F5E  0102               	movlb	2	; () banked
  5619  002F60  51C8               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5620  002F62  0D08               	mullw	8
  5621  002F64  0E02               	movlw	2
  5622  002F66  26F3               	addwf	prodl,f,c
  5623  002F68  0E00               	movlw	0
  5624  002F6A  22F4               	addwfc	prodh,f,c
  5625  002F6C  0EA4               	movlw	low _TaskTable
  5626  002F6E  24F3               	addwf	prodl,w,c
  5627  002F70  6ED9               	movwf	fsr2l,c
  5628  002F72  0E05               	movlw	high _TaskTable
  5629  002F74  20F4               	addwfc	prodh,w,c
  5630  002F76  6EDA               	movwf	fsr2h,c
  5631  002F78  0E00               	movlw	0
  5632  002F7A  6EDF               	movwf	indf2,c
  5633  002F7C                     l775:
  5634                           
  5635                           ; BSR set to: 2
  5636                           
  5637                           ; BSR set to: 2
  5638                           
  5639                           ;os_sched.c: 117: else
  5640                           ;os_sched.c: 118: {
  5641                           
  5642                           ; BSR set to: 2
  5643  002F7C  2BC8               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5644  002F7E  D772               	goto	l16967
  5645  002F80                     __end_of_ScheduleTasks:
  5646                           	opt stack 0
  5647                           tosu	equ	0xFFF
  5648                           tosh	equ	0xFFE
  5649                           tosl	equ	0xFFD
  5650                           pclath	equ	0xFFA
  5651                           tblptru	equ	0xFF8
  5652                           tblptrh	equ	0xFF7
  5653                           tblptrl	equ	0xFF6
  5654                           tablat	equ	0xFF5
  5655                           prodh	equ	0xFF4
  5656                           prodl	equ	0xFF3
  5657                           intcon	equ	0xFF2
  5658                           intcon2	equ	0xFF1
  5659                           intcon3	equ	0xFF0
  5660                           postinc0	equ	0xFEE
  5661                           wreg	equ	0xFE8
  5662                           postinc1	equ	0xFE6
  5663                           postdec1	equ	0xFE5
  5664                           fsr1h	equ	0xFE2
  5665                           fsr1l	equ	0xFE1
  5666                           indf2	equ	0xFDF
  5667                           postinc2	equ	0xFDE
  5668                           postdec2	equ	0xFDD
  5669                           fsr2h	equ	0xFDA
  5670                           fsr2l	equ	0xFD9
  5671                           status	equ	0xFD8
  5672                           
  5673 ;; *************** function _InitializeTasks *****************
  5674 ;; Defined at:
  5675 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;		None
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  1    wreg      void 
  5682 ;; Registers used:
  5683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5690 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5691 ;;      Temps:          0       0       0       0       0       0       2       0       0       0       0       0       
      +0       0       0       0
  5692 ;;      Totals:         0       0       0       1       0       0       2       0       0       0       0       0       
      +0       0       0       0
  5693 ;;Total ram usage:        3 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; Hardware stack levels required when called:   21
  5696 ;; This function calls:
  5697 ;;		_I2cSlv_MainTask
  5698 ;;		_Led_MainTask
  5699 ;;		_MdmHttp_MainTask
  5700 ;;		_Mdm_DrvMainFn
  5701 ;;		_Mdm_MainTask
  5702 ;;		_MyApp_Task
  5703 ;;		_Rtcm_MainTask
  5704 ;;		_Term_MainTask
  5705 ;;		_UsbDevice_MainTask
  5706 ;;		_Wdg_MainTask
  5707 ;; This function is called by:
  5708 ;;		_Sch_MainScheduler
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text15
  5713  005550                     __ptext15:
  5714                           	opt stack 0
  5715  005550                     _InitializeTasks:
  5716                           	opt stack 8
  5717                           
  5718                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5719                           
  5720                           ; BSR set to: 5
  5721                           ;incstack = 0
  5722  005550  0E00               	movlw	0
  5723  005552  0102               	movlb	2	; () banked
  5724  005554  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5725                           
  5726                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5727  005556  0E00               	movlw	0
  5728  005558  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5729  00555A                     l16955:
  5730                           
  5731                           ; BSR set to: 2
  5732  00555A  0E30               	movlw	low _TaskNumber
  5733  00555C  6EF6               	movwf	tblptrl,c
  5734  00555E                     	if	1	;There is more than 1 active tblptr byte
  5735  00555E  0EFC               	movlw	high _TaskNumber
  5736  005560  6EF7               	movwf	tblptrh,c
  5737  005562                     	endif
  5738  005562                     	if	0	;There are less than 3 active tblptr bytes
  5739  005562                     	endif
  5740  005562  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5741  005564  0105               	movlb	5	; () banked
  5742  005566  6FF4               	movwf	??_InitializeTasks& (0+255),b
  5743  005568  6BF5               	clrf	(??_InitializeTasks+1)& (0+255),b
  5744  00556A  0009               	tblrd		*+
  5745  00556C  50F5               	movf	tablat,w,c
  5746  00556E  5DF4               	subwf	??_InitializeTasks& (0+255),w,b
  5747  005570  0009               	tblrd		*+
  5748  005572  50F5               	movf	tablat,w,c
  5749  005574  59F5               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5750  005576  B0D8               	btfsc	status,0,c
  5751  005578  0012               	return	
  5752                           
  5753                           ; BSR set to: 5
  5754                           ;os_sched.c: 86: {
  5755                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5756                           
  5757                           ; BSR set to: 5
  5758                           
  5759                           ; BSR set to: 5
  5760  00557A  0102               	movlb	2	; () banked
  5761  00557C  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5762  00557E  0D08               	mullw	8
  5763  005580  0EA4               	movlw	low _TaskTable
  5764  005582  24F3               	addwf	prodl,w,c
  5765  005584  6ED9               	movwf	fsr2l,c
  5766  005586  0E05               	movlw	high _TaskTable
  5767  005588  20F4               	addwfc	prodh,w,c
  5768  00558A  6EDA               	movwf	fsr2h,c
  5769  00558C  D801               	call	u16678
  5770  00558E  D017               	goto	u16679
  5771  005590                     u16678:
  5772  005590  0005               	push	
  5773  005592  6EFA               	movwf	pclath,c
  5774  005594  50DE               	movf	postinc2,w,c
  5775  005596  6EFD               	movwf	tosl,c
  5776  005598  50DE               	movf	postinc2,w,c
  5777  00559A  6EFE               	movwf	tosh,c
  5778  00559C  50F8               	movf	tblptru,w,c
  5779  00559E  6EFF               	movwf	tosu,c
  5780  0055A0  50FA               	movf	pclath,w,c
  5781  0055A2  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5782  0055A4  0D08               	mullw	8
  5783  0055A6  0E07               	movlw	7
  5784  0055A8  26F3               	addwf	prodl,f,c
  5785  0055AA  0E00               	movlw	0
  5786  0055AC  22F4               	addwfc	prodh,f,c
  5787  0055AE  0EA4               	movlw	low _TaskTable
  5788  0055B0  24F3               	addwf	prodl,w,c
  5789  0055B2  6ED9               	movwf	fsr2l,c
  5790  0055B4  0E05               	movlw	high _TaskTable
  5791  0055B6  20F4               	addwfc	prodh,w,c
  5792  0055B8  6EDA               	movwf	fsr2h,c
  5793  0055BA  50DF               	movf	indf2,w,c
  5794  0055BC  0012               	return		;indir
  5795  0055BE                     u16679:
  5796  0055BE  0102               	movlb	2	; () banked
  5797  0055C0  2BC8               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5798  0055C2  D7CB               	goto	l16955
  5799  0055C4                     __end_of_InitializeTasks:
  5800                           	opt stack 0
  5801                           tosu	equ	0xFFF
  5802                           tosh	equ	0xFFE
  5803                           tosl	equ	0xFFD
  5804                           pclath	equ	0xFFA
  5805                           tblptru	equ	0xFF8
  5806                           tblptrh	equ	0xFF7
  5807                           tblptrl	equ	0xFF6
  5808                           tablat	equ	0xFF5
  5809                           prodh	equ	0xFF4
  5810                           prodl	equ	0xFF3
  5811                           intcon	equ	0xFF2
  5812                           intcon2	equ	0xFF1
  5813                           intcon3	equ	0xFF0
  5814                           postinc0	equ	0xFEE
  5815                           wreg	equ	0xFE8
  5816                           postinc1	equ	0xFE6
  5817                           postdec1	equ	0xFE5
  5818                           fsr1h	equ	0xFE2
  5819                           fsr1l	equ	0xFE1
  5820                           indf2	equ	0xFDF
  5821                           postinc2	equ	0xFDE
  5822                           postdec2	equ	0xFDD
  5823                           fsr2h	equ	0xFDA
  5824                           fsr2l	equ	0xFD9
  5825                           status	equ	0xFD8
  5826                           
  5827 ;; *************** function _MyApp_Task *****************
  5828 ;; Defined at:
  5829 ;;		line 149 in file "../Source/c/04_App/app.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  Options         1    wreg     unsigned char 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  Options         1    0[COMRAM] unsigned char 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5847 ;;Total ram usage:        0 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:   19
  5850 ;; This function calls:
  5851 ;;		_Led_SetLedBlinkTime
  5852 ;;		_addCmdFsm
  5853 ;;		_cmdVisualEffet
  5854 ;;		_delCmdFsm
  5855 ;;		_detectCmd
  5856 ;;		_detectUsbNumber
  5857 ;;		_initFsm
  5858 ;;		_resCmdFsm
  5859 ;;		_triggerCmdFsm
  5860 ;;		_triggerVisualEffect
  5861 ;; This function is called by:
  5862 ;;		_InitializeTasks
  5863 ;;		_ScheduleTasks
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text16
  5868  0026E8                     __ptext16:
  5869                           	opt stack 0
  5870  0026E8                     _MyApp_Task:
  5871                           	opt stack 9
  5872                           
  5873                           ;app.c: 151: static gateFsmStates currentState = GATE_INIT;
  5874                           ;app.c: 152: static bool isCmdSuccessfull = 1;
  5875                           ;app.c: 154: cmdVisualEffet(isCmdSuccessfull);
  5876                           
  5877                           ; BSR set to: 5
  5878                           ;incstack = 0
  5879  0026E8  0100               	movlb	0	; () banked
  5880  0026EA  51E2               	movf	MyApp_Task@isCmdSuccessfull& (0+255),w,b
  5881  0026EC  ECDD  F030         	call	_cmdVisualEffet
  5882                           
  5883                           ;app.c: 156: switch (SystemState)
  5884  0026F0  D098               	goto	l2601
  5885  0026F2                     
  5886                           ;app.c: 161: Led_SetLedBlinkTime(1u,100,900);
  5887  0026F2  0E00               	movlw	0
  5888  0026F4  0100               	movlb	0	; () banked
  5889  0026F6  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5890  0026F8  0E64               	movlw	100
  5891  0026FA  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5892  0026FC  0E03               	movlw	3
  5893  0026FE  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5894  002700  0E84               	movlw	132
  5895  002702  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5896  002704  0E01               	movlw	1
  5897  002706  ECDA  F02E         	call	_Led_SetLedBlinkTime
  5898                           
  5899                           ;app.c: 162: Led_SetLedBlinkTime(2u,100,900);
  5900  00270A  0E00               	movlw	0
  5901  00270C  0100               	movlb	0	; () banked
  5902  00270E  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5903  002710  0E64               	movlw	100
  5904  002712  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5905  002714  0E03               	movlw	3
  5906  002716  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5907  002718  0E84               	movlw	132
  5908  00271A  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5909  00271C  0E02               	movlw	2
  5910  00271E  ECDA  F02E         	call	_Led_SetLedBlinkTime
  5911                           
  5912                           ;app.c: 163: break;
  5913  002722  0012               	return	
  5914  002724                     
  5915                           ;app.c: 170: if (initFsm(&isCmdSuccessfull))
  5916  002724  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5917  002726  0101               	movlb	1	; () banked
  5918  002728  6F03               	movwf	initFsm@isCmdSuccessfull& (0+255),b
  5919  00272A  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5920  00272C  6F04               	movwf	(initFsm@isCmdSuccessfull+1)& (0+255),b
  5921  00272E  EC1D  F022         	call	_initFsm	;wreg free
  5922  002732  0900               	iorlw	0
  5923  002734  B4D8               	btfsc	status,2,c
  5924  002736  0012               	return	
  5925                           
  5926                           ;app.c: 171: {
  5927                           ;app.c: 172: currentState = GATE_WAIT_EVENT;
  5928  002738  0E01               	movlw	1
  5929  00273A  0101               	movlb	1	; () banked
  5930  00273C  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  5931                           
  5932                           ; BSR set to: 1
  5933                           ;app.c: 173: }
  5934                           ;app.c: 174: break;
  5935  00273E  0012               	return	
  5936  002740                     
  5937                           ; BSR set to: 1
  5938                           ;app.c: 177: detectUsbNumber(&isCmdSuccessfull);
  5939                           
  5940                           ; BSR set to: 1
  5941  002740  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5942  002742  0100               	movlb	0	; () banked
  5943  002744  6F99               	movwf	detectUsbNumber@isCmdSuccessfull& (0+255),b
  5944  002746  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5945  002748  6F9A               	movwf	(detectUsbNumber@isCmdSuccessfull+1)& (0+255),b
  5946  00274A  ECCE  F031         	call	_detectUsbNumber	;wreg free
  5947                           
  5948                           ;app.c: 178: currentState = detectCmd();
  5949  00274E  EC2D  F026         	call	_detectCmd	;wreg free
  5950  002752  0101               	movlb	1	; () banked
  5951  002754  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  5952                           
  5953                           ;app.c: 179: break;
  5954  002756  0012               	return	
  5955  002758                     
  5956                           ; BSR set to: 1
  5957                           ;app.c: 182: if (addCmdFsm(receivedNumber, smsText, &isCmdSuccessfull))
  5958                           
  5959                           ; BSR set to: 1
  5960  002758  0E46               	movlw	low _receivedNumber
  5961  00275A  6F05               	movwf	addCmdFsm@receivedNumber& (0+255),b
  5962  00275C  0E03               	movlw	high _receivedNumber
  5963  00275E  6F06               	movwf	(addCmdFsm@receivedNumber+1)& (0+255),b
  5964  002760  0E84               	movlw	low _smsText
  5965  002762  6F07               	movwf	addCmdFsm@smsText& (0+255),b
  5966  002764  0E04               	movlw	high _smsText
  5967  002766  6F08               	movwf	(addCmdFsm@smsText+1)& (0+255),b
  5968  002768  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  5969  00276A  6F09               	movwf	addCmdFsm@isCmdSuccessfull& (0+255),b
  5970  00276C  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  5971  00276E  6F0A               	movwf	(addCmdFsm@isCmdSuccessfull+1)& (0+255),b
  5972  002770  ECD0  F019         	call	_addCmdFsm	;wreg free
  5973  002774  0900               	iorlw	0
  5974  002776  B4D8               	btfsc	status,2,c
  5975  002778  0012               	return	
  5976                           
  5977                           ;app.c: 183: {
  5978                           ;app.c: 184: currentState = GATE_WAIT_EVENT;
  5979  00277A  0E01               	movlw	1
  5980  00277C  0101               	movlb	1	; () banked
  5981  00277E  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  5982                           
  5983                           ; BSR set to: 1
  5984                           ;app.c: 185: triggerVisualEffect();
  5985  002780  ECA0  F036         	call	_triggerVisualEffect	;wreg free
  5986                           
  5987                           ;app.c: 186: }
  5988                           ;app.c: 187: break;
  5989  002784  0012               	return	
  5990  002786                     
  5991                           ;app.c: 190: if (delCmdFsm(receivedNumber, smsText, &isCmdSuccessfull))
  5992  002786  0E46               	movlw	low _receivedNumber
  5993  002788  0101               	movlb	1	; () banked
  5994  00278A  6F05               	movwf	delCmdFsm@receivedNumber& (0+255),b
  5995  00278C  0E03               	movlw	high _receivedNumber
  5996  00278E  6F06               	movwf	(delCmdFsm@receivedNumber+1)& (0+255),b
  5997  002790  0E84               	movlw	low _smsText
  5998  002792  6F07               	movwf	delCmdFsm@smsText& (0+255),b
  5999  002794  0E04               	movlw	high _smsText
  6000  002796  6F08               	movwf	(delCmdFsm@smsText+1)& (0+255),b
  6001  002798  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  6002  00279A  6F09               	movwf	delCmdFsm@isCmdSuccessfull& (0+255),b
  6003  00279C  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  6004  00279E  6F0A               	movwf	(delCmdFsm@isCmdSuccessfull+1)& (0+255),b
  6005  0027A0  EC57  F01D         	call	_delCmdFsm	;wreg free
  6006  0027A4  0900               	iorlw	0
  6007  0027A6  B4D8               	btfsc	status,2,c
  6008  0027A8  0012               	return	
  6009                           
  6010                           ;app.c: 191: {
  6011                           ;app.c: 192: currentState = GATE_WAIT_EVENT;
  6012  0027AA  0E01               	movlw	1
  6013  0027AC  0101               	movlb	1	; () banked
  6014  0027AE  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  6015                           
  6016                           ; BSR set to: 1
  6017                           ;app.c: 193: triggerVisualEffect();
  6018  0027B0  ECA0  F036         	call	_triggerVisualEffect	;wreg free
  6019                           
  6020                           ;app.c: 194: }
  6021                           ;app.c: 195: break;
  6022  0027B4  0012               	return	
  6023  0027B6                     
  6024                           ;app.c: 198: if (triggerCmdFsm(receivedNumber))
  6025  0027B6  0E46               	movlw	low _receivedNumber
  6026  0027B8  0101               	movlb	1	; () banked
  6027  0027BA  6F05               	movwf	triggerCmdFsm@receivedNumber& (0+255),b
  6028  0027BC  0E03               	movlw	high _receivedNumber
  6029  0027BE  6F06               	movwf	(triggerCmdFsm@receivedNumber+1)& (0+255),b
  6030  0027C0  ECEB  F01C         	call	_triggerCmdFsm	;wreg free
  6031  0027C4  0900               	iorlw	0
  6032  0027C6  B4D8               	btfsc	status,2,c
  6033  0027C8  0012               	return	
  6034                           
  6035                           ;app.c: 199: {
  6036                           ;app.c: 200: currentState = GATE_WAIT_EVENT;
  6037  0027CA  0E01               	movlw	1
  6038  0027CC  0101               	movlb	1	; () banked
  6039  0027CE  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  6040                           
  6041                           ; BSR set to: 1
  6042                           ;app.c: 201: }
  6043                           ;app.c: 202: break;
  6044  0027D0  0012               	return	
  6045  0027D2                     
  6046                           ; BSR set to: 1
  6047                           ;app.c: 205: if (resCmdFsm(receivedNumber, &isCmdSuccessfull))
  6048                           
  6049                           ; BSR set to: 1
  6050  0027D2  0E46               	movlw	low _receivedNumber
  6051  0027D4  6F03               	movwf	resCmdFsm@receivedNumber& (0+255),b
  6052  0027D6  0E03               	movlw	high _receivedNumber
  6053  0027D8  6F04               	movwf	(resCmdFsm@receivedNumber+1)& (0+255),b
  6054  0027DA  0EE2               	movlw	low MyApp_Task@isCmdSuccessfull
  6055  0027DC  6F05               	movwf	resCmdFsm@isCmdSuccessfull& (0+255),b
  6056  0027DE  0E00               	movlw	high MyApp_Task@isCmdSuccessfull
  6057  0027E0  6F06               	movwf	(resCmdFsm@isCmdSuccessfull+1)& (0+255),b
  6058  0027E2  EC69  F02A         	call	_resCmdFsm	;wreg free
  6059  0027E6  0900               	iorlw	0
  6060  0027E8  B4D8               	btfsc	status,2,c
  6061  0027EA  0012               	return	
  6062                           
  6063                           ;app.c: 206: {
  6064                           ;app.c: 207: currentState = GATE_INIT;
  6065  0027EC  0E00               	movlw	0
  6066  0027EE  0101               	movlb	1	; () banked
  6067  0027F0  6FDA               	movwf	MyApp_Task@currentState& (0+255),b
  6068                           
  6069                           ; BSR set to: 1
  6070                           ;app.c: 208: triggerVisualEffect();
  6071  0027F2  ECA0  F036         	call	_triggerVisualEffect	;wreg free
  6072                           
  6073                           ;app.c: 214: }
  6074                           
  6075                           ;app.c: 213: break;
  6076                           
  6077                           ;app.c: 212: default:
  6078                           
  6079                           ;app.c: 209: }
  6080                           ;app.c: 210: break;
  6081  0027F6  0012               	return	
  6082  0027F8  0101               	movlb	1	; () banked
  6083  0027FA  51DA               	movf	MyApp_Task@currentState& (0+255),w,b
  6084                           
  6085                           ; Switch size 1, requested type "space"
  6086                           ; Number of cases is 6, Range of values is 0 to 5
  6087                           ; switch strategies available:
  6088                           ; Name         Instructions Cycles
  6089                           ; simple_byte           19    10 (average)
  6090                           ;	Chosen strategy is simple_byte
  6091  0027FC  0A00               	xorlw	0	; case 0
  6092  0027FE  B4D8               	btfsc	status,2,c
  6093  002800  D791               	goto	l2606
  6094  002802  0A01               	xorlw	1	; case 1
  6095  002804  B4D8               	btfsc	status,2,c
  6096  002806  D79C               	goto	l2609
  6097  002808  0A03               	xorlw	3	; case 2
  6098  00280A  B4D8               	btfsc	status,2,c
  6099  00280C  D7A5               	goto	l2610
  6100  00280E  0A01               	xorlw	1	; case 3
  6101  002810  B4D8               	btfsc	status,2,c
  6102  002812  D7B9               	goto	l2612
  6103  002814  0A07               	xorlw	7	; case 4
  6104  002816  B4D8               	btfsc	status,2,c
  6105  002818  D7CE               	goto	l2614
  6106  00281A  0A01               	xorlw	1	; case 5
  6107  00281C  A4D8               	btfss	status,2,c
  6108                           
  6109                           ; BSR set to: 1
  6110                           ;app.c: 220: }
  6111                           
  6112                           ; BSR set to: 1
  6113                           ;app.c: 219: break;
  6114                           
  6115                           ;app.c: 218: default:
  6116                           
  6117                           ; BSR set to: 1
  6118                           ;app.c: 215: break;
  6119  00281E  0012               	return	
  6120  002820  D7D8               	goto	l2616
  6121  002822                     l2601:
  6122                           
  6123                           ; BSR set to: 1
  6124  002822  0100               	movlb	0	; () banked
  6125  002824  51D4               	movf	_SystemState& (0+255),w,b
  6126                           
  6127                           ; Switch size 1, requested type "space"
  6128                           ; Number of cases is 2, Range of values is 0 to 1
  6129                           ; switch strategies available:
  6130                           ; Name         Instructions Cycles
  6131                           ; simple_byte            7     4 (average)
  6132                           ;	Chosen strategy is simple_byte
  6133  002826  0A00               	xorlw	0	; case 0
  6134  002828  B4D8               	btfsc	status,2,c
  6135  00282A  D763               	goto	l2602
  6136  00282C  0A01               	xorlw	1	; case 1
  6137  00282E  A4D8               	btfss	status,2,c
  6138  002830  0012               	return	
  6139  002832  D7E2               	goto	l2605
  6140  002834                     __end_of_MyApp_Task:
  6141                           	opt stack 0
  6142                           tosu	equ	0xFFF
  6143                           tosh	equ	0xFFE
  6144                           tosl	equ	0xFFD
  6145                           pclath	equ	0xFFA
  6146                           tblptru	equ	0xFF8
  6147                           tblptrh	equ	0xFF7
  6148                           tblptrl	equ	0xFF6
  6149                           tablat	equ	0xFF5
  6150                           prodh	equ	0xFF4
  6151                           prodl	equ	0xFF3
  6152                           intcon	equ	0xFF2
  6153                           intcon2	equ	0xFF1
  6154                           intcon3	equ	0xFF0
  6155                           postinc0	equ	0xFEE
  6156                           wreg	equ	0xFE8
  6157                           postinc1	equ	0xFE6
  6158                           postdec1	equ	0xFE5
  6159                           fsr1h	equ	0xFE2
  6160                           fsr1l	equ	0xFE1
  6161                           indf2	equ	0xFDF
  6162                           postinc2	equ	0xFDE
  6163                           postdec2	equ	0xFDD
  6164                           fsr2h	equ	0xFDA
  6165                           fsr2l	equ	0xFD9
  6166                           status	equ	0xFD8
  6167                           
  6168 ;; *************** function _Term_MainTask *****************
  6169 ;; Defined at:
  6170 ;;		line 847 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  Options         1    wreg     unsigned char 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;  Options         1    0[COMRAM] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      void 
  6177 ;; Registers used:
  6178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6188 ;;Total ram usage:        0 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:   17
  6191 ;; This function calls:
  6192 ;;		_Term_MainSm
  6193 ;; This function is called by:
  6194 ;;		_InitializeTasks
  6195 ;;		_ScheduleTasks
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text17
  6200  006B8E                     __ptext17:
  6201                           	opt stack 0
  6202  006B8E                     _Term_MainTask:
  6203                           	opt stack 11
  6204                           
  6205                           ;term.c: 849: switch (SystemState)
  6206                           
  6207                           ;incstack = 0
  6208  006B8E  D003               	goto	l2492
  6209  006B90                     
  6210                           ;term.c: 860: Term_MainSm();
  6211  006B90  EC5E  F008         	call	_Term_MainSm	;wreg free
  6212                           
  6213                           ;term.c: 867: }
  6214                           
  6215                           ;term.c: 866: break;
  6216                           
  6217                           ;term.c: 865: default:
  6218                           
  6219                           ;term.c: 862: break;
  6220  006B94  0012               	return	
  6221  006B96                     l2492:
  6222  006B96  0100               	movlb	0	; () banked
  6223  006B98  51D4               	movf	_SystemState& (0+255),w,b
  6224                           
  6225                           ; Switch size 1, requested type "space"
  6226                           ; Number of cases is 2, Range of values is 0 to 1
  6227                           ; switch strategies available:
  6228                           ; Name         Instructions Cycles
  6229                           ; simple_byte            7     4 (average)
  6230                           ;	Chosen strategy is simple_byte
  6231  006B9A  0A00               	xorlw	0	; case 0
  6232  006B9C  B4D8               	btfsc	status,2,c
  6233  006B9E  0012               	return	
  6234  006BA0  0A01               	xorlw	1	; case 1
  6235  006BA2  A4D8               	btfss	status,2,c
  6236  006BA4  0012               	return	
  6237  006BA6  D7F4               	goto	l2495
  6238  006BA8                     __end_of_Term_MainTask:
  6239                           	opt stack 0
  6240                           tosu	equ	0xFFF
  6241                           tosh	equ	0xFFE
  6242                           tosl	equ	0xFFD
  6243                           pclath	equ	0xFFA
  6244                           tblptru	equ	0xFF8
  6245                           tblptrh	equ	0xFF7
  6246                           tblptrl	equ	0xFF6
  6247                           tablat	equ	0xFF5
  6248                           prodh	equ	0xFF4
  6249                           prodl	equ	0xFF3
  6250                           intcon	equ	0xFF2
  6251                           intcon2	equ	0xFF1
  6252                           intcon3	equ	0xFF0
  6253                           postinc0	equ	0xFEE
  6254                           wreg	equ	0xFE8
  6255                           postinc1	equ	0xFE6
  6256                           postdec1	equ	0xFE5
  6257                           fsr1h	equ	0xFE2
  6258                           fsr1l	equ	0xFE1
  6259                           indf2	equ	0xFDF
  6260                           postinc2	equ	0xFDE
  6261                           postdec2	equ	0xFDD
  6262                           fsr2h	equ	0xFDA
  6263                           fsr2l	equ	0xFD9
  6264                           status	equ	0xFD8
  6265                           
  6266 ;; *************** function _Rtcm_MainTask *****************
  6267 ;; Defined at:
  6268 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;  Options         1    wreg     unsigned char 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  Options         1    0[COMRAM] unsigned char 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  1    wreg      void 
  6275 ;; Registers used:
  6276 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6286 ;;Total ram usage:        0 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:   14
  6289 ;; This function calls:
  6290 ;;		_Rtcc_AlarmConfig
  6291 ;;		_Rtcc_LockRtc
  6292 ;;		_Rtcc_RtcConfig
  6293 ;;		_Rtcc_SetRtcStatus
  6294 ;;		_Rtcc_UnlockRtc
  6295 ;;		_Rtcm_GetRtccDate
  6296 ;;		_Rtcm_SetRtccDate
  6297 ;; This function is called by:
  6298 ;;		_InitializeTasks
  6299 ;;		_ScheduleTasks
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text18
  6304  00522C                     __ptext18:
  6305                           	opt stack 0
  6306  00522C                     _Rtcm_MainTask:
  6307                           	opt stack 14
  6308                           
  6309                           ;rtcm.c: 101: switch (SystemState)
  6310                           
  6311                           ;incstack = 0
  6312  00522C  D03D               	goto	l2220
  6313  00522E                     l2221:
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6317  00522E  86CD               	bsf	4045,3,c	;volatile
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6321  005230  0E00               	movlw	0
  6322  005232  0103               	movlb	3	; () banked
  6323  005234  6FBB               	movwf	_RtcConfig& (0+255),b
  6324                           
  6325                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6326  005236  0E00               	movlw	0
  6327  005238  6FBC               	movwf	(_RtcConfig+1)& (0+255),b
  6328                           
  6329                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6330  00523A  0E01               	movlw	1
  6331  00523C  6FBD               	movwf	(_RtcConfig+2)& (0+255),b
  6332                           
  6333                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6334  00523E  0E01               	movlw	1
  6335  005240  6FBE               	movwf	(_RtcConfig+3)& (0+255),b
  6336                           
  6337                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6338  005242  0E01               	movlw	1
  6339  005244  6FB7               	movwf	_AlCfg& (0+255),b
  6340                           
  6341                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6342  005246  0E01               	movlw	1
  6343  005248  6FB8               	movwf	(_AlCfg+1)& (0+255),b
  6344                           
  6345                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6346  00524A  0E01               	movlw	1
  6347  00524C  6FB9               	movwf	(_AlCfg+2)& (0+255),b
  6348                           
  6349                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6350  00524E  0E00               	movlw	0
  6351  005250  6FBA               	movwf	(_AlCfg+3)& (0+255),b
  6352                           
  6353                           ; BSR set to: 3
  6354                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6355  005252  EC63  F036         	call	_Rtcc_UnlockRtc	;wreg free
  6356                           
  6357                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6358  005256  0EBB               	movlw	low _RtcConfig
  6359  005258  0100               	movlb	0	; () banked
  6360  00525A  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6361  00525C  0E03               	movlw	high _RtcConfig
  6362  00525E  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6363  005260  EC8E  F025         	call	_Rtcc_RtcConfig	;wreg free
  6364                           
  6365                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6366  005264  0EB7               	movlw	low _AlCfg
  6367  005266  0100               	movlb	0	; () banked
  6368  005268  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6369  00526A  0E03               	movlw	high _AlCfg
  6370  00526C  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6371  00526E  ECC1  F02B         	call	_Rtcc_AlarmConfig	;wreg free
  6372                           
  6373                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6374  005272  0E01               	movlw	1
  6375  005274  EC12  F036         	call	_Rtcc_SetRtcStatus
  6376                           
  6377                           ;rtcm.c: 127: Rtcc_LockRtc();
  6378  005278  EC6B  F036         	call	_Rtcc_LockRtc	;wreg free
  6379                           
  6380                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6381  00527C  EE24  F04A         	lfsr	2,_Rtcm_SystemDate
  6382  005280  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6383  005284  0E07               	movlw	7
  6384  005286                     u16591:
  6385  005286  CFDB FFEB          	movff	plusw2,plusw0
  6386  00528A  06E8               	decf	wreg,f,c
  6387  00528C  E2FC               	bc	u16591
  6388  00528E  EC86  F02E         	call	_Rtcm_SetRtccDate	;wreg free
  6389                           
  6390                           ;rtcm.c: 154: break;
  6391  005292  0012               	return	
  6392  005294                     
  6393                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6394  005294  EC5E  F02C         	call	_Rtcm_GetRtccDate	;wreg free
  6395  005298  EE24  F04A         	lfsr	2,_Rtcm_SystemDate
  6396  00529C  0E07               	movlw	7
  6397  00529E                     u16601:
  6398  00529E  CFEB FFDB          	movff	plusw0,plusw2
  6399  0052A2  06E8               	decf	wreg,f,c
  6400  0052A4  E2FC               	bc	u16601
  6401                           
  6402                           ;rtcm.c: 165: }
  6403                           
  6404                           ;rtcm.c: 164: break;
  6405                           
  6406                           ;rtcm.c: 163: default:
  6407                           
  6408                           ;rtcm.c: 160: break;
  6409  0052A6  0012               	return	
  6410  0052A8                     l2220:
  6411  0052A8  0100               	movlb	0	; () banked
  6412  0052AA  51D4               	movf	_SystemState& (0+255),w,b
  6413                           
  6414                           ; Switch size 1, requested type "space"
  6415                           ; Number of cases is 2, Range of values is 0 to 1
  6416                           ; switch strategies available:
  6417                           ; Name         Instructions Cycles
  6418                           ; simple_byte            7     4 (average)
  6419                           ;	Chosen strategy is simple_byte
  6420  0052AC  0A00               	xorlw	0	; case 0
  6421  0052AE  B4D8               	btfsc	status,2,c
  6422  0052B0  D7BE               	goto	l2221
  6423  0052B2  0A01               	xorlw	1	; case 1
  6424  0052B4  A4D8               	btfss	status,2,c
  6425  0052B6  0012               	return	
  6426  0052B8  D7ED               	goto	l2223
  6427  0052BA                     __end_of_Rtcm_MainTask:
  6428                           	opt stack 0
  6429                           tosu	equ	0xFFF
  6430                           tosh	equ	0xFFE
  6431                           tosl	equ	0xFFD
  6432                           pclath	equ	0xFFA
  6433                           tblptru	equ	0xFF8
  6434                           tblptrh	equ	0xFF7
  6435                           tblptrl	equ	0xFF6
  6436                           tablat	equ	0xFF5
  6437                           prodh	equ	0xFF4
  6438                           prodl	equ	0xFF3
  6439                           intcon	equ	0xFF2
  6440                           intcon2	equ	0xFF1
  6441                           intcon3	equ	0xFF0
  6442                           postinc0	equ	0xFEE
  6443                           plusw0	equ	0xFEB
  6444                           wreg	equ	0xFE8
  6445                           postinc1	equ	0xFE6
  6446                           postdec1	equ	0xFE5
  6447                           fsr1h	equ	0xFE2
  6448                           fsr1l	equ	0xFE1
  6449                           indf2	equ	0xFDF
  6450                           postinc2	equ	0xFDE
  6451                           postdec2	equ	0xFDD
  6452                           plusw2	equ	0xFDB
  6453                           fsr2h	equ	0xFDA
  6454                           fsr2l	equ	0xFD9
  6455                           status	equ	0xFD8
  6456                           
  6457 ;; *************** function _Led_MainTask *****************
  6458 ;; Defined at:
  6459 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  Options         1    wreg     unsigned char 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  Options         1    0[COMRAM] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6475 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6476 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6477 ;;Total ram usage:        1 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:   14
  6480 ;; This function calls:
  6481 ;;		_LedStateMachine
  6482 ;; This function is called by:
  6483 ;;		_InitializeTasks
  6484 ;;		_ScheduleTasks
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text19
  6489  003DFA                     __ptext19:
  6490                           	opt stack 0
  6491  003DFA                     _Led_MainTask:
  6492                           	opt stack 14
  6493                           
  6494                           ;led.c: 300: switch (SystemState)
  6495                           
  6496                           ;incstack = 0
  6497  003DFA  D05C               	goto	l2134
  6498  003DFC                     l2135:
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6502  003DFC  9895               	bcf	3989,4,c	;volatile
  6503                           
  6504                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6505  003DFE  9A95               	bcf	3989,5,c	;volatile
  6506                           
  6507                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6508  003E00  9C95               	bcf	3989,6,c	;volatile
  6509                           
  6510                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6511  003E02  9883               	bcf	3971,4,c	;volatile
  6512                           
  6513                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6514  003E04  9A83               	bcf	3971,5,c	;volatile
  6515                           
  6516                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6517  003E06  9C83               	bcf	3971,6,c	;volatile
  6518                           
  6519                           ;led.c: 311: break;
  6520  003E08  0012               	return	
  6521  003E0A                     
  6522                           ; BSR set to: 0
  6523                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6524                           
  6525                           ; BSR set to: 0
  6526  003E0A  0EF9               	movlw	low _Led1Sts
  6527  003E0C  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6528  003E0E  0E01               	movlw	high _Led1Sts
  6529  003E10  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6530  003E12  0EF8               	movlw	low _Led1OutSts
  6531  003E14  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6532  003E16  0E01               	movlw	high _Led1OutSts
  6533  003E18  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6534  003E1A  0E71               	movlw	low _Led1Blink
  6535  003E1C  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6536  003E1E  0E03               	movlw	high _Led1Blink
  6537  003E20  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6538  003E22  0E95               	movlw	low _Led1Pulse
  6539  003E24  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6540  003E26  0E03               	movlw	high _Led1Pulse
  6541  003E28  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6542  003E2A  0E01               	movlw	1
  6543  003E2C  ECE9  F024         	call	_LedStateMachine
  6544  003E30  0100               	movlb	0	; () banked
  6545  003E32  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6546  003E34  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6547  003E36  5083               	movf	3971,w,c	;volatile
  6548  003E38  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6549  003E3A  0BEF               	andlw	-17
  6550  003E3C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6551  003E3E  6E83               	movwf	3971,c	;volatile
  6552                           
  6553                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6554  003E40  0EF7               	movlw	low _Led2Sts
  6555  003E42  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6556  003E44  0E01               	movlw	high _Led2Sts
  6557  003E46  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6558  003E48  0EF6               	movlw	low _Led2OutSts
  6559  003E4A  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6560  003E4C  0E01               	movlw	high _Led2OutSts
  6561  003E4E  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6562  003E50  0E68               	movlw	low _Led2Blink
  6563  003E52  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6564  003E54  0E03               	movlw	high _Led2Blink
  6565  003E56  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6566  003E58  0E8F               	movlw	low _Led2Pulse
  6567  003E5A  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6568  003E5C  0E03               	movlw	high _Led2Pulse
  6569  003E5E  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6570  003E60  0E02               	movlw	2
  6571  003E62  ECE9  F024         	call	_LedStateMachine
  6572  003E66  0100               	movlb	0	; () banked
  6573  003E68  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6574  003E6A  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6575  003E6C  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6576  003E6E  5083               	movf	3971,w,c	;volatile
  6577  003E70  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6578  003E72  0BDF               	andlw	-33
  6579  003E74  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6580  003E76  6E83               	movwf	3971,c	;volatile
  6581                           
  6582                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6583  003E78  0EF5               	movlw	low _Led3Sts
  6584  003E7A  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6585  003E7C  0E01               	movlw	high _Led3Sts
  6586  003E7E  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6587  003E80  0EF4               	movlw	low _Led3OutSts
  6588  003E82  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6589  003E84  0E01               	movlw	high _Led3OutSts
  6590  003E86  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6591  003E88  0EED               	movlw	low _Led3Blink
  6592  003E8A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6593  003E8C  0E04               	movlw	high _Led3Blink
  6594  003E8E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6595  003E90  0E89               	movlw	low _Led3Pulse
  6596  003E92  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6597  003E94  0E03               	movlw	high _Led3Pulse
  6598  003E96  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6599  003E98  0E03               	movlw	3
  6600  003E9A  ECE9  F024         	call	_LedStateMachine
  6601  003E9E  0100               	movlb	0	; () banked
  6602  003EA0  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6603  003EA2  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6604  003EA4  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6605  003EA6  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6606  003EA8  5083               	movf	3971,w,c	;volatile
  6607  003EAA  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6608  003EAC  0BBF               	andlw	-65
  6609  003EAE  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6610  003EB0  6E83               	movwf	3971,c	;volatile
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;led.c: 326: }
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;led.c: 325: break;
  6617                           
  6618                           ;led.c: 324: default:
  6619                           
  6620                           ;led.c: 321: break;
  6621  003EB2  0012               	return	
  6622  003EB4                     l2134:
  6623                           
  6624                           ; BSR set to: 0
  6625  003EB4  0100               	movlb	0	; () banked
  6626  003EB6  51D4               	movf	_SystemState& (0+255),w,b
  6627                           
  6628                           ; Switch size 1, requested type "space"
  6629                           ; Number of cases is 2, Range of values is 0 to 1
  6630                           ; switch strategies available:
  6631                           ; Name         Instructions Cycles
  6632                           ; simple_byte            7     4 (average)
  6633                           ;	Chosen strategy is simple_byte
  6634  003EB8  0A00               	xorlw	0	; case 0
  6635  003EBA  B4D8               	btfsc	status,2,c
  6636  003EBC  D79F               	goto	l2135
  6637  003EBE  0A01               	xorlw	1	; case 1
  6638  003EC0  A4D8               	btfss	status,2,c
  6639  003EC2  0012               	return	
  6640  003EC4  D7A2               	goto	l2137
  6641  003EC6                     __end_of_Led_MainTask:
  6642                           	opt stack 0
  6643                           tosu	equ	0xFFF
  6644                           tosh	equ	0xFFE
  6645                           tosl	equ	0xFFD
  6646                           pclath	equ	0xFFA
  6647                           tblptru	equ	0xFF8
  6648                           tblptrh	equ	0xFF7
  6649                           tblptrl	equ	0xFF6
  6650                           tablat	equ	0xFF5
  6651                           prodh	equ	0xFF4
  6652                           prodl	equ	0xFF3
  6653                           intcon	equ	0xFF2
  6654                           intcon2	equ	0xFF1
  6655                           intcon3	equ	0xFF0
  6656                           postinc0	equ	0xFEE
  6657                           plusw0	equ	0xFEB
  6658                           wreg	equ	0xFE8
  6659                           postinc1	equ	0xFE6
  6660                           postdec1	equ	0xFE5
  6661                           fsr1h	equ	0xFE2
  6662                           fsr1l	equ	0xFE1
  6663                           indf2	equ	0xFDF
  6664                           postinc2	equ	0xFDE
  6665                           postdec2	equ	0xFDD
  6666                           plusw2	equ	0xFDB
  6667                           fsr2h	equ	0xFDA
  6668                           fsr2l	equ	0xFD9
  6669                           status	equ	0xFD8
  6670                           
  6671 ;; *************** function _UsbDevice_MainTask *****************
  6672 ;; Defined at:
  6673 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;  Options         1    wreg     unsigned char 
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;  Options         1    0[COMRAM] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  1    wreg      void 
  6680 ;; Registers used:
  6681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6691 ;;Total ram usage:        0 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:   20
  6694 ;; This function calls:
  6695 ;;		_CDCTxService
  6696 ;;		_USBDeviceInit
  6697 ;;		_USBDeviceTasks
  6698 ;; This function is called by:
  6699 ;;		_InitializeTasks
  6700 ;;		_ScheduleTasks
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text20
  6705  006926                     __ptext20:
  6706                           	opt stack 0
  6707  006926                     _UsbDevice_MainTask:
  6708                           	opt stack 8
  6709                           
  6710                           ;usb_device_mgr.c: 74: switch (SystemState)
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;incstack = 0
  6714  006926  D008               	goto	l1992
  6715  006928                     
  6716                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6717  006928  ECCB  F012         	call	_USBDeviceInit	;wreg free
  6718                           
  6719                           ;usb_device_mgr.c: 80: ;
  6720                           ;usb_device_mgr.c: 81: break;
  6721  00692C  0012               	return	
  6722  00692E                     
  6723                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6724  00692E  ECD8  F00D         	call	_USBDeviceTasks	;wreg free
  6725                           
  6726                           ;usb_device_mgr.c: 90: CDCTxService();
  6727  006932  ECBE  F014         	call	_CDCTxService	;wreg free
  6728                           
  6729                           ;usb_device_mgr.c: 101: }
  6730                           
  6731                           ;usb_device_mgr.c: 100: break;
  6732                           
  6733                           ;usb_device_mgr.c: 99: default:
  6734                           
  6735                           ;usb_device_mgr.c: 96: break;
  6736  006936  0012               	return	
  6737  006938                     l1992:
  6738  006938  0100               	movlb	0	; () banked
  6739  00693A  51D4               	movf	_SystemState& (0+255),w,b
  6740                           
  6741                           ; Switch size 1, requested type "space"
  6742                           ; Number of cases is 2, Range of values is 0 to 1
  6743                           ; switch strategies available:
  6744                           ; Name         Instructions Cycles
  6745                           ; simple_byte            7     4 (average)
  6746                           ;	Chosen strategy is simple_byte
  6747  00693C  0A00               	xorlw	0	; case 0
  6748  00693E  B4D8               	btfsc	status,2,c
  6749  006940  D7F3               	goto	l1993
  6750  006942  0A01               	xorlw	1	; case 1
  6751  006944  A4D8               	btfss	status,2,c
  6752  006946  0012               	return	
  6753  006948  D7F2               	goto	l1995
  6754  00694A                     __end_of_UsbDevice_MainTask:
  6755                           	opt stack 0
  6756                           tosu	equ	0xFFF
  6757                           tosh	equ	0xFFE
  6758                           tosl	equ	0xFFD
  6759                           pclath	equ	0xFFA
  6760                           tblptru	equ	0xFF8
  6761                           tblptrh	equ	0xFF7
  6762                           tblptrl	equ	0xFF6
  6763                           tablat	equ	0xFF5
  6764                           prodh	equ	0xFF4
  6765                           prodl	equ	0xFF3
  6766                           intcon	equ	0xFF2
  6767                           intcon2	equ	0xFF1
  6768                           intcon3	equ	0xFF0
  6769                           postinc0	equ	0xFEE
  6770                           plusw0	equ	0xFEB
  6771                           wreg	equ	0xFE8
  6772                           postinc1	equ	0xFE6
  6773                           postdec1	equ	0xFE5
  6774                           fsr1h	equ	0xFE2
  6775                           fsr1l	equ	0xFE1
  6776                           indf2	equ	0xFDF
  6777                           postinc2	equ	0xFDE
  6778                           postdec2	equ	0xFDD
  6779                           plusw2	equ	0xFDB
  6780                           fsr2h	equ	0xFDA
  6781                           fsr2l	equ	0xFD9
  6782                           status	equ	0xFD8
  6783                           
  6784 ;; *************** function _MdmHttp_MainTask *****************
  6785 ;; Defined at:
  6786 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  Options         1    wreg     unsigned char 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  Options         1    0[COMRAM] unsigned char 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1    wreg      void 
  6793 ;; Registers used:
  6794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6804 ;;Total ram usage:        0 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:   15
  6807 ;; This function calls:
  6808 ;;		_HttpGetMethod
  6809 ;;		_InitGprsNetwork
  6810 ;; This function is called by:
  6811 ;;		_InitializeTasks
  6812 ;;		_ScheduleTasks
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text21
  6817  006202                     __ptext21:
  6818                           	opt stack 0
  6819  006202                     _MdmHttp_MainTask:
  6820                           	opt stack 13
  6821                           
  6822                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6823                           
  6824                           ;incstack = 0
  6825  006202  D019               	goto	l1291
  6826  006204                     
  6827                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6828  006204  0E03               	movlw	3
  6829  006206  0100               	movlb	0	; () banked
  6830  006208  19D1               	xorwf	_MdmStatus& (0+255),w,b
  6831  00620A  A4D8               	btfss	status,2,c
  6832  00620C  0012               	return	
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;mdm_gsm_gprs_http.c: 570: {
  6836                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6837  00620E  C31C  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6838  006212  C31D  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6839  006216  C1EB  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6840  00621A  ECE7  F006         	call	_InitGprsNetwork	;wreg free
  6841  00621E  0101               	movlb	1	; () banked
  6842  006220  6FEA               	movwf	_GprsNetworkSts& (0+255),b
  6843                           
  6844                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6845  006222  0EA6               	movlw	low _HttpGetDataLocal
  6846  006224  0100               	movlb	0	; () banked
  6847  006226  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6848  006228  0E03               	movlw	high _HttpGetDataLocal
  6849  00622A  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6850  00622C  ECF9  F002         	call	_HttpGetMethod	;wreg free
  6851  006230  0101               	movlb	1	; () banked
  6852  006232  6FE9               	movwf	_HttpGetMethodSts& (0+255),b
  6853                           
  6854                           ; BSR set to: 1
  6855                           ;mdm_gsm_gprs_http.c: 581: }
  6856                           
  6857                           ; BSR set to: 1
  6858                           ;mdm_gsm_gprs_http.c: 580: break;
  6859                           
  6860                           ;mdm_gsm_gprs_http.c: 579: default:
  6861                           
  6862                           ; BSR set to: 1
  6863                           ;mdm_gsm_gprs_http.c: 575: }
  6864                           ;mdm_gsm_gprs_http.c: 576: break;
  6865  006234  0012               	return	
  6866  006236                     l1291:
  6867                           
  6868                           ; BSR set to: 1
  6869  006236  0100               	movlb	0	; () banked
  6870  006238  51D4               	movf	_SystemState& (0+255),w,b
  6871                           
  6872                           ; Switch size 1, requested type "space"
  6873                           ; Number of cases is 2, Range of values is 0 to 1
  6874                           ; switch strategies available:
  6875                           ; Name         Instructions Cycles
  6876                           ; simple_byte            7     4 (average)
  6877                           ;	Chosen strategy is simple_byte
  6878  00623A  0A00               	xorlw	0	; case 0
  6879  00623C  B4D8               	btfsc	status,2,c
  6880  00623E  0012               	return	
  6881  006240  0A01               	xorlw	1	; case 1
  6882  006242  A4D8               	btfss	status,2,c
  6883  006244  0012               	return	
  6884  006246  D7DE               	goto	l1294
  6885  006248                     __end_of_MdmHttp_MainTask:
  6886                           	opt stack 0
  6887                           tosu	equ	0xFFF
  6888                           tosh	equ	0xFFE
  6889                           tosl	equ	0xFFD
  6890                           pclath	equ	0xFFA
  6891                           tblptru	equ	0xFF8
  6892                           tblptrh	equ	0xFF7
  6893                           tblptrl	equ	0xFF6
  6894                           tablat	equ	0xFF5
  6895                           prodh	equ	0xFF4
  6896                           prodl	equ	0xFF3
  6897                           intcon	equ	0xFF2
  6898                           intcon2	equ	0xFF1
  6899                           intcon3	equ	0xFF0
  6900                           postinc0	equ	0xFEE
  6901                           plusw0	equ	0xFEB
  6902                           wreg	equ	0xFE8
  6903                           postinc1	equ	0xFE6
  6904                           postdec1	equ	0xFE5
  6905                           fsr1h	equ	0xFE2
  6906                           fsr1l	equ	0xFE1
  6907                           indf2	equ	0xFDF
  6908                           postinc2	equ	0xFDE
  6909                           postdec2	equ	0xFDD
  6910                           plusw2	equ	0xFDB
  6911                           fsr2h	equ	0xFDA
  6912                           fsr2l	equ	0xFD9
  6913                           status	equ	0xFD8
  6914                           
  6915 ;; *************** function _Mdm_MainTask *****************
  6916 ;; Defined at:
  6917 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;  Options         1    wreg     unsigned char 
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;  Options         1    0[COMRAM] unsigned char 
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6935 ;;Total ram usage:        0 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:   15
  6938 ;; This function calls:
  6939 ;;		_CheckModem
  6940 ;;		_ConfigureModem
  6941 ;;		_GetSmsSm
  6942 ;;		_ModemEvtParser
  6943 ;;		_SendSmsSm
  6944 ;;		_TurnOnModem
  6945 ;;		_UartSetConfig
  6946 ;;		_Uart_InitUartModule
  6947 ;; This function is called by:
  6948 ;;		_InitializeTasks
  6949 ;;		_ScheduleTasks
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text22
  6954  005F50                     __ptext22:
  6955                           	opt stack 0
  6956  005F50                     _Mdm_MainTask:
  6957                           	opt stack 13
  6958                           
  6959                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6960                           
  6961                           ;incstack = 0
  6962  005F50  D01E               	goto	l1107
  6963  005F52                     
  6964                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6965  005F52  EC81  F02D         	call	_UartSetConfig	;wreg free
  6966                           
  6967                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6968  005F56  0E24               	movlw	low _UartConfig
  6969  005F58  0100               	movlb	0	; () banked
  6970  005F5A  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6971  005F5C  0E03               	movlw	high _UartConfig
  6972  005F5E  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6973  005F60  0E01               	movlw	1
  6974  005F62  EC61  F005         	call	_Uart_InitUartModule
  6975                           
  6976                           ;mdm_gsm_gprs.c: 764: break;
  6977  005F66  0012               	return	
  6978  005F68                     
  6979                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6980  005F68  EC13  F010         	call	_CheckModem	;wreg free
  6981                           
  6982                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6983  005F6C  042B               	decf	_ComChecCompleted,w,c
  6984  005F6E  A4D8               	btfss	status,2,c
  6985  005F70  D005               	goto	l1111
  6986  005F72  0100               	movlb	0	; () banked
  6987  005F74  51D1               	movf	_MdmStatus& (0+255),w,b
  6988  005F76  B4D8               	btfsc	status,2,c
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;mdm_gsm_gprs.c: 772: {
  6992                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6993  005F78  EC93  F030         	call	_TurnOnModem	;wreg free
  6994  005F7C                     l1111:
  6995                           
  6996                           ;mdm_gsm_gprs.c: 775: }
  6997                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6998  005F7C  ECC3  F01D         	call	_ConfigureModem	;wreg free
  6999                           
  7000                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  7001  005F80  EC9B  F00E         	call	_ModemEvtParser	;wreg free
  7002                           
  7003                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  7004  005F84  ECFD  F015         	call	_GetSmsSm	;wreg free
  7005                           
  7006                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  7007  005F88  ECFC  F00C         	call	_SendSmsSm	;wreg free
  7008                           
  7009                           ;mdm_gsm_gprs.c: 789: }
  7010                           
  7011                           ;mdm_gsm_gprs.c: 788: break;
  7012                           
  7013                           ;mdm_gsm_gprs.c: 787: default:
  7014                           
  7015                           ;mdm_gsm_gprs.c: 784: break;
  7016  005F8C  0012               	return	
  7017  005F8E                     l1107:
  7018  005F8E  0100               	movlb	0	; () banked
  7019  005F90  51D4               	movf	_SystemState& (0+255),w,b
  7020                           
  7021                           ; Switch size 1, requested type "space"
  7022                           ; Number of cases is 2, Range of values is 0 to 1
  7023                           ; switch strategies available:
  7024                           ; Name         Instructions Cycles
  7025                           ; simple_byte            7     4 (average)
  7026                           ;	Chosen strategy is simple_byte
  7027  005F92  0A00               	xorlw	0	; case 0
  7028  005F94  B4D8               	btfsc	status,2,c
  7029  005F96  D7DD               	goto	l1108
  7030  005F98  0A01               	xorlw	1	; case 1
  7031  005F9A  A4D8               	btfss	status,2,c
  7032  005F9C  0012               	return	
  7033  005F9E  D7E4               	goto	l1110
  7034  005FA0                     __end_of_Mdm_MainTask:
  7035                           	opt stack 0
  7036                           tosu	equ	0xFFF
  7037                           tosh	equ	0xFFE
  7038                           tosl	equ	0xFFD
  7039                           pclath	equ	0xFFA
  7040                           tblptru	equ	0xFF8
  7041                           tblptrh	equ	0xFF7
  7042                           tblptrl	equ	0xFF6
  7043                           tablat	equ	0xFF5
  7044                           prodh	equ	0xFF4
  7045                           prodl	equ	0xFF3
  7046                           intcon	equ	0xFF2
  7047                           intcon2	equ	0xFF1
  7048                           intcon3	equ	0xFF0
  7049                           postinc0	equ	0xFEE
  7050                           plusw0	equ	0xFEB
  7051                           wreg	equ	0xFE8
  7052                           postinc1	equ	0xFE6
  7053                           postdec1	equ	0xFE5
  7054                           fsr1h	equ	0xFE2
  7055                           fsr1l	equ	0xFE1
  7056                           indf2	equ	0xFDF
  7057                           postinc2	equ	0xFDE
  7058                           postdec2	equ	0xFDD
  7059                           plusw2	equ	0xFDB
  7060                           fsr2h	equ	0xFDA
  7061                           fsr2l	equ	0xFD9
  7062                           status	equ	0xFD8
  7063                           
  7064 ;; *************** function _I2cSlv_MainTask *****************
  7065 ;; Defined at:
  7066 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  Options         1    wreg     unsigned char 
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;  Options         1    0[COMRAM] unsigned char 
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      void 
  7073 ;; Registers used:
  7074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7084 ;;Total ram usage:        0 bytes
  7085 ;; Hardware stack levels used:    1
  7086 ;; Hardware stack levels required when called:   14
  7087 ;; This function calls:
  7088 ;;		_I2cSendMsgSm
  7089 ;;		_I2cSetConfig
  7090 ;;		_I2c_InitI2cModule
  7091 ;;		_OsAlrm_SetOsAlarm
  7092 ;; This function is called by:
  7093 ;;		_InitializeTasks
  7094 ;;		_ScheduleTasks
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text23
  7099  005CB8                     __ptext23:
  7100                           	opt stack 0
  7101  005CB8                     _I2cSlv_MainTask:
  7102                           	opt stack 14
  7103                           
  7104                           ;i2c_slv.c: 217: switch (SystemState)
  7105                           
  7106                           ;incstack = 0
  7107  005CB8  D020               	goto	l1404
  7108  005CBA                     
  7109                           ;i2c_slv.c: 222: I2cSetConfig();
  7110  005CBA  EC2C  F034         	call	_I2cSetConfig	;wreg free
  7111                           
  7112                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7113  005CBE  0E5E               	movlw	low _I2cConfig
  7114  005CC0  0100               	movlb	0	; () banked
  7115  005CC2  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7116  005CC4  0E03               	movlw	high _I2cConfig
  7117  005CC6  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7118  005CC8  EC1B  F02B         	call	_I2c_InitI2cModule	;wreg free
  7119                           
  7120                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7121  005CCC  0E00               	movlw	0
  7122  005CCE  0100               	movlb	0	; () banked
  7123  005CD0  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7124  005CD2  0E00               	movlw	0
  7125  005CD4  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7126  005CD6  0E32               	movlw	50
  7127  005CD8  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7128  005CDA  0E00               	movlw	0
  7129  005CDC  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7130  005CDE  0E00               	movlw	0
  7131  005CE0  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7132  005CE2  0E00               	movlw	0
  7133  005CE4  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7134  005CE6  0E58               	movlw	low _I2cDummyTx
  7135  005CE8  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7136  005CEA  0E6B               	movlw	high _I2cDummyTx
  7137  005CEC  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7138  005CEE  ECF6  F020         	call	_OsAlrm_SetOsAlarm	;wreg free
  7139                           
  7140                           ;i2c_slv.c: 227: break;
  7141  005CF2  0012               	return	
  7142  005CF4                     
  7143                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7144  005CF4  EC5A  F021         	call	_I2cSendMsgSm	;wreg free
  7145                           
  7146                           ;i2c_slv.c: 238: }
  7147                           
  7148                           ;i2c_slv.c: 237: break;
  7149                           
  7150                           ;i2c_slv.c: 236: default:
  7151                           
  7152                           ;i2c_slv.c: 233: break;
  7153  005CF8  0012               	return	
  7154  005CFA                     l1404:
  7155  005CFA  0100               	movlb	0	; () banked
  7156  005CFC  51D4               	movf	_SystemState& (0+255),w,b
  7157                           
  7158                           ; Switch size 1, requested type "space"
  7159                           ; Number of cases is 2, Range of values is 0 to 1
  7160                           ; switch strategies available:
  7161                           ; Name         Instructions Cycles
  7162                           ; simple_byte            7     4 (average)
  7163                           ;	Chosen strategy is simple_byte
  7164  005CFE  0A00               	xorlw	0	; case 0
  7165  005D00  B4D8               	btfsc	status,2,c
  7166  005D02  D7DB               	goto	l1405
  7167  005D04  0A01               	xorlw	1	; case 1
  7168  005D06  A4D8               	btfss	status,2,c
  7169  005D08  0012               	return	
  7170  005D0A  D7F4               	goto	l1407
  7171  005D0C                     __end_of_I2cSlv_MainTask:
  7172                           	opt stack 0
  7173                           tosu	equ	0xFFF
  7174                           tosh	equ	0xFFE
  7175                           tosl	equ	0xFFD
  7176                           pclath	equ	0xFFA
  7177                           tblptru	equ	0xFF8
  7178                           tblptrh	equ	0xFF7
  7179                           tblptrl	equ	0xFF6
  7180                           tablat	equ	0xFF5
  7181                           prodh	equ	0xFF4
  7182                           prodl	equ	0xFF3
  7183                           intcon	equ	0xFF2
  7184                           intcon2	equ	0xFF1
  7185                           intcon3	equ	0xFF0
  7186                           postinc0	equ	0xFEE
  7187                           plusw0	equ	0xFEB
  7188                           wreg	equ	0xFE8
  7189                           postinc1	equ	0xFE6
  7190                           postdec1	equ	0xFE5
  7191                           fsr1h	equ	0xFE2
  7192                           fsr1l	equ	0xFE1
  7193                           indf2	equ	0xFDF
  7194                           postinc2	equ	0xFDE
  7195                           postdec2	equ	0xFDD
  7196                           plusw2	equ	0xFDB
  7197                           fsr2h	equ	0xFDA
  7198                           fsr2l	equ	0xFD9
  7199                           status	equ	0xFD8
  7200                           
  7201 ;; *************** function _Mdm_DrvMainFn *****************
  7202 ;; Defined at:
  7203 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  Options         1    wreg     unsigned char 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  Options         1    0[COMRAM] unsigned char 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;Total ram usage:        0 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:   13
  7224 ;; This function calls:
  7225 ;;		_MdmCntSm
  7226 ;; This function is called by:
  7227 ;;		_InitializeTasks
  7228 ;;		_ScheduleTasks
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text24
  7233  006DA2                     __ptext24:
  7234                           	opt stack 0
  7235  006DA2                     _Mdm_DrvMainFn:
  7236                           	opt stack 15
  7237                           
  7238                           ;mdm_drv.c: 307: MdmCntSm();
  7239                           
  7240                           ;incstack = 0
  7241  006DA2  EC95  F024         	call	_MdmCntSm	;wreg free
  7242  006DA6  0012               	return		;funcret
  7243  006DA8                     __end_of_Mdm_DrvMainFn:
  7244                           	opt stack 0
  7245                           tosu	equ	0xFFF
  7246                           tosh	equ	0xFFE
  7247                           tosl	equ	0xFFD
  7248                           pclath	equ	0xFFA
  7249                           tblptru	equ	0xFF8
  7250                           tblptrh	equ	0xFF7
  7251                           tblptrl	equ	0xFF6
  7252                           tablat	equ	0xFF5
  7253                           prodh	equ	0xFF4
  7254                           prodl	equ	0xFF3
  7255                           intcon	equ	0xFF2
  7256                           intcon2	equ	0xFF1
  7257                           intcon3	equ	0xFF0
  7258                           postinc0	equ	0xFEE
  7259                           plusw0	equ	0xFEB
  7260                           wreg	equ	0xFE8
  7261                           postinc1	equ	0xFE6
  7262                           postdec1	equ	0xFE5
  7263                           fsr1h	equ	0xFE2
  7264                           fsr1l	equ	0xFE1
  7265                           indf2	equ	0xFDF
  7266                           postinc2	equ	0xFDE
  7267                           postdec2	equ	0xFDD
  7268                           plusw2	equ	0xFDB
  7269                           fsr2h	equ	0xFDA
  7270                           fsr2l	equ	0xFD9
  7271                           status	equ	0xFD8
  7272                           
  7273 ;; *************** function _Wdg_MainTask *****************
  7274 ;; Defined at:
  7275 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;  Options         1    wreg     unsigned char 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;  Options         1    0[COMRAM] unsigned char 
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      void 
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7293 ;;Total ram usage:        0 bytes
  7294 ;; Hardware stack levels used:    1
  7295 ;; Hardware stack levels required when called:   12
  7296 ;; This function calls:
  7297 ;;		_Mcu_ClearWdg
  7298 ;;		_Mcu_SetWdgSts
  7299 ;; This function is called by:
  7300 ;;		_InitializeTasks
  7301 ;;		_ScheduleTasks
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text25
  7306  0069B6                     __ptext25:
  7307                           	opt stack 0
  7308  0069B6                     _Wdg_MainTask:
  7309                           	opt stack 16
  7310                           
  7311                           ;wdg.c: 75: switch (SystemState)
  7312                           
  7313                           ;incstack = 0
  7314  0069B6  D007               	goto	l2512
  7315  0069B8                     
  7316                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7317  0069B8  0E01               	movlw	1
  7318  0069BA  EC48  F036         	call	_Mcu_SetWdgSts
  7319                           
  7320                           ;wdg.c: 81: break;
  7321  0069BE  0012               	return	
  7322  0069C0                     
  7323                           ;wdg.c: 86: Mcu_ClearWdg();
  7324  0069C0  ECD4  F036         	call	_Mcu_ClearWdg	;wreg free
  7325                           
  7326                           ;wdg.c: 92: }
  7327                           
  7328                           ;wdg.c: 91: break;
  7329                           
  7330                           ;wdg.c: 90: default:
  7331                           
  7332                           ;wdg.c: 87: break;
  7333  0069C4  0012               	return	
  7334  0069C6                     l2512:
  7335  0069C6  0100               	movlb	0	; () banked
  7336  0069C8  51D4               	movf	_SystemState& (0+255),w,b
  7337                           
  7338                           ; Switch size 1, requested type "space"
  7339                           ; Number of cases is 2, Range of values is 0 to 1
  7340                           ; switch strategies available:
  7341                           ; Name         Instructions Cycles
  7342                           ; simple_byte            7     4 (average)
  7343                           ;	Chosen strategy is simple_byte
  7344  0069CA  0A00               	xorlw	0	; case 0
  7345  0069CC  B4D8               	btfsc	status,2,c
  7346  0069CE  D7F4               	goto	l2513
  7347  0069D0  0A01               	xorlw	1	; case 1
  7348  0069D2  A4D8               	btfss	status,2,c
  7349  0069D4  0012               	return	
  7350  0069D6  D7F4               	goto	l2515
  7351  0069D8                     __end_of_Wdg_MainTask:
  7352                           	opt stack 0
  7353                           tosu	equ	0xFFF
  7354                           tosh	equ	0xFFE
  7355                           tosl	equ	0xFFD
  7356                           pclath	equ	0xFFA
  7357                           tblptru	equ	0xFF8
  7358                           tblptrh	equ	0xFF7
  7359                           tblptrl	equ	0xFF6
  7360                           tablat	equ	0xFF5
  7361                           prodh	equ	0xFF4
  7362                           prodl	equ	0xFF3
  7363                           intcon	equ	0xFF2
  7364                           intcon2	equ	0xFF1
  7365                           intcon3	equ	0xFF0
  7366                           postinc0	equ	0xFEE
  7367                           plusw0	equ	0xFEB
  7368                           wreg	equ	0xFE8
  7369                           postinc1	equ	0xFE6
  7370                           postdec1	equ	0xFE5
  7371                           fsr1h	equ	0xFE2
  7372                           fsr1l	equ	0xFE1
  7373                           indf2	equ	0xFDF
  7374                           postinc2	equ	0xFDE
  7375                           postdec2	equ	0xFDD
  7376                           plusw2	equ	0xFDB
  7377                           fsr2h	equ	0xFDA
  7378                           fsr2l	equ	0xFD9
  7379                           status	equ	0xFD8
  7380                           
  7381 ;; *************** function _Mcu_SetWdgSts *****************
  7382 ;; Defined at:
  7383 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  WdgSts          1    wreg     unsigned char 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  1    wreg      void 
  7390 ;; Registers used:
  7391 ;;		wreg
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7398 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7400 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7401 ;;Total ram usage:        1 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; Hardware stack levels required when called:   11
  7404 ;; This function calls:
  7405 ;;		Nothing
  7406 ;; This function is called by:
  7407 ;;		_Wdg_MainTask
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411                           	psect	text26
  7412  006C90                     __ptext26:
  7413                           	opt stack 0
  7414  006C90                     _Mcu_SetWdgSts:
  7415                           	opt stack 16
  7416                           
  7417                           ;incstack = 0
  7418                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7419  006C90  0100               	movlb	0	; () banked
  7420  006C92  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7421                           
  7422                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7423  006C94  0100               	movlb	0	; () banked
  7424  006C96  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7425  006C98  D002               	bra	u14945
  7426  006C9A  90C0               	bcf	4032,0,c	;volatile
  7427  006C9C  D001               	bra	u14946
  7428  006C9E                     u14945:
  7429  006C9E  80C0               	bsf	4032,0,c	;volatile
  7430  006CA0                     u14946:
  7431  006CA0  0012               	return		;funcret
  7432  006CA2                     __end_of_Mcu_SetWdgSts:
  7433                           	opt stack 0
  7434                           tosu	equ	0xFFF
  7435                           tosh	equ	0xFFE
  7436                           tosl	equ	0xFFD
  7437                           pclath	equ	0xFFA
  7438                           tblptru	equ	0xFF8
  7439                           tblptrh	equ	0xFF7
  7440                           tblptrl	equ	0xFF6
  7441                           tablat	equ	0xFF5
  7442                           prodh	equ	0xFF4
  7443                           prodl	equ	0xFF3
  7444                           intcon	equ	0xFF2
  7445                           intcon2	equ	0xFF1
  7446                           intcon3	equ	0xFF0
  7447                           postinc0	equ	0xFEE
  7448                           plusw0	equ	0xFEB
  7449                           wreg	equ	0xFE8
  7450                           postinc1	equ	0xFE6
  7451                           postdec1	equ	0xFE5
  7452                           fsr1h	equ	0xFE2
  7453                           fsr1l	equ	0xFE1
  7454                           indf2	equ	0xFDF
  7455                           postinc2	equ	0xFDE
  7456                           postdec2	equ	0xFDD
  7457                           plusw2	equ	0xFDB
  7458                           fsr2h	equ	0xFDA
  7459                           fsr2l	equ	0xFD9
  7460                           status	equ	0xFD8
  7461                           
  7462 ;; *************** function _Mcu_ClearWdg *****************
  7463 ;; Defined at:
  7464 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;		None
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;		None
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		None
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7482 ;;Total ram usage:        0 bytes
  7483 ;; Hardware stack levels used:    1
  7484 ;; Hardware stack levels required when called:   11
  7485 ;; This function calls:
  7486 ;;		Nothing
  7487 ;; This function is called by:
  7488 ;;		_Wdg_MainTask
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           	psect	text27
  7493  006DA8                     __ptext27:
  7494                           	opt stack 0
  7495  006DA8                     _Mcu_ClearWdg:
  7496                           	opt stack 16
  7497                           
  7498                           ;incstack = 0
  7499  006DA8  0004               	clrwdt		;# 
  7500  006DAA  0012               	return		;funcret
  7501  006DAC                     __end_of_Mcu_ClearWdg:
  7502                           	opt stack 0
  7503                           tosu	equ	0xFFF
  7504                           tosh	equ	0xFFE
  7505                           tosl	equ	0xFFD
  7506                           pclath	equ	0xFFA
  7507                           tblptru	equ	0xFF8
  7508                           tblptrh	equ	0xFF7
  7509                           tblptrl	equ	0xFF6
  7510                           tablat	equ	0xFF5
  7511                           prodh	equ	0xFF4
  7512                           prodl	equ	0xFF3
  7513                           intcon	equ	0xFF2
  7514                           intcon2	equ	0xFF1
  7515                           intcon3	equ	0xFF0
  7516                           postinc0	equ	0xFEE
  7517                           plusw0	equ	0xFEB
  7518                           wreg	equ	0xFE8
  7519                           postinc1	equ	0xFE6
  7520                           postdec1	equ	0xFE5
  7521                           fsr1h	equ	0xFE2
  7522                           fsr1l	equ	0xFE1
  7523                           indf2	equ	0xFDF
  7524                           postinc2	equ	0xFDE
  7525                           postdec2	equ	0xFDD
  7526                           plusw2	equ	0xFDB
  7527                           fsr2h	equ	0xFDA
  7528                           fsr2l	equ	0xFD9
  7529                           status	equ	0xFD8
  7530                           
  7531 ;; *************** function _USBDeviceTasks *****************
  7532 ;; Defined at:
  7533 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;		None
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  i               1   56[BANK0 ] unsigned char 
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  1    wreg      void 
  7540 ;; Registers used:
  7541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7550 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7551 ;;Total ram usage:        1 bytes
  7552 ;; Hardware stack levels used:    1
  7553 ;; Hardware stack levels required when called:   19
  7554 ;; This function calls:
  7555 ;;		_USBCtrlEPAllowStatusStage
  7556 ;;		_USBCtrlEPService
  7557 ;;		_USBDeviceInit
  7558 ;;		_USBIncrement1msInternalTimers
  7559 ;;		_USBStallHandler
  7560 ;;		_USBSuspend
  7561 ;;		_USBWakeFromSuspend
  7562 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7563 ;; This function is called by:
  7564 ;;		_UsbDevice_MainTask
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text28
  7569  001BB0                     __ptext28:
  7570                           	opt stack 0
  7571  001BB0                     _USBDeviceTasks:
  7572                           	opt stack 8
  7573                           
  7574                           ;usb_device.c: 562: }
  7575                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7576                           
  7577                           ; BSR set to: 0
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;usb_device.c: 561: return;
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7584                           
  7585                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7586                           
  7587                           ;usb_device.c: 529: UIE = 0;
  7588                           
  7589                           ;usb_device.c: 524: {
  7590                           ;usb_device.c: 526: UCON = 0;
  7591                           
  7592                           ;usb_device.c: 497: uint8_t i;
  7593                           ;usb_device.c: 523: if (1 != 1)
  7594                           
  7595                           ;incstack = 0
  7596  001BB0  0100               	movlb	0	; () banked
  7597  001BB2  51CE               	movf	_USBDeviceState& (0+255),w,b
  7598  001BB4  A4D8               	btfss	status,2,c
  7599  001BB6  D012               	goto	l1615
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;usb_device.c: 585: {
  7603                           ;usb_device.c: 587: UCON = 0;
  7604  001BB8  0E00               	movlw	0
  7605  001BBA  6E65               	movwf	3941,c	;volatile
  7606                           
  7607                           ;usb_device.c: 590: UIE = 0;
  7608  001BBC  0E00               	movlw	0
  7609  001BBE  010F               	movlb	15	; () banked
  7610  001BC0  6F36               	movwf	54,b	;volatile
  7611                           
  7612                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7613  001BC2  0E16               	movlw	22
  7614  001BC4  6F39               	movwf	57,b	;volatile
  7615  001BC6  0E9F               	movlw	159
  7616  001BC8  6F37               	movwf	55,b	;volatile
  7617  001BCA  0E7B               	movlw	123
  7618  001BCC  6F36               	movwf	54,b	;volatile
  7619                           
  7620                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7621  001BCE  D001               	goto	l1616
  7622  001BD0                     l1617:
  7623  001BD0  8665               	bsf	3941,3,c	;volatile
  7624  001BD2                     l1616:
  7625  001BD2  A665               	btfss	3941,3,c	;volatile
  7626  001BD4  D7FD               	goto	l1617
  7627                           
  7628                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7629  001BD6  0E01               	movlw	1
  7630  001BD8  0100               	movlb	0	; () banked
  7631  001BDA  6FCE               	movwf	_USBDeviceState& (0+255),b
  7632  001BDC                     l1615:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;usb_device.c: 605: }
  7636                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7637                           
  7638                           ; BSR set to: 0
  7639  001BDC  05CE               	decf	_USBDeviceState& (0+255),w,b
  7640  001BDE  B4D8               	btfsc	status,2,c
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;usb_device.c: 609: {
  7644                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7645  001BE0  BA65               	btfsc	3941,5,c	;volatile
  7646  001BE2  D00A               	goto	l1620
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;usb_device.c: 620: {
  7650                           ;usb_device.c: 626: {UIR = 0;};
  7651  001BE4  0E00               	movlw	0
  7652  001BE6  6E62               	movwf	3938,c	;volatile
  7653                           
  7654                           ;usb_device.c: 630: UIE=0;
  7655  001BE8  0E00               	movlw	0
  7656  001BEA  010F               	movlb	15	; () banked
  7657  001BEC  6F36               	movwf	54,b	;volatile
  7658                           
  7659                           ; BSR set to: 15
  7660                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7661  001BEE  8136               	bsf	54,0,b	;volatile
  7662                           
  7663                           ; BSR set to: 15
  7664                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7665  001BF0  8936               	bsf	54,4,b	;volatile
  7666                           
  7667                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7668  001BF2  0E02               	movlw	2
  7669  001BF4  0100               	movlb	0	; () banked
  7670  001BF6  6FCE               	movwf	_USBDeviceState& (0+255),b
  7671  001BF8                     l1620:
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;usb_device.c: 635: }
  7675                           ;usb_device.c: 636: }
  7676                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7677                           
  7678                           ; BSR set to: 0
  7679                           
  7680                           ; BSR set to: 0
  7681  001BF8  A462               	btfss	3938,2,c	;volatile
  7682  001BFA  D006               	goto	l1621
  7683                           
  7684                           ; BSR set to: 0
  7685  001BFC  010F               	movlb	15	; () banked
  7686  001BFE  A536               	btfss	54,2,b	;volatile
  7687  001C00  D003               	goto	l1621
  7688                           
  7689                           ; BSR set to: 15
  7690                           ;usb_device.c: 653: {
  7691                           ;usb_device.c: 654: (UIR &= 0xFB);
  7692  001C02  9462               	bcf	3938,2,c	;volatile
  7693                           
  7694                           ; BSR set to: 15
  7695                           ;usb_device.c: 658: USBWakeFromSuspend();
  7696  001C04  ECC7  F032         	call	_USBWakeFromSuspend	;wreg free
  7697  001C08                     l1621:
  7698                           
  7699                           ;usb_device.c: 660: }
  7700                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7701  001C08  A265               	btfss	3941,1,c	;volatile
  7702  001C0A  D002               	goto	l1622
  7703                           
  7704                           ;usb_device.c: 666: {
  7705                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7706  001C0C  98A1               	bcf	4001,4,c	;volatile
  7707                           
  7708                           ;usb_device.c: 668: return;
  7709  001C0E  0012               	return	
  7710  001C10                     l1622:
  7711                           
  7712                           ;usb_device.c: 669: }
  7713                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7714  001C10  A062               	btfss	3938,0,c	;volatile
  7715  001C12  D009               	goto	l1623
  7716  001C14  010F               	movlb	15	; () banked
  7717  001C16  A136               	btfss	54,0,b	;volatile
  7718  001C18  D006               	goto	l1623
  7719                           
  7720                           ; BSR set to: 15
  7721                           ;usb_device.c: 682: {
  7722                           ;usb_device.c: 683: USBDeviceInit();
  7723  001C1A  ECCB  F012         	call	_USBDeviceInit	;wreg free
  7724                           
  7725                           ;usb_device.c: 687: ;
  7726                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7727  001C1E  0E04               	movlw	4
  7728  001C20  0100               	movlb	0	; () banked
  7729  001C22  6FCE               	movwf	_USBDeviceState& (0+255),b
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;usb_device.c: 699: (UIR &= 0xFE);
  7733  001C24  9062               	bcf	3938,0,c	;volatile
  7734  001C26                     l1623:
  7735                           
  7736                           ;usb_device.c: 700: }
  7737                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7738                           
  7739                           ; BSR set to: 0
  7740  001C26  A862               	btfss	3938,4,c	;volatile
  7741  001C28  D004               	goto	l1624
  7742  001C2A  010F               	movlb	15	; () banked
  7743  001C2C  B936               	btfsc	54,4,b	;volatile
  7744                           
  7745                           ; BSR set to: 15
  7746                           ;usb_device.c: 706: {
  7747                           ;usb_device.c: 712: USBSuspend();
  7748  001C2E  EC6C  F033         	call	_USBSuspend	;wreg free
  7749  001C32                     l1624:
  7750                           
  7751                           ;usb_device.c: 714: }
  7752                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7753  001C32  AC62               	btfss	3938,6,c	;volatile
  7754  001C34  D01C               	goto	l1628
  7755                           
  7756                           ;usb_device.c: 727: {
  7757                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7758  001C36  010F               	movlb	15	; () banked
  7759  001C38  AD36               	btfss	54,6,b	;volatile
  7760  001C3A  D00F               	goto	l1626
  7761                           
  7762                           ; BSR set to: 15
  7763                           ;usb_device.c: 730: {
  7764                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7765  001C3C  0E00               	movlw	0
  7766  001C3E  0100               	movlb	0	; () banked
  7767  001C40  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7768  001C42  0E73               	movlw	115
  7769  001C44  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7770  001C46  0E00               	movlw	0
  7771  001C48  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7772  001C4A  0E00               	movlw	0
  7773  001C4C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7774  001C4E  0E00               	movlw	0
  7775  001C50  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7776  001C52  0E01               	movlw	1
  7777  001C54  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7778  001C56  ECF5  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7779  001C5A                     l1626:
  7780                           
  7781                           ;usb_device.c: 732: }
  7782                           ;usb_device.c: 733: (UIR &= 0xBF);
  7783  001C5A  9C62               	bcf	3938,6,c	;volatile
  7784                           
  7785                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7786  001C5C  ECEC  F034         	call	_USBIncrement1msInternalTimers	;wreg free
  7787                           
  7788                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7789  001C60  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7790  001C62  A4D8               	btfss	status,2,c
  7791                           
  7792                           ;usb_device.c: 754: {
  7793                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7794  001C64  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7795                           
  7796                           ;usb_device.c: 756: }
  7797                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7798  001C66  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7799  001C68  B4D8               	btfsc	status,2,c
  7800                           
  7801                           ;usb_device.c: 763: {
  7802                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7803  001C6A  EC63  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7804  001C6E                     l1628:
  7805                           
  7806                           ;usb_device.c: 765: }
  7807                           ;usb_device.c: 767: }
  7808                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7809  001C6E  AA62               	btfss	3938,5,c	;volatile
  7810  001C70  D004               	goto	l1629
  7811  001C72  010F               	movlb	15	; () banked
  7812  001C74  BB36               	btfsc	54,5,b	;volatile
  7813                           
  7814                           ; BSR set to: 15
  7815                           ;usb_device.c: 770: {
  7816                           ;usb_device.c: 771: USBStallHandler();
  7817  001C76  EC24  F031         	call	_USBStallHandler	;wreg free
  7818  001C7A                     l1629:
  7819                           
  7820                           ;usb_device.c: 772: }
  7821                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7822  001C7A  A262               	btfss	3938,1,c	;volatile
  7823  001C7C  D013               	goto	l1630
  7824  001C7E  010F               	movlb	15	; () banked
  7825  001C80  A336               	btfss	54,1,b	;volatile
  7826  001C82  D010               	goto	l1630
  7827                           
  7828                           ; BSR set to: 15
  7829                           ;usb_device.c: 775: {
  7830                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7831  001C84  0E7F               	movlw	127
  7832  001C86  0100               	movlb	0	; () banked
  7833  001C88  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7834  001C8A  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7835  001C8C  0E00               	movlw	0
  7836  001C8E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7837  001C90  0E00               	movlw	0
  7838  001C92  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7839  001C94  0E00               	movlw	0
  7840  001C96  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7841  001C98  0E01               	movlw	1
  7842  001C9A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7843  001C9C  ECF5  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7844                           
  7845                           ;usb_device.c: 777: {UEIR = 0;};
  7846  001CA0  0E00               	movlw	0
  7847  001CA2  6E63               	movwf	3939,c	;volatile
  7848  001CA4                     l1630:
  7849                           
  7850                           ;usb_device.c: 785: }
  7851                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7852  001CA4  0E04               	movlw	4
  7853  001CA6  0100               	movlb	0	; () banked
  7854  001CA8  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7855  001CAA  D002               	goto	l1631
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;usb_device.c: 793: {
  7859                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7860  001CAC  98A1               	bcf	4001,4,c	;volatile
  7861                           
  7862                           ;usb_device.c: 795: return;
  7863  001CAE  0012               	return	
  7864  001CB0                     l1631:
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;usb_device.c: 796: }
  7868                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7869  001CB0  010F               	movlb	15	; () banked
  7870  001CB2  A736               	btfss	54,3,b	;volatile
  7871  001CB4  D03E               	goto	u15900
  7872                           
  7873                           ; BSR set to: 15
  7874                           ;usb_device.c: 802: {
  7875                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7876  001CB6  0E00               	movlw	0
  7877  001CB8  0100               	movlb	0	; () banked
  7878  001CBA  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7879  001CBC                     l16287:
  7880                           
  7881                           ; BSR set to: 0
  7882  001CBC  0E03               	movlw	3
  7883  001CBE  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7884  001CC0  D001               	goto	l1633
  7885  001CC2  D037               	goto	u15900
  7886  001CC4                     l1633:
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;usb_device.c: 804: {
  7890                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7891  001CC4  A662               	btfss	3938,3,c	;volatile
  7892  001CC6  D035               	goto	u15900
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;usb_device.c: 806: {
  7896                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7897  001CC8  CF64 F0D5          	movff	3940,_USTATcopy	;volatile
  7898                           
  7899                           ; BSR set to: 0
  7900                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7901  001CCC  31D5               	rrcf	_USTATcopy& (0+255),w,b
  7902  001CCE  32E8               	rrcf	wreg,f,c
  7903  001CD0  32E8               	rrcf	wreg,f,c
  7904  001CD2  0B0F               	andlw	15
  7905  001CD4  6FCB               	movwf	_endpoint_number& (0+255),b
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;usb_device.c: 811: (UIR &= 0xF7);
  7909  001CD6  9662               	bcf	3938,3,c	;volatile
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7913  001CD8  B5D5               	btfsc	_USTATcopy& (0+255),2,b
  7914  001CDA  D007               	goto	l1636
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;usb_device.c: 817: {
  7918                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7919  001CDC  51CB               	movf	_endpoint_number& (0+255),w,b
  7920  001CDE  0D01               	mullw	1
  7921  001CE0  0ECF               	movlw	low _ep_data_out
  7922  001CE2  24F3               	addwf	prodl,w,c
  7923  001CE4  6ED9               	movwf	fsr2l,c
  7924  001CE6  0E02               	movlw	high _ep_data_out
  7925  001CE8  D007               	goto	L3
  7926  001CEA                     l1636:
  7927                           
  7928                           ;usb_device.c: 820: else
  7929                           ;usb_device.c: 821: {
  7930                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7931                           
  7932                           ; BSR set to: 2
  7933  001CEA  0100               	movlb	0	; () banked
  7934  001CEC  51CB               	movf	_endpoint_number& (0+255),w,b
  7935  001CEE  0D01               	mullw	1
  7936  001CF0  0ED2               	movlw	low _ep_data_in
  7937  001CF2  24F3               	addwf	prodl,w,c
  7938  001CF4  6ED9               	movwf	fsr2l,c
  7939  001CF6  0E02               	movlw	high _ep_data_in
  7940  001CF8                     L3:
  7941  001CF8  20F4               	addwfc	prodh,w,c
  7942  001CFA  6EDA               	movwf	fsr2h,c
  7943  001CFC  0102               	movlb	2	; () banked
  7944  001CFE  70DF               	btg	indf2,0,c
  7945                           
  7946                           ; BSR set to: 2
  7947                           ;usb_device.c: 823: }
  7948                           ;usb_device.c: 828: if(endpoint_number == 0)
  7949                           
  7950                           ; BSR set to: 2
  7951  001D00  0100               	movlb	0	; () banked
  7952  001D02  51CB               	movf	_endpoint_number& (0+255),w,b
  7953  001D04  A4D8               	btfss	status,2,c
  7954  001D06  D003               	goto	l1638
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;usb_device.c: 829: {
  7958                           ;usb_device.c: 830: USBCtrlEPService();
  7959  001D08  ECA8  F027         	call	_USBCtrlEPService	;wreg free
  7960                           
  7961                           ;usb_device.c: 831: }
  7962  001D0C  D00F               	goto	l1640
  7963  001D0E                     l1638:
  7964                           
  7965                           ;usb_device.c: 832: else
  7966                           ;usb_device.c: 833: {
  7967                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7968  001D0E  0E00               	movlw	0
  7969  001D10  0100               	movlb	0	; () banked
  7970  001D12  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7971  001D14  0E72               	movlw	114
  7972  001D16  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7973  001D18  0ED5               	movlw	low _USTATcopy
  7974  001D1A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7975  001D1C  0E00               	movlw	high _USTATcopy
  7976  001D1E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7977  001D20  0E00               	movlw	0
  7978  001D22  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7979  001D24  0E00               	movlw	0
  7980  001D26  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7981  001D28  ECF5  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7982  001D2C                     l1640:
  7983  001D2C  0100               	movlb	0	; () banked
  7984  001D2E  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7985  001D30  D7C5               	goto	l16287
  7986  001D32                     u15900:
  7987                           
  7988                           ;usb_device.c: 840: }
  7989                           ;usb_device.c: 841: }
  7990                           ;usb_device.c: 842: }
  7991                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7992                           
  7993                           ; BSR set to: 0
  7994  001D32  98A1               	bcf	4001,4,c	;volatile
  7995  001D34  0012               	return		;funcret
  7996  001D36                     __end_of_USBDeviceTasks:
  7997                           	opt stack 0
  7998                           tosu	equ	0xFFF
  7999                           tosh	equ	0xFFE
  8000                           tosl	equ	0xFFD
  8001                           pclath	equ	0xFFA
  8002                           tblptru	equ	0xFF8
  8003                           tblptrh	equ	0xFF7
  8004                           tblptrl	equ	0xFF6
  8005                           tablat	equ	0xFF5
  8006                           prodh	equ	0xFF4
  8007                           prodl	equ	0xFF3
  8008                           intcon	equ	0xFF2
  8009                           intcon2	equ	0xFF1
  8010                           intcon3	equ	0xFF0
  8011                           postinc0	equ	0xFEE
  8012                           plusw0	equ	0xFEB
  8013                           wreg	equ	0xFE8
  8014                           postinc1	equ	0xFE6
  8015                           postdec1	equ	0xFE5
  8016                           fsr1h	equ	0xFE2
  8017                           fsr1l	equ	0xFE1
  8018                           indf2	equ	0xFDF
  8019                           postinc2	equ	0xFDE
  8020                           postdec2	equ	0xFDD
  8021                           plusw2	equ	0xFDB
  8022                           fsr2h	equ	0xFDA
  8023                           fsr2l	equ	0xFD9
  8024                           status	equ	0xFD8
  8025                           
  8026 ;; *************** function _USBWakeFromSuspend *****************
  8027 ;; Defined at:
  8028 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;		None
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;		None
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  1    wreg      void 
  8035 ;; Registers used:
  8036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8046 ;;Total ram usage:        0 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:   15
  8049 ;; This function calls:
  8050 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8051 ;; This function is called by:
  8052 ;;		_USBDeviceTasks
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           	psect	text29
  8057  00658E                     __ptext29:
  8058                           	opt stack 0
  8059  00658E                     _USBWakeFromSuspend:
  8060                           	opt stack 11
  8061                           
  8062                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  8063                           
  8064                           ;incstack = 0
  8065  00658E  0E00               	movlw	0
  8066  006590  0101               	movlb	1	; () banked
  8067  006592  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8068                           
  8069                           ; BSR set to: 1
  8070                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8071  006594  0E00               	movlw	0
  8072  006596  0100               	movlb	0	; () banked
  8073  006598  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8074  00659A  0E74               	movlw	116
  8075  00659C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8076  00659E  0E00               	movlw	0
  8077  0065A0  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8078  0065A2  0E00               	movlw	0
  8079  0065A4  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8080  0065A6  0E00               	movlw	0
  8081  0065A8  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8082  0065AA  0E00               	movlw	0
  8083  0065AC  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8084  0065AE  ECF5  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8085                           
  8086                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  8087  0065B2  9265               	bcf	3941,1,c	;volatile
  8088                           
  8089                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  8090  0065B4  010F               	movlb	15	; () banked
  8091  0065B6  9536               	bcf	54,2,b	;volatile
  8092                           
  8093                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  8094  0065B8  D001               	goto	l1768
  8095  0065BA                     
  8096                           ;usb_device.c: 2361: {
  8097                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8098                           
  8099                           ; BSR set to: 15
  8100  0065BA  9462               	bcf	3938,2,c	;volatile
  8101  0065BC                     l1768:
  8102  0065BC  B462               	btfsc	3938,2,c	;volatile
  8103  0065BE  D7FD               	goto	l1769
  8104                           
  8105                           ;usb_device.c: 2363: }
  8106                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8107  0065C0  0E00               	movlw	0
  8108  0065C2  0101               	movlb	1	; () banked
  8109  0065C4  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8110                           
  8111                           ; BSR set to: 1
  8112  0065C6  0012               	return		;funcret
  8113  0065C8                     __end_of_USBWakeFromSuspend:
  8114                           	opt stack 0
  8115                           tosu	equ	0xFFF
  8116                           tosh	equ	0xFFE
  8117                           tosl	equ	0xFFD
  8118                           pclath	equ	0xFFA
  8119                           tblptru	equ	0xFF8
  8120                           tblptrh	equ	0xFF7
  8121                           tblptrl	equ	0xFF6
  8122                           tablat	equ	0xFF5
  8123                           prodh	equ	0xFF4
  8124                           prodl	equ	0xFF3
  8125                           intcon	equ	0xFF2
  8126                           intcon2	equ	0xFF1
  8127                           intcon3	equ	0xFF0
  8128                           postinc0	equ	0xFEE
  8129                           plusw0	equ	0xFEB
  8130                           wreg	equ	0xFE8
  8131                           postinc1	equ	0xFE6
  8132                           postdec1	equ	0xFE5
  8133                           fsr1h	equ	0xFE2
  8134                           fsr1l	equ	0xFE1
  8135                           indf2	equ	0xFDF
  8136                           postinc2	equ	0xFDE
  8137                           postdec2	equ	0xFDD
  8138                           plusw2	equ	0xFDB
  8139                           fsr2h	equ	0xFDA
  8140                           fsr2l	equ	0xFD9
  8141                           status	equ	0xFD8
  8142                           
  8143 ;; *************** function _USBSuspend *****************
  8144 ;; Defined at:
  8145 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;		None
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;		None
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  1    wreg      void 
  8152 ;; Registers used:
  8153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8163 ;;Total ram usage:        0 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; Hardware stack levels required when called:   15
  8166 ;; This function calls:
  8167 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8168 ;; This function is called by:
  8169 ;;		_USBDeviceTasks
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text30
  8174  0066D8                     __ptext30:
  8175                           	opt stack 0
  8176  0066D8                     _USBSuspend:
  8177                           	opt stack 11
  8178                           
  8179                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8180                           
  8181                           ; BSR set to: 1
  8182                           ;incstack = 0
  8183  0066D8  010F               	movlb	15	; () banked
  8184  0066DA  8536               	bsf	54,2,b	;volatile
  8185                           
  8186                           ; BSR set to: 15
  8187                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8188  0066DC  9862               	bcf	3938,4,c	;volatile
  8189                           
  8190                           ; BSR set to: 15
  8191                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8192  0066DE  8265               	bsf	3941,1,c	;volatile
  8193                           
  8194                           ; BSR set to: 15
  8195                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8196  0066E0  0E01               	movlw	1
  8197  0066E2  0101               	movlb	1	; () banked
  8198  0066E4  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8199                           
  8200                           ; BSR set to: 1
  8201                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8202  0066E6  0E00               	movlw	0
  8203  0066E8  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8204                           
  8205                           ; BSR set to: 1
  8206                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8207  0066EA  0E00               	movlw	0
  8208  0066EC  0100               	movlb	0	; () banked
  8209  0066EE  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8210  0066F0  0E75               	movlw	117
  8211  0066F2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8212  0066F4  0E00               	movlw	0
  8213  0066F6  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8214  0066F8  0E00               	movlw	0
  8215  0066FA  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8216  0066FC  0E00               	movlw	0
  8217  0066FE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8218  006700  0E00               	movlw	0
  8219  006702  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8220  006704  ECF5  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8221  006708  0012               	return		;funcret
  8222  00670A                     __end_of_USBSuspend:
  8223                           	opt stack 0
  8224                           tosu	equ	0xFFF
  8225                           tosh	equ	0xFFE
  8226                           tosl	equ	0xFFD
  8227                           pclath	equ	0xFFA
  8228                           tblptru	equ	0xFF8
  8229                           tblptrh	equ	0xFF7
  8230                           tblptrl	equ	0xFF6
  8231                           tablat	equ	0xFF5
  8232                           prodh	equ	0xFF4
  8233                           prodl	equ	0xFF3
  8234                           intcon	equ	0xFF2
  8235                           intcon2	equ	0xFF1
  8236                           intcon3	equ	0xFF0
  8237                           postinc0	equ	0xFEE
  8238                           plusw0	equ	0xFEB
  8239                           wreg	equ	0xFE8
  8240                           postinc1	equ	0xFE6
  8241                           postdec1	equ	0xFE5
  8242                           fsr1h	equ	0xFE2
  8243                           fsr1l	equ	0xFE1
  8244                           indf2	equ	0xFDF
  8245                           postinc2	equ	0xFDE
  8246                           postdec2	equ	0xFDD
  8247                           plusw2	equ	0xFDB
  8248                           fsr2h	equ	0xFDA
  8249                           fsr2l	equ	0xFD9
  8250                           status	equ	0xFD8
  8251                           
  8252 ;; *************** function _USBStallHandler *****************
  8253 ;; Defined at:
  8254 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;		None
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;		None
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  1    wreg      void 
  8261 ;; Registers used:
  8262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8270 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8271 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8272 ;;Total ram usage:        1 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:   11
  8275 ;; This function calls:
  8276 ;;		Nothing
  8277 ;; This function is called by:
  8278 ;;		_USBDeviceTasks
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text31
  8283  006248                     __ptext31:
  8284                           	opt stack 0
  8285  006248                     _USBStallHandler:
  8286                           	opt stack 15
  8287                           
  8288                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8289                           
  8290                           ;incstack = 0
  8291  006248  010F               	movlb	15	; () banked
  8292  00624A  A126               	btfss	38,0,b	;volatile
  8293  00624C  D01D               	goto	l1760
  8294                           
  8295                           ; BSR set to: 15
  8296                           ;usb_device.c: 2233: {
  8297                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8298  00624E  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8299  006252  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8300  006256  0E80               	movlw	128
  8301  006258  18DE               	xorwf	postinc2,w,c
  8302  00625A  A4D8               	btfss	status,2,c
  8303  00625C  D014               	goto	l1761
  8304                           
  8305                           ; BSR set to: 15
  8306  00625E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8307  006262  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8308  006266  0E84               	movlw	132
  8309  006268  18DE               	xorwf	postinc2,w,c
  8310  00626A  A4D8               	btfss	status,2,c
  8311  00626C  D00C               	goto	l1761
  8312                           
  8313                           ; BSR set to: 15
  8314                           ;usb_device.c: 2236: {
  8315                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8316  00626E  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8317  006272  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8318  006276  0E0C               	movlw	12
  8319  006278  6EDF               	movwf	indf2,c
  8320                           
  8321                           ; BSR set to: 15
  8322                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8323  00627A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8324  00627E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8325  006282  0E00               	movlw	0
  8326  006284  8EDB               	bsf	plusw2,7,c
  8327  006286                     l1761:
  8328                           
  8329                           ; BSR set to: 15
  8330                           ;usb_device.c: 2240: }
  8331                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8332                           
  8333                           ; BSR set to: 15
  8334  006286  9126               	bcf	38,0,b	;volatile
  8335  006288                     l1760:
  8336                           
  8337                           ; BSR set to: 15
  8338                           ;usb_device.c: 2242: }
  8339                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8340  006288  9A62               	bcf	3938,5,c	;volatile
  8341                           
  8342                           ; BSR set to: 15
  8343  00628A  0012               	return		;funcret
  8344  00628C                     __end_of_USBStallHandler:
  8345                           	opt stack 0
  8346                           tosu	equ	0xFFF
  8347                           tosh	equ	0xFFE
  8348                           tosl	equ	0xFFD
  8349                           pclath	equ	0xFFA
  8350                           tblptru	equ	0xFF8
  8351                           tblptrh	equ	0xFF7
  8352                           tblptrl	equ	0xFF6
  8353                           tablat	equ	0xFF5
  8354                           prodh	equ	0xFF4
  8355                           prodl	equ	0xFF3
  8356                           intcon	equ	0xFF2
  8357                           intcon2	equ	0xFF1
  8358                           intcon3	equ	0xFF0
  8359                           postinc0	equ	0xFEE
  8360                           plusw0	equ	0xFEB
  8361                           wreg	equ	0xFE8
  8362                           postinc1	equ	0xFE6
  8363                           postdec1	equ	0xFE5
  8364                           fsr1h	equ	0xFE2
  8365                           fsr1l	equ	0xFE1
  8366                           indf2	equ	0xFDF
  8367                           postinc2	equ	0xFDE
  8368                           postdec2	equ	0xFDD
  8369                           plusw2	equ	0xFDB
  8370                           fsr2h	equ	0xFDA
  8371                           fsr2l	equ	0xFD9
  8372                           status	equ	0xFD8
  8373                           
  8374 ;; *************** function _USBIncrement1msInternalTimers *****************
  8375 ;; Defined at:
  8376 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;		None
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;		None
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  1    wreg      void 
  8383 ;; Registers used:
  8384 ;;		wreg, status,2, status,0
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8394 ;;Total ram usage:        0 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:   11
  8397 ;; This function calls:
  8398 ;;		Nothing
  8399 ;; This function is called by:
  8400 ;;		_USBDeviceTasks
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text32
  8405  0069D8                     __ptext32:
  8406                           	opt stack 0
  8407  0069D8                     _USBIncrement1msInternalTimers:
  8408                           	opt stack 15
  8409                           
  8410                           ;usb_device.c: 3050: USB1msTickCount++;
  8411                           
  8412                           ; BSR set to: 15
  8413                           ;incstack = 0
  8414  0069D8  0E01               	movlw	1
  8415  0069DA  0103               	movlb	3	; () banked
  8416  0069DC  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8417  0069DE  0E00               	movlw	0
  8418  0069E0  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8419  0069E2  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8420  0069E4  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8421                           
  8422                           ; BSR set to: 3
  8423                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8424  0069E6  0101               	movlb	1	; () banked
  8425  0069E8  51DF               	movf	_USBBusIsSuspended& (0+255),w,b
  8426  0069EA  A4D8               	btfss	status,2,c
  8427  0069EC  0012               	return	
  8428                           
  8429                           ; BSR set to: 1
  8430                           ;usb_device.c: 3052: {
  8431                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8432  0069EE  2BDD               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8433                           
  8434                           ; BSR set to: 1
  8435                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8436  0069F0  51DD               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8437  0069F2  A4D8               	btfss	status,2,c
  8438  0069F4  0012               	return	
  8439                           
  8440                           ; BSR set to: 1
  8441                           ;usb_device.c: 3056: {
  8442                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8443  0069F6  69DD               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8444                           
  8445                           ; BSR set to: 1
  8446  0069F8  0012               	return	
  8447  0069FA                     __end_of_USBIncrement1msInternalTimers:
  8448                           	opt stack 0
  8449                           tosu	equ	0xFFF
  8450                           tosh	equ	0xFFE
  8451                           tosl	equ	0xFFD
  8452                           pclath	equ	0xFFA
  8453                           tblptru	equ	0xFF8
  8454                           tblptrh	equ	0xFF7
  8455                           tblptrl	equ	0xFF6
  8456                           tablat	equ	0xFF5
  8457                           prodh	equ	0xFF4
  8458                           prodl	equ	0xFF3
  8459                           intcon	equ	0xFF2
  8460                           intcon2	equ	0xFF1
  8461                           intcon3	equ	0xFF0
  8462                           postinc0	equ	0xFEE
  8463                           plusw0	equ	0xFEB
  8464                           wreg	equ	0xFE8
  8465                           postinc1	equ	0xFE6
  8466                           postdec1	equ	0xFE5
  8467                           fsr1h	equ	0xFE2
  8468                           fsr1l	equ	0xFE1
  8469                           indf2	equ	0xFDF
  8470                           postinc2	equ	0xFDE
  8471                           postdec2	equ	0xFDD
  8472                           plusw2	equ	0xFDB
  8473                           fsr2h	equ	0xFDA
  8474                           fsr2l	equ	0xFD9
  8475                           status	equ	0xFD8
  8476                           
  8477 ;; *************** function _USBDeviceInit *****************
  8478 ;; Defined at:
  8479 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;		None
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;  i               1   37[BANK0 ] unsigned char 
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8494 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8496 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8497 ;;Total ram usage:        1 bytes
  8498 ;; Hardware stack levels used:    1
  8499 ;; Hardware stack levels required when called:   12
  8500 ;; This function calls:
  8501 ;;		_memset
  8502 ;; This function is called by:
  8503 ;;		_USBDeviceTasks
  8504 ;;		_UsbDevice_MainTask
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text33
  8509  002596                     __ptext33:
  8510                           	opt stack 0
  8511  002596                     _USBDeviceInit:
  8512                           	opt stack 14
  8513                           
  8514                           ;usb_device.c: 297: uint8_t i;
  8515                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8516                           
  8517                           ; BSR set to: 1
  8518                           ;incstack = 0
  8519  002596  98A0               	bcf	4000,4,c	;volatile
  8520                           
  8521                           ;usb_device.c: 303: ;
  8522                           ;usb_device.c: 306: {UEIR = 0;};
  8523  002598  0E00               	movlw	0
  8524  00259A  6E63               	movwf	3939,c	;volatile
  8525                           
  8526                           ;usb_device.c: 309: {UIR = 0;};
  8527  00259C  0E00               	movlw	0
  8528  00259E  6E62               	movwf	3938,c	;volatile
  8529                           
  8530                           ;usb_device.c: 312: UEP0 = 0;
  8531  0025A0  0E00               	movlw	0
  8532  0025A2  010F               	movlb	15	; () banked
  8533  0025A4  6F26               	movwf	38,b	;volatile
  8534                           
  8535                           ; BSR set to: 15
  8536                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8537  0025A6  0E27               	movlw	39
  8538  0025A8  0100               	movlb	0	; () banked
  8539  0025AA  6F7D               	movwf	memset@p1& (0+255),b
  8540  0025AC  0E0F               	movlw	15
  8541  0025AE  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8542  0025B0  0E00               	movlw	0
  8543  0025B2  6F80               	movwf	(memset@c+1)& (0+255),b
  8544  0025B4  0E00               	movlw	0
  8545  0025B6  6F7F               	movwf	memset@c& (0+255),b
  8546  0025B8  0E00               	movlw	0
  8547  0025BA  6F82               	movwf	(memset@n+1)& (0+255),b
  8548  0025BC  0E02               	movlw	2
  8549  0025BE  6F81               	movwf	memset@n& (0+255),b
  8550  0025C0  ECB6  F033         	call	_memset	;wreg free
  8551                           
  8552                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8553  0025C4  0E16               	movlw	22
  8554  0025C6  010F               	movlb	15	; () banked
  8555  0025C8  6F39               	movwf	57,b	;volatile
  8556                           
  8557                           ; BSR set to: 15
  8558  0025CA  0E9F               	movlw	159
  8559  0025CC  6F37               	movwf	55,b	;volatile
  8560                           
  8561                           ; BSR set to: 15
  8562  0025CE  0E7B               	movlw	123
  8563  0025D0  6F36               	movwf	54,b	;volatile
  8564                           
  8565                           ; BSR set to: 15
  8566                           ;usb_device.c: 319: ;
  8567                           ;usb_device.c: 322: ;
  8568                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8569  0025D2  0E00               	movlw	0
  8570  0025D4  0100               	movlb	0	; () banked
  8571  0025D6  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8572  0025D8                     l14911:
  8573                           
  8574                           ; BSR set to: 0
  8575  0025D8  0E0B               	movlw	11
  8576  0025DA  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8577  0025DC  D001               	goto	l1604
  8578  0025DE  D00E               	goto	u13950
  8579  0025E0                     l1604:
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;usb_device.c: 326: {
  8583                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8584                           
  8585                           ; BSR set to: 0
  8586  0025E0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8587  0025E2  0D04               	mullw	4
  8588  0025E4  0E00               	movlw	0
  8589  0025E6  24F3               	addwf	prodl,w,c
  8590  0025E8  6ED9               	movwf	fsr2l,c
  8591  0025EA  0E04               	movlw	4
  8592  0025EC  20F4               	addwfc	prodh,w,c
  8593  0025EE  6EDA               	movwf	fsr2h,c
  8594  0025F0  6ADE               	clrf	postinc2,c
  8595  0025F2  6ADE               	clrf	postinc2,c
  8596  0025F4  6ADE               	clrf	postinc2,c
  8597  0025F6  6ADD               	clrf	postdec2,c
  8598                           
  8599                           ; BSR set to: 0
  8600  0025F8  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8601  0025FA  D7EE               	goto	l14911
  8602  0025FC                     u13950:
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;usb_device.c: 328: }
  8606                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8607  0025FC  8C65               	bsf	3941,6,c	;volatile
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;usb_device.c: 334: UADDR = 0x00;
  8611  0025FE  0E00               	movlw	0
  8612  002600  010F               	movlb	15	; () banked
  8613  002602  6F38               	movwf	56,b	;volatile
  8614                           
  8615                           ; BSR set to: 15
  8616                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8617  002604  9865               	bcf	3941,4,c	;volatile
  8618                           
  8619                           ; BSR set to: 15
  8620                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8621  002606  9C65               	bcf	3941,6,c	;volatile
  8622  002608                     
  8623                           ;usb_device.c: 344: {
  8624                           ;usb_device.c: 345: (UIR &= 0xF7);
  8625                           
  8626                           ; BSR set to: 15
  8627  002608  9662               	bcf	3938,3,c	;volatile
  8628                           
  8629                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8630  00260A  0E00               	movlw	0
  8631  00260C  0100               	movlb	0	; () banked
  8632  00260E  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8636  002610  0E00               	movlw	0
  8637  002612  0101               	movlb	1	; () banked
  8638  002614  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8639                           
  8640                           ; BSR set to: 1
  8641                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8642  002616  0E00               	movlw	0
  8643  002618  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8644  00261A  0E00               	movlw	0
  8645  00261C  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8646                           
  8647                           ; BSR set to: 1
  8648                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8649  00261E  B662               	btfsc	3938,3,c	;volatile
  8650  002620  D7F3               	goto	l1606
  8651                           
  8652                           ; BSR set to: 1
  8653                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8654                           
  8655                           ; BSR set to: 1
  8656  002622  0E01               	movlw	1
  8657  002624  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8658                           
  8659                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8660  002626  0E01               	movlw	1
  8661  002628  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8662                           
  8663                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8664  00262A  0E00               	movlw	0
  8665  00262C  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8666                           
  8667                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8668  00262E  0E00               	movlw	0
  8669  002630  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8670                           
  8671                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8672  002632  0E00               	movlw	0
  8673  002634  6FDF               	movwf	_USBBusIsSuspended& (0+255),b
  8674                           
  8675                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8676  002636  0E00               	movlw	0
  8677  002638  0100               	movlb	0	; () banked
  8678  00263A  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8679  00263C                     l14939:
  8680                           
  8681                           ; BSR set to: 0
  8682  00263C  0E02               	movlw	2
  8683  00263E  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8684  002640  D001               	goto	l1608
  8685  002642  D02E               	goto	u13980
  8686  002644                     l1608:
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;usb_device.c: 364: {
  8690                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8691                           
  8692                           ; BSR set to: 0
  8693  002644  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8694  002646  0D02               	mullw	2
  8695  002648  0EB6               	movlw	low _pBDTEntryIn
  8696  00264A  24F3               	addwf	prodl,w,c
  8697  00264C  6ED9               	movwf	fsr2l,c
  8698  00264E  0E00               	movlw	high _pBDTEntryIn
  8699  002650  20F4               	addwfc	prodh,w,c
  8700  002652  6EDA               	movwf	fsr2h,c
  8701  002654  0E00               	movlw	0
  8702  002656  6EDE               	movwf	postinc2,c
  8703  002658  0E00               	movlw	0
  8704  00265A  6EDD               	movwf	postdec2,c
  8705                           
  8706                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8707  00265C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8708  00265E  0D02               	mullw	2
  8709  002660  0E06               	movlw	low _pBDTEntryOut
  8710  002662  24F3               	addwf	prodl,w,c
  8711  002664  6ED9               	movwf	fsr2l,c
  8712  002666  0E03               	movlw	high _pBDTEntryOut
  8713  002668  20F4               	addwfc	prodh,w,c
  8714  00266A  6EDA               	movwf	fsr2h,c
  8715  00266C  0E00               	movlw	0
  8716  00266E  6EDE               	movwf	postinc2,c
  8717  002670  0E00               	movlw	0
  8718  002672  6EDD               	movwf	postdec2,c
  8719                           
  8720                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8721  002674  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8722  002676  0D01               	mullw	1
  8723  002678  0ED2               	movlw	low _ep_data_in
  8724  00267A  24F3               	addwf	prodl,w,c
  8725  00267C  6ED9               	movwf	fsr2l,c
  8726  00267E  0E02               	movlw	high _ep_data_in
  8727  002680  20F4               	addwfc	prodh,w,c
  8728  002682  6EDA               	movwf	fsr2h,c
  8729  002684  0E00               	movlw	0
  8730  002686  6EDF               	movwf	indf2,c
  8731                           
  8732                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8733  002688  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8734  00268A  0D01               	mullw	1
  8735  00268C  0ECF               	movlw	low _ep_data_out
  8736  00268E  24F3               	addwf	prodl,w,c
  8737  002690  6ED9               	movwf	fsr2l,c
  8738  002692  0E02               	movlw	high _ep_data_out
  8739  002694  20F4               	addwfc	prodh,w,c
  8740  002696  6EDA               	movwf	fsr2h,c
  8741  002698  0E00               	movlw	0
  8742  00269A  6EDF               	movwf	indf2,c
  8743                           
  8744                           ; BSR set to: 0
  8745  00269C  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8746  00269E  D7CE               	goto	l14939
  8747  0026A0                     u13980:
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;usb_device.c: 369: }
  8751                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8752                           
  8753                           ; BSR set to: 0
  8754  0026A0  0E08               	movlw	8
  8755  0026A2  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8756  0026A4  0E04               	movlw	4
  8757  0026A6  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8761  0026A8  0E16               	movlw	22
  8762  0026AA  010F               	movlb	15	; () banked
  8763  0026AC  6F26               	movwf	38,b	;volatile
  8764                           
  8765                           ; BSR set to: 15
  8766                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8767  0026AE  0E04               	movlw	4
  8768  0026B0  0104               	movlb	4	; () banked
  8769  0026B2  6F03               	movwf	3,b	;volatile
  8770  0026B4  0E30               	movlw	48
  8771  0026B6  6F02               	movwf	2,b	;volatile
  8772                           
  8773                           ; BSR set to: 4
  8774                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8775  0026B8  0E08               	movlw	8
  8776  0026BA  6F01               	movwf	1,b	;volatile
  8777                           
  8778                           ; BSR set to: 4
  8779                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8780  0026BC  0E04               	movlw	4
  8781  0026BE  6F00               	movwf	0,b	;volatile
  8782                           
  8783                           ; BSR set to: 4
  8784                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8785  0026C0  8F00               	bsf	0,7,b	;volatile
  8786                           
  8787                           ; BSR set to: 4
  8788                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8789  0026C2  0E00               	movlw	0
  8790  0026C4  0100               	movlb	0	; () banked
  8791  0026C6  6FD6               	movwf	_USBActiveConfiguration& (0+255),b
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;usb_device.c: 384: USB1msTickCount = 0;
  8795  0026C8  0E00               	movlw	0
  8796  0026CA  0103               	movlb	3	; () banked
  8797  0026CC  6F10               	movwf	_USB1msTickCount& (0+255),b
  8798  0026CE  0E00               	movlw	0
  8799  0026D0  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  8800  0026D2  0E00               	movlw	0
  8801  0026D4  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  8802  0026D6  0E00               	movlw	0
  8803  0026D8  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  8804                           
  8805                           ; BSR set to: 3
  8806                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8807  0026DA  0E00               	movlw	0
  8808  0026DC  0101               	movlb	1	; () banked
  8809  0026DE  6FDD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8810                           
  8811                           ; BSR set to: 1
  8812                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8813  0026E0  0E00               	movlw	0
  8814  0026E2  0100               	movlb	0	; () banked
  8815  0026E4  6FCE               	movwf	_USBDeviceState& (0+255),b
  8816                           
  8817                           ; BSR set to: 0
  8818  0026E6  0012               	return		;funcret
  8819  0026E8                     __end_of_USBDeviceInit:
  8820                           	opt stack 0
  8821                           tosu	equ	0xFFF
  8822                           tosh	equ	0xFFE
  8823                           tosl	equ	0xFFD
  8824                           pclath	equ	0xFFA
  8825                           tblptru	equ	0xFF8
  8826                           tblptrh	equ	0xFF7
  8827                           tblptrl	equ	0xFF6
  8828                           tablat	equ	0xFF5
  8829                           prodh	equ	0xFF4
  8830                           prodl	equ	0xFF3
  8831                           intcon	equ	0xFF2
  8832                           intcon2	equ	0xFF1
  8833                           intcon3	equ	0xFF0
  8834                           postinc0	equ	0xFEE
  8835                           plusw0	equ	0xFEB
  8836                           wreg	equ	0xFE8
  8837                           postinc1	equ	0xFE6
  8838                           postdec1	equ	0xFE5
  8839                           fsr1h	equ	0xFE2
  8840                           fsr1l	equ	0xFE1
  8841                           indf2	equ	0xFDF
  8842                           postinc2	equ	0xFDE
  8843                           postdec2	equ	0xFDD
  8844                           plusw2	equ	0xFDB
  8845                           fsr2h	equ	0xFDA
  8846                           fsr2l	equ	0xFD9
  8847                           status	equ	0xFD8
  8848                           
  8849 ;; *************** function _USBCtrlEPService *****************
  8850 ;; Defined at:
  8851 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;		None
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;		None
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  1    wreg      void 
  8858 ;; Registers used:
  8859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8868 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8869 ;;Total ram usage:        1 bytes
  8870 ;; Hardware stack levels used:    1
  8871 ;; Hardware stack levels required when called:   18
  8872 ;; This function calls:
  8873 ;;		_USBCtrlTrfInHandler
  8874 ;;		_USBCtrlTrfOutHandler
  8875 ;;		_USBCtrlTrfSetupHandler
  8876 ;;		_memcpy
  8877 ;; This function is called by:
  8878 ;;		_USBDeviceTasks
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           	psect	text34
  8883  004F50                     __ptext34:
  8884                           	opt stack 0
  8885  004F50                     _USBCtrlEPService:
  8886                           	opt stack 8
  8887                           
  8888                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;incstack = 0
  8892  004F50  0E2D               	movlw	45
  8893  004F52  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8894                           
  8895                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8896  004F54  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8897  004F58  0EFD               	movlw	253
  8898  004F5A  0100               	movlb	0	; () banked
  8899  004F5C  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8900  004F5E  A4D8               	btfss	status,2,c
  8901  004F60  D038               	goto	l1774
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;usb_device.c: 2401: {
  8905                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8906  004F62  C0D5  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8907  004F66  90D8               	bcf	status,0,c
  8908  004F68  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8909  004F6A  0E3F               	movlw	63
  8910  004F6C  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8911  004F6E  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8912  004F70  0D04               	mullw	4
  8913  004F72  0E00               	movlw	0
  8914  004F74  24F3               	addwf	prodl,w,c
  8915  004F76  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8916  004F78  0E04               	movlw	4
  8917  004F7A  20F4               	addwfc	prodh,w,c
  8918  004F7C  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8922  004F7E  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8923  004F82  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8927  004F86  0E04               	movlw	4
  8928  004F88  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8932  004F8A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8933  004F8E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8934  004F92  30DF               	rrcf	223,w,c
  8935  004F94  32E8               	rrcf	wreg,f,c
  8936  004F96  0B0F               	andlw	15
  8937  004F98  0A0D               	xorlw	13
  8938  004F9A  A4D8               	btfss	status,2,c
  8939  004F9C  D017               	goto	l1775
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;usb_device.c: 2418: {
  8943                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8944  004F9E  0E30               	movlw	48
  8945  004FA0  6F7D               	movwf	memcpy@d1& (0+255),b
  8946  004FA2  0E04               	movlw	4
  8947  004FA4  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8948  004FA6  EE20 F002          	lfsr	2,2
  8949  004FAA  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8950  004FAC  26D9               	addwf	fsr2l,f,c
  8951  004FAE  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8952  004FB0  22DA               	addwfc	fsr2h,f,c
  8953  004FB2  CFDE F07F          	movff	postinc2,memcpy@s1
  8954  004FB6  CFDD F080          	movff	postdec2,memcpy@s1+1
  8955  004FBA  0E00               	movlw	0
  8956  004FBC  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8957  004FBE  0E08               	movlw	8
  8958  004FC0  6F81               	movwf	memcpy@n& (0+255),b
  8959  004FC2  ECB9  F030         	call	_memcpy	;wreg free
  8960                           
  8961                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8962  004FC6  EC5D  F029         	call	_USBCtrlTrfSetupHandler	;wreg free
  8963                           
  8964                           ;usb_device.c: 2427: }
  8965  004FCA  0012               	return	
  8966  004FCC                     l1775:
  8967                           
  8968                           ;usb_device.c: 2428: else
  8969                           ;usb_device.c: 2429: {
  8970                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8971  004FCC  EC2B  F02C         	call	_USBCtrlTrfOutHandler	;wreg free
  8972                           
  8973                           ;usb_device.c: 2432: }
  8974                           ;usb_device.c: 2433: }
  8975  004FD0  0012               	return	
  8976  004FD2                     l1774:
  8977                           
  8978                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8979  004FD2  0100               	movlb	0	; () banked
  8980  004FD4  51D5               	movf	_USTATcopy& (0+255),w,b
  8981  004FD6  0BFD               	andlw	253
  8982  004FD8  0A04               	xorlw	4
  8983  004FDA  A4D8               	btfss	status,2,c
  8984  004FDC  0012               	return	
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;usb_device.c: 2435: {
  8988                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8989  004FDE  ECBC  F021         	call	_USBCtrlTrfInHandler	;wreg free
  8990  004FE2  0012               	return	
  8991  004FE4                     __end_of_USBCtrlEPService:
  8992                           	opt stack 0
  8993                           tosu	equ	0xFFF
  8994                           tosh	equ	0xFFE
  8995                           tosl	equ	0xFFD
  8996                           pclath	equ	0xFFA
  8997                           tblptru	equ	0xFF8
  8998                           tblptrh	equ	0xFF7
  8999                           tblptrl	equ	0xFF6
  9000                           tablat	equ	0xFF5
  9001                           prodh	equ	0xFF4
  9002                           prodl	equ	0xFF3
  9003                           intcon	equ	0xFF2
  9004                           intcon2	equ	0xFF1
  9005                           intcon3	equ	0xFF0
  9006                           postinc0	equ	0xFEE
  9007                           plusw0	equ	0xFEB
  9008                           wreg	equ	0xFE8
  9009                           postinc1	equ	0xFE6
  9010                           postdec1	equ	0xFE5
  9011                           fsr1h	equ	0xFE2
  9012                           fsr1l	equ	0xFE1
  9013                           indf2	equ	0xFDF
  9014                           postinc2	equ	0xFDE
  9015                           postdec2	equ	0xFDD
  9016                           plusw2	equ	0xFDB
  9017                           fsr2h	equ	0xFDA
  9018                           fsr2l	equ	0xFD9
  9019                           status	equ	0xFD8
  9020                           
  9021 ;; *************** function _memcpy *****************
  9022 ;; Defined at:
  9023 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;  d1              2   29[BANK0 ] PTR void 
  9026 ;;		 -> SetupPkt(8), 
  9027 ;;  s1              2   31[BANK0 ] PTR const void 
  9028 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9029 ;;  n               2   33[BANK0 ] unsigned int 
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  9032 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9033 ;;  d               2   36[BANK0 ] PTR unsigned char 
  9034 ;;		 -> SetupPkt(8), 
  9035 ;;  tmp             1   35[BANK0 ] unsigned char 
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  2   29[BANK0 ] PTR void 
  9038 ;; Registers used:
  9039 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9045 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9046 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9048 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9049 ;;Total ram usage:       11 bytes
  9050 ;; Hardware stack levels used:    1
  9051 ;; Hardware stack levels required when called:   11
  9052 ;; This function calls:
  9053 ;;		Nothing
  9054 ;; This function is called by:
  9055 ;;		_USBCtrlEPService
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           	psect	text35
  9060  006172                     __ptext35:
  9061                           	opt stack 0
  9062  006172                     _memcpy:
  9063                           	opt stack 14
  9064                           
  9065                           ;incstack = 0
  9066  006172  C07F  F086         	movff	memcpy@s1,memcpy@s
  9067  006176  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  9068  00617A  C07D  F084         	movff	memcpy@d1,memcpy@d
  9069  00617E  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  9070  006182  D011               	goto	l3450
  9071  006184                     l14123:
  9072  006184  C086  FFD9         	movff	memcpy@s,fsr2l
  9073  006188  C087  FFDA         	movff	memcpy@s+1,fsr2h
  9074  00618C  50DF               	movf	indf2,w,c
  9075  00618E  0100               	movlb	0	; () banked
  9076  006190  6F83               	movwf	memcpy@tmp& (0+255),b
  9077                           
  9078                           ; BSR set to: 0
  9079  006192  4B86               	infsnz	memcpy@s& (0+255),f,b
  9080  006194  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  9081                           
  9082                           ; BSR set to: 0
  9083  006196  C084  FFD9         	movff	memcpy@d,fsr2l
  9084  00619A  C085  FFDA         	movff	memcpy@d+1,fsr2h
  9085  00619E  C083  FFDF         	movff	memcpy@tmp,indf2
  9086                           
  9087                           ; BSR set to: 0
  9088  0061A2  4B84               	infsnz	memcpy@d& (0+255),f,b
  9089  0061A4  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  9090  0061A6                     l3450:
  9091                           
  9092                           ; BSR set to: 0
  9093  0061A6  0100               	movlb	0	; () banked
  9094  0061A8  0781               	decf	memcpy@n& (0+255),f,b
  9095  0061AA  A0D8               	btfss	status,0,c
  9096  0061AC  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9097  0061AE  2981               	incf	memcpy@n& (0+255),w,b
  9098  0061B0  E1E9               	bnz	l14123
  9099  0061B2  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9100  0061B4  B4D8               	btfsc	status,2,c
  9101  0061B6  0012               	return	
  9102  0061B8  D7E5               	goto	l3451
  9103  0061BA                     __end_of_memcpy:
  9104                           	opt stack 0
  9105                           tosu	equ	0xFFF
  9106                           tosh	equ	0xFFE
  9107                           tosl	equ	0xFFD
  9108                           pclath	equ	0xFFA
  9109                           tblptru	equ	0xFF8
  9110                           tblptrh	equ	0xFF7
  9111                           tblptrl	equ	0xFF6
  9112                           tablat	equ	0xFF5
  9113                           prodh	equ	0xFF4
  9114                           prodl	equ	0xFF3
  9115                           intcon	equ	0xFF2
  9116                           intcon2	equ	0xFF1
  9117                           intcon3	equ	0xFF0
  9118                           postinc0	equ	0xFEE
  9119                           plusw0	equ	0xFEB
  9120                           wreg	equ	0xFE8
  9121                           postinc1	equ	0xFE6
  9122                           postdec1	equ	0xFE5
  9123                           fsr1h	equ	0xFE2
  9124                           fsr1l	equ	0xFE1
  9125                           indf2	equ	0xFDF
  9126                           postinc2	equ	0xFDE
  9127                           postdec2	equ	0xFDD
  9128                           plusw2	equ	0xFDB
  9129                           fsr2h	equ	0xFDA
  9130                           fsr2l	equ	0xFD9
  9131                           status	equ	0xFD8
  9132                           
  9133 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9134 ;; Defined at:
  9135 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;		None
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;		None
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  1    wreg      void 
  9142 ;; Registers used:
  9143 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9153 ;;Total ram usage:        0 bytes
  9154 ;; Hardware stack levels used:    1
  9155 ;; Hardware stack levels required when called:   17
  9156 ;; This function calls:
  9157 ;;		_USBCheckStdRequest
  9158 ;;		_USBCtrlEPServiceComplete
  9159 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9160 ;; This function is called by:
  9161 ;;		_USBCtrlEPService
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165                           	psect	text36
  9166  0052BA                     __ptext36:
  9167                           	opt stack 0
  9168  0052BA                     _USBCtrlTrfSetupHandler:
  9169                           	opt stack 8
  9170                           
  9171                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;incstack = 0
  9175  0052BA  0E00               	movlw	0
  9176  0052BC  0100               	movlb	0	; () banked
  9177  0052BE  6FCD               	movwf	_shortPacketStatus& (0+255),b
  9178                           
  9179                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9180  0052C0  0E00               	movlw	0
  9181  0052C2  6FCA               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9182                           
  9183                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9184  0052C4  0E00               	movlw	0
  9185  0052C6  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9186                           
  9187                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9188  0052C8  0E00               	movlw	0
  9189  0052CA  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9190                           
  9191                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9192  0052CC  0E00               	movlw	0
  9193  0052CE  0101               	movlb	1	; () banked
  9194  0052D0  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9195                           
  9196                           ;usb_device.c: 2493: controlTransferState = 0;
  9197  0052D2  0E00               	movlw	0
  9198  0052D4  0100               	movlb	0	; () banked
  9199  0052D6  6FCC               	movwf	_controlTransferState& (0+255),b
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9203  0052D8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9204  0052DC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9205  0052E0  0E7F               	movlw	127
  9206  0052E2  16DF               	andwf	indf2,f,c
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9210  0052E4  0E04               	movlw	4
  9211  0052E6  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9215  0052E8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9216  0052EC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9217  0052F0  0E7F               	movlw	127
  9218  0052F2  16DF               	andwf	indf2,f,c
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9222  0052F4  0E04               	movlw	4
  9223  0052F6  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9227  0052F8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9228  0052FC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9229  005300  0E7F               	movlw	127
  9230  005302  16DF               	andwf	indf2,f,c
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9234  005304  0E00               	movlw	0
  9235  005306  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9236                           
  9237                           ; BSR set to: 0
  9238                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9239  005308  0E00               	movlw	0
  9240  00530A  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9241  00530C  0E00               	movlw	0
  9242  00530E  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9246  005310  0E00               	movlw	0
  9247  005312  0101               	movlb	1	; () banked
  9248  005314  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9249                           
  9250                           ; BSR set to: 1
  9251                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9252  005316  0E00               	movlw	0
  9253  005318  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9254  00531A  0E00               	movlw	0
  9255  00531C  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9256                           
  9257                           ; BSR set to: 1
  9258                           ;usb_device.c: 2517: USBCheckStdRequest();
  9259  00531E  ECA1  F01B         	call	_USBCheckStdRequest	;wreg free
  9260                           
  9261                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9262  005322  0E00               	movlw	0
  9263  005324  0100               	movlb	0	; () banked
  9264  005326  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9265  005328  0E03               	movlw	3
  9266  00532A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9267  00532C  0E00               	movlw	0
  9268  00532E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9269  005330  0E00               	movlw	0
  9270  005332  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9271  005334  0E00               	movlw	0
  9272  005336  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9273  005338  0E00               	movlw	0
  9274  00533A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9275  00533C  ECF5  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9276                           
  9277                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9278  005340  ECDA  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9279  005344  0012               	return		;funcret
  9280  005346                     __end_of_USBCtrlTrfSetupHandler:
  9281                           	opt stack 0
  9282                           tosu	equ	0xFFF
  9283                           tosh	equ	0xFFE
  9284                           tosl	equ	0xFFD
  9285                           pclath	equ	0xFFA
  9286                           tblptru	equ	0xFF8
  9287                           tblptrh	equ	0xFF7
  9288                           tblptrl	equ	0xFF6
  9289                           tablat	equ	0xFF5
  9290                           prodh	equ	0xFF4
  9291                           prodl	equ	0xFF3
  9292                           intcon	equ	0xFF2
  9293                           intcon2	equ	0xFF1
  9294                           intcon3	equ	0xFF0
  9295                           postinc0	equ	0xFEE
  9296                           plusw0	equ	0xFEB
  9297                           wreg	equ	0xFE8
  9298                           postinc1	equ	0xFE6
  9299                           postdec1	equ	0xFE5
  9300                           fsr1h	equ	0xFE2
  9301                           fsr1l	equ	0xFE1
  9302                           indf2	equ	0xFDF
  9303                           postinc2	equ	0xFDE
  9304                           postdec2	equ	0xFDD
  9305                           plusw2	equ	0xFDB
  9306                           fsr2h	equ	0xFDA
  9307                           fsr2l	equ	0xFD9
  9308                           status	equ	0xFD8
  9309                           
  9310 ;; *************** function _USBCtrlEPServiceComplete *****************
  9311 ;; Defined at:
  9312 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;		None
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;		None
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  1    wreg      void 
  9319 ;; Registers used:
  9320 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9330 ;;Total ram usage:        0 bytes
  9331 ;; Hardware stack levels used:    1
  9332 ;; Hardware stack levels required when called:   13
  9333 ;; This function calls:
  9334 ;;		_USBCtrlEPAllowDataStage
  9335 ;;		_USBCtrlEPAllowStatusStage
  9336 ;; This function is called by:
  9337 ;;		_USBCtrlTrfSetupHandler
  9338 ;; This function uses a non-reentrant model
  9339 ;;
  9340                           
  9341                           	psect	text37
  9342  0031B4                     __ptext37:
  9343                           	opt stack 0
  9344  0031B4                     _USBCtrlEPServiceComplete:
  9345                           	opt stack 11
  9346                           
  9347                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9348                           
  9349                           ;incstack = 0
  9350  0031B4  9865               	bcf	3941,4,c	;volatile
  9351                           
  9352                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9353  0031B6  0100               	movlb	0	; () banked
  9354  0031B8  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9355  0031BA  D03B               	goto	l1684
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;usb_device.c: 1647: {
  9359                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9360  0031BC  0101               	movlb	1	; () banked
  9361  0031BE  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9362  0031C0  D00C               	goto	l1685
  9363                           
  9364                           ; BSR set to: 1
  9365                           ;usb_device.c: 1649: {
  9366                           ;usb_device.c: 1650: controlTransferState = 2;
  9367  0031C2  0E02               	movlw	2
  9368  0031C4  0100               	movlb	0	; () banked
  9369  0031C6  6FCC               	movwf	_controlTransferState& (0+255),b
  9370                           
  9371                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9372  0031C8  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9373  0031CA  B4D8               	btfsc	status,2,c
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;usb_device.c: 1662: {
  9377                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9378  0031CC  ECDE  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9379                           
  9380                           ;usb_device.c: 1664: }
  9381                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9382  0031D0  0E00               	movlw	0
  9383  0031D2  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9384                           
  9385                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9386  0031D4  0E00               	movlw	0
  9387  0031D6  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9388                           
  9389                           ;usb_device.c: 1670: }
  9390  0031D8  0012               	return	
  9391  0031DA                     l1685:
  9392                           
  9393                           ;usb_device.c: 1671: else
  9394                           ;usb_device.c: 1672: {
  9395                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9396  0031DA  0100               	movlb	0	; () banked
  9397  0031DC  EE20 F001          	lfsr	2,1
  9398  0031E0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9399  0031E2  26D9               	addwf	fsr2l,f,c
  9400  0031E4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9401  0031E6  22DA               	addwfc	fsr2h,f,c
  9402  0031E8  0E08               	movlw	8
  9403  0031EA  6EDF               	movwf	indf2,c
  9404                           
  9405                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9406  0031EC  EE20 F002          	lfsr	2,2
  9407  0031F0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9408  0031F2  26D9               	addwf	fsr2l,f,c
  9409  0031F4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9410  0031F6  22DA               	addwfc	fsr2h,f,c
  9411  0031F8  0E30               	movlw	48
  9412  0031FA  6EDE               	movwf	postinc2,c
  9413  0031FC  0E04               	movlw	4
  9414  0031FE  6EDD               	movwf	postdec2,c
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9418  003200  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9419  003204  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9420  003208  0E0C               	movlw	12
  9421  00320A  6EDF               	movwf	indf2,c
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9425  00320C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9426  003210  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9427  003214  0E00               	movlw	0
  9428  003216  8EDB               	bsf	plusw2,7,c
  9429                           
  9430                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9431  003218  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9432  00321C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9433  003220  0E04               	movlw	4
  9434  003222  6EDF               	movwf	indf2,c
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9438  003224  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9439  003228  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9440  00322C  0E00               	movlw	0
  9441  00322E  8EDB               	bsf	plusw2,7,c
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;usb_device.c: 1683: }
  9445                           ;usb_device.c: 1684: }
  9446  003230  0012               	return	
  9447  003232                     l1684:
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;usb_device.c: 1685: else
  9451                           ;usb_device.c: 1686: {
  9452                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9453  003232  0104               	movlb	4	; () banked
  9454  003234  AF30               	btfss	48,7,b	;volatile
  9455  003236  D012               	goto	l1689
  9456                           
  9457                           ; BSR set to: 4
  9458                           ;usb_device.c: 1688: {
  9459                           ;usb_device.c: 1689: controlTransferState = 1;
  9460  003238  0E01               	movlw	1
  9461  00323A  0100               	movlb	0	; () banked
  9462  00323C  6FCC               	movwf	_controlTransferState& (0+255),b
  9463                           
  9464                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9465  00323E  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9466  003240  B4D8               	btfsc	status,2,c
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;usb_device.c: 1704: {
  9470                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9471  003242  ECDE  F025         	call	_USBCtrlEPAllowDataStage	;wreg free
  9472                           
  9473                           ;usb_device.c: 1706: }
  9474                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9475  003246  0E00               	movlw	0
  9476  003248  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9477                           
  9478                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9479  00324A  0E00               	movlw	0
  9480  00324C  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9481                           
  9482                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9483  00324E  0100               	movlb	0	; () banked
  9484  003250  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9485  003252  A4D8               	btfss	status,2,c
  9486  003254  0012               	return	
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;usb_device.c: 1731: {
  9490                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9491  003256  EC63  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9492                           
  9493                           ;usb_device.c: 1733: }
  9494                           ;usb_device.c: 1734: }
  9495  00325A  0012               	return	
  9496  00325C                     l1689:
  9497                           
  9498                           ;usb_device.c: 1735: else
  9499                           ;usb_device.c: 1736: {
  9500                           ;usb_device.c: 1747: controlTransferState = 2;
  9501  00325C  0E02               	movlw	2
  9502  00325E  0100               	movlb	0	; () banked
  9503  003260  6FCC               	movwf	_controlTransferState& (0+255),b
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9507  003262  EE20 F001          	lfsr	2,1
  9508  003266  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9509  003268  26D9               	addwf	fsr2l,f,c
  9510  00326A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9511  00326C  22DA               	addwfc	fsr2h,f,c
  9512  00326E  0E08               	movlw	8
  9513  003270  6EDF               	movwf	indf2,c
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9517  003272  EE20 F002          	lfsr	2,2
  9518  003276  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9519  003278  26D9               	addwf	fsr2l,f,c
  9520  00327A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9521  00327C  22DA               	addwfc	fsr2h,f,c
  9522  00327E  0E30               	movlw	48
  9523  003280  6EDE               	movwf	postinc2,c
  9524  003282  0E04               	movlw	4
  9525  003284  6EDD               	movwf	postdec2,c
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9529  003286  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9530  00328A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9531  00328E  0E04               	movlw	4
  9532  003290  6EDF               	movwf	indf2,c
  9533                           
  9534                           ; BSR set to: 0
  9535                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9536  003292  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9537  003296  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9538  00329A  0E00               	movlw	0
  9539  00329C  8EDB               	bsf	plusw2,7,c
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9543  00329E  0E00               	movlw	0
  9544  0032A0  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9548  0032A2  0E00               	movlw	0
  9549  0032A4  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9553  0032A6  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9554  0032A8  A4D8               	btfss	status,2,c
  9555  0032AA  0012               	return	
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;usb_device.c: 1759: {
  9559                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9560  0032AC  EC63  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9561  0032B0  0012               	return	
  9562  0032B2                     __end_of_USBCtrlEPServiceComplete:
  9563                           	opt stack 0
  9564                           tosu	equ	0xFFF
  9565                           tosh	equ	0xFFE
  9566                           tosl	equ	0xFFD
  9567                           pclath	equ	0xFFA
  9568                           tblptru	equ	0xFF8
  9569                           tblptrh	equ	0xFF7
  9570                           tblptrl	equ	0xFF6
  9571                           tablat	equ	0xFF5
  9572                           prodh	equ	0xFF4
  9573                           prodl	equ	0xFF3
  9574                           intcon	equ	0xFF2
  9575                           intcon2	equ	0xFF1
  9576                           intcon3	equ	0xFF0
  9577                           postinc0	equ	0xFEE
  9578                           plusw0	equ	0xFEB
  9579                           wreg	equ	0xFE8
  9580                           postinc1	equ	0xFE6
  9581                           postdec1	equ	0xFE5
  9582                           fsr1h	equ	0xFE2
  9583                           fsr1l	equ	0xFE1
  9584                           indf2	equ	0xFDF
  9585                           postinc2	equ	0xFDE
  9586                           postdec2	equ	0xFDD
  9587                           plusw2	equ	0xFDB
  9588                           fsr2h	equ	0xFDA
  9589                           fsr2l	equ	0xFD9
  9590                           status	equ	0xFD8
  9591                           
  9592 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9593 ;; Defined at:
  9594 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;		None
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;		None
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      void 
  9601 ;; Registers used:
  9602 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9612 ;;Total ram usage:        0 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:   12
  9615 ;; This function calls:
  9616 ;;		_USBCtrlTrfTxService
  9617 ;; This function is called by:
  9618 ;;		_USBCtrlEPServiceComplete
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           	psect	text38
  9623  004BBC                     __ptext38:
  9624                           	opt stack 0
  9625  004BBC                     _USBCtrlEPAllowDataStage:
  9626                           	opt stack 11
  9627                           
  9628                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9629                           
  9630                           ;incstack = 0
  9631  004BBC  0E00               	movlw	0
  9632  004BBE  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9633                           
  9634                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9635  004BC0  0E00               	movlw	0
  9636  004BC2  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9637                           
  9638                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9639  004BC4  0E02               	movlw	2
  9640  004BC6  0100               	movlb	0	; () banked
  9641  004BC8  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9642  004BCA  A4D8               	btfss	status,2,c
  9643  004BCC  D01F               	goto	l1673
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;usb_device.c: 1512: {
  9647                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9648  004BCE  EE20 F001          	lfsr	2,1
  9649  004BD2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9650  004BD4  26D9               	addwf	fsr2l,f,c
  9651  004BD6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9652  004BD8  22DA               	addwfc	fsr2h,f,c
  9653  004BDA  0E08               	movlw	8
  9654  004BDC  6EDF               	movwf	indf2,c
  9655                           
  9656                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9657  004BDE  EE20 F002          	lfsr	2,2
  9658  004BE2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9659  004BE4  26D9               	addwf	fsr2l,f,c
  9660  004BE6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9661  004BE8  22DA               	addwfc	fsr2h,f,c
  9662  004BEA  0E38               	movlw	56
  9663  004BEC  6EDE               	movwf	postinc2,c
  9664  004BEE  0E04               	movlw	4
  9665  004BF0  6EDD               	movwf	postdec2,c
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9669  004BF2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9670  004BF6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9671  004BFA  0E48               	movlw	72
  9672  004BFC  6EDF               	movwf	indf2,c
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9676  004BFE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9677  004C02  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9678  004C06  0E00               	movlw	0
  9679  004C08  8EDB               	bsf	plusw2,7,c
  9680                           
  9681                           ;usb_device.c: 1518: }
  9682  004C0A  0012               	return	
  9683  004C0C                     l1673:
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;usb_device.c: 1519: else
  9687                           ;usb_device.c: 1520: {
  9688                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9689                           
  9690                           ; BSR set to: 0
  9691  004C0C  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9692  004C0E  0104               	movlb	4	; () banked
  9693  004C10  5D36               	subwf	54,w,b	;volatile
  9694  004C12  0100               	movlb	0	; () banked
  9695  004C14  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9696  004C16  0104               	movlb	4	; () banked
  9697  004C18  5937               	subwfb	55,w,b	;volatile
  9698  004C1A  B0D8               	btfsc	status,0,c
  9699  004C1C  D004               	goto	l1675
  9700                           
  9701                           ; BSR set to: 4
  9702                           ;usb_device.c: 1524: {
  9703                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9704  004C1E  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9705  004C22  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9706  004C26                     l1675:
  9707                           
  9708                           ; BSR set to: 4
  9709                           ;usb_device.c: 1526: }
  9710                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9711                           
  9712                           ; BSR set to: 4
  9713  004C26  EC13  F01C         	call	_USBCtrlTrfTxService	;wreg free
  9714                           
  9715                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9716  004C2A  0100               	movlb	0	; () banked
  9717  004C2C  EE20 F002          	lfsr	2,2
  9718  004C30  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9719  004C32  26D9               	addwf	fsr2l,f,c
  9720  004C34  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9721  004C36  22DA               	addwfc	fsr2h,f,c
  9722  004C38  0E38               	movlw	56
  9723  004C3A  6EDE               	movwf	postinc2,c
  9724  004C3C  0E04               	movlw	4
  9725  004C3E  6EDD               	movwf	postdec2,c
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9729  004C40  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9730  004C44  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9731  004C48  0E48               	movlw	72
  9732  004C4A  6EDF               	movwf	indf2,c
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9736  004C4C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9737  004C50  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9738  004C54  0E00               	movlw	0
  9739  004C56  8EDB               	bsf	plusw2,7,c
  9740  004C58  0012               	return	
  9741  004C5A                     __end_of_USBCtrlEPAllowDataStage:
  9742                           	opt stack 0
  9743                           tosu	equ	0xFFF
  9744                           tosh	equ	0xFFE
  9745                           tosl	equ	0xFFD
  9746                           pclath	equ	0xFFA
  9747                           tblptru	equ	0xFF8
  9748                           tblptrh	equ	0xFF7
  9749                           tblptrl	equ	0xFF6
  9750                           tablat	equ	0xFF5
  9751                           prodh	equ	0xFF4
  9752                           prodl	equ	0xFF3
  9753                           intcon	equ	0xFF2
  9754                           intcon2	equ	0xFF1
  9755                           intcon3	equ	0xFF0
  9756                           postinc0	equ	0xFEE
  9757                           plusw0	equ	0xFEB
  9758                           wreg	equ	0xFE8
  9759                           postinc1	equ	0xFE6
  9760                           postdec1	equ	0xFE5
  9761                           fsr1h	equ	0xFE2
  9762                           fsr1l	equ	0xFE1
  9763                           indf2	equ	0xFDF
  9764                           postinc2	equ	0xFDE
  9765                           postdec2	equ	0xFDD
  9766                           plusw2	equ	0xFDB
  9767                           fsr2h	equ	0xFDA
  9768                           fsr2l	equ	0xFD9
  9769                           status	equ	0xFD8
  9770                           
  9771 ;; *************** function _USBCheckStdRequest *****************
  9772 ;; Defined at:
  9773 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;		None
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;		None
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1    wreg      void 
  9780 ;; Registers used:
  9781 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9791 ;;Total ram usage:        0 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:   16
  9794 ;; This function calls:
  9795 ;;		_USBStdFeatureReqHandler
  9796 ;;		_USBStdGetDscHandler
  9797 ;;		_USBStdGetStatusHandler
  9798 ;;		_USBStdSetCfgHandler
  9799 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9800 ;; This function is called by:
  9801 ;;		_USBCtrlTrfSetupHandler
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           	psect	text39
  9806  003742                     __ptext39:
  9807                           	opt stack 0
  9808  003742                     _USBCheckStdRequest:
  9809                           	opt stack 8
  9810                           
  9811                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;incstack = 0
  9815  003742  0104               	movlb	4	; () banked
  9816  003744  3930               	swapf	48,w,b	;volatile
  9817  003746  32E8               	rrcf	wreg,f,c
  9818  003748  0B03               	andlw	3
  9819  00374A  0900               	iorlw	0
  9820  00374C  A4D8               	btfss	status,2,c
  9821  00374E  0012               	return	
  9822  003750  D048               	goto	l1808
  9823  003752                     l1809:
  9824                           
  9825                           ; BSR set to: 4
  9826                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9827  003752  0100               	movlb	0	; () banked
  9828  003754  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9832  003756  0E08               	movlw	8
  9833  003758  6FCE               	movwf	_USBDeviceState& (0+255),b
  9834                           
  9835                           ;usb_device.c: 2713: break;
  9836  00375A  0012               	return	
  9837  00375C                     
  9838                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9839                           
  9840                           ; BSR set to: 0
  9841  00375C  EC96  F016         	call	_USBStdGetDscHandler	;wreg free
  9842                           
  9843                           ;usb_device.c: 2716: break;
  9844  003760  0012               	return	
  9845  003762                     
  9846                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9847  003762  ECBB  F01A         	call	_USBStdSetCfgHandler	;wreg free
  9848                           
  9849                           ;usb_device.c: 2719: break;
  9850  003766  0012               	return	
  9851  003768                     
  9852                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9853  003768  0ED6               	movlw	low _USBActiveConfiguration
  9854  00376A  0100               	movlb	0	; () banked
  9855  00376C  6FB0               	movwf	_inPipes& (0+255),b
  9856  00376E  0E00               	movlw	high _USBActiveConfiguration
  9857  003770  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9861  003772  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9865  003774  0E01               	movlw	1
  9866  003776  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9870  003778  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9871                           
  9872                           ;usb_device.c: 2725: break;
  9873  00377A  0012               	return	
  9874  00377C                     
  9875                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9876                           
  9877                           ; BSR set to: 0
  9878  00377C  EC39  F023         	call	_USBStdGetStatusHandler	;wreg free
  9879                           
  9880                           ;usb_device.c: 2728: break;
  9881  003780  0012               	return	
  9882  003782                     
  9883                           ;usb_device.c: 2730: case 3:
  9884                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9885  003782  ECB0  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9886                           
  9887                           ;usb_device.c: 2732: break;
  9888  003786  0012               	return	
  9889  003788                     
  9890                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9891  003788  0104               	movlb	4	; () banked
  9892  00378A  5134               	movf	52,w,b	;volatile
  9893  00378C  0D01               	mullw	1
  9894  00378E  0EEF               	movlw	low _USBAlternateInterface
  9895  003790  24F3               	addwf	prodl,w,c
  9896  003792  0100               	movlb	0	; () banked
  9897  003794  6FB0               	movwf	_inPipes& (0+255),b
  9898  003796  0E02               	movlw	high _USBAlternateInterface
  9899  003798  20F4               	addwfc	prodh,w,c
  9900  00379A  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9904  00379C  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9908  00379E  0E01               	movlw	1
  9909  0037A0  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9913  0037A2  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9914                           
  9915                           ;usb_device.c: 2738: break;
  9916  0037A4  0012               	return	
  9917  0037A6                     l1818:
  9918                           
  9919                           ; BSR set to: 4
  9920                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9921  0037A6  0100               	movlb	0	; () banked
  9922  0037A8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9926  0037AA  0104               	movlb	4	; () banked
  9927  0037AC  5134               	movf	52,w,b	;volatile
  9928  0037AE  0D01               	mullw	1
  9929  0037B0  0EEF               	movlw	low _USBAlternateInterface
  9930  0037B2  24F3               	addwf	prodl,w,c
  9931  0037B4  6ED9               	movwf	fsr2l,c
  9932  0037B6  0E02               	movlw	high _USBAlternateInterface
  9933  0037B8  20F4               	addwfc	prodh,w,c
  9934  0037BA  6EDA               	movwf	fsr2h,c
  9935  0037BC  C432 FFDF          	movff	1074,indf2	;volatile
  9936                           
  9937                           ;usb_device.c: 2742: break;
  9938  0037C0  0012               	return	
  9939  0037C2                     
  9940                           ; BSR set to: 4
  9941                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9942                           
  9943                           ; BSR set to: 4
  9944  0037C2  0E00               	movlw	0
  9945  0037C4  0100               	movlb	0	; () banked
  9946  0037C6  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9947  0037C8  0E02               	movlw	2
  9948  0037CA  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9949  0037CC  0E00               	movlw	0
  9950  0037CE  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9951  0037D0  0E00               	movlw	0
  9952  0037D2  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9953  0037D4  0E00               	movlw	0
  9954  0037D6  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9955  0037D8  0E00               	movlw	0
  9956  0037DA  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9957  0037DC  ECF5  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9958                           
  9959                           ;usb_device.c: 2749: }
  9960                           
  9961                           ;usb_device.c: 2748: break;
  9962                           
  9963                           ;usb_device.c: 2747: default:
  9964                           
  9965                           ;usb_device.c: 2746: case 12:
  9966                           
  9967                           ;usb_device.c: 2745: break;
  9968  0037E0  0012               	return	
  9969  0037E2                     l1808:
  9970  0037E2  0104               	movlb	4	; () banked
  9971  0037E4  5131               	movf	49,w,b	;volatile
  9972                           
  9973                           ; Switch size 1, requested type "space"
  9974                           ; Number of cases is 11, Range of values is 0 to 12
  9975                           ; switch strategies available:
  9976                           ; Name         Instructions Cycles
  9977                           ; simple_byte           34    18 (average)
  9978                           ;	Chosen strategy is simple_byte
  9979  0037E6  0A00               	xorlw	0	; case 0
  9980  0037E8  B4D8               	btfsc	status,2,c
  9981  0037EA  D7C8               	goto	l1814
  9982  0037EC  0A01               	xorlw	1	; case 1
  9983  0037EE  B4D8               	btfsc	status,2,c
  9984  0037F0  D7C8               	goto	l1815
  9985  0037F2  0A02               	xorlw	2	; case 3
  9986  0037F4  B4D8               	btfsc	status,2,c
  9987  0037F6  D7C5               	goto	l1815
  9988  0037F8  0A06               	xorlw	6	; case 5
  9989  0037FA  B4D8               	btfsc	status,2,c
  9990  0037FC  D7AA               	goto	l1809
  9991  0037FE  0A03               	xorlw	3	; case 6
  9992  003800  B4D8               	btfsc	status,2,c
  9993  003802  D7AC               	goto	l1811
  9994  003804  0A01               	xorlw	1	; case 7
  9995  003806  B4D8               	btfsc	status,2,c
  9996  003808  D7DC               	goto	l1819
  9997  00380A  0A0F               	xorlw	15	; case 8
  9998  00380C  B4D8               	btfsc	status,2,c
  9999  00380E  D7AC               	goto	l1813
 10000  003810  0A01               	xorlw	1	; case 9
 10001  003812  B4D8               	btfsc	status,2,c
 10002  003814  D7A6               	goto	l1812
 10003  003816  0A03               	xorlw	3	; case 10
 10004  003818  B4D8               	btfsc	status,2,c
 10005  00381A  D7B6               	goto	l1817
 10006  00381C  0A01               	xorlw	1	; case 11
 10007  00381E  B4D8               	btfsc	status,2,c
 10008  003820  D7C2               	goto	l1818
 10009  003822  0A07               	xorlw	7	; case 12
 10010  003824  0012               	return	
 10011  003826                     __end_of_USBCheckStdRequest:
 10012                           	opt stack 0
 10013                           tosu	equ	0xFFF
 10014                           tosh	equ	0xFFE
 10015                           tosl	equ	0xFFD
 10016                           pclath	equ	0xFFA
 10017                           tblptru	equ	0xFF8
 10018                           tblptrh	equ	0xFF7
 10019                           tblptrl	equ	0xFF6
 10020                           tablat	equ	0xFF5
 10021                           prodh	equ	0xFF4
 10022                           prodl	equ	0xFF3
 10023                           intcon	equ	0xFF2
 10024                           intcon2	equ	0xFF1
 10025                           intcon3	equ	0xFF0
 10026                           postinc0	equ	0xFEE
 10027                           plusw0	equ	0xFEB
 10028                           wreg	equ	0xFE8
 10029                           postinc1	equ	0xFE6
 10030                           postdec1	equ	0xFE5
 10031                           fsr1h	equ	0xFE2
 10032                           fsr1l	equ	0xFE1
 10033                           indf2	equ	0xFDF
 10034                           postinc2	equ	0xFDE
 10035                           postdec2	equ	0xFDD
 10036                           plusw2	equ	0xFDB
 10037                           fsr2h	equ	0xFDA
 10038                           fsr2l	equ	0xFD9
 10039                           status	equ	0xFD8
 10040                           
 10041 ;; *************** function _USBStdSetCfgHandler *****************
 10042 ;; Defined at:
 10043 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;		None
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;  i               1   49[BANK0 ] unsigned char 
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      void 
 10050 ;; Registers used:
 10051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10060 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10061 ;;Total ram usage:        1 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:   15
 10064 ;; This function calls:
 10065 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10066 ;;		_memset
 10067 ;; This function is called by:
 10068 ;;		_USBCheckStdRequest
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text40
 10073  003576                     __ptext40:
 10074                           	opt stack 0
 10075  003576                     _USBStdSetCfgHandler:
 10076                           	opt stack 8
 10077                           
 10078                           ;usb_device.c: 1988: uint8_t i;
 10079                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
 10080                           
 10081                           ;incstack = 0
 10082  003576  0100               	movlb	0	; () banked
 10083  003578  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
 10087  00357A  0E27               	movlw	39
 10088  00357C  6F7D               	movwf	memset@p1& (0+255),b
 10089  00357E  0E0F               	movlw	15
 10090  003580  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10091  003582  0E00               	movlw	0
 10092  003584  6F80               	movwf	(memset@c+1)& (0+255),b
 10093  003586  0E00               	movlw	0
 10094  003588  6F7F               	movwf	memset@c& (0+255),b
 10095  00358A  0E00               	movlw	0
 10096  00358C  6F82               	movwf	(memset@n+1)& (0+255),b
 10097  00358E  0E02               	movlw	2
 10098  003590  6F81               	movwf	memset@n& (0+255),b
 10099  003592  ECB6  F033         	call	_memset	;wreg free
 10100                           
 10101                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10102  003596  0E00               	movlw	0
 10103  003598  0100               	movlb	0	; () banked
 10104  00359A  6F7D               	movwf	memset@p1& (0+255),b
 10105  00359C  0E04               	movlw	4
 10106  00359E  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10107  0035A0  0E00               	movlw	0
 10108  0035A2  6F80               	movwf	(memset@c+1)& (0+255),b
 10109  0035A4  0E00               	movlw	0
 10110  0035A6  6F7F               	movwf	memset@c& (0+255),b
 10111  0035A8  0E00               	movlw	0
 10112  0035AA  6F82               	movwf	(memset@n+1)& (0+255),b
 10113  0035AC  0E30               	movlw	48
 10114  0035AE  6F81               	movwf	memset@n& (0+255),b
 10115  0035B0  ECB6  F033         	call	_memset	;wreg free
 10116                           
 10117                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10118  0035B4  8C65               	bsf	3941,6,c	;volatile
 10119                           
 10120                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10121  0035B6  0E00               	movlw	0
 10122  0035B8  0100               	movlb	0	; () banked
 10123  0035BA  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10124  0035BC                     l13451:
 10125                           
 10126                           ; BSR set to: 0
 10127  0035BC  0E02               	movlw	2
 10128  0035BE  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10129  0035C0  D001               	goto	l1725
 10130  0035C2  D016               	goto	u12000
 10131  0035C4                     l1725:
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;usb_device.c: 2006: {
 10135                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10136                           
 10137                           ; BSR set to: 0
 10138  0035C4  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10139  0035C6  0D01               	mullw	1
 10140  0035C8  0ED2               	movlw	low _ep_data_in
 10141  0035CA  24F3               	addwf	prodl,w,c
 10142  0035CC  6ED9               	movwf	fsr2l,c
 10143  0035CE  0E02               	movlw	high _ep_data_in
 10144  0035D0  20F4               	addwfc	prodh,w,c
 10145  0035D2  6EDA               	movwf	fsr2h,c
 10146  0035D4  0E00               	movlw	0
 10147  0035D6  6EDF               	movwf	indf2,c
 10148                           
 10149                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10150  0035D8  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10151  0035DA  0D01               	mullw	1
 10152  0035DC  0ECF               	movlw	low _ep_data_out
 10153  0035DE  24F3               	addwf	prodl,w,c
 10154  0035E0  6ED9               	movwf	fsr2l,c
 10155  0035E2  0E02               	movlw	high _ep_data_out
 10156  0035E4  20F4               	addwfc	prodh,w,c
 10157  0035E6  6EDA               	movwf	fsr2h,c
 10158  0035E8  0E00               	movlw	0
 10159  0035EA  6EDF               	movwf	indf2,c
 10160                           
 10161                           ; BSR set to: 0
 10162  0035EC  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10163  0035EE  D7E6               	goto	l13451
 10164  0035F0                     u12000:
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;usb_device.c: 2009: }
 10168                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10169                           
 10170                           ; BSR set to: 0
 10171  0035F0  0EEF               	movlw	low _USBAlternateInterface
 10172  0035F2  6F7D               	movwf	memset@p1& (0+255),b
 10173  0035F4  0E02               	movlw	high _USBAlternateInterface
 10174  0035F6  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10175  0035F8  0E00               	movlw	0
 10176  0035FA  6F80               	movwf	(memset@c+1)& (0+255),b
 10177  0035FC  0E00               	movlw	0
 10178  0035FE  6F7F               	movwf	memset@c& (0+255),b
 10179  003600  0E00               	movlw	0
 10180  003602  6F82               	movwf	(memset@n+1)& (0+255),b
 10181  003604  0E02               	movlw	2
 10182  003606  6F81               	movwf	memset@n& (0+255),b
 10183  003608  ECB6  F033         	call	_memset	;wreg free
 10184                           
 10185                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10186  00360C  9C65               	bcf	3941,6,c	;volatile
 10187                           
 10188                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10189  00360E  0E08               	movlw	8
 10190  003610  0100               	movlb	0	; () banked
 10191  003612  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10192  003614  0E04               	movlw	4
 10193  003616  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10194                           
 10195                           ; BSR set to: 0
 10196                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10197  003618  0E00               	movlw	0
 10198  00361A  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10199  00361C  0E04               	movlw	4
 10200  00361E  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10201                           
 10202                           ; BSR set to: 0
 10203                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10204  003620  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10205  003624  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10206                           
 10207                           ; BSR set to: 0
 10208                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10209  003628  C432 F0D6          	movff	1074,_USBActiveConfiguration	;volatile
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10213  00362C  51D6               	movf	_USBActiveConfiguration& (0+255),w,b
 10214  00362E  A4D8               	btfss	status,2,c
 10215  003630  D003               	goto	l1727
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;usb_device.c: 2028: {
 10219                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10220  003632  0E10               	movlw	16
 10221  003634  6FCE               	movwf	_USBDeviceState& (0+255),b
 10222                           
 10223                           ;usb_device.c: 2031: }
 10224  003636  0012               	return	
 10225  003638                     l1727:
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;usb_device.c: 2032: else
 10229                           ;usb_device.c: 2033: {
 10230                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10231                           
 10232                           ; BSR set to: 0
 10233  003638  0E00               	movlw	0
 10234  00363A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10235  00363C  0E01               	movlw	1
 10236  00363E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10237  003640  0ED6               	movlw	low _USBActiveConfiguration
 10238  003642  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10239  003644  0E00               	movlw	high _USBActiveConfiguration
 10240  003646  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10241  003648  0E00               	movlw	0
 10242  00364A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10243  00364C  0E01               	movlw	1
 10244  00364E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10245  003650  ECF5  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10246                           
 10247                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10248  003654  0E20               	movlw	32
 10249  003656  0100               	movlb	0	; () banked
 10250  003658  6FCE               	movwf	_USBDeviceState& (0+255),b
 10251  00365A  0012               	return	
 10252  00365C                     __end_of_USBStdSetCfgHandler:
 10253                           	opt stack 0
 10254                           tosu	equ	0xFFF
 10255                           tosh	equ	0xFFE
 10256                           tosl	equ	0xFFD
 10257                           pclath	equ	0xFFA
 10258                           tblptru	equ	0xFF8
 10259                           tblptrh	equ	0xFF7
 10260                           tblptrl	equ	0xFF6
 10261                           tablat	equ	0xFF5
 10262                           prodh	equ	0xFF4
 10263                           prodl	equ	0xFF3
 10264                           intcon	equ	0xFF2
 10265                           intcon2	equ	0xFF1
 10266                           intcon3	equ	0xFF0
 10267                           postinc0	equ	0xFEE
 10268                           plusw0	equ	0xFEB
 10269                           wreg	equ	0xFE8
 10270                           postinc1	equ	0xFE6
 10271                           postdec1	equ	0xFE5
 10272                           fsr1h	equ	0xFE2
 10273                           fsr1l	equ	0xFE1
 10274                           indf2	equ	0xFDF
 10275                           postinc2	equ	0xFDE
 10276                           postdec2	equ	0xFDD
 10277                           plusw2	equ	0xFDB
 10278                           fsr2h	equ	0xFDA
 10279                           fsr2l	equ	0xFD9
 10280                           status	equ	0xFD8
 10281                           
 10282 ;; *************** function _USBStdGetStatusHandler *****************
 10283 ;; Defined at:
 10284 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;		None
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10289 ;;		 -> NULL(0), BDT(48), 
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  1    wreg      void 
 10292 ;; Registers used:
 10293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/0
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10302 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10303 ;;Total ram usage:        3 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; Hardware stack levels required when called:   11
 10306 ;; This function calls:
 10307 ;;		Nothing
 10308 ;; This function is called by:
 10309 ;;		_USBCheckStdRequest
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           	psect	text41
 10314  004672                     __ptext41:
 10315                           	opt stack 0
 10316  004672                     _USBStdGetStatusHandler:
 10317                           	opt stack 12
 10318                           
 10319                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;incstack = 0
 10323  004672  0E00               	movlw	0
 10324  004674  0104               	movlb	4	; () banked
 10325  004676  6F38               	movwf	56,b	;volatile
 10326                           
 10327                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10328  004678  0E00               	movlw	0
 10329  00467A  6F39               	movwf	57,b	;volatile
 10330                           
 10331                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10332  00467C  D03D               	goto	l1746
 10333  00467E                     l1747:
 10334                           
 10335                           ; BSR set to: 4
 10336                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10337  00467E  0100               	movlb	0	; () banked
 10338  004680  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10339                           
 10340                           ;usb_device.c: 2163: }
 10341                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10342                           
 10343                           ; BSR set to: 4
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;usb_device.c: 2161: {
 10347                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10348                           
 10349                           ;usb_device.c: 2160: if(0 == 1)
 10350  004682  0101               	movlb	1	; () banked
 10351  004684  05E0               	decf	_RemoteWakeup& (0+255),w,b
 10352  004686  A4D8               	btfss	status,2,c
 10353  004688  D042               	goto	l1750
 10354                           
 10355                           ; BSR set to: 1
 10356                           ;usb_device.c: 2166: {
 10357                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10358  00468A  0104               	movlb	4	; () banked
 10359  00468C  8338               	bsf	56,1,b	;volatile
 10360                           
 10361                           ; BSR set to: 4
 10362                           ;usb_device.c: 2168: }
 10363                           ;usb_device.c: 2169: break;
 10364  00468E  D03F               	goto	l1750
 10365  004690                     l1751:
 10366                           
 10367                           ; BSR set to: 4
 10368                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10369  004690  0100               	movlb	0	; () banked
 10370  004692  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10371                           
 10372                           ;usb_device.c: 2172: break;
 10373  004694  D03C               	goto	l1750
 10374  004696                     l1752:
 10375                           
 10376                           ; BSR set to: 4
 10377                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10378  004696  0100               	movlb	0	; () banked
 10379  004698  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10380                           
 10381                           ;usb_device.c: 2178: {
 10382                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10383                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10384  00469A  0104               	movlb	4	; () banked
 10385  00469C  BF34               	btfsc	52,7,b	;volatile
 10386  00469E  D00B               	goto	l1753
 10387                           
 10388                           ; BSR set to: 4
 10389                           ;usb_device.c: 2182: {
 10390                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10391  0046A0  5134               	movf	52,w,b	;volatile
 10392  0046A2  0B0F               	andlw	15
 10393  0046A4  0100               	movlb	0	; () banked
 10394  0046A6  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10395  0046A8  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10396  0046AA  0D02               	mullw	2
 10397  0046AC  0E06               	movlw	low _pBDTEntryOut
 10398  0046AE  24F3               	addwf	prodl,w,c
 10399  0046B0  6ED9               	movwf	fsr2l,c
 10400  0046B2  0E03               	movlw	high _pBDTEntryOut
 10401  0046B4  D00B               	goto	L4
 10402  0046B6                     l1753:
 10403                           
 10404                           ;usb_device.c: 2185: else
 10405                           ;usb_device.c: 2186: {
 10406                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10407                           
 10408                           ; BSR set to: 0
 10409  0046B6  0104               	movlb	4	; () banked
 10410  0046B8  5134               	movf	52,w,b	;volatile
 10411  0046BA  0B0F               	andlw	15
 10412  0046BC  0100               	movlb	0	; () banked
 10413  0046BE  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10414  0046C0  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10415  0046C2  0D02               	mullw	2
 10416  0046C4  0EB6               	movlw	low _pBDTEntryIn
 10417  0046C6  24F3               	addwf	prodl,w,c
 10418  0046C8  6ED9               	movwf	fsr2l,c
 10419  0046CA  0E00               	movlw	high _pBDTEntryIn
 10420  0046CC                     L4:
 10421  0046CC  20F4               	addwfc	prodh,w,c
 10422  0046CE  6EDA               	movwf	fsr2h,c
 10423  0046D0  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10424  0046D4  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;usb_device.c: 2188: }
 10428                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10429                           
 10430                           ; BSR set to: 0
 10431  0046D8  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10432  0046DC  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10433  0046E0  AEDF               	btfss	indf2,7,c
 10434  0046E2  D015               	goto	l1750
 10435                           
 10436                           ; BSR set to: 0
 10437  0046E4  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10438  0046E8  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10439  0046EC  A4DF               	btfss	indf2,2,c
 10440  0046EE  D00F               	goto	l1750
 10441                           
 10442                           ; BSR set to: 0
 10443                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10444  0046F0  0E01               	movlw	1
 10445  0046F2  0104               	movlb	4	; () banked
 10446  0046F4  6F38               	movwf	56,b	;volatile
 10447                           
 10448                           ; BSR set to: 4
 10449                           ;usb_device.c: 2193: }
 10450                           ;usb_device.c: 2194: }
 10451                           
 10452                           ; BSR set to: 4
 10453                           ;usb_device.c: 2192: break;
 10454  0046F6  D00B               	goto	l1750
 10455  0046F8                     l1746:
 10456                           
 10457                           ; BSR set to: 4
 10458                           
 10459                           ; BSR set to: 4
 10460  0046F8  5130               	movf	48,w,b	;volatile
 10461  0046FA  0B1F               	andlw	31
 10462                           
 10463                           ; Switch size 1, requested type "space"
 10464                           ; Number of cases is 3, Range of values is 0 to 2
 10465                           ; switch strategies available:
 10466                           ; Name         Instructions Cycles
 10467                           ; simple_byte           10     6 (average)
 10468                           ;	Chosen strategy is simple_byte
 10469  0046FC  0A00               	xorlw	0	; case 0
 10470  0046FE  B4D8               	btfsc	status,2,c
 10471  004700  D7BE               	goto	l1747
 10472  004702  0A01               	xorlw	1	; case 1
 10473  004704  B4D8               	btfsc	status,2,c
 10474  004706  D7C4               	goto	l1751
 10475  004708  0A03               	xorlw	3	; case 2
 10476  00470A  B4D8               	btfsc	status,2,c
 10477  00470C  D7C4               	goto	l1752
 10478  00470E                     l1750:
 10479                           
 10480                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10481  00470E  0100               	movlb	0	; () banked
 10482  004710  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10483  004712  0012               	return	
 10484                           
 10485                           ; BSR set to: 0
 10486                           ;usb_device.c: 2197: {
 10487                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10488  004714  0E38               	movlw	56
 10489  004716  6FB0               	movwf	_inPipes& (0+255),b
 10490  004718  0E04               	movlw	4
 10491  00471A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10492                           
 10493                           ; BSR set to: 0
 10494                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10495  00471C  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10496                           
 10497                           ; BSR set to: 0
 10498                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10499  00471E  0E02               	movlw	2
 10500  004720  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10501  004722  0012               	return	
 10502  004724                     __end_of_USBStdGetStatusHandler:
 10503                           	opt stack 0
 10504                           tosu	equ	0xFFF
 10505                           tosh	equ	0xFFE
 10506                           tosl	equ	0xFFD
 10507                           pclath	equ	0xFFA
 10508                           tblptru	equ	0xFF8
 10509                           tblptrh	equ	0xFF7
 10510                           tblptrl	equ	0xFF6
 10511                           tablat	equ	0xFF5
 10512                           prodh	equ	0xFF4
 10513                           prodl	equ	0xFF3
 10514                           intcon	equ	0xFF2
 10515                           intcon2	equ	0xFF1
 10516                           intcon3	equ	0xFF0
 10517                           postinc0	equ	0xFEE
 10518                           plusw0	equ	0xFEB
 10519                           wreg	equ	0xFE8
 10520                           postinc1	equ	0xFE6
 10521                           postdec1	equ	0xFE5
 10522                           fsr1h	equ	0xFE2
 10523                           fsr1l	equ	0xFE1
 10524                           indf2	equ	0xFDF
 10525                           postinc2	equ	0xFDE
 10526                           postdec2	equ	0xFDD
 10527                           plusw2	equ	0xFDB
 10528                           fsr2h	equ	0xFDA
 10529                           fsr2l	equ	0xFD9
 10530                           status	equ	0xFD8
 10531                           
 10532 ;; *************** function _USBStdGetDscHandler *****************
 10533 ;; Defined at:
 10534 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;		None
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;		None
 10539 ;; Return value:  Size  Location     Type
 10540 ;;                  1    wreg      void 
 10541 ;; Registers used:
 10542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10550 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10552 ;;Total ram usage:        2 bytes
 10553 ;; Hardware stack levels used:    1
 10554 ;; Hardware stack levels required when called:   11
 10555 ;; This function calls:
 10556 ;;		Nothing
 10557 ;; This function is called by:
 10558 ;;		_USBCheckStdRequest
 10559 ;; This function uses a non-reentrant model
 10560 ;;
 10561                           
 10562                           	psect	text42
 10563  002D2C                     __ptext42:
 10564                           	opt stack 0
 10565  002D2C                     _USBStdGetDscHandler:
 10566                           	opt stack 12
 10567                           
 10568                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;incstack = 0
 10572  002D2C  0E80               	movlw	128
 10573  002D2E  0104               	movlb	4	; () banked
 10574  002D30  1930               	xorwf	48,w,b	;volatile
 10575  002D32  A4D8               	btfss	status,2,c
 10576  002D34  0012               	return	
 10577                           
 10578                           ; BSR set to: 4
 10579                           ;usb_device.c: 2064: {
 10580                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10581  002D36  0EC0               	movlw	192
 10582  002D38  0100               	movlb	0	; () banked
 10583  002D3A  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10584                           
 10585                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10586  002D3C  D082               	goto	l1733
 10587  002D3E                     
 10588                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10589                           
 10590                           ; BSR set to: 0
 10591  002D3E  0E49               	movlw	low _device_dsc
 10592  002D40  0100               	movlb	0	; () banked
 10593  002D42  6FB0               	movwf	_inPipes& (0+255),b
 10594  002D44  0EFE               	movlw	high _device_dsc
 10595  002D46  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10596                           
 10597                           ; BSR set to: 0
 10598                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10599  002D48  0E00               	movlw	0
 10600  002D4A  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10601  002D4C  0E12               	movlw	18
 10602  002D4E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10603                           
 10604                           ;usb_device.c: 2076: break;
 10605  002D50  0012               	return	
 10606  002D52                     
 10607                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10608                           
 10609                           ; BSR set to: 0
 10610  002D52  0104               	movlb	4	; () banked
 10611  002D54  5132               	movf	50,w,b	;volatile
 10612  002D56  A4D8               	btfss	status,2,c
 10613  002D58  D040               	goto	l1737
 10614                           
 10615                           ; BSR set to: 4
 10616                           ;usb_device.c: 2082: {
 10617                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10618  002D5A  5132               	movf	50,w,b	;volatile
 10619  002D5C  0D02               	mullw	2
 10620  002D5E  0E2E               	movlw	low _USB_CD_Ptr
 10621  002D60  24F3               	addwf	prodl,w,c
 10622  002D62  6EF6               	movwf	tblptrl,c
 10623  002D64  0EFC               	movlw	high _USB_CD_Ptr
 10624  002D66  20F4               	addwfc	prodh,w,c
 10625  002D68  6EF7               	movwf	tblptrh,c
 10626  002D6A                     	if	0	;There are less than 3 active tblptr bytes
 10627  002D6A                     	endif
 10628  002D6A  0009               	tblrd		*+
 10629  002D6C  CFF5 F0B0          	movff	tablat,_inPipes
 10630  002D70  000A               	tblrd		*-
 10631  002D72  CFF5 F0B1          	movff	tablat,_inPipes+1
 10632                           
 10633                           ; BSR set to: 4
 10634                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10635  002D76  0E02               	movlw	2
 10636  002D78  0100               	movlb	0	; () banked
 10637  002D7A  25B0               	addwf	_inPipes& (0+255),w,b
 10638  002D7C  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10639  002D7E  0E00               	movlw	0
 10640  002D80  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10641  002D82  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10642  002D84  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10643  002D88  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10644  002D8C  6AF8               	clrf	tblptru,c
 10645  002D8E  0E0E               	movlw	(high __ramtop+-1)
 10646  002D90  64F7               	cpfsgt	tblptrh,c
 10647  002D92  D003               	bra	u12047
 10648  002D94  0008               	tblrd		*
 10649  002D96  50F5               	movf	tablat,w,c
 10650  002D98  D005               	bra	u12040
 10651  002D9A                     u12047:
 10652  002D9A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10653  002D9E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10654  002DA2  50EF               	movf	indf0,w,c
 10655  002DA4                     u12040:
 10656  002DA4  0100               	movlb	0	; () banked
 10657  002DA6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10658                           
 10659                           ; BSR set to: 0
 10660                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10661  002DA8  0E03               	movlw	3
 10662  002DAA  25B0               	addwf	_inPipes& (0+255),w,b
 10663  002DAC  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10664  002DAE  0E00               	movlw	0
 10665  002DB0  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10666  002DB2  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10667  002DB4  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10668  002DB8  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10669  002DBC  6AF8               	clrf	tblptru,c
 10670  002DBE  0E0E               	movlw	(high __ramtop+-1)
 10671  002DC0  64F7               	cpfsgt	tblptrh,c
 10672  002DC2  D003               	bra	u12057
 10673  002DC4  0008               	tblrd		*
 10674  002DC6  50F5               	movf	tablat,w,c
 10675  002DC8  D005               	bra	u12050
 10676  002DCA                     u12057:
 10677  002DCA  CFF6 FFE9          	movff	tblptrl,fsr0l
 10678  002DCE  CFF7 FFEA          	movff	tblptrh,fsr0h
 10679  002DD2  50EF               	movf	indf0,w,c
 10680  002DD4                     u12050:
 10681  002DD4  0100               	movlb	0	; () banked
 10682  002DD6  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10683                           
 10684                           ;usb_device.c: 2094: }
 10685  002DD8  0012               	return	
 10686  002DDA                     l1737:
 10687                           
 10688                           ;usb_device.c: 2095: else
 10689                           ;usb_device.c: 2096: {
 10690                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10691                           
 10692                           ; BSR set to: 0
 10693  002DDA  0E00               	movlw	0
 10694  002DDC  0100               	movlb	0	; () banked
 10695  002DDE  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10696                           
 10697                           ; BSR set to: 0
 10698                           ;usb_device.c: 2098: }
 10699                           ;usb_device.c: 2099: break;
 10700  002DE0  0012               	return	
 10701  002DE2                     
 10702                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10703                           
 10704                           ; BSR set to: 0
 10705  002DE2  0E03               	movlw	3
 10706  002DE4  0104               	movlb	4	; () banked
 10707  002DE6  6132               	cpfslt	50,b	;volatile
 10708  002DE8  D024               	goto	l1740
 10709                           
 10710                           ; BSR set to: 4
 10711                           ;usb_device.c: 2105: {
 10712                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10713  002DEA  5132               	movf	50,w,b	;volatile
 10714  002DEC  0D02               	mullw	2
 10715  002DEE  0E1C               	movlw	low _USB_SD_Ptr
 10716  002DF0  24F3               	addwf	prodl,w,c
 10717  002DF2  6EF6               	movwf	tblptrl,c
 10718  002DF4  0EFC               	movlw	high _USB_SD_Ptr
 10719  002DF6  20F4               	addwfc	prodh,w,c
 10720  002DF8  6EF7               	movwf	tblptrh,c
 10721  002DFA                     	if	0	;There are less than 3 active tblptr bytes
 10722  002DFA                     	endif
 10723  002DFA  0009               	tblrd		*+
 10724  002DFC  CFF5 F0B0          	movff	tablat,_inPipes
 10725  002E00  000A               	tblrd		*-
 10726  002E02  CFF5 F0B1          	movff	tablat,_inPipes+1
 10727                           
 10728                           ; BSR set to: 4
 10729                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10730  002E06  C0B0  FFF6         	movff	_inPipes,tblptrl
 10731  002E0A  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10732  002E0E  6AF8               	clrf	tblptru,c
 10733  002E10  0E0E               	movlw	(high __ramtop+-1)
 10734  002E12  64F7               	cpfsgt	tblptrh,c
 10735  002E14  D003               	bra	u12077
 10736  002E16  0008               	tblrd		*
 10737  002E18  50F5               	movf	tablat,w,c
 10738  002E1A  D005               	bra	u12070
 10739  002E1C                     u12077:
 10740  002E1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10741  002E20  CFF7 FFEA          	movff	tblptrh,fsr0h
 10742  002E24  50EF               	movf	indf0,w,c
 10743  002E26                     u12070:
 10744  002E26  0100               	movlb	0	; () banked
 10745  002E28  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10746  002E2A  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10747  002E2C  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10748  002E2E  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10749                           
 10750                           ;usb_device.c: 2110: }
 10751  002E30  0012               	return	
 10752  002E32                     l1740:
 10753                           
 10754                           ;usb_device.c: 2120: else
 10755                           ;usb_device.c: 2121: {
 10756                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10757                           
 10758                           ; BSR set to: 0
 10759  002E32  0E00               	movlw	0
 10760  002E34  0100               	movlb	0	; () banked
 10761  002E36  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10762                           
 10763                           ; BSR set to: 0
 10764                           ;usb_device.c: 2123: }
 10765                           ;usb_device.c: 2124: break;
 10766  002E38  0012               	return	
 10767  002E3A                     
 10768                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10769                           
 10770                           ; BSR set to: 0
 10771  002E3A  0E00               	movlw	0
 10772  002E3C  0100               	movlb	0	; () banked
 10773  002E3E  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;usb_device.c: 2128: }
 10777                           
 10778                           ;usb_device.c: 2127: break;
 10779  002E40  0012               	return	
 10780  002E42                     l1733:
 10781                           
 10782                           ; BSR set to: 0
 10783                           
 10784                           ; BSR set to: 0
 10785  002E42  0104               	movlb	4	; () banked
 10786  002E44  5133               	movf	51,w,b	;volatile
 10787                           
 10788                           ; Switch size 1, requested type "space"
 10789                           ; Number of cases is 3, Range of values is 1 to 3
 10790                           ; switch strategies available:
 10791                           ; Name         Instructions Cycles
 10792                           ; simple_byte           10     6 (average)
 10793                           ;	Chosen strategy is simple_byte
 10794  002E46  0A01               	xorlw	1	; case 1
 10795  002E48  B4D8               	btfsc	status,2,c
 10796  002E4A  D779               	goto	l1734
 10797  002E4C  0A03               	xorlw	3	; case 2
 10798  002E4E  B4D8               	btfsc	status,2,c
 10799  002E50  D780               	goto	l1736
 10800  002E52  0A01               	xorlw	1	; case 3
 10801  002E54  B4D8               	btfsc	status,2,c
 10802  002E56  D7C5               	goto	l1739
 10803  002E58  D7F0               	goto	l1742
 10804  002E5A                     __end_of_USBStdGetDscHandler:
 10805                           	opt stack 0
 10806                           tosu	equ	0xFFF
 10807                           tosh	equ	0xFFE
 10808                           tosl	equ	0xFFD
 10809                           pclath	equ	0xFFA
 10810                           tblptru	equ	0xFF8
 10811                           tblptrh	equ	0xFF7
 10812                           tblptrl	equ	0xFF6
 10813                           tablat	equ	0xFF5
 10814                           prodh	equ	0xFF4
 10815                           prodl	equ	0xFF3
 10816                           intcon	equ	0xFF2
 10817                           intcon2	equ	0xFF1
 10818                           intcon3	equ	0xFF0
 10819                           indf0	equ	0xFEF
 10820                           postinc0	equ	0xFEE
 10821                           plusw0	equ	0xFEB
 10822                           fsr0h	equ	0xFEA
 10823                           fsr0l	equ	0xFE9
 10824                           wreg	equ	0xFE8
 10825                           postinc1	equ	0xFE6
 10826                           postdec1	equ	0xFE5
 10827                           fsr1h	equ	0xFE2
 10828                           fsr1l	equ	0xFE1
 10829                           indf2	equ	0xFDF
 10830                           postinc2	equ	0xFDE
 10831                           postdec2	equ	0xFDD
 10832                           plusw2	equ	0xFDB
 10833                           fsr2h	equ	0xFDA
 10834                           fsr2l	equ	0xFD9
 10835                           status	equ	0xFD8
 10836                           
 10837 ;; *************** function _USBStdFeatureReqHandler *****************
 10838 ;; Defined at:
 10839 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;		None
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10844 ;;		 -> NULL(0), BDT(48), 
 10845 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10846 ;;		 -> UEP0(1), 
 10847 ;;  current_ep_d    1   52[BANK0 ] struct .
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  1    wreg      void 
 10850 ;; Registers used:
 10851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10858 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10860 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10861 ;;Total ram usage:        6 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; Hardware stack levels required when called:   15
 10864 ;; This function calls:
 10865 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10866 ;; This function is called by:
 10867 ;;		_USBCheckStdRequest
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           	psect	text43
 10872  001360                     __ptext43:
 10873                           	opt stack 0
 10874  001360                     _USBStdFeatureReqHandler:
 10875                           	opt stack 8
 10876                           
 10877                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10878                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10879                           ;usb_device.c: 2778: unsigned char* pUEP;
 10880                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10881                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10882                           
 10883                           ;incstack = 0
 10884  001360  0104               	movlb	4	; () banked
 10885  001362  0532               	decf	50,w,b	;volatile
 10886  001364  A4D8               	btfss	status,2,c
 10887  001366  D011               	goto	l1826
 10888                           
 10889                           ; BSR set to: 4
 10890  001368  5130               	movf	48,w,b	;volatile
 10891  00136A  0B1F               	andlw	31
 10892  00136C  0900               	iorlw	0
 10893  00136E  A4D8               	btfss	status,2,c
 10894  001370  D00C               	goto	l1826
 10895                           
 10896                           ; BSR set to: 4
 10897                           ;usb_device.c: 2818: {
 10898                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10899  001372  0100               	movlb	0	; () banked
 10900  001374  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10901                           
 10902                           ; BSR set to: 0
 10903                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10904  001376  0E03               	movlw	3
 10905  001378  0104               	movlb	4	; () banked
 10906  00137A  1931               	xorwf	49,w,b	;volatile
 10907  00137C  A4D8               	btfss	status,2,c
 10908  00137E  D002               	goto	l1825
 10909                           
 10910                           ; BSR set to: 4
 10911                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10912  001380  0E01               	movlw	1
 10913  001382  D001               	goto	L5
 10914  001384                     l1825:
 10915                           
 10916                           ;usb_device.c: 2822: else
 10917                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10918                           
 10919                           ; BSR set to: 1
 10920  001384  0E00               	movlw	0
 10921  001386                     L5:
 10922  001386  0101               	movlb	1	; () banked
 10923  001388  6FE0               	movwf	_RemoteWakeup& (0+255),b
 10924  00138A                     l1826:
 10925                           
 10926                           ;usb_device.c: 2824: }
 10927                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10928                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10929                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10930                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10931                           
 10932                           ; BSR set to: 1
 10933  00138A  0104               	movlb	4	; () banked
 10934  00138C  5132               	movf	50,w,b	;volatile
 10935  00138E  A4D8               	btfss	status,2,c
 10936  001390  0012               	return	
 10937                           
 10938                           ; BSR set to: 4
 10939  001392  5130               	movf	48,w,b	;volatile
 10940  001394  0B1F               	andlw	31
 10941  001396  0A02               	xorlw	2
 10942  001398  A4D8               	btfss	status,2,c
 10943  00139A  0012               	return	
 10944                           
 10945                           ; BSR set to: 4
 10946  00139C  5134               	movf	52,w,b	;volatile
 10947  00139E  0B0F               	andlw	15
 10948  0013A0  0900               	iorlw	0
 10949  0013A2  B4D8               	btfsc	status,2,c
 10950  0013A4  0012               	return	
 10951                           
 10952                           ; BSR set to: 4
 10953  0013A6  5134               	movf	52,w,b	;volatile
 10954  0013A8  0B0F               	andlw	15
 10955  0013AA  0100               	movlb	0	; () banked
 10956  0013AC  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10957  0013AE  0E03               	movlw	3
 10958  0013B0  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10959  0013B2  0012               	return	
 10960                           
 10961                           ; BSR set to: 0
 10962  0013B4  0E20               	movlw	32
 10963  0013B6  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10964  0013B8  A4D8               	btfss	status,2,c
 10965  0013BA  0012               	return	
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;usb_device.c: 2831: {
 10969                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10970  0013BC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10971                           
 10972                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10973  0013BE  0104               	movlb	4	; () banked
 10974  0013C0  BF34               	btfsc	52,7,b	;volatile
 10975  0013C2  D01C               	goto	l1828
 10976                           
 10977                           ; BSR set to: 4
 10978                           ;usb_device.c: 2838: {
 10979                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10980  0013C4  5134               	movf	52,w,b	;volatile
 10981  0013C6  0B0F               	andlw	15
 10982  0013C8  0100               	movlb	0	; () banked
 10983  0013CA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10984  0013CC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10985  0013CE  0D02               	mullw	2
 10986  0013D0  0E06               	movlw	low _pBDTEntryOut
 10987  0013D2  24F3               	addwf	prodl,w,c
 10988  0013D4  6ED9               	movwf	fsr2l,c
 10989  0013D6  0E03               	movlw	high _pBDTEntryOut
 10990  0013D8  20F4               	addwfc	prodh,w,c
 10991  0013DA  6EDA               	movwf	fsr2h,c
 10992  0013DC  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10993  0013E0  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10994                           
 10995                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10996  0013E4  0104               	movlb	4	; () banked
 10997  0013E6  5134               	movf	52,w,b	;volatile
 10998  0013E8  0B0F               	andlw	15
 10999  0013EA  0100               	movlb	0	; () banked
 11000  0013EC  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11001  0013EE  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11002  0013F0  0D01               	mullw	1
 11003  0013F2  0ECF               	movlw	low _ep_data_out
 11004  0013F4  24F3               	addwf	prodl,w,c
 11005  0013F6  6ED9               	movwf	fsr2l,c
 11006  0013F8  0E02               	movlw	high _ep_data_out
 11007  0013FA  D01C               	goto	L6
 11008  0013FC                     l1828:
 11009                           
 11010                           ;usb_device.c: 2842: else
 11011                           ;usb_device.c: 2843: {
 11012                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11013                           
 11014                           ; BSR set to: 0
 11015  0013FC  0104               	movlb	4	; () banked
 11016  0013FE  5134               	movf	52,w,b	;volatile
 11017  001400  0B0F               	andlw	15
 11018  001402  0100               	movlb	0	; () banked
 11019  001404  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11020  001406  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11021  001408  0D02               	mullw	2
 11022  00140A  0EB6               	movlw	low _pBDTEntryIn
 11023  00140C  24F3               	addwf	prodl,w,c
 11024  00140E  6ED9               	movwf	fsr2l,c
 11025  001410  0E00               	movlw	high _pBDTEntryIn
 11026  001412  20F4               	addwfc	prodh,w,c
 11027  001414  6EDA               	movwf	fsr2h,c
 11028  001416  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11029  00141A  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11030                           
 11031                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11032  00141E  0104               	movlb	4	; () banked
 11033  001420  5134               	movf	52,w,b	;volatile
 11034  001422  0B0F               	andlw	15
 11035  001424  0100               	movlb	0	; () banked
 11036  001426  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11037  001428  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11038  00142A  0D01               	mullw	1
 11039  00142C  0ED2               	movlw	low _ep_data_in
 11040  00142E  24F3               	addwf	prodl,w,c
 11041  001430  6ED9               	movwf	fsr2l,c
 11042  001432  0E02               	movlw	high _ep_data_in
 11043  001434                     L6:
 11044  001434  20F4               	addwfc	prodh,w,c
 11045  001436  6EDA               	movwf	fsr2h,c
 11046  001438  50DF               	movf	indf2,w,c
 11047  00143A  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 11048                           
 11049                           ; BSR set to: 0
 11050                           ;usb_device.c: 2846: }
 11051                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 11052                           
 11053                           ; BSR set to: 0
 11054  00143C  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 11055  00143E  D002               	goto	l1830
 11056                           
 11057                           ; BSR set to: 0
 11058                           ;usb_device.c: 2853: {
 11059                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11060  001440  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 11061                           
 11062                           ;usb_device.c: 2855: }
 11063  001442  D001               	goto	l1831
 11064  001444                     l1830:
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;usb_device.c: 2856: else
 11068                           ;usb_device.c: 2857: {
 11069                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11070                           
 11071                           ; BSR set to: 0
 11072  001444  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 11073  001446                     l1831:
 11074                           
 11075                           ; BSR set to: 0
 11076                           ;usb_device.c: 2859: }
 11077                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 11078                           
 11079                           ; BSR set to: 0
 11080  001446  0104               	movlb	4	; () banked
 11081  001448  BF34               	btfsc	52,7,b	;volatile
 11082  00144A  D00B               	goto	l1832
 11083                           
 11084                           ; BSR set to: 4
 11085                           ;usb_device.c: 2865: {
 11086                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11087  00144C  5134               	movf	52,w,b	;volatile
 11088  00144E  0B0F               	andlw	15
 11089  001450  0100               	movlb	0	; () banked
 11090  001452  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11091  001454  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11092  001456  0D02               	mullw	2
 11093  001458  0E06               	movlw	low _pBDTEntryOut
 11094  00145A  24F3               	addwf	prodl,w,c
 11095  00145C  6ED9               	movwf	fsr2l,c
 11096  00145E  0E03               	movlw	high _pBDTEntryOut
 11097  001460  D00B               	goto	L7
 11098  001462                     l1832:
 11099                           
 11100                           ;usb_device.c: 2868: else
 11101                           ;usb_device.c: 2869: {
 11102                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11103                           
 11104                           ; BSR set to: 0
 11105  001462  0104               	movlb	4	; () banked
 11106  001464  5134               	movf	52,w,b	;volatile
 11107  001466  0B0F               	andlw	15
 11108  001468  0100               	movlb	0	; () banked
 11109  00146A  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11110  00146C  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11111  00146E  0D02               	mullw	2
 11112  001470  0EB6               	movlw	low _pBDTEntryIn
 11113  001472  24F3               	addwf	prodl,w,c
 11114  001474  6ED9               	movwf	fsr2l,c
 11115  001476  0E00               	movlw	high _pBDTEntryIn
 11116  001478                     L7:
 11117  001478  20F4               	addwfc	prodh,w,c
 11118  00147A  6EDA               	movwf	fsr2h,c
 11119  00147C  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11120  001480  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;usb_device.c: 2871: }
 11124                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11125                           
 11126                           ; BSR set to: 0
 11127  001484  0E03               	movlw	3
 11128  001486  0104               	movlb	4	; () banked
 11129  001488  1931               	xorwf	49,w,b	;volatile
 11130  00148A  A4D8               	btfss	status,2,c
 11131  00148C  D031               	goto	l1834
 11132                           
 11133                           ; BSR set to: 4
 11134                           ;usb_device.c: 2875: {
 11135                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11136  00148E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11137  001492  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11138  001496  0100               	movlb	0	; () banked
 11139  001498  AEDF               	btfss	indf2,7,c
 11140  00149A  D01D               	goto	l1837
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;usb_device.c: 2877: {
 11144                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11145  00149C  0104               	movlb	4	; () banked
 11146  00149E  BF34               	btfsc	52,7,b	;volatile
 11147  0014A0  D00B               	goto	l1836
 11148                           
 11149                           ; BSR set to: 4
 11150                           ;usb_device.c: 2881: {
 11151                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11152  0014A2  5134               	movf	52,w,b	;volatile
 11153  0014A4  0B0F               	andlw	15
 11154  0014A6  0100               	movlb	0	; () banked
 11155  0014A8  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11156  0014AA  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11157  0014AC  0D01               	mullw	1
 11158  0014AE  0ECF               	movlw	low _ep_data_out
 11159  0014B0  24F3               	addwf	prodl,w,c
 11160  0014B2  6ED9               	movwf	fsr2l,c
 11161  0014B4  0E02               	movlw	high _ep_data_out
 11162  0014B6  D00B               	goto	L8
 11163  0014B8                     l1836:
 11164                           
 11165                           ;usb_device.c: 2884: else
 11166                           ;usb_device.c: 2885: {
 11167                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11168                           
 11169                           ; BSR set to: 2
 11170  0014B8  0104               	movlb	4	; () banked
 11171  0014BA  5134               	movf	52,w,b	;volatile
 11172  0014BC  0B0F               	andlw	15
 11173  0014BE  0100               	movlb	0	; () banked
 11174  0014C0  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11175  0014C2  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11176  0014C4  0D01               	mullw	1
 11177  0014C6  0ED2               	movlw	low _ep_data_in
 11178  0014C8  24F3               	addwf	prodl,w,c
 11179  0014CA  6ED9               	movwf	fsr2l,c
 11180  0014CC  0E02               	movlw	high _ep_data_in
 11181  0014CE                     L8:
 11182  0014CE  20F4               	addwfc	prodh,w,c
 11183  0014D0  6EDA               	movwf	fsr2h,c
 11184  0014D2  0102               	movlb	2	; () banked
 11185  0014D4  82DF               	bsf	indf2,1,c
 11186  0014D6                     l1837:
 11187                           
 11188                           ;usb_device.c: 2887: }
 11189                           ;usb_device.c: 2888: }
 11190                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11191                           
 11192                           ; BSR set to: 2
 11193                           
 11194                           ; BSR set to: 2
 11195  0014D6  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11196  0014DA  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11197  0014DE  0E00               	movlw	0
 11198  0014E0  84DB               	bsf	plusw2,2,c
 11199                           
 11200                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11201  0014E2  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11202  0014E6  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11203  0014EA  0E00               	movlw	0
 11204  0014EC  8EDB               	bsf	plusw2,7,c
 11205                           
 11206                           ;usb_device.c: 2893: }
 11207  0014EE  0012               	return	
 11208  0014F0                     l1834:
 11209                           
 11210                           ;usb_device.c: 2894: else
 11211                           ;usb_device.c: 2895: {
 11212                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11213  0014F0  0E04               	movlw	4
 11214  0014F2  0100               	movlb	0	; () banked
 11215  0014F4  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11216                           
 11217                           ; BSR set to: 0
 11218                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11219  0014F6  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11220  0014FA  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11221  0014FE  AEDF               	btfss	indf2,7,c
 11222  001500  D01B               	goto	l1839
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;usb_device.c: 2902: {
 11226                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11227  001502  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11228  001506  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11229  00150A  0E7F               	movlw	127
 11230  00150C  16DF               	andwf	indf2,f,c
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11234  00150E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11235  001512  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11236  001516  0E00               	movlw	0
 11237  001518  8CDB               	bsf	plusw2,6,c
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11241  00151A  0E00               	movlw	0
 11242  00151C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11243  00151E  0E05               	movlw	5
 11244  001520  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11245  001522  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11246  001526  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11247  00152A  0E00               	movlw	0
 11248  00152C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11249  00152E  0E02               	movlw	2
 11250  001530  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11251  001532  ECF5  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11252                           
 11253                           ;usb_device.c: 2908: }
 11254  001536  D006               	goto	l1840
 11255  001538                     l1839:
 11256                           
 11257                           ;usb_device.c: 2909: else
 11258                           ;usb_device.c: 2910: {
 11259                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11260  001538  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11261  00153C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11262  001540  0E00               	movlw	0
 11263  001542  8CDB               	bsf	plusw2,6,c
 11264  001544                     l1840:
 11265                           
 11266                           ;usb_device.c: 2913: }
 11267                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11268  001544  0E04               	movlw	4
 11269  001546  0100               	movlb	0	; () banked
 11270  001548  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11271                           
 11272                           ; BSR set to: 0
 11273                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11274  00154A  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11275  00154C  D006               	goto	u12290
 11276                           
 11277                           ; BSR set to: 0
 11278  00154E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11279  001552  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11280  001556  AEDF               	btfss	indf2,7,c
 11281  001558  D033               	goto	l1841
 11282  00155A                     u12290:
 11283                           
 11284                           ; BSR set to: 0
 11285                           ;usb_device.c: 2924: {
 11286                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11287  00155A  0104               	movlb	4	; () banked
 11288  00155C  BF34               	btfsc	52,7,b	;volatile
 11289  00155E  D00B               	goto	l1844
 11290                           
 11291                           ; BSR set to: 4
 11292                           ;usb_device.c: 2926: {
 11293                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11294  001560  5134               	movf	52,w,b	;volatile
 11295  001562  0B0F               	andlw	15
 11296  001564  0100               	movlb	0	; () banked
 11297  001566  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11298  001568  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11299  00156A  0D01               	mullw	1
 11300  00156C  0ECF               	movlw	low _ep_data_out
 11301  00156E  24F3               	addwf	prodl,w,c
 11302  001570  6ED9               	movwf	fsr2l,c
 11303  001572  0E02               	movlw	high _ep_data_out
 11304  001574  D00B               	goto	L9
 11305  001576                     l1844:
 11306                           
 11307                           ;usb_device.c: 2929: else
 11308                           ;usb_device.c: 2930: {
 11309                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11310                           
 11311                           ; BSR set to: 2
 11312  001576  0104               	movlb	4	; () banked
 11313  001578  5134               	movf	52,w,b	;volatile
 11314  00157A  0B0F               	andlw	15
 11315  00157C  0100               	movlb	0	; () banked
 11316  00157E  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11317  001580  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11318  001582  0D01               	mullw	1
 11319  001584  0ED2               	movlw	low _ep_data_in
 11320  001586  24F3               	addwf	prodl,w,c
 11321  001588  6ED9               	movwf	fsr2l,c
 11322  00158A  0E02               	movlw	high _ep_data_in
 11323  00158C                     L9:
 11324  00158C  20F4               	addwfc	prodh,w,c
 11325  00158E  6EDA               	movwf	fsr2h,c
 11326  001590  0102               	movlb	2	; () banked
 11327  001592  92DF               	bcf	indf2,1,c
 11328                           
 11329                           ; BSR set to: 2
 11330                           ;usb_device.c: 2932: }
 11331                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11332                           
 11333                           ; BSR set to: 2
 11334  001594  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11335  001598  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11336  00159C  0E3B               	movlw	59
 11337  00159E  16DF               	andwf	indf2,f,c
 11338                           
 11339                           ; BSR set to: 2
 11340                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11341  0015A0  0E00               	movlw	0
 11342  0015A2  0100               	movlb	0	; () banked
 11343  0015A4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11344  0015A6  0E05               	movlw	5
 11345  0015A8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11346  0015AA  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11347  0015AE  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11348  0015B2  0E00               	movlw	0
 11349  0015B4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11350  0015B6  0E02               	movlw	2
 11351  0015B8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11352  0015BA  ECF5  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11353                           
 11354                           ;usb_device.c: 2938: }
 11355  0015BE  D006               	goto	l1846
 11356  0015C0                     l1841:
 11357                           
 11358                           ;usb_device.c: 2939: else
 11359                           ;usb_device.c: 2940: {
 11360                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11361  0015C0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11362  0015C4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11363  0015C8  0E3B               	movlw	59
 11364  0015CA  16DF               	andwf	indf2,f,c
 11365  0015CC                     l1846:
 11366                           
 11367                           ;usb_device.c: 2943: }
 11368                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11369  0015CC  0104               	movlb	4	; () banked
 11370  0015CE  5134               	movf	52,w,b	;volatile
 11371  0015D0  0B0F               	andlw	15
 11372  0015D2  0100               	movlb	0	; () banked
 11373  0015D4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11374  0015D6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11375  0015D8  0D01               	mullw	1
 11376  0015DA  0E26               	movlw	38
 11377  0015DC  24F3               	addwf	prodl,w,c
 11378  0015DE  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11379  0015E0  0E0F               	movlw	15
 11380  0015E2  20F4               	addwfc	prodh,w,c
 11381  0015E4  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11385  0015E6  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11386  0015EA  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11387  0015EE  0EFE               	movlw	254
 11388  0015F0  16DF               	andwf	indf2,f,c
 11389                           
 11390                           ; BSR set to: 0
 11391  0015F2  0012               	return	
 11392  0015F4                     __end_of_USBStdFeatureReqHandler:
 11393                           	opt stack 0
 11394                           tosu	equ	0xFFF
 11395                           tosh	equ	0xFFE
 11396                           tosl	equ	0xFFD
 11397                           pclath	equ	0xFFA
 11398                           tblptru	equ	0xFF8
 11399                           tblptrh	equ	0xFF7
 11400                           tblptrl	equ	0xFF6
 11401                           tablat	equ	0xFF5
 11402                           prodh	equ	0xFF4
 11403                           prodl	equ	0xFF3
 11404                           intcon	equ	0xFF2
 11405                           intcon2	equ	0xFF1
 11406                           intcon3	equ	0xFF0
 11407                           indf0	equ	0xFEF
 11408                           postinc0	equ	0xFEE
 11409                           plusw0	equ	0xFEB
 11410                           fsr0h	equ	0xFEA
 11411                           fsr0l	equ	0xFE9
 11412                           wreg	equ	0xFE8
 11413                           postinc1	equ	0xFE6
 11414                           postdec1	equ	0xFE5
 11415                           fsr1h	equ	0xFE2
 11416                           fsr1l	equ	0xFE1
 11417                           indf2	equ	0xFDF
 11418                           postinc2	equ	0xFDE
 11419                           postdec2	equ	0xFDD
 11420                           plusw2	equ	0xFDB
 11421                           fsr2h	equ	0xFDA
 11422                           fsr2l	equ	0xFD9
 11423                           status	equ	0xFD8
 11424                           
 11425 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11426 ;; Defined at:
 11427 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;  event           2   41[BANK0 ] enum E8367
 11430 ;;  pdata           2   43[BANK0 ] PTR void 
 11431 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11432 ;;  size            2   45[BANK0 ] unsigned int 
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      unsigned char 
 11437 ;; Registers used:
 11438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 0/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11444 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11447 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11448 ;;Total ram usage:        8 bytes
 11449 ;; Hardware stack levels used:    1
 11450 ;; Hardware stack levels required when called:   14
 11451 ;; This function calls:
 11452 ;;		_CDCInitEP
 11453 ;;		_USBCheckCDCRequest
 11454 ;; This function is called by:
 11455 ;;		_USBDeviceTasks
 11456 ;;		_USBStdSetCfgHandler
 11457 ;;		_USBSuspend
 11458 ;;		_USBWakeFromSuspend
 11459 ;;		_USBCtrlTrfSetupHandler
 11460 ;;		_USBCheckStdRequest
 11461 ;;		_USBStdFeatureReqHandler
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           
 11465                           	psect	text44
 11466  0059EA                     __ptext44:
 11467                           	opt stack 0
 11468  0059EA                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11469                           	opt stack 12
 11470                           
 11471                           ;usb_device_mgr.c: 106: switch( (int) event )
 11472                           
 11473                           ;incstack = 0
 11474  0059EA  D006               	goto	l2000
 11475  0059EC                     
 11476                           ;usb_device_mgr.c: 134: CDCInitEP();
 11477  0059EC  EC8B  F02B         	call	_CDCInitEP	;wreg free
 11478                           
 11479                           ;usb_device_mgr.c: 142: break;
 11480                           
 11481                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11482                           
 11483                           ;usb_device_mgr.c: 139: break;
 11484  0059F0  0012               	return	
 11485  0059F2                     
 11486                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11487  0059F2  EC92  F023         	call	_USBCheckCDCRequest	;wreg free
 11488                           
 11489                           ;usb_device_mgr.c: 163: }
 11490                           
 11491                           ;usb_device_mgr.c: 162: break;
 11492                           
 11493                           ;usb_device_mgr.c: 161: default:
 11494                           
 11495                           ;usb_device_mgr.c: 159: break;
 11496                           
 11497                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11498                           
 11499                           ;usb_device_mgr.c: 156: break;
 11500                           
 11501                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11502                           
 11503                           ;usb_device_mgr.c: 153: break;
 11504  0059F6  0012               	return	
 11505  0059F8                     l2000:
 11506  0059F8  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11507  0059FC  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11508                           
 11509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11510                           ; Switch size 1, requested type "space"
 11511                           ; Number of cases is 2, Range of values is 0 to 127
 11512                           ; switch strategies available:
 11513                           ; Name         Instructions Cycles
 11514                           ; simple_byte            7     4 (average)
 11515                           ;	Chosen strategy is simple_byte
 11516  005A00  0100               	movlb	0	; () banked
 11517  005A02  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11518  005A04  0A00               	xorlw	0	; case 0
 11519  005A06  B4D8               	btfsc	status,2,c
 11520  005A08  D004               	goto	l17279
 11521  005A0A  0A7F               	xorlw	127	; case 127
 11522  005A0C  A4D8               	btfss	status,2,c
 11523  005A0E  0012               	return	
 11524  005A10  D018               	goto	l17281
 11525  005A12                     l17279:
 11526                           
 11527                           ; BSR set to: 0
 11528                           ; Switch size 1, requested type "space"
 11529                           ; Number of cases is 8, Range of values is 1 to 117
 11530                           ; switch strategies available:
 11531                           ; Name         Instructions Cycles
 11532                           ; simple_byte           25    13 (average)
 11533                           ;	Chosen strategy is simple_byte
 11534  005A12  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11535  005A14  0A01               	xorlw	1	; case 1
 11536  005A16  B4D8               	btfsc	status,2,c
 11537  005A18  D7E9               	goto	l2006
 11538  005A1A  0A03               	xorlw	3	; case 2
 11539  005A1C  B4D8               	btfsc	status,2,c
 11540  005A1E  0012               	return	
 11541  005A20  0A01               	xorlw	1	; case 3
 11542  005A22  B4D8               	btfsc	status,2,c
 11543  005A24  D7E6               	goto	l2008
 11544  005A26  0A06               	xorlw	6	; case 5
 11545  005A28  B4D8               	btfsc	status,2,c
 11546  005A2A  0012               	return	
 11547  005A2C  0A77               	xorlw	119	; case 114
 11548  005A2E  B4D8               	btfsc	status,2,c
 11549  005A30  0012               	return	
 11550  005A32  0A01               	xorlw	1	; case 115
 11551  005A34  B4D8               	btfsc	status,2,c
 11552  005A36  0012               	return	
 11553  005A38  0A07               	xorlw	7	; case 116
 11554  005A3A  B4D8               	btfsc	status,2,c
 11555  005A3C  0012               	return	
 11556  005A3E  0A01               	xorlw	1	; case 117
 11557  005A40  0012               	return	
 11558  005A42                     l17281:
 11559                           
 11560                           ; BSR set to: 0
 11561                           ; Switch size 1, requested type "space"
 11562                           ; Number of cases is 1, Range of values is 255 to 255
 11563                           ; switch strategies available:
 11564                           ; Name         Instructions Cycles
 11565                           ; simple_byte            4     3 (average)
 11566                           ;	Chosen strategy is simple_byte
 11567  005A42  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11568  005A44  0AFF               	xorlw	255	; case 255
 11569  005A46  0012               	return	
 11570  005A48                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11571                           	opt stack 0
 11572                           tosu	equ	0xFFF
 11573                           tosh	equ	0xFFE
 11574                           tosl	equ	0xFFD
 11575                           pclath	equ	0xFFA
 11576                           tblptru	equ	0xFF8
 11577                           tblptrh	equ	0xFF7
 11578                           tblptrl	equ	0xFF6
 11579                           tablat	equ	0xFF5
 11580                           prodh	equ	0xFF4
 11581                           prodl	equ	0xFF3
 11582                           intcon	equ	0xFF2
 11583                           intcon2	equ	0xFF1
 11584                           intcon3	equ	0xFF0
 11585                           indf0	equ	0xFEF
 11586                           postinc0	equ	0xFEE
 11587                           plusw0	equ	0xFEB
 11588                           fsr0h	equ	0xFEA
 11589                           fsr0l	equ	0xFE9
 11590                           wreg	equ	0xFE8
 11591                           postinc1	equ	0xFE6
 11592                           postdec1	equ	0xFE5
 11593                           fsr1h	equ	0xFE2
 11594                           fsr1l	equ	0xFE1
 11595                           indf2	equ	0xFDF
 11596                           postinc2	equ	0xFDE
 11597                           postdec2	equ	0xFDD
 11598                           plusw2	equ	0xFDB
 11599                           fsr2h	equ	0xFDA
 11600                           fsr2l	equ	0xFD9
 11601                           status	equ	0xFD8
 11602                           
 11603 ;; *************** function _USBCheckCDCRequest *****************
 11604 ;; Defined at:
 11605 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11606 ;; Parameters:    Size  Location     Type
 11607 ;;		None
 11608 ;; Auto vars:     Size  Location     Type
 11609 ;;		None
 11610 ;; Return value:  Size  Location     Type
 11611 ;;                  1    wreg      void 
 11612 ;; Registers used:
 11613 ;;		wreg, status,2, status,0
 11614 ;; Tracked objects:
 11615 ;;		On entry : 0/0
 11616 ;;		On exit  : 0/0
 11617 ;;		Unchanged: 0/0
 11618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11623 ;;Total ram usage:        0 bytes
 11624 ;; Hardware stack levels used:    1
 11625 ;; Hardware stack levels required when called:   11
 11626 ;; This function calls:
 11627 ;;		Nothing
 11628 ;; This function is called by:
 11629 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11630 ;; This function uses a non-reentrant model
 11631 ;;
 11632                           
 11633                           	psect	text45
 11634  004724                     __ptext45:
 11635                           	opt stack 0
 11636  004724                     _USBCheckCDCRequest:
 11637                           	opt stack 14
 11638                           
 11639                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11640                           
 11641                           ;incstack = 0
 11642  004724  0104               	movlb	4	; () banked
 11643  004726  5130               	movf	48,w,b	;volatile
 11644  004728  0B1F               	andlw	31
 11645  00472A  06E8               	decf	wreg,f,c
 11646  00472C  A4D8               	btfss	status,2,c
 11647  00472E  0012               	return	
 11648                           
 11649                           ; BSR set to: 4
 11650                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11651                           
 11652                           ; BSR set to: 4
 11653                           
 11654                           ; BSR set to: 4
 11655  004730  3930               	swapf	48,w,b	;volatile
 11656  004732  32E8               	rrcf	wreg,f,c
 11657  004734  0B03               	andlw	3
 11658  004736  06E8               	decf	wreg,f,c
 11659  004738  A4D8               	btfss	status,2,c
 11660  00473A  0012               	return	
 11661                           
 11662                           ; BSR set to: 4
 11663                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11664                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11665                           
 11666                           ; BSR set to: 4
 11667                           
 11668                           ; BSR set to: 4
 11669  00473C  5134               	movf	52,w,b	;volatile
 11670  00473E  B4D8               	btfsc	status,2,c
 11671  004740  D037               	goto	l1902
 11672                           
 11673                           ; BSR set to: 4
 11674  004742  0534               	decf	52,w,b	;volatile
 11675  004744  A4D8               	btfss	status,2,c
 11676  004746  0012               	return	
 11677  004748  D033               	goto	l1902
 11678  00474A                     
 11679                           ; BSR set to: 4
 11680                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11681                           
 11682                           ; BSR set to: 4
 11683  00474A  0E7A               	movlw	low _dummy_encapsulated_cmd_response
 11684  00474C  0100               	movlb	0	; () banked
 11685  00474E  6FB0               	movwf	_inPipes& (0+255),b
 11686  004750  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11687  004752  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11688                           
 11689                           ; BSR set to: 0
 11690                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11691  004754  0E00               	movlw	0
 11692  004756  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11693  004758  0E08               	movlw	8
 11694  00475A  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11695                           
 11696                           ; BSR set to: 0
 11697                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11698  00475C  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11699                           
 11700                           ; BSR set to: 0
 11701                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11702  00475E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11703                           
 11704                           ;usb_device_cdc.c: 178: break;
 11705  004760  0012               	return	
 11706  004762                     
 11707                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11708                           
 11709                           ; BSR set to: 0
 11710  004762  0E7A               	movlw	low _dummy_encapsulated_cmd_response
 11711  004764  0100               	movlb	0	; () banked
 11712  004766  6FB0               	movwf	_inPipes& (0+255),b
 11713  004768  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11714  00476A  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11718  00476C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11719                           
 11720                           ;usb_device_cdc.c: 183: break;
 11721  00476E  0012               	return	
 11722  004770                     l1906:
 11723                           
 11724                           ; BSR set to: 4
 11725                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11726  004770  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11727  004774  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11728                           
 11729                           ; BSR set to: 4
 11730                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11731  004778  0E82               	movlw	low _line_coding
 11732  00477A  0101               	movlb	1	; () banked
 11733  00477C  6FC9               	movwf	_outPipes& (0+255),b
 11734  00477E  0E03               	movlw	high _line_coding
 11735  004780  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11736                           
 11737                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11738  004782  0E00               	movlw	0
 11739  004784  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11740  004786  0E00               	movlw	0
 11741  004788  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11742                           
 11743                           ; BSR set to: 1
 11744                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11745  00478A  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11746                           
 11747                           ;usb_device_cdc.c: 192: break;
 11748  00478C  0012               	return	
 11749  00478E                     
 11750                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11751                           
 11752                           ; BSR set to: 1
 11753  00478E  0E82               	movlw	low _line_coding
 11754  004790  0100               	movlb	0	; () banked
 11755  004792  6FB0               	movwf	_inPipes& (0+255),b
 11756  004794  0E03               	movlw	high _line_coding
 11757  004796  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11758                           
 11759                           ; BSR set to: 0
 11760  004798  0E00               	movlw	0
 11761  00479A  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11762  00479C  0E07               	movlw	7
 11763  00479E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11764                           
 11765                           ; BSR set to: 0
 11766  0047A0  0EC1               	movlw	193
 11767  0047A2  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11768                           
 11769                           ;usb_device_cdc.c: 199: break;
 11770  0047A4  0012               	return	
 11771  0047A6                     l1908:
 11772                           
 11773                           ; BSR set to: 4
 11774                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11775  0047A6  C432 F2EE          	movff	1074,_control_signal_bitmap	;volatile
 11776                           
 11777                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11778  0047AA  0100               	movlb	0	; () banked
 11779  0047AC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11780                           
 11781                           ; BSR set to: 0
 11782                           ;usb_device_cdc.c: 261: }
 11783                           
 11784                           ; BSR set to: 0
 11785                           ;usb_device_cdc.c: 260: break;
 11786                           
 11787                           ;usb_device_cdc.c: 259: default:
 11788                           
 11789                           ;usb_device_cdc.c: 235: break;
 11790  0047AE  0012               	return	
 11791  0047B0                     l1902:
 11792                           
 11793                           ; BSR set to: 0
 11794  0047B0  0104               	movlb	4	; () banked
 11795  0047B2  5131               	movf	49,w,b	;volatile
 11796                           
 11797                           ; Switch size 1, requested type "space"
 11798                           ; Number of cases is 5, Range of values is 0 to 34
 11799                           ; switch strategies available:
 11800                           ; Name         Instructions Cycles
 11801                           ; simple_byte           16     9 (average)
 11802                           ;	Chosen strategy is simple_byte
 11803  0047B4  0A00               	xorlw	0	; case 0
 11804  0047B6  B4D8               	btfsc	status,2,c
 11805  0047B8  D7C8               	goto	l1903
 11806  0047BA  0A01               	xorlw	1	; case 1
 11807  0047BC  B4D8               	btfsc	status,2,c
 11808  0047BE  D7D1               	goto	l1905
 11809  0047C0  0A21               	xorlw	33	; case 32
 11810  0047C2  B4D8               	btfsc	status,2,c
 11811  0047C4  D7D5               	goto	l1906
 11812  0047C6  0A01               	xorlw	1	; case 33
 11813  0047C8  B4D8               	btfsc	status,2,c
 11814  0047CA  D7E1               	goto	l1907
 11815  0047CC  0A03               	xorlw	3	; case 34
 11816  0047CE  A4D8               	btfss	status,2,c
 11817  0047D0  0012               	return	
 11818  0047D2  D7E9               	goto	l1908
 11819  0047D4                     __end_of_USBCheckCDCRequest:
 11820                           	opt stack 0
 11821                           tosu	equ	0xFFF
 11822                           tosh	equ	0xFFE
 11823                           tosl	equ	0xFFD
 11824                           pclath	equ	0xFFA
 11825                           tblptru	equ	0xFF8
 11826                           tblptrh	equ	0xFF7
 11827                           tblptrl	equ	0xFF6
 11828                           tablat	equ	0xFF5
 11829                           prodh	equ	0xFF4
 11830                           prodl	equ	0xFF3
 11831                           intcon	equ	0xFF2
 11832                           intcon2	equ	0xFF1
 11833                           intcon3	equ	0xFF0
 11834                           indf0	equ	0xFEF
 11835                           postinc0	equ	0xFEE
 11836                           plusw0	equ	0xFEB
 11837                           fsr0h	equ	0xFEA
 11838                           fsr0l	equ	0xFE9
 11839                           wreg	equ	0xFE8
 11840                           postinc1	equ	0xFE6
 11841                           postdec1	equ	0xFE5
 11842                           fsr1h	equ	0xFE2
 11843                           fsr1l	equ	0xFE1
 11844                           indf2	equ	0xFDF
 11845                           postinc2	equ	0xFDE
 11846                           postdec2	equ	0xFDD
 11847                           plusw2	equ	0xFDB
 11848                           fsr2h	equ	0xFDA
 11849                           fsr2l	equ	0xFD9
 11850                           status	equ	0xFD8
 11851                           
 11852 ;; *************** function _CDCInitEP *****************
 11853 ;; Defined at:
 11854 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;		None
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;		None
 11859 ;; Return value:  Size  Location     Type
 11860 ;;                  1    wreg      void 
 11861 ;; Registers used:
 11862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11863 ;; Tracked objects:
 11864 ;;		On entry : 0/0
 11865 ;;		On exit  : 0/0
 11866 ;;		Unchanged: 0/0
 11867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11872 ;;Total ram usage:        0 bytes
 11873 ;; Hardware stack levels used:    1
 11874 ;; Hardware stack levels required when called:   13
 11875 ;; This function calls:
 11876 ;;		_USBEnableEndpoint
 11877 ;;		_USBTransferOnePacket
 11878 ;; This function is called by:
 11879 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883                           	psect	text46
 11884  005716                     __ptext46:
 11885                           	opt stack 0
 11886  005716                     _CDCInitEP:
 11887                           	opt stack 12
 11888                           
 11889                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11890                           
 11891                           ;incstack = 0
 11892  005716  0E80               	movlw	128
 11893  005718  0103               	movlb	3	; () banked
 11894  00571A  6F82               	movwf	_line_coding& (0+255),b
 11895  00571C  0E25               	movlw	37
 11896  00571E  6F83               	movwf	(_line_coding+1)& (0+255),b
 11897  005720  0E00               	movlw	0
 11898  005722  6F84               	movwf	(_line_coding+2)& (0+255),b
 11899  005724  0E00               	movlw	0
 11900  005726  6F85               	movwf	(_line_coding+3)& (0+255),b
 11901                           
 11902                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11903  005728  0E00               	movlw	0
 11904  00572A  6F86               	movwf	(_line_coding+4)& (0+255),b
 11905                           
 11906                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11907  00572C  0E00               	movlw	0
 11908  00572E  6F87               	movwf	(_line_coding+5)& (0+255),b
 11909                           
 11910                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11911  005730  0E08               	movlw	8
 11912  005732  6F88               	movwf	(_line_coding+6)& (0+255),b
 11913                           
 11914                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11915  005734  0E00               	movlw	0
 11916  005736  0100               	movlb	0	; () banked
 11917  005738  6FC9               	movwf	_cdc_rx_len& (0+255),b
 11918                           
 11919                           ; BSR set to: 0
 11920                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11921  00573A  0E1A               	movlw	26
 11922  00573C  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11923  00573E  0E01               	movlw	1
 11924  005740  EC46  F031         	call	_USBEnableEndpoint
 11925                           
 11926                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11927  005744  0E1E               	movlw	30
 11928  005746  0100               	movlb	0	; () banked
 11929  005748  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11930  00574A  0E02               	movlw	2
 11931  00574C  EC46  F031         	call	_USBEnableEndpoint
 11932                           
 11933                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11934  005750  0E00               	movlw	0
 11935  005752  0100               	movlb	0	; () banked
 11936  005754  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11937  005756  0E00               	movlw	low _cdc_data_rx
 11938  005758  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11939  00575A  0E05               	movlw	high _cdc_data_rx
 11940  00575C  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11941  00575E  0E40               	movlw	64
 11942  005760  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11943  005762  0E02               	movlw	2
 11944  005764  EC7D  F022         	call	_USBTransferOnePacket
 11945  005768  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11946  00576C  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11947                           
 11948                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11949  005770  0E00               	movlw	0
 11950  005772  0101               	movlb	1	; () banked
 11951  005774  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11952  005776  0E00               	movlw	0
 11953  005778  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11954                           
 11955                           ; BSR set to: 1
 11956                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11957  00577A  0E00               	movlw	0
 11958  00577C  0100               	movlb	0	; () banked
 11959  00577E  6FC8               	movwf	_cdc_trf_state& (0+255),b
 11960                           
 11961                           ; BSR set to: 0
 11962  005780  0012               	return		;funcret
 11963  005782                     __end_of_CDCInitEP:
 11964                           	opt stack 0
 11965                           tosu	equ	0xFFF
 11966                           tosh	equ	0xFFE
 11967                           tosl	equ	0xFFD
 11968                           pclath	equ	0xFFA
 11969                           tblptru	equ	0xFF8
 11970                           tblptrh	equ	0xFF7
 11971                           tblptrl	equ	0xFF6
 11972                           tablat	equ	0xFF5
 11973                           prodh	equ	0xFF4
 11974                           prodl	equ	0xFF3
 11975                           intcon	equ	0xFF2
 11976                           intcon2	equ	0xFF1
 11977                           intcon3	equ	0xFF0
 11978                           indf0	equ	0xFEF
 11979                           postinc0	equ	0xFEE
 11980                           plusw0	equ	0xFEB
 11981                           fsr0h	equ	0xFEA
 11982                           fsr0l	equ	0xFE9
 11983                           wreg	equ	0xFE8
 11984                           postinc1	equ	0xFE6
 11985                           postdec1	equ	0xFE5
 11986                           fsr1h	equ	0xFE2
 11987                           fsr1l	equ	0xFE1
 11988                           indf2	equ	0xFDF
 11989                           postinc2	equ	0xFDE
 11990                           postdec2	equ	0xFDD
 11991                           plusw2	equ	0xFDB
 11992                           fsr2h	equ	0xFDA
 11993                           fsr2l	equ	0xFD9
 11994                           status	equ	0xFD8
 11995                           
 11996 ;; *************** function _USBEnableEndpoint *****************
 11997 ;; Defined at:
 11998 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11999 ;; Parameters:    Size  Location     Type
 12000 ;;  ep              1    wreg     unsigned char 
 12001 ;;  options         1   37[BANK0 ] unsigned char 
 12002 ;; Auto vars:     Size  Location     Type
 12003 ;;  ep              1   40[BANK0 ] unsigned char 
 12004 ;;  p               2   38[BANK0 ] PTR unsigned char 
 12005 ;;		 -> UEP0(1), 
 12006 ;; Return value:  Size  Location     Type
 12007 ;;                  1    wreg      void 
 12008 ;; Registers used:
 12009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12010 ;; Tracked objects:
 12011 ;;		On entry : 0/0
 12012 ;;		On exit  : 0/0
 12013 ;;		Unchanged: 0/0
 12014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12015 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12016 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12018 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12019 ;;Total ram usage:        4 bytes
 12020 ;; Hardware stack levels used:    1
 12021 ;; Hardware stack levels required when called:   12
 12022 ;; This function calls:
 12023 ;;		_USBConfigureEndpoint
 12024 ;; This function is called by:
 12025 ;;		_CDCInitEP
 12026 ;; This function uses a non-reentrant model
 12027 ;;
 12028                           
 12029                           	psect	text47
 12030  00628C                     __ptext47:
 12031                           	opt stack 0
 12032  00628C                     _USBEnableEndpoint:
 12033                           	opt stack 12
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;incstack = 0
 12037                           ;USBEnableEndpoint@ep stored from wreg
 12038  00628C  0100               	movlb	0	; () banked
 12039  00628E  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 12040                           
 12041                           ;usb_device.c: 898: unsigned char* p;
 12042                           ;usb_device.c: 902: if(options & 0x04)
 12043  006290  0100               	movlb	0	; () banked
 12044  006292  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 12045  006294  D005               	goto	l1643
 12046                           
 12047                           ; BSR set to: 0
 12048                           ;usb_device.c: 903: {
 12049                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 12050  006296  0E00               	movlw	0
 12051  006298  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12052  00629A  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12053  00629C  EC7B  F026         	call	_USBConfigureEndpoint
 12054  0062A0                     l1643:
 12055                           
 12056                           ;usb_device.c: 905: }
 12057                           ;usb_device.c: 906: if(options & 0x02)
 12058  0062A0  0100               	movlb	0	; () banked
 12059  0062A2  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 12060  0062A4  D005               	goto	l1644
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;usb_device.c: 907: {
 12064                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 12065  0062A6  0E01               	movlw	1
 12066  0062A8  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12067  0062AA  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12068  0062AC  EC7B  F026         	call	_USBConfigureEndpoint
 12069  0062B0                     l1644:
 12070                           
 12071                           ;usb_device.c: 909: }
 12072                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 12073  0062B0  0100               	movlb	0	; () banked
 12074  0062B2  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12075  0062B4  0D01               	mullw	1
 12076  0062B6  0E26               	movlw	38
 12077  0062B8  24F3               	addwf	prodl,w,c
 12078  0062BA  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 12079  0062BC  0E0F               	movlw	15
 12080  0062BE  20F4               	addwfc	prodh,w,c
 12081  0062C0  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;usb_device.c: 919: *p = options;
 12085  0062C2  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 12086  0062C6  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 12087  0062CA  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 12088                           
 12089                           ; BSR set to: 0
 12090  0062CE  0012               	return		;funcret
 12091  0062D0                     __end_of_USBEnableEndpoint:
 12092                           	opt stack 0
 12093                           tosu	equ	0xFFF
 12094                           tosh	equ	0xFFE
 12095                           tosl	equ	0xFFD
 12096                           pclath	equ	0xFFA
 12097                           tblptru	equ	0xFF8
 12098                           tblptrh	equ	0xFF7
 12099                           tblptrl	equ	0xFF6
 12100                           tablat	equ	0xFF5
 12101                           prodh	equ	0xFF4
 12102                           prodl	equ	0xFF3
 12103                           intcon	equ	0xFF2
 12104                           intcon2	equ	0xFF1
 12105                           intcon3	equ	0xFF0
 12106                           indf0	equ	0xFEF
 12107                           postinc0	equ	0xFEE
 12108                           plusw0	equ	0xFEB
 12109                           fsr0h	equ	0xFEA
 12110                           fsr0l	equ	0xFE9
 12111                           wreg	equ	0xFE8
 12112                           postinc1	equ	0xFE6
 12113                           postdec1	equ	0xFE5
 12114                           fsr1h	equ	0xFE2
 12115                           fsr1l	equ	0xFE1
 12116                           indf2	equ	0xFDF
 12117                           postinc2	equ	0xFDE
 12118                           postdec2	equ	0xFDD
 12119                           plusw2	equ	0xFDB
 12120                           fsr2h	equ	0xFDA
 12121                           fsr2l	equ	0xFD9
 12122                           status	equ	0xFD8
 12123                           
 12124 ;; *************** function _USBConfigureEndpoint *****************
 12125 ;; Defined at:
 12126 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12127 ;; Parameters:    Size  Location     Type
 12128 ;;  EPNum           1    wreg     unsigned char 
 12129 ;;  direction       1   29[BANK0 ] unsigned char 
 12130 ;; Auto vars:     Size  Location     Type
 12131 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12132 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12133 ;;		 -> BDT(48), 
 12134 ;; Return value:  Size  Location     Type
 12135 ;;                  1    wreg      void 
 12136 ;; Registers used:
 12137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12138 ;; Tracked objects:
 12139 ;;		On entry : 0/0
 12140 ;;		On exit  : 0/0
 12141 ;;		Unchanged: 0/0
 12142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12143 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12144 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12145 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12146 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12147 ;;Total ram usage:        8 bytes
 12148 ;; Hardware stack levels used:    1
 12149 ;; Hardware stack levels required when called:   11
 12150 ;; This function calls:
 12151 ;;		Nothing
 12152 ;; This function is called by:
 12153 ;;		_USBEnableEndpoint
 12154 ;; This function uses a non-reentrant model
 12155 ;;
 12156                           
 12157                           	psect	text48
 12158  004CF6                     __ptext48:
 12159                           	opt stack 0
 12160  004CF6                     _USBConfigureEndpoint:
 12161                           	opt stack 12
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;incstack = 0
 12165                           ;USBConfigureEndpoint@EPNum stored from wreg
 12166  004CF6  0100               	movlb	0	; () banked
 12167  004CF8  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12168                           
 12169                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12170                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12171  004CFA  0E00               	movlw	0
 12172  004CFC  0100               	movlb	0	; () banked
 12173  004CFE  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12174  004D00  0E04               	movlw	4
 12175  004D02  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12179  004D04  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12180  004D06  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12181  004D08  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12182  004D0A  90D8               	bcf	status,0,c
 12183  004D0C  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12184  004D0E  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12185  004D10  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12186  004D12  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12187  004D14  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12188  004D16  90D8               	bcf	status,0,c
 12189  004D18  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12190  004D1A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12191  004D1C  90D8               	bcf	status,0,c
 12192  004D1E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12193  004D20  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12194  004D22  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12195  004D24  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12196  004D26  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12197  004D28  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12198  004D2A  90D8               	bcf	status,0,c
 12199  004D2C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12200  004D2E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12201  004D30  90D8               	bcf	status,0,c
 12202  004D32  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12203  004D34  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12204  004D36  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12205  004D38  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12206  004D3A  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12207  004D3C  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12208                           
 12209                           ; BSR set to: 0
 12210                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12211  004D3E  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12212  004D42  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12213  004D46  9EDF               	bcf	indf2,7,c
 12214                           
 12215                           ; BSR set to: 0
 12216                           ;usb_device.c: 1575: if(direction == 0)
 12217  004D48  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12218  004D4A  A4D8               	btfss	status,2,c
 12219  004D4C  D007               	goto	l1679
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;usb_device.c: 1576: {
 12223                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12224  004D4E  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12225  004D50  0D02               	mullw	2
 12226  004D52  0E06               	movlw	low _pBDTEntryOut
 12227  004D54  24F3               	addwf	prodl,w,c
 12228  004D56  6ED9               	movwf	fsr2l,c
 12229  004D58  0E03               	movlw	high _pBDTEntryOut
 12230  004D5A  D006               	goto	L10
 12231  004D5C                     l1679:
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;usb_device.c: 1579: else
 12235                           ;usb_device.c: 1580: {
 12236                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12237                           
 12238                           ; BSR set to: 0
 12239  004D5C  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12240  004D5E  0D02               	mullw	2
 12241  004D60  0EB6               	movlw	low _pBDTEntryIn
 12242  004D62  24F3               	addwf	prodl,w,c
 12243  004D64  6ED9               	movwf	fsr2l,c
 12244  004D66  0E00               	movlw	high _pBDTEntryIn
 12245  004D68                     L10:
 12246  004D68  20F4               	addwfc	prodh,w,c
 12247  004D6A  6EDA               	movwf	fsr2h,c
 12248  004D6C  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12249  004D70  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12250                           
 12251                           ; BSR set to: 0
 12252                           ;usb_device.c: 1582: }
 12253                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12254                           
 12255                           ; BSR set to: 0
 12256  004D74  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12257  004D78  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12258  004D7C  9CDF               	bcf	indf2,6,c
 12259                           
 12260                           ; BSR set to: 0
 12261                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12262  004D7E  EE20 F004          	lfsr	2,4
 12263  004D82  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12264  004D84  26D9               	addwf	fsr2l,f,c
 12265  004D86  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12266  004D88  22DA               	addwfc	fsr2h,f,c
 12267  004D8A  8CDF               	bsf	indf2,6,c
 12268                           
 12269                           ; BSR set to: 0
 12270  004D8C  0012               	return		;funcret
 12271  004D8E                     __end_of_USBConfigureEndpoint:
 12272                           	opt stack 0
 12273                           tosu	equ	0xFFF
 12274                           tosh	equ	0xFFE
 12275                           tosl	equ	0xFFD
 12276                           pclath	equ	0xFFA
 12277                           tblptru	equ	0xFF8
 12278                           tblptrh	equ	0xFF7
 12279                           tblptrl	equ	0xFF6
 12280                           tablat	equ	0xFF5
 12281                           prodh	equ	0xFF4
 12282                           prodl	equ	0xFF3
 12283                           intcon	equ	0xFF2
 12284                           intcon2	equ	0xFF1
 12285                           intcon3	equ	0xFF0
 12286                           indf0	equ	0xFEF
 12287                           postinc0	equ	0xFEE
 12288                           plusw0	equ	0xFEB
 12289                           fsr0h	equ	0xFEA
 12290                           fsr0l	equ	0xFE9
 12291                           wreg	equ	0xFE8
 12292                           postinc1	equ	0xFE6
 12293                           postdec1	equ	0xFE5
 12294                           fsr1h	equ	0xFE2
 12295                           fsr1l	equ	0xFE1
 12296                           indf2	equ	0xFDF
 12297                           postinc2	equ	0xFDE
 12298                           postdec2	equ	0xFDD
 12299                           plusw2	equ	0xFDB
 12300                           fsr2h	equ	0xFDA
 12301                           fsr2l	equ	0xFD9
 12302                           status	equ	0xFD8
 12303                           
 12304 ;; *************** function _USBCtrlTrfOutHandler *****************
 12305 ;; Defined at:
 12306 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12307 ;; Parameters:    Size  Location     Type
 12308 ;;		None
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;		None
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  1    wreg      void 
 12313 ;; Registers used:
 12314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 0/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12324 ;;Total ram usage:        0 bytes
 12325 ;; Hardware stack levels used:    1
 12326 ;; Hardware stack levels required when called:   13
 12327 ;; This function calls:
 12328 ;;		_USBCtrlTrfRxService
 12329 ;; This function is called by:
 12330 ;;		_USBCtrlEPService
 12331 ;; This function uses a non-reentrant model
 12332 ;;
 12333                           
 12334                           	psect	text49
 12335  005856                     __ptext49:
 12336                           	opt stack 0
 12337  005856                     _USBCtrlTrfOutHandler:
 12338                           	opt stack 12
 12339                           
 12340                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12341                           
 12342                           ; BSR set to: 0
 12343                           ;incstack = 0
 12344  005856  0E02               	movlw	2
 12345  005858  0100               	movlb	0	; () banked
 12346  00585A  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12347  00585C  A4D8               	btfss	status,2,c
 12348  00585E  D003               	goto	l1785
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;usb_device.c: 2558: {
 12352                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12353  005860  ECC0  F017         	call	_USBCtrlTrfRxService	;wreg free
 12354                           
 12355                           ;usb_device.c: 2560: }
 12356  005864  0012               	return	
 12357  005866                     l1785:
 12358                           
 12359                           ;usb_device.c: 2561: else
 12360                           ;usb_device.c: 2562: {
 12361                           ;usb_device.c: 2565: controlTransferState = 0;
 12362  005866  0E00               	movlw	0
 12363  005868  0100               	movlb	0	; () banked
 12364  00586A  6FCC               	movwf	_controlTransferState& (0+255),b
 12365                           
 12366                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12367  00586C  0101               	movlb	1	; () banked
 12368  00586E  51DE               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12369  005870  A4D8               	btfss	status,2,c
 12370  005872  D020               	goto	l1787
 12371                           
 12372                           ; BSR set to: 1
 12373                           ;usb_device.c: 2573: {
 12374                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12375  005874  0100               	movlb	0	; () banked
 12376  005876  EE20 F001          	lfsr	2,1
 12377  00587A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12378  00587C  26D9               	addwf	fsr2l,f,c
 12379  00587E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12380  005880  22DA               	addwfc	fsr2h,f,c
 12381  005882  0E08               	movlw	8
 12382  005884  6EDF               	movwf	indf2,c
 12383                           
 12384                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12385  005886  EE20 F002          	lfsr	2,2
 12386  00588A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12387  00588C  26D9               	addwf	fsr2l,f,c
 12388  00588E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12389  005890  22DA               	addwfc	fsr2h,f,c
 12390  005892  0E30               	movlw	48
 12391  005894  6EDE               	movwf	postinc2,c
 12392  005896  0E04               	movlw	4
 12393  005898  6EDD               	movwf	postdec2,c
 12394                           
 12395                           ; BSR set to: 0
 12396                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12397  00589A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12398  00589E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12399  0058A2  0E0C               	movlw	12
 12400  0058A4  6EDF               	movwf	indf2,c
 12401                           
 12402                           ; BSR set to: 0
 12403                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12404  0058A6  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12405  0058AA  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12406  0058AE  0E00               	movlw	0
 12407  0058B0  8EDB               	bsf	plusw2,7,c
 12408                           
 12409                           ;usb_device.c: 2578: }
 12410  0058B2  0012               	return	
 12411  0058B4                     l1787:
 12412                           
 12413                           ;usb_device.c: 2579: else
 12414                           ;usb_device.c: 2580: {
 12415                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12416                           
 12417                           ; BSR set to: 0
 12418  0058B4  0E00               	movlw	0
 12419  0058B6  0101               	movlb	1	; () banked
 12420  0058B8  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12421                           
 12422                           ; BSR set to: 1
 12423  0058BA  0012               	return	
 12424  0058BC                     __end_of_USBCtrlTrfOutHandler:
 12425                           	opt stack 0
 12426                           tosu	equ	0xFFF
 12427                           tosh	equ	0xFFE
 12428                           tosl	equ	0xFFD
 12429                           pclath	equ	0xFFA
 12430                           tblptru	equ	0xFF8
 12431                           tblptrh	equ	0xFF7
 12432                           tblptrl	equ	0xFF6
 12433                           tablat	equ	0xFF5
 12434                           prodh	equ	0xFF4
 12435                           prodl	equ	0xFF3
 12436                           intcon	equ	0xFF2
 12437                           intcon2	equ	0xFF1
 12438                           intcon3	equ	0xFF0
 12439                           indf0	equ	0xFEF
 12440                           postinc0	equ	0xFEE
 12441                           plusw0	equ	0xFEB
 12442                           fsr0h	equ	0xFEA
 12443                           fsr0l	equ	0xFE9
 12444                           wreg	equ	0xFE8
 12445                           postinc1	equ	0xFE6
 12446                           postdec1	equ	0xFE5
 12447                           fsr1h	equ	0xFE2
 12448                           fsr1l	equ	0xFE1
 12449                           indf2	equ	0xFDF
 12450                           postinc2	equ	0xFDE
 12451                           postdec2	equ	0xFDD
 12452                           plusw2	equ	0xFDB
 12453                           fsr2h	equ	0xFDA
 12454                           fsr2l	equ	0xFD9
 12455                           status	equ	0xFD8
 12456                           
 12457 ;; *************** function _USBCtrlTrfRxService *****************
 12458 ;; Defined at:
 12459 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;		None
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12464 ;;  i               1   29[BANK0 ] unsigned char 
 12465 ;; Return value:  Size  Location     Type
 12466 ;;                  1    wreg      void 
 12467 ;; Registers used:
 12468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12469 ;; Tracked objects:
 12470 ;;		On entry : 0/0
 12471 ;;		On exit  : 0/0
 12472 ;;		Unchanged: 0/0
 12473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12475 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12477 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12478 ;;Total ram usage:        2 bytes
 12479 ;; Hardware stack levels used:    1
 12480 ;; Hardware stack levels required when called:   12
 12481 ;; This function calls:
 12482 ;;		_USBCtrlEPAllowStatusStage
 12483 ;; This function is called by:
 12484 ;;		_USBCtrlTrfOutHandler
 12485 ;; This function uses a non-reentrant model
 12486 ;;
 12487                           
 12488                           	psect	text50
 12489  002F80                     __ptext50:
 12490                           	opt stack 0
 12491  002F80                     _USBCtrlTrfRxService:
 12492                           	opt stack 12
 12493                           
 12494                           ;usb_device.c: 1872: uint8_t byteToRead;
 12495                           ;usb_device.c: 1873: uint8_t i;
 12496                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12497                           
 12498                           ;incstack = 0
 12499  002F80  0100               	movlb	0	; () banked
 12500  002F82  EE20 F001          	lfsr	2,1
 12501  002F86  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12502  002F88  26D9               	addwf	fsr2l,f,c
 12503  002F8A  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12504  002F8C  22DA               	addwfc	fsr2h,f,c
 12505  002F8E  50DF               	movf	indf2,w,c
 12506  002F90  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12510  002F92  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12511  002F94  0101               	movlb	1	; () banked
 12512  002F96  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12513  002F98  0E00               	movlw	0
 12514  002F9A  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12515  002F9C  A0D8               	btfss	status,0,c
 12516                           
 12517                           ; BSR set to: 1
 12518                           ;usb_device.c: 1884: {
 12519                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12520  002F9E  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12521                           
 12522                           ; BSR set to: 1
 12523                           ;usb_device.c: 1886: }
 12524                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12525                           
 12526                           ; BSR set to: 1
 12527  002FA2  0100               	movlb	0	; () banked
 12528  002FA4  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12529  002FA6  0101               	movlb	1	; () banked
 12530  002FA8  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12531  002FAA  0E00               	movlw	0
 12532  002FAC  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12533                           
 12534                           ; BSR set to: 1
 12535                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12536  002FAE  0E00               	movlw	0
 12537  002FB0  0100               	movlb	0	; () banked
 12538  002FB2  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12539  002FB4  D013               	goto	l1713
 12540  002FB6                     
 12541                           ; BSR set to: 0
 12542                           ;usb_device.c: 1893: {
 12543                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12544                           
 12545                           ; BSR set to: 0
 12546  002FB6  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12547  002FB8  0D01               	mullw	1
 12548  002FBA  0E38               	movlw	56
 12549  002FBC  24F3               	addwf	prodl,w,c
 12550  002FBE  6ED9               	movwf	fsr2l,c
 12551  002FC0  0E04               	movlw	4
 12552  002FC2  20F4               	addwfc	prodh,w,c
 12553  002FC4  6EDA               	movwf	fsr2h,c
 12554  002FC6  C1C9  FFE1         	movff	_outPipes,fsr1l
 12555  002FCA  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12556  002FCE  CFDF FFE7          	movff	indf2,indf1
 12557                           
 12558                           ; BSR set to: 0
 12559  002FD2  0101               	movlb	1	; () banked
 12560  002FD4  4BC9               	infsnz	_outPipes& (0+255),f,b
 12561  002FD6  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12562                           
 12563                           ; BSR set to: 1
 12564  002FD8  0100               	movlb	0	; () banked
 12565  002FDA  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12566  002FDC                     l1713:
 12567                           
 12568                           ; BSR set to: 0
 12569                           
 12570                           ; BSR set to: 0
 12571  002FDC  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12572  002FDE  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12573  002FE0  A0D8               	btfss	status,0,c
 12574  002FE2  D7E9               	goto	l1714
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;usb_device.c: 1895: }
 12578                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12579                           
 12580                           ; BSR set to: 0
 12581  002FE4  0101               	movlb	1	; () banked
 12582  002FE6  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12583  002FE8  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12584  002FEA  B4D8               	btfsc	status,2,c
 12585  002FEC  D033               	goto	l1716
 12586                           
 12587                           ; BSR set to: 1
 12588                           ;usb_device.c: 1900: {
 12589                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12590  002FEE  0100               	movlb	0	; () banked
 12591  002FF0  EE20 F001          	lfsr	2,1
 12592  002FF4  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12593  002FF6  26D9               	addwf	fsr2l,f,c
 12594  002FF8  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12595  002FFA  22DA               	addwfc	fsr2h,f,c
 12596  002FFC  0E08               	movlw	8
 12597  002FFE  6EDF               	movwf	indf2,c
 12598                           
 12599                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12600  003000  EE20 F002          	lfsr	2,2
 12601  003004  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12602  003006  26D9               	addwf	fsr2l,f,c
 12603  003008  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12604  00300A  22DA               	addwfc	fsr2h,f,c
 12605  00300C  0E38               	movlw	56
 12606  00300E  6EDE               	movwf	postinc2,c
 12607  003010  0E04               	movlw	4
 12608  003012  6EDD               	movwf	postdec2,c
 12609                           
 12610                           ; BSR set to: 0
 12611                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12612  003014  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12613  003018  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12614  00301C  BCDF               	btfsc	indf2,6,c
 12615  00301E  D00D               	goto	l1717
 12616                           
 12617                           ; BSR set to: 0
 12618                           ;usb_device.c: 1904: {
 12619                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12620  003020  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12621  003024  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12622  003028  0E48               	movlw	72
 12623  00302A  6EDF               	movwf	indf2,c
 12624                           
 12625                           ; BSR set to: 0
 12626                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12627  00302C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12628  003030  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12629  003034  0E00               	movlw	0
 12630  003036  8EDB               	bsf	plusw2,7,c
 12631                           
 12632                           ;usb_device.c: 1907: }
 12633  003038  0012               	return	
 12634  00303A                     l1717:
 12635                           
 12636                           ; BSR set to: 0
 12637                           ;usb_device.c: 1908: else
 12638                           ;usb_device.c: 1909: {
 12639                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12640                           
 12641                           ; BSR set to: 0
 12642  00303A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12643  00303E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12644  003042  0E08               	movlw	8
 12645  003044  6EDF               	movwf	indf2,c
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12649  003046  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12650  00304A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12651  00304E  0E00               	movlw	0
 12652  003050  8EDB               	bsf	plusw2,7,c
 12653                           
 12654                           ; BSR set to: 0
 12655                           ;usb_device.c: 1912: }
 12656                           ;usb_device.c: 1913: }
 12657  003052  0012               	return	
 12658  003054                     l1716:
 12659                           
 12660                           ;usb_device.c: 1914: else
 12661                           ;usb_device.c: 1915: {
 12662                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12663                           
 12664                           ; BSR set to: 0
 12665  003054  0100               	movlb	0	; () banked
 12666  003056  EE20 F001          	lfsr	2,1
 12667  00305A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12668  00305C  26D9               	addwf	fsr2l,f,c
 12669  00305E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12670  003060  22DA               	addwfc	fsr2h,f,c
 12671  003062  0E08               	movlw	8
 12672  003064  6EDF               	movwf	indf2,c
 12673                           
 12674                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12675  003066  EE20 F002          	lfsr	2,2
 12676  00306A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12677  00306C  26D9               	addwf	fsr2l,f,c
 12678  00306E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12679  003070  22DA               	addwfc	fsr2h,f,c
 12680  003072  0E30               	movlw	48
 12681  003074  6EDE               	movwf	postinc2,c
 12682  003076  0E04               	movlw	4
 12683  003078  6EDD               	movwf	postdec2,c
 12684                           
 12685                           ; BSR set to: 0
 12686                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12687  00307A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12688  00307E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12689  003082  0E04               	movlw	4
 12690  003084  6EDF               	movwf	indf2,c
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12694  003086  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12695  00308A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12696  00308E  0E00               	movlw	0
 12697  003090  8EDB               	bsf	plusw2,7,c
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;usb_device.c: 1944: }
 12701                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12702                           
 12703                           ; BSR set to: 0
 12704  003092  0101               	movlb	1	; () banked
 12705  003094  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12706                           
 12707                           ; BSR set to: 1
 12708                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12709  003096  0100               	movlb	0	; () banked
 12710  003098  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12711  00309A  A4D8               	btfss	status,2,c
 12712  00309C  0012               	return	
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;usb_device.c: 1960: {
 12716                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12717  00309E  EC63  F01F         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12718  0030A2  0012               	return	
 12719  0030A4                     __end_of_USBCtrlTrfRxService:
 12720                           	opt stack 0
 12721                           tosu	equ	0xFFF
 12722                           tosh	equ	0xFFE
 12723                           tosl	equ	0xFFD
 12724                           pclath	equ	0xFFA
 12725                           tblptru	equ	0xFF8
 12726                           tblptrh	equ	0xFF7
 12727                           tblptrl	equ	0xFF6
 12728                           tablat	equ	0xFF5
 12729                           prodh	equ	0xFF4
 12730                           prodl	equ	0xFF3
 12731                           intcon	equ	0xFF2
 12732                           intcon2	equ	0xFF1
 12733                           intcon3	equ	0xFF0
 12734                           indf0	equ	0xFEF
 12735                           postinc0	equ	0xFEE
 12736                           plusw0	equ	0xFEB
 12737                           fsr0h	equ	0xFEA
 12738                           fsr0l	equ	0xFE9
 12739                           wreg	equ	0xFE8
 12740                           indf1	equ	0xFE7
 12741                           postinc1	equ	0xFE6
 12742                           postdec1	equ	0xFE5
 12743                           fsr1h	equ	0xFE2
 12744                           fsr1l	equ	0xFE1
 12745                           indf2	equ	0xFDF
 12746                           postinc2	equ	0xFDE
 12747                           postdec2	equ	0xFDD
 12748                           plusw2	equ	0xFDB
 12749                           fsr2h	equ	0xFDA
 12750                           fsr2l	equ	0xFD9
 12751                           status	equ	0xFD8
 12752                           
 12753 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12754 ;; Defined at:
 12755 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12756 ;; Parameters:    Size  Location     Type
 12757 ;;		None
 12758 ;; Auto vars:     Size  Location     Type
 12759 ;;		None
 12760 ;; Return value:  Size  Location     Type
 12761 ;;                  1    wreg      void 
 12762 ;; Registers used:
 12763 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12764 ;; Tracked objects:
 12765 ;;		On entry : 0/0
 12766 ;;		On exit  : 0/0
 12767 ;;		Unchanged: 0/0
 12768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12773 ;;Total ram usage:        0 bytes
 12774 ;; Hardware stack levels used:    1
 12775 ;; Hardware stack levels required when called:   11
 12776 ;; This function calls:
 12777 ;;		Nothing
 12778 ;; This function is called by:
 12779 ;;		_USBDeviceTasks
 12780 ;;		_USBCtrlEPServiceComplete
 12781 ;;		_USBCtrlTrfRxService
 12782 ;; This function uses a non-reentrant model
 12783 ;;
 12784                           
 12785                           	psect	text51
 12786  003EC6                     __ptext51:
 12787                           	opt stack 0
 12788  003EC6                     _USBCtrlEPAllowStatusStage:
 12789                           	opt stack 12
 12790                           
 12791                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12792                           
 12793                           ;incstack = 0
 12794  003EC6  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12795  003EC8  A4D8               	btfss	status,2,c
 12796  003ECA  0012               	return	
 12797                           
 12798                           ;usb_device.c: 1442: {
 12799                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12800  003ECC  0E01               	movlw	1
 12801  003ECE  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12802                           
 12803                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12804  003ED0  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12805  003ED2  A4D8               	btfss	status,2,c
 12806  003ED4  0012               	return	
 12807                           
 12808                           ;usb_device.c: 1445: {
 12809                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12810  003ED6  0E01               	movlw	1
 12811  003ED8  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12812                           
 12813                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12814  003EDA  0E02               	movlw	2
 12815  003EDC  0100               	movlb	0	; () banked
 12816  003EDE  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12817  003EE0  A4D8               	btfss	status,2,c
 12818  003EE2  D015               	goto	l1667
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;usb_device.c: 1451: {
 12822                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12823  003EE4  EE20 F001          	lfsr	2,1
 12824  003EE8  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12825  003EEA  26D9               	addwf	fsr2l,f,c
 12826  003EEC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12827  003EEE  22DA               	addwfc	fsr2h,f,c
 12828  003EF0  0E00               	movlw	0
 12829  003EF2  6EDF               	movwf	indf2,c
 12830                           
 12831                           ; BSR set to: 0
 12832                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12833  003EF4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12834  003EF8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12835  003EFC  0E48               	movlw	72
 12836  003EFE  6EDF               	movwf	indf2,c
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12840  003F00  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12841  003F04  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12842  003F08  0E00               	movlw	0
 12843  003F0A  8EDB               	bsf	plusw2,7,c
 12844                           
 12845                           ;usb_device.c: 1455: }
 12846  003F0C  0012               	return	
 12847  003F0E                     l1667:
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12851                           
 12852                           ; BSR set to: 0
 12853  003F0E  05CC               	decf	_controlTransferState& (0+255),w,b
 12854  003F10  A4D8               	btfss	status,2,c
 12855  003F12  0012               	return	
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;usb_device.c: 1457: {
 12859                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12860  003F14  0E00               	movlw	0
 12861  003F16  0101               	movlb	1	; () banked
 12862  003F18  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12863                           
 12864                           ; BSR set to: 1
 12865                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12866  003F1A  0100               	movlb	0	; () banked
 12867  003F1C  EE20 F001          	lfsr	2,1
 12868  003F20  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12869  003F22  26D9               	addwf	fsr2l,f,c
 12870  003F24  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12871  003F26  22DA               	addwfc	fsr2h,f,c
 12872  003F28  0E08               	movlw	8
 12873  003F2A  6EDF               	movwf	indf2,c
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12877  003F2C  EE20 F002          	lfsr	2,2
 12878  003F30  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12879  003F32  26D9               	addwf	fsr2l,f,c
 12880  003F34  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12881  003F36  22DA               	addwfc	fsr2h,f,c
 12882  003F38  0E30               	movlw	48
 12883  003F3A  6EDE               	movwf	postinc2,c
 12884  003F3C  0E04               	movlw	4
 12885  003F3E  6EDD               	movwf	postdec2,c
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12889  003F40  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12890  003F44  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12891  003F48  0E04               	movlw	4
 12892  003F4A  6EDF               	movwf	indf2,c
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12896  003F4C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12897  003F50  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12898  003F54  0E00               	movlw	0
 12899  003F56  8EDB               	bsf	plusw2,7,c
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12903  003F58  0E01               	movlw	1
 12904  003F5A  0101               	movlb	1	; () banked
 12905  003F5C  6FDE               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12906                           
 12907                           ; BSR set to: 1
 12908                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12909  003F5E  0100               	movlb	0	; () banked
 12910  003F60  EE20 F001          	lfsr	2,1
 12911  003F64  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12912  003F66  26D9               	addwf	fsr2l,f,c
 12913  003F68  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12914  003F6A  22DA               	addwfc	fsr2h,f,c
 12915  003F6C  0E08               	movlw	8
 12916  003F6E  6EDF               	movwf	indf2,c
 12917                           
 12918                           ; BSR set to: 0
 12919                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12920  003F70  EE20 F002          	lfsr	2,2
 12921  003F74  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12922  003F76  26D9               	addwf	fsr2l,f,c
 12923  003F78  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12924  003F7A  22DA               	addwfc	fsr2h,f,c
 12925  003F7C  0E30               	movlw	48
 12926  003F7E  6EDE               	movwf	postinc2,c
 12927  003F80  0E04               	movlw	4
 12928  003F82  6EDD               	movwf	postdec2,c
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12932  003F84  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12933  003F88  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12934  003F8C  0E80               	movlw	128
 12935  003F8E  6EDF               	movwf	indf2,c
 12936                           
 12937                           ; BSR set to: 0
 12938                           
 12939                           ; BSR set to: 0
 12940                           
 12941                           ; BSR set to: 0
 12942  003F90  0012               	return	
 12943  003F92                     __end_of_USBCtrlEPAllowStatusStage:
 12944                           	opt stack 0
 12945                           tosu	equ	0xFFF
 12946                           tosh	equ	0xFFE
 12947                           tosl	equ	0xFFD
 12948                           pclath	equ	0xFFA
 12949                           tblptru	equ	0xFF8
 12950                           tblptrh	equ	0xFF7
 12951                           tblptrl	equ	0xFF6
 12952                           tablat	equ	0xFF5
 12953                           prodh	equ	0xFF4
 12954                           prodl	equ	0xFF3
 12955                           intcon	equ	0xFF2
 12956                           intcon2	equ	0xFF1
 12957                           intcon3	equ	0xFF0
 12958                           indf0	equ	0xFEF
 12959                           postinc0	equ	0xFEE
 12960                           plusw0	equ	0xFEB
 12961                           fsr0h	equ	0xFEA
 12962                           fsr0l	equ	0xFE9
 12963                           wreg	equ	0xFE8
 12964                           indf1	equ	0xFE7
 12965                           postinc1	equ	0xFE6
 12966                           postdec1	equ	0xFE5
 12967                           fsr1h	equ	0xFE2
 12968                           fsr1l	equ	0xFE1
 12969                           indf2	equ	0xFDF
 12970                           postinc2	equ	0xFDE
 12971                           postdec2	equ	0xFDD
 12972                           plusw2	equ	0xFDB
 12973                           fsr2h	equ	0xFDA
 12974                           fsr2l	equ	0xFD9
 12975                           status	equ	0xFD8
 12976                           
 12977 ;; *************** function _USBCtrlTrfInHandler *****************
 12978 ;; Defined at:
 12979 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;		None
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  1    wreg      void 
 12986 ;; Registers used:
 12987 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12988 ;; Tracked objects:
 12989 ;;		On entry : 0/0
 12990 ;;		On exit  : 0/0
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12994 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12996 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12997 ;;Total ram usage:        1 bytes
 12998 ;; Hardware stack levels used:    1
 12999 ;; Hardware stack levels required when called:   12
 13000 ;; This function calls:
 13001 ;;		_USBCtrlTrfTxService
 13002 ;; This function is called by:
 13003 ;;		_USBCtrlEPService
 13004 ;; This function uses a non-reentrant model
 13005 ;;
 13006                           
 13007                           	psect	text52
 13008  004378                     __ptext52:
 13009                           	opt stack 0
 13010  004378                     _USBCtrlTrfInHandler:
 13011                           	opt stack 13
 13012                           
 13013                           ;usb_device.c: 2611: uint8_t lastDTS;
 13014                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13015                           
 13016                           ;incstack = 0
 13017  004378  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13018  00437C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13019  004380  0100               	movlb	0	; () banked
 13020  004382  0E00               	movlw	0
 13021  004384  BCDF               	btfsc	indf2,6,c
 13022  004386  0E01               	movlw	1
 13023  004388  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13027  00438A  0E04               	movlw	4
 13028  00438C  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 13032  00438E  0E08               	movlw	8
 13033  004390  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 13034  004392  A4D8               	btfss	status,2,c
 13035  004394  D00D               	goto	l1794
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;usb_device.c: 2622: {
 13039                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 13040  004396  0104               	movlb	4	; () banked
 13041  004398  5132               	movf	50,w,b	;volatile
 13042  00439A  0B7F               	andlw	127
 13043  00439C  010F               	movlb	15	; () banked
 13044  00439E  6F38               	movwf	56,b	;volatile
 13045                           
 13046                           ; BSR set to: 15
 13047                           ;usb_device.c: 2624: if(UADDR != 0u)
 13048  0043A0  5138               	movf	56,w,b	;volatile
 13049  0043A2  B4D8               	btfsc	status,2,c
 13050  0043A4  D002               	goto	l1793
 13051                           
 13052                           ; BSR set to: 15
 13053                           ;usb_device.c: 2625: {
 13054                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 13055  0043A6  0E10               	movlw	16
 13056  0043A8  D001               	goto	L11
 13057  0043AA                     l1793:
 13058                           
 13059                           ;usb_device.c: 2628: else
 13060                           ;usb_device.c: 2629: {
 13061                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 13062                           
 13063                           ; BSR set to: 0
 13064  0043AA  0E04               	movlw	4
 13065  0043AC                     L11:
 13066  0043AC  0100               	movlb	0	; () banked
 13067  0043AE  6FCE               	movwf	_USBDeviceState& (0+255),b
 13068  0043B0                     l1794:
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;usb_device.c: 2631: }
 13072                           ;usb_device.c: 2632: }
 13073                           ;usb_device.c: 2635: if(controlTransferState == 1)
 13074                           
 13075                           ; BSR set to: 0
 13076                           
 13077                           ; BSR set to: 0
 13078  0043B0  05CC               	decf	_controlTransferState& (0+255),w,b
 13079  0043B2  A4D8               	btfss	status,2,c
 13080  0043B4  D03B               	goto	l1795
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;usb_device.c: 2636: {
 13084                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 13085  0043B6  EE20 F002          	lfsr	2,2
 13086  0043BA  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13087  0043BC  26D9               	addwf	fsr2l,f,c
 13088  0043BE  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13089  0043C0  22DA               	addwfc	fsr2h,f,c
 13090  0043C2  0E38               	movlw	56
 13091  0043C4  6EDE               	movwf	postinc2,c
 13092  0043C6  0E04               	movlw	4
 13093  0043C8  6EDD               	movwf	postdec2,c
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13097  0043CA  EC13  F01C         	call	_USBCtrlTrfTxService	;wreg free
 13098                           
 13099                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13100  0043CE  0E02               	movlw	2
 13101  0043D0  0100               	movlb	0	; () banked
 13102  0043D2  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 13103  0043D4  A4D8               	btfss	status,2,c
 13104  0043D6  D00D               	goto	l1796
 13105                           
 13106                           ; BSR set to: 0
 13107                           ;usb_device.c: 2645: {
 13108                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13109  0043D8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13110  0043DC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13111  0043E0  0E04               	movlw	4
 13112  0043E2  6EDF               	movwf	indf2,c
 13113                           
 13114                           ; BSR set to: 0
 13115                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13116  0043E4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13117  0043E8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13118  0043EC  0E00               	movlw	0
 13119  0043EE  8EDB               	bsf	plusw2,7,c
 13120                           
 13121                           ;usb_device.c: 2650: }
 13122  0043F0  0012               	return	
 13123  0043F2                     l1796:
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;usb_device.c: 2651: else
 13127                           ;usb_device.c: 2652: {
 13128                           ;usb_device.c: 2653: if(lastDTS == 0)
 13129                           
 13130                           ; BSR set to: 0
 13131  0043F2  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13132  0043F4  A4D8               	btfss	status,2,c
 13133  0043F6  D00D               	goto	l1798
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;usb_device.c: 2654: {
 13137                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13138  0043F8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13139  0043FC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13140  004400  0E48               	movlw	72
 13141  004402  6EDF               	movwf	indf2,c
 13142                           
 13143                           ; BSR set to: 0
 13144                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13145  004404  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13146  004408  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13147  00440C  0E00               	movlw	0
 13148  00440E  8EDB               	bsf	plusw2,7,c
 13149                           
 13150                           ;usb_device.c: 2657: }
 13151  004410  0012               	return	
 13152  004412                     l1798:
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;usb_device.c: 2658: else
 13156                           ;usb_device.c: 2659: {
 13157                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13158                           
 13159                           ; BSR set to: 0
 13160  004412  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13161  004416  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13162  00441A  0E08               	movlw	8
 13163  00441C  6EDF               	movwf	indf2,c
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13167  00441E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13168  004422  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13169  004426  0E00               	movlw	0
 13170  004428  8EDB               	bsf	plusw2,7,c
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;usb_device.c: 2662: }
 13174                           ;usb_device.c: 2663: }
 13175                           ;usb_device.c: 2664: }
 13176                           
 13177                           ; BSR set to: 0
 13178  00442A  0012               	return	
 13179  00442C                     l1795:
 13180                           
 13181                           ; BSR set to: 0
 13182                           ;usb_device.c: 2665: else
 13183                           ;usb_device.c: 2666: {
 13184                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13185  00442C  0101               	movlb	1	; () banked
 13186  00442E  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13187                           
 13188                           ; BSR set to: 1
 13189                           ;usb_device.c: 2675: }
 13190                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13191                           
 13192                           ; BSR set to: 1
 13193  004430  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13194                           
 13195                           ; BSR set to: 1
 13196                           ;usb_device.c: 2677: }
 13197                           ;usb_device.c: 2679: controlTransferState = 0;
 13198                           
 13199                           ; BSR set to: 1
 13200  004432  0E00               	movlw	0
 13201  004434  0100               	movlb	0	; () banked
 13202  004436  6FCC               	movwf	_controlTransferState& (0+255),b
 13203  004438  0012               	return	
 13204  00443A                     __end_of_USBCtrlTrfInHandler:
 13205                           	opt stack 0
 13206                           tosu	equ	0xFFF
 13207                           tosh	equ	0xFFE
 13208                           tosl	equ	0xFFD
 13209                           pclath	equ	0xFFA
 13210                           tblptru	equ	0xFF8
 13211                           tblptrh	equ	0xFF7
 13212                           tblptrl	equ	0xFF6
 13213                           tablat	equ	0xFF5
 13214                           prodh	equ	0xFF4
 13215                           prodl	equ	0xFF3
 13216                           intcon	equ	0xFF2
 13217                           intcon2	equ	0xFF1
 13218                           intcon3	equ	0xFF0
 13219                           indf0	equ	0xFEF
 13220                           postinc0	equ	0xFEE
 13221                           plusw0	equ	0xFEB
 13222                           fsr0h	equ	0xFEA
 13223                           fsr0l	equ	0xFE9
 13224                           wreg	equ	0xFE8
 13225                           indf1	equ	0xFE7
 13226                           postinc1	equ	0xFE6
 13227                           postdec1	equ	0xFE5
 13228                           fsr1h	equ	0xFE2
 13229                           fsr1l	equ	0xFE1
 13230                           indf2	equ	0xFDF
 13231                           postinc2	equ	0xFDE
 13232                           postdec2	equ	0xFDD
 13233                           plusw2	equ	0xFDB
 13234                           fsr2h	equ	0xFDA
 13235                           fsr2l	equ	0xFD9
 13236                           status	equ	0xFD8
 13237                           
 13238 ;; *************** function _USBCtrlTrfTxService *****************
 13239 ;; Defined at:
 13240 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13241 ;; Parameters:    Size  Location     Type
 13242 ;;		None
 13243 ;; Auto vars:     Size  Location     Type
 13244 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13245 ;; Return value:  Size  Location     Type
 13246 ;;                  1    wreg      void 
 13247 ;; Registers used:
 13248 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13249 ;; Tracked objects:
 13250 ;;		On entry : 0/0
 13251 ;;		On exit  : 0/0
 13252 ;;		Unchanged: 0/0
 13253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13257 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13258 ;;Total ram usage:        1 bytes
 13259 ;; Hardware stack levels used:    1
 13260 ;; Hardware stack levels required when called:   11
 13261 ;; This function calls:
 13262 ;;		Nothing
 13263 ;; This function is called by:
 13264 ;;		_USBCtrlEPAllowDataStage
 13265 ;;		_USBCtrlTrfInHandler
 13266 ;; This function uses a non-reentrant model
 13267 ;;
 13268                           
 13269                           	psect	text53
 13270  003826                     __ptext53:
 13271                           	opt stack 0
 13272  003826                     _USBCtrlTrfTxService:
 13273                           	opt stack 11
 13274                           
 13275                           ;usb_device.c: 1791: uint8_t byteToSend;
 13276                           ;usb_device.c: 1795: byteToSend = 8;
 13277                           
 13278                           ; BSR set to: 0
 13279                           ;incstack = 0
 13280  003826  0E08               	movlw	8
 13281  003828  0100               	movlb	0	; () banked
 13282  00382A  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13283                           
 13284                           ; BSR set to: 0
 13285                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13286  00382C  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13287  00382E  E110               	bnz	l13271
 13288  003830  0E08               	movlw	8
 13289  003832  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13290  003834  B0D8               	btfsc	status,0,c
 13291  003836  D00C               	goto	l1700
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;usb_device.c: 1797: {
 13295                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13296  003838  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13297                           
 13298                           ; BSR set to: 0
 13299                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13300  00383C  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13301  00383E  A4D8               	btfss	status,2,c
 13302  003840  D002               	goto	l1698
 13303                           
 13304                           ; BSR set to: 0
 13305                           ;usb_device.c: 1806: {
 13306                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13307  003842  0E01               	movlw	1
 13308  003844  D004               	goto	L12
 13309  003846                     l1698:
 13310                           
 13311                           ; BSR set to: 0
 13312                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13313                           
 13314                           ; BSR set to: 0
 13315  003846  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13316  003848  A4D8               	btfss	status,2,c
 13317  00384A  D002               	goto	l1700
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;usb_device.c: 1810: {
 13321                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13322  00384C  0E02               	movlw	2
 13323  00384E                     L12:
 13324  00384E  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13325  003850                     l1700:
 13326  003850                     l13271:
 13327                           
 13328                           ; BSR set to: 0
 13329                           ;usb_device.c: 1812: }
 13330                           ;usb_device.c: 1813: }
 13331                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13332  003850  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13333  003852  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13334  003854  0E00               	movlw	0
 13335  003856  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13336                           
 13337                           ; BSR set to: 0
 13338                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13339  003858  EE20 F001          	lfsr	2,1
 13340  00385C  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13341  00385E  26D9               	addwf	fsr2l,f,c
 13342  003860  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13343  003862  22DA               	addwfc	fsr2h,f,c
 13344  003864  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13345                           
 13346                           ; BSR set to: 0
 13347                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13348  003868  0E38               	movlw	56
 13349  00386A  0102               	movlb	2	; () banked
 13350  00386C  6FD5               	movwf	_pDst& (0+255),b
 13351  00386E  0E04               	movlw	4
 13352  003870  6FD6               	movwf	(_pDst+1)& (0+255),b
 13353                           
 13354                           ; BSR set to: 2
 13355                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13356  003872  0100               	movlb	0	; () banked
 13357  003874  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13358  003876  D01E               	goto	l1702
 13359  003878  D03E               	goto	l1706
 13360  00387A                     
 13361                           ; BSR set to: 0
 13362                           ;usb_device.c: 1830: {
 13363                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13364                           
 13365                           ; BSR set to: 0
 13366  00387A  C0B0  FFF6         	movff	_inPipes,tblptrl
 13367  00387E  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13368  003882  6AF8               	clrf	tblptru,c
 13369  003884  C2D5  FFD9         	movff	_pDst,fsr2l
 13370  003888  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13371  00388C  0E0E               	movlw	(high __ramtop+-1)
 13372  00388E  64F7               	cpfsgt	tblptrh,c
 13373  003890  D003               	bra	u11817
 13374  003892  0008               	tblrd		*
 13375  003894  50F5               	movf	tablat,w,c
 13376  003896  D005               	bra	u11810
 13377  003898                     u11817:
 13378  003898  CFF6 FFE9          	movff	tblptrl,fsr0l
 13379  00389C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13380  0038A0  50EF               	movf	indf0,w,c
 13381  0038A2                     u11810:
 13382  0038A2  6EDF               	movwf	indf2,c
 13383  0038A4  0100               	movlb	0	; () banked
 13384  0038A6  4BB0               	infsnz	_inPipes& (0+255),f,b
 13385  0038A8  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13386                           
 13387                           ; BSR set to: 0
 13388  0038AA  0102               	movlb	2	; () banked
 13389  0038AC  4BD5               	infsnz	_pDst& (0+255),f,b
 13390  0038AE  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13391                           
 13392                           ; BSR set to: 2
 13393                           ;usb_device.c: 1832: byteToSend--;
 13394  0038B0  0100               	movlb	0	; () banked
 13395  0038B2  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13396  0038B4                     l1702:
 13397                           
 13398                           ; BSR set to: 0
 13399                           
 13400                           ; BSR set to: 0
 13401  0038B4  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13402  0038B6  B4D8               	btfsc	status,2,c
 13403  0038B8  0012               	return	
 13404  0038BA  D7DF               	goto	l1703
 13405  0038BC                     
 13406                           ; BSR set to: 0
 13407                           ;usb_device.c: 1838: {
 13408                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13409                           
 13410                           ; BSR set to: 0
 13411  0038BC  C0B0  FFF6         	movff	_inPipes,tblptrl
 13412  0038C0  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13413  0038C4  6AF8               	clrf	tblptru,c
 13414  0038C6  C2D5  FFD9         	movff	_pDst,fsr2l
 13415  0038CA  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13416  0038CE  0E0E               	movlw	(high __ramtop+-1)
 13417  0038D0  64F7               	cpfsgt	tblptrh,c
 13418  0038D2  D003               	bra	u11837
 13419  0038D4  0008               	tblrd		*
 13420  0038D6  50F5               	movf	tablat,w,c
 13421  0038D8  D005               	bra	u11830
 13422  0038DA                     u11837:
 13423  0038DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13424  0038DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13425  0038E2  50EF               	movf	indf0,w,c
 13426  0038E4                     u11830:
 13427  0038E4  6EDF               	movwf	indf2,c
 13428  0038E6  0100               	movlb	0	; () banked
 13429  0038E8  4BB0               	infsnz	_inPipes& (0+255),f,b
 13430  0038EA  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13431                           
 13432                           ; BSR set to: 0
 13433  0038EC  0102               	movlb	2	; () banked
 13434  0038EE  4BD5               	infsnz	_pDst& (0+255),f,b
 13435  0038F0  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13436                           
 13437                           ; BSR set to: 2
 13438                           ;usb_device.c: 1840: byteToSend--;
 13439  0038F2  0100               	movlb	0	; () banked
 13440  0038F4  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13441  0038F6                     l1706:
 13442                           
 13443                           ; BSR set to: 0
 13444                           
 13445                           ; BSR set to: 0
 13446  0038F6  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13447  0038F8  B4D8               	btfsc	status,2,c
 13448  0038FA  0012               	return	
 13449  0038FC  D7DF               	goto	l1707
 13450  0038FE                     __end_of_USBCtrlTrfTxService:
 13451                           	opt stack 0
 13452                           tosu	equ	0xFFF
 13453                           tosh	equ	0xFFE
 13454                           tosl	equ	0xFFD
 13455                           pclath	equ	0xFFA
 13456                           tblptru	equ	0xFF8
 13457                           tblptrh	equ	0xFF7
 13458                           tblptrl	equ	0xFF6
 13459                           tablat	equ	0xFF5
 13460                           prodh	equ	0xFF4
 13461                           prodl	equ	0xFF3
 13462                           intcon	equ	0xFF2
 13463                           intcon2	equ	0xFF1
 13464                           intcon3	equ	0xFF0
 13465                           indf0	equ	0xFEF
 13466                           postinc0	equ	0xFEE
 13467                           plusw0	equ	0xFEB
 13468                           fsr0h	equ	0xFEA
 13469                           fsr0l	equ	0xFE9
 13470                           wreg	equ	0xFE8
 13471                           indf1	equ	0xFE7
 13472                           postinc1	equ	0xFE6
 13473                           postdec1	equ	0xFE5
 13474                           fsr1h	equ	0xFE2
 13475                           fsr1l	equ	0xFE1
 13476                           indf2	equ	0xFDF
 13477                           postinc2	equ	0xFDE
 13478                           postdec2	equ	0xFDD
 13479                           plusw2	equ	0xFDB
 13480                           fsr2h	equ	0xFDA
 13481                           fsr2l	equ	0xFD9
 13482                           status	equ	0xFD8
 13483                           
 13484 ;; *************** function _CDCTxService *****************
 13485 ;; Defined at:
 13486 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;		None
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13491 ;;  i               1   36[BANK0 ] unsigned char 
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  1    wreg      void 
 13494 ;; Registers used:
 13495 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13502 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13504 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13505 ;;Total ram usage:        2 bytes
 13506 ;; Hardware stack levels used:    1
 13507 ;; Hardware stack levels required when called:   12
 13508 ;; This function calls:
 13509 ;;		_USBTransferOnePacket
 13510 ;; This function is called by:
 13511 ;;		_UsbDevice_MainTask
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           	psect	text54
 13516  00297C                     __ptext54:
 13517                           	opt stack 0
 13518  00297C                     _CDCTxService:
 13519                           	opt stack 15
 13520                           
 13521                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13522                           ;usb_device_cdc.c: 842: uint8_t i;
 13523                           ;usb_device_cdc.c: 844: ;
 13524                           ;usb_device_cdc.c: 846: {};
 13525                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13526                           
 13527                           ; BSR set to: 0
 13528                           ;incstack = 0
 13529  00297C  0101               	movlb	1	; () banked
 13530  00297E  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13531  002980  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13532  002982  B4D8               	btfsc	status,2,c
 13533  002984  D006               	goto	l1952
 13534                           
 13535                           ; BSR set to: 1
 13536  002986  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13537  00298A  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13538  00298E  BEDF               	btfsc	indf2,7,c
 13539  002990  0012               	return	
 13540  002992                     l1952:
 13541                           
 13542                           ; BSR set to: 1
 13543                           ;usb_device_cdc.c: 852: }
 13544                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13545                           
 13546                           ; BSR set to: 1
 13547  002992  0E03               	movlw	3
 13548  002994  0100               	movlb	0	; () banked
 13549  002996  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13550  002998  A4D8               	btfss	status,2,c
 13551  00299A  D002               	goto	l1954
 13552                           
 13553                           ; BSR set to: 0
 13554                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13555  00299C  0E00               	movlw	0
 13556  00299E  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13557  0029A0                     l1954:
 13558                           
 13559                           ; BSR set to: 0
 13560                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13561  0029A0  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13562  0029A2  B4D8               	btfsc	status,2,c
 13563  0029A4  0012               	return	
 13564                           
 13565                           ; BSR set to: 0
 13566                           ;usb_device_cdc.c: 869: }
 13567                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13568                           
 13569                           ; BSR set to: 0
 13570                           
 13571                           ; BSR set to: 0
 13572                           ;usb_device_cdc.c: 866: {
 13573                           ;usb_device_cdc.c: 867: ;
 13574                           ;usb_device_cdc.c: 868: return;
 13575  0029A6  0E02               	movlw	2
 13576  0029A8  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13577  0029AA  A4D8               	btfss	status,2,c
 13578  0029AC  D013               	goto	l1956
 13579                           
 13580                           ; BSR set to: 0
 13581                           ;usb_device_cdc.c: 875: {
 13582                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13583  0029AE  0E01               	movlw	1
 13584  0029B0  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13585  0029B2  0E00               	movlw	0
 13586  0029B4  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13587  0029B6  0E00               	movlw	0
 13588  0029B8  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13589  0029BA  0E00               	movlw	0
 13590  0029BC  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13591  0029BE  0E02               	movlw	2
 13592  0029C0  EC7D  F022         	call	_USBTransferOnePacket
 13593  0029C4  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13594  0029C8  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13595                           
 13596                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13597  0029CC  0E03               	movlw	3
 13598  0029CE  0100               	movlb	0	; () banked
 13599  0029D0  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13600                           
 13601                           ;usb_device_cdc.c: 879: }
 13602  0029D2  0012               	return	
 13603  0029D4                     l1956:
 13604                           
 13605                           ; BSR set to: 0
 13606                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13607                           
 13608                           ; BSR set to: 0
 13609  0029D4  05C8               	decf	_cdc_trf_state& (0+255),w,b
 13610  0029D6  A4D8               	btfss	status,2,c
 13611  0029D8  0012               	return	
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;usb_device_cdc.c: 881: {
 13615                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13616  0029DA  0E40               	movlw	64
 13617  0029DC  65C7               	cpfsgt	_cdc_tx_len& (0+255),b
 13618  0029DE  D003               	goto	l1959
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13622  0029E0  0E40               	movlw	64
 13623  0029E2  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13624  0029E4  D002               	goto	l1960
 13625  0029E6                     l1959:
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;usb_device_cdc.c: 887: else
 13629                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13630  0029E6  C0C7  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13631  0029EA                     l1960:
 13632                           
 13633                           ; BSR set to: 0
 13634                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13635                           
 13636                           ; BSR set to: 0
 13637  0029EA  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13638  0029EC  0800               	sublw	0
 13639  0029EE  25C7               	addwf	_cdc_tx_len& (0+255),w,b
 13640  0029F0  6FC7               	movwf	_cdc_tx_len& (0+255),b
 13641                           
 13642                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13643  0029F2  0EB6               	movlw	low _cdc_data_tx
 13644  0029F4  0102               	movlb	2	; () banked
 13645  0029F6  6FC9               	movwf	_pCDCDst& (0+255),b
 13646  0029F8  0E07               	movlw	high _cdc_data_tx
 13647  0029FA  6FCA               	movwf	(_pCDCDst+1)& (0+255),b
 13648                           
 13649                           ; BSR set to: 2
 13650                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13651  0029FC  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13652                           
 13653                           ; BSR set to: 2
 13654                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13655  002A00  0101               	movlb	1	; () banked
 13656  002A02  51DC               	movf	_cdc_mem_type& (0+255),w,b
 13657  002A04  B4D8               	btfsc	status,2,c
 13658  002A06  D01D               	goto	l1962
 13659  002A08  D03D               	goto	l1966
 13660  002A0A                     
 13661                           ;usb_device_cdc.c: 901: {
 13662                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13663                           
 13664                           ; BSR set to: 1
 13665  002A0A  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13666  002A0E  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13667  002A12  6AF8               	clrf	tblptru,c
 13668  002A14  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13669  002A18  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13670  002A1C  0E0E               	movlw	(high __ramtop+-1)
 13671  002A1E  64F7               	cpfsgt	tblptrh,c
 13672  002A20  D003               	bra	u15997
 13673  002A22  0008               	tblrd		*
 13674  002A24  50F5               	movf	tablat,w,c
 13675  002A26  D005               	bra	u15990
 13676  002A28                     u15997:
 13677  002A28  CFF6 FFE9          	movff	tblptrl,fsr0l
 13678  002A2C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13679  002A30  50EF               	movf	indf0,w,c
 13680  002A32                     u15990:
 13681  002A32  6EDF               	movwf	indf2,c
 13682                           
 13683                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13684  002A34  0102               	movlb	2	; () banked
 13685  002A36  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13686  002A38  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13687                           
 13688                           ; BSR set to: 2
 13689                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13690  002A3A  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13691  002A3C  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13692                           
 13693                           ; BSR set to: 2
 13694                           ;usb_device_cdc.c: 905: i--;
 13695  002A3E  0100               	movlb	0	; () banked
 13696  002A40  0784               	decf	CDCTxService@i& (0+255),f,b
 13697  002A42                     l1962:
 13698                           
 13699                           ; BSR set to: 0
 13700  002A42  0100               	movlb	0	; () banked
 13701  002A44  5184               	movf	CDCTxService@i& (0+255),w,b
 13702  002A46  B4D8               	btfsc	status,2,c
 13703  002A48  D021               	goto	u16020
 13704  002A4A  D7DF               	goto	l1963
 13705  002A4C                     
 13706                           ; BSR set to: 0
 13707                           ;usb_device_cdc.c: 911: {
 13708                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13709                           
 13710                           ; BSR set to: 0
 13711  002A4C  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13712  002A50  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13713  002A54  6AF8               	clrf	tblptru,c
 13714  002A56  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13715  002A5A  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13716  002A5E  0E0E               	movlw	(high __ramtop+-1)
 13717  002A60  64F7               	cpfsgt	tblptrh,c
 13718  002A62  D003               	bra	u16017
 13719  002A64  0008               	tblrd		*
 13720  002A66  50F5               	movf	tablat,w,c
 13721  002A68  D005               	bra	u16010
 13722  002A6A                     u16017:
 13723  002A6A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13724  002A6E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13725  002A72  50EF               	movf	indf0,w,c
 13726  002A74                     u16010:
 13727  002A74  6EDF               	movwf	indf2,c
 13728                           
 13729                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13730  002A76  0102               	movlb	2	; () banked
 13731  002A78  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13732  002A7A  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13733                           
 13734                           ; BSR set to: 2
 13735                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13736  002A7C  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13737  002A7E  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13738                           
 13739                           ; BSR set to: 2
 13740                           ;usb_device_cdc.c: 915: i--;
 13741  002A80  0100               	movlb	0	; () banked
 13742  002A82  0784               	decf	CDCTxService@i& (0+255),f,b
 13743  002A84                     l1966:
 13744                           
 13745                           ; BSR set to: 0
 13746  002A84  0100               	movlb	0	; () banked
 13747  002A86  5184               	movf	CDCTxService@i& (0+255),w,b
 13748  002A88  A4D8               	btfss	status,2,c
 13749  002A8A  D7E0               	goto	l1967
 13750  002A8C                     u16020:
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;usb_device_cdc.c: 916: }
 13754                           ;usb_device_cdc.c: 917: }
 13755                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13756                           
 13757                           ; BSR set to: 0
 13758                           
 13759                           ; BSR set to: 0
 13760  002A8C  51C7               	movf	_cdc_tx_len& (0+255),w,b
 13761  002A8E  A4D8               	btfss	status,2,c
 13762  002A90  D008               	goto	l1971
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;usb_device_cdc.c: 924: {
 13766                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13767  002A92  0E40               	movlw	64
 13768  002A94  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13769  002A96  A4D8               	btfss	status,2,c
 13770  002A98  D002               	goto	l1970
 13771                           
 13772                           ; BSR set to: 0
 13773                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13774  002A9A  0E02               	movlw	2
 13775  002A9C  D001               	goto	L13
 13776  002A9E                     l1970:
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;usb_device_cdc.c: 927: else
 13780                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13781                           
 13782                           ; BSR set to: 0
 13783  002A9E  0E03               	movlw	3
 13784  002AA0                     L13:
 13785  002AA0  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13786  002AA2                     l1971:
 13787                           
 13788                           ; BSR set to: 0
 13789                           ;usb_device_cdc.c: 929: }
 13790                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13791                           
 13792                           ; BSR set to: 0
 13793                           
 13794                           ; BSR set to: 0
 13795  002AA2  0E01               	movlw	1
 13796  002AA4  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13797  002AA6  0EB6               	movlw	low _cdc_data_tx
 13798  002AA8  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13799  002AAA  0E07               	movlw	high _cdc_data_tx
 13800  002AAC  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13801  002AAE  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13802  002AB2  0E02               	movlw	2
 13803  002AB4  EC7D  F022         	call	_USBTransferOnePacket
 13804  002AB8  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13805  002ABC  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13806  002AC0  0012               	return	
 13807  002AC2                     __end_of_CDCTxService:
 13808                           	opt stack 0
 13809                           tosu	equ	0xFFF
 13810                           tosh	equ	0xFFE
 13811                           tosl	equ	0xFFD
 13812                           pclath	equ	0xFFA
 13813                           tblptru	equ	0xFF8
 13814                           tblptrh	equ	0xFF7
 13815                           tblptrl	equ	0xFF6
 13816                           tablat	equ	0xFF5
 13817                           prodh	equ	0xFF4
 13818                           prodl	equ	0xFF3
 13819                           intcon	equ	0xFF2
 13820                           intcon2	equ	0xFF1
 13821                           intcon3	equ	0xFF0
 13822                           indf0	equ	0xFEF
 13823                           postinc0	equ	0xFEE
 13824                           plusw0	equ	0xFEB
 13825                           fsr0h	equ	0xFEA
 13826                           fsr0l	equ	0xFE9
 13827                           wreg	equ	0xFE8
 13828                           indf1	equ	0xFE7
 13829                           postinc1	equ	0xFE6
 13830                           postdec1	equ	0xFE5
 13831                           fsr1h	equ	0xFE2
 13832                           fsr1l	equ	0xFE1
 13833                           indf2	equ	0xFDF
 13834                           postinc2	equ	0xFDE
 13835                           postdec2	equ	0xFDD
 13836                           plusw2	equ	0xFDB
 13837                           fsr2h	equ	0xFDA
 13838                           fsr2l	equ	0xFD9
 13839                           status	equ	0xFD8
 13840                           
 13841 ;; *************** function _Term_MainSm *****************
 13842 ;; Defined at:
 13843 ;;		line 709 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13844 ;; Parameters:    Size  Location     Type
 13845 ;;		None
 13846 ;; Auto vars:     Size  Location     Type
 13847 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13848 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13849 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13850 ;;  FwkBuildYear    4    0        unsigned char [4]
 13851 ;;  FwkBuildMont    4    0        unsigned char [4]
 13852 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13853 ;; Return value:  Size  Location     Type
 13854 ;;                  1    wreg      void 
 13855 ;; Registers used:
 13856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13857 ;; Tracked objects:
 13858 ;;		On entry : 0/0
 13859 ;;		On exit  : 0/0
 13860 ;;		Unchanged: 0/0
 13861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13863 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13865 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13866 ;;Total ram usage:       12 bytes
 13867 ;; Hardware stack levels used:    1
 13868 ;; Hardware stack levels required when called:   16
 13869 ;; This function calls:
 13870 ;;		_OsTmr_GetTimerStatus
 13871 ;;		_OsTmr_StartTimer
 13872 ;;		_Terminal
 13873 ;;		_memset
 13874 ;;		_putUSBUSART
 13875 ;;		_sprintf
 13876 ;;		_strcat
 13877 ;;		_strcpy
 13878 ;;		_strlen
 13879 ;;		_utoa
 13880 ;; This function is called by:
 13881 ;;		_Term_MainTask
 13882 ;; This function uses a non-reentrant model
 13883 ;;
 13884                           
 13885                           	psect	text55
 13886  0010BC                     __ptext55:
 13887                           	opt stack 0
 13888  0010BC                     _Term_MainSm:
 13889                           	opt stack 11
 13890                           
 13891                           ;term.c: 711: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13892                           ;term.c: 712: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13893                           ;term.c: 713: static UINT8 Data[50];
 13894                           ;term.c: 714: UINT8 FwkMajorStr[4];
 13895                           ;term.c: 715: UINT8 FwkMinorStr[4];
 13896                           ;term.c: 716: UINT8 FwkBuildStr[4];
 13897                           ;term.c: 717: UINT8 FwkBuildDayStr[4];
 13898                           ;term.c: 718: UINT8 FwkBuildMonthStr[4];
 13899                           ;term.c: 719: UINT8 FwkBuildYearStr[4];
 13900                           ;term.c: 721: switch (TermMainSmState)
 13901                           
 13902                           ;incstack = 0
 13903  0010BC  D133               	goto	l2467
 13904  0010BE                     
 13905                           ;term.c: 725: OsTmr_StartTimer(&TermDelay,2000);
 13906  0010BE  0ED1               	movlw	low Term_MainSm@TermDelay
 13907  0010C0  0100               	movlb	0	; () banked
 13908  0010C2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13909  0010C4  0E03               	movlw	high Term_MainSm@TermDelay
 13910  0010C6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13911  0010C8  0ED0               	movlw	208
 13912  0010CA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13913  0010CC  0E07               	movlw	7
 13914  0010CE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13915  0010D0  0E00               	movlw	0
 13916  0010D2  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13917  0010D4  0E00               	movlw	0
 13918  0010D6  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13919  0010D8  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 13920                           
 13921                           ;term.c: 727: TermMainSmState = Term_InitDelay;
 13922  0010DC  0E01               	movlw	1
 13923  0010DE  0102               	movlb	2	; () banked
 13924  0010E0  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13925                           
 13926                           ;term.c: 728: break;
 13927  0010E2  0012               	return	
 13928  0010E4                     
 13929                           ; BSR set to: 2
 13930                           ;term.c: 732: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13931                           
 13932                           ; BSR set to: 2
 13933  0010E4  0ED1               	movlw	low Term_MainSm@TermDelay
 13934  0010E6  0100               	movlb	0	; () banked
 13935  0010E8  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13936  0010EA  0E03               	movlw	high Term_MainSm@TermDelay
 13937  0010EC  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13938  0010EE  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 13939  0010F2  06E8               	decf	wreg,f,c
 13940  0010F4  A4D8               	btfss	status,2,c
 13941  0010F6  0012               	return	
 13942                           
 13943                           ;term.c: 733: {
 13944                           ;term.c: 735: TermMainSmState = Term_InitState;
 13945  0010F8  0E02               	movlw	2
 13946  0010FA  0102               	movlb	2	; () banked
 13947  0010FC  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13948                           
 13949                           ; BSR set to: 2
 13950                           ;term.c: 736: }
 13951                           ;term.c: 737: break;
 13952  0010FE  0012               	return	
 13953  001100                     
 13954                           ; BSR set to: 2
 13955                           ;term.c: 741: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13956                           
 13957                           ; BSR set to: 2
 13958  001100  0E1F               	movlw	31
 13959  001102  0100               	movlb	0	; () banked
 13960  001104  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13961  001106  0012               	return	
 13962                           
 13963                           ; BSR set to: 0
 13964  001108  B265               	btfsc	3941,1,c	;volatile
 13965  00110A  0012               	return	
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;term.c: 745: else
 13969                           ;term.c: 746: {
 13970                           ;term.c: 748: TermMainSmState = Term_WelcomeState;
 13971                           
 13972                           ; BSR set to: 0
 13973                           
 13974                           ; BSR set to: 0
 13975                           ;term.c: 742: {
 13976                           ;term.c: 744: }
 13977  00110C  0E03               	movlw	3
 13978  00110E  0102               	movlb	2	; () banked
 13979  001110  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13980                           
 13981                           ; BSR set to: 2
 13982                           ;term.c: 749: }
 13983                           ;term.c: 750: break;
 13984  001112  0012               	return	
 13985  001114                     
 13986                           ; BSR set to: 2
 13987                           ;term.c: 754: if((cdc_trf_state == 0))
 13988                           
 13989                           ; BSR set to: 2
 13990  001114  0100               	movlb	0	; () banked
 13991  001116  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13992  001118  A4D8               	btfss	status,2,c
 13993  00111A  0012               	return	
 13994                           
 13995                           ; BSR set to: 0
 13996                           ;term.c: 755: {
 13997                           ;term.c: 757: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13998  00111C  0E22               	movlw	low _Welcome
 13999  00111E  6F83               	movwf	putUSBUSART@data& (0+255),b
 14000  001120  0EFD               	movlw	high _Welcome
 14001  001122  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14002  001124  0E88               	movlw	136
 14003  001126  6F85               	movwf	putUSBUSART@length& (0+255),b
 14004  001128  EC0E  F035         	call	_putUSBUSART	;wreg free
 14005                           
 14006                           ;term.c: 759: TermMainSmState = Term_InstDescState;
 14007  00112C  0E04               	movlw	4
 14008  00112E  0102               	movlb	2	; () banked
 14009  001130  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14010                           
 14011                           ; BSR set to: 2
 14012                           ;term.c: 760: }
 14013                           ;term.c: 761: break;
 14014  001132  0012               	return	
 14015  001134                     
 14016                           ; BSR set to: 2
 14017                           ;term.c: 765: if((cdc_trf_state == 0))
 14018                           
 14019                           ; BSR set to: 2
 14020  001134  0100               	movlb	0	; () banked
 14021  001136  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14022  001138  A4D8               	btfss	status,2,c
 14023  00113A  0012               	return	
 14024                           
 14025                           ; BSR set to: 0
 14026                           ;term.c: 766: {
 14027                           ;term.c: 768: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 14028  00113C  0E32               	movlw	low _MsgFormat
 14029  00113E  6F83               	movwf	putUSBUSART@data& (0+255),b
 14030  001140  0EFC               	movlw	high _MsgFormat
 14031  001142  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14032  001144  0EEF               	movlw	239
 14033  001146  6F85               	movwf	putUSBUSART@length& (0+255),b
 14034  001148  EC0E  F035         	call	_putUSBUSART	;wreg free
 14035                           
 14036                           ;term.c: 770: TermMainSmState = Term_FwkVerState;
 14037  00114C  0E05               	movlw	5
 14038  00114E  0102               	movlb	2	; () banked
 14039  001150  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14040                           
 14041                           ; BSR set to: 2
 14042                           ;term.c: 771: }
 14043                           ;term.c: 772: break;
 14044  001152  0012               	return	
 14045  001154                     
 14046                           ; BSR set to: 2
 14047                           ;term.c: 776: if((cdc_trf_state == 0))
 14048                           
 14049                           ; BSR set to: 2
 14050  001154  0100               	movlb	0	; () banked
 14051  001156  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14052  001158  A4D8               	btfss	status,2,c
 14053  00115A  0012               	return	
 14054                           
 14055                           ; BSR set to: 0
 14056                           ;term.c: 777: {
 14057                           ;term.c: 779: memset(Data,0,50);
 14058  00115C  0E52               	movlw	low Term_MainSm@Data
 14059  00115E  6F7D               	movwf	memset@p1& (0+255),b
 14060  001160  0E04               	movlw	high Term_MainSm@Data
 14061  001162  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14062  001164  0E00               	movlw	0
 14063  001166  6F80               	movwf	(memset@c+1)& (0+255),b
 14064  001168  0E00               	movlw	0
 14065  00116A  6F7F               	movwf	memset@c& (0+255),b
 14066  00116C  0E00               	movlw	0
 14067  00116E  6F82               	movwf	(memset@n+1)& (0+255),b
 14068  001170  0E32               	movlw	50
 14069  001172  6F81               	movwf	memset@n& (0+255),b
 14070  001174  ECB6  F033         	call	_memset	;wreg free
 14071                           
 14072                           ;term.c: 781: utoa(FwkMajorStr,1,10);
 14073  001178  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14074  00117A  0100               	movlb	0	; () banked
 14075  00117C  6F8A               	movwf	utoa@buf& (0+255),b
 14076  00117E  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14077  001180  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14078  001182  0E00               	movlw	0
 14079  001184  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14080  001186  0E01               	movlw	1
 14081  001188  6F8C               	movwf	utoa@val& (0+255),b
 14082  00118A  0E00               	movlw	0
 14083  00118C  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14084  00118E  0E0A               	movlw	10
 14085  001190  6F8E               	movwf	utoa@base& (0+255),b
 14086  001192  EC40  F024         	call	_utoa	;wreg free
 14087                           
 14088                           ;term.c: 782: utoa(FwkMinorStr,2,10);
 14089  001196  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14090  001198  0100               	movlb	0	; () banked
 14091  00119A  6F8A               	movwf	utoa@buf& (0+255),b
 14092  00119C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14093  00119E  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14094  0011A0  0E00               	movlw	0
 14095  0011A2  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14096  0011A4  0E02               	movlw	2
 14097  0011A6  6F8C               	movwf	utoa@val& (0+255),b
 14098  0011A8  0E00               	movlw	0
 14099  0011AA  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14100  0011AC  0E0A               	movlw	10
 14101  0011AE  6F8E               	movwf	utoa@base& (0+255),b
 14102  0011B0  EC40  F024         	call	_utoa	;wreg free
 14103                           
 14104                           ;term.c: 783: utoa(FwkBuildStr,0,10);
 14105  0011B4  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14106  0011B6  0100               	movlb	0	; () banked
 14107  0011B8  6F8A               	movwf	utoa@buf& (0+255),b
 14108  0011BA  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14109  0011BC  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14110  0011BE  0E00               	movlw	0
 14111  0011C0  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14112  0011C2  0E00               	movlw	0
 14113  0011C4  6F8C               	movwf	utoa@val& (0+255),b
 14114  0011C6  0E00               	movlw	0
 14115  0011C8  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14116  0011CA  0E0A               	movlw	10
 14117  0011CC  6F8E               	movwf	utoa@base& (0+255),b
 14118  0011CE  EC40  F024         	call	_utoa	;wreg free
 14119                           
 14120                           ;term.c: 784: strcpy(Data,"Framework Version: ");
 14121  0011D2  0E52               	movlw	low Term_MainSm@Data
 14122  0011D4  0100               	movlb	0	; () banked
 14123  0011D6  6F7D               	movwf	strcpy@to& (0+255),b
 14124  0011D8  0E04               	movlw	high Term_MainSm@Data
 14125  0011DA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14126  0011DC  0ED2               	movlw	low STR_23
 14127  0011DE  6F7F               	movwf	strcpy@from& (0+255),b
 14128  0011E0  0EFE               	movlw	high STR_23
 14129  0011E2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14130  0011E4  EC85  F033         	call	_strcpy	;wreg free
 14131                           
 14132                           ;term.c: 785: strcat(Data,FwkMajorStr);
 14133  0011E8  0E52               	movlw	low Term_MainSm@Data
 14134  0011EA  0100               	movlb	0	; () banked
 14135  0011EC  6F7D               	movwf	strcat@to& (0+255),b
 14136  0011EE  0E04               	movlw	high Term_MainSm@Data
 14137  0011F0  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14138  0011F2  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14139  0011F4  6F7F               	movwf	strcat@from& (0+255),b
 14140  0011F6  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14141  0011F8  6F80               	movwf	(strcat@from+1)& (0+255),b
 14142  0011FA  EC53  F02D         	call	_strcat	;wreg free
 14143                           
 14144                           ;term.c: 786: strcat(Data,".");
 14145  0011FE  0E52               	movlw	low Term_MainSm@Data
 14146  001200  0100               	movlb	0	; () banked
 14147  001202  6F7D               	movwf	strcat@to& (0+255),b
 14148  001204  0E04               	movlw	high Term_MainSm@Data
 14149  001206  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14150  001208  0EF5               	movlw	low STR_24
 14151  00120A  6F7F               	movwf	strcat@from& (0+255),b
 14152  00120C  0EFF               	movlw	high STR_24
 14153  00120E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14154  001210  EC53  F02D         	call	_strcat	;wreg free
 14155                           
 14156                           ;term.c: 787: strcat(Data,FwkMinorStr);
 14157  001214  0E52               	movlw	low Term_MainSm@Data
 14158  001216  0100               	movlb	0	; () banked
 14159  001218  6F7D               	movwf	strcat@to& (0+255),b
 14160  00121A  0E04               	movlw	high Term_MainSm@Data
 14161  00121C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14162  00121E  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14163  001220  6F7F               	movwf	strcat@from& (0+255),b
 14164  001222  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14165  001224  6F80               	movwf	(strcat@from+1)& (0+255),b
 14166  001226  EC53  F02D         	call	_strcat	;wreg free
 14167                           
 14168                           ;term.c: 788: strcat(Data,".");
 14169  00122A  0E52               	movlw	low Term_MainSm@Data
 14170  00122C  0100               	movlb	0	; () banked
 14171  00122E  6F7D               	movwf	strcat@to& (0+255),b
 14172  001230  0E04               	movlw	high Term_MainSm@Data
 14173  001232  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14174  001234  0EF5               	movlw	low STR_24
 14175  001236  6F7F               	movwf	strcat@from& (0+255),b
 14176  001238  0EFF               	movlw	high STR_24
 14177  00123A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14178  00123C  EC53  F02D         	call	_strcat	;wreg free
 14179                           
 14180                           ;term.c: 789: strcat(Data,FwkBuildStr);
 14181  001240  0E52               	movlw	low Term_MainSm@Data
 14182  001242  0100               	movlb	0	; () banked
 14183  001244  6F7D               	movwf	strcat@to& (0+255),b
 14184  001246  0E04               	movlw	high Term_MainSm@Data
 14185  001248  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14186  00124A  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14187  00124C  6F7F               	movwf	strcat@from& (0+255),b
 14188  00124E  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14189  001250  6F80               	movwf	(strcat@from+1)& (0+255),b
 14190  001252  EC53  F02D         	call	_strcat	;wreg free
 14191                           
 14192                           ;term.c: 790: strcat(Data,"\r\n");
 14193  001256  0E52               	movlw	low Term_MainSm@Data
 14194  001258  0100               	movlb	0	; () banked
 14195  00125A  6F7D               	movwf	strcat@to& (0+255),b
 14196  00125C  0E04               	movlw	high Term_MainSm@Data
 14197  00125E  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14198  001260  0E86               	movlw	low (STR_21+39)
 14199  001262  6F7F               	movwf	strcat@from& (0+255),b
 14200  001264  0EFE               	movlw	high (STR_21+39)
 14201  001266  6F80               	movwf	(strcat@from+1)& (0+255),b
 14202  001268  EC53  F02D         	call	_strcat	;wreg free
 14203                           
 14204                           ;term.c: 792: putUSBUSART((void*)Data,strlen(Data));
 14205  00126C  0E52               	movlw	low Term_MainSm@Data
 14206  00126E  0100               	movlb	0	; () banked
 14207  001270  6F83               	movwf	putUSBUSART@data& (0+255),b
 14208  001272  0E04               	movlw	high Term_MainSm@Data
 14209  001274  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14210  001276  0E52               	movlw	low Term_MainSm@Data
 14211  001278  6F7D               	movwf	strlen@s& (0+255),b
 14212  00127A  0E04               	movlw	high Term_MainSm@Data
 14213  00127C  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14214  00127E  EC2E  F032         	call	_strlen	;wreg free
 14215  001282  0100               	movlb	0	; () banked
 14216  001284  517D               	movf	?_strlen& (0+255),w,b
 14217  001286  6F85               	movwf	putUSBUSART@length& (0+255),b
 14218  001288  EC0E  F035         	call	_putUSBUSART	;wreg free
 14219                           
 14220                           ;term.c: 794: TermMainSmState = Term_FwkBuildDateState;
 14221  00128C  0E06               	movlw	6
 14222  00128E  0102               	movlb	2	; () banked
 14223  001290  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14224                           
 14225                           ; BSR set to: 2
 14226                           ;term.c: 795: }
 14227                           ;term.c: 796: break;
 14228  001292  0012               	return	
 14229  001294                     
 14230                           ; BSR set to: 2
 14231                           ;term.c: 800: if((cdc_trf_state == 0))
 14232                           
 14233                           ; BSR set to: 2
 14234  001294  0100               	movlb	0	; () banked
 14235  001296  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14236  001298  A4D8               	btfss	status,2,c
 14237  00129A  0012               	return	
 14238                           
 14239                           ; BSR set to: 0
 14240                           ;term.c: 801: {
 14241                           ;term.c: 803: memset(Data,0,50);
 14242  00129C  0E52               	movlw	low Term_MainSm@Data
 14243  00129E  6F7D               	movwf	memset@p1& (0+255),b
 14244  0012A0  0E04               	movlw	high Term_MainSm@Data
 14245  0012A2  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14246  0012A4  0E00               	movlw	0
 14247  0012A6  6F80               	movwf	(memset@c+1)& (0+255),b
 14248  0012A8  0E00               	movlw	0
 14249  0012AA  6F7F               	movwf	memset@c& (0+255),b
 14250  0012AC  0E00               	movlw	0
 14251  0012AE  6F82               	movwf	(memset@n+1)& (0+255),b
 14252  0012B0  0E32               	movlw	50
 14253  0012B2  6F81               	movwf	memset@n& (0+255),b
 14254  0012B4  ECB6  F033         	call	_memset	;wreg free
 14255                           
 14256                           ;term.c: 805: sprintf(Data,"Build Date: %s\r\n","Apr  2 2022");
 14257  0012B8  0E52               	movlw	low Term_MainSm@Data
 14258  0012BA  0100               	movlb	0	; () banked
 14259  0012BC  6F7D               	movwf	sprintf@sp& (0+255),b
 14260  0012BE  0E04               	movlw	high Term_MainSm@Data
 14261  0012C0  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14262  0012C2  0E0D               	movlw	low STR_27
 14263  0012C4  6F7F               	movwf	sprintf@f& (0+255),b
 14264  0012C6  0EFF               	movlw	high STR_27
 14265  0012C8  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14266  0012CA  0EB6               	movlw	low STR_28
 14267  0012CC  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14268  0012CE  0EFF               	movlw	high STR_28
 14269  0012D0  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14270  0012D2  EC96  F01E         	call	_sprintf	;wreg free
 14271                           
 14272                           ;term.c: 807: putUSBUSART((void*)Data,strlen(Data));
 14273  0012D6  0E52               	movlw	low Term_MainSm@Data
 14274  0012D8  0100               	movlb	0	; () banked
 14275  0012DA  6F83               	movwf	putUSBUSART@data& (0+255),b
 14276  0012DC  0E04               	movlw	high Term_MainSm@Data
 14277  0012DE  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14278  0012E0  0E52               	movlw	low Term_MainSm@Data
 14279  0012E2  6F7D               	movwf	strlen@s& (0+255),b
 14280  0012E4  0E04               	movlw	high Term_MainSm@Data
 14281  0012E6  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14282  0012E8  EC2E  F032         	call	_strlen	;wreg free
 14283  0012EC  0100               	movlb	0	; () banked
 14284  0012EE  517D               	movf	?_strlen& (0+255),w,b
 14285  0012F0  6F85               	movwf	putUSBUSART@length& (0+255),b
 14286  0012F2  EC0E  F035         	call	_putUSBUSART	;wreg free
 14287                           
 14288                           ;term.c: 809: TermMainSmState = Term_SysInitState;
 14289  0012F6  0E07               	movlw	7
 14290  0012F8  0102               	movlb	2	; () banked
 14291  0012FA  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14292                           
 14293                           ; BSR set to: 2
 14294                           ;term.c: 810: }
 14295                           ;term.c: 811: break;
 14296  0012FC  0012               	return	
 14297  0012FE                     
 14298                           ; BSR set to: 2
 14299                           ;term.c: 815: if((cdc_trf_state == 0))
 14300                           
 14301                           ; BSR set to: 2
 14302  0012FE  0100               	movlb	0	; () banked
 14303  001300  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14304  001302  A4D8               	btfss	status,2,c
 14305  001304  0012               	return	
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;term.c: 816: {
 14309                           ;term.c: 818: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14310  001306  0E32               	movlw	low _MsgReady
 14311  001308  6F83               	movwf	putUSBUSART@data& (0+255),b
 14312  00130A  0EFE               	movlw	high _MsgReady
 14313  00130C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14314  00130E  0E16               	movlw	22
 14315  001310  6F85               	movwf	putUSBUSART@length& (0+255),b
 14316  001312  EC0E  F035         	call	_putUSBUSART	;wreg free
 14317                           
 14318                           ;term.c: 820: TermMainSmState = Term_FinalState;
 14319  001316  0E08               	movlw	8
 14320  001318  0102               	movlb	2	; () banked
 14321  00131A  6FE7               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14322                           
 14323                           ; BSR set to: 2
 14324                           ;term.c: 821: }
 14325                           ;term.c: 822: break;
 14326  00131C  0012               	return	
 14327  00131E                     
 14328                           ; BSR set to: 2
 14329                           ;term.c: 826: Terminal();
 14330                           
 14331                           ; BSR set to: 2
 14332  00131E  EC68  F000         	call	_Terminal	;wreg free
 14333                           
 14334                           ;term.c: 831: }
 14335                           
 14336                           ;term.c: 830: break;
 14337                           
 14338                           ;term.c: 829: default:
 14339                           
 14340                           ;term.c: 827: break;
 14341  001322  0012               	return	
 14342  001324                     l2467:
 14343  001324  0102               	movlb	2	; () banked
 14344  001326  51E7               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14345                           
 14346                           ; Switch size 1, requested type "space"
 14347                           ; Number of cases is 9, Range of values is 0 to 8
 14348                           ; switch strategies available:
 14349                           ; Name         Instructions Cycles
 14350                           ; simple_byte           28    15 (average)
 14351                           ;	Chosen strategy is simple_byte
 14352  001328  0A00               	xorlw	0	; case 0
 14353  00132A  B4D8               	btfsc	status,2,c
 14354  00132C  D6C8               	goto	l2468
 14355  00132E  0A01               	xorlw	1	; case 1
 14356  001330  B4D8               	btfsc	status,2,c
 14357  001332  D6D8               	goto	l2470
 14358  001334  0A03               	xorlw	3	; case 2
 14359  001336  B4D8               	btfsc	status,2,c
 14360  001338  D6E3               	goto	l2472
 14361  00133A  0A01               	xorlw	1	; case 3
 14362  00133C  B4D8               	btfsc	status,2,c
 14363  00133E  D6EA               	goto	l2477
 14364  001340  0A07               	xorlw	7	; case 4
 14365  001342  B4D8               	btfsc	status,2,c
 14366  001344  D6F7               	goto	l2479
 14367  001346  0A01               	xorlw	1	; case 5
 14368  001348  B4D8               	btfsc	status,2,c
 14369  00134A  D704               	goto	l2481
 14370  00134C  0A03               	xorlw	3	; case 6
 14371  00134E  B4D8               	btfsc	status,2,c
 14372  001350  D7A1               	goto	l2483
 14373  001352  0A01               	xorlw	1	; case 7
 14374  001354  B4D8               	btfsc	status,2,c
 14375  001356  D7D3               	goto	l2485
 14376  001358  0A0F               	xorlw	15	; case 8
 14377  00135A  A4D8               	btfss	status,2,c
 14378  00135C  0012               	return	
 14379  00135E  D7DF               	goto	l2487
 14380  001360                     __end_of_Term_MainSm:
 14381                           	opt stack 0
 14382                           tosu	equ	0xFFF
 14383                           tosh	equ	0xFFE
 14384                           tosl	equ	0xFFD
 14385                           pclath	equ	0xFFA
 14386                           tblptru	equ	0xFF8
 14387                           tblptrh	equ	0xFF7
 14388                           tblptrl	equ	0xFF6
 14389                           tablat	equ	0xFF5
 14390                           prodh	equ	0xFF4
 14391                           prodl	equ	0xFF3
 14392                           intcon	equ	0xFF2
 14393                           intcon2	equ	0xFF1
 14394                           intcon3	equ	0xFF0
 14395                           indf0	equ	0xFEF
 14396                           postinc0	equ	0xFEE
 14397                           plusw0	equ	0xFEB
 14398                           fsr0h	equ	0xFEA
 14399                           fsr0l	equ	0xFE9
 14400                           wreg	equ	0xFE8
 14401                           indf1	equ	0xFE7
 14402                           postinc1	equ	0xFE6
 14403                           postdec1	equ	0xFE5
 14404                           fsr1h	equ	0xFE2
 14405                           fsr1l	equ	0xFE1
 14406                           indf2	equ	0xFDF
 14407                           postinc2	equ	0xFDE
 14408                           postdec2	equ	0xFDD
 14409                           plusw2	equ	0xFDB
 14410                           fsr2h	equ	0xFDA
 14411                           fsr2l	equ	0xFD9
 14412                           status	equ	0xFD8
 14413                           
 14414 ;; *************** function _strlen *****************
 14415 ;; Defined at:
 14416 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14417 ;; Parameters:    Size  Location     Type
 14418 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14419 ;;		 -> Term_MainSm@Data(50), 
 14420 ;; Auto vars:     Size  Location     Type
 14421 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14422 ;;		 -> Term_MainSm@Data(50), 
 14423 ;; Return value:  Size  Location     Type
 14424 ;;                  2   29[BANK0 ] unsigned int 
 14425 ;; Registers used:
 14426 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14427 ;; Tracked objects:
 14428 ;;		On entry : 0/0
 14429 ;;		On exit  : 0/0
 14430 ;;		Unchanged: 0/0
 14431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14432 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14433 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14434 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14435 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14436 ;;Total ram usage:        6 bytes
 14437 ;; Hardware stack levels used:    1
 14438 ;; Hardware stack levels required when called:   11
 14439 ;; This function calls:
 14440 ;;		Nothing
 14441 ;; This function is called by:
 14442 ;;		_Term_MainSm
 14443 ;; This function uses a non-reentrant model
 14444 ;;
 14445                           
 14446                           	psect	text56
 14447  00645C                     __ptext56:
 14448                           	opt stack 0
 14449  00645C                     _strlen:
 14450                           	opt stack 15
 14451                           
 14452                           ;incstack = 0
 14453  00645C  C07D  F081         	movff	strlen@s,strlen@cp
 14454  006460  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14455  006464  D003               	goto	l3597
 14456  006466  0100               	movlb	0	; () banked
 14457  006468  4B81               	infsnz	strlen@cp& (0+255),f,b
 14458  00646A  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14459  00646C                     l3597:
 14460                           
 14461                           ; BSR set to: 0
 14462  00646C  C081  FFD9         	movff	strlen@cp,fsr2l
 14463  006470  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14464  006474  50DF               	movf	indf2,w,c
 14465  006476  A4D8               	btfss	status,2,c
 14466  006478  D7F6               	goto	l3598
 14467  00647A  C07D  F07F         	movff	strlen@s,??_strlen
 14468  00647E  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14469  006482  0100               	movlb	0	; () banked
 14470  006484  1F7F               	comf	??_strlen& (0+255),f,b
 14471  006486  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14472  006488  4B7F               	infsnz	??_strlen& (0+255),f,b
 14473  00648A  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14474  00648C  5181               	movf	strlen@cp& (0+255),w,b
 14475  00648E  257F               	addwf	??_strlen& (0+255),w,b
 14476  006490  6F7D               	movwf	?_strlen& (0+255),b
 14477  006492  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14478  006494  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14479  006496  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14480  006498  0012               	return	
 14481  00649A                     __end_of_strlen:
 14482                           	opt stack 0
 14483                           tosu	equ	0xFFF
 14484                           tosh	equ	0xFFE
 14485                           tosl	equ	0xFFD
 14486                           pclath	equ	0xFFA
 14487                           tblptru	equ	0xFF8
 14488                           tblptrh	equ	0xFF7
 14489                           tblptrl	equ	0xFF6
 14490                           tablat	equ	0xFF5
 14491                           prodh	equ	0xFF4
 14492                           prodl	equ	0xFF3
 14493                           intcon	equ	0xFF2
 14494                           intcon2	equ	0xFF1
 14495                           intcon3	equ	0xFF0
 14496                           indf0	equ	0xFEF
 14497                           postinc0	equ	0xFEE
 14498                           plusw0	equ	0xFEB
 14499                           fsr0h	equ	0xFEA
 14500                           fsr0l	equ	0xFE9
 14501                           wreg	equ	0xFE8
 14502                           indf1	equ	0xFE7
 14503                           postinc1	equ	0xFE6
 14504                           postdec1	equ	0xFE5
 14505                           fsr1h	equ	0xFE2
 14506                           fsr1l	equ	0xFE1
 14507                           indf2	equ	0xFDF
 14508                           postinc2	equ	0xFDE
 14509                           postdec2	equ	0xFDD
 14510                           plusw2	equ	0xFDB
 14511                           fsr2h	equ	0xFDA
 14512                           fsr2l	equ	0xFD9
 14513                           status	equ	0xFD8
 14514                           
 14515 ;; *************** function _strcat *****************
 14516 ;; Defined at:
 14517 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14518 ;; Parameters:    Size  Location     Type
 14519 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14520 ;;		 -> Term_MainSm@Data(50), 
 14521 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14522 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14523 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14524 ;; Auto vars:     Size  Location     Type
 14525 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14526 ;;		 -> Term_MainSm@Data(50), 
 14527 ;; Return value:  Size  Location     Type
 14528 ;;                  2   29[BANK0 ] PTR unsigned char 
 14529 ;; Registers used:
 14530 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14531 ;; Tracked objects:
 14532 ;;		On entry : 0/0
 14533 ;;		On exit  : 0/0
 14534 ;;		Unchanged: 0/0
 14535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14536 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14537 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14539 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14540 ;;Total ram usage:        6 bytes
 14541 ;; Hardware stack levels used:    1
 14542 ;; Hardware stack levels required when called:   11
 14543 ;; This function calls:
 14544 ;;		Nothing
 14545 ;; This function is called by:
 14546 ;;		_Term_MainSm
 14547 ;; This function uses a non-reentrant model
 14548 ;;
 14549                           
 14550                           	psect	text57
 14551  005AA6                     __ptext57:
 14552                           	opt stack 0
 14553  005AA6                     _strcat:
 14554                           	opt stack 15
 14555                           
 14556                           ; BSR set to: 0
 14557                           ;incstack = 0
 14558  005AA6  C07D  F081         	movff	strcat@to,strcat@cp
 14559  005AAA  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14560  005AAE  D003               	goto	l3582
 14561  005AB0  0100               	movlb	0	; () banked
 14562  005AB2  4B81               	infsnz	strcat@cp& (0+255),f,b
 14563  005AB4  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14564  005AB6                     l3582:
 14565                           
 14566                           ; BSR set to: 0
 14567  005AB6  C081  FFD9         	movff	strcat@cp,fsr2l
 14568  005ABA  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14569  005ABE  50DF               	movf	indf2,w,c
 14570  005AC0  B4D8               	btfsc	status,2,c
 14571  005AC2  D006               	goto	l3585
 14572  005AC4  D7F5               	goto	l3583
 14573  005AC6  0100               	movlb	0	; () banked
 14574  005AC8  4B81               	infsnz	strcat@cp& (0+255),f,b
 14575  005ACA  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14576  005ACC  4B7F               	infsnz	strcat@from& (0+255),f,b
 14577  005ACE  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14578  005AD0                     l3585:
 14579                           
 14580                           ; BSR set to: 0
 14581  005AD0  C07F  FFF6         	movff	strcat@from,tblptrl
 14582  005AD4  C080  FFF7         	movff	strcat@from+1,tblptrh
 14583  005AD8  6AF8               	clrf	tblptru,c
 14584  005ADA  C081  FFD9         	movff	strcat@cp,fsr2l
 14585  005ADE  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14586  005AE2  0E0E               	movlw	(high __ramtop+-1)
 14587  005AE4  64F7               	cpfsgt	tblptrh,c
 14588  005AE6  D003               	bra	u14557
 14589  005AE8  0008               	tblrd		*
 14590  005AEA  50F5               	movf	tablat,w,c
 14591  005AEC  D005               	bra	u14550
 14592  005AEE                     u14557:
 14593  005AEE  CFF6 FFE9          	movff	tblptrl,fsr0l
 14594  005AF2  CFF7 FFEA          	movff	tblptrh,fsr0h
 14595  005AF6  50EF               	movf	indf0,w,c
 14596  005AF8                     u14550:
 14597  005AF8  6EDF               	movwf	indf2,c
 14598  005AFA  50DF               	movf	indf2,w,c
 14599  005AFC  B4D8               	btfsc	status,2,c
 14600  005AFE  0012               	return	
 14601  005B00  D7E2               	goto	l3586
 14602  005B02                     __end_of_strcat:
 14603                           	opt stack 0
 14604                           tosu	equ	0xFFF
 14605                           tosh	equ	0xFFE
 14606                           tosl	equ	0xFFD
 14607                           pclath	equ	0xFFA
 14608                           tblptru	equ	0xFF8
 14609                           tblptrh	equ	0xFF7
 14610                           tblptrl	equ	0xFF6
 14611                           tablat	equ	0xFF5
 14612                           prodh	equ	0xFF4
 14613                           prodl	equ	0xFF3
 14614                           intcon	equ	0xFF2
 14615                           intcon2	equ	0xFF1
 14616                           intcon3	equ	0xFF0
 14617                           indf0	equ	0xFEF
 14618                           postinc0	equ	0xFEE
 14619                           plusw0	equ	0xFEB
 14620                           fsr0h	equ	0xFEA
 14621                           fsr0l	equ	0xFE9
 14622                           wreg	equ	0xFE8
 14623                           indf1	equ	0xFE7
 14624                           postinc1	equ	0xFE6
 14625                           postdec1	equ	0xFE5
 14626                           fsr1h	equ	0xFE2
 14627                           fsr1l	equ	0xFE1
 14628                           indf2	equ	0xFDF
 14629                           postinc2	equ	0xFDE
 14630                           postdec2	equ	0xFDD
 14631                           plusw2	equ	0xFDB
 14632                           fsr2h	equ	0xFDA
 14633                           fsr2l	equ	0xFD9
 14634                           status	equ	0xFD8
 14635                           
 14636 ;; *************** function _sprintf *****************
 14637 ;; Defined at:
 14638 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14639 ;; Parameters:    Size  Location     Type
 14640 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14641 ;;		 -> Term_MainSm@Data(50), 
 14642 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14643 ;;		 -> STR_27(17), 
 14644 ;; Auto vars:     Size  Location     Type
 14645 ;;  tmpval          4    0        struct .
 14646 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14647 ;;		 -> STR_32(7), STR_28(12), 
 14648 ;;  ap              2   36[BANK0 ] PTR void [1]
 14649 ;;		 -> ?_sprintf(2), 
 14650 ;;  len             2    0        unsigned int 
 14651 ;;  val             2    0        unsigned int 
 14652 ;;  c               1   38[BANK0 ] char 
 14653 ;;  flag            1   35[BANK0 ] unsigned char 
 14654 ;;  prec            1    0        char 
 14655 ;; Return value:  Size  Location     Type
 14656 ;;                  2   29[BANK0 ] int 
 14657 ;; Registers used:
 14658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14659 ;; Tracked objects:
 14660 ;;		On entry : 0/0
 14661 ;;		On exit  : 0/0
 14662 ;;		Unchanged: 0/0
 14663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14664 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14665 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14667 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14668 ;;Total ram usage:       12 bytes
 14669 ;; Hardware stack levels used:    1
 14670 ;; Hardware stack levels required when called:   11
 14671 ;; This function calls:
 14672 ;;		Nothing
 14673 ;; This function is called by:
 14674 ;;		_Term_MainSm
 14675 ;; This function uses a non-reentrant model
 14676 ;;
 14677                           
 14678                           	psect	text58
 14679  003D2C                     __ptext58:
 14680                           	opt stack 0
 14681  003D2C                     _sprintf:
 14682                           	opt stack 15
 14683                           
 14684                           ;doprnt.c: 494: va_list ap;
 14685                           ;doprnt.c: 499: signed char c;
 14686                           ;doprnt.c: 506: signed char prec;
 14687                           ;doprnt.c: 508: unsigned char flag;
 14688                           ;doprnt.c: 523: union {
 14689                           ;doprnt.c: 524: unsigned long vd;
 14690                           ;doprnt.c: 525: double integ;
 14691                           ;doprnt.c: 526: } tmpval;
 14692                           ;doprnt.c: 528: unsigned int val;
 14693                           ;doprnt.c: 529: unsigned len;
 14694                           ;doprnt.c: 530: const char * cp;
 14695                           ;doprnt.c: 533: *ap = __va_start();
 14696                           
 14697                           ;incstack = 0
 14698  003D2C  0E81               	movlw	low (?_sprintf+4)
 14699  003D2E  0100               	movlb	0	; () banked
 14700  003D30  6F84               	movwf	sprintf@ap& (0+255),b
 14701  003D32  0E00               	movlw	high (?_sprintf+4)
 14702  003D34  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14703                           
 14704                           ;doprnt.c: 536: while(c = *f++) {
 14705  003D36  D04E               	goto	l2986
 14706  003D38                     
 14707                           ; BSR set to: 0
 14708                           ;doprnt.c: 538: if(c != '%')
 14709                           
 14710                           ; BSR set to: 0
 14711  003D38  0E25               	movlw	37
 14712  003D3A  1986               	xorwf	sprintf@c& (0+255),w,b
 14713  003D3C  B4D8               	btfsc	status,2,c
 14714  003D3E  D009               	goto	l2976
 14715                           
 14716                           ; BSR set to: 0
 14717                           ;doprnt.c: 540: {
 14718                           ;doprnt.c: 541: ((*sp++ = (c)));
 14719  003D40  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14720  003D44  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14721  003D48  C086  FFDF         	movff	sprintf@c,indf2
 14722                           
 14723                           ; BSR set to: 0
 14724  003D4C  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14725  003D4E  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14726                           
 14727                           ;doprnt.c: 542: continue;
 14728  003D50  D041               	goto	l2986
 14729  003D52                     l2976:
 14730                           
 14731                           ; BSR set to: 0
 14732                           ;doprnt.c: 543: }
 14733                           ;doprnt.c: 548: flag = 0;
 14734                           
 14735                           ; BSR set to: 0
 14736  003D52  0E00               	movlw	0
 14737  003D54  6F83               	movwf	sprintf@flag& (0+255),b
 14738                           
 14739                           ;doprnt.c: 635: switch(c = *f++) {
 14740  003D56  D02E               	goto	l2977
 14741  003D58                     
 14742                           ; BSR set to: 0
 14743                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14744                           
 14745                           ; BSR set to: 0
 14746  003D58  C084  FFD9         	movff	sprintf@ap,fsr2l
 14747  003D5C  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14748  003D60  CFDE F087          	movff	postinc2,sprintf@cp
 14749  003D64  CFDD F088          	movff	postdec2,sprintf@cp+1
 14750                           
 14751                           ; BSR set to: 0
 14752  003D68  0E02               	movlw	2
 14753  003D6A  2784               	addwf	sprintf@ap& (0+255),f,b
 14754  003D6C  0E00               	movlw	0
 14755  003D6E  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14756                           
 14757                           ; BSR set to: 0
 14758                           ;doprnt.c: 740: if(!cp)
 14759  003D70  5187               	movf	sprintf@cp& (0+255),w,b
 14760  003D72  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14761  003D74  A4D8               	btfss	status,2,c
 14762  003D76  D014               	goto	l2982
 14763                           
 14764                           ; BSR set to: 0
 14765                           ;doprnt.c: 741: cp = "(null)";
 14766  003D78  0ED8               	movlw	low STR_32
 14767  003D7A  6F87               	movwf	sprintf@cp& (0+255),b
 14768  003D7C  0EFF               	movlw	high STR_32
 14769  003D7E  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14770                           
 14771                           ; BSR set to: 0
 14772                           ;doprnt.c: 777: while(*cp)
 14773  003D80  D00F               	goto	l2982
 14774  003D82                     
 14775                           ; BSR set to: 0
 14776                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14777                           
 14778                           ; BSR set to: 0
 14779  003D82  C087  FFF6         	movff	sprintf@cp,tblptrl
 14780  003D86  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14781  003D8A                     	if	0	;tblptru may be non-zero
 14782  003D8A                     	endif
 14783  003D8A                     	if	0	;tblptru may be non-zero
 14784  003D8A                     	endif
 14785  003D8A  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14786  003D8E  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14787  003D92  0008               	tblrd		*
 14788  003D94  CFF5 FFDF          	movff	tablat,indf2
 14789                           
 14790                           ; BSR set to: 0
 14791  003D98  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14792  003D9A  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14793                           
 14794                           ; BSR set to: 0
 14795  003D9C  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14796  003D9E  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14797  003DA0                     l2982:
 14798                           
 14799                           ; BSR set to: 0
 14800                           
 14801                           ; BSR set to: 0
 14802  003DA0  C087  FFF6         	movff	sprintf@cp,tblptrl
 14803  003DA4  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14804  003DA8                     	if	0	;tblptru may be non-zero
 14805  003DA8                     	endif
 14806  003DA8                     	if	0	;tblptru may be non-zero
 14807  003DA8                     	endif
 14808  003DA8  0008               	tblrd		*
 14809  003DAA  50F5               	movf	tablat,w,c
 14810  003DAC  0900               	iorlw	0
 14811  003DAE  B4D8               	btfsc	status,2,c
 14812  003DB0  D011               	goto	l2986
 14813  003DB2  D7E7               	goto	l2983
 14814  003DB4                     l2977:
 14815                           
 14816                           ; BSR set to: 0
 14817                           
 14818                           ; BSR set to: 0
 14819  003DB4  C07F  FFF6         	movff	sprintf@f,tblptrl
 14820  003DB8  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14821  003DBC  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14822  003DBE  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14823  003DC0                     	if	0	;tblptru may be non-zero
 14824  003DC0                     	endif
 14825  003DC0                     	if	0	;tblptru may be non-zero
 14826  003DC0                     	endif
 14827  003DC0  0008               	tblrd		*
 14828  003DC2  CFF5 F086          	movff	tablat,sprintf@c
 14829  003DC6  5186               	movf	sprintf@c& (0+255),w,b
 14830                           
 14831                           ; Switch size 1, requested type "space"
 14832                           ; Number of cases is 2, Range of values is 0 to 115
 14833                           ; switch strategies available:
 14834                           ; Name         Instructions Cycles
 14835                           ; simple_byte            7     4 (average)
 14836                           ;	Chosen strategy is simple_byte
 14837  003DC8  0A00               	xorlw	0	; case 0
 14838  003DCA  B4D8               	btfsc	status,2,c
 14839  003DCC  D00F               	goto	u14610
 14840  003DCE  0A73               	xorlw	115	; case 115
 14841  003DD0  B4D8               	btfsc	status,2,c
 14842  003DD2  D7C2               	goto	l2980
 14843  003DD4                     l2986:
 14844                           
 14845                           ; BSR set to: 0
 14846                           
 14847                           ; BSR set to: 0
 14848                           
 14849                           ;doprnt.c: 1422: {
 14850                           
 14851                           ; BSR set to: 0
 14852  003DD4  C07F  FFF6         	movff	sprintf@f,tblptrl
 14853  003DD8  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14854  003DDC  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14855  003DDE  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14856  003DE0                     	if	0	;tblptru may be non-zero
 14857  003DE0                     	endif
 14858  003DE0                     	if	0	;tblptru may be non-zero
 14859  003DE0                     	endif
 14860  003DE0  0008               	tblrd		*
 14861  003DE2  CFF5 F086          	movff	tablat,sprintf@c
 14862  003DE6  5186               	movf	sprintf@c& (0+255),w,b
 14863  003DE8  A4D8               	btfss	status,2,c
 14864  003DEA  D7A6               	goto	l2975
 14865  003DEC                     u14610:
 14866                           
 14867                           ; BSR set to: 0
 14868                           ;doprnt.c: 1538: *sp = 0;
 14869                           
 14870                           ; BSR set to: 0
 14871                           
 14872                           ;doprnt.c: 1469: }
 14873                           ;doprnt.c: 1533: }
 14874                           ;doprnt.c: 1535: alldone:
 14875                           
 14876                           ; BSR set to: 0
 14877  003DEC  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14878  003DF0  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14879  003DF4  0E00               	movlw	0
 14880  003DF6  6EDF               	movwf	indf2,c
 14881  003DF8  0012               	return	
 14882  003DFA                     __end_of_sprintf:
 14883                           	opt stack 0
 14884                           tosu	equ	0xFFF
 14885                           tosh	equ	0xFFE
 14886                           tosl	equ	0xFFD
 14887                           pclath	equ	0xFFA
 14888                           tblptru	equ	0xFF8
 14889                           tblptrh	equ	0xFF7
 14890                           tblptrl	equ	0xFF6
 14891                           tablat	equ	0xFF5
 14892                           prodh	equ	0xFF4
 14893                           prodl	equ	0xFF3
 14894                           intcon	equ	0xFF2
 14895                           intcon2	equ	0xFF1
 14896                           intcon3	equ	0xFF0
 14897                           indf0	equ	0xFEF
 14898                           postinc0	equ	0xFEE
 14899                           plusw0	equ	0xFEB
 14900                           fsr0h	equ	0xFEA
 14901                           fsr0l	equ	0xFE9
 14902                           wreg	equ	0xFE8
 14903                           indf1	equ	0xFE7
 14904                           postinc1	equ	0xFE6
 14905                           postdec1	equ	0xFE5
 14906                           fsr1h	equ	0xFE2
 14907                           fsr1l	equ	0xFE1
 14908                           indf2	equ	0xFDF
 14909                           postinc2	equ	0xFDE
 14910                           postdec2	equ	0xFDD
 14911                           plusw2	equ	0xFDB
 14912                           fsr2h	equ	0xFDA
 14913                           fsr2l	equ	0xFD9
 14914                           status	equ	0xFD8
 14915                           
 14916 ;; *************** function _memset *****************
 14917 ;; Defined at:
 14918 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14919 ;; Parameters:    Size  Location     Type
 14920 ;;  p1              2   29[BANK0 ] PTR void 
 14921 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14922 ;;  c               2   31[BANK0 ] int 
 14923 ;;  n               2   33[BANK0 ] unsigned int 
 14924 ;; Auto vars:     Size  Location     Type
 14925 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14926 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14927 ;; Return value:  Size  Location     Type
 14928 ;;                  2   29[BANK0 ] PTR void 
 14929 ;; Registers used:
 14930 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14931 ;; Tracked objects:
 14932 ;;		On entry : 0/0
 14933 ;;		On exit  : 0/0
 14934 ;;		Unchanged: 0/0
 14935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14936 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14937 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14939 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14940 ;;Total ram usage:        8 bytes
 14941 ;; Hardware stack levels used:    1
 14942 ;; Hardware stack levels required when called:   11
 14943 ;; This function calls:
 14944 ;;		Nothing
 14945 ;; This function is called by:
 14946 ;;		_USBDeviceInit
 14947 ;;		_USBStdSetCfgHandler
 14948 ;;		_Term_MainSm
 14949 ;; This function uses a non-reentrant model
 14950 ;;
 14951                           
 14952                           	psect	text59
 14953  00676C                     __ptext59:
 14954                           	opt stack 0
 14955  00676C                     _memset:
 14956                           	opt stack 14
 14957                           
 14958                           ; BSR set to: 0
 14959                           ;incstack = 0
 14960  00676C  C07D  F083         	movff	memset@p1,memset@p
 14961  006770  C07E  F084         	movff	memset@p1+1,memset@p+1
 14962  006774  D009               	goto	l3456
 14963  006776                     l13233:
 14964  006776  C083  FFD9         	movff	memset@p,fsr2l
 14965  00677A  C084  FFDA         	movff	memset@p+1,fsr2h
 14966  00677E  C07F  FFDF         	movff	memset@c,indf2
 14967  006782  0100               	movlb	0	; () banked
 14968  006784  4B83               	infsnz	memset@p& (0+255),f,b
 14969  006786  2B84               	incf	(memset@p+1)& (0+255),f,b
 14970  006788                     l3456:
 14971                           
 14972                           ; BSR set to: 0
 14973  006788  0100               	movlb	0	; () banked
 14974  00678A  0781               	decf	memset@n& (0+255),f,b
 14975  00678C  A0D8               	btfss	status,0,c
 14976  00678E  0782               	decf	(memset@n+1)& (0+255),f,b
 14977  006790  2981               	incf	memset@n& (0+255),w,b
 14978  006792  E1F1               	bnz	l13233
 14979  006794  2982               	incf	(memset@n+1)& (0+255),w,b
 14980  006796  B4D8               	btfsc	status,2,c
 14981  006798  0012               	return	
 14982  00679A  D7ED               	goto	l3457
 14983  00679C                     __end_of_memset:
 14984                           	opt stack 0
 14985                           tosu	equ	0xFFF
 14986                           tosh	equ	0xFFE
 14987                           tosl	equ	0xFFD
 14988                           pclath	equ	0xFFA
 14989                           tblptru	equ	0xFF8
 14990                           tblptrh	equ	0xFF7
 14991                           tblptrl	equ	0xFF6
 14992                           tablat	equ	0xFF5
 14993                           prodh	equ	0xFF4
 14994                           prodl	equ	0xFF3
 14995                           intcon	equ	0xFF2
 14996                           intcon2	equ	0xFF1
 14997                           intcon3	equ	0xFF0
 14998                           indf0	equ	0xFEF
 14999                           postinc0	equ	0xFEE
 15000                           plusw0	equ	0xFEB
 15001                           fsr0h	equ	0xFEA
 15002                           fsr0l	equ	0xFE9
 15003                           wreg	equ	0xFE8
 15004                           indf1	equ	0xFE7
 15005                           postinc1	equ	0xFE6
 15006                           postdec1	equ	0xFE5
 15007                           fsr1h	equ	0xFE2
 15008                           fsr1l	equ	0xFE1
 15009                           indf2	equ	0xFDF
 15010                           postinc2	equ	0xFDE
 15011                           postdec2	equ	0xFDD
 15012                           plusw2	equ	0xFDB
 15013                           fsr2h	equ	0xFDA
 15014                           fsr2l	equ	0xFD9
 15015                           status	equ	0xFD8
 15016                           
 15017 ;; *************** function _Terminal *****************
 15018 ;; Defined at:
 15019 ;;		line 429 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;		None
 15022 ;; Auto vars:     Size  Location     Type
 15023 ;;  i               1   68[BANK0 ] unsigned char 
 15024 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 15025 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 15026 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 15027 ;;  Index           1   70[BANK0 ] unsigned char 
 15028 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  1    wreg      void 
 15031 ;; Registers used:
 15032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15033 ;; Tracked objects:
 15034 ;;		On entry : 0/0
 15035 ;;		On exit  : 0/0
 15036 ;;		Unchanged: 0/0
 15037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15039 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15041 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15042 ;;Total ram usage:      455 bytes
 15043 ;; Hardware stack levels used:    1
 15044 ;; Hardware stack levels required when called:   15
 15045 ;; This function calls:
 15046 ;;		_I2cSlv_I2cReadMsgSts
 15047 ;;		_I2cSlv_ReceiveI2cMsg
 15048 ;;		_I2cSlv_SendI2cMsg
 15049 ;;		_OsTmr_Wait
 15050 ;;		_atoi
 15051 ;;		_getsUSBUSART
 15052 ;;		_itoa
 15053 ;;		_putUSBUSART
 15054 ;;		_strcpy
 15055 ;;		_strtol
 15056 ;;		_xtoi
 15057 ;; This function is called by:
 15058 ;;		_Term_MainSm
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062                           	psect	text60
 15063  0000D0                     __ptext60:
 15064                           	opt stack 0
 15065  0000D0                     _Terminal:
 15066                           	opt stack 11
 15067                           
 15068                           ;term.c: 431: static TermStateType TermState = Term_GetData;
 15069                           ;term.c: 432: UINT8 UsbRxBuffer[200u];
 15070                           ;term.c: 433: UINT8 UsbTxBuffer[200u];
 15071                           ;term.c: 434: UINT8 TermTxBuffer[50u];
 15072                           ;term.c: 435: static UINT8 TermRxBuffer[50u];
 15073                           ;term.c: 436: UINT8 Index;
 15074                           ;term.c: 437: static UINT8 Len[4];
 15075                           ;term.c: 438: static UINT8 PackageLen;
 15076                           ;term.c: 439: static UINT8 Addr[4];
 15077                           ;term.c: 440: static UINT8 SlaveAddr;
 15078                           ;term.c: 441: static PayloadType Payload[20u];
 15079                           ;term.c: 442: UINT8 ReceivedBytes = 0;
 15080                           
 15081                           ; BSR set to: 0
 15082                           ;incstack = 0
 15083  0000D0  0E00               	movlw	0
 15084  0000D2  0100               	movlb	0	; () banked
 15085  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15086                           
 15087                           ; BSR set to: 0
 15088                           ;term.c: 444: static UINT8 FormatOption = 0u;
 15089                           ;term.c: 445: static UINT8 EchoOption = 1u;
 15090                           ;term.c: 446: static SwTimerType SwTimer;
 15091                           ;term.c: 449: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15092  0000D6  0E1F               	movlw	31
 15093  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 15094  0000DA  0012               	return	
 15095                           
 15096                           ; BSR set to: 0
 15097  0000DC  B265               	btfsc	3941,1,c	;volatile
 15098  0000DE  0012               	return	
 15099  0000E0  D27B               	goto	l2407
 15100  0000E2                     
 15101                           ;term.c: 456: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15102                           
 15103                           ; BSR set to: 0
 15104  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15105  0000E4  0100               	movlb	0	; () banked
 15106  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15107  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15108  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15109  0000EC  0EC8               	movlw	200
 15110  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15111  0000F0  EC12  F027         	call	_getsUSBUSART	;wreg free
 15112  0000F4  0100               	movlb	0	; () banked
 15113  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15114                           
 15115                           ; BSR set to: 0
 15116                           ;term.c: 459: if (ReceivedBytes > 0)
 15117  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15118  0000FA  B4D8               	btfsc	status,2,c
 15119  0000FC  0012               	return	
 15120                           
 15121                           ; BSR set to: 0
 15122                           ;term.c: 460: {
 15123                           ;term.c: 462: if (EchoOption == 1u)
 15124  0000FE  0102               	movlb	2	; () banked
 15125  000100  05F1               	decf	Terminal@EchoOption& (0+255),w,b
 15126  000102  A4D8               	btfss	status,2,c
 15127  000104  D026               	goto	l2411
 15128                           
 15129                           ; BSR set to: 2
 15130                           ;term.c: 463: {
 15131                           ;term.c: 465: if((cdc_trf_state == 0))
 15132  000106  0100               	movlb	0	; () banked
 15133  000108  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15134  00010A  A4D8               	btfss	status,2,c
 15135  00010C  D022               	goto	l2411
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;term.c: 466: {
 15139                           ;term.c: 467: UsbRxBuffer[ReceivedBytes] = '\r';
 15140  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15141  000110  0D01               	mullw	1
 15142  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15143  000114  24F3               	addwf	prodl,w,c
 15144  000116  6ED9               	movwf	fsr2l,c
 15145  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15146  00011A  20F4               	addwfc	prodh,w,c
 15147  00011C  6EDA               	movwf	fsr2h,c
 15148  00011E  0E0D               	movlw	13
 15149  000120  6EDF               	movwf	indf2,c
 15150                           
 15151                           ; BSR set to: 0
 15152                           ;term.c: 468: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15153  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15154  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15155  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15156  000128  0E01               	movlw	1
 15157  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15158  00012C  0E00               	movlw	0
 15159  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15160  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15161  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15162  000134  6ED9               	movwf	fsr2l,c
 15163  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15164  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15165  00013A  6EDA               	movwf	fsr2h,c
 15166  00013C  0E0A               	movlw	10
 15167  00013E  6EDF               	movwf	indf2,c
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;term.c: 469: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15171  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15172  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15173  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15174  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15175  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15176  00014A  0F02               	addlw	2
 15177  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15178  00014E  EC0E  F035         	call	_putUSBUSART	;wreg free
 15179  000152                     l2411:
 15180                           
 15181                           ;term.c: 470: }
 15182                           ;term.c: 471: }
 15183                           ;term.c: 474: if ((UsbRxBuffer[0u] == 'S') &&
 15184                           ;term.c: 475: (UsbRxBuffer[0u + 1u] == 'O') &&
 15185                           ;term.c: 476: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15186  000152  0E53               	movlw	83
 15187  000154  010A               	movlb	10	; () banked
 15188  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15189  000158  A4D8               	btfss	status,2,c
 15190  00015A  D043               	goto	l2412
 15191                           
 15192                           ; BSR set to: 10
 15193  00015C  0E4F               	movlw	79
 15194  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15195  000160  A4D8               	btfss	status,2,c
 15196  000162  D03F               	goto	l2412
 15197                           
 15198                           ; BSR set to: 10
 15199  000164  0E3A               	movlw	58
 15200  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15201  000168  A4D8               	btfss	status,2,c
 15202  00016A  D03B               	goto	l2412
 15203                           
 15204                           ; BSR set to: 10
 15205                           ;term.c: 477: {
 15206                           ;term.c: 479: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15207  00016C  0E47               	movlw	71
 15208  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15209  000170  A4D8               	btfss	status,2,c
 15210  000172  0012               	return	
 15211                           
 15212                           ; BSR set to: 10
 15213  000174  0E3A               	movlw	58
 15214  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15215  000178  A4D8               	btfss	status,2,c
 15216  00017A  0012               	return	
 15217                           
 15218                           ; BSR set to: 10
 15219                           ;term.c: 480: {
 15220                           ;term.c: 482: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15221  00017C  0E44               	movlw	68
 15222  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15223  000180  A4D8               	btfss	status,2,c
 15224  000182  D015               	goto	l2414
 15225                           
 15226                           ; BSR set to: 10
 15227  000184  0E46               	movlw	70
 15228  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15229  000188  A4D8               	btfss	status,2,c
 15230  00018A  D011               	goto	l2414
 15231                           
 15232                           ; BSR set to: 10
 15233                           ;term.c: 483: {
 15234                           ;term.c: 484: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15235  00018C  0E41               	movlw	65
 15236  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15237  000190  A4D8               	btfss	status,2,c
 15238  000192  D004               	goto	l2415
 15239                           
 15240                           ; BSR set to: 10
 15241                           ;term.c: 485: {
 15242                           ;term.c: 486: FormatOption = 1u;
 15243  000194  0E01               	movlw	1
 15244  000196  0102               	movlb	2	; () banked
 15245  000198  6FE8               	movwf	Terminal@FormatOption& (0+255),b
 15246                           
 15247                           ;term.c: 487: }
 15248  00019A  0012               	return	
 15249  00019C                     l2415:
 15250                           
 15251                           ;term.c: 488: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15252                           
 15253                           ; BSR set to: 2
 15254  00019C  0E42               	movlw	66
 15255  00019E  010A               	movlb	10	; () banked
 15256  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15257  0001A2  A4D8               	btfss	status,2,c
 15258  0001A4  0012               	return	
 15259                           
 15260                           ; BSR set to: 10
 15261                           ;term.c: 489: {
 15262                           ;term.c: 490: FormatOption = 0u;
 15263  0001A6  0E00               	movlw	0
 15264  0001A8  0102               	movlb	2	; () banked
 15265  0001AA  6FE8               	movwf	Terminal@FormatOption& (0+255),b
 15266                           
 15267                           ; BSR set to: 2
 15268                           ;term.c: 491: }
 15269                           ;term.c: 492: }
 15270                           
 15271                           ; BSR set to: 2
 15272  0001AC  0012               	return	
 15273  0001AE                     l2414:
 15274                           
 15275                           ;term.c: 494: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15276                           
 15277                           ; BSR set to: 2
 15278  0001AE  0E45               	movlw	69
 15279  0001B0  010A               	movlb	10	; () banked
 15280  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15281  0001B4  A4D8               	btfss	status,2,c
 15282  0001B6  0012               	return	
 15283                           
 15284                           ; BSR set to: 10
 15285  0001B8  0E4D               	movlw	77
 15286  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15287  0001BC  A4D8               	btfss	status,2,c
 15288  0001BE  0012               	return	
 15289                           
 15290                           ; BSR set to: 10
 15291                           ;term.c: 495: {
 15292                           ;term.c: 496: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15293  0001C0  0E31               	movlw	49
 15294  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15295  0001C4  A4D8               	btfss	status,2,c
 15296  0001C6  D004               	goto	l2420
 15297                           
 15298                           ; BSR set to: 10
 15299                           ;term.c: 497: {
 15300                           ;term.c: 498: EchoOption = 1u;
 15301  0001C8  0E01               	movlw	1
 15302  0001CA  0102               	movlb	2	; () banked
 15303  0001CC  6FF1               	movwf	Terminal@EchoOption& (0+255),b
 15304                           
 15305                           ;term.c: 499: }
 15306  0001CE  0012               	return	
 15307  0001D0                     l2420:
 15308                           
 15309                           ;term.c: 500: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15310                           
 15311                           ; BSR set to: 2
 15312  0001D0  0E30               	movlw	48
 15313  0001D2  010A               	movlb	10	; () banked
 15314  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15315  0001D6  A4D8               	btfss	status,2,c
 15316  0001D8  0012               	return	
 15317                           
 15318                           ; BSR set to: 10
 15319                           ;term.c: 501: {
 15320                           ;term.c: 502: EchoOption = 0u;
 15321  0001DA  0E00               	movlw	0
 15322  0001DC  0102               	movlb	2	; () banked
 15323  0001DE  6FF1               	movwf	Terminal@EchoOption& (0+255),b
 15324                           
 15325                           ; BSR set to: 2
 15326                           ;term.c: 508: }
 15327                           ;term.c: 509: }
 15328                           ;term.c: 510: }
 15329                           
 15330                           ; BSR set to: 2
 15331                           
 15332                           ; BSR set to: 2
 15333                           
 15334                           ;term.c: 505: else
 15335                           ;term.c: 506: {
 15336                           
 15337                           ; BSR set to: 2
 15338                           
 15339                           ; BSR set to: 2
 15340                           ;term.c: 503: }
 15341                           ;term.c: 504: }
 15342                           
 15343                           ; BSR set to: 2
 15344  0001E0  0012               	return	
 15345  0001E2                     l2412:
 15346                           
 15347                           ;term.c: 511: else if ((UsbRxBuffer[0u] == 'S') &&
 15348                           ;term.c: 512: (UsbRxBuffer[0u + 1u] == 'B') &&
 15349                           ;term.c: 513: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15350                           
 15351                           ; BSR set to: 2
 15352  0001E2  0E53               	movlw	83
 15353  0001E4  010A               	movlb	10	; () banked
 15354  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15355  0001E8  A4D8               	btfss	status,2,c
 15356  0001EA  D0D3               	goto	l2425
 15357                           
 15358                           ; BSR set to: 10
 15359  0001EC  0E42               	movlw	66
 15360  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15361  0001F0  A4D8               	btfss	status,2,c
 15362  0001F2  D0CF               	goto	l2425
 15363                           
 15364                           ; BSR set to: 10
 15365  0001F4  0E3A               	movlw	58
 15366  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15367  0001F8  A4D8               	btfss	status,2,c
 15368  0001FA  D0CB               	goto	l2425
 15369                           
 15370                           ; BSR set to: 10
 15371                           ;term.c: 514: {
 15372                           ;term.c: 515: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15373  0001FC  0E57               	movlw	87
 15374  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15375  000200  A4D8               	btfss	status,2,c
 15376  000202  D091               	goto	l2426
 15377                           
 15378                           ; BSR set to: 10
 15379  000204  0E3A               	movlw	58
 15380  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15381  000208  A4D8               	btfss	status,2,c
 15382  00020A  D08D               	goto	l2426
 15383                           
 15384                           ; BSR set to: 10
 15385                           ;term.c: 516: {
 15386                           ;term.c: 518: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15387  00020C  CA05  F3B3         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15388                           
 15389                           ;term.c: 519: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15390  000210  CA06  F3B4         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15391                           
 15392                           ;term.c: 521: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15393  000214  CA08  F3AF         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15394                           
 15395                           ;term.c: 522: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15396  000218  CA09  F3B0         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15397                           
 15398                           ; BSR set to: 10
 15399                           ;term.c: 524: PackageLen = atoi((void*)Len);
 15400  00021C  0EB3               	movlw	low Terminal@Len
 15401  00021E  0100               	movlb	0	; () banked
 15402  000220  6F83               	movwf	atoi@s& (0+255),b
 15403  000222  0E03               	movlw	high Terminal@Len
 15404  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15405  000226  EC7F  F01C         	call	_atoi	;wreg free
 15406  00022A  0100               	movlb	0	; () banked
 15407  00022C  5183               	movf	?_atoi& (0+255),w,b
 15408  00022E  0102               	movlb	2	; () banked
 15409  000230  6FEA               	movwf	Terminal@PackageLen& (0+255),b
 15410                           
 15411                           ; BSR set to: 2
 15412                           ;term.c: 525: SlaveAddr = xtoi((void*)Addr);
 15413  000232  0EAF               	movlw	low Terminal@Addr
 15414  000234  0100               	movlb	0	; () banked
 15415  000236  6F83               	movwf	xtoi@s& (0+255),b
 15416  000238  0E03               	movlw	high Terminal@Addr
 15417  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15418  00023C  EC2E  F01B         	call	_xtoi	;wreg free
 15419  000240  0100               	movlb	0	; () banked
 15420  000242  5183               	movf	?_xtoi& (0+255),w,b
 15421  000244  0102               	movlb	2	; () banked
 15422  000246  6FE9               	movwf	Terminal@SlaveAddr& (0+255),b
 15423                           
 15424                           ; BSR set to: 2
 15425                           ;term.c: 527: for (Index = 0; Index <= PackageLen; Index++)
 15426  000248  0E00               	movlw	0
 15427  00024A  0100               	movlb	0	; () banked
 15428  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15429  00024E  D032               	goto	l2427
 15430  000250                     
 15431                           ;term.c: 528: {
 15432                           ;term.c: 529: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15433                           
 15434                           ; BSR set to: 0
 15435  000250  0100               	movlb	0	; () banked
 15436  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15437  000254  0D02               	mullw	2
 15438  000256  0E0B               	movlw	11
 15439  000258  26F3               	addwf	prodl,f,c
 15440  00025A  0E00               	movlw	0
 15441  00025C  22F4               	addwfc	prodh,f,c
 15442  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15443  000260  24F3               	addwf	prodl,w,c
 15444  000262  6ED9               	movwf	fsr2l,c
 15445  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15446  000266  20F4               	addwfc	prodh,w,c
 15447  000268  6EDA               	movwf	fsr2h,c
 15448  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15449  00026C  0D04               	mullw	4
 15450  00026E  0E66               	movlw	low Terminal@Payload
 15451  000270  24F3               	addwf	prodl,w,c
 15452  000272  6EE1               	movwf	fsr1l,c
 15453  000274  0E07               	movlw	high Terminal@Payload
 15454  000276  20F4               	addwfc	prodh,w,c
 15455  000278  6EE2               	movwf	fsr1h,c
 15456  00027A  CFDF FFE7          	movff	indf2,indf1
 15457                           
 15458                           ;term.c: 530: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15459  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15460  000280  0D02               	mullw	2
 15461  000282  0E0C               	movlw	12
 15462  000284  26F3               	addwf	prodl,f,c
 15463  000286  0E00               	movlw	0
 15464  000288  22F4               	addwfc	prodh,f,c
 15465  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15466  00028C  24F3               	addwf	prodl,w,c
 15467  00028E  6ED9               	movwf	fsr2l,c
 15468  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15469  000292  20F4               	addwfc	prodh,w,c
 15470  000294  6EDA               	movwf	fsr2h,c
 15471  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15472  000298  0D04               	mullw	4
 15473  00029A  0E01               	movlw	1
 15474  00029C  26F3               	addwf	prodl,f,c
 15475  00029E  0E00               	movlw	0
 15476  0002A0  22F4               	addwfc	prodh,f,c
 15477  0002A2  0E66               	movlw	low Terminal@Payload
 15478  0002A4  24F3               	addwf	prodl,w,c
 15479  0002A6  6EE1               	movwf	fsr1l,c
 15480  0002A8  0E07               	movlw	high Terminal@Payload
 15481  0002AA  20F4               	addwfc	prodh,w,c
 15482  0002AC  6EE2               	movwf	fsr1h,c
 15483  0002AE  CFDF FFE7          	movff	indf2,indf1
 15484                           
 15485                           ; BSR set to: 0
 15486  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15487  0002B4                     l2427:
 15488                           
 15489                           ; BSR set to: 0
 15490                           
 15491                           ; BSR set to: 0
 15492  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15493  0002B6  0102               	movlb	2	; () banked
 15494  0002B8  5DEA               	subwf	Terminal@PackageLen& (0+255),w,b
 15495  0002BA  B0D8               	btfsc	status,0,c
 15496  0002BC  D7C9               	goto	l2428
 15497                           
 15498                           ; BSR set to: 2
 15499                           ;term.c: 531: }
 15500                           ;term.c: 533: for (Index = 0; Index <= PackageLen; Index++)
 15501                           
 15502                           ; BSR set to: 2
 15503  0002BE  0E00               	movlw	0
 15504  0002C0  0100               	movlb	0	; () banked
 15505  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15506  0002C4  D01F               	goto	l2430
 15507  0002C6                     
 15508                           ;term.c: 534: {
 15509                           ;term.c: 538: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15510                           
 15511                           ; BSR set to: 0
 15512  0002C6  0100               	movlb	0	; () banked
 15513  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15514  0002CA  0D04               	mullw	4
 15515  0002CC  0E66               	movlw	low Terminal@Payload
 15516  0002CE  24F3               	addwf	prodl,w,c
 15517  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15518  0002D2  0E07               	movlw	high Terminal@Payload
 15519  0002D4  20F4               	addwfc	prodh,w,c
 15520  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15521  0002D8  0E00               	movlw	0
 15522  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15523  0002DC  0E00               	movlw	0
 15524  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15525  0002E0  0E00               	movlw	0
 15526  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15527  0002E4  0E10               	movlw	16
 15528  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15529  0002E8  EC11  F00C         	call	_strtol	;wreg free
 15530  0002EC  0100               	movlb	0	; () banked
 15531  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15532  0002F0  0D01               	mullw	1
 15533  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15534  0002F4  24F3               	addwf	prodl,w,c
 15535  0002F6  6ED9               	movwf	fsr2l,c
 15536  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15537  0002FA  20F4               	addwfc	prodh,w,c
 15538  0002FC  6EDA               	movwf	fsr2h,c
 15539  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15540                           
 15541                           ; BSR set to: 0
 15542  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15543  000304                     l2430:
 15544                           
 15545                           ; BSR set to: 0
 15546                           
 15547                           ; BSR set to: 0
 15548  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15549  000306  0102               	movlb	2	; () banked
 15550  000308  5DEA               	subwf	Terminal@PackageLen& (0+255),w,b
 15551  00030A  B0D8               	btfsc	status,0,c
 15552  00030C  D7DC               	goto	l2431
 15553                           
 15554                           ; BSR set to: 2
 15555                           ;term.c: 540: }
 15556                           ;term.c: 543: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15557                           
 15558                           ; BSR set to: 2
 15559  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15560  000310  0100               	movlb	0	; () banked
 15561  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15562  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15563  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15564  000318  C2E9  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15565  00031C  C2EA  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15566  000320  EC4D  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 15567                           
 15568                           ;term.c: 544: }
 15569  000324  0012               	return	
 15570  000326                     l2426:
 15571                           
 15572                           ;term.c: 545: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15573  000326  0E52               	movlw	82
 15574  000328  010A               	movlb	10	; () banked
 15575  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15576  00032C  A4D8               	btfss	status,2,c
 15577  00032E  0012               	return	
 15578                           
 15579                           ; BSR set to: 10
 15580  000330  0E3A               	movlw	58
 15581  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15582  000334  A4D8               	btfss	status,2,c
 15583  000336  0012               	return	
 15584                           
 15585                           ; BSR set to: 10
 15586                           ;term.c: 546: {
 15587                           ;term.c: 548: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15588  000338  CA05  F3B3         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15589                           
 15590                           ;term.c: 549: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15591  00033C  CA06  F3B4         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15592                           
 15593                           ;term.c: 551: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15594  000340  CA08  F3AF         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15595                           
 15596                           ;term.c: 552: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15597  000344  CA09  F3B0         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15598                           
 15599                           ; BSR set to: 10
 15600                           ;term.c: 554: PackageLen = atoi((void*)Len);
 15601  000348  0EB3               	movlw	low Terminal@Len
 15602  00034A  0100               	movlb	0	; () banked
 15603  00034C  6F83               	movwf	atoi@s& (0+255),b
 15604  00034E  0E03               	movlw	high Terminal@Len
 15605  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15606  000352  EC7F  F01C         	call	_atoi	;wreg free
 15607  000356  0100               	movlb	0	; () banked
 15608  000358  5183               	movf	?_atoi& (0+255),w,b
 15609  00035A  0102               	movlb	2	; () banked
 15610  00035C  6FEA               	movwf	Terminal@PackageLen& (0+255),b
 15611                           
 15612                           ; BSR set to: 2
 15613                           ;term.c: 555: SlaveAddr = xtoi((void*)Addr);
 15614  00035E  0EAF               	movlw	low Terminal@Addr
 15615  000360  0100               	movlb	0	; () banked
 15616  000362  6F83               	movwf	xtoi@s& (0+255),b
 15617  000364  0E03               	movlw	high Terminal@Addr
 15618  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15619  000368  EC2E  F01B         	call	_xtoi	;wreg free
 15620  00036C  0100               	movlb	0	; () banked
 15621  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15622  000370  0102               	movlb	2	; () banked
 15623  000372  6FE9               	movwf	Terminal@SlaveAddr& (0+255),b
 15624                           
 15625                           ; BSR set to: 2
 15626                           ;term.c: 558: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15627  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15628  000376  0100               	movlb	0	; () banked
 15629  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15630  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15631  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15632  00037E  C2E9  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15633  000382  C2EA  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15634  000386  ECEE  F031         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15635                           
 15636                           ;term.c: 561: TermState = Term_PrepSlvI2cResp;
 15637  00038A  0E01               	movlw	1
 15638  00038C  0102               	movlb	2	; () banked
 15639  00038E  6FEB               	movwf	Terminal@TermState& (0+255),b
 15640                           
 15641                           ; BSR set to: 2
 15642                           ;term.c: 562: }
 15643                           ;term.c: 563: }
 15644                           
 15645                           ; BSR set to: 2
 15646  000390  0012               	return	
 15647  000392                     l2425:
 15648                           
 15649                           ;term.c: 564: else if ((UsbRxBuffer[0u] == 'T') &&
 15650                           ;term.c: 565: (UsbRxBuffer[0u + 1u] == 'E') &&
 15651                           ;term.c: 566: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15652                           
 15653                           ; BSR set to: 2
 15654  000392  0E54               	movlw	84
 15655  000394  010A               	movlb	10	; () banked
 15656  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15657  000398  A4D8               	btfss	status,2,c
 15658  00039A  0012               	return	
 15659                           
 15660                           ; BSR set to: 10
 15661  00039C  0E45               	movlw	69
 15662  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15663  0003A0  A4D8               	btfss	status,2,c
 15664  0003A2  0012               	return	
 15665                           
 15666                           ; BSR set to: 10
 15667  0003A4  0E4C               	movlw	76
 15668  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15669  0003A8  A4D8               	btfss	status,2,c
 15670  0003AA  0012               	return	
 15671                           
 15672                           ; BSR set to: 10
 15673                           ;term.c: 567: {
 15674                           ;term.c: 569: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15675  0003AC  CA03  F3B3         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15676                           
 15677                           ;term.c: 570: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15678  0003B0  CA04  F3B4         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15679                           
 15680                           ; BSR set to: 10
 15681                           ;term.c: 571: UsbMasterPhoneNumberLen = atoi(Len);
 15682  0003B4  0EB3               	movlw	low Terminal@Len
 15683  0003B6  0100               	movlb	0	; () banked
 15684  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15685  0003BA  0E03               	movlw	high Terminal@Len
 15686  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15687  0003BE  EC7F  F01C         	call	_atoi	;wreg free
 15688  0003C2  C083  F31A         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15689  0003C6  C084  F31B         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15690                           
 15691                           ;term.c: 573: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15692  0003CA  0E00               	movlw	0
 15693  0003CC  0100               	movlb	0	; () banked
 15694  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15695  0003D0  D018               	goto	l2437
 15696  0003D2                     
 15697                           ; BSR set to: 0
 15698                           ;term.c: 574: {
 15699                           ;term.c: 575: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15700                           
 15701                           ; BSR set to: 0
 15702  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15703  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15704  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15705  0003D8  0E05               	movlw	5
 15706  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15707  0003DC  0E00               	movlw	0
 15708  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15709  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15710  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15711  0003E4  6ED9               	movwf	fsr2l,c
 15712  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15713  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15714  0003EA  6EDA               	movwf	fsr2h,c
 15715  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15716  0003EE  0D01               	mullw	1
 15717  0003F0  0EAC               	movlw	low _UsbMasterPhoneNumber
 15718  0003F2  24F3               	addwf	prodl,w,c
 15719  0003F4  6EE1               	movwf	fsr1l,c
 15720  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15721  0003F8  20F4               	addwfc	prodh,w,c
 15722  0003FA  6EE2               	movwf	fsr1h,c
 15723  0003FC  CFDF FFE7          	movff	indf2,indf1
 15724                           
 15725                           ; BSR set to: 0
 15726  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15727  000402                     l2437:
 15728                           
 15729                           ; BSR set to: 0
 15730                           
 15731                           ; BSR set to: 0
 15732  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15733  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15734  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15735  000408  0103               	movlb	3	; () banked
 15736  00040A  511A               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15737  00040C  0100               	movlb	0	; () banked
 15738  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15739  000410  0103               	movlb	3	; () banked
 15740  000412  511B               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15741  000414  0100               	movlb	0	; () banked
 15742  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15743  000418  A0D8               	btfss	status,0,c
 15744  00041A  D7DB               	goto	l2438
 15745                           
 15746                           ; BSR set to: 0
 15747                           ;term.c: 576: }
 15748                           ;term.c: 577: IsUsbNumberReceived = 1;
 15749                           
 15750                           ; BSR set to: 0
 15751  00041C  0E01               	movlw	1
 15752  00041E  0102               	movlb	2	; () banked
 15753  000420  6FED               	movwf	_IsUsbNumberReceived& (0+255),b
 15754                           
 15755                           ; BSR set to: 2
 15756                           ;term.c: 584: }
 15757                           ;term.c: 616: }
 15758                           ;term.c: 617: break;
 15759                           
 15760                           ; BSR set to: 2
 15761                           
 15762                           ; BSR set to: 2
 15763                           
 15764                           ; BSR set to: 2
 15765                           
 15766                           ; BSR set to: 2
 15767                           
 15768                           ;term.c: 582: {
 15769                           
 15770                           ; BSR set to: 2
 15771                           
 15772                           ; BSR set to: 2
 15773                           
 15774                           ; BSR set to: 2
 15775                           
 15776                           ; BSR set to: 2
 15777                           
 15778                           ;term.c: 578: }
 15779  000422  0012               	return	
 15780  000424                     
 15781                           ; BSR set to: 2
 15782                           ;term.c: 621: if((cdc_trf_state == 0))
 15783                           
 15784                           ; BSR set to: 2
 15785  000424  0100               	movlb	0	; () banked
 15786  000426  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15787  000428  A4D8               	btfss	status,2,c
 15788  00042A  0012               	return	
 15789                           
 15790                           ; BSR set to: 0
 15791                           ;term.c: 622: {
 15792                           ;term.c: 623: UsbTxBuffer[0] = 'S';
 15793  00042C  0E53               	movlw	83
 15794  00042E  0102               	movlb	2	; () banked
 15795  000430  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15796                           
 15797                           ;term.c: 624: UsbTxBuffer[1] = 'B';
 15798  000432  0E42               	movlw	66
 15799  000434  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15800                           
 15801                           ;term.c: 625: UsbTxBuffer[2] = '[';
 15802  000436  0E5B               	movlw	91
 15803  000438  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15804                           
 15805                           ; BSR set to: 2
 15806                           ;term.c: 626: UsbTxBuffer[3] = Addr[0];
 15807  00043A  C3AF  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15808                           
 15809                           ; BSR set to: 2
 15810                           ;term.c: 627: UsbTxBuffer[4] = Addr[1];
 15811  00043E  C3B0  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15812                           
 15813                           ;term.c: 628: UsbTxBuffer[5] = ']';
 15814  000442  0E5D               	movlw	93
 15815  000444  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15816                           
 15817                           ;term.c: 629: UsbTxBuffer[6] = ':';
 15818  000446  0E3A               	movlw	58
 15819  000448  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15820                           
 15821                           ; BSR set to: 2
 15822                           ;term.c: 630: putUSBUSART(UsbTxBuffer,7);
 15823  00044A  0E00               	movlw	low Terminal@UsbTxBuffer
 15824  00044C  0100               	movlb	0	; () banked
 15825  00044E  6F83               	movwf	putUSBUSART@data& (0+255),b
 15826  000450  0E02               	movlw	high Terminal@UsbTxBuffer
 15827  000452  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15828  000454  0E07               	movlw	7
 15829  000456  6F85               	movwf	putUSBUSART@length& (0+255),b
 15830  000458  EC0E  F035         	call	_putUSBUSART	;wreg free
 15831                           
 15832                           ;term.c: 633: TermState = Term_ReadSlvI2cData;
 15833  00045C  0E02               	movlw	2
 15834  00045E  0102               	movlb	2	; () banked
 15835  000460  6FEB               	movwf	Terminal@TermState& (0+255),b
 15836                           
 15837                           ; BSR set to: 2
 15838                           ;term.c: 634: }
 15839                           ;term.c: 635: break;
 15840  000462  0012               	return	
 15841  000464                     
 15842                           ; BSR set to: 2
 15843                           ;term.c: 639: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15844                           
 15845                           ; BSR set to: 2
 15846  000464  EC30  F035         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15847  000468  06E8               	decf	wreg,f,c
 15848  00046A  A4D8               	btfss	status,2,c
 15849  00046C  D088               	goto	l2446
 15850                           
 15851                           ;term.c: 640: {
 15852                           ;term.c: 642: if (FormatOption == 1u)
 15853  00046E  0102               	movlb	2	; () banked
 15854  000470  05E8               	decf	Terminal@FormatOption& (0+255),w,b
 15855  000472  A4D8               	btfss	status,2,c
 15856  000474  D027               	goto	u14490
 15857                           
 15858                           ; BSR set to: 2
 15859                           ;term.c: 643: {
 15860                           ;term.c: 645: for (Index = 0; Index <= PackageLen; Index++)
 15861  000476  0E00               	movlw	0
 15862  000478  0100               	movlb	0	; () banked
 15863  00047A  6FA6               	movwf	Terminal@Index& (0+255),b
 15864  00047C  D01E               	goto	l2448
 15865  00047E                     
 15866                           ;term.c: 646: {
 15867                           ;term.c: 647: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15868                           
 15869                           ; BSR set to: 0
 15870  00047E  0100               	movlb	0	; () banked
 15871  000480  51A6               	movf	Terminal@Index& (0+255),w,b
 15872  000482  0D04               	mullw	4
 15873  000484  0E66               	movlw	low Terminal@Payload
 15874  000486  24F3               	addwf	prodl,w,c
 15875  000488  6F93               	movwf	itoa@buf& (0+255),b
 15876  00048A  0E07               	movlw	high Terminal@Payload
 15877  00048C  20F4               	addwfc	prodh,w,c
 15878  00048E  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15879  000490  51A6               	movf	Terminal@Index& (0+255),w,b
 15880  000492  0D01               	mullw	1
 15881  000494  0E40               	movlw	low Terminal@TermRxBuffer
 15882  000496  24F3               	addwf	prodl,w,c
 15883  000498  6ED9               	movwf	fsr2l,c
 15884  00049A  0E05               	movlw	high Terminal@TermRxBuffer
 15885  00049C  20F4               	addwfc	prodh,w,c
 15886  00049E  6EDA               	movwf	fsr2h,c
 15887  0004A0  50DF               	movf	indf2,w,c
 15888  0004A2  6FA2               	movwf	??_Terminal& (0+255),b
 15889  0004A4  51A2               	movf	??_Terminal& (0+255),w,b
 15890  0004A6  6F95               	movwf	itoa@val& (0+255),b
 15891  0004A8  6B96               	clrf	(itoa@val+1)& (0+255),b
 15892  0004AA  0E00               	movlw	0
 15893  0004AC  6F98               	movwf	(itoa@base+1)& (0+255),b
 15894  0004AE  0E0A               	movlw	10
 15895  0004B0  6F97               	movwf	itoa@base& (0+255),b
 15896  0004B2  EC68  F031         	call	_itoa	;wreg free
 15897  0004B6  0100               	movlb	0	; () banked
 15898  0004B8  2BA6               	incf	Terminal@Index& (0+255),f,b
 15899  0004BA                     l2448:
 15900                           
 15901                           ; BSR set to: 0
 15902                           
 15903                           ; BSR set to: 0
 15904  0004BA  51A6               	movf	Terminal@Index& (0+255),w,b
 15905  0004BC  0102               	movlb	2	; () banked
 15906  0004BE  5DEA               	subwf	Terminal@PackageLen& (0+255),w,b
 15907  0004C0  B0D8               	btfsc	status,0,c
 15908  0004C2  D7DD               	goto	l2449
 15909  0004C4                     u14490:
 15910                           
 15911                           ; BSR set to: 2
 15912                           ;term.c: 648: }
 15913                           ;term.c: 649: }
 15914                           ;term.c: 652: if((cdc_trf_state == 0))
 15915                           
 15916                           ; BSR set to: 2
 15917                           
 15918                           ; BSR set to: 2
 15919  0004C4  0100               	movlb	0	; () banked
 15920  0004C6  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15921  0004C8  A4D8               	btfss	status,2,c
 15922  0004CA  0012               	return	
 15923                           
 15924                           ; BSR set to: 0
 15925                           ;term.c: 653: {
 15926                           ;term.c: 655: if (FormatOption == 1u)
 15927  0004CC  0102               	movlb	2	; () banked
 15928  0004CE  05E8               	decf	Terminal@FormatOption& (0+255),w,b
 15929  0004D0  A4D8               	btfss	status,2,c
 15930  0004D2  D02B               	goto	l2452
 15931                           
 15932                           ; BSR set to: 2
 15933                           ;term.c: 656: {
 15934                           ;term.c: 657: Payload[(2*PackageLen)].Byte[3] = '\r';
 15935  0004D4  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15936  0004D6  0D08               	mullw	8
 15937  0004D8  0E03               	movlw	3
 15938  0004DA  26F3               	addwf	prodl,f,c
 15939  0004DC  0E00               	movlw	0
 15940  0004DE  22F4               	addwfc	prodh,f,c
 15941  0004E0  0E66               	movlw	low Terminal@Payload
 15942  0004E2  24F3               	addwf	prodl,w,c
 15943  0004E4  6ED9               	movwf	fsr2l,c
 15944  0004E6  0E07               	movlw	high Terminal@Payload
 15945  0004E8  20F4               	addwfc	prodh,w,c
 15946  0004EA  6EDA               	movwf	fsr2h,c
 15947  0004EC  0E0D               	movlw	13
 15948  0004EE  6EDF               	movwf	indf2,c
 15949                           
 15950                           ;term.c: 658: Payload[(2*PackageLen)].Byte[2] = '\n';
 15951  0004F0  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15952  0004F2  0D08               	mullw	8
 15953  0004F4  0E02               	movlw	2
 15954  0004F6  26F3               	addwf	prodl,f,c
 15955  0004F8  0E00               	movlw	0
 15956  0004FA  22F4               	addwfc	prodh,f,c
 15957  0004FC  0E66               	movlw	low Terminal@Payload
 15958  0004FE  24F3               	addwf	prodl,w,c
 15959  000500  6ED9               	movwf	fsr2l,c
 15960  000502  0E07               	movlw	high Terminal@Payload
 15961  000504  20F4               	addwfc	prodh,w,c
 15962  000506  6EDA               	movwf	fsr2h,c
 15963  000508  0E0A               	movlw	10
 15964  00050A  6EDF               	movwf	indf2,c
 15965                           
 15966                           ; BSR set to: 2
 15967                           ;term.c: 660: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15968  00050C  0E66               	movlw	low Terminal@Payload
 15969  00050E  0100               	movlb	0	; () banked
 15970  000510  6F83               	movwf	putUSBUSART@data& (0+255),b
 15971  000512  0E07               	movlw	high Terminal@Payload
 15972  000514  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15973  000516  0102               	movlb	2	; () banked
 15974  000518  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15975  00051A  0D02               	mullw	2
 15976  00051C  50F3               	movf	prodl,w,c
 15977  00051E  0F04               	addlw	4
 15978  000520  0100               	movlb	0	; () banked
 15979  000522  6F85               	movwf	putUSBUSART@length& (0+255),b
 15980  000524  EC0E  F035         	call	_putUSBUSART	;wreg free
 15981                           
 15982                           ;term.c: 661: }
 15983  000528  D026               	goto	l2453
 15984  00052A                     l2452:
 15985                           
 15986                           ;term.c: 662: else
 15987                           ;term.c: 663: {
 15988                           ;term.c: 664: TermRxBuffer[PackageLen] = '\r';
 15989  00052A  0102               	movlb	2	; () banked
 15990  00052C  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 15991  00052E  0D01               	mullw	1
 15992  000530  0E40               	movlw	low Terminal@TermRxBuffer
 15993  000532  24F3               	addwf	prodl,w,c
 15994  000534  6ED9               	movwf	fsr2l,c
 15995  000536  0E05               	movlw	high Terminal@TermRxBuffer
 15996  000538  20F4               	addwfc	prodh,w,c
 15997  00053A  6EDA               	movwf	fsr2h,c
 15998  00053C  0E0D               	movlw	13
 15999  00053E  6EDF               	movwf	indf2,c
 16000                           
 16001                           ; BSR set to: 2
 16002                           ;term.c: 665: TermRxBuffer[PackageLen + 1] = '\n';
 16003  000540  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 16004  000542  0100               	movlb	0	; () banked
 16005  000544  6FA2               	movwf	??_Terminal& (0+255),b
 16006  000546  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16007  000548  0E01               	movlw	1
 16008  00054A  27A2               	addwf	??_Terminal& (0+255),f,b
 16009  00054C  0E00               	movlw	0
 16010  00054E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16011  000550  0E40               	movlw	low Terminal@TermRxBuffer
 16012  000552  25A2               	addwf	??_Terminal& (0+255),w,b
 16013  000554  6ED9               	movwf	fsr2l,c
 16014  000556  0E05               	movlw	high Terminal@TermRxBuffer
 16015  000558  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16016  00055A  6EDA               	movwf	fsr2h,c
 16017  00055C  0E0A               	movlw	10
 16018  00055E  6EDF               	movwf	indf2,c
 16019                           
 16020                           ; BSR set to: 0
 16021                           ;term.c: 667: putUSBUSART(TermRxBuffer,PackageLen + 2);
 16022  000560  0E40               	movlw	low Terminal@TermRxBuffer
 16023  000562  6F83               	movwf	putUSBUSART@data& (0+255),b
 16024  000564  0E05               	movlw	high Terminal@TermRxBuffer
 16025  000566  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16026  000568  0102               	movlb	2	; () banked
 16027  00056A  51EA               	movf	Terminal@PackageLen& (0+255),w,b
 16028  00056C  0F02               	addlw	2
 16029  00056E  0100               	movlb	0	; () banked
 16030  000570  6F85               	movwf	putUSBUSART@length& (0+255),b
 16031  000572  EC0E  F035         	call	_putUSBUSART	;wreg free
 16032  000576                     l2453:
 16033                           
 16034                           ;term.c: 668: }
 16035                           ;term.c: 670: TermState = Term_GetData;
 16036  000576  0E00               	movlw	0
 16037  000578  0102               	movlb	2	; () banked
 16038  00057A  6FEB               	movwf	Terminal@TermState& (0+255),b
 16039                           
 16040                           ; BSR set to: 2
 16041                           ;term.c: 671: }
 16042                           ;term.c: 672: }
 16043  00057C  0012               	return	
 16044  00057E                     l2446:
 16045                           
 16046                           ;term.c: 673: else
 16047                           ;term.c: 674: {
 16048                           ;term.c: 676: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 16049                           
 16050                           ; BSR set to: 2
 16051  00057E  0ED7               	movlw	low Terminal@SwTimer
 16052  000580  0100               	movlb	0	; () banked
 16053  000582  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 16054  000584  0E04               	movlw	high Terminal@SwTimer
 16055  000586  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 16056  000588  0EB8               	movlw	184
 16057  00058A  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 16058  00058C  0E0B               	movlw	11
 16059  00058E  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 16060  000590  0E00               	movlw	0
 16061  000592  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 16062  000594  0E00               	movlw	0
 16063  000596  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 16064  000598  EC28  F02A         	call	_OsTmr_Wait	;wreg free
 16065  00059C  06E8               	decf	wreg,f,c
 16066  00059E  A4D8               	btfss	status,2,c
 16067  0005A0  0012               	return	
 16068                           
 16069                           ;term.c: 677: {
 16070                           ;term.c: 679: if((cdc_trf_state == 0))
 16071  0005A2  0100               	movlb	0	; () banked
 16072  0005A4  51C8               	movf	_cdc_trf_state& (0+255),w,b
 16073  0005A6  A4D8               	btfss	status,2,c
 16074  0005A8  0012               	return	
 16075                           
 16076                           ; BSR set to: 0
 16077                           ;term.c: 680: {
 16078                           ;term.c: 681: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 16079  0005AA  0E00               	movlw	low Terminal@UsbTxBuffer
 16080  0005AC  6F7D               	movwf	strcpy@to& (0+255),b
 16081  0005AE  0E02               	movlw	high Terminal@UsbTxBuffer
 16082  0005B0  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 16083  0005B2  0E5F               	movlw	low STR_21
 16084  0005B4  6F7F               	movwf	strcpy@from& (0+255),b
 16085  0005B6  0EFE               	movlw	high STR_21
 16086  0005B8  6F80               	movwf	(strcpy@from+1)& (0+255),b
 16087  0005BA  EC85  F033         	call	_strcpy	;wreg free
 16088                           
 16089                           ;term.c: 682: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 16090  0005BE  0E00               	movlw	low Terminal@UsbTxBuffer
 16091  0005C0  0100               	movlb	0	; () banked
 16092  0005C2  6F83               	movwf	putUSBUSART@data& (0+255),b
 16093  0005C4  0E02               	movlw	high Terminal@UsbTxBuffer
 16094  0005C6  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16095  0005C8  0E29               	movlw	41
 16096  0005CA  6F85               	movwf	putUSBUSART@length& (0+255),b
 16097  0005CC  EC0E  F035         	call	_putUSBUSART	;wreg free
 16098                           
 16099                           ;term.c: 684: TermState = Term_GetData;
 16100  0005D0  0E00               	movlw	0
 16101  0005D2  0102               	movlb	2	; () banked
 16102  0005D4  6FEB               	movwf	Terminal@TermState& (0+255),b
 16103                           
 16104                           ; BSR set to: 2
 16105                           ;term.c: 695: }
 16106                           
 16107                           ; BSR set to: 2
 16108                           ;term.c: 694: break;
 16109                           
 16110                           ;term.c: 693: default:
 16111                           
 16112                           ; BSR set to: 2
 16113                           ;term.c: 691: break;
 16114                           
 16115                           ;term.c: 690: case Term_ReadSlvUartData:
 16116                           
 16117                           ; BSR set to: 2
 16118                           ;term.c: 685: }
 16119                           ;term.c: 686: }
 16120                           ;term.c: 687: }
 16121                           ;term.c: 688: break;
 16122                           
 16123                           ; BSR set to: 2
 16124                           
 16125                           ; BSR set to: 2
 16126  0005D6  0012               	return	
 16127  0005D8                     l2407:
 16128                           
 16129                           ; BSR set to: 2
 16130  0005D8  0102               	movlb	2	; () banked
 16131  0005DA  51EB               	movf	Terminal@TermState& (0+255),w,b
 16132                           
 16133                           ; Switch size 1, requested type "space"
 16134                           ; Number of cases is 4, Range of values is 0 to 3
 16135                           ; switch strategies available:
 16136                           ; Name         Instructions Cycles
 16137                           ; simple_byte           13     7 (average)
 16138                           ;	Chosen strategy is simple_byte
 16139  0005DC  0A00               	xorlw	0	; case 0
 16140  0005DE  B4D8               	btfsc	status,2,c
 16141  0005E0  D580               	goto	l2408
 16142  0005E2  0A01               	xorlw	1	; case 1
 16143  0005E4  B4D8               	btfsc	status,2,c
 16144  0005E6  D71E               	goto	l2443
 16145  0005E8  0A03               	xorlw	3	; case 2
 16146  0005EA  B4D8               	btfsc	status,2,c
 16147  0005EC  D73B               	goto	l2445
 16148  0005EE  0A01               	xorlw	1	; case 3
 16149  0005F0  0012               	return	
 16150  0005F2                     __end_of_Terminal:
 16151                           	opt stack 0
 16152                           tosu	equ	0xFFF
 16153                           tosh	equ	0xFFE
 16154                           tosl	equ	0xFFD
 16155                           pclath	equ	0xFFA
 16156                           tblptru	equ	0xFF8
 16157                           tblptrh	equ	0xFF7
 16158                           tblptrl	equ	0xFF6
 16159                           tablat	equ	0xFF5
 16160                           prodh	equ	0xFF4
 16161                           prodl	equ	0xFF3
 16162                           intcon	equ	0xFF2
 16163                           intcon2	equ	0xFF1
 16164                           intcon3	equ	0xFF0
 16165                           indf0	equ	0xFEF
 16166                           postinc0	equ	0xFEE
 16167                           plusw0	equ	0xFEB
 16168                           fsr0h	equ	0xFEA
 16169                           fsr0l	equ	0xFE9
 16170                           wreg	equ	0xFE8
 16171                           indf1	equ	0xFE7
 16172                           postinc1	equ	0xFE6
 16173                           postdec1	equ	0xFE5
 16174                           fsr1h	equ	0xFE2
 16175                           fsr1l	equ	0xFE1
 16176                           indf2	equ	0xFDF
 16177                           postinc2	equ	0xFDE
 16178                           postdec2	equ	0xFDD
 16179                           plusw2	equ	0xFDB
 16180                           fsr2h	equ	0xFDA
 16181                           fsr2l	equ	0xFD9
 16182                           status	equ	0xFD8
 16183                           
 16184 ;; *************** function _xtoi *****************
 16185 ;; Defined at:
 16186 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16187 ;; Parameters:    Size  Location     Type
 16188 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16189 ;;		 -> Terminal@Addr(4), 
 16190 ;; Auto vars:     Size  Location     Type
 16191 ;;  val             2   40[BANK0 ] unsigned int 
 16192 ;;  c               1   42[BANK0 ] unsigned char 
 16193 ;;  sign            1   39[BANK0 ] unsigned char 
 16194 ;; Return value:  Size  Location     Type
 16195 ;;                  2   35[BANK0 ] unsigned int 
 16196 ;; Registers used:
 16197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16198 ;; Tracked objects:
 16199 ;;		On entry : 0/0
 16200 ;;		On exit  : 0/0
 16201 ;;		Unchanged: 0/0
 16202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16203 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16204 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16205 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16206 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16207 ;;Total ram usage:        8 bytes
 16208 ;; Hardware stack levels used:    1
 16209 ;; Hardware stack levels required when called:   13
 16210 ;; This function calls:
 16211 ;;		_isdigit
 16212 ;;		_isspace
 16213 ;;		_isupper
 16214 ;;		_isxdigit
 16215 ;;		_tolower
 16216 ;; This function is called by:
 16217 ;;		_Terminal
 16218 ;; This function uses a non-reentrant model
 16219 ;;
 16220                           
 16221                           	psect	text61
 16222  00365C                     __ptext61:
 16223                           	opt stack 0
 16224  00365C                     _xtoi:
 16225                           	opt stack 12
 16226                           
 16227                           ;incstack = 0
 16228  00365C  0E00               	movlw	0
 16229  00365E  0100               	movlb	0	; () banked
 16230  003660  6F87               	movwf	xtoi@sign& (0+255),b
 16231  003662  0E00               	movlw	0
 16232  003664  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16233  003666  0E00               	movlw	0
 16234  003668  6F88               	movwf	xtoi@val& (0+255),b
 16235  00366A  D003               	goto	l3651
 16236  00366C                     
 16237                           ; BSR set to: 0
 16238  00366C  0100               	movlb	0	; () banked
 16239  00366E  4B83               	infsnz	xtoi@s& (0+255),f,b
 16240  003670  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16241  003672                     l3651:
 16242                           
 16243                           ; BSR set to: 0
 16244                           
 16245                           ; BSR set to: 0
 16246  003672  C083  FFD9         	movff	xtoi@s,fsr2l
 16247  003676  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16248  00367A  50DF               	movf	indf2,w,c
 16249  00367C  EC57  F034         	call	_isspace
 16250  003680  B0D8               	btfsc	status,0,c
 16251  003682  D7F4               	goto	l3652
 16252  003684  C083  FFD9         	movff	xtoi@s,fsr2l
 16253  003688  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16254  00368C  0E2D               	movlw	45
 16255  00368E  18DE               	xorwf	postinc2,w,c
 16256  003690  A4D8               	btfss	status,2,c
 16257  003692  D003               	goto	l3654
 16258  003694  0100               	movlb	0	; () banked
 16259  003696  2B87               	incf	xtoi@sign& (0+255),f,b
 16260  003698  D009               	goto	L15
 16261  00369A                     l3654:
 16262                           
 16263                           ; BSR set to: 0
 16264  00369A  C083  FFD9         	movff	xtoi@s,fsr2l
 16265  00369E  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16266  0036A2  0E2B               	movlw	43
 16267  0036A4  18DE               	xorwf	postinc2,w,c
 16268  0036A6  A4D8               	btfss	status,2,c
 16269  0036A8  D028               	goto	l3657
 16270  0036AA  0100               	movlb	0	; () banked
 16271  0036AC                     L15:
 16272  0036AC  4B83               	infsnz	xtoi@s& (0+255),f,b
 16273  0036AE  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16274                           
 16275                           ; BSR set to: 0
 16276                           
 16277                           ; BSR set to: 0
 16278  0036B0  D024               	goto	l3657
 16279  0036B2                     
 16280                           ; BSR set to: 0
 16281  0036B2  0100               	movlb	0	; () banked
 16282  0036B4  518A               	movf	xtoi@c& (0+255),w,b
 16283  0036B6  ECFD  F034         	call	_isupper
 16284  0036BA  A0D8               	btfss	status,0,c
 16285  0036BC  D006               	goto	l3659
 16286  0036BE  0100               	movlb	0	; () banked
 16287  0036C0  518A               	movf	xtoi@c& (0+255),w,b
 16288  0036C2  ECEE  F035         	call	_tolower
 16289  0036C6  0100               	movlb	0	; () banked
 16290  0036C8  6F8A               	movwf	xtoi@c& (0+255),b
 16291  0036CA                     l3659:
 16292  0036CA  0100               	movlb	0	; () banked
 16293  0036CC  518A               	movf	xtoi@c& (0+255),w,b
 16294  0036CE  EC1F  F035         	call	_isdigit
 16295  0036D2  A0D8               	btfss	status,0,c
 16296  0036D4  D002               	goto	l3660
 16297  0036D6  0E30               	movlw	48
 16298  0036D8  D001               	goto	L14
 16299  0036DA                     l3660:
 16300                           
 16301                           ; BSR set to: 0
 16302  0036DA  0E57               	movlw	87
 16303  0036DC                     L14:
 16304  0036DC  0100               	movlb	0	; () banked
 16305  0036DE  5F8A               	subwf	xtoi@c& (0+255),f,b
 16306                           
 16307                           ; BSR set to: 0
 16308  0036E0  3B88               	swapf	xtoi@val& (0+255),f,b
 16309  0036E2  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16310  0036E4  0EF0               	movlw	240
 16311  0036E6  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16312  0036E8  5188               	movf	xtoi@val& (0+255),w,b
 16313  0036EA  0B0F               	andlw	15
 16314  0036EC  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16315  0036EE  0EF0               	movlw	240
 16316  0036F0  1788               	andwf	xtoi@val& (0+255),f,b
 16317  0036F2  518A               	movf	xtoi@c& (0+255),w,b
 16318  0036F4  2788               	addwf	xtoi@val& (0+255),f,b
 16319  0036F6  0E00               	movlw	0
 16320  0036F8  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16321  0036FA                     l3657:
 16322                           
 16323                           ; BSR set to: 0
 16324  0036FA  C083  FFD9         	movff	xtoi@s,fsr2l
 16325  0036FE  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16326  003702  0100               	movlb	0	; () banked
 16327  003704  4B83               	infsnz	xtoi@s& (0+255),f,b
 16328  003706  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16329  003708  50DF               	movf	indf2,w,c
 16330  00370A  6F8A               	movwf	xtoi@c& (0+255),b
 16331  00370C  518A               	movf	xtoi@c& (0+255),w,b
 16332  00370E  ECA9  F032         	call	_isxdigit
 16333  003712  B0D8               	btfsc	status,0,c
 16334  003714  D7CE               	goto	l3658
 16335  003716  0100               	movlb	0	; () banked
 16336  003718  5187               	movf	xtoi@sign& (0+255),w,b
 16337  00371A  B4D8               	btfsc	status,2,c
 16338  00371C  D00D               	goto	l3663
 16339                           
 16340                           ; BSR set to: 0
 16341  00371E  C088  F085         	movff	xtoi@val,??_xtoi
 16342  003722  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16343  003726  1F85               	comf	??_xtoi& (0+255),f,b
 16344  003728  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16345  00372A  4B85               	infsnz	??_xtoi& (0+255),f,b
 16346  00372C  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16347  00372E  C085  F083         	movff	??_xtoi,?_xtoi
 16348  003732  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16349  003736  0012               	return	
 16350  003738                     l3663:
 16351                           
 16352                           ; BSR set to: 0
 16353  003738  C088  F083         	movff	xtoi@val,?_xtoi
 16354  00373C  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16355                           
 16356                           ; BSR set to: 0
 16357  003740  0012               	return		;funcret
 16358  003742                     __end_of_xtoi:
 16359                           	opt stack 0
 16360                           tosu	equ	0xFFF
 16361                           tosh	equ	0xFFE
 16362                           tosl	equ	0xFFD
 16363                           pclath	equ	0xFFA
 16364                           tblptru	equ	0xFF8
 16365                           tblptrh	equ	0xFF7
 16366                           tblptrl	equ	0xFF6
 16367                           tablat	equ	0xFF5
 16368                           prodh	equ	0xFF4
 16369                           prodl	equ	0xFF3
 16370                           intcon	equ	0xFF2
 16371                           intcon2	equ	0xFF1
 16372                           intcon3	equ	0xFF0
 16373                           indf0	equ	0xFEF
 16374                           postinc0	equ	0xFEE
 16375                           plusw0	equ	0xFEB
 16376                           fsr0h	equ	0xFEA
 16377                           fsr0l	equ	0xFE9
 16378                           wreg	equ	0xFE8
 16379                           indf1	equ	0xFE7
 16380                           postinc1	equ	0xFE6
 16381                           postdec1	equ	0xFE5
 16382                           fsr1h	equ	0xFE2
 16383                           fsr1l	equ	0xFE1
 16384                           indf2	equ	0xFDF
 16385                           postinc2	equ	0xFDE
 16386                           postdec2	equ	0xFDD
 16387                           plusw2	equ	0xFDB
 16388                           fsr2h	equ	0xFDA
 16389                           fsr2l	equ	0xFD9
 16390                           status	equ	0xFD8
 16391                           
 16392 ;; *************** function _tolower *****************
 16393 ;; Defined at:
 16394 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16395 ;; Parameters:    Size  Location     Type
 16396 ;;  c               1    wreg     unsigned char 
 16397 ;; Auto vars:     Size  Location     Type
 16398 ;;  c               1   29[BANK0 ] unsigned char 
 16399 ;; Return value:  Size  Location     Type
 16400 ;;                  1    wreg      unsigned char 
 16401 ;; Registers used:
 16402 ;;		wreg, status,2, status,0
 16403 ;; Tracked objects:
 16404 ;;		On entry : 0/0
 16405 ;;		On exit  : 0/0
 16406 ;;		Unchanged: 0/0
 16407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16409 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16411 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16412 ;;Total ram usage:        1 bytes
 16413 ;; Hardware stack levels used:    1
 16414 ;; Hardware stack levels required when called:   11
 16415 ;; This function calls:
 16416 ;;		Nothing
 16417 ;; This function is called by:
 16418 ;;		_xtoi
 16419 ;; This function uses a non-reentrant model
 16420 ;;
 16421                           
 16422                           	psect	text62
 16423  006BDC                     __ptext62:
 16424                           	opt stack 0
 16425  006BDC                     _tolower:
 16426                           	opt stack 13
 16427                           
 16428                           ; BSR set to: 0
 16429                           ;incstack = 0
 16430                           ;tolower@c stored from wreg
 16431  006BDC  0100               	movlb	0	; () banked
 16432  006BDE  6F7D               	movwf	tolower@c& (0+255),b
 16433  006BE0  0E5B               	movlw	91
 16434  006BE2  0100               	movlb	0	; () banked
 16435  006BE4  617D               	cpfslt	tolower@c& (0+255),b
 16436  006BE6  D004               	goto	l3710
 16437                           
 16438                           ; BSR set to: 0
 16439  006BE8  0E40               	movlw	64
 16440  006BEA  657D               	cpfsgt	tolower@c& (0+255),b
 16441  006BEC  D001               	goto	l3710
 16442                           
 16443                           ; BSR set to: 0
 16444  006BEE  8B7D               	bsf	tolower@c& (0+255),5,b
 16445  006BF0                     l3710:
 16446                           
 16447                           ; BSR set to: 0
 16448                           
 16449                           ; BSR set to: 0
 16450  006BF0  517D               	movf	tolower@c& (0+255),w,b
 16451  006BF2  0012               	return	
 16452  006BF4                     __end_of_tolower:
 16453                           	opt stack 0
 16454                           tosu	equ	0xFFF
 16455                           tosh	equ	0xFFE
 16456                           tosl	equ	0xFFD
 16457                           pclath	equ	0xFFA
 16458                           tblptru	equ	0xFF8
 16459                           tblptrh	equ	0xFF7
 16460                           tblptrl	equ	0xFF6
 16461                           tablat	equ	0xFF5
 16462                           prodh	equ	0xFF4
 16463                           prodl	equ	0xFF3
 16464                           intcon	equ	0xFF2
 16465                           intcon2	equ	0xFF1
 16466                           intcon3	equ	0xFF0
 16467                           indf0	equ	0xFEF
 16468                           postinc0	equ	0xFEE
 16469                           plusw0	equ	0xFEB
 16470                           fsr0h	equ	0xFEA
 16471                           fsr0l	equ	0xFE9
 16472                           wreg	equ	0xFE8
 16473                           indf1	equ	0xFE7
 16474                           postinc1	equ	0xFE6
 16475                           postdec1	equ	0xFE5
 16476                           fsr1h	equ	0xFE2
 16477                           fsr1l	equ	0xFE1
 16478                           indf2	equ	0xFDF
 16479                           postinc2	equ	0xFDE
 16480                           postdec2	equ	0xFDD
 16481                           plusw2	equ	0xFDB
 16482                           fsr2h	equ	0xFDA
 16483                           fsr2l	equ	0xFD9
 16484                           status	equ	0xFD8
 16485                           
 16486 ;; *************** function _isxdigit *****************
 16487 ;; Defined at:
 16488 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16489 ;; Parameters:    Size  Location     Type
 16490 ;;  c               1    wreg     unsigned char 
 16491 ;; Auto vars:     Size  Location     Type
 16492 ;;  c               1   34[BANK0 ] unsigned char 
 16493 ;; Return value:  Size  Location     Type
 16494 ;;		None               void
 16495 ;; Registers used:
 16496 ;;		wreg, status,2, status,0, cstack
 16497 ;; Tracked objects:
 16498 ;;		On entry : 0/0
 16499 ;;		On exit  : 0/0
 16500 ;;		Unchanged: 0/0
 16501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16504 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16505 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16506 ;;Total ram usage:        3 bytes
 16507 ;; Hardware stack levels used:    1
 16508 ;; Hardware stack levels required when called:   12
 16509 ;; This function calls:
 16510 ;;		_isdigit
 16511 ;; This function is called by:
 16512 ;;		_xtoi
 16513 ;; This function uses a non-reentrant model
 16514 ;;
 16515                           
 16516                           	psect	text63
 16517  006552                     __ptext63:
 16518                           	opt stack 0
 16519  006552                     _isxdigit:
 16520                           	opt stack 12
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;incstack = 0
 16524                           ;isxdigit@c stored from wreg
 16525  006552  0100               	movlb	0	; () banked
 16526  006554  6F82               	movwf	isxdigit@c& (0+255),b
 16527  006556  0E01               	movlw	1
 16528  006558  0100               	movlb	0	; () banked
 16529  00655A  6F81               	movwf	_isxdigit$6774& (0+255),b
 16530                           
 16531                           ; BSR set to: 0
 16532  00655C  0E67               	movlw	103
 16533  00655E  6182               	cpfslt	isxdigit@c& (0+255),b
 16534  006560  D003               	goto	u12800
 16535                           
 16536                           ; BSR set to: 0
 16537  006562  0E61               	movlw	97
 16538  006564  6182               	cpfslt	isxdigit@c& (0+255),b
 16539  006566  D00E               	goto	l3706
 16540  006568                     u12800:
 16541                           
 16542                           ; BSR set to: 0
 16543                           
 16544                           ; BSR set to: 0
 16545  006568  0E47               	movlw	71
 16546  00656A  6182               	cpfslt	isxdigit@c& (0+255),b
 16547  00656C  D003               	goto	u12820
 16548                           
 16549                           ; BSR set to: 0
 16550  00656E  0E41               	movlw	65
 16551  006570  6182               	cpfslt	isxdigit@c& (0+255),b
 16552  006572  D008               	goto	l3706
 16553  006574                     u12820:
 16554                           
 16555                           ; BSR set to: 0
 16556                           
 16557                           ; BSR set to: 0
 16558  006574  5182               	movf	isxdigit@c& (0+255),w,b
 16559  006576  EC1F  F035         	call	_isdigit
 16560  00657A  B0D8               	btfsc	status,0,c
 16561  00657C  D003               	goto	l3706
 16562  00657E  0E00               	movlw	0
 16563  006580  0100               	movlb	0	; () banked
 16564  006582  6F81               	movwf	_isxdigit$6774& (0+255),b
 16565  006584                     l3706:
 16566                           
 16567                           ; BSR set to: 0
 16568  006584  C081  F080         	movff	_isxdigit$6774,??_isxdigit
 16569  006588  0100               	movlb	0	; () banked
 16570  00658A  3180               	rrcf	??_isxdigit& (0+255),w,b
 16571  00658C  0012               	return	
 16572  00658E                     __end_of_isxdigit:
 16573                           	opt stack 0
 16574                           tosu	equ	0xFFF
 16575                           tosh	equ	0xFFE
 16576                           tosl	equ	0xFFD
 16577                           pclath	equ	0xFFA
 16578                           tblptru	equ	0xFF8
 16579                           tblptrh	equ	0xFF7
 16580                           tblptrl	equ	0xFF6
 16581                           tablat	equ	0xFF5
 16582                           prodh	equ	0xFF4
 16583                           prodl	equ	0xFF3
 16584                           intcon	equ	0xFF2
 16585                           intcon2	equ	0xFF1
 16586                           intcon3	equ	0xFF0
 16587                           indf0	equ	0xFEF
 16588                           postinc0	equ	0xFEE
 16589                           plusw0	equ	0xFEB
 16590                           fsr0h	equ	0xFEA
 16591                           fsr0l	equ	0xFE9
 16592                           wreg	equ	0xFE8
 16593                           indf1	equ	0xFE7
 16594                           postinc1	equ	0xFE6
 16595                           postdec1	equ	0xFE5
 16596                           fsr1h	equ	0xFE2
 16597                           fsr1l	equ	0xFE1
 16598                           indf2	equ	0xFDF
 16599                           postinc2	equ	0xFDE
 16600                           postdec2	equ	0xFDD
 16601                           plusw2	equ	0xFDB
 16602                           fsr2h	equ	0xFDA
 16603                           fsr2l	equ	0xFD9
 16604                           status	equ	0xFD8
 16605                           
 16606 ;; *************** function _strtol *****************
 16607 ;; Defined at:
 16608 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16609 ;; Parameters:    Size  Location     Type
 16610 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16611 ;;		 -> Terminal@Payload(80), 
 16612 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16613 ;;		 -> NULL(0), 
 16614 ;;  base            2   45[BANK0 ] int 
 16615 ;; Auto vars:     Size  Location     Type
 16616 ;;  a               4   52[BANK0 ] long 
 16617 ;;  c               1   56[BANK0 ] unsigned char 
 16618 ;;  sign            1   51[BANK0 ] unsigned char 
 16619 ;; Return value:  Size  Location     Type
 16620 ;;                  4   41[BANK0 ] long 
 16621 ;; Registers used:
 16622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16623 ;; Tracked objects:
 16624 ;;		On entry : 0/0
 16625 ;;		On exit  : 0/0
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16628 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16629 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16630 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16631 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16632 ;;Total ram usage:       16 bytes
 16633 ;; Hardware stack levels used:    1
 16634 ;; Hardware stack levels required when called:   13
 16635 ;; This function calls:
 16636 ;;		___lmul
 16637 ;;		_isalpha
 16638 ;;		_isdigit
 16639 ;;		_isspace
 16640 ;;		_toupper
 16641 ;; This function is called by:
 16642 ;;		_Terminal
 16643 ;; This function uses a non-reentrant model
 16644 ;;
 16645                           
 16646                           	psect	text64
 16647  001822                     __ptext64:
 16648                           	opt stack 0
 16649  001822                     _strtol:
 16650                           	opt stack 12
 16651                           
 16652                           ; BSR set to: 0
 16653                           ;incstack = 0
 16654  001822  C089  FFD9         	movff	strtol@s,fsr2l
 16655  001826  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16656  00182A  50DF               	movf	indf2,w,c
 16657  00182C  0100               	movlb	0	; () banked
 16658  00182E  6F98               	movwf	strtol@c& (0+255),b
 16659                           
 16660                           ; BSR set to: 0
 16661  001830  4B89               	infsnz	strtol@s& (0+255),f,b
 16662  001832  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16663                           
 16664                           ; BSR set to: 0
 16665  001834  5198               	movf	strtol@c& (0+255),w,b
 16666  001836  EC57  F034         	call	_isspace
 16667  00183A  B0D8               	btfsc	status,0,c
 16668  00183C  D7F2               	goto	_strtol
 16669  00183E  0E00               	movlw	0
 16670  001840  0100               	movlb	0	; () banked
 16671  001842  6F94               	movwf	strtol@a& (0+255),b
 16672  001844  0E00               	movlw	0
 16673  001846  6F95               	movwf	(strtol@a+1)& (0+255),b
 16674  001848  0E00               	movlw	0
 16675  00184A  6F96               	movwf	(strtol@a+2)& (0+255),b
 16676  00184C  0E00               	movlw	0
 16677  00184E  6F97               	movwf	(strtol@a+3)& (0+255),b
 16678  001850  0E00               	movlw	0
 16679  001852  6F93               	movwf	strtol@sign& (0+255),b
 16680                           
 16681                           ; BSR set to: 0
 16682  001854  0E2D               	movlw	45
 16683  001856  1998               	xorwf	strtol@c& (0+255),w,b
 16684  001858  A4D8               	btfss	status,2,c
 16685  00185A  D003               	goto	l3613
 16686                           
 16687                           ; BSR set to: 0
 16688  00185C  0E01               	movlw	1
 16689  00185E  6F93               	movwf	strtol@sign& (0+255),b
 16690  001860  D004               	goto	u13300
 16691  001862                     l3613:
 16692                           
 16693                           ; BSR set to: 0
 16694                           
 16695                           ; BSR set to: 0
 16696  001862  0E2B               	movlw	43
 16697  001864  1998               	xorwf	strtol@c& (0+255),w,b
 16698  001866  A4D8               	btfss	status,2,c
 16699  001868  D008               	goto	l3615
 16700  00186A                     u13300:
 16701                           
 16702                           ; BSR set to: 0
 16703  00186A  C089  FFD9         	movff	strtol@s,fsr2l
 16704  00186E  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16705  001872  50DF               	movf	indf2,w,c
 16706  001874  6F98               	movwf	strtol@c& (0+255),b
 16707                           
 16708                           ; BSR set to: 0
 16709  001876  4B89               	infsnz	strtol@s& (0+255),f,b
 16710  001878  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16711  00187A                     l3615:
 16712                           
 16713                           ; BSR set to: 0
 16714                           
 16715                           ; BSR set to: 0
 16716                           
 16717                           ; BSR set to: 0
 16718  00187A  0E30               	movlw	48
 16719  00187C  1998               	xorwf	strtol@c& (0+255),w,b
 16720  00187E  A4D8               	btfss	status,2,c
 16721  001880  D02E               	goto	l3623
 16722                           
 16723                           ; BSR set to: 0
 16724  001882  C089  FFD9         	movff	strtol@s,fsr2l
 16725  001886  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16726  00188A  50DF               	movf	indf2,w,c
 16727  00188C  6F98               	movwf	strtol@c& (0+255),b
 16728                           
 16729                           ; BSR set to: 0
 16730  00188E  4B89               	infsnz	strtol@s& (0+255),f,b
 16731  001890  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16732                           
 16733                           ; BSR set to: 0
 16734  001892  518D               	movf	strtol@base& (0+255),w,b
 16735  001894  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16736  001896  B4D8               	btfsc	status,2,c
 16737  001898  D005               	goto	u13330
 16738                           
 16739                           ; BSR set to: 0
 16740  00189A  0E10               	movlw	16
 16741  00189C  198D               	xorwf	strtol@base& (0+255),w,b
 16742  00189E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16743  0018A0  A4D8               	btfss	status,2,c
 16744  0018A2  D015               	goto	l3617
 16745  0018A4                     u13330:
 16746                           
 16747                           ; BSR set to: 0
 16748                           
 16749                           ; BSR set to: 0
 16750  0018A4  0E78               	movlw	120
 16751  0018A6  1998               	xorwf	strtol@c& (0+255),w,b
 16752  0018A8  B4D8               	btfsc	status,2,c
 16753  0018AA  D004               	goto	u13350
 16754                           
 16755                           ; BSR set to: 0
 16756  0018AC  0E58               	movlw	88
 16757  0018AE  1998               	xorwf	strtol@c& (0+255),w,b
 16758  0018B0  A4D8               	btfss	status,2,c
 16759  0018B2  D00D               	goto	l3617
 16760  0018B4                     u13350:
 16761                           
 16762                           ; BSR set to: 0
 16763                           
 16764                           ; BSR set to: 0
 16765  0018B4  0E00               	movlw	0
 16766  0018B6  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16767  0018B8  0E10               	movlw	16
 16768  0018BA  6F8D               	movwf	strtol@base& (0+255),b
 16769                           
 16770                           ; BSR set to: 0
 16771  0018BC  C089  FFD9         	movff	strtol@s,fsr2l
 16772  0018C0  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16773  0018C4  50DF               	movf	indf2,w,c
 16774  0018C6  6F98               	movwf	strtol@c& (0+255),b
 16775                           
 16776                           ; BSR set to: 0
 16777  0018C8  4B89               	infsnz	strtol@s& (0+255),f,b
 16778  0018CA  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16779  0018CC  D008               	goto	l3623
 16780  0018CE                     l3617:
 16781                           
 16782                           ; BSR set to: 0
 16783                           
 16784                           ; BSR set to: 0
 16785  0018CE  518D               	movf	strtol@base& (0+255),w,b
 16786  0018D0  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16787  0018D2  A4D8               	btfss	status,2,c
 16788  0018D4  D004               	goto	l3623
 16789                           
 16790                           ; BSR set to: 0
 16791  0018D6  0E00               	movlw	0
 16792  0018D8  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16793  0018DA  0E08               	movlw	8
 16794  0018DC  6F8D               	movwf	strtol@base& (0+255),b
 16795  0018DE                     l3623:
 16796                           
 16797                           ; BSR set to: 0
 16798                           
 16799                           ; BSR set to: 0
 16800                           
 16801                           ; BSR set to: 0
 16802                           
 16803                           ; BSR set to: 0
 16804  0018DE  518D               	movf	strtol@base& (0+255),w,b
 16805  0018E0  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16806  0018E2  A4D8               	btfss	status,2,c
 16807  0018E4  D004               	goto	l3624
 16808                           
 16809                           ; BSR set to: 0
 16810  0018E6  0E00               	movlw	0
 16811  0018E8  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16812  0018EA  0E0A               	movlw	10
 16813  0018EC  6F8D               	movwf	strtol@base& (0+255),b
 16814  0018EE                     l3624:
 16815                           
 16816                           ; BSR set to: 0
 16817                           
 16818                           ; BSR set to: 0
 16819                           
 16820                           ; BSR set to: 0
 16821  0018EE  5198               	movf	strtol@c& (0+255),w,b
 16822  0018F0  ECCE  F033         	call	_isalpha
 16823  0018F4  A0D8               	btfss	status,0,c
 16824  0018F6  D008               	goto	l3626
 16825  0018F8  0100               	movlb	0	; () banked
 16826  0018FA  5198               	movf	strtol@c& (0+255),w,b
 16827  0018FC  ECFA  F035         	call	_toupper
 16828  001900  0FC9               	addlw	201
 16829  001902  0100               	movlb	0	; () banked
 16830  001904  6F98               	movwf	strtol@c& (0+255),b
 16831  001906  D009               	goto	l3629
 16832  001908                     l3626:
 16833                           
 16834                           ; BSR set to: 0
 16835  001908  0100               	movlb	0	; () banked
 16836  00190A  5198               	movf	strtol@c& (0+255),w,b
 16837  00190C  EC1F  F035         	call	_isdigit
 16838  001910  A0D8               	btfss	status,0,c
 16839  001912  D039               	goto	l3630
 16840  001914  0E30               	movlw	48
 16841  001916  0100               	movlb	0	; () banked
 16842  001918  5F98               	subwf	strtol@c& (0+255),f,b
 16843  00191A                     l3629:
 16844                           
 16845                           ; BSR set to: 0
 16846                           
 16847                           ; BSR set to: 0
 16848                           
 16849                           ; BSR set to: 0
 16850  00191A  5198               	movf	strtol@c& (0+255),w,b
 16851  00191C  6F8F               	movwf	??_strtol& (0+255),b
 16852  00191E  6B90               	clrf	(??_strtol+1)& (0+255),b
 16853  001920  518D               	movf	strtol@base& (0+255),w,b
 16854  001922  5D8F               	subwf	??_strtol& (0+255),w,b
 16855  001924  5190               	movf	(??_strtol+1)& (0+255),w,b
 16856  001926  0A80               	xorlw	128
 16857  001928  6F91               	movwf	(??_strtol+2)& (0+255),b
 16858  00192A  518E               	movf	(strtol@base+1)& (0+255),w,b
 16859  00192C  0A80               	xorlw	128
 16860  00192E  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16861  001930  B0D8               	btfsc	status,0,c
 16862  001932  D029               	goto	l3630
 16863                           
 16864                           ; BSR set to: 0
 16865                           
 16866                           ; BSR set to: 0
 16867                           
 16868                           ; BSR set to: 0
 16869  001934  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16870  001938  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16871  00193C  0E00               	movlw	0
 16872  00193E  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16873  001940  0EFF               	movlw	-1
 16874  001942  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16875  001944  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16876  001946  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16877  00194A  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16878  00194E  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16879  001952  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16880  001956  ECAD  F02D         	call	___lmul	;wreg free
 16881  00195A  0100               	movlb	0	; () banked
 16882  00195C  5198               	movf	strtol@c& (0+255),w,b
 16883  00195E  257D               	addwf	?___lmul& (0+255),w,b
 16884  001960  6F94               	movwf	strtol@a& (0+255),b
 16885  001962  0E00               	movlw	0
 16886  001964  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16887  001966  6F95               	movwf	(strtol@a+1)& (0+255),b
 16888  001968  0E00               	movlw	0
 16889  00196A  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16890  00196C  6F96               	movwf	(strtol@a+2)& (0+255),b
 16891  00196E  0E00               	movlw	0
 16892  001970  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16893  001972  6F97               	movwf	(strtol@a+3)& (0+255),b
 16894                           
 16895                           ; BSR set to: 0
 16896  001974  C089  FFD9         	movff	strtol@s,fsr2l
 16897  001978  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16898  00197C  50DF               	movf	indf2,w,c
 16899  00197E  6F98               	movwf	strtol@c& (0+255),b
 16900                           
 16901                           ; BSR set to: 0
 16902  001980  4B89               	infsnz	strtol@s& (0+255),f,b
 16903  001982  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16904  001984  D7B4               	goto	l3624
 16905  001986                     l3630:
 16906                           
 16907                           ; BSR set to: 0
 16908  001986  0100               	movlb	0	; () banked
 16909  001988  518B               	movf	strtol@endptr& (0+255),w,b
 16910  00198A  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16911  00198C  B4D8               	btfsc	status,2,c
 16912  00198E  D00E               	goto	l3632
 16913                           
 16914                           ; BSR set to: 0
 16915  001990  0EFF               	movlw	255
 16916  001992  2589               	addwf	strtol@s& (0+255),w,b
 16917  001994  6F8F               	movwf	??_strtol& (0+255),b
 16918  001996  0EFF               	movlw	255
 16919  001998  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16920  00199A  6F90               	movwf	(??_strtol+1)& (0+255),b
 16921  00199C  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16922  0019A0  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16923  0019A4  C08F  FFDE         	movff	??_strtol,postinc2
 16924  0019A8  C090  FFDD         	movff	??_strtol+1,postdec2
 16925  0019AC                     l3632:
 16926                           
 16927                           ; BSR set to: 0
 16928                           
 16929                           ; BSR set to: 0
 16930  0019AC  5193               	movf	strtol@sign& (0+255),w,b
 16931  0019AE  B4D8               	btfsc	status,2,c
 16932  0019B0  D01A               	goto	l3633
 16933                           
 16934                           ; BSR set to: 0
 16935  0019B2  C094  F08F         	movff	strtol@a,??_strtol
 16936  0019B6  C095  F090         	movff	strtol@a+1,??_strtol+1
 16937  0019BA  C096  F091         	movff	strtol@a+2,??_strtol+2
 16938  0019BE  C097  F092         	movff	strtol@a+3,??_strtol+3
 16939  0019C2  1F8F               	comf	??_strtol& (0+255),f,b
 16940  0019C4  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16941  0019C6  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16942  0019C8  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16943  0019CA  2B8F               	incf	??_strtol& (0+255),f,b
 16944  0019CC  0E00               	movlw	0
 16945  0019CE  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16946  0019D0  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16947  0019D2  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16948  0019D4  C08F  F089         	movff	??_strtol,?_strtol
 16949  0019D8  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16950  0019DC  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16951  0019E0  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16952                           
 16953                           ; BSR set to: 0
 16954  0019E4  0012               	return	
 16955  0019E6                     l3633:
 16956                           
 16957                           ; BSR set to: 0
 16958  0019E6  C094  F089         	movff	strtol@a,?_strtol
 16959  0019EA  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16960  0019EE  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16961  0019F2  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16962                           
 16963                           ; BSR set to: 0
 16964  0019F6  0012               	return		;funcret
 16965  0019F8                     __end_of_strtol:
 16966                           	opt stack 0
 16967                           tosu	equ	0xFFF
 16968                           tosh	equ	0xFFE
 16969                           tosl	equ	0xFFD
 16970                           pclath	equ	0xFFA
 16971                           tblptru	equ	0xFF8
 16972                           tblptrh	equ	0xFF7
 16973                           tblptrl	equ	0xFF6
 16974                           tablat	equ	0xFF5
 16975                           prodh	equ	0xFF4
 16976                           prodl	equ	0xFF3
 16977                           intcon	equ	0xFF2
 16978                           intcon2	equ	0xFF1
 16979                           intcon3	equ	0xFF0
 16980                           indf0	equ	0xFEF
 16981                           postinc0	equ	0xFEE
 16982                           plusw0	equ	0xFEB
 16983                           fsr0h	equ	0xFEA
 16984                           fsr0l	equ	0xFE9
 16985                           wreg	equ	0xFE8
 16986                           indf1	equ	0xFE7
 16987                           postinc1	equ	0xFE6
 16988                           postdec1	equ	0xFE5
 16989                           fsr1h	equ	0xFE2
 16990                           fsr1l	equ	0xFE1
 16991                           indf2	equ	0xFDF
 16992                           postinc2	equ	0xFDE
 16993                           postdec2	equ	0xFDD
 16994                           plusw2	equ	0xFDB
 16995                           fsr2h	equ	0xFDA
 16996                           fsr2l	equ	0xFD9
 16997                           status	equ	0xFD8
 16998                           
 16999 ;; *************** function _toupper *****************
 17000 ;; Defined at:
 17001 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 17002 ;; Parameters:    Size  Location     Type
 17003 ;;  c               1    wreg     unsigned char 
 17004 ;; Auto vars:     Size  Location     Type
 17005 ;;  c               1   29[BANK0 ] unsigned char 
 17006 ;; Return value:  Size  Location     Type
 17007 ;;                  1    wreg      unsigned char 
 17008 ;; Registers used:
 17009 ;;		wreg, status,2, status,0
 17010 ;; Tracked objects:
 17011 ;;		On entry : 0/0
 17012 ;;		On exit  : 0/0
 17013 ;;		Unchanged: 0/0
 17014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17018 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17019 ;;Total ram usage:        1 bytes
 17020 ;; Hardware stack levels used:    1
 17021 ;; Hardware stack levels required when called:   11
 17022 ;; This function calls:
 17023 ;;		Nothing
 17024 ;; This function is called by:
 17025 ;;		_strtol
 17026 ;; This function uses a non-reentrant model
 17027 ;;
 17028                           
 17029                           	psect	text65
 17030  006BF4                     __ptext65:
 17031                           	opt stack 0
 17032  006BF4                     _toupper:
 17033                           	opt stack 13
 17034                           
 17035                           ; BSR set to: 0
 17036                           ;incstack = 0
 17037                           ;toupper@c stored from wreg
 17038  006BF4  0100               	movlb	0	; () banked
 17039  006BF6  6F7D               	movwf	toupper@c& (0+255),b
 17040  006BF8  0E7B               	movlw	123
 17041  006BFA  0100               	movlb	0	; () banked
 17042  006BFC  617D               	cpfslt	toupper@c& (0+255),b
 17043  006BFE  D004               	goto	l3637
 17044                           
 17045                           ; BSR set to: 0
 17046  006C00  0E60               	movlw	96
 17047  006C02  657D               	cpfsgt	toupper@c& (0+255),b
 17048  006C04  D001               	goto	l3637
 17049                           
 17050                           ; BSR set to: 0
 17051  006C06  9B7D               	bcf	toupper@c& (0+255),5,b
 17052  006C08                     l3637:
 17053                           
 17054                           ; BSR set to: 0
 17055                           
 17056                           ; BSR set to: 0
 17057  006C08  517D               	movf	toupper@c& (0+255),w,b
 17058  006C0A  0012               	return	
 17059  006C0C                     __end_of_toupper:
 17060                           	opt stack 0
 17061                           tosu	equ	0xFFF
 17062                           tosh	equ	0xFFE
 17063                           tosl	equ	0xFFD
 17064                           pclath	equ	0xFFA
 17065                           tblptru	equ	0xFF8
 17066                           tblptrh	equ	0xFF7
 17067                           tblptrl	equ	0xFF6
 17068                           tablat	equ	0xFF5
 17069                           prodh	equ	0xFF4
 17070                           prodl	equ	0xFF3
 17071                           intcon	equ	0xFF2
 17072                           intcon2	equ	0xFF1
 17073                           intcon3	equ	0xFF0
 17074                           indf0	equ	0xFEF
 17075                           postinc0	equ	0xFEE
 17076                           plusw0	equ	0xFEB
 17077                           fsr0h	equ	0xFEA
 17078                           fsr0l	equ	0xFE9
 17079                           wreg	equ	0xFE8
 17080                           indf1	equ	0xFE7
 17081                           postinc1	equ	0xFE6
 17082                           postdec1	equ	0xFE5
 17083                           fsr1h	equ	0xFE2
 17084                           fsr1l	equ	0xFE1
 17085                           indf2	equ	0xFDF
 17086                           postinc2	equ	0xFDE
 17087                           postdec2	equ	0xFDD
 17088                           plusw2	equ	0xFDB
 17089                           fsr2h	equ	0xFDA
 17090                           fsr2l	equ	0xFD9
 17091                           status	equ	0xFD8
 17092                           
 17093 ;; *************** function _isspace *****************
 17094 ;; Defined at:
 17095 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 17096 ;; Parameters:    Size  Location     Type
 17097 ;;  c               1    wreg     unsigned char 
 17098 ;; Auto vars:     Size  Location     Type
 17099 ;;  c               1   31[BANK0 ] unsigned char 
 17100 ;; Return value:  Size  Location     Type
 17101 ;;		None               void
 17102 ;; Registers used:
 17103 ;;		wreg, status,2, status,0
 17104 ;; Tracked objects:
 17105 ;;		On entry : 0/0
 17106 ;;		On exit  : 0/0
 17107 ;;		Unchanged: 0/0
 17108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17112 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17113 ;;Total ram usage:        3 bytes
 17114 ;; Hardware stack levels used:    1
 17115 ;; Hardware stack levels required when called:   11
 17116 ;; This function calls:
 17117 ;;		Nothing
 17118 ;; This function is called by:
 17119 ;;		_strtol
 17120 ;;		_xtoi
 17121 ;; This function uses a non-reentrant model
 17122 ;;
 17123                           
 17124                           	psect	text66
 17125  0068AE                     __ptext66:
 17126                           	opt stack 0
 17127  0068AE                     _isspace:
 17128                           	opt stack 13
 17129                           
 17130                           ; BSR set to: 0
 17131                           ;incstack = 0
 17132                           ;isspace@c stored from wreg
 17133  0068AE  0100               	movlb	0	; () banked
 17134  0068B0  6F7F               	movwf	isspace@c& (0+255),b
 17135  0068B2  0E01               	movlw	1
 17136  0068B4  0100               	movlb	0	; () banked
 17137  0068B6  6F7E               	movwf	_isspace$6767& (0+255),b
 17138                           
 17139                           ; BSR set to: 0
 17140  0068B8  0E20               	movlw	32
 17141  0068BA  197F               	xorwf	isspace@c& (0+255),w,b
 17142  0068BC  B4D8               	btfsc	status,2,c
 17143  0068BE  D008               	goto	l3694
 17144                           
 17145                           ; BSR set to: 0
 17146  0068C0  0E0E               	movlw	14
 17147  0068C2  617F               	cpfslt	isspace@c& (0+255),b
 17148  0068C4  D003               	goto	u12710
 17149                           
 17150                           ; BSR set to: 0
 17151  0068C6  0E09               	movlw	9
 17152  0068C8  617F               	cpfslt	isspace@c& (0+255),b
 17153  0068CA  D002               	goto	l3694
 17154  0068CC                     u12710:
 17155                           
 17156                           ; BSR set to: 0
 17157                           
 17158                           ; BSR set to: 0
 17159  0068CC  0E00               	movlw	0
 17160  0068CE  6F7E               	movwf	_isspace$6767& (0+255),b
 17161  0068D0                     l3694:
 17162                           
 17163                           ; BSR set to: 0
 17164                           
 17165                           ; BSR set to: 0
 17166  0068D0  C07E  F07D         	movff	_isspace$6767,??_isspace
 17167  0068D4  317D               	rrcf	??_isspace& (0+255),w,b
 17168  0068D6  0012               	return	
 17169  0068D8                     __end_of_isspace:
 17170                           	opt stack 0
 17171                           tosu	equ	0xFFF
 17172                           tosh	equ	0xFFE
 17173                           tosl	equ	0xFFD
 17174                           pclath	equ	0xFFA
 17175                           tblptru	equ	0xFF8
 17176                           tblptrh	equ	0xFF7
 17177                           tblptrl	equ	0xFF6
 17178                           tablat	equ	0xFF5
 17179                           prodh	equ	0xFF4
 17180                           prodl	equ	0xFF3
 17181                           intcon	equ	0xFF2
 17182                           intcon2	equ	0xFF1
 17183                           intcon3	equ	0xFF0
 17184                           indf0	equ	0xFEF
 17185                           postinc0	equ	0xFEE
 17186                           plusw0	equ	0xFEB
 17187                           fsr0h	equ	0xFEA
 17188                           fsr0l	equ	0xFE9
 17189                           wreg	equ	0xFE8
 17190                           indf1	equ	0xFE7
 17191                           postinc1	equ	0xFE6
 17192                           postdec1	equ	0xFE5
 17193                           fsr1h	equ	0xFE2
 17194                           fsr1l	equ	0xFE1
 17195                           indf2	equ	0xFDF
 17196                           postinc2	equ	0xFDE
 17197                           postdec2	equ	0xFDD
 17198                           plusw2	equ	0xFDB
 17199                           fsr2h	equ	0xFDA
 17200                           fsr2l	equ	0xFD9
 17201                           status	equ	0xFD8
 17202                           
 17203 ;; *************** function _isalpha *****************
 17204 ;; Defined at:
 17205 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17206 ;; Parameters:    Size  Location     Type
 17207 ;;  c               1    wreg     unsigned char 
 17208 ;; Auto vars:     Size  Location     Type
 17209 ;;  c               1   34[BANK0 ] unsigned char 
 17210 ;; Return value:  Size  Location     Type
 17211 ;;		None               void
 17212 ;; Registers used:
 17213 ;;		wreg, status,2, status,0, cstack
 17214 ;; Tracked objects:
 17215 ;;		On entry : 0/0
 17216 ;;		On exit  : 0/0
 17217 ;;		Unchanged: 0/0
 17218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17220 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17221 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17222 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17223 ;;Total ram usage:        3 bytes
 17224 ;; Hardware stack levels used:    1
 17225 ;; Hardware stack levels required when called:   12
 17226 ;; This function calls:
 17227 ;;		_isupper
 17228 ;; This function is called by:
 17229 ;;		_strtol
 17230 ;; This function uses a non-reentrant model
 17231 ;;
 17232                           
 17233                           	psect	text67
 17234  00679C                     __ptext67:
 17235                           	opt stack 0
 17236  00679C                     _isalpha:
 17237                           	opt stack 12
 17238                           
 17239                           ; BSR set to: 0
 17240                           ;incstack = 0
 17241                           ;isalpha@c stored from wreg
 17242  00679C  0100               	movlb	0	; () banked
 17243  00679E  6F82               	movwf	isalpha@c& (0+255),b
 17244  0067A0  0E01               	movlw	1
 17245  0067A2  0100               	movlb	0	; () banked
 17246  0067A4  6F81               	movwf	_isalpha$6764& (0+255),b
 17247                           
 17248                           ; BSR set to: 0
 17249  0067A6  0E7B               	movlw	123
 17250  0067A8  6182               	cpfslt	isalpha@c& (0+255),b
 17251  0067AA  D003               	goto	u12730
 17252                           
 17253                           ; BSR set to: 0
 17254  0067AC  0E61               	movlw	97
 17255  0067AE  6182               	cpfslt	isalpha@c& (0+255),b
 17256  0067B0  D008               	goto	l3689
 17257  0067B2                     u12730:
 17258                           
 17259                           ; BSR set to: 0
 17260                           
 17261                           ; BSR set to: 0
 17262  0067B2  5182               	movf	isalpha@c& (0+255),w,b
 17263  0067B4  ECFD  F034         	call	_isupper
 17264  0067B8  B0D8               	btfsc	status,0,c
 17265  0067BA  D003               	goto	l3689
 17266  0067BC  0E00               	movlw	0
 17267  0067BE  0100               	movlb	0	; () banked
 17268  0067C0  6F81               	movwf	_isalpha$6764& (0+255),b
 17269  0067C2                     l3689:
 17270                           
 17271                           ; BSR set to: 0
 17272  0067C2  C081  F080         	movff	_isalpha$6764,??_isalpha
 17273  0067C6  0100               	movlb	0	; () banked
 17274  0067C8  3180               	rrcf	??_isalpha& (0+255),w,b
 17275  0067CA  0012               	return	
 17276  0067CC                     __end_of_isalpha:
 17277                           	opt stack 0
 17278                           tosu	equ	0xFFF
 17279                           tosh	equ	0xFFE
 17280                           tosl	equ	0xFFD
 17281                           pclath	equ	0xFFA
 17282                           tblptru	equ	0xFF8
 17283                           tblptrh	equ	0xFF7
 17284                           tblptrl	equ	0xFF6
 17285                           tablat	equ	0xFF5
 17286                           prodh	equ	0xFF4
 17287                           prodl	equ	0xFF3
 17288                           intcon	equ	0xFF2
 17289                           intcon2	equ	0xFF1
 17290                           intcon3	equ	0xFF0
 17291                           indf0	equ	0xFEF
 17292                           postinc0	equ	0xFEE
 17293                           plusw0	equ	0xFEB
 17294                           fsr0h	equ	0xFEA
 17295                           fsr0l	equ	0xFE9
 17296                           wreg	equ	0xFE8
 17297                           indf1	equ	0xFE7
 17298                           postinc1	equ	0xFE6
 17299                           postdec1	equ	0xFE5
 17300                           fsr1h	equ	0xFE2
 17301                           fsr1l	equ	0xFE1
 17302                           indf2	equ	0xFDF
 17303                           postinc2	equ	0xFDE
 17304                           postdec2	equ	0xFDD
 17305                           plusw2	equ	0xFDB
 17306                           fsr2h	equ	0xFDA
 17307                           fsr2l	equ	0xFD9
 17308                           status	equ	0xFD8
 17309                           
 17310 ;; *************** function _isupper *****************
 17311 ;; Defined at:
 17312 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;  c               1    wreg     unsigned char 
 17315 ;; Auto vars:     Size  Location     Type
 17316 ;;  c               1   31[BANK0 ] unsigned char 
 17317 ;; Return value:  Size  Location     Type
 17318 ;;		None               void
 17319 ;; Registers used:
 17320 ;;		wreg, status,2, status,0
 17321 ;; Tracked objects:
 17322 ;;		On entry : 0/0
 17323 ;;		On exit  : 0/0
 17324 ;;		Unchanged: 0/0
 17325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17327 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17328 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17329 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17330 ;;Total ram usage:        3 bytes
 17331 ;; Hardware stack levels used:    1
 17332 ;; Hardware stack levels required when called:   11
 17333 ;; This function calls:
 17334 ;;		Nothing
 17335 ;; This function is called by:
 17336 ;;		_xtoi
 17337 ;;		_isalpha
 17338 ;; This function uses a non-reentrant model
 17339 ;;
 17340                           
 17341                           	psect	text68
 17342  0069FA                     __ptext68:
 17343                           	opt stack 0
 17344  0069FA                     _isupper:
 17345                           	opt stack 13
 17346                           
 17347                           ; BSR set to: 0
 17348                           ;incstack = 0
 17349                           ;isupper@c stored from wreg
 17350  0069FA  0100               	movlb	0	; () banked
 17351  0069FC  6F7F               	movwf	isupper@c& (0+255),b
 17352  0069FE  0E00               	movlw	0
 17353  006A00  0100               	movlb	0	; () banked
 17354  006A02  6F7E               	movwf	_isupper$6770& (0+255),b
 17355                           
 17356                           ; BSR set to: 0
 17357  006A04  0E5B               	movlw	91
 17358  006A06  617F               	cpfslt	isupper@c& (0+255),b
 17359  006A08  D005               	goto	l3699
 17360                           
 17361                           ; BSR set to: 0
 17362  006A0A  0E40               	movlw	64
 17363  006A0C  657F               	cpfsgt	isupper@c& (0+255),b
 17364  006A0E  D002               	goto	l3699
 17365                           
 17366                           ; BSR set to: 0
 17367  006A10  0E01               	movlw	1
 17368  006A12  6F7E               	movwf	_isupper$6770& (0+255),b
 17369  006A14                     l3699:
 17370                           
 17371                           ; BSR set to: 0
 17372                           
 17373                           ; BSR set to: 0
 17374  006A14  C07E  F07D         	movff	_isupper$6770,??_isupper
 17375  006A18  317D               	rrcf	??_isupper& (0+255),w,b
 17376  006A1A  0012               	return	
 17377  006A1C                     __end_of_isupper:
 17378                           	opt stack 0
 17379                           tosu	equ	0xFFF
 17380                           tosh	equ	0xFFE
 17381                           tosl	equ	0xFFD
 17382                           pclath	equ	0xFFA
 17383                           tblptru	equ	0xFF8
 17384                           tblptrh	equ	0xFF7
 17385                           tblptrl	equ	0xFF6
 17386                           tablat	equ	0xFF5
 17387                           prodh	equ	0xFF4
 17388                           prodl	equ	0xFF3
 17389                           intcon	equ	0xFF2
 17390                           intcon2	equ	0xFF1
 17391                           intcon3	equ	0xFF0
 17392                           indf0	equ	0xFEF
 17393                           postinc0	equ	0xFEE
 17394                           plusw0	equ	0xFEB
 17395                           fsr0h	equ	0xFEA
 17396                           fsr0l	equ	0xFE9
 17397                           wreg	equ	0xFE8
 17398                           indf1	equ	0xFE7
 17399                           postinc1	equ	0xFE6
 17400                           postdec1	equ	0xFE5
 17401                           fsr1h	equ	0xFE2
 17402                           fsr1l	equ	0xFE1
 17403                           indf2	equ	0xFDF
 17404                           postinc2	equ	0xFDE
 17405                           postdec2	equ	0xFDD
 17406                           plusw2	equ	0xFDB
 17407                           fsr2h	equ	0xFDA
 17408                           fsr2l	equ	0xFD9
 17409                           status	equ	0xFD8
 17410                           
 17411 ;; *************** function _strcpy *****************
 17412 ;; Defined at:
 17413 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17414 ;; Parameters:    Size  Location     Type
 17415 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17416 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17417 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17418 ;;		 -> STR_23(20), STR_21(42), 
 17419 ;; Auto vars:     Size  Location     Type
 17420 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17421 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17422 ;; Return value:  Size  Location     Type
 17423 ;;                  2   29[BANK0 ] PTR unsigned char 
 17424 ;; Registers used:
 17425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17426 ;; Tracked objects:
 17427 ;;		On entry : 0/0
 17428 ;;		On exit  : 0/0
 17429 ;;		Unchanged: 0/0
 17430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17431 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17432 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17434 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17435 ;;Total ram usage:        6 bytes
 17436 ;; Hardware stack levels used:    1
 17437 ;; Hardware stack levels required when called:   11
 17438 ;; This function calls:
 17439 ;;		Nothing
 17440 ;; This function is called by:
 17441 ;;		_Terminal
 17442 ;;		_Term_MainSm
 17443 ;; This function uses a non-reentrant model
 17444 ;;
 17445                           
 17446                           	psect	text69
 17447  00670A                     __ptext69:
 17448                           	opt stack 0
 17449  00670A                     _strcpy:
 17450                           	opt stack 15
 17451                           
 17452                           ; BSR set to: 0
 17453                           ;incstack = 0
 17454  00670A  C07D  F081         	movff	strcpy@to,strcpy@cp
 17455  00670E  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17456  006712  D005               	goto	l3591
 17457  006714  0100               	movlb	0	; () banked
 17458  006716  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17459  006718  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17460  00671A  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17461  00671C  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17462  00671E                     l3591:
 17463                           
 17464                           ; BSR set to: 0
 17465  00671E  C07F  FFF6         	movff	strcpy@from,tblptrl
 17466  006722  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17467  006726                     	if	0	;tblptru may be non-zero
 17468  006726                     	endif
 17469  006726                     	if	0	;tblptru may be non-zero
 17470  006726                     	endif
 17471  006726  C081  FFD9         	movff	strcpy@cp,fsr2l
 17472  00672A  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17473  00672E  0008               	tblrd		*
 17474  006730  CFF5 FFDF          	movff	tablat,indf2
 17475  006734  50DF               	movf	indf2,w,c
 17476  006736  B4D8               	btfsc	status,2,c
 17477  006738  0012               	return	
 17478  00673A  D7EC               	goto	l3592
 17479  00673C                     __end_of_strcpy:
 17480                           	opt stack 0
 17481                           tosu	equ	0xFFF
 17482                           tosh	equ	0xFFE
 17483                           tosl	equ	0xFFD
 17484                           pclath	equ	0xFFA
 17485                           tblptru	equ	0xFF8
 17486                           tblptrh	equ	0xFF7
 17487                           tblptrl	equ	0xFF6
 17488                           tablat	equ	0xFF5
 17489                           prodh	equ	0xFF4
 17490                           prodl	equ	0xFF3
 17491                           intcon	equ	0xFF2
 17492                           intcon2	equ	0xFF1
 17493                           intcon3	equ	0xFF0
 17494                           indf0	equ	0xFEF
 17495                           postinc0	equ	0xFEE
 17496                           plusw0	equ	0xFEB
 17497                           fsr0h	equ	0xFEA
 17498                           fsr0l	equ	0xFE9
 17499                           wreg	equ	0xFE8
 17500                           indf1	equ	0xFE7
 17501                           postinc1	equ	0xFE6
 17502                           postdec1	equ	0xFE5
 17503                           fsr1h	equ	0xFE2
 17504                           fsr1l	equ	0xFE1
 17505                           indf2	equ	0xFDF
 17506                           postinc2	equ	0xFDE
 17507                           postdec2	equ	0xFDD
 17508                           plusw2	equ	0xFDB
 17509                           fsr2h	equ	0xFDA
 17510                           fsr2l	equ	0xFD9
 17511                           status	equ	0xFD8
 17512                           
 17513 ;; *************** function _putUSBUSART *****************
 17514 ;; Defined at:
 17515 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17516 ;; Parameters:    Size  Location     Type
 17517 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17518 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17519 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17520 ;;		 -> RxBuffer(400), 
 17521 ;;  length          1   37[BANK0 ] unsigned char 
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;		None
 17524 ;; Return value:  Size  Location     Type
 17525 ;;                  1    wreg      void 
 17526 ;; Registers used:
 17527 ;;		wreg, status,2, status,0
 17528 ;; Tracked objects:
 17529 ;;		On entry : 0/0
 17530 ;;		On exit  : 0/0
 17531 ;;		Unchanged: 0/0
 17532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17533 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17536 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17537 ;;Total ram usage:        3 bytes
 17538 ;; Hardware stack levels used:    1
 17539 ;; Hardware stack levels required when called:   11
 17540 ;; This function calls:
 17541 ;;		Nothing
 17542 ;; This function is called by:
 17543 ;;		_Terminal
 17544 ;;		_Term_MainSm
 17545 ;;		_GsmGprsTerminal
 17546 ;; This function uses a non-reentrant model
 17547 ;;
 17548                           
 17549                           	psect	text70
 17550  006A1C                     __ptext70:
 17551                           	opt stack 0
 17552  006A1C                     _putUSBUSART:
 17553                           	opt stack 15
 17554                           
 17555                           ;usb_device_cdc.c: 584: ;
 17556                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17557                           
 17558                           ;incstack = 0
 17559  006A1C  0100               	movlb	0	; () banked
 17560  006A1E  51C8               	movf	_cdc_trf_state& (0+255),w,b
 17561  006A20  A4D8               	btfss	status,2,c
 17562  006A22  0012               	return	
 17563                           
 17564                           ; BSR set to: 0
 17565                           ;usb_device_cdc.c: 586: {
 17566                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17567  006A24  C083  F2CC         	movff	putUSBUSART@data,_pCDCSrc
 17568  006A28  C084  F2CD         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17569                           
 17570                           ; BSR set to: 0
 17571  006A2C  C085  F0C7         	movff	putUSBUSART@length,_cdc_tx_len
 17572                           
 17573                           ; BSR set to: 0
 17574  006A30  0E01               	movlw	1
 17575  006A32  0101               	movlb	1	; () banked
 17576  006A34  6FDC               	movwf	_cdc_mem_type& (0+255),b
 17577                           
 17578                           ; BSR set to: 1
 17579  006A36  0E01               	movlw	1
 17580  006A38  0100               	movlb	0	; () banked
 17581  006A3A  6FC8               	movwf	_cdc_trf_state& (0+255),b
 17582  006A3C  0012               	return	
 17583  006A3E                     __end_of_putUSBUSART:
 17584                           	opt stack 0
 17585                           tosu	equ	0xFFF
 17586                           tosh	equ	0xFFE
 17587                           tosl	equ	0xFFD
 17588                           pclath	equ	0xFFA
 17589                           tblptru	equ	0xFF8
 17590                           tblptrh	equ	0xFF7
 17591                           tblptrl	equ	0xFF6
 17592                           tablat	equ	0xFF5
 17593                           prodh	equ	0xFF4
 17594                           prodl	equ	0xFF3
 17595                           intcon	equ	0xFF2
 17596                           intcon2	equ	0xFF1
 17597                           intcon3	equ	0xFF0
 17598                           indf0	equ	0xFEF
 17599                           postinc0	equ	0xFEE
 17600                           plusw0	equ	0xFEB
 17601                           fsr0h	equ	0xFEA
 17602                           fsr0l	equ	0xFE9
 17603                           wreg	equ	0xFE8
 17604                           indf1	equ	0xFE7
 17605                           postinc1	equ	0xFE6
 17606                           postdec1	equ	0xFE5
 17607                           fsr1h	equ	0xFE2
 17608                           fsr1l	equ	0xFE1
 17609                           indf2	equ	0xFDF
 17610                           postinc2	equ	0xFDE
 17611                           postdec2	equ	0xFDD
 17612                           plusw2	equ	0xFDB
 17613                           fsr2h	equ	0xFDA
 17614                           fsr2l	equ	0xFD9
 17615                           status	equ	0xFD8
 17616                           
 17617 ;; *************** function _itoa *****************
 17618 ;; Defined at:
 17619 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17620 ;; Parameters:    Size  Location     Type
 17621 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17622 ;;		 -> Terminal@Payload(80), 
 17623 ;;  val             2   53[BANK0 ] int 
 17624 ;;  base            2   55[BANK0 ] int 
 17625 ;; Auto vars:     Size  Location     Type
 17626 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17627 ;;		 -> Terminal@Payload(80), 
 17628 ;; Return value:  Size  Location     Type
 17629 ;;                  2   51[BANK0 ] PTR unsigned char 
 17630 ;; Registers used:
 17631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17632 ;; Tracked objects:
 17633 ;;		On entry : 0/0
 17634 ;;		On exit  : 0/0
 17635 ;;		Unchanged: 0/0
 17636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17637 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17638 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17640 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17641 ;;Total ram usage:        8 bytes
 17642 ;; Hardware stack levels used:    1
 17643 ;; Hardware stack levels required when called:   13
 17644 ;; This function calls:
 17645 ;;		_utoa
 17646 ;; This function is called by:
 17647 ;;		_Terminal
 17648 ;; This function uses a non-reentrant model
 17649 ;;
 17650                           
 17651                           	psect	text71
 17652  0062D0                     __ptext71:
 17653                           	opt stack 0
 17654  0062D0                     _itoa:
 17655                           	opt stack 12
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;incstack = 0
 17659  0062D0  C093  F099         	movff	itoa@buf,itoa@cp
 17660  0062D4  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17661  0062D8  0100               	movlb	0	; () banked
 17662  0062DA  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17663  0062DC  D00C               	goto	l3339
 17664                           
 17665                           ; BSR set to: 0
 17666  0062DE  C093  FFD9         	movff	itoa@buf,fsr2l
 17667  0062E2  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17668  0062E6  0E2D               	movlw	45
 17669  0062E8  6EDF               	movwf	indf2,c
 17670                           
 17671                           ; BSR set to: 0
 17672  0062EA  4B93               	infsnz	itoa@buf& (0+255),f,b
 17673  0062EC  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17674                           
 17675                           ; BSR set to: 0
 17676  0062EE  6D95               	negf	itoa@val& (0+255),b
 17677  0062F0  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17678  0062F2  B0D8               	btfsc	status,0,c
 17679  0062F4  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17680  0062F6                     l3339:
 17681                           
 17682                           ; BSR set to: 0
 17683                           
 17684                           ; BSR set to: 0
 17685  0062F6  C093  F08A         	movff	itoa@buf,utoa@buf
 17686  0062FA  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17687  0062FE  C095  F08C         	movff	itoa@val,utoa@val
 17688  006302  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17689  006306  C097  F08E         	movff	itoa@base,utoa@base
 17690  00630A  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17691  00630E  EC40  F024         	call	_utoa	;wreg free
 17692  006312  0012               	return	
 17693  006314                     __end_of_itoa:
 17694                           	opt stack 0
 17695                           tosu	equ	0xFFF
 17696                           tosh	equ	0xFFE
 17697                           tosl	equ	0xFFD
 17698                           pclath	equ	0xFFA
 17699                           tblptru	equ	0xFF8
 17700                           tblptrh	equ	0xFF7
 17701                           tblptrl	equ	0xFF6
 17702                           tablat	equ	0xFF5
 17703                           prodh	equ	0xFF4
 17704                           prodl	equ	0xFF3
 17705                           intcon	equ	0xFF2
 17706                           intcon2	equ	0xFF1
 17707                           intcon3	equ	0xFF0
 17708                           indf0	equ	0xFEF
 17709                           postinc0	equ	0xFEE
 17710                           plusw0	equ	0xFEB
 17711                           fsr0h	equ	0xFEA
 17712                           fsr0l	equ	0xFE9
 17713                           wreg	equ	0xFE8
 17714                           indf1	equ	0xFE7
 17715                           postinc1	equ	0xFE6
 17716                           postdec1	equ	0xFE5
 17717                           fsr1h	equ	0xFE2
 17718                           fsr1l	equ	0xFE1
 17719                           indf2	equ	0xFDF
 17720                           postinc2	equ	0xFDE
 17721                           postdec2	equ	0xFDD
 17722                           plusw2	equ	0xFDB
 17723                           fsr2h	equ	0xFDA
 17724                           fsr2l	equ	0xFD9
 17725                           status	equ	0xFD8
 17726                           
 17727 ;; *************** function _utoa *****************
 17728 ;; Defined at:
 17729 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17730 ;; Parameters:    Size  Location     Type
 17731 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17732 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17733 ;;  val             2   44[BANK0 ] unsigned int 
 17734 ;;  base            2   46[BANK0 ] int 
 17735 ;; Auto vars:     Size  Location     Type
 17736 ;;  v               2   48[BANK0 ] unsigned int 
 17737 ;;  c               1   50[BANK0 ] unsigned char 
 17738 ;; Return value:  Size  Location     Type
 17739 ;;                  2   42[BANK0 ] PTR unsigned char 
 17740 ;; Registers used:
 17741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17742 ;; Tracked objects:
 17743 ;;		On entry : 0/0
 17744 ;;		On exit  : 0/0
 17745 ;;		Unchanged: 0/0
 17746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17747 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17748 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17750 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17751 ;;Total ram usage:        9 bytes
 17752 ;; Hardware stack levels used:    1
 17753 ;; Hardware stack levels required when called:   12
 17754 ;; This function calls:
 17755 ;;		___lwdiv
 17756 ;;		___lwmod
 17757 ;; This function is called by:
 17758 ;;		_Term_MainSm
 17759 ;;		_itoa
 17760 ;; This function uses a non-reentrant model
 17761 ;;
 17762                           
 17763                           	psect	text72
 17764  004880                     __ptext72:
 17765                           	opt stack 0
 17766  004880                     _utoa:
 17767                           	opt stack 14
 17768                           
 17769                           ;incstack = 0
 17770  004880  C08C  F090         	movff	utoa@val,utoa@v
 17771  004884  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17772  004888  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17773  00488C  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17774  004890  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17775  004894  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17776  004898  EC04  F02F         	call	___lwdiv	;wreg free
 17777  00489C  C083  F090         	movff	?___lwdiv,utoa@v
 17778  0048A0  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17779  0048A4  0100               	movlb	0	; () banked
 17780  0048A6  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17781  0048A8  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17782                           
 17783                           ; BSR set to: 0
 17784  0048AA  5190               	movf	utoa@v& (0+255),w,b
 17785  0048AC  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17786  0048AE  A4D8               	btfss	status,2,c
 17787  0048B0  D7EB               	goto	l3343
 17788                           
 17789                           ; BSR set to: 0
 17790                           
 17791                           ; BSR set to: 0
 17792  0048B2  C08A  FFD9         	movff	utoa@buf,fsr2l
 17793  0048B6  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17794  0048BA  0E00               	movlw	0
 17795  0048BC  6EDF               	movwf	indf2,c
 17796                           
 17797                           ; BSR set to: 0
 17798  0048BE  078A               	decf	utoa@buf& (0+255),f,b
 17799  0048C0  A0D8               	btfss	status,0,c
 17800  0048C2  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17801  0048C4                     
 17802                           ; BSR set to: 0
 17803                           
 17804                           ; BSR set to: 0
 17805  0048C4  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17806  0048C8  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17807  0048CC  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17808  0048D0  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17809  0048D4  EC8A  F031         	call	___lwmod	;wreg free
 17810  0048D8  0100               	movlb	0	; () banked
 17811  0048DA  517D               	movf	?___lwmod& (0+255),w,b
 17812  0048DC  6F92               	movwf	utoa@c& (0+255),b
 17813                           
 17814                           ; BSR set to: 0
 17815  0048DE  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17816  0048E2  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17817  0048E6  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17818  0048EA  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17819  0048EE  EC04  F02F         	call	___lwdiv	;wreg free
 17820  0048F2  C083  F08C         	movff	?___lwdiv,utoa@val
 17821  0048F6  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17822  0048FA  0E09               	movlw	9
 17823  0048FC  0100               	movlb	0	; () banked
 17824  0048FE  6592               	cpfsgt	utoa@c& (0+255),b
 17825  004900  D002               	goto	l3346
 17826                           
 17827                           ; BSR set to: 0
 17828  004902  0E07               	movlw	7
 17829  004904  2792               	addwf	utoa@c& (0+255),f,b
 17830  004906                     l3346:
 17831                           
 17832                           ; BSR set to: 0
 17833  004906  0E30               	movlw	48
 17834  004908  2792               	addwf	utoa@c& (0+255),f,b
 17835                           
 17836                           ; BSR set to: 0
 17837  00490A  C08A  FFD9         	movff	utoa@buf,fsr2l
 17838  00490E  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17839  004912  C092  FFDF         	movff	utoa@c,indf2
 17840                           
 17841                           ; BSR set to: 0
 17842  004916  078A               	decf	utoa@buf& (0+255),f,b
 17843  004918  A0D8               	btfss	status,0,c
 17844  00491A  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17845                           
 17846                           ; BSR set to: 0
 17847  00491C  518C               	movf	utoa@val& (0+255),w,b
 17848  00491E  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17849  004920  A4D8               	btfss	status,2,c
 17850  004922  D7D0               	goto	l3345
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;	Return value of _utoa is never used
 17854                           
 17855                           ; BSR set to: 0
 17856  004924  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17857  004926  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17858  004928  0012               	return	
 17859  00492A                     __end_of_utoa:
 17860                           	opt stack 0
 17861                           tosu	equ	0xFFF
 17862                           tosh	equ	0xFFE
 17863                           tosl	equ	0xFFD
 17864                           pclath	equ	0xFFA
 17865                           tblptru	equ	0xFF8
 17866                           tblptrh	equ	0xFF7
 17867                           tblptrl	equ	0xFF6
 17868                           tablat	equ	0xFF5
 17869                           prodh	equ	0xFF4
 17870                           prodl	equ	0xFF3
 17871                           intcon	equ	0xFF2
 17872                           intcon2	equ	0xFF1
 17873                           intcon3	equ	0xFF0
 17874                           indf0	equ	0xFEF
 17875                           postinc0	equ	0xFEE
 17876                           plusw0	equ	0xFEB
 17877                           fsr0h	equ	0xFEA
 17878                           fsr0l	equ	0xFE9
 17879                           wreg	equ	0xFE8
 17880                           indf1	equ	0xFE7
 17881                           postinc1	equ	0xFE6
 17882                           postdec1	equ	0xFE5
 17883                           fsr1h	equ	0xFE2
 17884                           fsr1l	equ	0xFE1
 17885                           indf2	equ	0xFDF
 17886                           postinc2	equ	0xFDE
 17887                           postdec2	equ	0xFDD
 17888                           plusw2	equ	0xFDB
 17889                           fsr2h	equ	0xFDA
 17890                           fsr2l	equ	0xFD9
 17891                           status	equ	0xFD8
 17892                           
 17893 ;; *************** function ___lwmod *****************
 17894 ;; Defined at:
 17895 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17896 ;; Parameters:    Size  Location     Type
 17897 ;;  dividend        2   29[BANK0 ] unsigned int 
 17898 ;;  divisor         2   31[BANK0 ] unsigned int 
 17899 ;; Auto vars:     Size  Location     Type
 17900 ;;  counter         1   33[BANK0 ] unsigned char 
 17901 ;; Return value:  Size  Location     Type
 17902 ;;                  2   29[BANK0 ] unsigned int 
 17903 ;; Registers used:
 17904 ;;		wreg, status,2, status,0
 17905 ;; Tracked objects:
 17906 ;;		On entry : 0/0
 17907 ;;		On exit  : 0/0
 17908 ;;		Unchanged: 0/0
 17909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17910 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17913 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17914 ;;Total ram usage:        5 bytes
 17915 ;; Hardware stack levels used:    1
 17916 ;; Hardware stack levels required when called:   11
 17917 ;; This function calls:
 17918 ;;		Nothing
 17919 ;; This function is called by:
 17920 ;;		_utoa
 17921 ;; This function uses a non-reentrant model
 17922 ;;
 17923                           
 17924                           	psect	text73
 17925  006314                     __ptext73:
 17926                           	opt stack 0
 17927  006314                     ___lwmod:
 17928                           	opt stack 14
 17929                           
 17930                           ; BSR set to: 0
 17931                           ;incstack = 0
 17932  006314  0100               	movlb	0	; () banked
 17933  006316  517F               	movf	___lwmod@divisor& (0+255),w,b
 17934  006318  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17935  00631A  B4D8               	btfsc	status,2,c
 17936  00631C  D018               	goto	l3441
 17937                           
 17938                           ; BSR set to: 0
 17939  00631E  0E01               	movlw	1
 17940  006320  6F81               	movwf	___lwmod@counter& (0+255),b
 17941  006322  D004               	goto	l3436
 17942  006324                     
 17943                           ; BSR set to: 0
 17944                           
 17945                           ; BSR set to: 0
 17946  006324  90D8               	bcf	status,0,c
 17947  006326  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17948  006328  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17949  00632A  2B81               	incf	___lwmod@counter& (0+255),f,b
 17950  00632C                     l3436:
 17951                           
 17952                           ; BSR set to: 0
 17953                           
 17954                           ; BSR set to: 0
 17955  00632C  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17956  00632E  D7FA               	goto	l3437
 17957  006330                     u12370:
 17958                           
 17959                           ; BSR set to: 0
 17960                           
 17961                           ; BSR set to: 0
 17962                           
 17963                           ; BSR set to: 0
 17964  006330  517F               	movf	___lwmod@divisor& (0+255),w,b
 17965  006332  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17966  006334  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17967  006336  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17968  006338  A0D8               	btfss	status,0,c
 17969  00633A  D004               	goto	l3440
 17970                           
 17971                           ; BSR set to: 0
 17972  00633C  517F               	movf	___lwmod@divisor& (0+255),w,b
 17973  00633E  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17974  006340  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17975  006342  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17976  006344                     l3440:
 17977                           
 17978                           ; BSR set to: 0
 17979                           
 17980                           ; BSR set to: 0
 17981  006344  90D8               	bcf	status,0,c
 17982  006346  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17983  006348  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17984                           
 17985                           ; BSR set to: 0
 17986  00634A  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17987  00634C  D7F1               	goto	u12370
 17988  00634E                     l3441:
 17989                           
 17990                           ; BSR set to: 0
 17991                           
 17992                           ; BSR set to: 0
 17993  00634E  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17994  006352  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17995                           
 17996                           ; BSR set to: 0
 17997  006356  0012               	return		;funcret
 17998  006358                     __end_of___lwmod:
 17999                           	opt stack 0
 18000                           tosu	equ	0xFFF
 18001                           tosh	equ	0xFFE
 18002                           tosl	equ	0xFFD
 18003                           pclath	equ	0xFFA
 18004                           tblptru	equ	0xFF8
 18005                           tblptrh	equ	0xFF7
 18006                           tblptrl	equ	0xFF6
 18007                           tablat	equ	0xFF5
 18008                           prodh	equ	0xFF4
 18009                           prodl	equ	0xFF3
 18010                           intcon	equ	0xFF2
 18011                           intcon2	equ	0xFF1
 18012                           intcon3	equ	0xFF0
 18013                           indf0	equ	0xFEF
 18014                           postinc0	equ	0xFEE
 18015                           plusw0	equ	0xFEB
 18016                           fsr0h	equ	0xFEA
 18017                           fsr0l	equ	0xFE9
 18018                           wreg	equ	0xFE8
 18019                           indf1	equ	0xFE7
 18020                           postinc1	equ	0xFE6
 18021                           postdec1	equ	0xFE5
 18022                           fsr1h	equ	0xFE2
 18023                           fsr1l	equ	0xFE1
 18024                           indf2	equ	0xFDF
 18025                           postinc2	equ	0xFDE
 18026                           postdec2	equ	0xFDD
 18027                           plusw2	equ	0xFDB
 18028                           fsr2h	equ	0xFDA
 18029                           fsr2l	equ	0xFD9
 18030                           status	equ	0xFD8
 18031                           
 18032 ;; *************** function _getsUSBUSART *****************
 18033 ;; Defined at:
 18034 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 18035 ;; Parameters:    Size  Location     Type
 18036 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 18037 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 18038 ;;  len             1   38[BANK0 ] unsigned char 
 18039 ;; Auto vars:     Size  Location     Type
 18040 ;;		None
 18041 ;; Return value:  Size  Location     Type
 18042 ;;                  1    wreg      unsigned char 
 18043 ;; Registers used:
 18044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18045 ;; Tracked objects:
 18046 ;;		On entry : 0/0
 18047 ;;		On exit  : 0/0
 18048 ;;		Unchanged: 0/0
 18049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18050 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18052 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18053 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18054 ;;Total ram usage:        4 bytes
 18055 ;; Hardware stack levels used:    1
 18056 ;; Hardware stack levels required when called:   12
 18057 ;; This function calls:
 18058 ;;		_USBTransferOnePacket
 18059 ;; This function is called by:
 18060 ;;		_Terminal
 18061 ;;		_GsmGprsTerminal
 18062 ;; This function uses a non-reentrant model
 18063 ;;
 18064                           
 18065                           	psect	text74
 18066  004E24                     __ptext74:
 18067                           	opt stack 0
 18068  004E24                     _getsUSBUSART:
 18069                           	opt stack 13
 18070                           
 18071                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 18072                           
 18073                           ; BSR set to: 0
 18074                           ;incstack = 0
 18075  004E24  0E00               	movlw	0
 18076  004E26  0100               	movlb	0	; () banked
 18077  004E28  6FC9               	movwf	_cdc_rx_len& (0+255),b
 18078                           
 18079                           ; BSR set to: 0
 18080                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 18081  004E2A  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18082  004E2C  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18083  004E2E  B4D8               	btfsc	status,2,c
 18084  004E30  D006               	goto	u13090
 18085                           
 18086                           ; BSR set to: 0
 18087  004E32  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18088  004E36  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18089  004E3A  BEDF               	btfsc	indf2,7,c
 18090  004E3C  D03B               	goto	l1924
 18091  004E3E                     u13090:
 18092                           
 18093                           ; BSR set to: 0
 18094                           ;usb_device_cdc.c: 493: {
 18095                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18096                           
 18097                           ; BSR set to: 0
 18098  004E3E  EE20 F001          	lfsr	2,1
 18099  004E42  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18100  004E44  26D9               	addwf	fsr2l,f,c
 18101  004E46  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18102  004E48  22DA               	addwfc	fsr2h,f,c
 18103  004E4A  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18104  004E4C  5CDE               	subwf	postinc2,w,c
 18105  004E4E  B0D8               	btfsc	status,0,c
 18106  004E50  D008               	goto	l1927
 18107                           
 18108                           ; BSR set to: 0
 18109                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18110  004E52  EE20 F001          	lfsr	2,1
 18111  004E56  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18112  004E58  26D9               	addwf	fsr2l,f,c
 18113  004E5A  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18114  004E5C  22DA               	addwfc	fsr2h,f,c
 18115  004E5E  50DF               	movf	indf2,w,c
 18116  004E60  6F86               	movwf	getsUSBUSART@len& (0+255),b
 18117  004E62                     l1927:
 18118                           
 18119                           ; BSR set to: 0
 18120                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18121                           
 18122                           ; BSR set to: 0
 18123  004E62  0E00               	movlw	0
 18124  004E64  6FC9               	movwf	_cdc_rx_len& (0+255),b
 18125  004E66  D013               	goto	l1928
 18126  004E68                     
 18127                           ; BSR set to: 0
 18128                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18129                           
 18130                           ; BSR set to: 0
 18131  004E68  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18132  004E6A  0D01               	mullw	1
 18133  004E6C  0E00               	movlw	low _cdc_data_rx
 18134  004E6E  24F3               	addwf	prodl,w,c
 18135  004E70  6ED9               	movwf	fsr2l,c
 18136  004E72  0E05               	movlw	high _cdc_data_rx
 18137  004E74  20F4               	addwfc	prodh,w,c
 18138  004E76  6EDA               	movwf	fsr2h,c
 18139  004E78  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18140  004E7A  0D01               	mullw	1
 18141  004E7C  50F3               	movf	prodl,w,c
 18142  004E7E  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18143  004E80  6EE1               	movwf	fsr1l,c
 18144  004E82  50F4               	movf	prodh,w,c
 18145  004E84  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18146  004E86  6EE2               	movwf	fsr1h,c
 18147  004E88  CFDF FFE7          	movff	indf2,indf1
 18148                           
 18149                           ; BSR set to: 0
 18150  004E8C  2BC9               	incf	_cdc_rx_len& (0+255),f,b
 18151  004E8E                     l1928:
 18152                           
 18153                           ; BSR set to: 0
 18154                           
 18155                           ; BSR set to: 0
 18156  004E8E  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18157  004E90  5DC9               	subwf	_cdc_rx_len& (0+255),w,b
 18158  004E92  A0D8               	btfss	status,0,c
 18159  004E94  D7E9               	goto	l1929
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18163                           
 18164                           ; BSR set to: 0
 18165  004E96  0E00               	movlw	0
 18166  004E98  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18167  004E9A  0E00               	movlw	low _cdc_data_rx
 18168  004E9C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18169  004E9E  0E05               	movlw	high _cdc_data_rx
 18170  004EA0  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18171  004EA2  0E40               	movlw	64
 18172  004EA4  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18173  004EA6  0E02               	movlw	2
 18174  004EA8  EC7D  F022         	call	_USBTransferOnePacket
 18175  004EAC  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18176  004EB0  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18177  004EB4                     l1924:
 18178                           
 18179                           ;usb_device_cdc.c: 513: }
 18180                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18181  004EB4  0100               	movlb	0	; () banked
 18182  004EB6  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18183  004EB8  0012               	return	
 18184  004EBA                     __end_of_getsUSBUSART:
 18185                           	opt stack 0
 18186                           tosu	equ	0xFFF
 18187                           tosh	equ	0xFFE
 18188                           tosl	equ	0xFFD
 18189                           pclath	equ	0xFFA
 18190                           tblptru	equ	0xFF8
 18191                           tblptrh	equ	0xFF7
 18192                           tblptrl	equ	0xFF6
 18193                           tablat	equ	0xFF5
 18194                           prodh	equ	0xFF4
 18195                           prodl	equ	0xFF3
 18196                           intcon	equ	0xFF2
 18197                           intcon2	equ	0xFF1
 18198                           intcon3	equ	0xFF0
 18199                           indf0	equ	0xFEF
 18200                           postinc0	equ	0xFEE
 18201                           plusw0	equ	0xFEB
 18202                           fsr0h	equ	0xFEA
 18203                           fsr0l	equ	0xFE9
 18204                           wreg	equ	0xFE8
 18205                           indf1	equ	0xFE7
 18206                           postinc1	equ	0xFE6
 18207                           postdec1	equ	0xFE5
 18208                           fsr1h	equ	0xFE2
 18209                           fsr1l	equ	0xFE1
 18210                           indf2	equ	0xFDF
 18211                           postinc2	equ	0xFDE
 18212                           postdec2	equ	0xFDD
 18213                           plusw2	equ	0xFDB
 18214                           fsr2h	equ	0xFDA
 18215                           fsr2l	equ	0xFD9
 18216                           status	equ	0xFD8
 18217                           
 18218 ;; *************** function _USBTransferOnePacket *****************
 18219 ;; Defined at:
 18220 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18221 ;; Parameters:    Size  Location     Type
 18222 ;;  ep              1    wreg     unsigned char 
 18223 ;;  dir             1   29[BANK0 ] unsigned char 
 18224 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18225 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18226 ;;  len             1   32[BANK0 ] unsigned char 
 18227 ;; Auto vars:     Size  Location     Type
 18228 ;;  ep              1   33[BANK0 ] unsigned char 
 18229 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18230 ;;		 -> NULL(0), BDT(48), 
 18231 ;; Return value:  Size  Location     Type
 18232 ;;                  2   29[BANK0 ] PTR void 
 18233 ;; Registers used:
 18234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18235 ;; Tracked objects:
 18236 ;;		On entry : 0/0
 18237 ;;		On exit  : 0/0
 18238 ;;		Unchanged: 0/0
 18239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18240 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18241 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18243 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18244 ;;Total ram usage:        7 bytes
 18245 ;; Hardware stack levels used:    1
 18246 ;; Hardware stack levels required when called:   11
 18247 ;; This function calls:
 18248 ;;		Nothing
 18249 ;; This function is called by:
 18250 ;;		_CDCInitEP
 18251 ;;		_getsUSBUSART
 18252 ;;		_CDCTxService
 18253 ;;		_USBCDCEventHandler
 18254 ;; This function uses a non-reentrant model
 18255 ;;
 18256                           
 18257                           	psect	text75
 18258  0044FA                     __ptext75:
 18259                           	opt stack 0
 18260  0044FA                     _USBTransferOnePacket:
 18261                           	opt stack 13
 18262                           
 18263                           ; BSR set to: 0
 18264                           ;incstack = 0
 18265                           ;USBTransferOnePacket@ep stored from wreg
 18266  0044FA  0100               	movlb	0	; () banked
 18267  0044FC  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18268                           
 18269                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18270                           ;usb_device.c: 1018: if(dir != 0)
 18271  0044FE  0100               	movlb	0	; () banked
 18272  004500  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18273  004502  B4D8               	btfsc	status,2,c
 18274  004504  D007               	goto	l1648
 18275                           
 18276                           ; BSR set to: 0
 18277                           ;usb_device.c: 1019: {
 18278                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18279  004506  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18280  004508  0D02               	mullw	2
 18281  00450A  0EB6               	movlw	low _pBDTEntryIn
 18282  00450C  24F3               	addwf	prodl,w,c
 18283  00450E  6ED9               	movwf	fsr2l,c
 18284  004510  0E00               	movlw	high _pBDTEntryIn
 18285  004512  D006               	goto	L16
 18286  004514                     l1648:
 18287                           
 18288                           ; BSR set to: 0
 18289                           ;usb_device.c: 1023: else
 18290                           ;usb_device.c: 1024: {
 18291                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18292                           
 18293                           ; BSR set to: 0
 18294  004514  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18295  004516  0D02               	mullw	2
 18296  004518  0E06               	movlw	low _pBDTEntryOut
 18297  00451A  24F3               	addwf	prodl,w,c
 18298  00451C  6ED9               	movwf	fsr2l,c
 18299  00451E  0E03               	movlw	high _pBDTEntryOut
 18300  004520                     L16:
 18301  004520  20F4               	addwfc	prodh,w,c
 18302  004522  6EDA               	movwf	fsr2h,c
 18303  004524  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18304  004528  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18305                           
 18306                           ; BSR set to: 0
 18307                           ;usb_device.c: 1027: }
 18308                           ;usb_device.c: 1031: if(handle == 0)
 18309                           
 18310                           ; BSR set to: 0
 18311  00452C  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18312  00452E  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18313  004530  A4D8               	btfss	status,2,c
 18314  004532  D005               	goto	l1650
 18315                           
 18316                           ; BSR set to: 0
 18317                           ;usb_device.c: 1032: {
 18318                           ;usb_device.c: 1033: return 0;
 18319  004534  0E00               	movlw	0
 18320  004536  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18321  004538  0E00               	movlw	0
 18322  00453A  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18323                           
 18324                           ; BSR set to: 0
 18325  00453C  0012               	return	
 18326  00453E                     l1650:
 18327                           
 18328                           ; BSR set to: 0
 18329                           ;usb_device.c: 1034: }
 18330                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18331                           
 18332                           ; BSR set to: 0
 18333  00453E  EE20 F002          	lfsr	2,2
 18334  004542  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18335  004544  26D9               	addwf	fsr2l,f,c
 18336  004546  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18337  004548  22DA               	addwfc	fsr2h,f,c
 18338  00454A  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18339  00454E  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18340                           
 18341                           ;usb_device.c: 1048: handle->CNT = len;
 18342  004552  EE20 F001          	lfsr	2,1
 18343  004556  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18344  004558  26D9               	addwf	fsr2l,f,c
 18345  00455A  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18346  00455C  22DA               	addwfc	fsr2h,f,c
 18347  00455E  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18348                           
 18349                           ; BSR set to: 0
 18350                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18351  004562  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18352  004566  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18353  00456A  0E40               	movlw	64
 18354  00456C  16DF               	andwf	indf2,f,c
 18355                           
 18356                           ; BSR set to: 0
 18357                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18358  00456E  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18359  004572  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18360  004576  0E00               	movlw	0
 18361  004578  86DB               	bsf	plusw2,3,c
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18365  00457A  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18366  00457E  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18367  004582  0E00               	movlw	0
 18368  004584  8EDB               	bsf	plusw2,7,c
 18369                           
 18370                           ; BSR set to: 0
 18371                           ;usb_device.c: 1054: if(dir != 0)
 18372  004586  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18373  004588  B4D8               	btfsc	status,2,c
 18374  00458A  D007               	goto	l1652
 18375                           
 18376                           ; BSR set to: 0
 18377                           ;usb_device.c: 1055: {
 18378                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18379  00458C  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18380  00458E  0D02               	mullw	2
 18381  004590  0EB6               	movlw	low _pBDTEntryIn
 18382  004592  24F3               	addwf	prodl,w,c
 18383  004594  6ED9               	movwf	fsr2l,c
 18384  004596  0E00               	movlw	high _pBDTEntryIn
 18385  004598  D006               	goto	L17
 18386  00459A                     l1652:
 18387                           
 18388                           ; BSR set to: 0
 18389                           ;usb_device.c: 1059: else
 18390                           ;usb_device.c: 1060: {
 18391                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18392                           
 18393                           ; BSR set to: 0
 18394  00459A  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18395  00459C  0D02               	mullw	2
 18396  00459E  0E06               	movlw	low _pBDTEntryOut
 18397  0045A0  24F3               	addwf	prodl,w,c
 18398  0045A2  6ED9               	movwf	fsr2l,c
 18399  0045A4  0E03               	movlw	high _pBDTEntryOut
 18400  0045A6                     L17:
 18401  0045A6  20F4               	addwfc	prodh,w,c
 18402  0045A8  6EDA               	movwf	fsr2h,c
 18403  0045AA  0E04               	movlw	4
 18404  0045AC  1ADF               	xorwf	indf2,f,c
 18405                           
 18406                           ; BSR set to: 0
 18407                           ;usb_device.c: 1063: }
 18408                           ;usb_device.c: 1064: return (void*)handle;
 18409                           
 18410                           ; BSR set to: 0
 18411  0045AE  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18412  0045B2  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18413  0045B6  0012               	return	
 18414  0045B8                     __end_of_USBTransferOnePacket:
 18415                           	opt stack 0
 18416                           tosu	equ	0xFFF
 18417                           tosh	equ	0xFFE
 18418                           tosl	equ	0xFFD
 18419                           pclath	equ	0xFFA
 18420                           tblptru	equ	0xFF8
 18421                           tblptrh	equ	0xFF7
 18422                           tblptrl	equ	0xFF6
 18423                           tablat	equ	0xFF5
 18424                           prodh	equ	0xFF4
 18425                           prodl	equ	0xFF3
 18426                           intcon	equ	0xFF2
 18427                           intcon2	equ	0xFF1
 18428                           intcon3	equ	0xFF0
 18429                           indf0	equ	0xFEF
 18430                           postinc0	equ	0xFEE
 18431                           plusw0	equ	0xFEB
 18432                           fsr0h	equ	0xFEA
 18433                           fsr0l	equ	0xFE9
 18434                           wreg	equ	0xFE8
 18435                           indf1	equ	0xFE7
 18436                           postinc1	equ	0xFE6
 18437                           postdec1	equ	0xFE5
 18438                           fsr1h	equ	0xFE2
 18439                           fsr1l	equ	0xFE1
 18440                           indf2	equ	0xFDF
 18441                           postinc2	equ	0xFDE
 18442                           postdec2	equ	0xFDD
 18443                           plusw2	equ	0xFDB
 18444                           fsr2h	equ	0xFDA
 18445                           fsr2l	equ	0xFD9
 18446                           status	equ	0xFD8
 18447                           
 18448 ;; *************** function _atoi *****************
 18449 ;; Defined at:
 18450 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18451 ;; Parameters:    Size  Location     Type
 18452 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18453 ;;		 -> Terminal@Len(4), 
 18454 ;; Auto vars:     Size  Location     Type
 18455 ;;  a               2   40[BANK0 ] int 
 18456 ;;  sign            1   39[BANK0 ] unsigned char 
 18457 ;; Return value:  Size  Location     Type
 18458 ;;                  2   35[BANK0 ] int 
 18459 ;; Registers used:
 18460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18461 ;; Tracked objects:
 18462 ;;		On entry : 0/0
 18463 ;;		On exit  : 0/0
 18464 ;;		Unchanged: 0/0
 18465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18466 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18467 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18468 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18469 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18470 ;;Total ram usage:        7 bytes
 18471 ;; Hardware stack levels used:    1
 18472 ;; Hardware stack levels required when called:   12
 18473 ;; This function calls:
 18474 ;;		___wmul
 18475 ;;		_isdigit
 18476 ;; This function is called by:
 18477 ;;		_Terminal
 18478 ;; This function uses a non-reentrant model
 18479 ;;
 18480                           
 18481                           	psect	text76
 18482  0038FE                     __ptext76:
 18483                           	opt stack 0
 18484  0038FE                     _atoi:
 18485                           	opt stack 13
 18486                           
 18487                           ; BSR set to: 0
 18488                           ;incstack = 0
 18489  0038FE  D003               	goto	l3152
 18490  003900  0100               	movlb	0	; () banked
 18491  003902  4B83               	infsnz	atoi@s& (0+255),f,b
 18492  003904  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18493  003906                     l3152:
 18494                           
 18495                           ; BSR set to: 0
 18496  003906  C083  FFD9         	movff	atoi@s,fsr2l
 18497  00390A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18498  00390E  0E20               	movlw	32
 18499  003910  18DE               	xorwf	postinc2,w,c
 18500  003912  B4D8               	btfsc	status,2,c
 18501  003914  D7F5               	goto	l3153
 18502  003916  C083  FFD9         	movff	atoi@s,fsr2l
 18503  00391A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18504  00391E  0E09               	movlw	9
 18505  003920  18DE               	xorwf	postinc2,w,c
 18506  003922  B4D8               	btfsc	status,2,c
 18507  003924  D7ED               	goto	l3153
 18508  003926  0E00               	movlw	0
 18509  003928  0100               	movlb	0	; () banked
 18510  00392A  6F89               	movwf	(atoi@a+1)& (0+255),b
 18511  00392C  0E00               	movlw	0
 18512  00392E  6F88               	movwf	atoi@a& (0+255),b
 18513  003930  0E00               	movlw	0
 18514  003932  6F87               	movwf	atoi@sign& (0+255),b
 18515                           
 18516                           ; BSR set to: 0
 18517  003934  C083  FFD9         	movff	atoi@s,fsr2l
 18518  003938  C084  FFDA         	movff	atoi@s+1,fsr2h
 18519  00393C  0E2D               	movlw	45
 18520  00393E  18DE               	xorwf	postinc2,w,c
 18521  003940  A4D8               	btfss	status,2,c
 18522  003942  D002               	goto	l3155
 18523                           
 18524                           ; BSR set to: 0
 18525  003944  2B87               	incf	atoi@sign& (0+255),f,b
 18526  003946  D026               	goto	l14289
 18527  003948                     l3155:
 18528                           
 18529                           ; BSR set to: 0
 18530                           
 18531                           ; BSR set to: 0
 18532  003948  C083  FFD9         	movff	atoi@s,fsr2l
 18533  00394C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18534  003950  0E2B               	movlw	43
 18535  003952  18DE               	xorwf	postinc2,w,c
 18536  003954  A4D8               	btfss	status,2,c
 18537  003956  D020               	goto	l3158
 18538  003958  D01D               	goto	l14289
 18539  00395A                     
 18540                           ; BSR set to: 0
 18541  00395A  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18542  00395E  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18543  003962  0E00               	movlw	0
 18544  003964  0100               	movlb	0	; () banked
 18545  003966  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18546  003968  0E0A               	movlw	10
 18547  00396A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18548  00396C  EC6C  F034         	call	___wmul	;wreg free
 18549  003970  C083  FFD9         	movff	atoi@s,fsr2l
 18550  003974  C084  FFDA         	movff	atoi@s+1,fsr2h
 18551  003978  50DF               	movf	indf2,w,c
 18552  00397A  0100               	movlb	0	; () banked
 18553  00397C  6F85               	movwf	??_atoi& (0+255),b
 18554  00397E  6B86               	clrf	(??_atoi+1)& (0+255),b
 18555  003980  517D               	movf	?___wmul& (0+255),w,b
 18556  003982  2785               	addwf	??_atoi& (0+255),f,b
 18557  003984  517E               	movf	(?___wmul+1)& (0+255),w,b
 18558  003986  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18559  003988  0ED0               	movlw	208
 18560  00398A  2585               	addwf	??_atoi& (0+255),w,b
 18561  00398C  6F88               	movwf	atoi@a& (0+255),b
 18562  00398E  0EFF               	movlw	255
 18563  003990  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18564  003992  6F89               	movwf	(atoi@a+1)& (0+255),b
 18565  003994                     l14289:
 18566                           
 18567                           ; BSR set to: 0
 18568  003994  4B83               	infsnz	atoi@s& (0+255),f,b
 18569  003996  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18570  003998                     l3158:
 18571                           
 18572                           ; BSR set to: 0
 18573                           
 18574                           ; BSR set to: 0
 18575  003998  C083  FFD9         	movff	atoi@s,fsr2l
 18576  00399C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18577  0039A0  50DF               	movf	indf2,w,c
 18578  0039A2  EC1F  F035         	call	_isdigit
 18579  0039A6  B0D8               	btfsc	status,0,c
 18580  0039A8  D7D8               	goto	l3159
 18581  0039AA  0100               	movlb	0	; () banked
 18582  0039AC  5187               	movf	atoi@sign& (0+255),w,b
 18583  0039AE  B4D8               	btfsc	status,2,c
 18584  0039B0  D00D               	goto	l3161
 18585                           
 18586                           ; BSR set to: 0
 18587  0039B2  C088  F085         	movff	atoi@a,??_atoi
 18588  0039B6  C089  F086         	movff	atoi@a+1,??_atoi+1
 18589  0039BA  1F85               	comf	??_atoi& (0+255),f,b
 18590  0039BC  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18591  0039BE  4B85               	infsnz	??_atoi& (0+255),f,b
 18592  0039C0  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18593  0039C2  C085  F083         	movff	??_atoi,?_atoi
 18594  0039C6  C086  F084         	movff	??_atoi+1,?_atoi+1
 18595  0039CA  0012               	return	
 18596  0039CC                     l3161:
 18597                           
 18598                           ; BSR set to: 0
 18599  0039CC  C088  F083         	movff	atoi@a,?_atoi
 18600  0039D0  C089  F084         	movff	atoi@a+1,?_atoi+1
 18601                           
 18602                           ; BSR set to: 0
 18603  0039D4  0012               	return		;funcret
 18604  0039D6                     __end_of_atoi:
 18605                           	opt stack 0
 18606                           tosu	equ	0xFFF
 18607                           tosh	equ	0xFFE
 18608                           tosl	equ	0xFFD
 18609                           pclath	equ	0xFFA
 18610                           tblptru	equ	0xFF8
 18611                           tblptrh	equ	0xFF7
 18612                           tblptrl	equ	0xFF6
 18613                           tablat	equ	0xFF5
 18614                           prodh	equ	0xFF4
 18615                           prodl	equ	0xFF3
 18616                           intcon	equ	0xFF2
 18617                           intcon2	equ	0xFF1
 18618                           intcon3	equ	0xFF0
 18619                           indf0	equ	0xFEF
 18620                           postinc0	equ	0xFEE
 18621                           plusw0	equ	0xFEB
 18622                           fsr0h	equ	0xFEA
 18623                           fsr0l	equ	0xFE9
 18624                           wreg	equ	0xFE8
 18625                           indf1	equ	0xFE7
 18626                           postinc1	equ	0xFE6
 18627                           postdec1	equ	0xFE5
 18628                           fsr1h	equ	0xFE2
 18629                           fsr1l	equ	0xFE1
 18630                           indf2	equ	0xFDF
 18631                           postinc2	equ	0xFDE
 18632                           postdec2	equ	0xFDD
 18633                           plusw2	equ	0xFDB
 18634                           fsr2h	equ	0xFDA
 18635                           fsr2l	equ	0xFD9
 18636                           status	equ	0xFD8
 18637                           
 18638 ;; *************** function _isdigit *****************
 18639 ;; Defined at:
 18640 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18641 ;; Parameters:    Size  Location     Type
 18642 ;;  c               1    wreg     unsigned char 
 18643 ;; Auto vars:     Size  Location     Type
 18644 ;;  c               1   31[BANK0 ] unsigned char 
 18645 ;; Return value:  Size  Location     Type
 18646 ;;		None               void
 18647 ;; Registers used:
 18648 ;;		wreg, status,2, status,0
 18649 ;; Tracked objects:
 18650 ;;		On entry : 0/0
 18651 ;;		On exit  : 0/0
 18652 ;;		Unchanged: 0/0
 18653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18655 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18657 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18658 ;;Total ram usage:        3 bytes
 18659 ;; Hardware stack levels used:    1
 18660 ;; Hardware stack levels required when called:   11
 18661 ;; This function calls:
 18662 ;;		Nothing
 18663 ;; This function is called by:
 18664 ;;		_atoi
 18665 ;;		_strtol
 18666 ;;		_xtoi
 18667 ;;		_isxdigit
 18668 ;; This function uses a non-reentrant model
 18669 ;;
 18670                           
 18671                           	psect	text77
 18672  006A3E                     __ptext77:
 18673                           	opt stack 0
 18674  006A3E                     _isdigit:
 18675                           	opt stack 12
 18676                           
 18677                           ; BSR set to: 0
 18678                           ;incstack = 0
 18679                           ;isdigit@c stored from wreg
 18680  006A3E  0100               	movlb	0	; () banked
 18681  006A40  6F7F               	movwf	isdigit@c& (0+255),b
 18682  006A42  0E00               	movlw	0
 18683  006A44  0100               	movlb	0	; () banked
 18684  006A46  6F7E               	movwf	_isdigit$6498& (0+255),b
 18685                           
 18686                           ; BSR set to: 0
 18687  006A48  0E3A               	movlw	58
 18688  006A4A  617F               	cpfslt	isdigit@c& (0+255),b
 18689  006A4C  D005               	goto	l3333
 18690                           
 18691                           ; BSR set to: 0
 18692  006A4E  0E2F               	movlw	47
 18693  006A50  657F               	cpfsgt	isdigit@c& (0+255),b
 18694  006A52  D002               	goto	l3333
 18695                           
 18696                           ; BSR set to: 0
 18697  006A54  0E01               	movlw	1
 18698  006A56  6F7E               	movwf	_isdigit$6498& (0+255),b
 18699  006A58                     l3333:
 18700                           
 18701                           ; BSR set to: 0
 18702                           
 18703                           ; BSR set to: 0
 18704  006A58  C07E  F07D         	movff	_isdigit$6498,??_isdigit
 18705  006A5C  317D               	rrcf	??_isdigit& (0+255),w,b
 18706  006A5E  0012               	return	
 18707  006A60                     __end_of_isdigit:
 18708                           	opt stack 0
 18709                           tosu	equ	0xFFF
 18710                           tosh	equ	0xFFE
 18711                           tosl	equ	0xFFD
 18712                           pclath	equ	0xFFA
 18713                           tblptru	equ	0xFF8
 18714                           tblptrh	equ	0xFF7
 18715                           tblptrl	equ	0xFF6
 18716                           tablat	equ	0xFF5
 18717                           prodh	equ	0xFF4
 18718                           prodl	equ	0xFF3
 18719                           intcon	equ	0xFF2
 18720                           intcon2	equ	0xFF1
 18721                           intcon3	equ	0xFF0
 18722                           indf0	equ	0xFEF
 18723                           postinc0	equ	0xFEE
 18724                           plusw0	equ	0xFEB
 18725                           fsr0h	equ	0xFEA
 18726                           fsr0l	equ	0xFE9
 18727                           wreg	equ	0xFE8
 18728                           indf1	equ	0xFE7
 18729                           postinc1	equ	0xFE6
 18730                           postdec1	equ	0xFE5
 18731                           fsr1h	equ	0xFE2
 18732                           fsr1l	equ	0xFE1
 18733                           indf2	equ	0xFDF
 18734                           postinc2	equ	0xFDE
 18735                           postdec2	equ	0xFDD
 18736                           plusw2	equ	0xFDB
 18737                           fsr2h	equ	0xFDA
 18738                           fsr2l	equ	0xFD9
 18739                           status	equ	0xFD8
 18740                           
 18741 ;; *************** function _Rtcm_SetRtccDate *****************
 18742 ;; Defined at:
 18743 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18744 ;; Parameters:    Size  Location     Type
 18745 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18746 ;; Auto vars:     Size  Location     Type
 18747 ;;		None
 18748 ;; Return value:  Size  Location     Type
 18749 ;;                  1    wreg      void 
 18750 ;; Registers used:
 18751 ;;		wreg, status,2, status,0, cstack
 18752 ;; Tracked objects:
 18753 ;;		On entry : 0/0
 18754 ;;		On exit  : 0/0
 18755 ;;		Unchanged: 0/0
 18756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18757 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18760 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18761 ;;Total ram usage:        8 bytes
 18762 ;; Hardware stack levels used:    1
 18763 ;; Hardware stack levels required when called:   13
 18764 ;; This function calls:
 18765 ;;		_Rtcc_LockRtc
 18766 ;;		_Rtcc_SetRtccValue
 18767 ;;		_Rtcc_UnlockRtc
 18768 ;; This function is called by:
 18769 ;;		_Rtcm_MainTask
 18770 ;; This function uses a non-reentrant model
 18771 ;;
 18772                           
 18773                           	psect	text78
 18774  005D0C                     __ptext78:
 18775                           	opt stack 0
 18776  005D0C                     _Rtcm_SetRtccDate:
 18777                           	opt stack 14
 18778                           
 18779                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18780                           
 18781                           ; BSR set to: 0
 18782                           ;incstack = 0
 18783  005D0C  EC63  F036         	call	_Rtcc_UnlockRtc	;wreg free
 18784                           
 18785                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18786  005D10  0100               	movlb	0	; () banked
 18787  005D12  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18788  005D14  0F30               	addlw	48
 18789  005D16  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18790  005D18  0E00               	movlw	0
 18791  005D1A  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18792                           
 18793                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18794  005D1E  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18795  005D22  0E01               	movlw	1
 18796  005D24  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18797                           
 18798                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18799  005D28  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18800  005D2C  0E02               	movlw	2
 18801  005D2E  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18802                           
 18803                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18804  005D32  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18805  005D36  0E03               	movlw	3
 18806  005D38  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18807                           
 18808                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18809  005D3C  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18810  005D40  0E04               	movlw	4
 18811  005D42  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18812                           
 18813                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18814  005D46  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18815  005D4A  0E05               	movlw	5
 18816  005D4C  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18817                           
 18818                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18819  005D50  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18820  005D54  0E06               	movlw	6
 18821  005D56  ECFA  F00A         	call	_Rtcc_SetRtccValue
 18822                           
 18823                           ;rtcm.c: 191: Rtcc_LockRtc();
 18824  005D5A  EC6B  F036         	call	_Rtcc_LockRtc	;wreg free
 18825  005D5E  0012               	return		;funcret
 18826  005D60                     __end_of_Rtcm_SetRtccDate:
 18827                           	opt stack 0
 18828                           tosu	equ	0xFFF
 18829                           tosh	equ	0xFFE
 18830                           tosl	equ	0xFFD
 18831                           pclath	equ	0xFFA
 18832                           tblptru	equ	0xFF8
 18833                           tblptrh	equ	0xFF7
 18834                           tblptrl	equ	0xFF6
 18835                           tablat	equ	0xFF5
 18836                           prodh	equ	0xFF4
 18837                           prodl	equ	0xFF3
 18838                           intcon	equ	0xFF2
 18839                           intcon2	equ	0xFF1
 18840                           intcon3	equ	0xFF0
 18841                           indf0	equ	0xFEF
 18842                           postinc0	equ	0xFEE
 18843                           plusw0	equ	0xFEB
 18844                           fsr0h	equ	0xFEA
 18845                           fsr0l	equ	0xFE9
 18846                           wreg	equ	0xFE8
 18847                           indf1	equ	0xFE7
 18848                           postinc1	equ	0xFE6
 18849                           postdec1	equ	0xFE5
 18850                           fsr1h	equ	0xFE2
 18851                           fsr1l	equ	0xFE1
 18852                           indf2	equ	0xFDF
 18853                           postinc2	equ	0xFDE
 18854                           postdec2	equ	0xFDD
 18855                           plusw2	equ	0xFDB
 18856                           fsr2h	equ	0xFDA
 18857                           fsr2l	equ	0xFD9
 18858                           status	equ	0xFD8
 18859                           
 18860 ;; *************** function _Rtcc_UnlockRtc *****************
 18861 ;; Defined at:
 18862 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18863 ;; Parameters:    Size  Location     Type
 18864 ;;		None
 18865 ;; Auto vars:     Size  Location     Type
 18866 ;;		None
 18867 ;; Return value:  Size  Location     Type
 18868 ;;                  1    wreg      void 
 18869 ;; Registers used:
 18870 ;;		None
 18871 ;; Tracked objects:
 18872 ;;		On entry : 0/0
 18873 ;;		On exit  : 0/0
 18874 ;;		Unchanged: 0/0
 18875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18880 ;;Total ram usage:        0 bytes
 18881 ;; Hardware stack levels used:    1
 18882 ;; Hardware stack levels required when called:   11
 18883 ;; This function calls:
 18884 ;;		Nothing
 18885 ;; This function is called by:
 18886 ;;		_Rtcm_MainTask
 18887 ;;		_Rtcm_SetRtccDate
 18888 ;;		_Rtcm_SetRtccAlarm
 18889 ;; This function uses a non-reentrant model
 18890 ;;
 18891                           
 18892                           	psect	text79
 18893  006CC6                     __ptext79:
 18894                           	opt stack 0
 18895  006CC6                     _Rtcc_UnlockRtc:
 18896                           	opt stack 15
 18897                           
 18898                           ;incstack = 0
 18899  006CC6  010F               	movlb	15	;# 
 18900  006CC8  0E55               	movlw	85	;# 
 18901  006CCA  6EA7               	movwf	4007,c	;# 
 18902  006CCC  0EAA               	movlw	170	;# 
 18903  006CCE  6EA7               	movwf	4007,c	;# 
 18904                           
 18905                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18906  006CD0  010F               	movlb	15	; () banked
 18907  006CD2  8B3F               	bsf	63,5,b	;volatile
 18908                           
 18909                           ; BSR set to: 15
 18910  006CD4  0012               	return		;funcret
 18911  006CD6                     __end_of_Rtcc_UnlockRtc:
 18912                           	opt stack 0
 18913                           tosu	equ	0xFFF
 18914                           tosh	equ	0xFFE
 18915                           tosl	equ	0xFFD
 18916                           pclath	equ	0xFFA
 18917                           tblptru	equ	0xFF8
 18918                           tblptrh	equ	0xFF7
 18919                           tblptrl	equ	0xFF6
 18920                           tablat	equ	0xFF5
 18921                           prodh	equ	0xFF4
 18922                           prodl	equ	0xFF3
 18923                           intcon	equ	0xFF2
 18924                           intcon2	equ	0xFF1
 18925                           intcon3	equ	0xFF0
 18926                           indf0	equ	0xFEF
 18927                           postinc0	equ	0xFEE
 18928                           plusw0	equ	0xFEB
 18929                           fsr0h	equ	0xFEA
 18930                           fsr0l	equ	0xFE9
 18931                           wreg	equ	0xFE8
 18932                           indf1	equ	0xFE7
 18933                           postinc1	equ	0xFE6
 18934                           postdec1	equ	0xFE5
 18935                           fsr1h	equ	0xFE2
 18936                           fsr1l	equ	0xFE1
 18937                           indf2	equ	0xFDF
 18938                           postinc2	equ	0xFDE
 18939                           postdec2	equ	0xFDD
 18940                           plusw2	equ	0xFDB
 18941                           fsr2h	equ	0xFDA
 18942                           fsr2l	equ	0xFD9
 18943                           status	equ	0xFD8
 18944                           
 18945 ;; *************** function _Rtcc_SetRtccValue *****************
 18946 ;; Defined at:
 18947 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18948 ;; Parameters:    Size  Location     Type
 18949 ;;  RtccPtrVal      1    wreg     enum E7757
 18950 ;;  Value           1   37[BANK0 ] unsigned char 
 18951 ;; Auto vars:     Size  Location     Type
 18952 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18953 ;; Return value:  Size  Location     Type
 18954 ;;                  1    wreg      void 
 18955 ;; Registers used:
 18956 ;;		wreg, status,2, status,0, cstack
 18957 ;; Tracked objects:
 18958 ;;		On entry : 0/0
 18959 ;;		On exit  : 0/0
 18960 ;;		Unchanged: 0/0
 18961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18962 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18964 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18965 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18966 ;;Total ram usage:        4 bytes
 18967 ;; Hardware stack levels used:    1
 18968 ;; Hardware stack levels required when called:   12
 18969 ;; This function calls:
 18970 ;;		___awdiv
 18971 ;;		___awmod
 18972 ;; This function is called by:
 18973 ;;		_Rtcm_SetRtccDate
 18974 ;; This function uses a non-reentrant model
 18975 ;;
 18976                           
 18977                           	psect	text80
 18978  0015F4                     __ptext80:
 18979                           	opt stack 0
 18980  0015F4                     _Rtcc_SetRtccValue:
 18981                           	opt stack 14
 18982                           
 18983                           ; BSR set to: 15
 18984                           ;incstack = 0
 18985                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18986  0015F4  0100               	movlb	0	; () banked
 18987  0015F6  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18988                           
 18989                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18990  0015F8  D0FC               	goto	l441
 18991  0015FA                     l442:
 18992                           
 18993                           ; BSR set to: 0
 18994                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18995  0015FA  010F               	movlb	15	; () banked
 18996  0015FC  833F               	bsf	63,1,b	;volatile
 18997                           
 18998                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18999  0015FE  813F               	bsf	63,0,b	;volatile
 19000                           
 19001                           ; BSR set to: 15
 19002                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19003  001600  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19004  001604  0100               	movlb	0	; () banked
 19005  001606  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19006  001608  0E00               	movlw	0
 19007  00160A  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19008  00160C  0E0A               	movlw	10
 19009  00160E  6F7F               	movwf	___awmod@divisor& (0+255),b
 19010  001610  ECE2  F02A         	call	___awmod	;wreg free
 19011  001614  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19012  001618  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19013  00161C  0E0F               	movlw	15
 19014  00161E  0100               	movlb	0	; () banked
 19015  001620  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19016  001622  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19017  001626  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19018  001628  0E00               	movlw	0
 19019  00162A  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19020  00162C  0E0A               	movlw	10
 19021  00162E  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19022  001630  ECA3  F029         	call	___awdiv	;wreg free
 19023  001634  0100               	movlb	0	; () banked
 19024  001636  397D               	swapf	?___awdiv& (0+255),w,b
 19025  001638  0BF0               	andlw	240
 19026  00163A  0BF0               	andlw	240
 19027  00163C  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19028  00163E  6E98               	movwf	3992,c	;volatile
 19029                           
 19030                           ;rtcc_drv.c: 393: break;
 19031  001640  0012               	return	
 19032  001642                     l444:
 19033                           
 19034                           ; BSR set to: 0
 19035                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19036  001642  010F               	movlb	15	; () banked
 19037  001644  833F               	bsf	63,1,b	;volatile
 19038                           
 19039                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19040  001646  913F               	bcf	63,0,b	;volatile
 19041                           
 19042                           ; BSR set to: 15
 19043                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19044  001648  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19045  00164C  0100               	movlb	0	; () banked
 19046  00164E  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19047  001650  0E00               	movlw	0
 19048  001652  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19049  001654  0E0A               	movlw	10
 19050  001656  6F7F               	movwf	___awmod@divisor& (0+255),b
 19051  001658  ECE2  F02A         	call	___awmod	;wreg free
 19052  00165C  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19053  001660  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19054  001664  0E0F               	movlw	15
 19055  001666  0100               	movlb	0	; () banked
 19056  001668  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19057  00166A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19058  00166E  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19059  001670  0E00               	movlw	0
 19060  001672  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19061  001674  0E0A               	movlw	10
 19062  001676  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19063  001678  ECA3  F029         	call	___awdiv	;wreg free
 19064  00167C  0100               	movlb	0	; () banked
 19065  00167E  397D               	swapf	?___awdiv& (0+255),w,b
 19066  001680  0BF0               	andlw	240
 19067  001682  0BF0               	andlw	240
 19068  001684  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19069  001686  6E99               	movwf	3993,c	;volatile
 19070                           
 19071                           ;rtcc_drv.c: 401: break;
 19072  001688  0012               	return	
 19073  00168A                     l445:
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19077  00168A  010F               	movlb	15	; () banked
 19078  00168C  833F               	bsf	63,1,b	;volatile
 19079                           
 19080                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19081  00168E  913F               	bcf	63,0,b	;volatile
 19082                           
 19083                           ; BSR set to: 15
 19084                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19085  001690  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19086  001694  0100               	movlb	0	; () banked
 19087  001696  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19088  001698  0E00               	movlw	0
 19089  00169A  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19090  00169C  0E0A               	movlw	10
 19091  00169E  6F7F               	movwf	___awmod@divisor& (0+255),b
 19092  0016A0  ECE2  F02A         	call	___awmod	;wreg free
 19093  0016A4  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19094  0016A8  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19095  0016AC  0E0F               	movlw	15
 19096  0016AE  0100               	movlb	0	; () banked
 19097  0016B0  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19098  0016B2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19099  0016B6  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19100  0016B8  0E00               	movlw	0
 19101  0016BA  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19102  0016BC  0E0A               	movlw	10
 19103  0016BE  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19104  0016C0  ECA3  F029         	call	___awdiv	;wreg free
 19105  0016C4  0100               	movlb	0	; () banked
 19106  0016C6  397D               	swapf	?___awdiv& (0+255),w,b
 19107  0016C8  0BF0               	andlw	240
 19108  0016CA  0BF0               	andlw	240
 19109  0016CC  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19110  0016CE  6E98               	movwf	3992,c	;volatile
 19111                           
 19112                           ;rtcc_drv.c: 409: break;
 19113  0016D0  0012               	return	
 19114  0016D2                     l446:
 19115                           
 19116                           ; BSR set to: 0
 19117                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19118  0016D2  010F               	movlb	15	; () banked
 19119  0016D4  933F               	bcf	63,1,b	;volatile
 19120                           
 19121                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19122  0016D6  813F               	bsf	63,0,b	;volatile
 19123                           
 19124                           ; BSR set to: 15
 19125                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19126  0016D8  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19127  0016DC  0100               	movlb	0	; () banked
 19128  0016DE  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19129  0016E0  0E00               	movlw	0
 19130  0016E2  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19131  0016E4  0E0A               	movlw	10
 19132  0016E6  6F7F               	movwf	___awmod@divisor& (0+255),b
 19133  0016E8  ECE2  F02A         	call	___awmod	;wreg free
 19134  0016EC  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19135  0016F0  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19136  0016F4  0E0F               	movlw	15
 19137  0016F6  0100               	movlb	0	; () banked
 19138  0016F8  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19139  0016FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19140  0016FE  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19141  001700  0E00               	movlw	0
 19142  001702  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19143  001704  0E0A               	movlw	10
 19144  001706  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19145  001708  ECA3  F029         	call	___awdiv	;wreg free
 19146  00170C  0100               	movlb	0	; () banked
 19147  00170E  397D               	swapf	?___awdiv& (0+255),w,b
 19148  001710  0BF0               	andlw	240
 19149  001712  0BF0               	andlw	240
 19150  001714  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19151  001716  6E99               	movwf	3993,c	;volatile
 19152                           
 19153                           ;rtcc_drv.c: 417: break;
 19154  001718  0012               	return	
 19155  00171A                     l447:
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19159  00171A  010F               	movlb	15	; () banked
 19160  00171C  933F               	bcf	63,1,b	;volatile
 19161                           
 19162                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19163  00171E  813F               	bsf	63,0,b	;volatile
 19164                           
 19165                           ; BSR set to: 15
 19166                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19167  001720  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19168  001724  0100               	movlb	0	; () banked
 19169  001726  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19170  001728  0E00               	movlw	0
 19171  00172A  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19172  00172C  0E0A               	movlw	10
 19173  00172E  6F7F               	movwf	___awmod@divisor& (0+255),b
 19174  001730  ECE2  F02A         	call	___awmod	;wreg free
 19175  001734  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19176  001738  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19177  00173C  0E0F               	movlw	15
 19178  00173E  0100               	movlb	0	; () banked
 19179  001740  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19180  001742  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19181  001746  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19182  001748  0E00               	movlw	0
 19183  00174A  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19184  00174C  0E0A               	movlw	10
 19185  00174E  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19186  001750  ECA3  F029         	call	___awdiv	;wreg free
 19187  001754  0100               	movlb	0	; () banked
 19188  001756  397D               	swapf	?___awdiv& (0+255),w,b
 19189  001758  0BF0               	andlw	240
 19190  00175A  0BF0               	andlw	240
 19191  00175C  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19192  00175E  6E98               	movwf	3992,c	;volatile
 19193                           
 19194                           ;rtcc_drv.c: 425: break;
 19195  001760  0012               	return	
 19196  001762                     l448:
 19197                           
 19198                           ; BSR set to: 0
 19199                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19200  001762  010F               	movlb	15	; () banked
 19201  001764  933F               	bcf	63,1,b	;volatile
 19202                           
 19203                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19204  001766  913F               	bcf	63,0,b	;volatile
 19205                           
 19206                           ; BSR set to: 15
 19207                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19208  001768  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19209  00176C  0100               	movlb	0	; () banked
 19210  00176E  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19211  001770  0E00               	movlw	0
 19212  001772  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19213  001774  0E0A               	movlw	10
 19214  001776  6F7F               	movwf	___awmod@divisor& (0+255),b
 19215  001778  ECE2  F02A         	call	___awmod	;wreg free
 19216  00177C  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19217  001780  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19218  001784  0E0F               	movlw	15
 19219  001786  0100               	movlb	0	; () banked
 19220  001788  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19221  00178A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19222  00178E  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19223  001790  0E00               	movlw	0
 19224  001792  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19225  001794  0E0A               	movlw	10
 19226  001796  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19227  001798  ECA3  F029         	call	___awdiv	;wreg free
 19228  00179C  0100               	movlb	0	; () banked
 19229  00179E  397D               	swapf	?___awdiv& (0+255),w,b
 19230  0017A0  0BF0               	andlw	240
 19231  0017A2  0BF0               	andlw	240
 19232  0017A4  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19233  0017A6  6E99               	movwf	3993,c	;volatile
 19234                           
 19235                           ;rtcc_drv.c: 433: break;
 19236  0017A8  0012               	return	
 19237  0017AA                     l449:
 19238                           
 19239                           ; BSR set to: 0
 19240                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19241  0017AA  010F               	movlb	15	; () banked
 19242  0017AC  933F               	bcf	63,1,b	;volatile
 19243                           
 19244                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19245  0017AE  913F               	bcf	63,0,b	;volatile
 19246                           
 19247                           ; BSR set to: 15
 19248                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19249  0017B0  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19250  0017B4  0100               	movlb	0	; () banked
 19251  0017B6  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19252  0017B8  0E00               	movlw	0
 19253  0017BA  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19254  0017BC  0E0A               	movlw	10
 19255  0017BE  6F7F               	movwf	___awmod@divisor& (0+255),b
 19256  0017C0  ECE2  F02A         	call	___awmod	;wreg free
 19257  0017C4  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19258  0017C8  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19259  0017CC  0E0F               	movlw	15
 19260  0017CE  0100               	movlb	0	; () banked
 19261  0017D0  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19262  0017D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19263  0017D6  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19264  0017D8  0E00               	movlw	0
 19265  0017DA  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19266  0017DC  0E0A               	movlw	10
 19267  0017DE  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19268  0017E0  ECA3  F029         	call	___awdiv	;wreg free
 19269  0017E4  0100               	movlb	0	; () banked
 19270  0017E6  397D               	swapf	?___awdiv& (0+255),w,b
 19271  0017E8  0BF0               	andlw	240
 19272  0017EA  0BF0               	andlw	240
 19273  0017EC  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19274  0017EE  6E98               	movwf	3992,c	;volatile
 19275                           
 19276                           ; BSR set to: 0
 19277                           ;rtcc_drv.c: 445: }
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;rtcc_drv.c: 444: break;
 19281                           
 19282                           ;rtcc_drv.c: 443: default:
 19283                           
 19284                           ;rtcc_drv.c: 441: break;
 19285  0017F0  0012               	return	
 19286  0017F2                     l441:
 19287                           
 19288                           ; BSR set to: 0
 19289  0017F2  0100               	movlb	0	; () banked
 19290  0017F4  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19291                           
 19292                           ; Switch size 1, requested type "space"
 19293                           ; Number of cases is 7, Range of values is 0 to 6
 19294                           ; switch strategies available:
 19295                           ; Name         Instructions Cycles
 19296                           ; simple_byte           22    12 (average)
 19297                           ;	Chosen strategy is simple_byte
 19298  0017F6  0A00               	xorlw	0	; case 0
 19299  0017F8  B4D8               	btfsc	status,2,c
 19300  0017FA  D6FF               	goto	l442
 19301  0017FC  0A01               	xorlw	1	; case 1
 19302  0017FE  B4D8               	btfsc	status,2,c
 19303  001800  D720               	goto	l444
 19304  001802  0A03               	xorlw	3	; case 2
 19305  001804  B4D8               	btfsc	status,2,c
 19306  001806  D741               	goto	l445
 19307  001808  0A01               	xorlw	1	; case 3
 19308  00180A  B4D8               	btfsc	status,2,c
 19309  00180C  D762               	goto	l446
 19310  00180E  0A07               	xorlw	7	; case 4
 19311  001810  B4D8               	btfsc	status,2,c
 19312  001812  D783               	goto	l447
 19313  001814  0A01               	xorlw	1	; case 5
 19314  001816  B4D8               	btfsc	status,2,c
 19315  001818  D7A4               	goto	l448
 19316  00181A  0A03               	xorlw	3	; case 6
 19317  00181C  A4D8               	btfss	status,2,c
 19318  00181E  0012               	return	
 19319  001820  D7C4               	goto	l449
 19320  001822                     __end_of_Rtcc_SetRtccValue:
 19321                           	opt stack 0
 19322                           tosu	equ	0xFFF
 19323                           tosh	equ	0xFFE
 19324                           tosl	equ	0xFFD
 19325                           pclath	equ	0xFFA
 19326                           tblptru	equ	0xFF8
 19327                           tblptrh	equ	0xFF7
 19328                           tblptrl	equ	0xFF6
 19329                           tablat	equ	0xFF5
 19330                           prodh	equ	0xFF4
 19331                           prodl	equ	0xFF3
 19332                           intcon	equ	0xFF2
 19333                           intcon2	equ	0xFF1
 19334                           intcon3	equ	0xFF0
 19335                           indf0	equ	0xFEF
 19336                           postinc0	equ	0xFEE
 19337                           plusw0	equ	0xFEB
 19338                           fsr0h	equ	0xFEA
 19339                           fsr0l	equ	0xFE9
 19340                           wreg	equ	0xFE8
 19341                           indf1	equ	0xFE7
 19342                           postinc1	equ	0xFE6
 19343                           postdec1	equ	0xFE5
 19344                           fsr1h	equ	0xFE2
 19345                           fsr1l	equ	0xFE1
 19346                           indf2	equ	0xFDF
 19347                           postinc2	equ	0xFDE
 19348                           postdec2	equ	0xFDD
 19349                           plusw2	equ	0xFDB
 19350                           fsr2h	equ	0xFDA
 19351                           fsr2l	equ	0xFD9
 19352                           status	equ	0xFD8
 19353                           
 19354 ;; *************** function ___awmod *****************
 19355 ;; Defined at:
 19356 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19357 ;; Parameters:    Size  Location     Type
 19358 ;;  dividend        2   29[BANK0 ] int 
 19359 ;;  divisor         2   31[BANK0 ] int 
 19360 ;; Auto vars:     Size  Location     Type
 19361 ;;  sign            1   34[BANK0 ] unsigned char 
 19362 ;;  counter         1   33[BANK0 ] unsigned char 
 19363 ;; Return value:  Size  Location     Type
 19364 ;;                  2   29[BANK0 ] int 
 19365 ;; Registers used:
 19366 ;;		wreg, status,2, status,0
 19367 ;; Tracked objects:
 19368 ;;		On entry : 0/0
 19369 ;;		On exit  : 0/0
 19370 ;;		Unchanged: 0/0
 19371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19372 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19373 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19375 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19376 ;;Total ram usage:        6 bytes
 19377 ;; Hardware stack levels used:    1
 19378 ;; Hardware stack levels required when called:   11
 19379 ;; This function calls:
 19380 ;;		Nothing
 19381 ;; This function is called by:
 19382 ;;		_Rtcc_SetRtccValue
 19383 ;;		_Rtcc_SetRtccAlarm
 19384 ;; This function uses a non-reentrant model
 19385 ;;
 19386                           
 19387                           	psect	text81
 19388  0055C4                     __ptext81:
 19389                           	opt stack 0
 19390  0055C4                     ___awmod:
 19391                           	opt stack 14
 19392                           
 19393                           ; BSR set to: 0
 19394                           ;incstack = 0
 19395  0055C4  0E00               	movlw	0
 19396  0055C6  0100               	movlb	0	; () banked
 19397  0055C8  6F82               	movwf	___awmod@sign& (0+255),b
 19398                           
 19399                           ; BSR set to: 0
 19400  0055CA  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19401  0055CC  D006               	goto	l3184
 19402                           
 19403                           ; BSR set to: 0
 19404  0055CE  6D7D               	negf	___awmod@dividend& (0+255),b
 19405  0055D0  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19406  0055D2  B0D8               	btfsc	status,0,c
 19407  0055D4  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19408                           
 19409                           ; BSR set to: 0
 19410  0055D6  0E01               	movlw	1
 19411  0055D8  6F82               	movwf	___awmod@sign& (0+255),b
 19412  0055DA                     l3184:
 19413                           
 19414                           ; BSR set to: 0
 19415                           
 19416                           ; BSR set to: 0
 19417  0055DA  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19418  0055DC  D004               	goto	l3185
 19419                           
 19420                           ; BSR set to: 0
 19421  0055DE  6D7F               	negf	___awmod@divisor& (0+255),b
 19422  0055E0  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19423  0055E2  B0D8               	btfsc	status,0,c
 19424  0055E4  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19425  0055E6                     l3185:
 19426                           
 19427                           ; BSR set to: 0
 19428                           
 19429                           ; BSR set to: 0
 19430  0055E6  517F               	movf	___awmod@divisor& (0+255),w,b
 19431  0055E8  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19432  0055EA  B4D8               	btfsc	status,2,c
 19433  0055EC  D018               	goto	l3192
 19434                           
 19435                           ; BSR set to: 0
 19436  0055EE  0E01               	movlw	1
 19437  0055F0  6F81               	movwf	___awmod@counter& (0+255),b
 19438  0055F2  D004               	goto	l3187
 19439  0055F4                     
 19440                           ; BSR set to: 0
 19441                           
 19442                           ; BSR set to: 0
 19443  0055F4  90D8               	bcf	status,0,c
 19444  0055F6  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19445  0055F8  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19446  0055FA  2B81               	incf	___awmod@counter& (0+255),f,b
 19447  0055FC                     l3187:
 19448                           
 19449                           ; BSR set to: 0
 19450                           
 19451                           ; BSR set to: 0
 19452  0055FC  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19453  0055FE  D7FA               	goto	l3188
 19454  005600                     u13630:
 19455                           
 19456                           ; BSR set to: 0
 19457                           
 19458                           ; BSR set to: 0
 19459                           
 19460                           ; BSR set to: 0
 19461  005600  517F               	movf	___awmod@divisor& (0+255),w,b
 19462  005602  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19463  005604  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19464  005606  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19465  005608  A0D8               	btfss	status,0,c
 19466  00560A  D004               	goto	l3191
 19467                           
 19468                           ; BSR set to: 0
 19469  00560C  517F               	movf	___awmod@divisor& (0+255),w,b
 19470  00560E  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19471  005610  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19472  005612  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19473  005614                     l3191:
 19474                           
 19475                           ; BSR set to: 0
 19476                           
 19477                           ; BSR set to: 0
 19478  005614  90D8               	bcf	status,0,c
 19479  005616  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19480  005618  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19481                           
 19482                           ; BSR set to: 0
 19483  00561A  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19484  00561C  D7F1               	goto	u13630
 19485  00561E                     l3192:
 19486                           
 19487                           ; BSR set to: 0
 19488                           
 19489                           ; BSR set to: 0
 19490                           
 19491                           ; BSR set to: 0
 19492  00561E  5182               	movf	___awmod@sign& (0+255),w,b
 19493  005620  B4D8               	btfsc	status,2,c
 19494  005622  D004               	goto	l3193
 19495                           
 19496                           ; BSR set to: 0
 19497  005624  6D7D               	negf	___awmod@dividend& (0+255),b
 19498  005626  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19499  005628  B0D8               	btfsc	status,0,c
 19500  00562A  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19501  00562C                     l3193:
 19502                           
 19503                           ; BSR set to: 0
 19504                           
 19505                           ; BSR set to: 0
 19506  00562C  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19507  005630  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19508  005634  0012               	return	
 19509  005636                     __end_of___awmod:
 19510                           	opt stack 0
 19511                           tosu	equ	0xFFF
 19512                           tosh	equ	0xFFE
 19513                           tosl	equ	0xFFD
 19514                           pclath	equ	0xFFA
 19515                           tblptru	equ	0xFF8
 19516                           tblptrh	equ	0xFF7
 19517                           tblptrl	equ	0xFF6
 19518                           tablat	equ	0xFF5
 19519                           prodh	equ	0xFF4
 19520                           prodl	equ	0xFF3
 19521                           intcon	equ	0xFF2
 19522                           intcon2	equ	0xFF1
 19523                           intcon3	equ	0xFF0
 19524                           indf0	equ	0xFEF
 19525                           postinc0	equ	0xFEE
 19526                           plusw0	equ	0xFEB
 19527                           fsr0h	equ	0xFEA
 19528                           fsr0l	equ	0xFE9
 19529                           wreg	equ	0xFE8
 19530                           indf1	equ	0xFE7
 19531                           postinc1	equ	0xFE6
 19532                           postdec1	equ	0xFE5
 19533                           fsr1h	equ	0xFE2
 19534                           fsr1l	equ	0xFE1
 19535                           indf2	equ	0xFDF
 19536                           postinc2	equ	0xFDE
 19537                           postdec2	equ	0xFDD
 19538                           plusw2	equ	0xFDB
 19539                           fsr2h	equ	0xFDA
 19540                           fsr2l	equ	0xFD9
 19541                           status	equ	0xFD8
 19542                           
 19543 ;; *************** function ___awdiv *****************
 19544 ;; Defined at:
 19545 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19546 ;; Parameters:    Size  Location     Type
 19547 ;;  dividend        2   29[BANK0 ] int 
 19548 ;;  divisor         2   31[BANK0 ] int 
 19549 ;; Auto vars:     Size  Location     Type
 19550 ;;  quotient        2   35[BANK0 ] int 
 19551 ;;  sign            1   34[BANK0 ] unsigned char 
 19552 ;;  counter         1   33[BANK0 ] unsigned char 
 19553 ;; Return value:  Size  Location     Type
 19554 ;;                  2   29[BANK0 ] int 
 19555 ;; Registers used:
 19556 ;;		wreg, status,2, status,0
 19557 ;; Tracked objects:
 19558 ;;		On entry : 0/0
 19559 ;;		On exit  : 0/0
 19560 ;;		Unchanged: 0/0
 19561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19562 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19563 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19565 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19566 ;;Total ram usage:        8 bytes
 19567 ;; Hardware stack levels used:    1
 19568 ;; Hardware stack levels required when called:   11
 19569 ;; This function calls:
 19570 ;;		Nothing
 19571 ;; This function is called by:
 19572 ;;		_Rtcc_SetRtccValue
 19573 ;;		_Rtcc_SetRtccAlarm
 19574 ;; This function uses a non-reentrant model
 19575 ;;
 19576                           
 19577                           	psect	text82
 19578  005346                     __ptext82:
 19579                           	opt stack 0
 19580  005346                     ___awdiv:
 19581                           	opt stack 14
 19582                           
 19583                           ; BSR set to: 0
 19584                           ;incstack = 0
 19585  005346  0E00               	movlw	0
 19586  005348  0100               	movlb	0	; () banked
 19587  00534A  6F82               	movwf	___awdiv@sign& (0+255),b
 19588                           
 19589                           ; BSR set to: 0
 19590  00534C  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19591  00534E  D006               	goto	l3171
 19592                           
 19593                           ; BSR set to: 0
 19594  005350  6D7F               	negf	___awdiv@divisor& (0+255),b
 19595  005352  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19596  005354  B0D8               	btfsc	status,0,c
 19597  005356  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19598                           
 19599                           ; BSR set to: 0
 19600  005358  0E01               	movlw	1
 19601  00535A  6F82               	movwf	___awdiv@sign& (0+255),b
 19602  00535C                     l3171:
 19603                           
 19604                           ; BSR set to: 0
 19605                           
 19606                           ; BSR set to: 0
 19607  00535C  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19608  00535E  D006               	goto	l3172
 19609                           
 19610                           ; BSR set to: 0
 19611  005360  6D7D               	negf	___awdiv@dividend& (0+255),b
 19612  005362  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19613  005364  B0D8               	btfsc	status,0,c
 19614  005366  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19615                           
 19616                           ; BSR set to: 0
 19617  005368  0E01               	movlw	1
 19618  00536A  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19619  00536C                     l3172:
 19620                           
 19621                           ; BSR set to: 0
 19622                           
 19623                           ; BSR set to: 0
 19624  00536C  0E00               	movlw	0
 19625  00536E  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19626  005370  0E00               	movlw	0
 19627  005372  6F83               	movwf	___awdiv@quotient& (0+255),b
 19628                           
 19629                           ; BSR set to: 0
 19630  005374  517F               	movf	___awdiv@divisor& (0+255),w,b
 19631  005376  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19632  005378  B4D8               	btfsc	status,2,c
 19633  00537A  D01C               	goto	l3179
 19634                           
 19635                           ; BSR set to: 0
 19636  00537C  0E01               	movlw	1
 19637  00537E  6F81               	movwf	___awdiv@counter& (0+255),b
 19638  005380  D004               	goto	l3174
 19639  005382                     
 19640                           ; BSR set to: 0
 19641                           
 19642                           ; BSR set to: 0
 19643  005382  90D8               	bcf	status,0,c
 19644  005384  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19645  005386  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19646  005388  2B81               	incf	___awdiv@counter& (0+255),f,b
 19647  00538A                     l3174:
 19648                           
 19649                           ; BSR set to: 0
 19650                           
 19651                           ; BSR set to: 0
 19652  00538A  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19653  00538C  D7FA               	goto	l3175
 19654  00538E                     u13570:
 19655                           
 19656                           ; BSR set to: 0
 19657                           
 19658                           ; BSR set to: 0
 19659                           
 19660                           ; BSR set to: 0
 19661  00538E  90D8               	bcf	status,0,c
 19662  005390  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19663  005392  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19664                           
 19665                           ; BSR set to: 0
 19666  005394  517F               	movf	___awdiv@divisor& (0+255),w,b
 19667  005396  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19668  005398  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19669  00539A  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19670  00539C  A0D8               	btfss	status,0,c
 19671  00539E  D005               	goto	l3178
 19672                           
 19673                           ; BSR set to: 0
 19674  0053A0  517F               	movf	___awdiv@divisor& (0+255),w,b
 19675  0053A2  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19676  0053A4  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19677  0053A6  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19678                           
 19679                           ; BSR set to: 0
 19680  0053A8  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19681  0053AA                     l3178:
 19682                           
 19683                           ; BSR set to: 0
 19684                           
 19685                           ; BSR set to: 0
 19686  0053AA  90D8               	bcf	status,0,c
 19687  0053AC  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19688  0053AE  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19689                           
 19690                           ; BSR set to: 0
 19691  0053B0  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19692  0053B2  D7ED               	goto	u13570
 19693  0053B4                     l3179:
 19694                           
 19695                           ; BSR set to: 0
 19696                           
 19697                           ; BSR set to: 0
 19698                           
 19699                           ; BSR set to: 0
 19700  0053B4  5182               	movf	___awdiv@sign& (0+255),w,b
 19701  0053B6  B4D8               	btfsc	status,2,c
 19702  0053B8  D004               	goto	l3180
 19703                           
 19704                           ; BSR set to: 0
 19705  0053BA  6D83               	negf	___awdiv@quotient& (0+255),b
 19706  0053BC  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19707  0053BE  B0D8               	btfsc	status,0,c
 19708  0053C0  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19709  0053C2                     l3180:
 19710                           
 19711                           ; BSR set to: 0
 19712                           
 19713                           ; BSR set to: 0
 19714  0053C2  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19715  0053C6  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19716  0053CA  0012               	return	
 19717  0053CC                     __end_of___awdiv:
 19718                           	opt stack 0
 19719                           tosu	equ	0xFFF
 19720                           tosh	equ	0xFFE
 19721                           tosl	equ	0xFFD
 19722                           pclath	equ	0xFFA
 19723                           tblptru	equ	0xFF8
 19724                           tblptrh	equ	0xFF7
 19725                           tblptrl	equ	0xFF6
 19726                           tablat	equ	0xFF5
 19727                           prodh	equ	0xFF4
 19728                           prodl	equ	0xFF3
 19729                           intcon	equ	0xFF2
 19730                           intcon2	equ	0xFF1
 19731                           intcon3	equ	0xFF0
 19732                           indf0	equ	0xFEF
 19733                           postinc0	equ	0xFEE
 19734                           plusw0	equ	0xFEB
 19735                           fsr0h	equ	0xFEA
 19736                           fsr0l	equ	0xFE9
 19737                           wreg	equ	0xFE8
 19738                           indf1	equ	0xFE7
 19739                           postinc1	equ	0xFE6
 19740                           postdec1	equ	0xFE5
 19741                           fsr1h	equ	0xFE2
 19742                           fsr1l	equ	0xFE1
 19743                           indf2	equ	0xFDF
 19744                           postinc2	equ	0xFDE
 19745                           postdec2	equ	0xFDD
 19746                           plusw2	equ	0xFDB
 19747                           fsr2h	equ	0xFDA
 19748                           fsr2l	equ	0xFD9
 19749                           status	equ	0xFD8
 19750                           
 19751 ;; *************** function _Rtcc_LockRtc *****************
 19752 ;; Defined at:
 19753 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19754 ;; Parameters:    Size  Location     Type
 19755 ;;		None
 19756 ;; Auto vars:     Size  Location     Type
 19757 ;;		None
 19758 ;; Return value:  Size  Location     Type
 19759 ;;                  1    wreg      void 
 19760 ;; Registers used:
 19761 ;;		None
 19762 ;; Tracked objects:
 19763 ;;		On entry : 0/0
 19764 ;;		On exit  : 0/0
 19765 ;;		Unchanged: 0/0
 19766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19771 ;;Total ram usage:        0 bytes
 19772 ;; Hardware stack levels used:    1
 19773 ;; Hardware stack levels required when called:   11
 19774 ;; This function calls:
 19775 ;;		Nothing
 19776 ;; This function is called by:
 19777 ;;		_Rtcm_MainTask
 19778 ;;		_Rtcm_SetRtccDate
 19779 ;;		_Rtcm_SetRtccAlarm
 19780 ;; This function uses a non-reentrant model
 19781 ;;
 19782                           
 19783                           	psect	text83
 19784  006CD6                     __ptext83:
 19785                           	opt stack 0
 19786  006CD6                     _Rtcc_LockRtc:
 19787                           	opt stack 15
 19788                           
 19789                           ; BSR set to: 0
 19790                           ;incstack = 0
 19791  006CD6  010F               	movlb	15	;# 
 19792  006CD8  0E55               	movlw	85	;# 
 19793  006CDA  6EA7               	movwf	4007,c	;# 
 19794  006CDC  0EAA               	movlw	170	;# 
 19795  006CDE  6EA7               	movwf	4007,c	;# 
 19796                           
 19797                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19798  006CE0  010F               	movlb	15	; () banked
 19799  006CE2  9B3F               	bcf	63,5,b	;volatile
 19800                           
 19801                           ; BSR set to: 15
 19802  006CE4  0012               	return		;funcret
 19803  006CE6                     __end_of_Rtcc_LockRtc:
 19804                           	opt stack 0
 19805                           tosu	equ	0xFFF
 19806                           tosh	equ	0xFFE
 19807                           tosl	equ	0xFFD
 19808                           pclath	equ	0xFFA
 19809                           tblptru	equ	0xFF8
 19810                           tblptrh	equ	0xFF7
 19811                           tblptrl	equ	0xFF6
 19812                           tablat	equ	0xFF5
 19813                           prodh	equ	0xFF4
 19814                           prodl	equ	0xFF3
 19815                           intcon	equ	0xFF2
 19816                           intcon2	equ	0xFF1
 19817                           intcon3	equ	0xFF0
 19818                           indf0	equ	0xFEF
 19819                           postinc0	equ	0xFEE
 19820                           plusw0	equ	0xFEB
 19821                           fsr0h	equ	0xFEA
 19822                           fsr0l	equ	0xFE9
 19823                           wreg	equ	0xFE8
 19824                           indf1	equ	0xFE7
 19825                           postinc1	equ	0xFE6
 19826                           postdec1	equ	0xFE5
 19827                           fsr1h	equ	0xFE2
 19828                           fsr1l	equ	0xFE1
 19829                           indf2	equ	0xFDF
 19830                           postinc2	equ	0xFDE
 19831                           postdec2	equ	0xFDD
 19832                           plusw2	equ	0xFDB
 19833                           fsr2h	equ	0xFDA
 19834                           fsr2l	equ	0xFD9
 19835                           status	equ	0xFD8
 19836                           
 19837 ;; *************** function _Rtcm_GetRtccDate *****************
 19838 ;; Defined at:
 19839 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19840 ;; Parameters:    Size  Location     Type
 19841 ;;		None
 19842 ;; Auto vars:     Size  Location     Type
 19843 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19844 ;; Return value:  Size  Location     Type
 19845 ;;                  8   33[BANK0 ] struct _RtccDateType
 19846 ;; Registers used:
 19847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19848 ;; Tracked objects:
 19849 ;;		On entry : 0/0
 19850 ;;		On exit  : 0/0
 19851 ;;		Unchanged: 0/0
 19852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19853 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19854 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19855 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19856 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19857 ;;Total ram usage:       17 bytes
 19858 ;; Hardware stack levels used:    1
 19859 ;; Hardware stack levels required when called:   12
 19860 ;; This function calls:
 19861 ;;		_Rtcc_GetRtccValue
 19862 ;; This function is called by:
 19863 ;;		_Rtcm_MainTask
 19864 ;; This function uses a non-reentrant model
 19865 ;;
 19866                           
 19867                           	psect	text84
 19868  0058BC                     __ptext84:
 19869                           	opt stack 0
 19870  0058BC                     _Rtcm_GetRtccDate:
 19871                           	opt stack 15
 19872                           
 19873                           ;rtcm.c: 204: RtccDateType LocalDate;
 19874                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19875                           
 19876                           ; BSR set to: 15
 19877                           ;incstack = 0
 19878  0058BC  0E00               	movlw	0
 19879  0058BE  ECF2  F027         	call	_Rtcc_GetRtccValue
 19880  0058C2  0100               	movlb	0	; () banked
 19881  0058C4  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19882  0058C6  0ED0               	movlw	208
 19883  0058C8  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19884  0058CA  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19885  0058CC  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19886  0058CE  0E07               	movlw	7
 19887  0058D0  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19888                           
 19889                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19890  0058D2  0E01               	movlw	1
 19891  0058D4  ECF2  F027         	call	_Rtcc_GetRtccValue
 19892  0058D8  0100               	movlb	0	; () banked
 19893  0058DA  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19894                           
 19895                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19896  0058DC  0E02               	movlw	2
 19897  0058DE  ECF2  F027         	call	_Rtcc_GetRtccValue
 19898  0058E2  0100               	movlb	0	; () banked
 19899  0058E4  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19900                           
 19901                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19902  0058E6  0E03               	movlw	3
 19903  0058E8  ECF2  F027         	call	_Rtcc_GetRtccValue
 19904  0058EC  0100               	movlb	0	; () banked
 19905  0058EE  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19906                           
 19907                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19908  0058F0  0E04               	movlw	4
 19909  0058F2  ECF2  F027         	call	_Rtcc_GetRtccValue
 19910  0058F6  0100               	movlb	0	; () banked
 19911  0058F8  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19912                           
 19913                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19914  0058FA  0E05               	movlw	5
 19915  0058FC  ECF2  F027         	call	_Rtcc_GetRtccValue
 19916  005900  0100               	movlb	0	; () banked
 19917  005902  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19918                           
 19919                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19920  005904  0E06               	movlw	6
 19921  005906  ECF2  F027         	call	_Rtcc_GetRtccValue
 19922  00590A  0100               	movlb	0	; () banked
 19923  00590C  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19924                           
 19925                           ; BSR set to: 0
 19926                           ;rtcm.c: 216: return LocalDate;
 19927  00590E  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19928  005912  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19929  005916  0E07               	movlw	7
 19930  005918                     u16061:
 19931  005918  CFDB FFEB          	movff	plusw2,plusw0
 19932  00591C  06E8               	decf	wreg,f,c
 19933  00591E  E2FC               	bc	u16061
 19934  005920  0012               	return	
 19935  005922                     __end_of_Rtcm_GetRtccDate:
 19936                           	opt stack 0
 19937                           tosu	equ	0xFFF
 19938                           tosh	equ	0xFFE
 19939                           tosl	equ	0xFFD
 19940                           pclath	equ	0xFFA
 19941                           tblptru	equ	0xFF8
 19942                           tblptrh	equ	0xFF7
 19943                           tblptrl	equ	0xFF6
 19944                           tablat	equ	0xFF5
 19945                           prodh	equ	0xFF4
 19946                           prodl	equ	0xFF3
 19947                           intcon	equ	0xFF2
 19948                           intcon2	equ	0xFF1
 19949                           intcon3	equ	0xFF0
 19950                           indf0	equ	0xFEF
 19951                           postinc0	equ	0xFEE
 19952                           plusw0	equ	0xFEB
 19953                           fsr0h	equ	0xFEA
 19954                           fsr0l	equ	0xFE9
 19955                           wreg	equ	0xFE8
 19956                           indf1	equ	0xFE7
 19957                           postinc1	equ	0xFE6
 19958                           postdec1	equ	0xFE5
 19959                           fsr1h	equ	0xFE2
 19960                           fsr1l	equ	0xFE1
 19961                           indf2	equ	0xFDF
 19962                           postinc2	equ	0xFDE
 19963                           postdec2	equ	0xFDD
 19964                           plusw2	equ	0xFDB
 19965                           fsr2h	equ	0xFDA
 19966                           fsr2l	equ	0xFD9
 19967                           status	equ	0xFD8
 19968                           
 19969 ;; *************** function _Rtcc_GetRtccValue *****************
 19970 ;; Defined at:
 19971 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19972 ;; Parameters:    Size  Location     Type
 19973 ;;  RtccPtrVal      1    wreg     enum E7757
 19974 ;; Auto vars:     Size  Location     Type
 19975 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19976 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19977 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19978 ;; Return value:  Size  Location     Type
 19979 ;;                  1    wreg      unsigned char 
 19980 ;; Registers used:
 19981 ;;		wreg, status,2, status,0, prodl, prodh
 19982 ;; Tracked objects:
 19983 ;;		On entry : 0/0
 19984 ;;		On exit  : 0/0
 19985 ;;		Unchanged: 0/0
 19986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19988 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19989 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19990 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19991 ;;Total ram usage:        4 bytes
 19992 ;; Hardware stack levels used:    1
 19993 ;; Hardware stack levels required when called:   11
 19994 ;; This function calls:
 19995 ;;		Nothing
 19996 ;; This function is called by:
 19997 ;;		_Rtcm_GetRtccDate
 19998 ;; This function uses a non-reentrant model
 19999 ;;
 20000                           
 20001                           	psect	text85
 20002  004FE4                     __ptext85:
 20003                           	opt stack 0
 20004  004FE4                     _Rtcc_GetRtccValue:
 20005                           	opt stack 15
 20006                           
 20007                           ; BSR set to: 0
 20008                           ;incstack = 0
 20009                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20010  004FE4  0100               	movlb	0	; () banked
 20011  004FE6  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20012                           
 20013                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20014                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20015                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20016  004FE8  D02D               	goto	l416
 20017  004FEA                     l417:
 20018                           
 20019                           ; BSR set to: 0
 20020                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20021  004FEA  010F               	movlb	15	; () banked
 20022  004FEC  833F               	bsf	63,1,b	;volatile
 20023  004FEE                     
 20024                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20025  004FEE  813F               	bsf	63,0,b	;volatile
 20026  004FF0  D01C               	goto	L18
 20027  004FF2                     l419:
 20028                           
 20029                           ; BSR set to: 0
 20030                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20031  004FF2  010F               	movlb	15	; () banked
 20032  004FF4  833F               	bsf	63,1,b	;volatile
 20033  004FF6  D01E               	goto	L19
 20034  004FF8                     l420:
 20035                           
 20036                           ; BSR set to: 0
 20037                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20038  004FF8  010F               	movlb	15	; () banked
 20039  004FFA  833F               	bsf	63,1,b	;volatile
 20040  004FFC  D021               	goto	L22
 20041  004FFE                     l14725:
 20042                           
 20043                           ; BSR set to: 15
 20044                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20045  004FFE  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20046  005002  0E0F               	movlw	15
 20047  005004  0100               	movlb	0	; () banked
 20048  005006  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20049  005008  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20050  00500A  0B0F               	andlw	15
 20051  00500C  0B0F               	andlw	15
 20052  00500E  0D0A               	mullw	10
 20053  005010  50F3               	movf	prodl,w,c
 20054  005012  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20055  005014  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20056                           
 20057                           ;rtcc_drv.c: 241: break;
 20058  005016  D02D               	goto	l418
 20059  005018                     l421:
 20060                           
 20061                           ; BSR set to: 0
 20062                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20063  005018  010F               	movlb	15	; () banked
 20064  00501A  933F               	bcf	63,1,b	;volatile
 20065                           
 20066                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20067  00501C  813F               	bsf	63,0,b	;volatile
 20068                           
 20069                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20070  00501E  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20071                           
 20072                           ;rtcc_drv.c: 249: break;
 20073  005022  D027               	goto	l418
 20074  005024                     l422:
 20075                           
 20076                           ; BSR set to: 0
 20077                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20078  005024  010F               	movlb	15	; () banked
 20079  005026  933F               	bcf	63,1,b	;volatile
 20080  005028  D7E2               	goto	L20
 20081  00502A                     L18:
 20082                           
 20083                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20084  00502A  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20085  00502E  D7E7               	goto	l14725
 20086  005030                     l423:
 20087                           
 20088                           ; BSR set to: 0
 20089                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20090  005030  010F               	movlb	15	; () banked
 20091  005032  933F               	bcf	63,1,b	;volatile
 20092  005034                     L19:
 20093                           
 20094                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20095  005034  913F               	bcf	63,0,b	;volatile
 20096                           
 20097                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20098  005036  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20099  00503A  D7E1               	goto	l14725
 20100  00503C                     l424:
 20101                           
 20102                           ; BSR set to: 0
 20103                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20104  00503C  010F               	movlb	15	; () banked
 20105  00503E  933F               	bcf	63,1,b	;volatile
 20106  005040                     L22:
 20107                           
 20108                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20109  005040  913F               	bcf	63,0,b	;volatile
 20110  005042  D7F3               	goto	L18
 20111  005044                     l416:
 20112                           
 20113                           ; BSR set to: 0
 20114  005044  0100               	movlb	0	; () banked
 20115  005046  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20116                           
 20117                           ; Switch size 1, requested type "space"
 20118                           ; Number of cases is 7, Range of values is 0 to 6
 20119                           ; switch strategies available:
 20120                           ; Name         Instructions Cycles
 20121                           ; simple_byte           22    12 (average)
 20122                           ;	Chosen strategy is simple_byte
 20123  005048  0A00               	xorlw	0	; case 0
 20124  00504A  B4D8               	btfsc	status,2,c
 20125  00504C  D7CE               	goto	l417
 20126  00504E  0A01               	xorlw	1	; case 1
 20127  005050  B4D8               	btfsc	status,2,c
 20128  005052  D7CF               	goto	l419
 20129  005054  0A03               	xorlw	3	; case 2
 20130  005056  B4D8               	btfsc	status,2,c
 20131  005058  D7CF               	goto	l420
 20132  00505A  0A01               	xorlw	1	; case 3
 20133  00505C  B4D8               	btfsc	status,2,c
 20134  00505E  D7DC               	goto	l421
 20135  005060  0A07               	xorlw	7	; case 4
 20136  005062  B4D8               	btfsc	status,2,c
 20137  005064  D7DF               	goto	l422
 20138  005066  0A01               	xorlw	1	; case 5
 20139  005068  B4D8               	btfsc	status,2,c
 20140  00506A  D7E2               	goto	l423
 20141  00506C  0A03               	xorlw	3	; case 6
 20142  00506E  B4D8               	btfsc	status,2,c
 20143  005070  D7E5               	goto	l424
 20144  005072                     l418:
 20145                           
 20146                           ;rtcc_drv.c: 286: return RetValue;
 20147                           
 20148                           ; BSR set to: 0
 20149  005072  0100               	movlb	0	; () banked
 20150  005074  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20151  005076  0012               	return	
 20152  005078                     __end_of_Rtcc_GetRtccValue:
 20153                           	opt stack 0
 20154                           tosu	equ	0xFFF
 20155                           tosh	equ	0xFFE
 20156                           tosl	equ	0xFFD
 20157                           pclath	equ	0xFFA
 20158                           tblptru	equ	0xFF8
 20159                           tblptrh	equ	0xFF7
 20160                           tblptrl	equ	0xFF6
 20161                           tablat	equ	0xFF5
 20162                           prodh	equ	0xFF4
 20163                           prodl	equ	0xFF3
 20164                           intcon	equ	0xFF2
 20165                           intcon2	equ	0xFF1
 20166                           intcon3	equ	0xFF0
 20167                           indf0	equ	0xFEF
 20168                           postinc0	equ	0xFEE
 20169                           plusw0	equ	0xFEB
 20170                           fsr0h	equ	0xFEA
 20171                           fsr0l	equ	0xFE9
 20172                           wreg	equ	0xFE8
 20173                           indf1	equ	0xFE7
 20174                           postinc1	equ	0xFE6
 20175                           postdec1	equ	0xFE5
 20176                           fsr1h	equ	0xFE2
 20177                           fsr1l	equ	0xFE1
 20178                           indf2	equ	0xFDF
 20179                           postinc2	equ	0xFDE
 20180                           postdec2	equ	0xFDD
 20181                           plusw2	equ	0xFDB
 20182                           fsr2h	equ	0xFDA
 20183                           fsr2l	equ	0xFD9
 20184                           status	equ	0xFD8
 20185                           
 20186 ;; *************** function _Rtcc_SetRtcStatus *****************
 20187 ;; Defined at:
 20188 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20189 ;; Parameters:    Size  Location     Type
 20190 ;;  Status          1    wreg     unsigned char 
 20191 ;; Auto vars:     Size  Location     Type
 20192 ;;  Status          1   29[BANK0 ] unsigned char 
 20193 ;; Return value:  Size  Location     Type
 20194 ;;                  1    wreg      void 
 20195 ;; Registers used:
 20196 ;;		wreg
 20197 ;; Tracked objects:
 20198 ;;		On entry : 0/0
 20199 ;;		On exit  : 0/0
 20200 ;;		Unchanged: 0/0
 20201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20205 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20206 ;;Total ram usage:        1 bytes
 20207 ;; Hardware stack levels used:    1
 20208 ;; Hardware stack levels required when called:   11
 20209 ;; This function calls:
 20210 ;;		Nothing
 20211 ;; This function is called by:
 20212 ;;		_Rtcm_MainTask
 20213 ;; This function uses a non-reentrant model
 20214 ;;
 20215                           
 20216                           	psect	text86
 20217  006C24                     __ptext86:
 20218                           	opt stack 0
 20219  006C24                     _Rtcc_SetRtcStatus:
 20220                           	opt stack 16
 20221                           
 20222                           ; BSR set to: 0
 20223                           ;incstack = 0
 20224                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20225  006C24  0100               	movlb	0	; () banked
 20226  006C26  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20227                           
 20228                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20229  006C28  0100               	movlb	0	; () banked
 20230  006C2A  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20231  006C2C  D003               	bra	u15005
 20232  006C2E  010F               	movlb	15	; () banked
 20233  006C30  9F3F               	bcf	63,7,b	;volatile
 20234  006C32  D002               	bra	u15006
 20235  006C34                     u15005:
 20236  006C34  010F               	movlb	15	; () banked
 20237  006C36  8F3F               	bsf	63,7,b	;volatile
 20238  006C38                     u15006:
 20239                           
 20240                           ; BSR set to: 15
 20241  006C38  0012               	return		;funcret
 20242  006C3A                     __end_of_Rtcc_SetRtcStatus:
 20243                           	opt stack 0
 20244                           tosu	equ	0xFFF
 20245                           tosh	equ	0xFFE
 20246                           tosl	equ	0xFFD
 20247                           pclath	equ	0xFFA
 20248                           tblptru	equ	0xFF8
 20249                           tblptrh	equ	0xFF7
 20250                           tblptrl	equ	0xFF6
 20251                           tablat	equ	0xFF5
 20252                           prodh	equ	0xFF4
 20253                           prodl	equ	0xFF3
 20254                           intcon	equ	0xFF2
 20255                           intcon2	equ	0xFF1
 20256                           intcon3	equ	0xFF0
 20257                           indf0	equ	0xFEF
 20258                           postinc0	equ	0xFEE
 20259                           plusw0	equ	0xFEB
 20260                           fsr0h	equ	0xFEA
 20261                           fsr0l	equ	0xFE9
 20262                           wreg	equ	0xFE8
 20263                           indf1	equ	0xFE7
 20264                           postinc1	equ	0xFE6
 20265                           postdec1	equ	0xFE5
 20266                           fsr1h	equ	0xFE2
 20267                           fsr1l	equ	0xFE1
 20268                           indf2	equ	0xFDF
 20269                           postinc2	equ	0xFDE
 20270                           postdec2	equ	0xFDD
 20271                           plusw2	equ	0xFDB
 20272                           fsr2h	equ	0xFDA
 20273                           fsr2l	equ	0xFD9
 20274                           status	equ	0xFD8
 20275                           
 20276 ;; *************** function _Rtcc_RtcConfig *****************
 20277 ;; Defined at:
 20278 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20279 ;; Parameters:    Size  Location     Type
 20280 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20281 ;;		 -> RtcConfig(4), 
 20282 ;; Auto vars:     Size  Location     Type
 20283 ;;		None
 20284 ;; Return value:  Size  Location     Type
 20285 ;;                  1    wreg      void 
 20286 ;; Registers used:
 20287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20288 ;; Tracked objects:
 20289 ;;		On entry : 0/0
 20290 ;;		On exit  : 0/0
 20291 ;;		Unchanged: 0/0
 20292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20293 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20295 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20296 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20297 ;;Total ram usage:        3 bytes
 20298 ;; Hardware stack levels used:    1
 20299 ;; Hardware stack levels required when called:   12
 20300 ;; This function calls:
 20301 ;;		_RtccIrqInit
 20302 ;; This function is called by:
 20303 ;;		_Rtcm_MainTask
 20304 ;; This function uses a non-reentrant model
 20305 ;;
 20306                           
 20307                           	psect	text87
 20308  004B1C                     __ptext87:
 20309                           	opt stack 0
 20310  004B1C                     _Rtcc_RtcConfig:
 20311                           	opt stack 15
 20312                           
 20313                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20314                           
 20315                           ; BSR set to: 15
 20316                           ;incstack = 0
 20317  004B1C  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20318  004B20  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20319  004B24  50DF               	movf	indf2,w,c
 20320  004B26  0100               	movlb	0	; () banked
 20321  004B28  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20322  004B2A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20323  004B2C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20324  004B2E  010F               	movlb	15	; () banked
 20325  004B30  513F               	movf	63,w,b	;volatile
 20326  004B32  0100               	movlb	0	; () banked
 20327  004B34  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20328  004B36  0BFB               	andlw	-5
 20329  004B38  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20330  004B3A  010F               	movlb	15	; () banked
 20331  004B3C  6F3F               	movwf	63,b	;volatile
 20332                           
 20333                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20334  004B3E  0100               	movlb	0	; () banked
 20335  004B40  EE20 F001          	lfsr	2,1
 20336  004B44  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20337  004B46  26D9               	addwf	fsr2l,f,c
 20338  004B48  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20339  004B4A  22DA               	addwfc	fsr2h,f,c
 20340  004B4C  50DF               	movf	indf2,w,c
 20341  004B4E  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20342  004B50  0E01               	movlw	1
 20343  004B52  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20344  004B54  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20345  004B56  010F               	movlb	15	; () banked
 20346  004B58  513C               	movf	60,w,b	;volatile
 20347  004B5A  0100               	movlb	0	; () banked
 20348  004B5C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20349  004B5E  0BFD               	andlw	-3
 20350  004B60  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20351  004B62  010F               	movlb	15	; () banked
 20352  004B64  6F3C               	movwf	60,b	;volatile
 20353                           
 20354                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20355  004B66  0100               	movlb	0	; () banked
 20356  004B68  EE20 F001          	lfsr	2,1
 20357  004B6C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20358  004B6E  26D9               	addwf	fsr2l,f,c
 20359  004B70  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20360  004B72  22DA               	addwfc	fsr2h,f,c
 20361  004B74  50DF               	movf	indf2,w,c
 20362  004B76  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20363  004B78  90D8               	bcf	status,0,c
 20364  004B7A  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20365  004B7C  0E01               	movlw	1
 20366  004B7E  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20367  004B80  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20368  004B82  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20369  004B84  010F               	movlb	15	; () banked
 20370  004B86  513C               	movf	60,w,b	;volatile
 20371  004B88  0100               	movlb	0	; () banked
 20372  004B8A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20373  004B8C  0BFB               	andlw	-5
 20374  004B8E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20375  004B90  010F               	movlb	15	; () banked
 20376  004B92  6F3C               	movwf	60,b	;volatile
 20377                           
 20378                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20379  004B94  0100               	movlb	0	; () banked
 20380  004B96  EE20 F002          	lfsr	2,2
 20381  004B9A  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20382  004B9C  26D9               	addwf	fsr2l,f,c
 20383  004B9E  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20384  004BA0  22DA               	addwfc	fsr2h,f,c
 20385  004BA2  04DE               	decf	postinc2,w,c
 20386  004BA4  A4D8               	btfss	status,2,c
 20387  004BA6  0012               	return	
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;rtcc_drv.c: 115: {
 20391                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20392  004BA8  EE20 F003          	lfsr	2,3
 20393  004BAC  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20394  004BAE  26D9               	addwf	fsr2l,f,c
 20395  004BB0  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20396  004BB2  22DA               	addwfc	fsr2h,f,c
 20397  004BB4  50DF               	movf	indf2,w,c
 20398  004BB6  EC1D  F036         	call	_RtccIrqInit
 20399  004BBA  0012               	return	
 20400  004BBC                     __end_of_Rtcc_RtcConfig:
 20401                           	opt stack 0
 20402                           tosu	equ	0xFFF
 20403                           tosh	equ	0xFFE
 20404                           tosl	equ	0xFFD
 20405                           pclath	equ	0xFFA
 20406                           tblptru	equ	0xFF8
 20407                           tblptrh	equ	0xFF7
 20408                           tblptrl	equ	0xFF6
 20409                           tablat	equ	0xFF5
 20410                           prodh	equ	0xFF4
 20411                           prodl	equ	0xFF3
 20412                           intcon	equ	0xFF2
 20413                           intcon2	equ	0xFF1
 20414                           intcon3	equ	0xFF0
 20415                           indf0	equ	0xFEF
 20416                           postinc0	equ	0xFEE
 20417                           plusw0	equ	0xFEB
 20418                           fsr0h	equ	0xFEA
 20419                           fsr0l	equ	0xFE9
 20420                           wreg	equ	0xFE8
 20421                           indf1	equ	0xFE7
 20422                           postinc1	equ	0xFE6
 20423                           postdec1	equ	0xFE5
 20424                           fsr1h	equ	0xFE2
 20425                           fsr1l	equ	0xFE1
 20426                           indf2	equ	0xFDF
 20427                           postinc2	equ	0xFDE
 20428                           postdec2	equ	0xFDD
 20429                           plusw2	equ	0xFDB
 20430                           fsr2h	equ	0xFDA
 20431                           fsr2l	equ	0xFD9
 20432                           status	equ	0xFD8
 20433                           
 20434 ;; *************** function _RtccIrqInit *****************
 20435 ;; Defined at:
 20436 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20437 ;; Parameters:    Size  Location     Type
 20438 ;;  Priority        1    wreg     enum E7716
 20439 ;; Auto vars:     Size  Location     Type
 20440 ;;  Priority        1   29[BANK0 ] enum E7716
 20441 ;; Return value:  Size  Location     Type
 20442 ;;                  1    wreg      void 
 20443 ;; Registers used:
 20444 ;;		wreg
 20445 ;; Tracked objects:
 20446 ;;		On entry : 0/0
 20447 ;;		On exit  : 0/0
 20448 ;;		Unchanged: 0/0
 20449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20453 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20454 ;;Total ram usage:        1 bytes
 20455 ;; Hardware stack levels used:    1
 20456 ;; Hardware stack levels required when called:   11
 20457 ;; This function calls:
 20458 ;;		Nothing
 20459 ;; This function is called by:
 20460 ;;		_Rtcc_RtcConfig
 20461 ;; This function uses a non-reentrant model
 20462 ;;
 20463                           
 20464                           	psect	text88
 20465  006C3A                     __ptext88:
 20466                           	opt stack 0
 20467  006C3A                     _RtccIrqInit:
 20468                           	opt stack 15
 20469                           
 20470                           ;incstack = 0
 20471                           ;RtccIrqInit@Priority stored from wreg
 20472  006C3A  0100               	movlb	0	; () banked
 20473  006C3C  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20474                           
 20475                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20476  006C3E  90A4               	bcf	4004,0,c	;volatile
 20477                           
 20478                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20479  006C40  0100               	movlb	0	; () banked
 20480  006C42  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20481  006C44  D002               	bra	u13785
 20482  006C46  90A5               	bcf	4005,0,c	;volatile
 20483  006C48  D001               	bra	u13786
 20484  006C4A                     u13785:
 20485  006C4A  80A5               	bsf	4005,0,c	;volatile
 20486  006C4C                     u13786:
 20487                           
 20488                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20489  006C4C  80A3               	bsf	4003,0,c	;volatile
 20490  006C4E  0012               	return		;funcret
 20491  006C50                     __end_of_RtccIrqInit:
 20492                           	opt stack 0
 20493                           tosu	equ	0xFFF
 20494                           tosh	equ	0xFFE
 20495                           tosl	equ	0xFFD
 20496                           pclath	equ	0xFFA
 20497                           tblptru	equ	0xFF8
 20498                           tblptrh	equ	0xFF7
 20499                           tblptrl	equ	0xFF6
 20500                           tablat	equ	0xFF5
 20501                           prodh	equ	0xFF4
 20502                           prodl	equ	0xFF3
 20503                           intcon	equ	0xFF2
 20504                           intcon2	equ	0xFF1
 20505                           intcon3	equ	0xFF0
 20506                           indf0	equ	0xFEF
 20507                           postinc0	equ	0xFEE
 20508                           plusw0	equ	0xFEB
 20509                           fsr0h	equ	0xFEA
 20510                           fsr0l	equ	0xFE9
 20511                           wreg	equ	0xFE8
 20512                           indf1	equ	0xFE7
 20513                           postinc1	equ	0xFE6
 20514                           postdec1	equ	0xFE5
 20515                           fsr1h	equ	0xFE2
 20516                           fsr1l	equ	0xFE1
 20517                           indf2	equ	0xFDF
 20518                           postinc2	equ	0xFDE
 20519                           postdec2	equ	0xFDD
 20520                           plusw2	equ	0xFDB
 20521                           fsr2h	equ	0xFDA
 20522                           fsr2l	equ	0xFD9
 20523                           status	equ	0xFD8
 20524                           
 20525 ;; *************** function _Rtcc_AlarmConfig *****************
 20526 ;; Defined at:
 20527 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20528 ;; Parameters:    Size  Location     Type
 20529 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20530 ;;		 -> AlCfg(4), 
 20531 ;; Auto vars:     Size  Location     Type
 20532 ;;		None
 20533 ;; Return value:  Size  Location     Type
 20534 ;;                  1    wreg      void 
 20535 ;; Registers used:
 20536 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20537 ;; Tracked objects:
 20538 ;;		On entry : 0/0
 20539 ;;		On exit  : 0/0
 20540 ;;		Unchanged: 0/0
 20541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20545 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20546 ;;Total ram usage:        3 bytes
 20547 ;; Hardware stack levels used:    1
 20548 ;; Hardware stack levels required when called:   11
 20549 ;; This function calls:
 20550 ;;		Nothing
 20551 ;; This function is called by:
 20552 ;;		_Rtcm_MainTask
 20553 ;; This function uses a non-reentrant model
 20554 ;;
 20555                           
 20556                           	psect	text89
 20557  005782                     __ptext89:
 20558                           	opt stack 0
 20559  005782                     _Rtcc_AlarmConfig:
 20560                           	opt stack 16
 20561                           
 20562                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20563                           
 20564                           ;incstack = 0
 20565  005782  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20566  005786  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20567  00578A  50DF               	movf	indf2,w,c
 20568  00578C  0100               	movlb	0	; () banked
 20569  00578E  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20570  005790  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20571  005792  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20572  005794  5091               	movf	3985,w,c	;volatile
 20573  005796  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20574  005798  0B7F               	andlw	-129
 20575  00579A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20576  00579C  6E91               	movwf	3985,c	;volatile
 20577                           
 20578                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20579  00579E  EE20 F001          	lfsr	2,1
 20580  0057A2  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20581  0057A4  26D9               	addwf	fsr2l,f,c
 20582  0057A6  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20583  0057A8  22DA               	addwfc	fsr2h,f,c
 20584  0057AA  50DF               	movf	indf2,w,c
 20585  0057AC  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20586  0057AE  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20587  0057B0  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20588  0057B2  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20589  0057B4  5091               	movf	3985,w,c	;volatile
 20590  0057B6  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20591  0057B8  0BBF               	andlw	-65
 20592  0057BA  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20593  0057BC  6E91               	movwf	3985,c	;volatile
 20594                           
 20595                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20596  0057BE  EE20 F002          	lfsr	2,2
 20597  0057C2  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20598  0057C4  26D9               	addwf	fsr2l,f,c
 20599  0057C6  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20600  0057C8  22DA               	addwfc	fsr2h,f,c
 20601  0057CA  50DF               	movf	indf2,w,c
 20602  0057CC  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20603  0057CE  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20604  0057D0  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20605  0057D2  5091               	movf	3985,w,c	;volatile
 20606  0057D4  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20607  0057D6  0BC3               	andlw	-61
 20608  0057D8  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20609  0057DA  6E91               	movwf	3985,c	;volatile
 20610                           
 20611                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20612  0057DC  EE20 F003          	lfsr	2,3
 20613  0057E0  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20614  0057E2  26D9               	addwf	fsr2l,f,c
 20615  0057E4  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20616  0057E6  22DA               	addwfc	fsr2h,f,c
 20617  0057E8  50DF               	movf	indf2,w,c
 20618  0057EA  6E90               	movwf	3984,c	;volatile
 20619                           
 20620                           ; BSR set to: 0
 20621  0057EC  0012               	return		;funcret
 20622  0057EE                     __end_of_Rtcc_AlarmConfig:
 20623                           	opt stack 0
 20624                           tosu	equ	0xFFF
 20625                           tosh	equ	0xFFE
 20626                           tosl	equ	0xFFD
 20627                           pclath	equ	0xFFA
 20628                           tblptru	equ	0xFF8
 20629                           tblptrh	equ	0xFF7
 20630                           tblptrl	equ	0xFF6
 20631                           tablat	equ	0xFF5
 20632                           prodh	equ	0xFF4
 20633                           prodl	equ	0xFF3
 20634                           intcon	equ	0xFF2
 20635                           intcon2	equ	0xFF1
 20636                           intcon3	equ	0xFF0
 20637                           indf0	equ	0xFEF
 20638                           postinc0	equ	0xFEE
 20639                           plusw0	equ	0xFEB
 20640                           fsr0h	equ	0xFEA
 20641                           fsr0l	equ	0xFE9
 20642                           wreg	equ	0xFE8
 20643                           indf1	equ	0xFE7
 20644                           postinc1	equ	0xFE6
 20645                           postdec1	equ	0xFE5
 20646                           fsr1h	equ	0xFE2
 20647                           fsr1l	equ	0xFE1
 20648                           indf2	equ	0xFDF
 20649                           postinc2	equ	0xFDE
 20650                           postdec2	equ	0xFDD
 20651                           plusw2	equ	0xFDB
 20652                           fsr2h	equ	0xFDA
 20653                           fsr2l	equ	0xFD9
 20654                           status	equ	0xFD8
 20655                           
 20656 ;; *************** function _triggerCmdFsm *****************
 20657 ;; Defined at:
 20658 ;;		line 89 in file "../Source/c/04_App/app_triggerCmd.c"
 20659 ;; Parameters:    Size  Location     Type
 20660 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 20661 ;;		 -> receivedNumber(13), 
 20662 ;; Auto vars:     Size  Location     Type
 20663 ;;  searchNumber    1   10[BANK1 ] unsigned char 
 20664 ;;  masterOpResu    1    9[BANK1 ] unsigned char 
 20665 ;;  numberInMemo    1    8[BANK1 ] unsigned char 
 20666 ;;  isComplete      1    7[BANK1 ] unsigned char 
 20667 ;; Return value:  Size  Location     Type
 20668 ;;                  1    wreg      unsigned char 
 20669 ;; Registers used:
 20670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20671 ;; Tracked objects:
 20672 ;;		On entry : 0/0
 20673 ;;		On exit  : 0/0
 20674 ;;		Unchanged: 0/0
 20675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20676 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20677 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20679 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20680 ;;Total ram usage:        6 bytes
 20681 ;; Hardware stack levels used:    1
 20682 ;; Hardware stack levels required when called:   18
 20683 ;; This function calls:
 20684 ;;		_isMasterNumber
 20685 ;;		_isNumberInMemory
 20686 ;;		_secondsAppTimer
 20687 ;;		_triggerRelay
 20688 ;; This function is called by:
 20689 ;;		_MyApp_Task
 20690 ;; This function uses a non-reentrant model
 20691 ;;
 20692                           
 20693                           	psect	text90
 20694  0039D6                     __ptext90:
 20695                           	opt stack 0
 20696  0039D6                     _triggerCmdFsm:
 20697                           	opt stack 9
 20698                           
 20699                           ;app_triggerCmd.c: 91: static triggerFsmStates currentState = TRIGGER_FSM_CHECK_MASTER;
 20700                           ;app_triggerCmd.c: 92: bool isComplete = 0;
 20701                           
 20702                           ; BSR set to: 0
 20703                           ;incstack = 0
 20704  0039D6  0E00               	movlw	0
 20705  0039D8  0101               	movlb	1	; () banked
 20706  0039DA  6F07               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20707                           
 20708                           ;app_triggerCmd.c: 93: uint8_t numberInMemory = 0;
 20709  0039DC  0E00               	movlw	0
 20710  0039DE  6F08               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20711                           
 20712                           ;app_triggerCmd.c: 94: uint8_t masterOpResult = OP_FAILED;
 20713  0039E0  0E01               	movlw	1
 20714  0039E2  6F09               	movwf	triggerCmdFsm@masterOpResult& (0+255),b
 20715                           
 20716                           ;app_triggerCmd.c: 95: uint8_t searchNumber = OP_FAILED;
 20717  0039E4  0E01               	movlw	1
 20718  0039E6  6F0A               	movwf	triggerCmdFsm@searchNumber& (0+255),b
 20719                           
 20720                           ;app_triggerCmd.c: 97: switch (currentState)
 20721  0039E8  D04F               	goto	l2925
 20722  0039EA                     
 20723                           ; BSR set to: 1
 20724                           ;app_triggerCmd.c: 100: masterOpResult = isMasterNumber(receivedNumber);
 20725                           
 20726                           ; BSR set to: 1
 20727  0039EA  C105  F100         	movff	triggerCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 20728  0039EE  C106  F101         	movff	triggerCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 20729  0039F2  EC54  F02B         	call	_isMasterNumber	;wreg free
 20730  0039F6  0101               	movlb	1	; () banked
 20731  0039F8  6F09               	movwf	triggerCmdFsm@masterOpResult& (0+255),b
 20732                           
 20733                           ; BSR set to: 1
 20734                           ;app_triggerCmd.c: 101: if (masterOpResult == OP_SUCCESS)
 20735  0039FA  5109               	movf	triggerCmdFsm@masterOpResult& (0+255),w,b
 20736  0039FC  A4D8               	btfss	status,2,c
 20737  0039FE  D002               	goto	l2927
 20738  003A00                     u16390:
 20739                           
 20740                           ; BSR set to: 1
 20741                           ;app_triggerCmd.c: 102: {
 20742                           ;app_triggerCmd.c: 103: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20743  003A00  0E02               	movlw	2
 20744  003A02  D029               	goto	L26
 20745  003A04                     l2927:
 20746                           
 20747                           ; BSR set to: 1
 20748                           ;app_triggerCmd.c: 105: else if (masterOpResult == OP_FAILED)
 20749                           
 20750                           ; BSR set to: 1
 20751  003A04  0509               	decf	triggerCmdFsm@masterOpResult& (0+255),w,b
 20752  003A06  A4D8               	btfss	status,2,c
 20753  003A08  D04F               	goto	l2930
 20754                           
 20755                           ; BSR set to: 1
 20756                           ;app_triggerCmd.c: 106: {
 20757                           ;app_triggerCmd.c: 107: currentState = TRIGGER_FSM_CHECK_NUMBER;
 20758  003A0A  0E01               	movlw	1
 20759  003A0C  D024               	goto	L26
 20760  003A0E                     
 20761                           ; BSR set to: 1
 20762                           ;app_triggerCmd.c: 112: searchNumber = isNumberInMemory(receivedNumber, &numberInMemory)
      +                          ;
 20763                           
 20764                           ; BSR set to: 1
 20765  003A0E  C105  F100         	movff	triggerCmdFsm@receivedNumber,isNumberInMemory@phoneNumber
 20766  003A12  C106  F101         	movff	triggerCmdFsm@receivedNumber+1,isNumberInMemory@phoneNumber+1
 20767  003A16  0E08               	movlw	low triggerCmdFsm@numberInMemory
 20768  003A18  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 20769  003A1A  0E01               	movlw	high triggerCmdFsm@numberInMemory
 20770  003A1C  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 20771  003A1E  ECDC  F022         	call	_isNumberInMemory	;wreg free
 20772  003A22  0101               	movlb	1	; () banked
 20773  003A24  6F0A               	movwf	triggerCmdFsm@searchNumber& (0+255),b
 20774                           
 20775                           ; BSR set to: 1
 20776                           ;app_triggerCmd.c: 113: if (searchNumber == SEARCH_FSM_FOUND)
 20777  003A26  0E03               	movlw	3
 20778  003A28  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20779  003A2A  B4D8               	btfsc	status,2,c
 20780  003A2C  D7E9               	goto	u16390
 20781                           
 20782                           ; BSR set to: 1
 20783                           ;app_triggerCmd.c: 117: else if (searchNumber == SEARCH_FSM_NOT_FOUND || searchNumber ==
      +                           SEARCH_FSM_ERROR)
 20784                           
 20785                           ; BSR set to: 1
 20786                           
 20787                           ;app_triggerCmd.c: 116: }
 20788                           
 20789                           ; BSR set to: 1
 20790                           ;app_triggerCmd.c: 114: {
 20791                           ;app_triggerCmd.c: 115: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20792  003A2E  0E04               	movlw	4
 20793  003A30  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20794  003A32  B4D8               	btfsc	status,2,c
 20795  003A34  D004               	goto	u16430
 20796                           
 20797                           ; BSR set to: 1
 20798  003A36  0E02               	movlw	2
 20799  003A38  190A               	xorwf	triggerCmdFsm@searchNumber& (0+255),w,b
 20800  003A3A  A4D8               	btfss	status,2,c
 20801  003A3C  D035               	goto	l2930
 20802  003A3E                     u16430:
 20803                           
 20804                           ; BSR set to: 1
 20805                           ;app_triggerCmd.c: 118: {
 20806                           ;app_triggerCmd.c: 119: currentState = TRIGGER_FSM_COMPLETE;
 20807                           
 20808                           ; BSR set to: 1
 20809  003A3E  0E04               	movlw	4
 20810  003A40  D00A               	goto	L26
 20811  003A42                     
 20812                           ; BSR set to: 1
 20813                           ;app_triggerCmd.c: 124: triggerRelay(1);
 20814                           
 20815                           ; BSR set to: 1
 20816  003A42  0E01               	movlw	1
 20817  003A44  EC01  F033         	call	_triggerRelay
 20818                           
 20819                           ;app_triggerCmd.c: 125: secondCounter = 0;
 20820  003A48  0E00               	movlw	0
 20821  003A4A  0103               	movlb	3	; () banked
 20822  003A4C  6F19               	movwf	(_secondCounter+1)& (0+255),b
 20823  003A4E  0E00               	movlw	0
 20824  003A50  6F18               	movwf	_secondCounter& (0+255),b
 20825                           
 20826                           ; BSR set to: 3
 20827                           ;app_triggerCmd.c: 126: currentState = TRIGGER_FSM_DEACTIVATE_RELAY;
 20828  003A52  0E03               	movlw	3
 20829  003A54  D013               	goto	L27
 20830  003A56                     L26:
 20831  003A56  6FD4               	movwf	triggerCmdFsm@currentState& (0+255),b
 20832                           
 20833                           ;app_triggerCmd.c: 127: break;
 20834  003A58  D027               	goto	l2930
 20835  003A5A                     
 20836                           ; BSR set to: 1
 20837                           ;app_triggerCmd.c: 130: if (secondsAppTimer(1, secondCounter, 0))
 20838                           
 20839                           ; BSR set to: 1
 20840  003A5A  C318  F08A         	movff	_secondCounter,secondsAppTimer@counter
 20841  003A5E  C319  F08B         	movff	_secondCounter+1,secondsAppTimer@counter+1
 20842  003A62  0E00               	movlw	0
 20843  003A64  0100               	movlb	0	; () banked
 20844  003A66  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20845  003A68  0E01               	movlw	1
 20846  003A6A  EC3D  F025         	call	_secondsAppTimer
 20847  003A6E  0900               	iorlw	0
 20848  003A70  B4D8               	btfsc	status,2,c
 20849  003A72  D01A               	goto	l2930
 20850                           
 20851                           ;app_triggerCmd.c: 131: {
 20852                           ;app_triggerCmd.c: 132: triggerRelay(0);
 20853  003A74  0E00               	movlw	0
 20854  003A76  EC01  F033         	call	_triggerRelay
 20855                           
 20856                           ;app_triggerCmd.c: 133: currentState = TRIGGER_FSM_COMPLETE;
 20857  003A7A  0E04               	movlw	4
 20858  003A7C                     L27:
 20859  003A7C  0101               	movlb	1	; () banked
 20860  003A7E  D7EB               	goto	L26
 20861  003A80                     
 20862                           ; BSR set to: 1
 20863                           ;app_triggerCmd.c: 138: isComplete = 1;
 20864                           
 20865                           ; BSR set to: 1
 20866  003A80  0E01               	movlw	1
 20867  003A82  6F07               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20868                           
 20869                           ;app_triggerCmd.c: 139: currentState = TRIGGER_FSM_CHECK_MASTER;
 20870  003A84  0E00               	movlw	0
 20871  003A86  D7E7               	goto	L26
 20872  003A88                     l2925:
 20873                           
 20874                           ; BSR set to: 1
 20875                           
 20876                           ; BSR set to: 1
 20877  003A88  51D4               	movf	triggerCmdFsm@currentState& (0+255),w,b
 20878                           
 20879                           ; Switch size 1, requested type "space"
 20880                           ; Number of cases is 5, Range of values is 0 to 4
 20881                           ; switch strategies available:
 20882                           ; Name         Instructions Cycles
 20883                           ; simple_byte           16     9 (average)
 20884                           ;	Chosen strategy is simple_byte
 20885  003A8A  0A00               	xorlw	0	; case 0
 20886  003A8C  B4D8               	btfsc	status,2,c
 20887  003A8E  D7AD               	goto	l2926
 20888  003A90  0A01               	xorlw	1	; case 1
 20889  003A92  B4D8               	btfsc	status,2,c
 20890  003A94  D7BC               	goto	l2931
 20891  003A96  0A03               	xorlw	3	; case 2
 20892  003A98  B4D8               	btfsc	status,2,c
 20893  003A9A  D7D3               	goto	l2937
 20894  003A9C  0A01               	xorlw	1	; case 3
 20895  003A9E  B4D8               	btfsc	status,2,c
 20896  003AA0  D7DC               	goto	l2938
 20897  003AA2  0A07               	xorlw	7	; case 4
 20898  003AA4  B4D8               	btfsc	status,2,c
 20899  003AA6  D7EC               	goto	l2940
 20900  003AA8                     l2930:
 20901                           
 20902                           ;app_triggerCmd.c: 145: return isComplete;
 20903                           
 20904                           ; BSR set to: 1
 20905  003AA8  0101               	movlb	1	; () banked
 20906  003AAA  5107               	movf	triggerCmdFsm@isComplete& (0+255),w,b
 20907  003AAC  0012               	return	
 20908  003AAE                     __end_of_triggerCmdFsm:
 20909                           	opt stack 0
 20910                           tosu	equ	0xFFF
 20911                           tosh	equ	0xFFE
 20912                           tosl	equ	0xFFD
 20913                           pclath	equ	0xFFA
 20914                           tblptru	equ	0xFF8
 20915                           tblptrh	equ	0xFF7
 20916                           tblptrl	equ	0xFF6
 20917                           tablat	equ	0xFF5
 20918                           prodh	equ	0xFF4
 20919                           prodl	equ	0xFF3
 20920                           intcon	equ	0xFF2
 20921                           intcon2	equ	0xFF1
 20922                           intcon3	equ	0xFF0
 20923                           indf0	equ	0xFEF
 20924                           postinc0	equ	0xFEE
 20925                           plusw0	equ	0xFEB
 20926                           fsr0h	equ	0xFEA
 20927                           fsr0l	equ	0xFE9
 20928                           wreg	equ	0xFE8
 20929                           indf1	equ	0xFE7
 20930                           postinc1	equ	0xFE6
 20931                           postdec1	equ	0xFE5
 20932                           fsr1h	equ	0xFE2
 20933                           fsr1l	equ	0xFE1
 20934                           indf2	equ	0xFDF
 20935                           postinc2	equ	0xFDE
 20936                           postdec2	equ	0xFDD
 20937                           plusw2	equ	0xFDB
 20938                           fsr2h	equ	0xFDA
 20939                           fsr2l	equ	0xFD9
 20940                           status	equ	0xFD8
 20941                           
 20942 ;; *************** function _triggerRelay *****************
 20943 ;; Defined at:
 20944 ;;		line 67 in file "../Source/c/04_App/app_triggerCmd.c"
 20945 ;; Parameters:    Size  Location     Type
 20946 ;;  isRelayOn       1    wreg     unsigned char 
 20947 ;; Auto vars:     Size  Location     Type
 20948 ;;  isRelayOn       1   38[BANK0 ] unsigned char 
 20949 ;;  res             1   37[BANK0 ] unsigned char 
 20950 ;; Return value:  Size  Location     Type
 20951 ;;                  1    wreg      unsigned char 
 20952 ;; Registers used:
 20953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20954 ;; Tracked objects:
 20955 ;;		On entry : 0/0
 20956 ;;		On exit  : 0/0
 20957 ;;		Unchanged: 0/0
 20958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20960 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20962 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20963 ;;Total ram usage:        2 bytes
 20964 ;; Hardware stack levels used:    1
 20965 ;; Hardware stack levels required when called:   13
 20966 ;; This function calls:
 20967 ;;		_I2cSlv_SendI2cMsg
 20968 ;; This function is called by:
 20969 ;;		_triggerCmdFsm
 20970 ;; This function uses a non-reentrant model
 20971 ;;
 20972                           
 20973                           	psect	text91
 20974  006602                     __ptext91:
 20975                           	opt stack 0
 20976  006602                     _triggerRelay:
 20977                           	opt stack 13
 20978                           
 20979                           ; BSR set to: 1
 20980                           ;incstack = 0
 20981                           ;triggerRelay@isRelayOn stored from wreg
 20982  006602  0100               	movlb	0	; () banked
 20983  006604  6F86               	movwf	triggerRelay@isRelayOn& (0+255),b
 20984                           
 20985                           ;app_triggerCmd.c: 69: uint8_t res = 0u;
 20986  006606  0E00               	movlw	0
 20987  006608  0100               	movlb	0	; () banked
 20988  00660A  6F85               	movwf	triggerRelay@res& (0+255),b
 20989                           
 20990                           ; BSR set to: 0
 20991                           ;app_triggerCmd.c: 70: if (isRelayOn)
 20992  00660C  5186               	movf	triggerRelay@isRelayOn& (0+255),w,b
 20993  00660E  B4D8               	btfsc	status,2,c
 20994  006610  D002               	goto	l2918
 20995                           
 20996                           ; BSR set to: 0
 20997                           ;app_triggerCmd.c: 71: {
 20998                           ;app_triggerCmd.c: 72: relayBuffer[1] = 0x01;
 20999  006612  0E01               	movlw	1
 21000  006614  D001               	goto	L28
 21001  006616                     l2918:
 21002                           
 21003                           ;app_triggerCmd.c: 74: else
 21004                           ;app_triggerCmd.c: 75: {
 21005                           ;app_triggerCmd.c: 76: relayBuffer[1] = 0x00;
 21006                           
 21007                           ; BSR set to: 2
 21008  006616  0E00               	movlw	0
 21009  006618                     L28:
 21010  006618  0102               	movlb	2	; () banked
 21011  00661A  6FFF               	movwf	(_relayBuffer+1)& (0+255),b
 21012                           
 21013                           ; BSR set to: 2
 21014                           ;app_triggerCmd.c: 77: }
 21015                           ;app_triggerCmd.c: 78: res = I2cSlv_SendI2cMsg(relayBuffer, 1, 2);
 21016                           
 21017                           ; BSR set to: 2
 21018  00661C  0EFE               	movlw	low _relayBuffer
 21019  00661E  0100               	movlb	0	; () banked
 21020  006620  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 21021  006622  0E02               	movlw	high _relayBuffer
 21022  006624  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 21023  006626  0E01               	movlw	1
 21024  006628  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
 21025  00662A  0E02               	movlw	2
 21026  00662C  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 21027  00662E  EC4D  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 21028  006632  0100               	movlb	0	; () banked
 21029  006634  6F85               	movwf	triggerRelay@res& (0+255),b
 21030  006636  0012               	return	
 21031  006638                     __end_of_triggerRelay:
 21032                           	opt stack 0
 21033                           tosu	equ	0xFFF
 21034                           tosh	equ	0xFFE
 21035                           tosl	equ	0xFFD
 21036                           pclath	equ	0xFFA
 21037                           tblptru	equ	0xFF8
 21038                           tblptrh	equ	0xFF7
 21039                           tblptrl	equ	0xFF6
 21040                           tablat	equ	0xFF5
 21041                           prodh	equ	0xFF4
 21042                           prodl	equ	0xFF3
 21043                           intcon	equ	0xFF2
 21044                           intcon2	equ	0xFF1
 21045                           intcon3	equ	0xFF0
 21046                           indf0	equ	0xFEF
 21047                           postinc0	equ	0xFEE
 21048                           plusw0	equ	0xFEB
 21049                           fsr0h	equ	0xFEA
 21050                           fsr0l	equ	0xFE9
 21051                           wreg	equ	0xFE8
 21052                           indf1	equ	0xFE7
 21053                           postinc1	equ	0xFE6
 21054                           postdec1	equ	0xFE5
 21055                           fsr1h	equ	0xFE2
 21056                           fsr1l	equ	0xFE1
 21057                           indf2	equ	0xFDF
 21058                           postinc2	equ	0xFDE
 21059                           postdec2	equ	0xFDD
 21060                           plusw2	equ	0xFDB
 21061                           fsr2h	equ	0xFDA
 21062                           fsr2l	equ	0xFD9
 21063                           status	equ	0xFD8
 21064                           
 21065 ;; *************** function _resCmdFsm *****************
 21066 ;; Defined at:
 21067 ;;		line 71 in file "../Source/c/04_App/app_resCmd.c"
 21068 ;; Parameters:    Size  Location     Type
 21069 ;;  receivedNumb    2    3[BANK1 ] PTR unsigned char 
 21070 ;;		 -> receivedNumber(13), 
 21071 ;;  isCmdSuccess    2    5[BANK1 ] PTR unsigned char 
 21072 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 21073 ;; Auto vars:     Size  Location     Type
 21074 ;;  masterOpResu    1    8[BANK1 ] unsigned char 
 21075 ;;  isComplete      1    7[BANK1 ] unsigned char 
 21076 ;; Return value:  Size  Location     Type
 21077 ;;                  1    wreg      unsigned char 
 21078 ;; Registers used:
 21079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21080 ;; Tracked objects:
 21081 ;;		On entry : 0/0
 21082 ;;		On exit  : 0/0
 21083 ;;		Unchanged: 0/0
 21084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21085 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21086 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21088 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21089 ;;Total ram usage:        6 bytes
 21090 ;; Hardware stack levels used:    1
 21091 ;; Hardware stack levels required when called:   18
 21092 ;; This function calls:
 21093 ;;		_Eeprom_Reset
 21094 ;;		_isMasterNumber
 21095 ;; This function is called by:
 21096 ;;		_MyApp_Task
 21097 ;; This function uses a non-reentrant model
 21098 ;;
 21099                           
 21100                           	psect	text92
 21101  0054D2                     __ptext92:
 21102                           	opt stack 0
 21103  0054D2                     _resCmdFsm:
 21104                           	opt stack 9
 21105                           
 21106                           ;app_resCmd.c: 73: static resFsmStates currentState = RES_FSM_CHECK_MASTER;
 21107                           ;app_resCmd.c: 74: bool isComplete = 0;
 21108                           
 21109                           ; BSR set to: 0
 21110                           ;incstack = 0
 21111  0054D2  0E00               	movlw	0
 21112  0054D4  0101               	movlb	1	; () banked
 21113  0054D6  6F07               	movwf	resCmdFsm@isComplete& (0+255),b
 21114                           
 21115                           ;app_resCmd.c: 75: uint8_t masterOpResult = OP_FAILED;
 21116  0054D8  0E01               	movlw	1
 21117  0054DA  6F08               	movwf	resCmdFsm@masterOpResult& (0+255),b
 21118                           
 21119                           ;app_resCmd.c: 77: switch (currentState)
 21120  0054DC  D02C               	goto	l2957
 21121  0054DE                     
 21122                           ; BSR set to: 1
 21123                           ;app_resCmd.c: 80: *isCmdSuccessfull = 0;
 21124                           
 21125                           ; BSR set to: 1
 21126  0054DE  C105  FFD9         	movff	resCmdFsm@isCmdSuccessfull,fsr2l
 21127  0054E2  C106  FFDA         	movff	resCmdFsm@isCmdSuccessfull+1,fsr2h
 21128  0054E6  0E00               	movlw	0
 21129  0054E8  6EDF               	movwf	indf2,c
 21130                           
 21131                           ; BSR set to: 1
 21132                           ;app_resCmd.c: 81: masterOpResult = isMasterNumber(receivedNumber);
 21133  0054EA  C103  F100         	movff	resCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 21134  0054EE  C104  F101         	movff	resCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 21135  0054F2  EC54  F02B         	call	_isMasterNumber	;wreg free
 21136  0054F6  0101               	movlb	1	; () banked
 21137  0054F8  6F08               	movwf	resCmdFsm@masterOpResult& (0+255),b
 21138                           
 21139                           ; BSR set to: 1
 21140                           ;app_resCmd.c: 82: if (masterOpResult == OP_SUCCESS)
 21141  0054FA  5108               	movf	resCmdFsm@masterOpResult& (0+255),w,b
 21142  0054FC  A4D8               	btfss	status,2,c
 21143  0054FE  D002               	goto	l2959
 21144                           
 21145                           ; BSR set to: 1
 21146                           ;app_resCmd.c: 83: {
 21147                           ;app_resCmd.c: 84: currentState = RES_FSM_RESET;
 21148  005500  0E01               	movlw	1
 21149  005502  D017               	goto	L30
 21150  005504                     l2959:
 21151                           
 21152                           ; BSR set to: 1
 21153                           ;app_resCmd.c: 86: else if (masterOpResult == OP_FAILED)
 21154                           
 21155                           ; BSR set to: 1
 21156  005504  0508               	decf	resCmdFsm@masterOpResult& (0+255),w,b
 21157  005506  A4D8               	btfss	status,2,c
 21158  005508  D020               	goto	l2962
 21159                           
 21160                           ; BSR set to: 1
 21161                           ;app_resCmd.c: 87: {
 21162                           ;app_resCmd.c: 88: currentState = RES_FSM_COMPLETE;
 21163  00550A  0E02               	movlw	2
 21164  00550C  D012               	goto	L30
 21165  00550E                     
 21166                           ; BSR set to: 1
 21167                           ;app_resCmd.c: 93: if (Eeprom_Reset() == 0)
 21168                           
 21169                           ; BSR set to: 1
 21170  00550E  EC31  F02E         	call	_Eeprom_Reset	;wreg free
 21171  005512  0900               	iorlw	0
 21172  005514  A4D8               	btfss	status,2,c
 21173  005516  D019               	goto	l2962
 21174                           
 21175                           ;app_resCmd.c: 94: {
 21176                           ;app_resCmd.c: 95: currentState = RES_FSM_COMPLETE;
 21177  005518  0E02               	movlw	2
 21178  00551A  0101               	movlb	1	; () banked
 21179  00551C  6FD3               	movwf	resCmdFsm@currentState& (0+255),b
 21180                           
 21181                           ; BSR set to: 1
 21182                           ;app_resCmd.c: 96: *isCmdSuccessfull = 1;
 21183  00551E  C105  FFD9         	movff	resCmdFsm@isCmdSuccessfull,fsr2l
 21184  005522  C106  FFDA         	movff	resCmdFsm@isCmdSuccessfull+1,fsr2h
 21185  005526  0E01               	movlw	1
 21186  005528  6EDF               	movwf	indf2,c
 21187                           
 21188                           ; BSR set to: 1
 21189                           ;app_resCmd.c: 97: }
 21190                           ;app_resCmd.c: 98: break;
 21191  00552A  D00F               	goto	l2962
 21192  00552C                     
 21193                           ; BSR set to: 1
 21194                           ;app_resCmd.c: 101: isComplete = 1;
 21195                           
 21196                           ; BSR set to: 1
 21197  00552C  0E01               	movlw	1
 21198  00552E  6F07               	movwf	resCmdFsm@isComplete& (0+255),b
 21199                           
 21200                           ;app_resCmd.c: 102: currentState = RES_FSM_CHECK_MASTER;
 21201  005530  0E00               	movlw	0
 21202  005532                     L30:
 21203  005532  6FD3               	movwf	resCmdFsm@currentState& (0+255),b
 21204                           
 21205                           ; BSR set to: 1
 21206                           ;app_resCmd.c: 107: }
 21207                           
 21208                           ; BSR set to: 1
 21209                           ;app_resCmd.c: 106: break;
 21210                           
 21211                           ;app_resCmd.c: 105: default:
 21212                           
 21213                           ;app_resCmd.c: 103: break;
 21214  005534  D00A               	goto	l2962
 21215  005536                     l2957:
 21216                           
 21217                           ; BSR set to: 1
 21218                           
 21219                           ; BSR set to: 1
 21220  005536  51D3               	movf	resCmdFsm@currentState& (0+255),w,b
 21221                           
 21222                           ; Switch size 1, requested type "space"
 21223                           ; Number of cases is 3, Range of values is 0 to 2
 21224                           ; switch strategies available:
 21225                           ; Name         Instructions Cycles
 21226                           ; simple_byte           10     6 (average)
 21227                           ;	Chosen strategy is simple_byte
 21228  005538  0A00               	xorlw	0	; case 0
 21229  00553A  B4D8               	btfsc	status,2,c
 21230  00553C  D7D0               	goto	l2958
 21231  00553E  0A01               	xorlw	1	; case 1
 21232  005540  B4D8               	btfsc	status,2,c
 21233  005542  D7E5               	goto	l2963
 21234  005544  0A03               	xorlw	3	; case 2
 21235  005546  B4D8               	btfsc	status,2,c
 21236  005548  D7F1               	goto	l2965
 21237  00554A                     l2962:
 21238                           
 21239                           ;app_resCmd.c: 108: return isComplete;
 21240                           
 21241                           ; BSR set to: 1
 21242  00554A  0101               	movlb	1	; () banked
 21243  00554C  5107               	movf	resCmdFsm@isComplete& (0+255),w,b
 21244  00554E  0012               	return	
 21245  005550                     __end_of_resCmdFsm:
 21246                           	opt stack 0
 21247                           tosu	equ	0xFFF
 21248                           tosh	equ	0xFFE
 21249                           tosl	equ	0xFFD
 21250                           pclath	equ	0xFFA
 21251                           tblptru	equ	0xFF8
 21252                           tblptrh	equ	0xFF7
 21253                           tblptrl	equ	0xFF6
 21254                           tablat	equ	0xFF5
 21255                           prodh	equ	0xFF4
 21256                           prodl	equ	0xFF3
 21257                           intcon	equ	0xFF2
 21258                           intcon2	equ	0xFF1
 21259                           intcon3	equ	0xFF0
 21260                           indf0	equ	0xFEF
 21261                           postinc0	equ	0xFEE
 21262                           plusw0	equ	0xFEB
 21263                           fsr0h	equ	0xFEA
 21264                           fsr0l	equ	0xFE9
 21265                           wreg	equ	0xFE8
 21266                           indf1	equ	0xFE7
 21267                           postinc1	equ	0xFE6
 21268                           postdec1	equ	0xFE5
 21269                           fsr1h	equ	0xFE2
 21270                           fsr1l	equ	0xFE1
 21271                           indf2	equ	0xFDF
 21272                           postinc2	equ	0xFDE
 21273                           postdec2	equ	0xFDD
 21274                           plusw2	equ	0xFDB
 21275                           fsr2h	equ	0xFDA
 21276                           fsr2l	equ	0xFD9
 21277                           status	equ	0xFD8
 21278                           
 21279 ;; *************** function _Eeprom_Reset *****************
 21280 ;; Defined at:
 21281 ;;		line 131 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 21282 ;; Parameters:    Size  Location     Type
 21283 ;;		None
 21284 ;; Auto vars:     Size  Location     Type
 21285 ;;  SlaveAddress    1   37[BANK0 ] const unsigned char 
 21286 ;; Return value:  Size  Location     Type
 21287 ;;                  1    wreg      unsigned char 
 21288 ;; Registers used:
 21289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21290 ;; Tracked objects:
 21291 ;;		On entry : 0/0
 21292 ;;		On exit  : 0/0
 21293 ;;		Unchanged: 0/0
 21294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21296 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21298 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21299 ;;Total ram usage:        1 bytes
 21300 ;; Hardware stack levels used:    1
 21301 ;; Hardware stack levels required when called:   13
 21302 ;; This function calls:
 21303 ;;		_ClearBuffer
 21304 ;;		_I2cSlv_SendI2cMsg
 21305 ;; This function is called by:
 21306 ;;		_resCmdFsm
 21307 ;; This function uses a non-reentrant model
 21308 ;;
 21309                           
 21310                           	psect	text93
 21311  005C62                     __ptext93:
 21312                           	opt stack 0
 21313  005C62                     _Eeprom_Reset:
 21314                           	opt stack 13
 21315                           
 21316                           ;eeprom_if.c: 133: const UINT8 SlaveAddress = 0x50;
 21317                           
 21318                           ; BSR set to: 1
 21319                           ;incstack = 0
 21320  005C62  0E50               	movlw	80
 21321  005C64  0100               	movlb	0	; () banked
 21322  005C66  6F85               	movwf	Eeprom_Reset@SlaveAddress& (0+255),b
 21323                           
 21324                           ;eeprom_if.c: 134: static UINT8 memoryAddress = 0;
 21325                           ;eeprom_if.c: 136: if (memoryAddress == 0)
 21326  005C68  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 21327  005C6A  A4D8               	btfss	status,2,c
 21328  005C6C  D00A               	goto	l2045
 21329                           
 21330                           ; BSR set to: 0
 21331                           ;eeprom_if.c: 137: {
 21332                           ;eeprom_if.c: 138: ClearBuffer(EepromBuffer, 15);
 21333  005C6E  0EBB               	movlw	low _EepromBuffer
 21334  005C70  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 21335  005C72  0E04               	movlw	high _EepromBuffer
 21336  005C74  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 21337  005C76  0E00               	movlw	0
 21338  005C78  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 21339  005C7A  0E0F               	movlw	15
 21340  005C7C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 21341  005C7E  EC37  F033         	call	_ClearBuffer	;wreg free
 21342  005C82                     l2045:
 21343                           
 21344                           ;eeprom_if.c: 139: }
 21345                           ;eeprom_if.c: 141: EepromBuffer[0] = memoryAddress;
 21346  005C82  C0C6  F4BB         	movff	Eeprom_Reset@memoryAddress,_EepromBuffer
 21347                           
 21348                           ;eeprom_if.c: 142: I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, 15);
 21349  005C86  0EBB               	movlw	low _EepromBuffer
 21350  005C88  0100               	movlb	0	; () banked
 21351  005C8A  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 21352  005C8C  0E04               	movlw	high _EepromBuffer
 21353  005C8E  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 21354  005C90  C085  F082         	movff	Eeprom_Reset@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 21355  005C94  0E0F               	movlw	15
 21356  005C96  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 21357  005C98  EC4D  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 21358                           
 21359                           ;eeprom_if.c: 144: memoryAddress += 16;
 21360  005C9C  0E10               	movlw	16
 21361  005C9E  0100               	movlb	0	; () banked
 21362  005CA0  27C6               	addwf	Eeprom_Reset@memoryAddress& (0+255),f,b
 21363                           
 21364                           ; BSR set to: 0
 21365                           ;eeprom_if.c: 145: if (memoryAddress >= 224)
 21366  005CA2  0EDF               	movlw	223
 21367  005CA4  65C6               	cpfsgt	Eeprom_Reset@memoryAddress& (0+255),b
 21368  005CA6  D006               	goto	l2046
 21369                           
 21370                           ; BSR set to: 0
 21371                           ;eeprom_if.c: 146: {
 21372                           ;eeprom_if.c: 147: EepromBuffer[0] = 0;
 21373  005CA8  0E00               	movlw	0
 21374  005CAA  0104               	movlb	4	; () banked
 21375  005CAC  6FBB               	movwf	_EepromBuffer& (0+255),b
 21376                           
 21377                           ;eeprom_if.c: 148: memoryAddress = 0;
 21378  005CAE  0E00               	movlw	0
 21379  005CB0  0100               	movlb	0	; () banked
 21380  005CB2  6FC6               	movwf	Eeprom_Reset@memoryAddress& (0+255),b
 21381  005CB4                     l2046:
 21382                           
 21383                           ; BSR set to: 0
 21384                           ;eeprom_if.c: 149: }
 21385                           ;eeprom_if.c: 150: return memoryAddress;
 21386  005CB4  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 21387  005CB6  0012               	return	
 21388  005CB8                     __end_of_Eeprom_Reset:
 21389                           	opt stack 0
 21390                           tosu	equ	0xFFF
 21391                           tosh	equ	0xFFE
 21392                           tosl	equ	0xFFD
 21393                           pclath	equ	0xFFA
 21394                           tblptru	equ	0xFF8
 21395                           tblptrh	equ	0xFF7
 21396                           tblptrl	equ	0xFF6
 21397                           tablat	equ	0xFF5
 21398                           prodh	equ	0xFF4
 21399                           prodl	equ	0xFF3
 21400                           intcon	equ	0xFF2
 21401                           intcon2	equ	0xFF1
 21402                           intcon3	equ	0xFF0
 21403                           indf0	equ	0xFEF
 21404                           postinc0	equ	0xFEE
 21405                           plusw0	equ	0xFEB
 21406                           fsr0h	equ	0xFEA
 21407                           fsr0l	equ	0xFE9
 21408                           wreg	equ	0xFE8
 21409                           indf1	equ	0xFE7
 21410                           postinc1	equ	0xFE6
 21411                           postdec1	equ	0xFE5
 21412                           fsr1h	equ	0xFE2
 21413                           fsr1l	equ	0xFE1
 21414                           indf2	equ	0xFDF
 21415                           postinc2	equ	0xFDE
 21416                           postdec2	equ	0xFDD
 21417                           plusw2	equ	0xFDB
 21418                           fsr2h	equ	0xFDA
 21419                           fsr2l	equ	0xFD9
 21420                           status	equ	0xFD8
 21421                           
 21422 ;; *************** function _initFsm *****************
 21423 ;; Defined at:
 21424 ;;		line 226 in file "../Source/c/04_App/app_init.c"
 21425 ;; Parameters:    Size  Location     Type
 21426 ;;  isCmdSuccess    2    3[BANK1 ] PTR unsigned char 
 21427 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 21428 ;; Auto vars:     Size  Location     Type
 21429 ;;  isInitialize    1    5[BANK1 ] unsigned char 
 21430 ;; Return value:  Size  Location     Type
 21431 ;;                  1    wreg      unsigned char 
 21432 ;; Registers used:
 21433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21434 ;; Tracked objects:
 21435 ;;		On entry : 0/0
 21436 ;;		On exit  : 0/0
 21437 ;;		Unchanged: 0/0
 21438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21439 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21440 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21442 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21443 ;;Total ram usage:        3 bytes
 21444 ;; Hardware stack levels used:    1
 21445 ;; Hardware stack levels required when called:   18
 21446 ;; This function calls:
 21447 ;;		_GetCallerNumber
 21448 ;;		_Led_SetLedStatus
 21449 ;;		_detectUsbNumber
 21450 ;;		_initEeprom
 21451 ;;		_initGprsModem
 21452 ;;		_saveNumberInMemory
 21453 ;;		_savePreamble
 21454 ;;		_waitSetupCall
 21455 ;; This function is called by:
 21456 ;;		_MyApp_Task
 21457 ;; This function uses a non-reentrant model
 21458 ;;
 21459                           
 21460                           	psect	text94
 21461  00443A                     __ptext94:
 21462                           	opt stack 0
 21463  00443A                     _initFsm:
 21464                           	opt stack 9
 21465                           
 21466                           ;app_init.c: 228: static initFsmStates currentState = INIT_FSM_MODEM;
 21467                           ;app_init.c: 229: bool isInitialized = 0;
 21468                           
 21469                           ; BSR set to: 0
 21470                           ;incstack = 0
 21471  00443A  0E00               	movlw	0
 21472  00443C  0101               	movlb	1	; () banked
 21473  00443E  6F05               	movwf	initFsm@isInitialized& (0+255),b
 21474                           
 21475                           ;app_init.c: 231: switch (currentState)
 21476  004440  D049               	goto	l2714
 21477  004442                     
 21478                           ; BSR set to: 1
 21479                           ;app_init.c: 234: if (initGprsModem())
 21480                           
 21481                           ; BSR set to: 1
 21482  004442  EC3C  F028         	call	_initGprsModem	;wreg free
 21483  004446  0900               	iorlw	0
 21484  004448  B4D8               	btfsc	status,2,c
 21485  00444A  D054               	goto	l2717
 21486                           
 21487                           ;app_init.c: 235: {
 21488                           ;app_init.c: 236: currentState = INIT_FSM_EEPROM;
 21489  00444C  0E01               	movlw	1
 21490  00444E  D033               	goto	L34
 21491  004450                     
 21492                           ; BSR set to: 1
 21493                           ;app_init.c: 241: if (initEeprom())
 21494                           
 21495                           ; BSR set to: 1
 21496  004450  EC86  F028         	call	_initEeprom	;wreg free
 21497  004454  0900               	iorlw	0
 21498  004456  B4D8               	btfsc	status,2,c
 21499  004458  D04D               	goto	l2717
 21500                           
 21501                           ;app_init.c: 242: {
 21502                           ;app_init.c: 243: currentState = INIT_FSM_WAIT_CMD;
 21503  00445A  0E02               	movlw	2
 21504  00445C  0101               	movlb	1	; () banked
 21505  00445E  6FD7               	movwf	initFsm@currentState& (0+255),b
 21506                           
 21507                           ;app_init.c: 244: setupCallTicks = 0;
 21508  004460  0E00               	movlw	0
 21509  004462  0103               	movlb	3	; () banked
 21510  004464  6FC2               	movwf	(_setupCallTicks+1)& (0+255),b
 21511  004466  0E00               	movlw	0
 21512  004468  6FC1               	movwf	_setupCallTicks& (0+255),b
 21513                           
 21514                           ; BSR set to: 3
 21515                           ;app_init.c: 245: }
 21516                           ;app_init.c: 246: break;
 21517  00446A  D044               	goto	l2717
 21518  00446C                     
 21519                           ;app_init.c: 249: if (isMemoryEmpty)
 21520                           
 21521                           ; BSR set to: 3
 21522  00446C  0101               	movlb	1	; () banked
 21523  00446E  51FE               	movf	_isMemoryEmpty& (0+255),w,b
 21524  004470  B4D8               	btfsc	status,2,c
 21525  004472  D01C               	goto	l2721
 21526                           
 21527                           ; BSR set to: 1
 21528                           ;app_init.c: 250: {
 21529                           ;app_init.c: 251: if (waitSetupCall())
 21530  004474  ECF8  F02F         	call	_waitSetupCall	;wreg free
 21531  004478  0900               	iorlw	0
 21532  00447A  B4D8               	btfsc	status,2,c
 21533  00447C  D00C               	goto	l2722
 21534                           
 21535                           ;app_init.c: 252: {
 21536                           ;app_init.c: 253: saveNumberInMemory(16, GetCallerNumber());
 21537  00447E  EC1C  F033         	call	_GetCallerNumber	;wreg free
 21538  004482  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
 21539  004486  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
 21540  00448A  0E10               	movlw	16
 21541  00448C  ECE1  F035         	call	_saveNumberInMemory
 21542                           
 21543                           ;app_init.c: 254: currentState = INIT_FSM_PREAMBLE;
 21544  004490  0E03               	movlw	3
 21545  004492  0101               	movlb	1	; () banked
 21546  004494  6FD7               	movwf	initFsm@currentState& (0+255),b
 21547  004496                     l2722:
 21548                           
 21549                           ;app_init.c: 255: }
 21550                           ;app_init.c: 256: if (detectUsbNumber(isCmdSuccessfull))
 21551                           
 21552                           ; BSR set to: 1
 21553  004496  C103  F099         	movff	initFsm@isCmdSuccessfull,detectUsbNumber@isCmdSuccessfull
 21554  00449A  C104  F09A         	movff	initFsm@isCmdSuccessfull+1,detectUsbNumber@isCmdSuccessfull+1
 21555  00449E  ECCE  F031         	call	_detectUsbNumber	;wreg free
 21556  0044A2  0900               	iorlw	0
 21557  0044A4  B4D8               	btfsc	status,2,c
 21558  0044A6  D026               	goto	l2717
 21559                           
 21560                           ;app_init.c: 257: {
 21561                           ;app_init.c: 258: currentState = INIT_FSM_PREAMBLE;
 21562  0044A8  0E03               	movlw	3
 21563  0044AA  D005               	goto	L34
 21564  0044AC                     l2721:
 21565                           
 21566                           ; BSR set to: 1
 21567                           ;app_init.c: 261: else
 21568                           ;app_init.c: 262: {
 21569                           ;app_init.c: 263: currentState = INIT_FSM_COMPLETE;
 21570                           
 21571                           ; BSR set to: 1
 21572  0044AC  0E04               	movlw	4
 21573  0044AE  D004               	goto	L33
 21574  0044B0                     
 21575                           ; BSR set to: 1
 21576                           ;app_init.c: 268: savePreamble();
 21577                           
 21578                           ; BSR set to: 1
 21579  0044B0  ECD4  F035         	call	_savePreamble	;wreg free
 21580                           
 21581                           ;app_init.c: 269: currentState = INIT_FSM_COMPLETE;
 21582  0044B4  0E04               	movlw	4
 21583  0044B6                     L34:
 21584  0044B6  0101               	movlb	1	; () banked
 21585  0044B8                     L33:
 21586  0044B8  6FD7               	movwf	initFsm@currentState& (0+255),b
 21587                           
 21588                           ;app_init.c: 270: break;
 21589  0044BA  D01C               	goto	l2717
 21590  0044BC                     
 21591                           ; BSR set to: 1
 21592                           ;app_init.c: 273: Led_SetLedStatus(1u, LED_STS_ON);
 21593                           
 21594                           ; BSR set to: 1
 21595  0044BC  0E01               	movlw	1
 21596  0044BE  0100               	movlb	0	; () banked
 21597  0044C0  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21598  0044C2  0E01               	movlw	1
 21599  0044C4  ECE6  F033         	call	_Led_SetLedStatus
 21600                           
 21601                           ;app_init.c: 274: currentState = INIT_FSM_MODEM;
 21602  0044C8  0E00               	movlw	0
 21603  0044CA  0101               	movlb	1	; () banked
 21604  0044CC  6FD7               	movwf	initFsm@currentState& (0+255),b
 21605                           
 21606                           ; BSR set to: 1
 21607                           ;app_init.c: 275: isInitialized = 1;
 21608  0044CE  0E01               	movlw	1
 21609  0044D0  6F05               	movwf	initFsm@isInitialized& (0+255),b
 21610                           
 21611                           ; BSR set to: 1
 21612                           ;app_init.c: 280: }
 21613                           
 21614                           ; BSR set to: 1
 21615                           ;app_init.c: 279: break;
 21616                           
 21617                           ;app_init.c: 278: default:
 21618                           
 21619                           ;app_init.c: 276: break;
 21620  0044D2  D010               	goto	l2717
 21621  0044D4                     l2714:
 21622                           
 21623                           ; BSR set to: 1
 21624                           
 21625                           ; BSR set to: 1
 21626  0044D4  51D7               	movf	initFsm@currentState& (0+255),w,b
 21627                           
 21628                           ; Switch size 1, requested type "space"
 21629                           ; Number of cases is 5, Range of values is 0 to 4
 21630                           ; switch strategies available:
 21631                           ; Name         Instructions Cycles
 21632                           ; simple_byte           16     9 (average)
 21633                           ;	Chosen strategy is simple_byte
 21634  0044D6  0A00               	xorlw	0	; case 0
 21635  0044D8  B4D8               	btfsc	status,2,c
 21636  0044DA  D7B3               	goto	l2715
 21637  0044DC  0A01               	xorlw	1	; case 1
 21638  0044DE  B4D8               	btfsc	status,2,c
 21639  0044E0  D7B7               	goto	l2718
 21640  0044E2  0A03               	xorlw	3	; case 2
 21641  0044E4  B4D8               	btfsc	status,2,c
 21642  0044E6  D7C2               	goto	l2720
 21643  0044E8  0A01               	xorlw	1	; case 3
 21644  0044EA  B4D8               	btfsc	status,2,c
 21645  0044EC  D7E1               	goto	l2725
 21646  0044EE  0A07               	xorlw	7	; case 4
 21647  0044F0  B4D8               	btfsc	status,2,c
 21648  0044F2  D7E4               	goto	l2726
 21649  0044F4                     l2717:
 21650                           
 21651                           ;app_init.c: 281: return isInitialized;
 21652                           
 21653                           ; BSR set to: 1
 21654  0044F4  0101               	movlb	1	; () banked
 21655  0044F6  5105               	movf	initFsm@isInitialized& (0+255),w,b
 21656  0044F8  0012               	return	
 21657  0044FA                     __end_of_initFsm:
 21658                           	opt stack 0
 21659                           tosu	equ	0xFFF
 21660                           tosh	equ	0xFFE
 21661                           tosl	equ	0xFFD
 21662                           pclath	equ	0xFFA
 21663                           tblptru	equ	0xFF8
 21664                           tblptrh	equ	0xFF7
 21665                           tblptrl	equ	0xFF6
 21666                           tablat	equ	0xFF5
 21667                           prodh	equ	0xFF4
 21668                           prodl	equ	0xFF3
 21669                           intcon	equ	0xFF2
 21670                           intcon2	equ	0xFF1
 21671                           intcon3	equ	0xFF0
 21672                           indf0	equ	0xFEF
 21673                           postinc0	equ	0xFEE
 21674                           plusw0	equ	0xFEB
 21675                           fsr0h	equ	0xFEA
 21676                           fsr0l	equ	0xFE9
 21677                           wreg	equ	0xFE8
 21678                           indf1	equ	0xFE7
 21679                           postinc1	equ	0xFE6
 21680                           postdec1	equ	0xFE5
 21681                           fsr1h	equ	0xFE2
 21682                           fsr1l	equ	0xFE1
 21683                           indf2	equ	0xFDF
 21684                           postinc2	equ	0xFDE
 21685                           postdec2	equ	0xFDD
 21686                           plusw2	equ	0xFDB
 21687                           fsr2h	equ	0xFDA
 21688                           fsr2l	equ	0xFD9
 21689                           status	equ	0xFD8
 21690                           
 21691 ;; *************** function _waitSetupCall *****************
 21692 ;; Defined at:
 21693 ;;		line 196 in file "../Source/c/04_App/app_init.c"
 21694 ;; Parameters:    Size  Location     Type
 21695 ;;		None
 21696 ;; Auto vars:     Size  Location     Type
 21697 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 21698 ;; Return value:  Size  Location     Type
 21699 ;;                  1    wreg      unsigned char 
 21700 ;; Registers used:
 21701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21702 ;; Tracked objects:
 21703 ;;		On entry : 0/0
 21704 ;;		On exit  : 0/0
 21705 ;;		Unchanged: 0/0
 21706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21710 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21711 ;;Total ram usage:        1 bytes
 21712 ;; Hardware stack levels used:    1
 21713 ;; Hardware stack levels required when called:   15
 21714 ;; This function calls:
 21715 ;;		_Led_SetLedStatus
 21716 ;;		_getSetupCall
 21717 ;;		_secondsAppTimer
 21718 ;; This function is called by:
 21719 ;;		_initFsm
 21720 ;; This function uses a non-reentrant model
 21721 ;;
 21722                           
 21723                           	psect	text95
 21724  005FF0                     __ptext95:
 21725                           	opt stack 0
 21726  005FF0                     _waitSetupCall:
 21727                           	opt stack 11
 21728                           
 21729                           ;app_init.c: 198: bool isCallArrived = 0;
 21730                           
 21731                           ; BSR set to: 1
 21732                           ;incstack = 0
 21733  005FF0  0E00               	movlw	0
 21734  005FF2  0100               	movlb	0	; () banked
 21735  005FF4  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21736                           
 21737                           ; BSR set to: 0
 21738                           ;app_init.c: 199: if (!secondsAppTimer(30, &setupCallTicks, 0))
 21739  005FF6  0EC1               	movlw	low _setupCallTicks
 21740  005FF8  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21741  005FFA  0E03               	movlw	high _setupCallTicks
 21742  005FFC  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21743  005FFE  0E00               	movlw	0
 21744  006000  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21745  006002  0E1E               	movlw	30
 21746  006004  EC3D  F025         	call	_secondsAppTimer
 21747  006008  0900               	iorlw	0
 21748  00600A  A4D8               	btfss	status,2,c
 21749  00600C  D00F               	goto	l2703
 21750                           
 21751                           ;app_init.c: 200: {
 21752                           ;app_init.c: 201: Led_SetLedStatus(1u, LED_STS_BLINK);
 21753  00600E  0E03               	movlw	3
 21754  006010  0100               	movlb	0	; () banked
 21755  006012  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21756  006014  0E01               	movlw	1
 21757  006016  ECE6  F033         	call	_Led_SetLedStatus
 21758                           
 21759                           ;app_init.c: 202: if (getSetupCall())
 21760  00601A  EC51  F035         	call	_getSetupCall	;wreg free
 21761  00601E  0900               	iorlw	0
 21762  006020  B4D8               	btfsc	status,2,c
 21763  006022  D00A               	goto	l2705
 21764                           
 21765                           ;app_init.c: 203: {
 21766                           ;app_init.c: 204: isCallArrived = 1;
 21767  006024  0E01               	movlw	1
 21768  006026  0100               	movlb	0	; () banked
 21769  006028  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21770                           
 21771                           ; BSR set to: 0
 21772                           ;app_init.c: 205: }
 21773                           ;app_init.c: 206: }
 21774  00602A  D006               	goto	l2705
 21775  00602C                     l2703:
 21776                           
 21777                           ;app_init.c: 207: else
 21778                           ;app_init.c: 208: {
 21779                           ;app_init.c: 209: Led_SetLedStatus(1u, LED_STS_ON);
 21780                           
 21781                           ; BSR set to: 0
 21782  00602C  0E01               	movlw	1
 21783  00602E  0100               	movlb	0	; () banked
 21784  006030  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21785  006032  0E01               	movlw	1
 21786  006034  ECE6  F033         	call	_Led_SetLedStatus
 21787  006038                     l2705:
 21788                           
 21789                           ;app_init.c: 210: }
 21790                           ;app_init.c: 211: return isCallArrived;
 21791  006038  0100               	movlb	0	; () banked
 21792  00603A  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21793  00603C  0012               	return	
 21794  00603E                     __end_of_waitSetupCall:
 21795                           	opt stack 0
 21796                           tosu	equ	0xFFF
 21797                           tosh	equ	0xFFE
 21798                           tosl	equ	0xFFD
 21799                           pclath	equ	0xFFA
 21800                           tblptru	equ	0xFF8
 21801                           tblptrh	equ	0xFF7
 21802                           tblptrl	equ	0xFF6
 21803                           tablat	equ	0xFF5
 21804                           prodh	equ	0xFF4
 21805                           prodl	equ	0xFF3
 21806                           intcon	equ	0xFF2
 21807                           intcon2	equ	0xFF1
 21808                           intcon3	equ	0xFF0
 21809                           indf0	equ	0xFEF
 21810                           postinc0	equ	0xFEE
 21811                           plusw0	equ	0xFEB
 21812                           fsr0h	equ	0xFEA
 21813                           fsr0l	equ	0xFE9
 21814                           wreg	equ	0xFE8
 21815                           indf1	equ	0xFE7
 21816                           postinc1	equ	0xFE6
 21817                           postdec1	equ	0xFE5
 21818                           fsr1h	equ	0xFE2
 21819                           fsr1l	equ	0xFE1
 21820                           indf2	equ	0xFDF
 21821                           postinc2	equ	0xFDE
 21822                           postdec2	equ	0xFDD
 21823                           plusw2	equ	0xFDB
 21824                           fsr2h	equ	0xFDA
 21825                           fsr2l	equ	0xFD9
 21826                           status	equ	0xFD8
 21827                           
 21828 ;; *************** function _getSetupCall *****************
 21829 ;; Defined at:
 21830 ;;		line 180 in file "../Source/c/04_App/app_init.c"
 21831 ;; Parameters:    Size  Location     Type
 21832 ;;		None
 21833 ;; Auto vars:     Size  Location     Type
 21834 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21835 ;; Return value:  Size  Location     Type
 21836 ;;                  1    wreg      unsigned char 
 21837 ;; Registers used:
 21838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21839 ;; Tracked objects:
 21840 ;;		On entry : 0/0
 21841 ;;		On exit  : 0/0
 21842 ;;		Unchanged: 0/0
 21843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21847 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21848 ;;Total ram usage:        1 bytes
 21849 ;; Hardware stack levels used:    1
 21850 ;; Hardware stack levels required when called:   14
 21851 ;; This function calls:
 21852 ;;		_Mdm_HangPhoneCall
 21853 ;;		_Mdm_IsRinging
 21854 ;; This function is called by:
 21855 ;;		_waitSetupCall
 21856 ;; This function uses a non-reentrant model
 21857 ;;
 21858                           
 21859                           	psect	text96
 21860  006AA2                     __ptext96:
 21861                           	opt stack 0
 21862  006AA2                     _getSetupCall:
 21863                           	opt stack 11
 21864                           
 21865                           ;app_init.c: 182: bool isCalledReceived = 0;
 21866                           
 21867                           ; BSR set to: 0
 21868                           ;incstack = 0
 21869  006AA2  0E00               	movlw	0
 21870  006AA4  0100               	movlb	0	; () banked
 21871  006AA6  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21872                           
 21873                           ; BSR set to: 0
 21874                           ;app_init.c: 184: if (Mdm_IsRinging())
 21875  006AA8  ECB7  F034         	call	_Mdm_IsRinging	;wreg free
 21876  006AAC  0900               	iorlw	0
 21877  006AAE  B4D8               	btfsc	status,2,c
 21878  006AB0  D005               	goto	l2699
 21879                           
 21880                           ;app_init.c: 185: {
 21881                           ;app_init.c: 186: Mdm_HangPhoneCall();
 21882  006AB2  EC51  F036         	call	_Mdm_HangPhoneCall	;wreg free
 21883                           
 21884                           ;app_init.c: 187: isCalledReceived = 1;
 21885  006AB6  0E01               	movlw	1
 21886  006AB8  0100               	movlb	0	; () banked
 21887  006ABA  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21888  006ABC                     l2699:
 21889                           
 21890                           ;app_init.c: 188: }
 21891                           ;app_init.c: 189: return isCalledReceived;
 21892                           
 21893                           ; BSR set to: 0
 21894  006ABC  0100               	movlb	0	; () banked
 21895  006ABE  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21896  006AC0  0012               	return	
 21897  006AC2                     __end_of_getSetupCall:
 21898                           	opt stack 0
 21899                           tosu	equ	0xFFF
 21900                           tosh	equ	0xFFE
 21901                           tosl	equ	0xFFD
 21902                           pclath	equ	0xFFA
 21903                           tblptru	equ	0xFF8
 21904                           tblptrh	equ	0xFF7
 21905                           tblptrl	equ	0xFF6
 21906                           tablat	equ	0xFF5
 21907                           prodh	equ	0xFF4
 21908                           prodl	equ	0xFF3
 21909                           intcon	equ	0xFF2
 21910                           intcon2	equ	0xFF1
 21911                           intcon3	equ	0xFF0
 21912                           indf0	equ	0xFEF
 21913                           postinc0	equ	0xFEE
 21914                           plusw0	equ	0xFEB
 21915                           fsr0h	equ	0xFEA
 21916                           fsr0l	equ	0xFE9
 21917                           wreg	equ	0xFE8
 21918                           indf1	equ	0xFE7
 21919                           postinc1	equ	0xFE6
 21920                           postdec1	equ	0xFE5
 21921                           fsr1h	equ	0xFE2
 21922                           fsr1l	equ	0xFE1
 21923                           indf2	equ	0xFDF
 21924                           postinc2	equ	0xFDE
 21925                           postdec2	equ	0xFDD
 21926                           plusw2	equ	0xFDB
 21927                           fsr2h	equ	0xFDA
 21928                           fsr2l	equ	0xFD9
 21929                           status	equ	0xFD8
 21930                           
 21931 ;; *************** function _savePreamble *****************
 21932 ;; Defined at:
 21933 ;;		line 214 in file "../Source/c/04_App/app_init.c"
 21934 ;; Parameters:    Size  Location     Type
 21935 ;;		None
 21936 ;; Auto vars:     Size  Location     Type
 21937 ;;		None
 21938 ;; Return value:  Size  Location     Type
 21939 ;;                  1    wreg      void 
 21940 ;; Registers used:
 21941 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21942 ;; Tracked objects:
 21943 ;;		On entry : 0/0
 21944 ;;		On exit  : 0/0
 21945 ;;		Unchanged: 0/0
 21946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21951 ;;Total ram usage:        0 bytes
 21952 ;; Hardware stack levels used:    1
 21953 ;; Hardware stack levels required when called:   14
 21954 ;; This function calls:
 21955 ;;		_Eeprom_Write
 21956 ;;		_initPreamble
 21957 ;; This function is called by:
 21958 ;;		_initFsm
 21959 ;; This function uses a non-reentrant model
 21960 ;;
 21961                           
 21962                           	psect	text97
 21963  006BA8                     __ptext97:
 21964                           	opt stack 0
 21965  006BA8                     _savePreamble:
 21966                           	opt stack 12
 21967                           
 21968                           ;app_init.c: 216: Eeprom_Write(0, initPreamble(), 4);
 21969                           
 21970                           ; BSR set to: 0
 21971                           ;incstack = 0
 21972  006BA8  EC8F  F035         	call	_initPreamble	;wreg free
 21973  006BAC  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21974  006BB0  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21975  006BB4  0E04               	movlw	4
 21976  006BB6  0100               	movlb	0	; () banked
 21977  006BB8  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21978  006BBA  0E00               	movlw	0
 21979  006BBC  EC2E  F02F         	call	_Eeprom_Write
 21980  006BC0  0012               	return		;funcret
 21981  006BC2                     __end_of_savePreamble:
 21982                           	opt stack 0
 21983                           tosu	equ	0xFFF
 21984                           tosh	equ	0xFFE
 21985                           tosl	equ	0xFFD
 21986                           pclath	equ	0xFFA
 21987                           tblptru	equ	0xFF8
 21988                           tblptrh	equ	0xFF7
 21989                           tblptrl	equ	0xFF6
 21990                           tablat	equ	0xFF5
 21991                           prodh	equ	0xFF4
 21992                           prodl	equ	0xFF3
 21993                           intcon	equ	0xFF2
 21994                           intcon2	equ	0xFF1
 21995                           intcon3	equ	0xFF0
 21996                           indf0	equ	0xFEF
 21997                           postinc0	equ	0xFEE
 21998                           plusw0	equ	0xFEB
 21999                           fsr0h	equ	0xFEA
 22000                           fsr0l	equ	0xFE9
 22001                           wreg	equ	0xFE8
 22002                           indf1	equ	0xFE7
 22003                           postinc1	equ	0xFE6
 22004                           postdec1	equ	0xFE5
 22005                           fsr1h	equ	0xFE2
 22006                           fsr1l	equ	0xFE1
 22007                           indf2	equ	0xFDF
 22008                           postinc2	equ	0xFDE
 22009                           postdec2	equ	0xFDD
 22010                           plusw2	equ	0xFDB
 22011                           fsr2h	equ	0xFDA
 22012                           fsr2l	equ	0xFD9
 22013                           status	equ	0xFD8
 22014                           
 22015 ;; *************** function _initPreamble *****************
 22016 ;; Defined at:
 22017 ;;		line 289 in file "../Source/c/04_App/app_init.c"
 22018 ;; Parameters:    Size  Location     Type
 22019 ;;		None
 22020 ;; Auto vars:     Size  Location     Type
 22021 ;;		None
 22022 ;; Return value:  Size  Location     Type
 22023 ;;                  2   29[BANK0 ] PTR unsigned char 
 22024 ;; Registers used:
 22025 ;;		wreg, status,2, status,0
 22026 ;; Tracked objects:
 22027 ;;		On entry : 0/0
 22028 ;;		On exit  : 0/0
 22029 ;;		Unchanged: 0/0
 22030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22031 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22034 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22035 ;;Total ram usage:        2 bytes
 22036 ;; Hardware stack levels used:    1
 22037 ;; Hardware stack levels required when called:   11
 22038 ;; This function calls:
 22039 ;;		Nothing
 22040 ;; This function is called by:
 22041 ;;		_savePreamble
 22042 ;; This function uses a non-reentrant model
 22043 ;;
 22044                           
 22045                           	psect	text98
 22046  006B1E                     __ptext98:
 22047                           	opt stack 0
 22048  006B1E                     _initPreamble:
 22049                           	opt stack 14
 22050                           
 22051                           ;app_init.c: 291: memoryPreamble[0] = 'U';
 22052                           
 22053                           ;incstack = 0
 22054  006B1E  0E55               	movlw	85
 22055  006B20  0103               	movlb	3	; () banked
 22056  006B22  6FAB               	movwf	_memoryPreamble& (0+255),b
 22057                           
 22058                           ;app_init.c: 292: memoryPreamble[1] = 'S';
 22059  006B24  0E53               	movlw	83
 22060  006B26  6FAC               	movwf	(_memoryPreamble+1)& (0+255),b
 22061                           
 22062                           ;app_init.c: 293: memoryPreamble[2] = 'I';
 22063  006B28  0E49               	movlw	73
 22064  006B2A  6FAD               	movwf	(_memoryPreamble+2)& (0+255),b
 22065                           
 22066                           ;app_init.c: 294: memoryPreamble[3] = 'M';
 22067  006B2C  0E4D               	movlw	77
 22068  006B2E  6FAE               	movwf	(_memoryPreamble+3)& (0+255),b
 22069                           
 22070                           ; BSR set to: 3
 22071                           ;app_init.c: 295: return memoryPreamble;
 22072  006B30  0EAB               	movlw	low _memoryPreamble
 22073  006B32  0100               	movlb	0	; () banked
 22074  006B34  6F7D               	movwf	?_initPreamble& (0+255),b
 22075  006B36  0E03               	movlw	high _memoryPreamble
 22076  006B38  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 22077  006B3A  0012               	return	
 22078  006B3C                     __end_of_initPreamble:
 22079                           	opt stack 0
 22080                           tosu	equ	0xFFF
 22081                           tosh	equ	0xFFE
 22082                           tosl	equ	0xFFD
 22083                           pclath	equ	0xFFA
 22084                           tblptru	equ	0xFF8
 22085                           tblptrh	equ	0xFF7
 22086                           tblptrl	equ	0xFF6
 22087                           tablat	equ	0xFF5
 22088                           prodh	equ	0xFF4
 22089                           prodl	equ	0xFF3
 22090                           intcon	equ	0xFF2
 22091                           intcon2	equ	0xFF1
 22092                           intcon3	equ	0xFF0
 22093                           indf0	equ	0xFEF
 22094                           postinc0	equ	0xFEE
 22095                           plusw0	equ	0xFEB
 22096                           fsr0h	equ	0xFEA
 22097                           fsr0l	equ	0xFE9
 22098                           wreg	equ	0xFE8
 22099                           indf1	equ	0xFE7
 22100                           postinc1	equ	0xFE6
 22101                           postdec1	equ	0xFE5
 22102                           fsr1h	equ	0xFE2
 22103                           fsr1l	equ	0xFE1
 22104                           indf2	equ	0xFDF
 22105                           postinc2	equ	0xFDE
 22106                           postdec2	equ	0xFDD
 22107                           plusw2	equ	0xFDB
 22108                           fsr2h	equ	0xFDA
 22109                           fsr2l	equ	0xFD9
 22110                           status	equ	0xFD8
 22111                           
 22112 ;; *************** function _initGprsModem *****************
 22113 ;; Defined at:
 22114 ;;		line 87 in file "../Source/c/04_App/app_init.c"
 22115 ;; Parameters:    Size  Location     Type
 22116 ;;		None
 22117 ;; Auto vars:     Size  Location     Type
 22118 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 22119 ;; Return value:  Size  Location     Type
 22120 ;;                  1    wreg      unsigned char 
 22121 ;; Registers used:
 22122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22123 ;; Tracked objects:
 22124 ;;		On entry : 0/0
 22125 ;;		On exit  : 0/0
 22126 ;;		Unchanged: 0/0
 22127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22131 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22132 ;;Total ram usage:        1 bytes
 22133 ;; Hardware stack levels used:    1
 22134 ;; Hardware stack levels required when called:   14
 22135 ;; This function calls:
 22136 ;;		_Mdm_SetSmsFormat
 22137 ;;		_Uart_WriteConstString
 22138 ;;		_secondsAppTimer
 22139 ;; This function is called by:
 22140 ;;		_initFsm
 22141 ;; This function uses a non-reentrant model
 22142 ;;
 22143                           
 22144                           	psect	text99
 22145  005078                     __ptext99:
 22146                           	opt stack 0
 22147  005078                     _initGprsModem:
 22148                           	opt stack 12
 22149                           
 22150                           ;app_init.c: 89: static uint16_t modemCounter = 0;
 22151                           ;app_init.c: 90: static modemStates currentState = MODEM_INIT;
 22152                           ;app_init.c: 91: bool isInitialized = 0;
 22153                           
 22154                           ; BSR set to: 0
 22155                           ;incstack = 0
 22156  005078  0E00               	movlw	0
 22157  00507A  0100               	movlb	0	; () banked
 22158  00507C  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22159                           
 22160                           ;app_init.c: 93: switch(currentState)
 22161  00507E  D035               	goto	l2671
 22162  005080                     
 22163                           ;app_init.c: 96: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 22164                           
 22165                           ; BSR set to: 0
 22166  005080  0E03               	movlw	3
 22167  005082  0100               	movlb	0	; () banked
 22168  005084  19D1               	xorwf	_MdmStatus& (0+255),w,b
 22169  005086  B4D8               	btfsc	status,2,c
 22170  005088  D003               	goto	u14690
 22171                           
 22172                           ; BSR set to: 0
 22173  00508A  05D1               	decf	_MdmStatus& (0+255),w,b
 22174  00508C  A4D8               	btfss	status,2,c
 22175  00508E  D03B               	goto	l2677
 22176  005090                     u14690:
 22177                           
 22178                           ; BSR set to: 0
 22179                           ;app_init.c: 97: {
 22180                           ;app_init.c: 98: if (secondsAppTimer(5, &modemCounter, 0))
 22181                           
 22182                           ; BSR set to: 0
 22183  005090  0EBF               	movlw	low initGprsModem@modemCounter
 22184  005092  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 22185  005094  0E03               	movlw	high initGprsModem@modemCounter
 22186  005096  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 22187  005098  0E00               	movlw	0
 22188  00509A  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 22189  00509C  0E05               	movlw	5
 22190  00509E  EC3D  F025         	call	_secondsAppTimer
 22191  0050A2  0900               	iorlw	0
 22192  0050A4  B4D8               	btfsc	status,2,c
 22193  0050A6  D02F               	goto	l2677
 22194                           
 22195                           ;app_init.c: 99: {
 22196                           ;app_init.c: 100: Mdm_SetSmsFormat(1);
 22197  0050A8  0E01               	movlw	1
 22198  0050AA  ECD0  F02F         	call	_Mdm_SetSmsFormat
 22199                           
 22200                           ;app_init.c: 101: currentState = MODEM_DELETE_SMS;
 22201  0050AE  0E01               	movlw	1
 22202  0050B0  D013               	goto	L36
 22203  0050B2                     
 22204                           ; BSR set to: 1
 22205                           ;app_init.c: 107: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 22206                           
 22207                           ; BSR set to: 1
 22208  0050B2  0EFA               	movlw	low STR_30
 22209  0050B4  0100               	movlb	0	; () banked
 22210  0050B6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22211  0050B8  0EFE               	movlw	high STR_30
 22212  0050BA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22213  0050BC  0E01               	movlw	1
 22214  0050BE  ECAC  F031         	call	_Uart_WriteConstString
 22215                           
 22216                           ;app_init.c: 108: currentState = MODEM_SET_CALLER_ID;
 22217  0050C2  0E02               	movlw	2
 22218  0050C4  D009               	goto	L36
 22219  0050C6                     
 22220                           ; BSR set to: 1
 22221                           ;app_init.c: 112: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 22222                           
 22223                           ; BSR set to: 1
 22224  0050C6  0EAA               	movlw	low STR_31
 22225  0050C8  0100               	movlb	0	; () banked
 22226  0050CA  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22227  0050CC  0EFF               	movlw	high STR_31
 22228  0050CE  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22229  0050D0  0E01               	movlw	1
 22230  0050D2  ECAC  F031         	call	_Uart_WriteConstString
 22231                           
 22232                           ;app_init.c: 113: currentState = MODEM_INIT_COMPLETE;
 22233  0050D6  0E03               	movlw	3
 22234  0050D8                     L36:
 22235  0050D8  0101               	movlb	1	; () banked
 22236  0050DA  6FD9               	movwf	initGprsModem@currentState& (0+255),b
 22237                           
 22238                           ;app_init.c: 114: break;
 22239  0050DC  D014               	goto	l2677
 22240  0050DE                     
 22241                           ; BSR set to: 1
 22242                           ;app_init.c: 117: currentState = MODEM_INIT;
 22243                           
 22244                           ; BSR set to: 1
 22245  0050DE  0E00               	movlw	0
 22246  0050E0  6FD9               	movwf	initGprsModem@currentState& (0+255),b
 22247                           
 22248                           ;app_init.c: 118: isInitialized = 1;
 22249  0050E2  0E01               	movlw	1
 22250  0050E4  0100               	movlb	0	; () banked
 22251  0050E6  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22252                           
 22253                           ; BSR set to: 0
 22254                           ;app_init.c: 123: }
 22255                           
 22256                           ; BSR set to: 0
 22257                           ;app_init.c: 122: break;
 22258                           
 22259                           ;app_init.c: 121: default:
 22260                           
 22261                           ;app_init.c: 119: break;
 22262  0050E8  D00E               	goto	l2677
 22263  0050EA                     l2671:
 22264                           
 22265                           ; BSR set to: 0
 22266                           
 22267                           ; BSR set to: 0
 22268  0050EA  0101               	movlb	1	; () banked
 22269  0050EC  51D9               	movf	initGprsModem@currentState& (0+255),w,b
 22270                           
 22271                           ; Switch size 1, requested type "space"
 22272                           ; Number of cases is 4, Range of values is 0 to 3
 22273                           ; switch strategies available:
 22274                           ; Name         Instructions Cycles
 22275                           ; simple_byte           13     7 (average)
 22276                           ;	Chosen strategy is simple_byte
 22277  0050EE  0A00               	xorlw	0	; case 0
 22278  0050F0  B4D8               	btfsc	status,2,c
 22279  0050F2  D7C6               	goto	l2672
 22280  0050F4  0A01               	xorlw	1	; case 1
 22281  0050F6  B4D8               	btfsc	status,2,c
 22282  0050F8  D7DC               	goto	l2678
 22283  0050FA  0A03               	xorlw	3	; case 2
 22284  0050FC  B4D8               	btfsc	status,2,c
 22285  0050FE  D7E3               	goto	l2679
 22286  005100  0A01               	xorlw	1	; case 3
 22287  005102  B4D8               	btfsc	status,2,c
 22288  005104  D7EC               	goto	l2680
 22289  005106                     l2677:
 22290                           
 22291                           ;app_init.c: 124: return isInitialized;
 22292                           
 22293                           ; BSR set to: 1
 22294  005106  0100               	movlb	0	; () banked
 22295  005108  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 22296  00510A  0012               	return	
 22297  00510C                     __end_of_initGprsModem:
 22298                           	opt stack 0
 22299                           tosu	equ	0xFFF
 22300                           tosh	equ	0xFFE
 22301                           tosl	equ	0xFFD
 22302                           pclath	equ	0xFFA
 22303                           tblptru	equ	0xFF8
 22304                           tblptrh	equ	0xFF7
 22305                           tblptrl	equ	0xFF6
 22306                           tablat	equ	0xFF5
 22307                           prodh	equ	0xFF4
 22308                           prodl	equ	0xFF3
 22309                           intcon	equ	0xFF2
 22310                           intcon2	equ	0xFF1
 22311                           intcon3	equ	0xFF0
 22312                           indf0	equ	0xFEF
 22313                           postinc0	equ	0xFEE
 22314                           plusw0	equ	0xFEB
 22315                           fsr0h	equ	0xFEA
 22316                           fsr0l	equ	0xFE9
 22317                           wreg	equ	0xFE8
 22318                           indf1	equ	0xFE7
 22319                           postinc1	equ	0xFE6
 22320                           postdec1	equ	0xFE5
 22321                           fsr1h	equ	0xFE2
 22322                           fsr1l	equ	0xFE1
 22323                           indf2	equ	0xFDF
 22324                           postinc2	equ	0xFDE
 22325                           postdec2	equ	0xFDD
 22326                           plusw2	equ	0xFDB
 22327                           fsr2h	equ	0xFDA
 22328                           fsr2l	equ	0xFD9
 22329                           status	equ	0xFD8
 22330                           
 22331 ;; *************** function _Mdm_SetSmsFormat *****************
 22332 ;; Defined at:
 22333 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22334 ;; Parameters:    Size  Location     Type
 22335 ;;  TextFormat      1    wreg     unsigned char 
 22336 ;; Auto vars:     Size  Location     Type
 22337 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 22338 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 22339 ;;  Index           1   35[BANK0 ] unsigned char 
 22340 ;; Return value:  Size  Location     Type
 22341 ;;                  1    wreg      void 
 22342 ;; Registers used:
 22343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22344 ;; Tracked objects:
 22345 ;;		On entry : 0/0
 22346 ;;		On exit  : 0/0
 22347 ;;		Unchanged: 0/0
 22348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22350 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22352 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22353 ;;Total ram usage:       22 bytes
 22354 ;; Hardware stack levels used:    1
 22355 ;; Hardware stack levels required when called:   13
 22356 ;; This function calls:
 22357 ;;		_Uart_WriteString
 22358 ;; This function is called by:
 22359 ;;		_initGprsModem
 22360 ;; This function uses a non-reentrant model
 22361 ;;
 22362                           
 22363                           	psect	text100
 22364  005FA0                     __ptext100:
 22365                           	opt stack 0
 22366  005FA0                     _Mdm_SetSmsFormat:
 22367                           	opt stack 12
 22368                           
 22369                           ; BSR set to: 0
 22370                           ;incstack = 0
 22371                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 22372  005FA0  0100               	movlb	0	; () banked
 22373  005FA2  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 22374                           
 22375                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 22376                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 22377  005FA4  0E00               	movlw	0
 22378  005FA6  0100               	movlb	0	; () banked
 22379  005FA8  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 22380                           
 22381                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 22382  005FAA  0E41               	movlw	65
 22383  005FAC  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 22384                           
 22385                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 22386  005FAE  0E54               	movlw	84
 22387  005FB0  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 22388                           
 22389                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 22390  005FB2  0E2B               	movlw	43
 22391  005FB4  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 22392                           
 22393                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 22394  005FB6  0E43               	movlw	67
 22395  005FB8  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 22396                           
 22397                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22398  005FBA  0E4D               	movlw	77
 22399  005FBC  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22400                           
 22401                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22402  005FBE  0E47               	movlw	71
 22403  005FC0  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22404                           
 22405                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22406  005FC2  0E46               	movlw	70
 22407  005FC4  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22408                           
 22409                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22410  005FC6  0E3D               	movlw	61
 22411  005FC8  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22412                           
 22413                           ; BSR set to: 0
 22414                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22415  005FCA  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22416  005FCC  A4D8               	btfss	status,2,c
 22417  005FCE  D002               	goto	l1121
 22418                           
 22419                           ; BSR set to: 0
 22420                           ;mdm_gsm_gprs.c: 854: {
 22421                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22422  005FD0  0E31               	movlw	49
 22423  005FD2  D001               	goto	L37
 22424  005FD4                     l1121:
 22425                           
 22426                           ; BSR set to: 0
 22427                           ;mdm_gsm_gprs.c: 857: else
 22428                           ;mdm_gsm_gprs.c: 858: {
 22429                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22430                           
 22431                           ; BSR set to: 0
 22432  005FD4  0E30               	movlw	48
 22433  005FD6                     L37:
 22434  005FD6  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22435                           
 22436                           ; BSR set to: 0
 22437                           ;mdm_gsm_gprs.c: 860: }
 22438                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22439  005FD8  0E0D               	movlw	13
 22440  005FDA  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22441                           
 22442                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22443  005FDC  0E00               	movlw	0
 22444  005FDE  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22445                           
 22446                           ; BSR set to: 0
 22447                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22448  005FE0  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22449  005FE2  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22450  005FE4  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22451  005FE6  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22452  005FE8  0E01               	movlw	1
 22453  005FEA  EC6C  F032         	call	_Uart_WriteString
 22454  005FEE  0012               	return		;funcret
 22455  005FF0                     __end_of_Mdm_SetSmsFormat:
 22456                           	opt stack 0
 22457                           tosu	equ	0xFFF
 22458                           tosh	equ	0xFFE
 22459                           tosl	equ	0xFFD
 22460                           pclath	equ	0xFFA
 22461                           tblptru	equ	0xFF8
 22462                           tblptrh	equ	0xFF7
 22463                           tblptrl	equ	0xFF6
 22464                           tablat	equ	0xFF5
 22465                           prodh	equ	0xFF4
 22466                           prodl	equ	0xFF3
 22467                           intcon	equ	0xFF2
 22468                           intcon2	equ	0xFF1
 22469                           intcon3	equ	0xFF0
 22470                           indf0	equ	0xFEF
 22471                           postinc0	equ	0xFEE
 22472                           plusw0	equ	0xFEB
 22473                           fsr0h	equ	0xFEA
 22474                           fsr0l	equ	0xFE9
 22475                           wreg	equ	0xFE8
 22476                           indf1	equ	0xFE7
 22477                           postinc1	equ	0xFE6
 22478                           postdec1	equ	0xFE5
 22479                           fsr1h	equ	0xFE2
 22480                           fsr1l	equ	0xFE1
 22481                           indf2	equ	0xFDF
 22482                           postinc2	equ	0xFDE
 22483                           postdec2	equ	0xFDD
 22484                           plusw2	equ	0xFDB
 22485                           fsr2h	equ	0xFDA
 22486                           fsr2l	equ	0xFD9
 22487                           status	equ	0xFD8
 22488                           
 22489 ;; *************** function _initEeprom *****************
 22490 ;; Defined at:
 22491 ;;		line 131 in file "../Source/c/04_App/app_init.c"
 22492 ;; Parameters:    Size  Location     Type
 22493 ;;		None
 22494 ;; Auto vars:     Size  Location     Type
 22495 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22496 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22497 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22498 ;; Return value:  Size  Location     Type
 22499 ;;                  1    wreg      unsigned char 
 22500 ;; Registers used:
 22501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22502 ;; Tracked objects:
 22503 ;;		On entry : 0/0
 22504 ;;		On exit  : 0/0
 22505 ;;		Unchanged: 0/0
 22506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22508 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22510 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22511 ;;Total ram usage:        3 bytes
 22512 ;; Hardware stack levels used:    1
 22513 ;; Hardware stack levels required when called:   17
 22514 ;; This function calls:
 22515 ;;		_Eeprom_Read
 22516 ;; This function is called by:
 22517 ;;		_initFsm
 22518 ;; This function uses a non-reentrant model
 22519 ;;
 22520                           
 22521                           	psect	text101
 22522  00510C                     __ptext101:
 22523                           	opt stack 0
 22524  00510C                     _initEeprom:
 22525                           	opt stack 9
 22526                           
 22527                           ;app_init.c: 133: const uint8_t addressToRead = 0;
 22528                           
 22529                           ;incstack = 0
 22530  00510C  0E00               	movlw	0
 22531  00510E  0101               	movlb	1	; () banked
 22532  005110  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22533                           
 22534                           ;app_init.c: 134: static eepromStates currentState = EEPROM_INIT;
 22535                           ;app_init.c: 135: EepromStsType memoryOpResult = OP_PENDING;
 22536  005112  0E02               	movlw	2
 22537  005114  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22538                           
 22539                           ;app_init.c: 136: bool isInitialized = 0;
 22540  005116  0E00               	movlw	0
 22541  005118  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22542                           
 22543                           ;app_init.c: 138: switch (currentState)
 22544  00511A  D034               	goto	l2687
 22545  00511C                     
 22546                           ; BSR set to: 1
 22547                           ;app_init.c: 141: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 22548                           
 22549                           ; BSR set to: 1
 22550  00511C  0EAB               	movlw	low _memoryPreamble
 22551  00511E  0100               	movlb	0	; () banked
 22552  005120  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22553  005122  0E03               	movlw	high _memoryPreamble
 22554  005124  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22555  005126  0E04               	movlw	4
 22556  005128  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22557  00512A  0E00               	movlw	0
 22558  00512C  ECB0  F02E         	call	_Eeprom_Read
 22559  005130  0101               	movlb	1	; () banked
 22560  005132  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22561                           
 22562                           ; BSR set to: 1
 22563                           ;app_init.c: 142: if (memoryOpResult != OP_PENDING)
 22564  005134  0E02               	movlw	2
 22565  005136  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22566  005138  B4D8               	btfsc	status,2,c
 22567  00513A  D02E               	goto	l2692
 22568                           
 22569                           ; BSR set to: 1
 22570                           ;app_init.c: 143: {
 22571                           ;app_init.c: 144: if (memoryPreamble[0] == 'U' &&
 22572                           ;app_init.c: 145: memoryPreamble[1] == 'S' &&
 22573                           ;app_init.c: 146: memoryPreamble[2] == 'I' &&
 22574                           ;app_init.c: 147: memoryPreamble[3] == 'M')
 22575  00513C  0E55               	movlw	85
 22576  00513E  0103               	movlb	3	; () banked
 22577  005140  19AB               	xorwf	_memoryPreamble& (0+255),w,b
 22578  005142  A4D8               	btfss	status,2,c
 22579  005144  D00E               	goto	l2690
 22580                           
 22581                           ; BSR set to: 3
 22582  005146  0E53               	movlw	83
 22583  005148  19AC               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22584  00514A  A4D8               	btfss	status,2,c
 22585  00514C  D00A               	goto	l2690
 22586                           
 22587                           ; BSR set to: 3
 22588  00514E  0E49               	movlw	73
 22589  005150  19AD               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22590  005152  A4D8               	btfss	status,2,c
 22591  005154  D006               	goto	l2690
 22592                           
 22593                           ; BSR set to: 3
 22594  005156  0E4D               	movlw	77
 22595  005158  19AE               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22596  00515A  A4D8               	btfss	status,2,c
 22597  00515C  D002               	goto	l2690
 22598                           
 22599                           ; BSR set to: 3
 22600                           ;app_init.c: 148: {
 22601                           ;app_init.c: 149: currentState = EEPROM_NOT_EMPTY;
 22602  00515E  0E02               	movlw	2
 22603  005160  D001               	goto	L38
 22604  005162                     l2690:
 22605                           
 22606                           ;app_init.c: 151: else
 22607                           ;app_init.c: 152: {
 22608                           ;app_init.c: 153: currentState = EEPROM_EMPTY;
 22609                           
 22610                           ; BSR set to: 1
 22611  005162  0E01               	movlw	1
 22612  005164                     L38:
 22613  005164  0101               	movlb	1	; () banked
 22614  005166  6FD8               	movwf	initEeprom@currentState& (0+255),b
 22615                           
 22616                           ; BSR set to: 1
 22617                           ;app_init.c: 154: }
 22618                           ;app_init.c: 155: }
 22619                           ;app_init.c: 156: break;
 22620                           
 22621                           ; BSR set to: 1
 22622  005168  D017               	goto	l2692
 22623  00516A                     
 22624                           ; BSR set to: 1
 22625                           ;app_init.c: 159: currentState = EEPROM_INIT;
 22626                           
 22627                           ; BSR set to: 1
 22628  00516A  0E00               	movlw	0
 22629  00516C  6FD8               	movwf	initEeprom@currentState& (0+255),b
 22630                           
 22631                           ;app_init.c: 160: isInitialized = 1;
 22632  00516E  0E01               	movlw	1
 22633  005170  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22634                           
 22635                           ;app_init.c: 161: isMemoryEmpty = 1;
 22636  005172  0E01               	movlw	1
 22637  005174  D005               	goto	L39
 22638  005176                     
 22639                           ; BSR set to: 1
 22640                           ;app_init.c: 165: currentState = EEPROM_INIT;
 22641                           
 22642                           ; BSR set to: 1
 22643  005176  0E00               	movlw	0
 22644  005178  6FD8               	movwf	initEeprom@currentState& (0+255),b
 22645                           
 22646                           ;app_init.c: 166: isInitialized = 1;
 22647  00517A  0E01               	movlw	1
 22648  00517C  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22649                           
 22650                           ;app_init.c: 167: isMemoryEmpty = 0;
 22651  00517E  0E00               	movlw	0
 22652  005180                     L39:
 22653  005180  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 22654                           
 22655                           ; BSR set to: 1
 22656                           ;app_init.c: 172: }
 22657                           
 22658                           ; BSR set to: 1
 22659                           ;app_init.c: 171: break;
 22660                           
 22661                           ;app_init.c: 170: default:
 22662                           
 22663                           ;app_init.c: 168: break;
 22664  005182  D00A               	goto	l2692
 22665  005184                     l2687:
 22666                           
 22667                           ; BSR set to: 1
 22668                           
 22669                           ; BSR set to: 1
 22670  005184  51D8               	movf	initEeprom@currentState& (0+255),w,b
 22671                           
 22672                           ; Switch size 1, requested type "space"
 22673                           ; Number of cases is 3, Range of values is 0 to 2
 22674                           ; switch strategies available:
 22675                           ; Name         Instructions Cycles
 22676                           ; simple_byte           10     6 (average)
 22677                           ;	Chosen strategy is simple_byte
 22678  005186  0A00               	xorlw	0	; case 0
 22679  005188  B4D8               	btfsc	status,2,c
 22680  00518A  D7C8               	goto	l2688
 22681  00518C  0A01               	xorlw	1	; case 1
 22682  00518E  B4D8               	btfsc	status,2,c
 22683  005190  D7EC               	goto	l2693
 22684  005192  0A03               	xorlw	3	; case 2
 22685  005194  B4D8               	btfsc	status,2,c
 22686  005196  D7EF               	goto	l2694
 22687  005198                     l2692:
 22688                           
 22689                           ; BSR set to: 1
 22690                           ;app_init.c: 173: return isInitialized;
 22691                           
 22692                           ; BSR set to: 1
 22693  005198  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 22694  00519A  0012               	return	
 22695  00519C                     __end_of_initEeprom:
 22696                           	opt stack 0
 22697                           tosu	equ	0xFFF
 22698                           tosh	equ	0xFFE
 22699                           tosl	equ	0xFFD
 22700                           pclath	equ	0xFFA
 22701                           tblptru	equ	0xFF8
 22702                           tblptrh	equ	0xFF7
 22703                           tblptrl	equ	0xFF6
 22704                           tablat	equ	0xFF5
 22705                           prodh	equ	0xFF4
 22706                           prodl	equ	0xFF3
 22707                           intcon	equ	0xFF2
 22708                           intcon2	equ	0xFF1
 22709                           intcon3	equ	0xFF0
 22710                           indf0	equ	0xFEF
 22711                           postinc0	equ	0xFEE
 22712                           plusw0	equ	0xFEB
 22713                           fsr0h	equ	0xFEA
 22714                           fsr0l	equ	0xFE9
 22715                           wreg	equ	0xFE8
 22716                           indf1	equ	0xFE7
 22717                           postinc1	equ	0xFE6
 22718                           postdec1	equ	0xFE5
 22719                           fsr1h	equ	0xFE2
 22720                           fsr1l	equ	0xFE1
 22721                           indf2	equ	0xFDF
 22722                           postinc2	equ	0xFDE
 22723                           postdec2	equ	0xFDD
 22724                           plusw2	equ	0xFDB
 22725                           fsr2h	equ	0xFDA
 22726                           fsr2l	equ	0xFD9
 22727                           status	equ	0xFD8
 22728                           
 22729 ;; *************** function _detectUsbNumber *****************
 22730 ;; Defined at:
 22731 ;;		line 298 in file "../Source/c/04_App/app_init.c"
 22732 ;; Parameters:    Size  Location     Type
 22733 ;;  isCmdSuccess    2   57[BANK0 ] PTR unsigned char 
 22734 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 22735 ;; Auto vars:     Size  Location     Type
 22736 ;;  isActionPerf    1   59[BANK0 ] unsigned char 
 22737 ;; Return value:  Size  Location     Type
 22738 ;;                  1    wreg      unsigned char 
 22739 ;; Registers used:
 22740 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22741 ;; Tracked objects:
 22742 ;;		On entry : 0/0
 22743 ;;		On exit  : 0/0
 22744 ;;		Unchanged: 0/0
 22745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22746 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22749 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22750 ;;Total ram usage:        3 bytes
 22751 ;; Hardware stack levels used:    1
 22752 ;; Hardware stack levels required when called:   15
 22753 ;; This function calls:
 22754 ;;		_saveNumberInMemory
 22755 ;;		_triggerVisualEffect
 22756 ;; This function is called by:
 22757 ;;		_MyApp_Task
 22758 ;;		_initFsm
 22759 ;; This function uses a non-reentrant model
 22760 ;;
 22761                           
 22762                           	psect	text102
 22763  00639C                     __ptext102:
 22764                           	opt stack 0
 22765  00639C                     _detectUsbNumber:
 22766                           	opt stack 11
 22767                           
 22768                           ;app_init.c: 300: bool isActionPerformed = 0;
 22769                           
 22770                           ; BSR set to: 1
 22771                           ;incstack = 0
 22772  00639C  0E00               	movlw	0
 22773  00639E  0100               	movlb	0	; () banked
 22774  0063A0  6F9B               	movwf	detectUsbNumber@isActionPerformed& (0+255),b
 22775                           
 22776                           ; BSR set to: 0
 22777                           ;app_init.c: 302: if (IsUsbNumberReceived == 1)
 22778  0063A2  0102               	movlb	2	; () banked
 22779  0063A4  05ED               	decf	_IsUsbNumberReceived& (0+255),w,b
 22780  0063A6  A4D8               	btfss	status,2,c
 22781  0063A8  D016               	goto	l2734
 22782                           
 22783                           ; BSR set to: 2
 22784                           ;app_init.c: 303: {
 22785                           ;app_init.c: 304: saveNumberInMemory(16, UsbMasterPhoneNumber);
 22786  0063AA  0EAC               	movlw	low _UsbMasterPhoneNumber
 22787  0063AC  0100               	movlb	0	; () banked
 22788  0063AE  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 22789  0063B0  0E04               	movlw	high _UsbMasterPhoneNumber
 22790  0063B2  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 22791  0063B4  0E10               	movlw	16
 22792  0063B6  ECE1  F035         	call	_saveNumberInMemory
 22793                           
 22794                           ;app_init.c: 305: *isCmdSuccessfull = 1;
 22795  0063BA  C099  FFD9         	movff	detectUsbNumber@isCmdSuccessfull,fsr2l
 22796  0063BE  C09A  FFDA         	movff	detectUsbNumber@isCmdSuccessfull+1,fsr2h
 22797  0063C2  0E01               	movlw	1
 22798  0063C4  6EDF               	movwf	indf2,c
 22799                           
 22800                           ;app_init.c: 306: triggerVisualEffect();
 22801  0063C6  ECA0  F036         	call	_triggerVisualEffect	;wreg free
 22802                           
 22803                           ;app_init.c: 307: isActionPerformed = 1;
 22804  0063CA  0E01               	movlw	1
 22805  0063CC  0100               	movlb	0	; () banked
 22806  0063CE  6F9B               	movwf	detectUsbNumber@isActionPerformed& (0+255),b
 22807                           
 22808                           ; BSR set to: 0
 22809                           ;app_init.c: 308: IsUsbNumberReceived = 0;
 22810  0063D0  0E00               	movlw	0
 22811  0063D2  0102               	movlb	2	; () banked
 22812  0063D4  6FED               	movwf	_IsUsbNumberReceived& (0+255),b
 22813  0063D6                     l2734:
 22814                           
 22815                           ; BSR set to: 2
 22816                           ;app_init.c: 309: }
 22817                           ;app_init.c: 310: return isActionPerformed;
 22818                           
 22819                           ; BSR set to: 2
 22820  0063D6  0100               	movlb	0	; () banked
 22821  0063D8  519B               	movf	detectUsbNumber@isActionPerformed& (0+255),w,b
 22822  0063DA  0012               	return	
 22823  0063DC                     __end_of_detectUsbNumber:
 22824                           	opt stack 0
 22825                           tosu	equ	0xFFF
 22826                           tosh	equ	0xFFE
 22827                           tosl	equ	0xFFD
 22828                           pclath	equ	0xFFA
 22829                           tblptru	equ	0xFF8
 22830                           tblptrh	equ	0xFF7
 22831                           tblptrl	equ	0xFF6
 22832                           tablat	equ	0xFF5
 22833                           prodh	equ	0xFF4
 22834                           prodl	equ	0xFF3
 22835                           intcon	equ	0xFF2
 22836                           intcon2	equ	0xFF1
 22837                           intcon3	equ	0xFF0
 22838                           indf0	equ	0xFEF
 22839                           postinc0	equ	0xFEE
 22840                           plusw0	equ	0xFEB
 22841                           fsr0h	equ	0xFEA
 22842                           fsr0l	equ	0xFE9
 22843                           wreg	equ	0xFE8
 22844                           indf1	equ	0xFE7
 22845                           postinc1	equ	0xFE6
 22846                           postdec1	equ	0xFE5
 22847                           fsr1h	equ	0xFE2
 22848                           fsr1l	equ	0xFE1
 22849                           indf2	equ	0xFDF
 22850                           postinc2	equ	0xFDE
 22851                           postdec2	equ	0xFDD
 22852                           plusw2	equ	0xFDB
 22853                           fsr2h	equ	0xFDA
 22854                           fsr2l	equ	0xFD9
 22855                           status	equ	0xFD8
 22856                           
 22857 ;; *************** function _triggerVisualEffect *****************
 22858 ;; Defined at:
 22859 ;;		line 93 in file "../Source/c/04_App/app_utils.c"
 22860 ;; Parameters:    Size  Location     Type
 22861 ;;		None
 22862 ;; Auto vars:     Size  Location     Type
 22863 ;;		None
 22864 ;; Return value:  Size  Location     Type
 22865 ;;                  1    wreg      void 
 22866 ;; Registers used:
 22867 ;;		wreg, status,2
 22868 ;; Tracked objects:
 22869 ;;		On entry : 0/0
 22870 ;;		On exit  : 0/0
 22871 ;;		Unchanged: 0/0
 22872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22877 ;;Total ram usage:        0 bytes
 22878 ;; Hardware stack levels used:    1
 22879 ;; Hardware stack levels required when called:   11
 22880 ;; This function calls:
 22881 ;;		Nothing
 22882 ;; This function is called by:
 22883 ;;		_MyApp_Task
 22884 ;;		_detectUsbNumber
 22885 ;; This function uses a non-reentrant model
 22886 ;;
 22887                           
 22888                           	psect	text103
 22889  006D40                     __ptext103:
 22890                           	opt stack 0
 22891  006D40                     _triggerVisualEffect:
 22892                           	opt stack 16
 22893                           
 22894                           ;app_utils.c: 95: blinkInSeconds = 0;
 22895                           
 22896                           ; BSR set to: 0
 22897                           ;incstack = 0
 22898  006D40  0E00               	movlw	0
 22899  006D42  0103               	movlb	3	; () banked
 22900  006D44  6FFE               	movwf	(_blinkInSeconds+1)& (0+255),b
 22901  006D46  0E00               	movlw	0
 22902  006D48  6FFD               	movwf	_blinkInSeconds& (0+255),b
 22903                           
 22904                           ; BSR set to: 3
 22905  006D4A  0012               	return		;funcret
 22906  006D4C                     __end_of_triggerVisualEffect:
 22907                           	opt stack 0
 22908                           tosu	equ	0xFFF
 22909                           tosh	equ	0xFFE
 22910                           tosl	equ	0xFFD
 22911                           pclath	equ	0xFFA
 22912                           tblptru	equ	0xFF8
 22913                           tblptrh	equ	0xFF7
 22914                           tblptrl	equ	0xFF6
 22915                           tablat	equ	0xFF5
 22916                           prodh	equ	0xFF4
 22917                           prodl	equ	0xFF3
 22918                           intcon	equ	0xFF2
 22919                           intcon2	equ	0xFF1
 22920                           intcon3	equ	0xFF0
 22921                           indf0	equ	0xFEF
 22922                           postinc0	equ	0xFEE
 22923                           plusw0	equ	0xFEB
 22924                           fsr0h	equ	0xFEA
 22925                           fsr0l	equ	0xFE9
 22926                           wreg	equ	0xFE8
 22927                           indf1	equ	0xFE7
 22928                           postinc1	equ	0xFE6
 22929                           postdec1	equ	0xFE5
 22930                           fsr1h	equ	0xFE2
 22931                           fsr1l	equ	0xFE1
 22932                           indf2	equ	0xFDF
 22933                           postinc2	equ	0xFDE
 22934                           postdec2	equ	0xFDD
 22935                           plusw2	equ	0xFDB
 22936                           fsr2h	equ	0xFDA
 22937                           fsr2l	equ	0xFD9
 22938                           status	equ	0xFD8
 22939                           
 22940 ;; *************** function _detectCmd *****************
 22941 ;; Defined at:
 22942 ;;		line 115 in file "../Source/c/04_App/app.c"
 22943 ;; Parameters:    Size  Location     Type
 22944 ;;		None
 22945 ;; Auto vars:     Size  Location     Type
 22946 ;;  currentState    1   53[BANK0 ] enum E9020
 22947 ;; Return value:  Size  Location     Type
 22948 ;;                  1    wreg      enum E9020
 22949 ;; Registers used:
 22950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22951 ;; Tracked objects:
 22952 ;;		On entry : 0/0
 22953 ;;		On exit  : 0/0
 22954 ;;		Unchanged: 0/0
 22955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22959 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22960 ;;Total ram usage:        1 bytes
 22961 ;; Hardware stack levels used:    1
 22962 ;; Hardware stack levels required when called:   14
 22963 ;; This function calls:
 22964 ;;		_GetCallerNumber
 22965 ;;		_GetLastInteractionNumber
 22966 ;;		_Mdm_GetSmsData
 22967 ;;		_Mdm_HangPhoneCall
 22968 ;;		_Mdm_IsRinging
 22969 ;;		_Mdm_IsSmsReceived
 22970 ;;		_Mdm_RequestSmsData
 22971 ;;		_StringCopy
 22972 ;;		_Uart_WriteConstString
 22973 ;;		_parseCommand
 22974 ;; This function is called by:
 22975 ;;		_MyApp_Task
 22976 ;; This function uses a non-reentrant model
 22977 ;;
 22978                           
 22979                           	psect	text104
 22980  004C5A                     __ptext104:
 22981                           	opt stack 0
 22982  004C5A                     _detectCmd:
 22983                           	opt stack 13
 22984                           
 22985                           ;app.c: 117: gateFsmStates currentState = GATE_WAIT_EVENT;
 22986                           
 22987                           ; BSR set to: 3
 22988                           ;incstack = 0
 22989  004C5A  0E01               	movlw	1
 22990  004C5C  0100               	movlb	0	; () banked
 22991  004C5E  6F95               	movwf	detectCmd@currentState& (0+255),b
 22992                           
 22993                           ; BSR set to: 0
 22994                           ;app.c: 118: if (Mdm_IsSmsReceived())
 22995  004C60  ECA5  F034         	call	_Mdm_IsSmsReceived	;wreg free
 22996  004C64  0900               	iorlw	0
 22997  004C66  A4D8               	btfss	status,2,c
 22998                           
 22999                           ;app.c: 119: {
 23000                           ;app.c: 120: Mdm_RequestSmsData();
 23001  004C68  EC73  F036         	call	_Mdm_RequestSmsData	;wreg free
 23002                           
 23003                           ;app.c: 121: }
 23004                           ;app.c: 122: if (Mdm_GetSmsData(smsText) == SmsDataReady)
 23005  004C6C  0E84               	movlw	low _smsText
 23006  004C6E  0100               	movlb	0	; () banked
 23007  004C70  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
 23008  004C72  0E04               	movlw	high _smsText
 23009  004C74  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
 23010  004C76  ECF7  F02B         	call	_Mdm_GetSmsData	;wreg free
 23011  004C7A  06E8               	decf	wreg,f,c
 23012  004C7C  A4D8               	btfss	status,2,c
 23013  004C7E  D01D               	goto	l2592
 23014                           
 23015                           ;app.c: 123: {
 23016                           ;app.c: 124: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
 23017  004C80  0E2F               	movlw	low STR_29
 23018  004C82  0100               	movlb	0	; () banked
 23019  004C84  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23020  004C86  0EFF               	movlw	high STR_29
 23021  004C88  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23022  004C8A  0E01               	movlw	1
 23023  004C8C  ECAC  F031         	call	_Uart_WriteConstString
 23024                           
 23025                           ;app.c: 125: currentState = parseCommand();
 23026  004C90  EC52  F018         	call	_parseCommand	;wreg free
 23027  004C94  0100               	movlb	0	; () banked
 23028  004C96  6F95               	movwf	detectCmd@currentState& (0+255),b
 23029                           
 23030                           ; BSR set to: 0
 23031                           ;app.c: 126: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
 23032  004C98  ECA6  F036         	call	_GetLastInteractionNumber	;wreg free
 23033  004C9C  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
 23034  004CA0  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
 23035  004CA4  0E46               	movlw	low _receivedNumber
 23036  004CA6  0100               	movlb	0	; () banked
 23037  004CA8  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23038  004CAA  0E03               	movlw	high _receivedNumber
 23039  004CAC  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23040  004CAE  0E00               	movlw	0
 23041  004CB0  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23042  004CB2  0E0D               	movlw	13
 23043  004CB4  6F89               	movwf	StringCopy@Len& (0+255),b
 23044  004CB6  ECC4  F02C         	call	_StringCopy	;wreg free
 23045  004CBA                     l2592:
 23046                           
 23047                           ;app.c: 127: }
 23048                           ;app.c: 128: if (Mdm_IsRinging())
 23049  004CBA  ECB7  F034         	call	_Mdm_IsRinging	;wreg free
 23050  004CBE  0900               	iorlw	0
 23051  004CC0  B4D8               	btfsc	status,2,c
 23052  004CC2  D016               	goto	l2593
 23053                           
 23054                           ;app.c: 129: {
 23055                           ;app.c: 130: Mdm_HangPhoneCall();
 23056  004CC4  EC51  F036         	call	_Mdm_HangPhoneCall	;wreg free
 23057                           
 23058                           ;app.c: 131: currentState = GATE_TRIGGER_CMD;
 23059  004CC8  0E04               	movlw	4
 23060  004CCA  0100               	movlb	0	; () banked
 23061  004CCC  6F95               	movwf	detectCmd@currentState& (0+255),b
 23062                           
 23063                           ; BSR set to: 0
 23064                           ;app.c: 132: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
 23065  004CCE  EC1C  F033         	call	_GetCallerNumber	;wreg free
 23066  004CD2  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
 23067  004CD6  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
 23068  004CDA  0E46               	movlw	low _receivedNumber
 23069  004CDC  0100               	movlb	0	; () banked
 23070  004CDE  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23071  004CE0  0E03               	movlw	high _receivedNumber
 23072  004CE2  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23073  004CE4  0E00               	movlw	0
 23074  004CE6  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23075  004CE8  0E0D               	movlw	13
 23076  004CEA  6F89               	movwf	StringCopy@Len& (0+255),b
 23077  004CEC  ECC4  F02C         	call	_StringCopy	;wreg free
 23078  004CF0                     l2593:
 23079                           
 23080                           ;app.c: 133: }
 23081                           ;app.c: 134: return currentState;
 23082  004CF0  0100               	movlb	0	; () banked
 23083  004CF2  5195               	movf	detectCmd@currentState& (0+255),w,b
 23084  004CF4  0012               	return	
 23085  004CF6                     __end_of_detectCmd:
 23086                           	opt stack 0
 23087                           tosu	equ	0xFFF
 23088                           tosh	equ	0xFFE
 23089                           tosl	equ	0xFFD
 23090                           pclath	equ	0xFFA
 23091                           tblptru	equ	0xFF8
 23092                           tblptrh	equ	0xFF7
 23093                           tblptrl	equ	0xFF6
 23094                           tablat	equ	0xFF5
 23095                           prodh	equ	0xFF4
 23096                           prodl	equ	0xFF3
 23097                           intcon	equ	0xFF2
 23098                           intcon2	equ	0xFF1
 23099                           intcon3	equ	0xFF0
 23100                           indf0	equ	0xFEF
 23101                           postinc0	equ	0xFEE
 23102                           plusw0	equ	0xFEB
 23103                           fsr0h	equ	0xFEA
 23104                           fsr0l	equ	0xFE9
 23105                           wreg	equ	0xFE8
 23106                           indf1	equ	0xFE7
 23107                           postinc1	equ	0xFE6
 23108                           postdec1	equ	0xFE5
 23109                           fsr1h	equ	0xFE2
 23110                           fsr1l	equ	0xFE1
 23111                           indf2	equ	0xFDF
 23112                           postinc2	equ	0xFDE
 23113                           postdec2	equ	0xFDD
 23114                           plusw2	equ	0xFDB
 23115                           fsr2h	equ	0xFDA
 23116                           fsr2l	equ	0xFD9
 23117                           status	equ	0xFD8
 23118                           
 23119 ;; *************** function _parseCommand *****************
 23120 ;; Defined at:
 23121 ;;		line 75 in file "../Source/c/04_App/app.c"
 23122 ;; Parameters:    Size  Location     Type
 23123 ;;		None
 23124 ;; Auto vars:     Size  Location     Type
 23125 ;;  resetCmd        4   48[BANK0 ] const unsigned char [4]
 23126 ;;  deleteNumber    4   44[BANK0 ] const unsigned char [4]
 23127 ;;  addNumberCmd    4   40[BANK0 ] const unsigned char [4]
 23128 ;;  state           1   52[BANK0 ] enum E9020
 23129 ;; Return value:  Size  Location     Type
 23130 ;;                  1    wreg      enum E9020
 23131 ;; Registers used:
 23132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23133 ;; Tracked objects:
 23134 ;;		On entry : 0/0
 23135 ;;		On exit  : 0/0
 23136 ;;		Unchanged: 0/0
 23137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23139 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23141 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23142 ;;Total ram usage:       13 bytes
 23143 ;; Hardware stack levels used:    1
 23144 ;; Hardware stack levels required when called:   12
 23145 ;; This function calls:
 23146 ;;		_StringCompare
 23147 ;;		_isNumberValid
 23148 ;; This function is called by:
 23149 ;;		_detectCmd
 23150 ;; This function uses a non-reentrant model
 23151 ;;
 23152                           
 23153                           	psect	text105
 23154  0030A4                     __ptext105:
 23155                           	opt stack 0
 23156  0030A4                     _parseCommand:
 23157                           	opt stack 14
 23158                           
 23159                           ;app.c: 77: const uint8_t addNumberCmd[] = {'A', 'D', 'D', ';'};
 23160                           
 23161                           ; BSR set to: 0
 23162                           ;incstack = 0
 23163  0030A4  0E2A               	movlw	low parseCommand@F9034
 23164  0030A6  6EF6               	movwf	tblptrl,c
 23165  0030A8                     	if	1	;There is more than 1 active tblptr byte
 23166  0030A8  0EFC               	movlw	high parseCommand@F9034
 23167  0030AA  6EF7               	movwf	tblptrh,c
 23168  0030AC                     	endif
 23169  0030AC                     	if	0	;There are less than 3 active tblptr bytes
 23170  0030AC                     	endif
 23171  0030AC  0009               	tblrd		*+
 23172  0030AE  CFF5 F088          	movff	tablat,parseCommand@addNumberCmd
 23173  0030B2  0009               	tblrd		*+
 23174  0030B4  CFF5 F089          	movff	tablat,parseCommand@addNumberCmd+1
 23175  0030B8  0009               	tblrd		*+
 23176  0030BA  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd+2
 23177  0030BE  000A               	tblrd		*-
 23178  0030C0  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+3
 23179                           
 23180                           ;app.c: 78: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L', ';'};
 23181  0030C4  0E26               	movlw	low parseCommand@F9036
 23182  0030C6  6EF6               	movwf	tblptrl,c
 23183  0030C8                     	if	1	;There is more than 1 active tblptr byte
 23184  0030C8  0EFC               	movlw	high parseCommand@F9036
 23185  0030CA  6EF7               	movwf	tblptrh,c
 23186  0030CC                     	endif
 23187  0030CC                     	if	0	;There are less than 3 active tblptr bytes
 23188  0030CC                     	endif
 23189  0030CC  0009               	tblrd		*+
 23190  0030CE  CFF5 F08C          	movff	tablat,parseCommand@deleteNumberCmd
 23191  0030D2  0009               	tblrd		*+
 23192  0030D4  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd+1
 23193  0030D8  0009               	tblrd		*+
 23194  0030DA  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+2
 23195  0030DE  000A               	tblrd		*-
 23196  0030E0  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+3
 23197                           
 23198                           ;app.c: 79: const uint8_t resetCmd[] = {'R', 'E', 'S', ';'};
 23199  0030E4  0E22               	movlw	low parseCommand@F9038
 23200  0030E6  6EF6               	movwf	tblptrl,c
 23201  0030E8                     	if	1	;There is more than 1 active tblptr byte
 23202  0030E8  0EFC               	movlw	high parseCommand@F9038
 23203  0030EA  6EF7               	movwf	tblptrh,c
 23204  0030EC                     	endif
 23205  0030EC                     	if	0	;There are less than 3 active tblptr bytes
 23206  0030EC                     	endif
 23207  0030EC  0009               	tblrd		*+
 23208  0030EE  CFF5 F090          	movff	tablat,parseCommand@resetCmd
 23209  0030F2  0009               	tblrd		*+
 23210  0030F4  CFF5 F091          	movff	tablat,parseCommand@resetCmd+1
 23211  0030F8  0009               	tblrd		*+
 23212  0030FA  CFF5 F092          	movff	tablat,parseCommand@resetCmd+2
 23213  0030FE  000A               	tblrd		*-
 23214  003100  CFF5 F093          	movff	tablat,parseCommand@resetCmd+3
 23215                           
 23216                           ;app.c: 80: gateFsmStates state = GATE_WAIT_EVENT;
 23217  003104  0E01               	movlw	1
 23218  003106  0100               	movlb	0	; () banked
 23219  003108  6F94               	movwf	parseCommand@state& (0+255),b
 23220                           
 23221                           ; BSR set to: 0
 23222                           ;app.c: 82: if (StringCompare(smsText, addNumberCmd, sizeof(addNumberCmd)))
 23223  00310A  0E84               	movlw	low _smsText
 23224  00310C  6F7D               	movwf	StringCompare@String1& (0+255),b
 23225  00310E  0E04               	movlw	high _smsText
 23226  003110  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23227  003112  0E88               	movlw	low parseCommand@addNumberCmd
 23228  003114  6F7F               	movwf	StringCompare@String2& (0+255),b
 23229  003116  0E00               	movlw	high parseCommand@addNumberCmd
 23230  003118  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23231  00311A  0E00               	movlw	0
 23232  00311C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23233  00311E  0E04               	movlw	4
 23234  003120  6F81               	movwf	StringCompare@Len& (0+255),b
 23235  003122  EC57  F02F         	call	_StringCompare	;wreg free
 23236  003126  0900               	iorlw	0
 23237  003128  B4D8               	btfsc	status,2,c
 23238  00312A  D00E               	goto	l2578
 23239                           
 23240                           ;app.c: 83: {
 23241                           ;app.c: 84: if (!isNumberValid(smsText + 4))
 23242  00312C  0E88               	movlw	low (_smsText+4)
 23243  00312E  0100               	movlb	0	; () banked
 23244  003130  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 23245  003132  0E04               	movlw	high (_smsText+4)
 23246  003134  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 23247  003136  EC91  F02C         	call	_isNumberValid	;wreg free
 23248  00313A  0900               	iorlw	0
 23249  00313C  A4D8               	btfss	status,2,c
 23250  00313E  D002               	goto	l2579
 23251  003140                     u14630:
 23252                           
 23253                           ;app.c: 85: {
 23254                           ;app.c: 86: state = GATE_WAIT_EVENT;
 23255  003140  0E01               	movlw	1
 23256  003142  D033               	goto	L43
 23257  003144                     l2579:
 23258                           
 23259                           ;app.c: 88: else
 23260                           ;app.c: 89: {
 23261                           ;app.c: 90: state = GATE_ADD_CMD;
 23262                           
 23263                           ; BSR set to: 0
 23264  003144  0E02               	movlw	2
 23265  003146  D031               	goto	L43
 23266  003148                     l2578:
 23267                           
 23268                           ;app.c: 93: else if (StringCompare(smsText, deleteNumberCmd, sizeof(deleteNumberCmd)))
 23269                           
 23270                           ; BSR set to: 0
 23271  003148  0E84               	movlw	low _smsText
 23272  00314A  0100               	movlb	0	; () banked
 23273  00314C  6F7D               	movwf	StringCompare@String1& (0+255),b
 23274  00314E  0E04               	movlw	high _smsText
 23275  003150  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23276  003152  0E8C               	movlw	low parseCommand@deleteNumberCmd
 23277  003154  6F7F               	movwf	StringCompare@String2& (0+255),b
 23278  003156  0E00               	movlw	high parseCommand@deleteNumberCmd
 23279  003158  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23280  00315A  0E00               	movlw	0
 23281  00315C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23282  00315E  0E04               	movlw	4
 23283  003160  6F81               	movwf	StringCompare@Len& (0+255),b
 23284  003162  EC57  F02F         	call	_StringCompare	;wreg free
 23285  003166  0900               	iorlw	0
 23286  003168  B4D8               	btfsc	status,2,c
 23287  00316A  D00C               	goto	l2582
 23288                           
 23289                           ;app.c: 94: {
 23290                           ;app.c: 95: if (!isNumberValid(smsText + 4))
 23291  00316C  0E88               	movlw	low (_smsText+4)
 23292  00316E  0100               	movlb	0	; () banked
 23293  003170  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 23294  003172  0E04               	movlw	high (_smsText+4)
 23295  003174  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 23296  003176  EC91  F02C         	call	_isNumberValid	;wreg free
 23297  00317A  0900               	iorlw	0
 23298  00317C  B4D8               	btfsc	status,2,c
 23299  00317E  D7E0               	goto	u14630
 23300                           
 23301                           ;app.c: 99: else
 23302                           ;app.c: 100: {
 23303                           ;app.c: 101: state = GATE_DEL_CMD;
 23304                           
 23305                           ; BSR set to: 0
 23306                           
 23307                           ;app.c: 98: }
 23308                           
 23309                           ;app.c: 96: {
 23310                           ;app.c: 97: state = GATE_WAIT_EVENT;
 23311  003180  0E03               	movlw	3
 23312  003182  D013               	goto	L43
 23313  003184                     l2582:
 23314                           
 23315                           ;app.c: 104: else if (StringCompare(smsText, resetCmd, sizeof(resetCmd)))
 23316                           
 23317                           ; BSR set to: 0
 23318  003184  0E84               	movlw	low _smsText
 23319  003186  0100               	movlb	0	; () banked
 23320  003188  6F7D               	movwf	StringCompare@String1& (0+255),b
 23321  00318A  0E04               	movlw	high _smsText
 23322  00318C  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 23323  00318E  0E90               	movlw	low parseCommand@resetCmd
 23324  003190  6F7F               	movwf	StringCompare@String2& (0+255),b
 23325  003192  0E00               	movlw	high parseCommand@resetCmd
 23326  003194  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 23327  003196  0E00               	movlw	0
 23328  003198  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 23329  00319A  0E04               	movlw	4
 23330  00319C  6F81               	movwf	StringCompare@Len& (0+255),b
 23331  00319E  EC57  F02F         	call	_StringCompare	;wreg free
 23332  0031A2  0900               	iorlw	0
 23333  0031A4  B4D8               	btfsc	status,2,c
 23334  0031A6  D003               	goto	l2586
 23335                           
 23336                           ;app.c: 105: {
 23337                           ;app.c: 106: state = GATE_RESET;
 23338  0031A8  0E05               	movlw	5
 23339  0031AA                     L43:
 23340  0031AA  0100               	movlb	0	; () banked
 23341  0031AC  6F94               	movwf	parseCommand@state& (0+255),b
 23342  0031AE                     l2586:
 23343                           
 23344                           ;app.c: 111: }
 23345                           ;app.c: 112: return state;
 23346                           
 23347                           ; BSR set to: 0
 23348                           
 23349                           ; BSR set to: 0
 23350                           
 23351                           ; BSR set to: 0
 23352                           
 23353                           ;app.c: 108: else
 23354                           ;app.c: 109: {
 23355                           
 23356                           ; BSR set to: 0
 23357  0031AE  0100               	movlb	0	; () banked
 23358  0031B0  5194               	movf	parseCommand@state& (0+255),w,b
 23359  0031B2  0012               	return	
 23360  0031B4                     __end_of_parseCommand:
 23361                           	opt stack 0
 23362                           tosu	equ	0xFFF
 23363                           tosh	equ	0xFFE
 23364                           tosl	equ	0xFFD
 23365                           pclath	equ	0xFFA
 23366                           tblptru	equ	0xFF8
 23367                           tblptrh	equ	0xFF7
 23368                           tblptrl	equ	0xFF6
 23369                           tablat	equ	0xFF5
 23370                           prodh	equ	0xFF4
 23371                           prodl	equ	0xFF3
 23372                           intcon	equ	0xFF2
 23373                           intcon2	equ	0xFF1
 23374                           intcon3	equ	0xFF0
 23375                           indf0	equ	0xFEF
 23376                           postinc0	equ	0xFEE
 23377                           plusw0	equ	0xFEB
 23378                           fsr0h	equ	0xFEA
 23379                           fsr0l	equ	0xFE9
 23380                           wreg	equ	0xFE8
 23381                           indf1	equ	0xFE7
 23382                           postinc1	equ	0xFE6
 23383                           postdec1	equ	0xFE5
 23384                           fsr1h	equ	0xFE2
 23385                           fsr1l	equ	0xFE1
 23386                           indf2	equ	0xFDF
 23387                           postinc2	equ	0xFDE
 23388                           postdec2	equ	0xFDD
 23389                           plusw2	equ	0xFDB
 23390                           fsr2h	equ	0xFDA
 23391                           fsr2l	equ	0xFD9
 23392                           status	equ	0xFD8
 23393                           
 23394 ;; *************** function _Mdm_RequestSmsData *****************
 23395 ;; Defined at:
 23396 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23397 ;; Parameters:    Size  Location     Type
 23398 ;;		None
 23399 ;; Auto vars:     Size  Location     Type
 23400 ;;		None
 23401 ;; Return value:  Size  Location     Type
 23402 ;;                  1    wreg      void 
 23403 ;; Registers used:
 23404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23405 ;; Tracked objects:
 23406 ;;		On entry : 0/0
 23407 ;;		On exit  : 0/0
 23408 ;;		Unchanged: 0/0
 23409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23414 ;;Total ram usage:        0 bytes
 23415 ;; Hardware stack levels used:    1
 23416 ;; Hardware stack levels required when called:   12
 23417 ;; This function calls:
 23418 ;;		_GenerateEvt
 23419 ;; This function is called by:
 23420 ;;		_detectCmd
 23421 ;; This function uses a non-reentrant model
 23422 ;;
 23423                           
 23424                           	psect	text106
 23425  006CE6                     __ptext106:
 23426                           	opt stack 0
 23427  006CE6                     _Mdm_RequestSmsData:
 23428                           	opt stack 14
 23429                           
 23430                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 23431                           
 23432                           ; BSR set to: 0
 23433                           ;incstack = 0
 23434  006CE6  0EDA               	movlw	low _GetSmsText
 23435  006CE8  0100               	movlb	0	; () banked
 23436  006CEA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23437  006CEC  0E00               	movlw	high _GetSmsText
 23438  006CEE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23439  006CF0  EC06  F036         	call	_GenerateEvt	;wreg free
 23440  006CF4  0012               	return		;funcret
 23441  006CF6                     __end_of_Mdm_RequestSmsData:
 23442                           	opt stack 0
 23443                           tosu	equ	0xFFF
 23444                           tosh	equ	0xFFE
 23445                           tosl	equ	0xFFD
 23446                           pclath	equ	0xFFA
 23447                           tblptru	equ	0xFF8
 23448                           tblptrh	equ	0xFF7
 23449                           tblptrl	equ	0xFF6
 23450                           tablat	equ	0xFF5
 23451                           prodh	equ	0xFF4
 23452                           prodl	equ	0xFF3
 23453                           intcon	equ	0xFF2
 23454                           intcon2	equ	0xFF1
 23455                           intcon3	equ	0xFF0
 23456                           indf0	equ	0xFEF
 23457                           postinc0	equ	0xFEE
 23458                           plusw0	equ	0xFEB
 23459                           fsr0h	equ	0xFEA
 23460                           fsr0l	equ	0xFE9
 23461                           wreg	equ	0xFE8
 23462                           indf1	equ	0xFE7
 23463                           postinc1	equ	0xFE6
 23464                           postdec1	equ	0xFE5
 23465                           fsr1h	equ	0xFE2
 23466                           fsr1l	equ	0xFE1
 23467                           indf2	equ	0xFDF
 23468                           postinc2	equ	0xFDE
 23469                           postdec2	equ	0xFDD
 23470                           plusw2	equ	0xFDB
 23471                           fsr2h	equ	0xFDA
 23472                           fsr2l	equ	0xFD9
 23473                           status	equ	0xFD8
 23474                           
 23475 ;; *************** function _Mdm_IsSmsReceived *****************
 23476 ;; Defined at:
 23477 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23478 ;; Parameters:    Size  Location     Type
 23479 ;;		None
 23480 ;; Auto vars:     Size  Location     Type
 23481 ;;  Ret             1   33[BANK0 ] enum E8931
 23482 ;; Return value:  Size  Location     Type
 23483 ;;                  1    wreg      enum E8931
 23484 ;; Registers used:
 23485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23486 ;; Tracked objects:
 23487 ;;		On entry : 0/0
 23488 ;;		On exit  : 0/0
 23489 ;;		Unchanged: 0/0
 23490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23492 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23494 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23495 ;;Total ram usage:        1 bytes
 23496 ;; Hardware stack levels used:    1
 23497 ;; Hardware stack levels required when called:   12
 23498 ;; This function calls:
 23499 ;;		_ReceiveEvt
 23500 ;; This function is called by:
 23501 ;;		_detectCmd
 23502 ;; This function uses a non-reentrant model
 23503 ;;
 23504                           
 23505                           	psect	text107
 23506  00694A                     __ptext107:
 23507                           	opt stack 0
 23508  00694A                     _Mdm_IsSmsReceived:
 23509                           	opt stack 14
 23510                           
 23511                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 23512                           
 23513                           ;incstack = 0
 23514  00694A  0E00               	movlw	0
 23515  00694C  0100               	movlb	0	; () banked
 23516  00694E  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 23517                           
 23518                           ; BSR set to: 0
 23519                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 23520  006950  0EDB               	movlw	low _SmsEvent
 23521  006952  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23522  006954  0E00               	movlw	high _SmsEvent
 23523  006956  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23524  006958  EC15  F034         	call	_ReceiveEvt	;wreg free
 23525  00695C  0900               	iorlw	0
 23526  00695E  B4D8               	btfsc	status,2,c
 23527  006960  D003               	goto	l1136
 23528                           
 23529                           ;mdm_gsm_gprs.c: 947: {
 23530                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 23531  006962  0E01               	movlw	1
 23532  006964  0100               	movlb	0	; () banked
 23533  006966  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 23534  006968                     l1136:
 23535                           
 23536                           ;mdm_gsm_gprs.c: 949: }
 23537                           ;mdm_gsm_gprs.c: 951: return Ret;
 23538  006968  0100               	movlb	0	; () banked
 23539  00696A  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 23540  00696C  0012               	return	
 23541  00696E                     __end_of_Mdm_IsSmsReceived:
 23542                           	opt stack 0
 23543                           tosu	equ	0xFFF
 23544                           tosh	equ	0xFFE
 23545                           tosl	equ	0xFFD
 23546                           pclath	equ	0xFFA
 23547                           tblptru	equ	0xFF8
 23548                           tblptrh	equ	0xFF7
 23549                           tblptrl	equ	0xFF6
 23550                           tablat	equ	0xFF5
 23551                           prodh	equ	0xFF4
 23552                           prodl	equ	0xFF3
 23553                           intcon	equ	0xFF2
 23554                           intcon2	equ	0xFF1
 23555                           intcon3	equ	0xFF0
 23556                           indf0	equ	0xFEF
 23557                           postinc0	equ	0xFEE
 23558                           plusw0	equ	0xFEB
 23559                           fsr0h	equ	0xFEA
 23560                           fsr0l	equ	0xFE9
 23561                           wreg	equ	0xFE8
 23562                           indf1	equ	0xFE7
 23563                           postinc1	equ	0xFE6
 23564                           postdec1	equ	0xFE5
 23565                           fsr1h	equ	0xFE2
 23566                           fsr1l	equ	0xFE1
 23567                           indf2	equ	0xFDF
 23568                           postinc2	equ	0xFDE
 23569                           postdec2	equ	0xFDD
 23570                           plusw2	equ	0xFDB
 23571                           fsr2h	equ	0xFDA
 23572                           fsr2l	equ	0xFD9
 23573                           status	equ	0xFD8
 23574                           
 23575 ;; *************** function _Mdm_IsRinging *****************
 23576 ;; Defined at:
 23577 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23578 ;; Parameters:    Size  Location     Type
 23579 ;;		None
 23580 ;; Auto vars:     Size  Location     Type
 23581 ;;  Ret             1   33[BANK0 ] enum E8927
 23582 ;; Return value:  Size  Location     Type
 23583 ;;                  1    wreg      enum E8927
 23584 ;; Registers used:
 23585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23586 ;; Tracked objects:
 23587 ;;		On entry : 0/0
 23588 ;;		On exit  : 0/0
 23589 ;;		Unchanged: 0/0
 23590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23592 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23594 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23595 ;;Total ram usage:        1 bytes
 23596 ;; Hardware stack levels used:    1
 23597 ;; Hardware stack levels required when called:   12
 23598 ;; This function calls:
 23599 ;;		_ReceiveEvt
 23600 ;; This function is called by:
 23601 ;;		_detectCmd
 23602 ;;		_getSetupCall
 23603 ;; This function uses a non-reentrant model
 23604 ;;
 23605                           
 23606                           	psect	text108
 23607  00696E                     __ptext108:
 23608                           	opt stack 0
 23609  00696E                     _Mdm_IsRinging:
 23610                           	opt stack 12
 23611                           
 23612                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 23613                           
 23614                           ; BSR set to: 0
 23615                           ;incstack = 0
 23616  00696E  0E00               	movlw	0
 23617  006970  0100               	movlb	0	; () banked
 23618  006972  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23619                           
 23620                           ; BSR set to: 0
 23621                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 23622  006974  0EDD               	movlw	low _RingEvent
 23623  006976  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23624  006978  0E00               	movlw	high _RingEvent
 23625  00697A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23626  00697C  EC15  F034         	call	_ReceiveEvt	;wreg free
 23627  006980  0900               	iorlw	0
 23628  006982  B4D8               	btfsc	status,2,c
 23629  006984  D003               	goto	l1152
 23630                           
 23631                           ;mdm_gsm_gprs.c: 1030: {
 23632                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 23633  006986  0E01               	movlw	1
 23634  006988  0100               	movlb	0	; () banked
 23635  00698A  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23636  00698C                     l1152:
 23637                           
 23638                           ;mdm_gsm_gprs.c: 1032: }
 23639                           ;mdm_gsm_gprs.c: 1034: return Ret;
 23640  00698C  0100               	movlb	0	; () banked
 23641  00698E  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 23642  006990  0012               	return	
 23643  006992                     __end_of_Mdm_IsRinging:
 23644                           	opt stack 0
 23645                           tosu	equ	0xFFF
 23646                           tosh	equ	0xFFE
 23647                           tosl	equ	0xFFD
 23648                           pclath	equ	0xFFA
 23649                           tblptru	equ	0xFF8
 23650                           tblptrh	equ	0xFF7
 23651                           tblptrl	equ	0xFF6
 23652                           tablat	equ	0xFF5
 23653                           prodh	equ	0xFF4
 23654                           prodl	equ	0xFF3
 23655                           intcon	equ	0xFF2
 23656                           intcon2	equ	0xFF1
 23657                           intcon3	equ	0xFF0
 23658                           indf0	equ	0xFEF
 23659                           postinc0	equ	0xFEE
 23660                           plusw0	equ	0xFEB
 23661                           fsr0h	equ	0xFEA
 23662                           fsr0l	equ	0xFE9
 23663                           wreg	equ	0xFE8
 23664                           indf1	equ	0xFE7
 23665                           postinc1	equ	0xFE6
 23666                           postdec1	equ	0xFE5
 23667                           fsr1h	equ	0xFE2
 23668                           fsr1l	equ	0xFE1
 23669                           indf2	equ	0xFDF
 23670                           postinc2	equ	0xFDE
 23671                           postdec2	equ	0xFDD
 23672                           plusw2	equ	0xFDB
 23673                           fsr2h	equ	0xFDA
 23674                           fsr2l	equ	0xFD9
 23675                           status	equ	0xFD8
 23676                           
 23677 ;; *************** function _Mdm_HangPhoneCall *****************
 23678 ;; Defined at:
 23679 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23680 ;; Parameters:    Size  Location     Type
 23681 ;;		None
 23682 ;; Auto vars:     Size  Location     Type
 23683 ;;		None
 23684 ;; Return value:  Size  Location     Type
 23685 ;;                  1    wreg      void 
 23686 ;; Registers used:
 23687 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23688 ;; Tracked objects:
 23689 ;;		On entry : 0/0
 23690 ;;		On exit  : 0/0
 23691 ;;		Unchanged: 0/0
 23692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23697 ;;Total ram usage:        0 bytes
 23698 ;; Hardware stack levels used:    1
 23699 ;; Hardware stack levels required when called:   13
 23700 ;; This function calls:
 23701 ;;		_Uart_WriteConstString
 23702 ;; This function is called by:
 23703 ;;		_detectCmd
 23704 ;;		_getSetupCall
 23705 ;; This function uses a non-reentrant model
 23706 ;;
 23707                           
 23708                           	psect	text109
 23709  006CA2                     __ptext109:
 23710                           	opt stack 0
 23711  006CA2                     _Mdm_HangPhoneCall:
 23712                           	opt stack 11
 23713                           
 23714                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 23715                           
 23716                           ; BSR set to: 0
 23717                           ;incstack = 0
 23718  006CA2  0EF0               	movlw	low STR_6
 23719  006CA4  0100               	movlb	0	; () banked
 23720  006CA6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23721  006CA8  0EFF               	movlw	high STR_6
 23722  006CAA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23723  006CAC  0E01               	movlw	1
 23724  006CAE  ECAC  F031         	call	_Uart_WriteConstString
 23725  006CB2  0012               	return		;funcret
 23726  006CB4                     __end_of_Mdm_HangPhoneCall:
 23727                           	opt stack 0
 23728                           tosu	equ	0xFFF
 23729                           tosh	equ	0xFFE
 23730                           tosl	equ	0xFFD
 23731                           pclath	equ	0xFFA
 23732                           tblptru	equ	0xFF8
 23733                           tblptrh	equ	0xFF7
 23734                           tblptrl	equ	0xFF6
 23735                           tablat	equ	0xFF5
 23736                           prodh	equ	0xFF4
 23737                           prodl	equ	0xFF3
 23738                           intcon	equ	0xFF2
 23739                           intcon2	equ	0xFF1
 23740                           intcon3	equ	0xFF0
 23741                           indf0	equ	0xFEF
 23742                           postinc0	equ	0xFEE
 23743                           plusw0	equ	0xFEB
 23744                           fsr0h	equ	0xFEA
 23745                           fsr0l	equ	0xFE9
 23746                           wreg	equ	0xFE8
 23747                           indf1	equ	0xFE7
 23748                           postinc1	equ	0xFE6
 23749                           postdec1	equ	0xFE5
 23750                           fsr1h	equ	0xFE2
 23751                           fsr1l	equ	0xFE1
 23752                           indf2	equ	0xFDF
 23753                           postinc2	equ	0xFDE
 23754                           postdec2	equ	0xFDD
 23755                           plusw2	equ	0xFDB
 23756                           fsr2h	equ	0xFDA
 23757                           fsr2l	equ	0xFD9
 23758                           status	equ	0xFD8
 23759                           
 23760 ;; *************** function _Mdm_GetSmsData *****************
 23761 ;; Defined at:
 23762 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23763 ;; Parameters:    Size  Location     Type
 23764 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 23765 ;;		 -> smsText(20), 
 23766 ;; Auto vars:     Size  Location     Type
 23767 ;;  GetSmsStatus    1   49[BANK0 ] enum E8923
 23768 ;; Return value:  Size  Location     Type
 23769 ;;                  1    wreg      enum E8923
 23770 ;; Registers used:
 23771 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23772 ;; Tracked objects:
 23773 ;;		On entry : 0/0
 23774 ;;		On exit  : 0/0
 23775 ;;		Unchanged: 0/0
 23776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23780 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23781 ;;Total ram usage:        3 bytes
 23782 ;; Hardware stack levels used:    1
 23783 ;; Hardware stack levels required when called:   12
 23784 ;; This function calls:
 23785 ;;		_ReceiveEvt
 23786 ;;		_StringCopy
 23787 ;; This function is called by:
 23788 ;;		_detectCmd
 23789 ;; This function uses a non-reentrant model
 23790 ;;
 23791                           
 23792                           	psect	text110
 23793  0057EE                     __ptext110:
 23794                           	opt stack 0
 23795  0057EE                     _Mdm_GetSmsData:
 23796                           	opt stack 14
 23797                           
 23798                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 23799                           
 23800                           ;incstack = 0
 23801  0057EE  0E00               	movlw	0
 23802  0057F0  0100               	movlb	0	; () banked
 23803  0057F2  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23804                           
 23805                           ; BSR set to: 0
 23806                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 23807  0057F4  0ED9               	movlw	low _SmsTxtReady
 23808  0057F6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23809  0057F8  0E00               	movlw	high _SmsTxtReady
 23810  0057FA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23811  0057FC  EC15  F034         	call	_ReceiveEvt	;wreg free
 23812  005800  0900               	iorlw	0
 23813  005802  B4D8               	btfsc	status,2,c
 23814  005804  D025               	goto	l1129
 23815                           
 23816                           ;mdm_gsm_gprs.c: 898: {
 23817                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 23818  005806  0E50               	movlw	low (_Mdm_SmsRx+80)
 23819  005808  0100               	movlb	0	; () banked
 23820  00580A  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23821  00580C  0E07               	movlw	high (_Mdm_SmsRx+80)
 23822  00580E  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23823  005810  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 23824  005814  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 23825  005818  0E01               	movlw	1
 23826  00581A  0107               	movlb	7	; () banked
 23827  00581C  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 23828  00581E  0100               	movlb	0	; () banked
 23829  005820  6F89               	movwf	StringCopy@Len& (0+255),b
 23830  005822  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 23831  005824  0E00               	movlw	0
 23832  005826  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 23833  005828  ECC4  F02C         	call	_StringCopy	;wreg free
 23834                           
 23835                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 23836  00582C  0E15               	movlw	low (_Mdm_SmsRx+21)
 23837  00582E  0100               	movlb	0	; () banked
 23838  005830  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23839  005832  0E07               	movlw	high (_Mdm_SmsRx+21)
 23840  005834  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23841  005836  0ECA               	movlw	low _callerNumber
 23842  005838  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23843  00583A  0E04               	movlw	high _callerNumber
 23844  00583C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23845  00583E  0E00               	movlw	0
 23846  005840  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23847  005842  0E0D               	movlw	13
 23848  005844  6F89               	movwf	StringCopy@Len& (0+255),b
 23849  005846  ECC4  F02C         	call	_StringCopy	;wreg free
 23850                           
 23851                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 23852  00584A  0E01               	movlw	1
 23853  00584C  0100               	movlb	0	; () banked
 23854  00584E  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23855  005850                     l1129:
 23856                           
 23857                           ;mdm_gsm_gprs.c: 904: }
 23858                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 23859                           
 23860                           ; BSR set to: 0
 23861  005850  0100               	movlb	0	; () banked
 23862  005852  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 23863  005854  0012               	return	
 23864  005856                     __end_of_Mdm_GetSmsData:
 23865                           	opt stack 0
 23866                           tosu	equ	0xFFF
 23867                           tosh	equ	0xFFE
 23868                           tosl	equ	0xFFD
 23869                           pclath	equ	0xFFA
 23870                           tblptru	equ	0xFF8
 23871                           tblptrh	equ	0xFF7
 23872                           tblptrl	equ	0xFF6
 23873                           tablat	equ	0xFF5
 23874                           prodh	equ	0xFF4
 23875                           prodl	equ	0xFF3
 23876                           intcon	equ	0xFF2
 23877                           intcon2	equ	0xFF1
 23878                           intcon3	equ	0xFF0
 23879                           indf0	equ	0xFEF
 23880                           postinc0	equ	0xFEE
 23881                           plusw0	equ	0xFEB
 23882                           fsr0h	equ	0xFEA
 23883                           fsr0l	equ	0xFE9
 23884                           wreg	equ	0xFE8
 23885                           indf1	equ	0xFE7
 23886                           postinc1	equ	0xFE6
 23887                           postdec1	equ	0xFE5
 23888                           fsr1h	equ	0xFE2
 23889                           fsr1l	equ	0xFE1
 23890                           indf2	equ	0xFDF
 23891                           postinc2	equ	0xFDE
 23892                           postdec2	equ	0xFDD
 23893                           plusw2	equ	0xFDB
 23894                           fsr2h	equ	0xFDA
 23895                           fsr2l	equ	0xFD9
 23896                           status	equ	0xFD8
 23897                           
 23898 ;; *************** function _GetLastInteractionNumber *****************
 23899 ;; Defined at:
 23900 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23901 ;; Parameters:    Size  Location     Type
 23902 ;;		None
 23903 ;; Auto vars:     Size  Location     Type
 23904 ;;		None
 23905 ;; Return value:  Size  Location     Type
 23906 ;;                  2   29[BANK0 ] PTR unsigned char 
 23907 ;; Registers used:
 23908 ;;		wreg, status,2, status,0
 23909 ;; Tracked objects:
 23910 ;;		On entry : 0/0
 23911 ;;		On exit  : 0/0
 23912 ;;		Unchanged: 0/0
 23913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23914 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23917 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23918 ;;Total ram usage:        2 bytes
 23919 ;; Hardware stack levels used:    1
 23920 ;; Hardware stack levels required when called:   11
 23921 ;; This function calls:
 23922 ;;		Nothing
 23923 ;; This function is called by:
 23924 ;;		_detectCmd
 23925 ;; This function uses a non-reentrant model
 23926 ;;
 23927                           
 23928                           	psect	text111
 23929  006D4C                     __ptext111:
 23930                           	opt stack 0
 23931  006D4C                     _GetLastInteractionNumber:
 23932                           	opt stack 15
 23933                           
 23934                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 23935                           
 23936                           ; BSR set to: 0
 23937                           ;incstack = 0
 23938  006D4C  0ECA               	movlw	low _callerNumber
 23939  006D4E  0100               	movlb	0	; () banked
 23940  006D50  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 23941  006D52  0E04               	movlw	high _callerNumber
 23942  006D54  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 23943  006D56  0012               	return	
 23944  006D58                     __end_of_GetLastInteractionNumber:
 23945                           	opt stack 0
 23946                           tosu	equ	0xFFF
 23947                           tosh	equ	0xFFE
 23948                           tosl	equ	0xFFD
 23949                           pclath	equ	0xFFA
 23950                           tblptru	equ	0xFF8
 23951                           tblptrh	equ	0xFF7
 23952                           tblptrl	equ	0xFF6
 23953                           tablat	equ	0xFF5
 23954                           prodh	equ	0xFF4
 23955                           prodl	equ	0xFF3
 23956                           intcon	equ	0xFF2
 23957                           intcon2	equ	0xFF1
 23958                           intcon3	equ	0xFF0
 23959                           indf0	equ	0xFEF
 23960                           postinc0	equ	0xFEE
 23961                           plusw0	equ	0xFEB
 23962                           fsr0h	equ	0xFEA
 23963                           fsr0l	equ	0xFE9
 23964                           wreg	equ	0xFE8
 23965                           indf1	equ	0xFE7
 23966                           postinc1	equ	0xFE6
 23967                           postdec1	equ	0xFE5
 23968                           fsr1h	equ	0xFE2
 23969                           fsr1l	equ	0xFE1
 23970                           indf2	equ	0xFDF
 23971                           postinc2	equ	0xFDE
 23972                           postdec2	equ	0xFDD
 23973                           plusw2	equ	0xFDB
 23974                           fsr2h	equ	0xFDA
 23975                           fsr2l	equ	0xFD9
 23976                           status	equ	0xFD8
 23977                           
 23978 ;; *************** function _GetCallerNumber *****************
 23979 ;; Defined at:
 23980 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23981 ;; Parameters:    Size  Location     Type
 23982 ;;		None
 23983 ;; Auto vars:     Size  Location     Type
 23984 ;;		None
 23985 ;; Return value:  Size  Location     Type
 23986 ;;                  2   35[BANK0 ] PTR unsigned char 
 23987 ;; Registers used:
 23988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23989 ;; Tracked objects:
 23990 ;;		On entry : 0/0
 23991 ;;		On exit  : 0/0
 23992 ;;		Unchanged: 0/0
 23993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23994 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23997 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23998 ;;Total ram usage:        2 bytes
 23999 ;; Hardware stack levels used:    1
 24000 ;; Hardware stack levels required when called:   12
 24001 ;; This function calls:
 24002 ;;		_ClearBuffer
 24003 ;;		_ReceiveEvt
 24004 ;; This function is called by:
 24005 ;;		_detectCmd
 24006 ;;		_initFsm
 24007 ;; This function uses a non-reentrant model
 24008 ;;
 24009                           
 24010                           	psect	text112
 24011  006638                     __ptext112:
 24012                           	opt stack 0
 24013  006638                     _GetCallerNumber:
 24014                           	opt stack 14
 24015                           
 24016                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 24017                           
 24018                           ; BSR set to: 0
 24019                           ;incstack = 0
 24020  006638  0EDC               	movlw	low _ClipEvent
 24021  00663A  0100               	movlb	0	; () banked
 24022  00663C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24023  00663E  0E00               	movlw	high _ClipEvent
 24024  006640  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24025  006642  EC15  F034         	call	_ReceiveEvt	;wreg free
 24026  006646  0900               	iorlw	0
 24027  006648  A4D8               	btfss	status,2,c
 24028  00664A  D00B               	goto	l1156
 24029                           
 24030                           ;mdm_gsm_gprs.c: 1040: {
 24031                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 24032  00664C  0ECA               	movlw	low _callerNumber
 24033  00664E  0100               	movlb	0	; () banked
 24034  006650  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24035  006652  0E04               	movlw	high _callerNumber
 24036  006654  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24037  006656  0E00               	movlw	0
 24038  006658  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24039  00665A  0E0D               	movlw	13
 24040  00665C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24041  00665E  EC37  F033         	call	_ClearBuffer	;wreg free
 24042  006662                     l1156:
 24043                           
 24044                           ;mdm_gsm_gprs.c: 1042: }
 24045                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 24046  006662  0ECA               	movlw	low _callerNumber
 24047  006664  0100               	movlb	0	; () banked
 24048  006666  6F83               	movwf	?_GetCallerNumber& (0+255),b
 24049  006668  0E04               	movlw	high _callerNumber
 24050  00666A  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 24051  00666C  0012               	return	
 24052  00666E                     __end_of_GetCallerNumber:
 24053                           	opt stack 0
 24054                           tosu	equ	0xFFF
 24055                           tosh	equ	0xFFE
 24056                           tosl	equ	0xFFD
 24057                           pclath	equ	0xFFA
 24058                           tblptru	equ	0xFF8
 24059                           tblptrh	equ	0xFF7
 24060                           tblptrl	equ	0xFF6
 24061                           tablat	equ	0xFF5
 24062                           prodh	equ	0xFF4
 24063                           prodl	equ	0xFF3
 24064                           intcon	equ	0xFF2
 24065                           intcon2	equ	0xFF1
 24066                           intcon3	equ	0xFF0
 24067                           indf0	equ	0xFEF
 24068                           postinc0	equ	0xFEE
 24069                           plusw0	equ	0xFEB
 24070                           fsr0h	equ	0xFEA
 24071                           fsr0l	equ	0xFE9
 24072                           wreg	equ	0xFE8
 24073                           indf1	equ	0xFE7
 24074                           postinc1	equ	0xFE6
 24075                           postdec1	equ	0xFE5
 24076                           fsr1h	equ	0xFE2
 24077                           fsr1l	equ	0xFE1
 24078                           indf2	equ	0xFDF
 24079                           postinc2	equ	0xFDE
 24080                           postdec2	equ	0xFDD
 24081                           plusw2	equ	0xFDB
 24082                           fsr2h	equ	0xFDA
 24083                           fsr2l	equ	0xFD9
 24084                           status	equ	0xFD8
 24085                           
 24086 ;; *************** function _delCmdFsm *****************
 24087 ;; Defined at:
 24088 ;;		line 71 in file "../Source/c/04_App/app_delCmd.c"
 24089 ;; Parameters:    Size  Location     Type
 24090 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 24091 ;;		 -> receivedNumber(13), 
 24092 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 24093 ;;		 -> smsText(20), 
 24094 ;;  isCmdSuccess    2    9[BANK1 ] PTR unsigned char 
 24095 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 24096 ;; Auto vars:     Size  Location     Type
 24097 ;;  emptyNumber    13   11[BANK1 ] const unsigned char [13]
 24098 ;;  searchNumber    1   27[BANK1 ] unsigned char 
 24099 ;;  numberInMemo    1   26[BANK1 ] unsigned char 
 24100 ;;  masterOpResu    1   25[BANK1 ] unsigned char 
 24101 ;;  isComplete      1   24[BANK1 ] unsigned char 
 24102 ;; Return value:  Size  Location     Type
 24103 ;;                  1    wreg      unsigned char 
 24104 ;; Registers used:
 24105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24106 ;; Tracked objects:
 24107 ;;		On entry : 0/0
 24108 ;;		On exit  : 0/0
 24109 ;;		Unchanged: 0/0
 24110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24111 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24112 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24114 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24115 ;;Total ram usage:       23 bytes
 24116 ;; Hardware stack levels used:    1
 24117 ;; Hardware stack levels required when called:   18
 24118 ;; This function calls:
 24119 ;;		_isMasterNumber
 24120 ;;		_isNumberInMemory
 24121 ;;		_saveNumberInMemory
 24122 ;; This function is called by:
 24123 ;;		_MyApp_Task
 24124 ;; This function uses a non-reentrant model
 24125 ;;
 24126                           
 24127                           	psect	text113
 24128  003AAE                     __ptext113:
 24129                           	opt stack 0
 24130  003AAE                     _delCmdFsm:
 24131                           	opt stack 9
 24132                           
 24133                           ;app_delCmd.c: 73: const uint8_t emptyNumber[((UINT8)(13))] = {0};
 24134                           
 24135                           ; BSR set to: 0
 24136                           ;incstack = 0
 24137  003AAE  0E0F               	movlw	low delCmdFsm@F9016
 24138  003AB0  6EF6               	movwf	tblptrl,c
 24139  003AB2                     	if	1	;There is more than 1 active tblptr byte
 24140  003AB2  0EFC               	movlw	high delCmdFsm@F9016
 24141  003AB4  6EF7               	movwf	tblptrh,c
 24142  003AB6                     	endif
 24143  003AB6                     	if	0	;There are less than 3 active tblptr bytes
 24144  003AB6                     	endif
 24145  003AB6  EE21  F00B         	lfsr	2,delCmdFsm@emptyNumber
 24146  003ABA  0E0C               	movlw	12
 24147  003ABC                     u16330:
 24148  003ABC  0009               	tblrd		*+
 24149  003ABE  CFF5 FFDE          	movff	tablat,postinc2
 24150  003AC2  06E8               	decf	wreg,f,c
 24151  003AC4  E2FB               	bc	u16330
 24152                           
 24153                           ;app_delCmd.c: 74: static delFsmStates currentState = DEL_FSM_CHECK_MASTER;
 24154                           ;app_delCmd.c: 75: bool isComplete = 0;
 24155  003AC6  0E00               	movlw	0
 24156  003AC8  0101               	movlb	1	; () banked
 24157  003ACA  6F18               	movwf	delCmdFsm@isComplete& (0+255),b
 24158                           
 24159                           ; BSR set to: 1
 24160                           ;app_delCmd.c: 76: uint8_t numberInMemory = 0;
 24161  003ACC  0E00               	movlw	0
 24162  003ACE  6F1A               	movwf	delCmdFsm@numberInMemory& (0+255),b
 24163                           
 24164                           ; BSR set to: 1
 24165                           ;app_delCmd.c: 77: uint8_t masterOpResult = OP_FAILED;
 24166  003AD0  0E01               	movlw	1
 24167  003AD2  6F19               	movwf	delCmdFsm@masterOpResult& (0+255),b
 24168                           
 24169                           ; BSR set to: 1
 24170                           ;app_delCmd.c: 78: uint8_t searchNumber = OP_FAILED;
 24171  003AD4  0E01               	movlw	1
 24172  003AD6  6F1B               	movwf	delCmdFsm@searchNumber& (0+255),b
 24173                           
 24174                           ;app_delCmd.c: 80: switch (currentState)
 24175  003AD8  D04A               	goto	l2883
 24176  003ADA                     
 24177                           ; BSR set to: 1
 24178                           ;app_delCmd.c: 83: *isCmdSuccessfull = 0;
 24179                           
 24180                           ; BSR set to: 1
 24181  003ADA  C109  FFD9         	movff	delCmdFsm@isCmdSuccessfull,fsr2l
 24182  003ADE  C10A  FFDA         	movff	delCmdFsm@isCmdSuccessfull+1,fsr2h
 24183  003AE2  0E00               	movlw	0
 24184  003AE4  6EDF               	movwf	indf2,c
 24185                           
 24186                           ; BSR set to: 1
 24187                           ;app_delCmd.c: 84: masterOpResult = isMasterNumber(receivedNumber);
 24188  003AE6  C105  F100         	movff	delCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 24189  003AEA  C106  F101         	movff	delCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 24190  003AEE  EC54  F02B         	call	_isMasterNumber	;wreg free
 24191  003AF2  0101               	movlb	1	; () banked
 24192  003AF4  6F19               	movwf	delCmdFsm@masterOpResult& (0+255),b
 24193                           
 24194                           ; BSR set to: 1
 24195                           ;app_delCmd.c: 85: if (masterOpResult == OP_SUCCESS)
 24196  003AF6  5119               	movf	delCmdFsm@masterOpResult& (0+255),w,b
 24197  003AF8  A4D8               	btfss	status,2,c
 24198  003AFA  D002               	goto	l2885
 24199                           
 24200                           ; BSR set to: 1
 24201                           ;app_delCmd.c: 86: {
 24202                           ;app_delCmd.c: 87: currentState = DEL_FSM_REMOVE_NUMBER;
 24203  003AFC  0E01               	movlw	1
 24204  003AFE  D002               	goto	L44
 24205  003B00                     l2885:
 24206                           
 24207                           ; BSR set to: 1
 24208                           ;app_delCmd.c: 89: else if (masterOpResult == OP_FAILED)
 24209                           
 24210                           ; BSR set to: 1
 24211  003B00  0519               	decf	delCmdFsm@masterOpResult& (0+255),w,b
 24212  003B02  D02D               	goto	L101
 24213  003B04                     L44:
 24214  003B04  6FD5               	movwf	delCmdFsm@currentState& (0+255),b
 24215                           
 24216                           ; BSR set to: 1
 24217                           ;app_delCmd.c: 92: }
 24218                           ;app_delCmd.c: 93: break;
 24219                           
 24220                           ; BSR set to: 1
 24221  003B06  D03D               	goto	l2888
 24222  003B08                     
 24223                           ; BSR set to: 1
 24224                           ;app_delCmd.c: 96: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 24225                           
 24226                           ; BSR set to: 1
 24227  003B08  0E04               	movlw	4
 24228  003B0A  2507               	addwf	delCmdFsm@smsText& (0+255),w,b
 24229  003B0C  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 24230  003B0E  0E00               	movlw	0
 24231  003B10  2108               	addwfc	(delCmdFsm@smsText+1)& (0+255),w,b
 24232  003B12  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 24233  003B14  0E1A               	movlw	low delCmdFsm@numberInMemory
 24234  003B16  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 24235  003B18  0E01               	movlw	high delCmdFsm@numberInMemory
 24236  003B1A  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 24237  003B1C  ECDC  F022         	call	_isNumberInMemory	;wreg free
 24238  003B20  0101               	movlb	1	; () banked
 24239  003B22  6F1B               	movwf	delCmdFsm@searchNumber& (0+255),b
 24240                           
 24241                           ; BSR set to: 1
 24242                           ;app_delCmd.c: 97: if (searchNumber == SEARCH_FSM_FOUND)
 24243  003B24  0E03               	movlw	3
 24244  003B26  191B               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 24245  003B28  A4D8               	btfss	status,2,c
 24246  003B2A  D013               	goto	l2890
 24247                           
 24248                           ; BSR set to: 1
 24249                           ;app_delCmd.c: 98: {
 24250                           ;app_delCmd.c: 99: saveNumberInMemory(numberInMemory, emptyNumber);
 24251  003B2C  0E0B               	movlw	low delCmdFsm@emptyNumber
 24252  003B2E  0100               	movlb	0	; () banked
 24253  003B30  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 24254  003B32  0E01               	movlw	high delCmdFsm@emptyNumber
 24255  003B34  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 24256  003B36  0101               	movlb	1	; () banked
 24257  003B38  511A               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 24258  003B3A  ECE1  F035         	call	_saveNumberInMemory
 24259                           
 24260                           ;app_delCmd.c: 100: currentState = DEL_FSM_COMPLETE;
 24261  003B3E  0E02               	movlw	2
 24262  003B40  0101               	movlb	1	; () banked
 24263  003B42  6FD5               	movwf	delCmdFsm@currentState& (0+255),b
 24264                           
 24265                           ; BSR set to: 1
 24266                           ;app_delCmd.c: 101: *isCmdSuccessfull = 1;
 24267  003B44  C109  FFD9         	movff	delCmdFsm@isCmdSuccessfull,fsr2l
 24268  003B48  C10A  FFDA         	movff	delCmdFsm@isCmdSuccessfull+1,fsr2h
 24269  003B4C  0E01               	movlw	1
 24270  003B4E  6EDF               	movwf	indf2,c
 24271                           
 24272                           ;app_delCmd.c: 102: }
 24273  003B50  D018               	goto	l2888
 24274  003B52                     l2890:
 24275                           
 24276                           ; BSR set to: 1
 24277                           ;app_delCmd.c: 103: else if (searchNumber == SEARCH_FSM_NOT_FOUND || searchNumber == SEA
      +                          RCH_FSM_ERROR)
 24278                           
 24279                           ; BSR set to: 1
 24280  003B52  0E04               	movlw	4
 24281  003B54  191B               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 24282  003B56  B4D8               	btfsc	status,2,c
 24283  003B58  D004               	goto	u16380
 24284                           
 24285                           ; BSR set to: 1
 24286  003B5A  0E02               	movlw	2
 24287  003B5C  191B               	xorwf	delCmdFsm@searchNumber& (0+255),w,b
 24288  003B5E                     L101:
 24289  003B5E  A4D8               	btfss	status,2,c
 24290  003B60  D010               	goto	l2888
 24291  003B62                     u16380:
 24292                           
 24293                           ; BSR set to: 1
 24294                           ;app_delCmd.c: 104: {
 24295                           ;app_delCmd.c: 105: currentState = DEL_FSM_COMPLETE;
 24296                           
 24297                           ; BSR set to: 1
 24298  003B62  0E02               	movlw	2
 24299  003B64  D7CF               	goto	L44
 24300  003B66                     
 24301                           ; BSR set to: 1
 24302                           ;app_delCmd.c: 110: isComplete = 1;
 24303                           
 24304                           ; BSR set to: 1
 24305  003B66  0E01               	movlw	1
 24306  003B68  6F18               	movwf	delCmdFsm@isComplete& (0+255),b
 24307                           
 24308                           ;app_delCmd.c: 111: currentState = DEL_FSM_CHECK_MASTER;
 24309  003B6A  0E00               	movlw	0
 24310  003B6C  D7CB               	goto	L44
 24311  003B6E                     l2883:
 24312                           
 24313                           ; BSR set to: 1
 24314                           
 24315                           ; BSR set to: 1
 24316  003B6E  51D5               	movf	delCmdFsm@currentState& (0+255),w,b
 24317                           
 24318                           ; Switch size 1, requested type "space"
 24319                           ; Number of cases is 3, Range of values is 0 to 2
 24320                           ; switch strategies available:
 24321                           ; Name         Instructions Cycles
 24322                           ; simple_byte           10     6 (average)
 24323                           ;	Chosen strategy is simple_byte
 24324  003B70  0A00               	xorlw	0	; case 0
 24325  003B72  B4D8               	btfsc	status,2,c
 24326  003B74  D7B2               	goto	l2884
 24327  003B76  0A01               	xorlw	1	; case 1
 24328  003B78  B4D8               	btfsc	status,2,c
 24329  003B7A  D7C6               	goto	l2889
 24330  003B7C  0A03               	xorlw	3	; case 2
 24331  003B7E  B4D8               	btfsc	status,2,c
 24332  003B80  D7F2               	goto	l2895
 24333  003B82                     l2888:
 24334                           
 24335                           ; BSR set to: 1
 24336                           ;app_delCmd.c: 117: return isComplete;
 24337                           
 24338                           ; BSR set to: 1
 24339  003B82  5118               	movf	delCmdFsm@isComplete& (0+255),w,b
 24340  003B84  0012               	return	
 24341  003B86                     __end_of_delCmdFsm:
 24342                           	opt stack 0
 24343                           tosu	equ	0xFFF
 24344                           tosh	equ	0xFFE
 24345                           tosl	equ	0xFFD
 24346                           pclath	equ	0xFFA
 24347                           tblptru	equ	0xFF8
 24348                           tblptrh	equ	0xFF7
 24349                           tblptrl	equ	0xFF6
 24350                           tablat	equ	0xFF5
 24351                           prodh	equ	0xFF4
 24352                           prodl	equ	0xFF3
 24353                           intcon	equ	0xFF2
 24354                           intcon2	equ	0xFF1
 24355                           intcon3	equ	0xFF0
 24356                           indf0	equ	0xFEF
 24357                           postinc0	equ	0xFEE
 24358                           plusw0	equ	0xFEB
 24359                           fsr0h	equ	0xFEA
 24360                           fsr0l	equ	0xFE9
 24361                           wreg	equ	0xFE8
 24362                           indf1	equ	0xFE7
 24363                           postinc1	equ	0xFE6
 24364                           postdec1	equ	0xFE5
 24365                           fsr1h	equ	0xFE2
 24366                           fsr1l	equ	0xFE1
 24367                           indf2	equ	0xFDF
 24368                           postinc2	equ	0xFDE
 24369                           postdec2	equ	0xFDD
 24370                           plusw2	equ	0xFDB
 24371                           fsr2h	equ	0xFDA
 24372                           fsr2l	equ	0xFD9
 24373                           status	equ	0xFD8
 24374                           
 24375 ;; *************** function _cmdVisualEffet *****************
 24376 ;; Defined at:
 24377 ;;		line 98 in file "../Source/c/04_App/app_utils.c"
 24378 ;; Parameters:    Size  Location     Type
 24379 ;;  isCmdSuccess    1    wreg     unsigned char 
 24380 ;; Auto vars:     Size  Location     Type
 24381 ;;  isCmdSuccess    1   51[BANK0 ] unsigned char 
 24382 ;;  seconds         1   52[BANK0 ] unsigned char 
 24383 ;; Return value:  Size  Location     Type
 24384 ;;                  1    wreg      void 
 24385 ;; Registers used:
 24386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24387 ;; Tracked objects:
 24388 ;;		On entry : 0/0
 24389 ;;		On exit  : 0/0
 24390 ;;		Unchanged: 0/0
 24391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24393 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24395 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24396 ;;Total ram usage:        2 bytes
 24397 ;; Hardware stack levels used:    1
 24398 ;; Hardware stack levels required when called:   13
 24399 ;; This function calls:
 24400 ;;		_Led_SetLedStatus
 24401 ;;		_secondsAppTimer
 24402 ;; This function is called by:
 24403 ;;		_MyApp_Task
 24404 ;; This function uses a non-reentrant model
 24405 ;;
 24406                           
 24407                           	psect	text114
 24408  0061BA                     __ptext114:
 24409                           	opt stack 0
 24410  0061BA                     _cmdVisualEffet:
 24411                           	opt stack 14
 24412                           
 24413                           ; BSR set to: 1
 24414                           ;incstack = 0
 24415                           ;cmdVisualEffet@isCmdSuccessfull stored from wreg
 24416  0061BA  0100               	movlb	0	; () banked
 24417  0061BC  6F93               	movwf	cmdVisualEffet@isCmdSuccessfull& (0+255),b
 24418                           
 24419                           ;app_utils.c: 100: uint8_t seconds = 7;
 24420  0061BE  0E07               	movlw	7
 24421  0061C0  0100               	movlb	0	; () banked
 24422  0061C2  6F94               	movwf	cmdVisualEffet@seconds& (0+255),b
 24423                           
 24424                           ; BSR set to: 0
 24425                           ;app_utils.c: 101: if (isCmdSuccessfull)
 24426  0061C4  5193               	movf	cmdVisualEffet@isCmdSuccessfull& (0+255),w,b
 24427  0061C6  B4D8               	btfsc	status,2,c
 24428  0061C8  D002               	goto	l2766
 24429                           
 24430                           ; BSR set to: 0
 24431                           ;app_utils.c: 102: {
 24432                           ;app_utils.c: 103: seconds = 3;
 24433  0061CA  0E03               	movlw	3
 24434  0061CC  6F94               	movwf	cmdVisualEffet@seconds& (0+255),b
 24435  0061CE                     l2766:
 24436                           
 24437                           ; BSR set to: 0
 24438                           ;app_utils.c: 104: }
 24439                           ;app_utils.c: 105: if (secondsAppTimer(seconds, &blinkInSeconds, 0))
 24440                           
 24441                           ; BSR set to: 0
 24442  0061CE  0EFD               	movlw	low _blinkInSeconds
 24443  0061D0  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 24444  0061D2  0E03               	movlw	high _blinkInSeconds
 24445  0061D4  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 24446  0061D6  0E00               	movlw	0
 24447  0061D8  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 24448  0061DA  5194               	movf	cmdVisualEffet@seconds& (0+255),w,b
 24449  0061DC  EC3D  F025         	call	_secondsAppTimer
 24450  0061E0  0900               	iorlw	0
 24451  0061E2  B4D8               	btfsc	status,2,c
 24452  0061E4  D007               	goto	l2767
 24453                           
 24454                           ;app_utils.c: 106: {
 24455                           ;app_utils.c: 107: Led_SetLedStatus(2u, LED_STS_OFF);
 24456  0061E6  0E00               	movlw	0
 24457  0061E8  0100               	movlb	0	; () banked
 24458  0061EA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 24459  0061EC  0E02               	movlw	2
 24460  0061EE  ECE6  F033         	call	_Led_SetLedStatus
 24461                           
 24462                           ;app_utils.c: 108: }
 24463  0061F2  0012               	return	
 24464  0061F4                     l2767:
 24465                           
 24466                           ;app_utils.c: 109: else
 24467                           ;app_utils.c: 110: {
 24468                           ;app_utils.c: 111: Led_SetLedStatus(2u, LED_STS_BLINK);
 24469  0061F4  0E03               	movlw	3
 24470  0061F6  0100               	movlb	0	; () banked
 24471  0061F8  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 24472  0061FA  0E02               	movlw	2
 24473  0061FC  ECE6  F033         	call	_Led_SetLedStatus
 24474  006200  0012               	return	
 24475  006202                     __end_of_cmdVisualEffet:
 24476                           	opt stack 0
 24477                           tosu	equ	0xFFF
 24478                           tosh	equ	0xFFE
 24479                           tosl	equ	0xFFD
 24480                           pclath	equ	0xFFA
 24481                           tblptru	equ	0xFF8
 24482                           tblptrh	equ	0xFF7
 24483                           tblptrl	equ	0xFF6
 24484                           tablat	equ	0xFF5
 24485                           prodh	equ	0xFF4
 24486                           prodl	equ	0xFF3
 24487                           intcon	equ	0xFF2
 24488                           intcon2	equ	0xFF1
 24489                           intcon3	equ	0xFF0
 24490                           indf0	equ	0xFEF
 24491                           postinc0	equ	0xFEE
 24492                           plusw0	equ	0xFEB
 24493                           fsr0h	equ	0xFEA
 24494                           fsr0l	equ	0xFE9
 24495                           wreg	equ	0xFE8
 24496                           indf1	equ	0xFE7
 24497                           postinc1	equ	0xFE6
 24498                           postdec1	equ	0xFE5
 24499                           fsr1h	equ	0xFE2
 24500                           fsr1l	equ	0xFE1
 24501                           indf2	equ	0xFDF
 24502                           postinc2	equ	0xFDE
 24503                           postdec2	equ	0xFDD
 24504                           plusw2	equ	0xFDB
 24505                           fsr2h	equ	0xFDA
 24506                           fsr2l	equ	0xFD9
 24507                           status	equ	0xFD8
 24508                           
 24509 ;; *************** function _secondsAppTimer *****************
 24510 ;; Defined at:
 24511 ;;		line 69 in file "../Source/c/04_App/app_utils.c"
 24512 ;; Parameters:    Size  Location     Type
 24513 ;;  seconds         1    wreg     unsigned char 
 24514 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 24515 ;;		 -> blinkInSeconds(2), setupCallTicks(2), initGprsModem@modemCounter(2), RAM(3775), 
 24516 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 24517 ;; Auto vars:     Size  Location     Type
 24518 ;;  seconds         1   47[BANK0 ] unsigned char 
 24519 ;;  destinationT    2   49[BANK0 ] unsigned int 
 24520 ;;  isExpired       1   48[BANK0 ] unsigned char 
 24521 ;; Return value:  Size  Location     Type
 24522 ;;                  1    wreg      unsigned char 
 24523 ;; Registers used:
 24524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24525 ;; Tracked objects:
 24526 ;;		On entry : 0/0
 24527 ;;		On exit  : 0/0
 24528 ;;		Unchanged: 0/0
 24529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24530 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24531 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24532 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24533 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24534 ;;Total ram usage:        9 bytes
 24535 ;; Hardware stack levels used:    1
 24536 ;; Hardware stack levels required when called:   12
 24537 ;; This function calls:
 24538 ;;		___lwdiv
 24539 ;;		___wmul
 24540 ;; This function is called by:
 24541 ;;		_initGprsModem
 24542 ;;		_waitSetupCall
 24543 ;;		_cmdVisualEffet
 24544 ;;		_triggerCmdFsm
 24545 ;; This function uses a non-reentrant model
 24546 ;;
 24547                           
 24548                           	psect	text115
 24549  004A7A                     __ptext115:
 24550                           	opt stack 0
 24551  004A7A                     _secondsAppTimer:
 24552                           	opt stack 14
 24553                           
 24554                           ;incstack = 0
 24555                           ;secondsAppTimer@seconds stored from wreg
 24556  004A7A  0100               	movlb	0	; () banked
 24557  004A7C  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 24558                           
 24559                           ;app_utils.c: 71: bool isExpired = 1;
 24560  004A7E  0E01               	movlw	1
 24561  004A80  0100               	movlb	0	; () banked
 24562  004A82  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 24563                           
 24564                           ; BSR set to: 0
 24565                           ;app_utils.c: 72: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 24566  004A84  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 24567  004A88  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 24568  004A8A  0E03               	movlw	3
 24569  004A8C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24570  004A8E  0EE8               	movlw	232
 24571  004A90  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 24572  004A92  EC6C  F034         	call	___wmul	;wreg free
 24573  004A96  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 24574  004A9A  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 24575  004A9E  0E00               	movlw	0
 24576  004AA0  0100               	movlb	0	; () banked
 24577  004AA2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24578  004AA4  0E64               	movlw	100
 24579  004AA6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 24580  004AA8  EC04  F02F         	call	___lwdiv	;wreg free
 24581  004AAC  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 24582  004AB0  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 24583                           
 24584                           ;app_utils.c: 74: if (*counter < destinationTicks)
 24585  004AB4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24586  004AB8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24587  004ABC  0100               	movlb	0	; () banked
 24588  004ABE  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 24589  004AC0  5CDE               	subwf	postinc2,w,c
 24590  004AC2  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 24591  004AC4  58DE               	subwfb	postinc2,w,c
 24592  004AC6  B0D8               	btfsc	status,0,c
 24593  004AC8  D009               	goto	l2756
 24594                           
 24595                           ; BSR set to: 0
 24596                           ;app_utils.c: 75: {
 24597                           ;app_utils.c: 76: *counter += 1;
 24598  004ACA  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24599  004ACE  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24600  004AD2  2ADE               	incf	postinc2,f,c
 24601  004AD4  0E00               	movlw	0
 24602  004AD6  22DD               	addwfc	postdec2,f,c
 24603                           
 24604                           ; BSR set to: 0
 24605                           ;app_utils.c: 77: isExpired = 0;
 24606  004AD8  0E00               	movlw	0
 24607  004ADA  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 24608  004ADC                     l2756:
 24609                           
 24610                           ; BSR set to: 0
 24611                           ;app_utils.c: 78: }
 24612                           ;app_utils.c: 79: if (*counter == destinationTicks)
 24613                           
 24614                           ; BSR set to: 0
 24615  004ADC  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24616  004AE0  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24617  004AE4  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 24618  004AE6  18DE               	xorwf	postinc2,w,c
 24619  004AE8  E117               	bnz	l14467
 24620  004AEA  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 24621  004AEC  18DE               	xorwf	postinc2,w,c
 24622  004AEE  A4D8               	btfss	status,2,c
 24623  004AF0  D013               	goto	l2759
 24624                           
 24625                           ; BSR set to: 0
 24626                           ;app_utils.c: 80: {
 24627                           ;app_utils.c: 81: if (isCyclic)
 24628  004AF2  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 24629  004AF4  B4D8               	btfsc	status,2,c
 24630  004AF6  D008               	goto	l2758
 24631                           
 24632                           ; BSR set to: 0
 24633                           ;app_utils.c: 82: {
 24634                           ;app_utils.c: 83: *counter = 0;
 24635  004AF8  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24636  004AFC  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24637  004B00  0E00               	movlw	0
 24638  004B02  6EDE               	movwf	postinc2,c
 24639  004B04  0E00               	movlw	0
 24640  004B06  D007               	goto	L45
 24641  004B08                     l2758:
 24642                           
 24643                           ; BSR set to: 0
 24644                           ;app_utils.c: 85: else
 24645                           ;app_utils.c: 86: {
 24646                           ;app_utils.c: 87: *counter = 0xFFFF;
 24647                           
 24648                           ; BSR set to: 0
 24649  004B08  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 24650  004B0C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 24651  004B10  0EFF               	movlw	255
 24652  004B12  6EDE               	movwf	postinc2,c
 24653  004B14  0EFF               	movlw	255
 24654  004B16                     L45:
 24655  004B16  6EDD               	movwf	postdec2,c
 24656  004B18                     l2759:
 24657  004B18                     l14467:
 24658                           
 24659                           ; BSR set to: 0
 24660                           ;app_utils.c: 88: }
 24661                           ;app_utils.c: 89: }
 24662                           ;app_utils.c: 90: return isExpired;
 24663  004B18  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 24664  004B1A  0012               	return	
 24665  004B1C                     __end_of_secondsAppTimer:
 24666                           	opt stack 0
 24667                           tosu	equ	0xFFF
 24668                           tosh	equ	0xFFE
 24669                           tosl	equ	0xFFD
 24670                           pclath	equ	0xFFA
 24671                           tblptru	equ	0xFF8
 24672                           tblptrh	equ	0xFF7
 24673                           tblptrl	equ	0xFF6
 24674                           tablat	equ	0xFF5
 24675                           prodh	equ	0xFF4
 24676                           prodl	equ	0xFF3
 24677                           intcon	equ	0xFF2
 24678                           intcon2	equ	0xFF1
 24679                           intcon3	equ	0xFF0
 24680                           indf0	equ	0xFEF
 24681                           postinc0	equ	0xFEE
 24682                           plusw0	equ	0xFEB
 24683                           fsr0h	equ	0xFEA
 24684                           fsr0l	equ	0xFE9
 24685                           wreg	equ	0xFE8
 24686                           indf1	equ	0xFE7
 24687                           postinc1	equ	0xFE6
 24688                           postdec1	equ	0xFE5
 24689                           fsr1h	equ	0xFE2
 24690                           fsr1l	equ	0xFE1
 24691                           indf2	equ	0xFDF
 24692                           postinc2	equ	0xFDE
 24693                           postdec2	equ	0xFDD
 24694                           plusw2	equ	0xFDB
 24695                           fsr2h	equ	0xFDA
 24696                           fsr2l	equ	0xFD9
 24697                           status	equ	0xFD8
 24698                           
 24699 ;; *************** function _addCmdFsm *****************
 24700 ;; Defined at:
 24701 ;;		line 72 in file "../Source/c/04_App/app_addCmd.c"
 24702 ;; Parameters:    Size  Location     Type
 24703 ;;  receivedNumb    2    5[BANK1 ] PTR unsigned char 
 24704 ;;		 -> receivedNumber(13), 
 24705 ;;  smsText         2    7[BANK1 ] PTR unsigned char 
 24706 ;;		 -> smsText(20), 
 24707 ;;  isCmdSuccess    2    9[BANK1 ] PTR unsigned char 
 24708 ;;		 -> MyApp_Task@isCmdSuccessfull(1), 
 24709 ;; Auto vars:     Size  Location     Type
 24710 ;;  searchNumber    1   14[BANK1 ] unsigned char 
 24711 ;;  numberInMemo    1   13[BANK1 ] unsigned char 
 24712 ;;  masterOpResu    1   12[BANK1 ] unsigned char 
 24713 ;;  isComplete      1   11[BANK1 ] unsigned char 
 24714 ;; Return value:  Size  Location     Type
 24715 ;;                  1    wreg      unsigned char 
 24716 ;; Registers used:
 24717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24718 ;; Tracked objects:
 24719 ;;		On entry : 0/0
 24720 ;;		On exit  : 0/0
 24721 ;;		Unchanged: 0/0
 24722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24723 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24724 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24726 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24727 ;;Total ram usage:       10 bytes
 24728 ;; Hardware stack levels used:    1
 24729 ;; Hardware stack levels required when called:   18
 24730 ;; This function calls:
 24731 ;;		_findEmptySpot
 24732 ;;		_isMasterNumber
 24733 ;;		_isNumberInMemory
 24734 ;;		_saveNumberInMemory
 24735 ;; This function is called by:
 24736 ;;		_MyApp_Task
 24737 ;; This function uses a non-reentrant model
 24738 ;;
 24739                           
 24740                           	psect	text116
 24741  0033A0                     __ptext116:
 24742                           	opt stack 0
 24743  0033A0                     _addCmdFsm:
 24744                           	opt stack 9
 24745                           
 24746                           ;app_addCmd.c: 74: static addFsmStates currentState = ADD_FSM_CHECK_MASTER;
 24747                           ;app_addCmd.c: 75: bool isComplete = 0;
 24748                           
 24749                           ; BSR set to: 0
 24750                           ;incstack = 0
 24751  0033A0  0E00               	movlw	0
 24752  0033A2  0101               	movlb	1	; () banked
 24753  0033A4  6F0B               	movwf	addCmdFsm@isComplete& (0+255),b
 24754                           
 24755                           ;app_addCmd.c: 76: uint8_t numberInMemory = 0;
 24756  0033A6  0E00               	movlw	0
 24757  0033A8  6F0D               	movwf	addCmdFsm@numberInMemory& (0+255),b
 24758                           
 24759                           ;app_addCmd.c: 77: uint8_t masterOpResult = OP_FAILED;
 24760  0033AA  0E01               	movlw	1
 24761  0033AC  6F0C               	movwf	addCmdFsm@masterOpResult& (0+255),b
 24762                           
 24763                           ;app_addCmd.c: 78: uint8_t searchNumber = OP_FAILED;
 24764  0033AE  0E01               	movlw	1
 24765  0033B0  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24766                           
 24767                           ;app_addCmd.c: 80: switch (currentState)
 24768  0033B2  D05E               	goto	l2844
 24769  0033B4                     
 24770                           ; BSR set to: 1
 24771                           ;app_addCmd.c: 83: *isCmdSuccessfull = 0;
 24772                           
 24773                           ; BSR set to: 1
 24774  0033B4  C109  FFD9         	movff	addCmdFsm@isCmdSuccessfull,fsr2l
 24775  0033B8  C10A  FFDA         	movff	addCmdFsm@isCmdSuccessfull+1,fsr2h
 24776  0033BC  0E00               	movlw	0
 24777  0033BE  6EDF               	movwf	indf2,c
 24778                           
 24779                           ; BSR set to: 1
 24780                           ;app_addCmd.c: 84: masterOpResult = isMasterNumber(receivedNumber);
 24781  0033C0  C105  F100         	movff	addCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 24782  0033C4  C106  F101         	movff	addCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 24783  0033C8  EC54  F02B         	call	_isMasterNumber	;wreg free
 24784  0033CC  0101               	movlb	1	; () banked
 24785  0033CE  6F0C               	movwf	addCmdFsm@masterOpResult& (0+255),b
 24786                           
 24787                           ; BSR set to: 1
 24788                           ;app_addCmd.c: 85: if (masterOpResult == OP_SUCCESS)
 24789  0033D0  510C               	movf	addCmdFsm@masterOpResult& (0+255),w,b
 24790  0033D2  A4D8               	btfss	status,2,c
 24791  0033D4  D002               	goto	l2846
 24792                           
 24793                           ; BSR set to: 1
 24794                           ;app_addCmd.c: 86: {
 24795                           ;app_addCmd.c: 87: currentState = ADD_FSM_CHECK_DUPLICATED;
 24796  0033D6  0E01               	movlw	1
 24797  0033D8  D01F               	goto	L48
 24798  0033DA                     l2846:
 24799                           
 24800                           ; BSR set to: 1
 24801                           ;app_addCmd.c: 89: else if (masterOpResult == OP_FAILED)
 24802                           
 24803                           ; BSR set to: 1
 24804  0033DA  050C               	decf	addCmdFsm@masterOpResult& (0+255),w,b
 24805  0033DC                     L49:
 24806  0033DC  A4D8               	btfss	status,2,c
 24807  0033DE  D055               	goto	l2849
 24808  0033E0  D040               	goto	u16320
 24809  0033E2                     
 24810                           ; BSR set to: 1
 24811                           ;app_addCmd.c: 96: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 24812                           
 24813                           ; BSR set to: 1
 24814  0033E2  0E04               	movlw	4
 24815  0033E4  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 24816  0033E6  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 24817  0033E8  0E00               	movlw	0
 24818  0033EA  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 24819  0033EC  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 24820  0033EE  0E0D               	movlw	low addCmdFsm@numberInMemory
 24821  0033F0  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 24822  0033F2  0E01               	movlw	high addCmdFsm@numberInMemory
 24823  0033F4  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 24824  0033F6  ECDC  F022         	call	_isNumberInMemory	;wreg free
 24825  0033FA  0101               	movlb	1	; () banked
 24826  0033FC  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24827                           
 24828                           ; BSR set to: 1
 24829                           ;app_addCmd.c: 97: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 24830  0033FE  0E04               	movlw	4
 24831  003400  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24832  003402  A4D8               	btfss	status,2,c
 24833  003404  D002               	goto	l2851
 24834                           
 24835                           ; BSR set to: 1
 24836                           ;app_addCmd.c: 98: {
 24837                           ;app_addCmd.c: 99: currentState = ADD_FSM_SAVE_NEW;
 24838  003406  0E02               	movlw	2
 24839  003408  D007               	goto	L48
 24840  00340A                     l2851:
 24841                           
 24842                           ; BSR set to: 1
 24843                           ;app_addCmd.c: 101: else if (searchNumber == SEARCH_FSM_FOUND || searchNumber == SEARCH_
      +                          FSM_ERROR)
 24844                           
 24845                           ; BSR set to: 1
 24846  00340A  0E03               	movlw	3
 24847  00340C  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24848  00340E  B4D8               	btfsc	status,2,c
 24849  003410  D028               	goto	u16320
 24850                           
 24851                           ; BSR set to: 1
 24852  003412  0E02               	movlw	2
 24853  003414  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24854  003416  D7E2               	goto	L49
 24855  003418                     L48:
 24856  003418  6FD6               	movwf	addCmdFsm@currentState& (0+255),b
 24857                           
 24858                           ; BSR set to: 1
 24859                           ;app_addCmd.c: 104: }
 24860                           ;app_addCmd.c: 105: break;
 24861                           
 24862                           ; BSR set to: 1
 24863  00341A  D037               	goto	l2849
 24864  00341C                     
 24865                           ; BSR set to: 1
 24866                           ;app_addCmd.c: 108: searchNumber = findEmptySpot(&numberInMemory);
 24867                           
 24868                           ; BSR set to: 1
 24869  00341C  0E0D               	movlw	low addCmdFsm@numberInMemory
 24870  00341E  6F00               	movwf	findEmptySpot@positionInMemory& (0+255),b
 24871  003420  0E01               	movlw	high addCmdFsm@numberInMemory
 24872  003422  6F01               	movwf	(findEmptySpot@positionInMemory+1)& (0+255),b
 24873  003424  EC5D  F027         	call	_findEmptySpot	;wreg free
 24874  003428  0101               	movlb	1	; () banked
 24875  00342A  6F0E               	movwf	addCmdFsm@searchNumber& (0+255),b
 24876                           
 24877                           ; BSR set to: 1
 24878                           ;app_addCmd.c: 109: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 24879  00342C  0E04               	movlw	4
 24880  00342E  190E               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 24881  003430  A4D8               	btfss	status,2,c
 24882  003432  D7EB               	goto	l2851
 24883                           
 24884                           ; BSR set to: 1
 24885                           ;app_addCmd.c: 110: {
 24886                           ;app_addCmd.c: 111: saveNumberInMemory(numberInMemory, smsText + 4);
 24887  003434  0E04               	movlw	4
 24888  003436  2507               	addwf	addCmdFsm@smsText& (0+255),w,b
 24889  003438  0100               	movlb	0	; () banked
 24890  00343A  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 24891  00343C  0E00               	movlw	0
 24892  00343E  0101               	movlb	1	; () banked
 24893  003440  2108               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 24894  003442  0100               	movlb	0	; () banked
 24895  003444  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 24896  003446  0101               	movlb	1	; () banked
 24897  003448  510D               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 24898  00344A  ECE1  F035         	call	_saveNumberInMemory
 24899                           
 24900                           ;app_addCmd.c: 112: currentState = ADD_FSM_COMPLETE;
 24901  00344E  0E03               	movlw	3
 24902  003450  0101               	movlb	1	; () banked
 24903  003452  6FD6               	movwf	addCmdFsm@currentState& (0+255),b
 24904                           
 24905                           ; BSR set to: 1
 24906                           ;app_addCmd.c: 113: *isCmdSuccessfull = 1;
 24907  003454  C109  FFD9         	movff	addCmdFsm@isCmdSuccessfull,fsr2l
 24908  003458  C10A  FFDA         	movff	addCmdFsm@isCmdSuccessfull+1,fsr2h
 24909  00345C  0E01               	movlw	1
 24910  00345E  6EDF               	movwf	indf2,c
 24911                           
 24912                           ;app_addCmd.c: 114: }
 24913  003460  D014               	goto	l2849
 24914  003462                     u16320:
 24915                           
 24916                           ; BSR set to: 1
 24917                           ;app_addCmd.c: 116: {
 24918                           ;app_addCmd.c: 117: currentState = ADD_FSM_COMPLETE;
 24919                           
 24920                           ; BSR set to: 1
 24921  003462  0E03               	movlw	3
 24922  003464  D7D9               	goto	L48
 24923  003466                     
 24924                           ; BSR set to: 1
 24925                           ;app_addCmd.c: 122: currentState = ADD_FSM_CHECK_MASTER;
 24926                           
 24927                           ; BSR set to: 1
 24928  003466  0E00               	movlw	0
 24929  003468  6FD6               	movwf	addCmdFsm@currentState& (0+255),b
 24930                           
 24931                           ;app_addCmd.c: 123: isComplete = 1;
 24932  00346A  0E01               	movlw	1
 24933  00346C  6F0B               	movwf	addCmdFsm@isComplete& (0+255),b
 24934                           
 24935                           ; BSR set to: 1
 24936                           ;app_addCmd.c: 128: }
 24937                           
 24938                           ; BSR set to: 1
 24939                           ;app_addCmd.c: 127: break;
 24940                           
 24941                           ;app_addCmd.c: 126: default:
 24942                           
 24943                           ;app_addCmd.c: 124: break;
 24944  00346E  D00D               	goto	l2849
 24945  003470                     l2844:
 24946                           
 24947                           ; BSR set to: 1
 24948                           
 24949                           ; BSR set to: 1
 24950  003470  51D6               	movf	addCmdFsm@currentState& (0+255),w,b
 24951                           
 24952                           ; Switch size 1, requested type "space"
 24953                           ; Number of cases is 4, Range of values is 0 to 3
 24954                           ; switch strategies available:
 24955                           ; Name         Instructions Cycles
 24956                           ; simple_byte           13     7 (average)
 24957                           ;	Chosen strategy is simple_byte
 24958  003472  0A00               	xorlw	0	; case 0
 24959  003474  B4D8               	btfsc	status,2,c
 24960  003476  D79E               	goto	l2845
 24961  003478  0A01               	xorlw	1	; case 1
 24962  00347A  B4D8               	btfsc	status,2,c
 24963  00347C  D7B2               	goto	l2850
 24964  00347E  0A03               	xorlw	3	; case 2
 24965  003480  B4D8               	btfsc	status,2,c
 24966  003482  D7CC               	goto	l2856
 24967  003484  0A01               	xorlw	1	; case 3
 24968  003486  B4D8               	btfsc	status,2,c
 24969  003488  D7EE               	goto	l2862
 24970  00348A                     l2849:
 24971                           
 24972                           ; BSR set to: 1
 24973                           ;app_addCmd.c: 129: return isComplete;
 24974                           
 24975                           ; BSR set to: 1
 24976  00348A  510B               	movf	addCmdFsm@isComplete& (0+255),w,b
 24977  00348C  0012               	return	
 24978  00348E                     __end_of_addCmdFsm:
 24979                           	opt stack 0
 24980                           tosu	equ	0xFFF
 24981                           tosh	equ	0xFFE
 24982                           tosl	equ	0xFFD
 24983                           pclath	equ	0xFFA
 24984                           tblptru	equ	0xFF8
 24985                           tblptrh	equ	0xFF7
 24986                           tblptrl	equ	0xFF6
 24987                           tablat	equ	0xFF5
 24988                           prodh	equ	0xFF4
 24989                           prodl	equ	0xFF3
 24990                           intcon	equ	0xFF2
 24991                           intcon2	equ	0xFF1
 24992                           intcon3	equ	0xFF0
 24993                           indf0	equ	0xFEF
 24994                           postinc0	equ	0xFEE
 24995                           plusw0	equ	0xFEB
 24996                           fsr0h	equ	0xFEA
 24997                           fsr0l	equ	0xFE9
 24998                           wreg	equ	0xFE8
 24999                           indf1	equ	0xFE7
 25000                           postinc1	equ	0xFE6
 25001                           postdec1	equ	0xFE5
 25002                           fsr1h	equ	0xFE2
 25003                           fsr1l	equ	0xFE1
 25004                           indf2	equ	0xFDF
 25005                           postinc2	equ	0xFDE
 25006                           postdec2	equ	0xFDD
 25007                           plusw2	equ	0xFDB
 25008                           fsr2h	equ	0xFDA
 25009                           fsr2l	equ	0xFD9
 25010                           status	equ	0xFD8
 25011                           
 25012 ;; *************** function _saveNumberInMemory *****************
 25013 ;; Defined at:
 25014 ;;		line 121 in file "../Source/c/04_App/app_utils.c"
 25015 ;; Parameters:    Size  Location     Type
 25016 ;;  address         1    wreg     unsigned char 
 25017 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 25018 ;;		 -> delCmdFsm@emptyNumber(13), smsText(20), UsbMasterPhoneNumber(15), callerNumber(13), 
 25019 ;; Auto vars:     Size  Location     Type
 25020 ;;  address         1   56[BANK0 ] unsigned char 
 25021 ;; Return value:  Size  Location     Type
 25022 ;;                  1    wreg      void 
 25023 ;; Registers used:
 25024 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25025 ;; Tracked objects:
 25026 ;;		On entry : 0/0
 25027 ;;		On exit  : 0/0
 25028 ;;		Unchanged: 0/0
 25029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25033 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25034 ;;Total ram usage:        3 bytes
 25035 ;; Hardware stack levels used:    1
 25036 ;; Hardware stack levels required when called:   14
 25037 ;; This function calls:
 25038 ;;		_Eeprom_Write
 25039 ;; This function is called by:
 25040 ;;		_initFsm
 25041 ;;		_detectUsbNumber
 25042 ;;		_addCmdFsm
 25043 ;;		_delCmdFsm
 25044 ;; This function uses a non-reentrant model
 25045 ;;
 25046                           
 25047                           	psect	text117
 25048  006BC2                     __ptext117:
 25049                           	opt stack 0
 25050  006BC2                     _saveNumberInMemory:
 25051                           	opt stack 12
 25052                           
 25053                           ; BSR set to: 1
 25054                           ;incstack = 0
 25055                           ;saveNumberInMemory@address stored from wreg
 25056  006BC2  0100               	movlb	0	; () banked
 25057  006BC4  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 25058                           
 25059                           ;app_utils.c: 123: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 25060  006BC6  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 25061  006BCA  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 25062  006BCE  0E0D               	movlw	13
 25063  006BD0  0100               	movlb	0	; () banked
 25064  006BD2  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 25065  006BD4  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 25066  006BD6  EC2E  F02F         	call	_Eeprom_Write
 25067  006BDA  0012               	return		;funcret
 25068  006BDC                     __end_of_saveNumberInMemory:
 25069                           	opt stack 0
 25070                           tosu	equ	0xFFF
 25071                           tosh	equ	0xFFE
 25072                           tosl	equ	0xFFD
 25073                           pclath	equ	0xFFA
 25074                           tblptru	equ	0xFF8
 25075                           tblptrh	equ	0xFF7
 25076                           tblptrl	equ	0xFF6
 25077                           tablat	equ	0xFF5
 25078                           prodh	equ	0xFF4
 25079                           prodl	equ	0xFF3
 25080                           intcon	equ	0xFF2
 25081                           intcon2	equ	0xFF1
 25082                           intcon3	equ	0xFF0
 25083                           indf0	equ	0xFEF
 25084                           postinc0	equ	0xFEE
 25085                           plusw0	equ	0xFEB
 25086                           fsr0h	equ	0xFEA
 25087                           fsr0l	equ	0xFE9
 25088                           wreg	equ	0xFE8
 25089                           indf1	equ	0xFE7
 25090                           postinc1	equ	0xFE6
 25091                           postdec1	equ	0xFE5
 25092                           fsr1h	equ	0xFE2
 25093                           fsr1l	equ	0xFE1
 25094                           indf2	equ	0xFDF
 25095                           postinc2	equ	0xFDE
 25096                           postdec2	equ	0xFDD
 25097                           plusw2	equ	0xFDB
 25098                           fsr2h	equ	0xFDA
 25099                           fsr2l	equ	0xFD9
 25100                           status	equ	0xFD8
 25101                           
 25102 ;; *************** function _Eeprom_Write *****************
 25103 ;; Defined at:
 25104 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 25105 ;; Parameters:    Size  Location     Type
 25106 ;;  MemoryAddres    1    wreg     unsigned char 
 25107 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 25108 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), UsbMasterPhoneNumber(15), 
 25109 ;;		 -> callerNumber(13), 
 25110 ;;  DataLength      1   49[BANK0 ] unsigned char 
 25111 ;; Auto vars:     Size  Location     Type
 25112 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 25113 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 25114 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 25115 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 25116 ;; Return value:  Size  Location     Type
 25117 ;;                  1    wreg      unsigned char 
 25118 ;; Registers used:
 25119 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25120 ;; Tracked objects:
 25121 ;;		On entry : 0/0
 25122 ;;		On exit  : 0/0
 25123 ;;		Unchanged: 0/0
 25124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25125 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25126 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25128 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25129 ;;Total ram usage:        7 bytes
 25130 ;; Hardware stack levels used:    1
 25131 ;; Hardware stack levels required when called:   13
 25132 ;; This function calls:
 25133 ;;		_I2cSlv_SendI2cMsg
 25134 ;;		_StringCopy
 25135 ;; This function is called by:
 25136 ;;		_savePreamble
 25137 ;;		_saveNumberInMemory
 25138 ;; This function uses a non-reentrant model
 25139 ;;
 25140                           
 25141                           	psect	text118
 25142  005E5C                     __ptext118:
 25143                           	opt stack 0
 25144  005E5C                     _Eeprom_Write:
 25145                           	opt stack 12
 25146                           
 25147                           ;incstack = 0
 25148                           ;Eeprom_Write@MemoryAddress stored from wreg
 25149  005E5C  0100               	movlb	0	; () banked
 25150  005E5E  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 25151                           
 25152                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 25153  005E60  0E50               	movlw	80
 25154  005E62  0100               	movlb	0	; () banked
 25155  005E64  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 25156                           
 25157                           ; BSR set to: 0
 25158                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 25159  005E66  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 25160  005E68  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 25161                           
 25162                           ; BSR set to: 0
 25163                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 25164  005E6A  0E00               	movlw	0
 25165  005E6C  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 25166                           
 25167                           ; BSR set to: 0
 25168                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 25169  005E6E  0E10               	movlw	16
 25170  005E70  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 25171  005E72  0012               	return	
 25172                           
 25173                           ; BSR set to: 0
 25174                           ;eeprom_if.c: 85: {
 25175                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 25176  005E74  C093  F4BB         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 25177                           
 25178                           ; BSR set to: 0
 25179                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 25180  005E78  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 25181  005E7C  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 25182  005E80  0EBC               	movlw	low (_EepromBuffer+1)
 25183  005E82  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25184  005E84  0E04               	movlw	high (_EepromBuffer+1)
 25185  005E86  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25186  005E88  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 25187  005E8C  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 25188  005E8E  ECC4  F02C         	call	_StringCopy	;wreg free
 25189                           
 25190                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 25191  005E92  0EBB               	movlw	low _EepromBuffer
 25192  005E94  0100               	movlb	0	; () banked
 25193  005E96  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 25194  005E98  0E04               	movlw	high _EepromBuffer
 25195  005E9A  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 25196  005E9C  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 25197  005EA0  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 25198  005EA4  EC4D  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 25199  005EA8  0100               	movlb	0	; () banked
 25200  005EAA  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 25201                           
 25202                           ; BSR set to: 0
 25203  005EAC  0012               	return	
 25204  005EAE                     __end_of_Eeprom_Write:
 25205                           	opt stack 0
 25206                           tosu	equ	0xFFF
 25207                           tosh	equ	0xFFE
 25208                           tosl	equ	0xFFD
 25209                           pclath	equ	0xFFA
 25210                           tblptru	equ	0xFF8
 25211                           tblptrh	equ	0xFF7
 25212                           tblptrl	equ	0xFF6
 25213                           tablat	equ	0xFF5
 25214                           prodh	equ	0xFF4
 25215                           prodl	equ	0xFF3
 25216                           intcon	equ	0xFF2
 25217                           intcon2	equ	0xFF1
 25218                           intcon3	equ	0xFF0
 25219                           indf0	equ	0xFEF
 25220                           postinc0	equ	0xFEE
 25221                           plusw0	equ	0xFEB
 25222                           fsr0h	equ	0xFEA
 25223                           fsr0l	equ	0xFE9
 25224                           wreg	equ	0xFE8
 25225                           indf1	equ	0xFE7
 25226                           postinc1	equ	0xFE6
 25227                           postdec1	equ	0xFE5
 25228                           fsr1h	equ	0xFE2
 25229                           fsr1l	equ	0xFE1
 25230                           indf2	equ	0xFDF
 25231                           postinc2	equ	0xFDE
 25232                           postdec2	equ	0xFDD
 25233                           plusw2	equ	0xFDB
 25234                           fsr2h	equ	0xFDA
 25235                           fsr2l	equ	0xFD9
 25236                           status	equ	0xFD8
 25237                           
 25238 ;; *************** function _isNumberInMemory *****************
 25239 ;; Defined at:
 25240 ;;		line 148 in file "../Source/c/04_App/app_utils.c"
 25241 ;; Parameters:    Size  Location     Type
 25242 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 25243 ;;		 -> receivedNumber(13), smsText(20), 
 25244 ;;  positionInMe    2    2[BANK1 ] PTR unsigned char 
 25245 ;;		 -> triggerCmdFsm@numberInMemory(1), delCmdFsm@numberInMemory(1), addCmdFsm@numberInMemory(1), 
 25246 ;; Auto vars:     Size  Location     Type
 25247 ;;  memoryOpResu    1    4[BANK1 ] enum E8246
 25248 ;; Return value:  Size  Location     Type
 25249 ;;                  1    wreg      enum E8974
 25250 ;; Registers used:
 25251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25252 ;; Tracked objects:
 25253 ;;		On entry : 0/0
 25254 ;;		On exit  : 0/0
 25255 ;;		Unchanged: 0/0
 25256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25257 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25258 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25260 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25261 ;;Total ram usage:        5 bytes
 25262 ;; Hardware stack levels used:    1
 25263 ;; Hardware stack levels required when called:   17
 25264 ;; This function calls:
 25265 ;;		_Eeprom_Read
 25266 ;;		_StringCompare
 25267 ;;		_isNumberValid
 25268 ;; This function is called by:
 25269 ;;		_addCmdFsm
 25270 ;;		_delCmdFsm
 25271 ;;		_triggerCmdFsm
 25272 ;; This function uses a non-reentrant model
 25273 ;;
 25274                           
 25275                           	psect	text119
 25276  0045B8                     __ptext119:
 25277                           	opt stack 0
 25278  0045B8                     _isNumberInMemory:
 25279                           	opt stack 9
 25280                           
 25281                           ;app_utils.c: 150: static searchFsmStates currentState = SEARCH_FSM_START;
 25282                           ;app_utils.c: 151: static uint8_t currentPosition = 32;
 25283                           ;app_utils.c: 152: EepromStsType memoryOpResult = OP_PENDING;
 25284                           
 25285                           ; BSR set to: 0
 25286                           ;incstack = 0
 25287  0045B8  0E02               	movlw	2
 25288  0045BA  0101               	movlb	1	; () banked
 25289  0045BC  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 25290                           
 25291                           ; BSR set to: 1
 25292                           ;app_utils.c: 154: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 25293  0045BE  0E01               	movlw	1
 25294  0045C0  0100               	movlb	0	; () banked
 25295  0045C2  65C5               	cpfsgt	isNumberInMemory@currentState& (0+255),b
 25296  0045C4  D004               	goto	l2787
 25297                           
 25298                           ; BSR set to: 0
 25299                           ;app_utils.c: 155: {
 25300                           ;app_utils.c: 156: currentState = SEARCH_FSM_START;
 25301  0045C6  0E00               	movlw	0
 25302  0045C8  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25303                           
 25304                           ;app_utils.c: 157: currentPosition = 32;
 25305  0045CA  0E20               	movlw	32
 25306  0045CC  6FE1               	movwf	isNumberInMemory@currentPosition& (0+255),b
 25307  0045CE                     l2787:
 25308                           
 25309                           ; BSR set to: 0
 25310                           ;app_utils.c: 158: }
 25311                           ;app_utils.c: 159: if (currentPosition >= (32 + (16 * 10)))
 25312                           
 25313                           ; BSR set to: 0
 25314  0045CE  0EBF               	movlw	191
 25315  0045D0  65E1               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 25316  0045D2  D045               	goto	l2789
 25317                           
 25318                           ; BSR set to: 0
 25319                           ;app_utils.c: 160: {
 25320                           ;app_utils.c: 161: currentState = SEARCH_FSM_NOT_FOUND;
 25321  0045D4  0E04               	movlw	4
 25322  0045D6  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25323                           
 25324                           ; BSR set to: 0
 25325                           ;app_utils.c: 162: }
 25326                           ;app_utils.c: 164: switch (currentState)
 25327  0045D8  D042               	goto	l2789
 25328  0045DA                     
 25329                           ; BSR set to: 0
 25330                           ;app_utils.c: 167: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 25331                           
 25332                           ; BSR set to: 0
 25333  0045DA  0E39               	movlw	low _readBuffer
 25334  0045DC  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 25335  0045DE  0E03               	movlw	high _readBuffer
 25336  0045E0  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 25337  0045E2  0E0D               	movlw	13
 25338  0045E4  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 25339  0045E6  51E1               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 25340  0045E8  ECB0  F02E         	call	_Eeprom_Read
 25341  0045EC  0101               	movlb	1	; () banked
 25342  0045EE  6F04               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 25343                           
 25344                           ; BSR set to: 1
 25345                           ;app_utils.c: 168: if (memoryOpResult == OP_FAILED)
 25346  0045F0  0504               	decf	isNumberInMemory@memoryOpResult& (0+255),w,b
 25347  0045F2  A4D8               	btfss	status,2,c
 25348  0045F4  D002               	goto	l2791
 25349                           
 25350                           ; BSR set to: 1
 25351                           ;app_utils.c: 169: {
 25352                           ;app_utils.c: 170: currentState = SEARCH_FSM_ERROR;
 25353  0045F6  0E02               	movlw	2
 25354  0045F8  D005               	goto	L50
 25355  0045FA                     l2791:
 25356                           
 25357                           ;app_utils.c: 172: else if (memoryOpResult == OP_SUCCESS)
 25358                           
 25359                           ; BSR set to: 0
 25360  0045FA  0101               	movlb	1	; () banked
 25361  0045FC  5104               	movf	isNumberInMemory@memoryOpResult& (0+255),w,b
 25362  0045FE  A4D8               	btfss	status,2,c
 25363  004600  D035               	goto	l2794
 25364                           
 25365                           ; BSR set to: 1
 25366                           ;app_utils.c: 173: {
 25367                           ;app_utils.c: 174: currentState = SEARCH_FSM_CHECK_NUMBER;
 25368  004602  0E01               	movlw	1
 25369  004604                     L50:
 25370  004604  0100               	movlb	0	; () banked
 25371  004606  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25372                           
 25373                           ; BSR set to: 0
 25374                           ;app_utils.c: 175: }
 25375                           ;app_utils.c: 176: break;
 25376                           
 25377                           ; BSR set to: 0
 25378  004608  D031               	goto	l2794
 25379  00460A                     
 25380                           ; BSR set to: 0
 25381                           ;app_utils.c: 179: currentState = SEARCH_FSM_START;
 25382                           
 25383                           ; BSR set to: 0
 25384  00460A  0E00               	movlw	0
 25385  00460C  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25386                           
 25387                           ; BSR set to: 0
 25388                           ;app_utils.c: 180: if (isNumberValid(readBuffer))
 25389  00460E  0E39               	movlw	low _readBuffer
 25390  004610  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 25391  004612  0E03               	movlw	high _readBuffer
 25392  004614  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 25393  004616  EC91  F02C         	call	_isNumberValid	;wreg free
 25394  00461A  0900               	iorlw	0
 25395  00461C  B4D8               	btfsc	status,2,c
 25396  00461E  D01B               	goto	l2797
 25397                           
 25398                           ;app_utils.c: 181: {
 25399                           ;app_utils.c: 182: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 25400  004620  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 25401  004624  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 25402  004628  0E39               	movlw	low _readBuffer
 25403  00462A  0100               	movlb	0	; () banked
 25404  00462C  6F7F               	movwf	StringCompare@String2& (0+255),b
 25405  00462E  0E03               	movlw	high _readBuffer
 25406  004630  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25407  004632  0E00               	movlw	0
 25408  004634  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25409  004636  0E0D               	movlw	13
 25410  004638  6F81               	movwf	StringCompare@Len& (0+255),b
 25411  00463A  EC57  F02F         	call	_StringCompare	;wreg free
 25412  00463E  0900               	iorlw	0
 25413  004640  B4D8               	btfsc	status,2,c
 25414  004642  D009               	goto	l2797
 25415                           
 25416                           ;app_utils.c: 183: {
 25417                           ;app_utils.c: 184: *positionInMemory = currentPosition;
 25418  004644  C102  FFD9         	movff	isNumberInMemory@positionInMemory,fsr2l
 25419  004648  C103  FFDA         	movff	isNumberInMemory@positionInMemory+1,fsr2h
 25420  00464C  C0E1  FFDF         	movff	isNumberInMemory@currentPosition,indf2
 25421                           
 25422                           ;app_utils.c: 185: currentState = SEARCH_FSM_FOUND;
 25423  004650  0E03               	movlw	3
 25424  004652  0100               	movlb	0	; () banked
 25425  004654  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 25426  004656                     l2797:
 25427                           
 25428                           ;app_utils.c: 190: }
 25429                           ;app_utils.c: 191: }
 25430                           ;app_utils.c: 192: currentPosition += 16;
 25431                           
 25432                           ; BSR set to: 0
 25433                           
 25434                           ; BSR set to: 0
 25435                           
 25436                           ;app_utils.c: 187: else
 25437                           ;app_utils.c: 188: {
 25438                           
 25439                           ; BSR set to: 0
 25440  004656  0E10               	movlw	16
 25441  004658  0100               	movlb	0	; () banked
 25442  00465A  27E1               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 25443                           
 25444                           ; BSR set to: 0
 25445                           ;app_utils.c: 197: }
 25446                           
 25447                           ; BSR set to: 0
 25448                           ;app_utils.c: 196: break;
 25449                           
 25450                           ;app_utils.c: 195: default:
 25451                           
 25452                           ;app_utils.c: 193: break;
 25453  00465C  D007               	goto	l2794
 25454  00465E                     l2789:
 25455                           
 25456                           ; BSR set to: 0
 25457                           
 25458                           ; BSR set to: 0
 25459  00465E  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 25460                           
 25461                           ; Switch size 1, requested type "space"
 25462                           ; Number of cases is 2, Range of values is 0 to 1
 25463                           ; switch strategies available:
 25464                           ; Name         Instructions Cycles
 25465                           ; simple_byte            7     4 (average)
 25466                           ;	Chosen strategy is simple_byte
 25467  004660  0A00               	xorlw	0	; case 0
 25468  004662  B4D8               	btfsc	status,2,c
 25469  004664  D7BA               	goto	l2790
 25470  004666  0A01               	xorlw	1	; case 1
 25471  004668  B4D8               	btfsc	status,2,c
 25472  00466A  D7CF               	goto	l2795
 25473  00466C                     l2794:
 25474                           
 25475                           ;app_utils.c: 198: return currentState;
 25476                           
 25477                           ; BSR set to: 0
 25478  00466C  0100               	movlb	0	; () banked
 25479  00466E  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 25480  004670  0012               	return	
 25481  004672                     __end_of_isNumberInMemory:
 25482                           	opt stack 0
 25483                           tosu	equ	0xFFF
 25484                           tosh	equ	0xFFE
 25485                           tosl	equ	0xFFD
 25486                           pclath	equ	0xFFA
 25487                           tblptru	equ	0xFF8
 25488                           tblptrh	equ	0xFF7
 25489                           tblptrl	equ	0xFF6
 25490                           tablat	equ	0xFF5
 25491                           prodh	equ	0xFF4
 25492                           prodl	equ	0xFF3
 25493                           intcon	equ	0xFF2
 25494                           intcon2	equ	0xFF1
 25495                           intcon3	equ	0xFF0
 25496                           indf0	equ	0xFEF
 25497                           postinc0	equ	0xFEE
 25498                           plusw0	equ	0xFEB
 25499                           fsr0h	equ	0xFEA
 25500                           fsr0l	equ	0xFE9
 25501                           wreg	equ	0xFE8
 25502                           indf1	equ	0xFE7
 25503                           postinc1	equ	0xFE6
 25504                           postdec1	equ	0xFE5
 25505                           fsr1h	equ	0xFE2
 25506                           fsr1l	equ	0xFE1
 25507                           indf2	equ	0xFDF
 25508                           postinc2	equ	0xFDE
 25509                           postdec2	equ	0xFDD
 25510                           plusw2	equ	0xFDB
 25511                           fsr2h	equ	0xFDA
 25512                           fsr2l	equ	0xFD9
 25513                           status	equ	0xFD8
 25514                           
 25515 ;; *************** function _isMasterNumber *****************
 25516 ;; Defined at:
 25517 ;;		line 236 in file "../Source/c/04_App/app_utils.c"
 25518 ;; Parameters:    Size  Location     Type
 25519 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 25520 ;;		 -> receivedNumber(13), 
 25521 ;; Auto vars:     Size  Location     Type
 25522 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 25523 ;; Return value:  Size  Location     Type
 25524 ;;                  1    wreg      unsigned char 
 25525 ;; Registers used:
 25526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25527 ;; Tracked objects:
 25528 ;;		On entry : 0/0
 25529 ;;		On exit  : 0/0
 25530 ;;		Unchanged: 0/0
 25531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25532 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25533 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25535 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25536 ;;Total ram usage:        3 bytes
 25537 ;; Hardware stack levels used:    1
 25538 ;; Hardware stack levels required when called:   17
 25539 ;; This function calls:
 25540 ;;		_Eeprom_Read
 25541 ;;		_StringCompare
 25542 ;;		_isNumberValid
 25543 ;; This function is called by:
 25544 ;;		_addCmdFsm
 25545 ;;		_delCmdFsm
 25546 ;;		_triggerCmdFsm
 25547 ;;		_resCmdFsm
 25548 ;; This function uses a non-reentrant model
 25549 ;;
 25550                           
 25551                           	psect	text120
 25552  0056A8                     __ptext120:
 25553                           	opt stack 0
 25554  0056A8                     _isMasterNumber:
 25555                           	opt stack 9
 25556                           
 25557                           ;app_utils.c: 238: EepromStsType memoryOpResult = OP_PENDING;
 25558                           
 25559                           ; BSR set to: 0
 25560                           ;incstack = 0
 25561  0056A8  0E02               	movlw	2
 25562  0056AA  0101               	movlb	1	; () banked
 25563  0056AC  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25564                           
 25565                           ; BSR set to: 1
 25566                           ;app_utils.c: 240: memoryOpResult = Eeprom_Read(16, readBuffer, ((UINT8)(13)));
 25567  0056AE  0E39               	movlw	low _readBuffer
 25568  0056B0  0100               	movlb	0	; () banked
 25569  0056B2  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 25570  0056B4  0E03               	movlw	high _readBuffer
 25571  0056B6  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 25572  0056B8  0E0D               	movlw	13
 25573  0056BA  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 25574  0056BC  0E10               	movlw	16
 25575  0056BE  ECB0  F02E         	call	_Eeprom_Read
 25576  0056C2  0101               	movlb	1	; () banked
 25577  0056C4  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25578                           
 25579                           ; BSR set to: 1
 25580                           ;app_utils.c: 241: if (memoryOpResult != OP_PENDING)
 25581  0056C6  0E02               	movlw	2
 25582  0056C8  1902               	xorwf	isMasterNumber@memoryOpResult& (0+255),w,b
 25583  0056CA  B4D8               	btfsc	status,2,c
 25584  0056CC  D021               	goto	l2805
 25585                           
 25586                           ; BSR set to: 1
 25587                           ;app_utils.c: 242: {
 25588                           ;app_utils.c: 243: memoryOpResult = OP_FAILED;
 25589  0056CE  0E01               	movlw	1
 25590  0056D0  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25591                           
 25592                           ; BSR set to: 1
 25593                           ;app_utils.c: 244: if (isNumberValid(readBuffer))
 25594  0056D2  0E39               	movlw	low _readBuffer
 25595  0056D4  0100               	movlb	0	; () banked
 25596  0056D6  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 25597  0056D8  0E03               	movlw	high _readBuffer
 25598  0056DA  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 25599  0056DC  EC91  F02C         	call	_isNumberValid	;wreg free
 25600  0056E0  0900               	iorlw	0
 25601  0056E2  B4D8               	btfsc	status,2,c
 25602  0056E4  D015               	goto	l2805
 25603                           
 25604                           ;app_utils.c: 245: {
 25605                           ;app_utils.c: 246: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 25606  0056E6  C100  F07D         	movff	isMasterNumber@phoneNumber,StringCompare@String1
 25607  0056EA  C101  F07E         	movff	isMasterNumber@phoneNumber+1,StringCompare@String1+1
 25608  0056EE  0E39               	movlw	low _readBuffer
 25609  0056F0  0100               	movlb	0	; () banked
 25610  0056F2  6F7F               	movwf	StringCompare@String2& (0+255),b
 25611  0056F4  0E03               	movlw	high _readBuffer
 25612  0056F6  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 25613  0056F8  0E00               	movlw	0
 25614  0056FA  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 25615  0056FC  0E0D               	movlw	13
 25616  0056FE  6F81               	movwf	StringCompare@Len& (0+255),b
 25617  005700  EC57  F02F         	call	_StringCompare	;wreg free
 25618  005704  0900               	iorlw	0
 25619  005706  B4D8               	btfsc	status,2,c
 25620  005708  D003               	goto	l2805
 25621                           
 25622                           ;app_utils.c: 247: {
 25623                           ;app_utils.c: 248: memoryOpResult = OP_SUCCESS;
 25624  00570A  0E00               	movlw	0
 25625  00570C  0101               	movlb	1	; () banked
 25626  00570E  6F02               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 25627  005710                     l2805:
 25628                           
 25629                           ;app_utils.c: 249: }
 25630                           ;app_utils.c: 250: }
 25631                           ;app_utils.c: 251: }
 25632                           ;app_utils.c: 252: return memoryOpResult;
 25633                           
 25634                           ; BSR set to: 1
 25635                           
 25636                           ; BSR set to: 1
 25637  005710  0101               	movlb	1	; () banked
 25638  005712  5102               	movf	isMasterNumber@memoryOpResult& (0+255),w,b
 25639  005714  0012               	return	
 25640  005716                     __end_of_isMasterNumber:
 25641                           	opt stack 0
 25642                           tosu	equ	0xFFF
 25643                           tosh	equ	0xFFE
 25644                           tosl	equ	0xFFD
 25645                           pclath	equ	0xFFA
 25646                           tblptru	equ	0xFF8
 25647                           tblptrh	equ	0xFF7
 25648                           tblptrl	equ	0xFF6
 25649                           tablat	equ	0xFF5
 25650                           prodh	equ	0xFF4
 25651                           prodl	equ	0xFF3
 25652                           intcon	equ	0xFF2
 25653                           intcon2	equ	0xFF1
 25654                           intcon3	equ	0xFF0
 25655                           indf0	equ	0xFEF
 25656                           postinc0	equ	0xFEE
 25657                           plusw0	equ	0xFEB
 25658                           fsr0h	equ	0xFEA
 25659                           fsr0l	equ	0xFE9
 25660                           wreg	equ	0xFE8
 25661                           indf1	equ	0xFE7
 25662                           postinc1	equ	0xFE6
 25663                           postdec1	equ	0xFE5
 25664                           fsr1h	equ	0xFE2
 25665                           fsr1l	equ	0xFE1
 25666                           indf2	equ	0xFDF
 25667                           postinc2	equ	0xFDE
 25668                           postdec2	equ	0xFDD
 25669                           plusw2	equ	0xFDB
 25670                           fsr2h	equ	0xFDA
 25671                           fsr2l	equ	0xFD9
 25672                           status	equ	0xFD8
 25673                           
 25674 ;; *************** function _findEmptySpot *****************
 25675 ;; Defined at:
 25676 ;;		line 286 in file "../Source/c/04_App/app_utils.c"
 25677 ;; Parameters:    Size  Location     Type
 25678 ;;  positionInMe    2    0[BANK1 ] PTR unsigned char 
 25679 ;;		 -> addCmdFsm@numberInMemory(1), 
 25680 ;; Auto vars:     Size  Location     Type
 25681 ;;  memoryOpResu    1    2[BANK1 ] enum E8246
 25682 ;; Return value:  Size  Location     Type
 25683 ;;                  1    wreg      enum E8974
 25684 ;; Registers used:
 25685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25686 ;; Tracked objects:
 25687 ;;		On entry : 0/0
 25688 ;;		On exit  : 0/0
 25689 ;;		Unchanged: 0/0
 25690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25691 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25692 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25694 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25695 ;;Total ram usage:        3 bytes
 25696 ;; Hardware stack levels used:    1
 25697 ;; Hardware stack levels required when called:   17
 25698 ;; This function calls:
 25699 ;;		_Eeprom_Read
 25700 ;;		_isNumberValid
 25701 ;; This function is called by:
 25702 ;;		_addCmdFsm
 25703 ;; This function uses a non-reentrant model
 25704 ;;
 25705                           
 25706                           	psect	text121
 25707  004EBA                     __ptext121:
 25708                           	opt stack 0
 25709  004EBA                     _findEmptySpot:
 25710                           	opt stack 9
 25711                           
 25712                           ;app_utils.c: 288: static searchFsmStates currentState = SEARCH_FSM_START;
 25713                           ;app_utils.c: 289: static uint8_t currentPosition = 32;
 25714                           ;app_utils.c: 290: EepromStsType memoryOpResult = OP_PENDING;
 25715                           
 25716                           ; BSR set to: 1
 25717                           ;incstack = 0
 25718  004EBA  0E02               	movlw	2
 25719  004EBC  0101               	movlb	1	; () banked
 25720  004EBE  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 25721                           
 25722                           ; BSR set to: 1
 25723                           ;app_utils.c: 292: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 25724  004EC0  0E01               	movlw	1
 25725  004EC2  0100               	movlb	0	; () banked
 25726  004EC4  65C4               	cpfsgt	findEmptySpot@currentState& (0+255),b
 25727  004EC6  D004               	goto	l2813
 25728                           
 25729                           ; BSR set to: 0
 25730                           ;app_utils.c: 293: {
 25731                           ;app_utils.c: 294: currentState = SEARCH_FSM_START;
 25732  004EC8  0E00               	movlw	0
 25733  004ECA  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25734                           
 25735                           ;app_utils.c: 295: currentPosition = 32;
 25736  004ECC  0E20               	movlw	32
 25737  004ECE  6FE0               	movwf	findEmptySpot@currentPosition& (0+255),b
 25738  004ED0                     l2813:
 25739                           
 25740                           ; BSR set to: 0
 25741                           ;app_utils.c: 296: }
 25742                           ;app_utils.c: 297: if (currentPosition >= (32 + (16 * 10)))
 25743                           
 25744                           ; BSR set to: 0
 25745  004ED0  0EBF               	movlw	191
 25746  004ED2  65E0               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 25747  004ED4  D033               	goto	l2815
 25748                           
 25749                           ; BSR set to: 0
 25750                           ;app_utils.c: 298: {
 25751                           ;app_utils.c: 299: currentState = SEARCH_FSM_NOT_FOUND;
 25752  004ED6  0E04               	movlw	4
 25753  004ED8  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25754                           
 25755                           ; BSR set to: 0
 25756                           ;app_utils.c: 300: }
 25757                           ;app_utils.c: 302: switch (currentState)
 25758  004EDA  D030               	goto	l2815
 25759  004EDC                     
 25760                           ; BSR set to: 0
 25761                           ;app_utils.c: 305: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 25762                           
 25763                           ; BSR set to: 0
 25764  004EDC  0E39               	movlw	low _readBuffer
 25765  004EDE  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 25766  004EE0  0E03               	movlw	high _readBuffer
 25767  004EE2  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 25768  004EE4  0E0D               	movlw	13
 25769  004EE6  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 25770  004EE8  51E0               	movf	findEmptySpot@currentPosition& (0+255),w,b
 25771  004EEA  ECB0  F02E         	call	_Eeprom_Read
 25772  004EEE  0101               	movlb	1	; () banked
 25773  004EF0  6F02               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 25774                           
 25775                           ; BSR set to: 1
 25776                           ;app_utils.c: 306: if (memoryOpResult == OP_FAILED)
 25777  004EF2  0502               	decf	findEmptySpot@memoryOpResult& (0+255),w,b
 25778  004EF4  A4D8               	btfss	status,2,c
 25779  004EF6  D002               	goto	l2817
 25780                           
 25781                           ; BSR set to: 1
 25782                           ;app_utils.c: 307: {
 25783                           ;app_utils.c: 308: currentState = SEARCH_FSM_ERROR;
 25784  004EF8  0E02               	movlw	2
 25785  004EFA  D005               	goto	L51
 25786  004EFC                     l2817:
 25787                           
 25788                           ;app_utils.c: 310: else if (memoryOpResult == OP_SUCCESS)
 25789                           
 25790                           ; BSR set to: 0
 25791  004EFC  0101               	movlb	1	; () banked
 25792  004EFE  5102               	movf	findEmptySpot@memoryOpResult& (0+255),w,b
 25793  004F00  A4D8               	btfss	status,2,c
 25794  004F02  D023               	goto	l2820
 25795                           
 25796                           ; BSR set to: 1
 25797                           ;app_utils.c: 311: {
 25798                           ;app_utils.c: 312: currentState = SEARCH_FSM_CHECK_NUMBER;
 25799  004F04  0E01               	movlw	1
 25800  004F06                     L51:
 25801  004F06  0100               	movlb	0	; () banked
 25802  004F08  D00D               	goto	L52
 25803  004F0A                     
 25804                           ; BSR set to: 0
 25805                           ;app_utils.c: 317: if (isNumberValid(readBuffer))
 25806                           
 25807                           ; BSR set to: 0
 25808  004F0A  0E39               	movlw	low _readBuffer
 25809  004F0C  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 25810  004F0E  0E03               	movlw	high _readBuffer
 25811  004F10  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 25812  004F12  EC91  F02C         	call	_isNumberValid	;wreg free
 25813  004F16  0900               	iorlw	0
 25814  004F18  B4D8               	btfsc	status,2,c
 25815  004F1A  D006               	goto	l2822
 25816                           
 25817                           ;app_utils.c: 318: {
 25818                           ;app_utils.c: 319: currentPosition += 16;
 25819  004F1C  0E10               	movlw	16
 25820  004F1E  0100               	movlb	0	; () banked
 25821  004F20  27E0               	addwf	findEmptySpot@currentPosition& (0+255),f,b
 25822                           
 25823                           ; BSR set to: 0
 25824                           ;app_utils.c: 320: currentState = SEARCH_FSM_START;
 25825  004F22  0E00               	movlw	0
 25826  004F24                     L52:
 25827  004F24  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25828                           
 25829                           ;app_utils.c: 321: }
 25830  004F26  D011               	goto	l2820
 25831  004F28                     l2822:
 25832                           
 25833                           ;app_utils.c: 322: else
 25834                           ;app_utils.c: 323: {
 25835                           ;app_utils.c: 324: currentState = SEARCH_FSM_NOT_FOUND;
 25836                           
 25837                           ; BSR set to: 0
 25838  004F28  0E04               	movlw	4
 25839  004F2A  0100               	movlb	0	; () banked
 25840  004F2C  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 25841                           
 25842                           ; BSR set to: 0
 25843                           ;app_utils.c: 325: *positionInMemory = currentPosition;
 25844  004F2E  C100  FFD9         	movff	findEmptySpot@positionInMemory,fsr2l
 25845  004F32  C101  FFDA         	movff	findEmptySpot@positionInMemory+1,fsr2h
 25846  004F36  C0E0  FFDF         	movff	findEmptySpot@currentPosition,indf2
 25847                           
 25848                           ; BSR set to: 0
 25849                           ;app_utils.c: 331: }
 25850                           
 25851                           ; BSR set to: 0
 25852                           ;app_utils.c: 330: break;
 25853                           
 25854                           ;app_utils.c: 329: default:
 25855                           
 25856                           ; BSR set to: 0
 25857                           ;app_utils.c: 326: }
 25858                           ;app_utils.c: 327: break;
 25859  004F3A  D007               	goto	l2820
 25860  004F3C                     l2815:
 25861                           
 25862                           ; BSR set to: 0
 25863                           
 25864                           ; BSR set to: 0
 25865  004F3C  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 25866                           
 25867                           ; Switch size 1, requested type "space"
 25868                           ; Number of cases is 2, Range of values is 0 to 1
 25869                           ; switch strategies available:
 25870                           ; Name         Instructions Cycles
 25871                           ; simple_byte            7     4 (average)
 25872                           ;	Chosen strategy is simple_byte
 25873  004F3E  0A00               	xorlw	0	; case 0
 25874  004F40  B4D8               	btfsc	status,2,c
 25875  004F42  D7CC               	goto	l2816
 25876  004F44  0A01               	xorlw	1	; case 1
 25877  004F46  B4D8               	btfsc	status,2,c
 25878  004F48  D7E0               	goto	l2821
 25879  004F4A                     l2820:
 25880                           
 25881                           ;app_utils.c: 332: return currentState;
 25882                           
 25883                           ; BSR set to: 0
 25884  004F4A  0100               	movlb	0	; () banked
 25885  004F4C  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 25886  004F4E  0012               	return	
 25887  004F50                     __end_of_findEmptySpot:
 25888                           	opt stack 0
 25889                           tosu	equ	0xFFF
 25890                           tosh	equ	0xFFE
 25891                           tosl	equ	0xFFD
 25892                           pclath	equ	0xFFA
 25893                           tblptru	equ	0xFF8
 25894                           tblptrh	equ	0xFF7
 25895                           tblptrl	equ	0xFF6
 25896                           tablat	equ	0xFF5
 25897                           prodh	equ	0xFF4
 25898                           prodl	equ	0xFF3
 25899                           intcon	equ	0xFF2
 25900                           intcon2	equ	0xFF1
 25901                           intcon3	equ	0xFF0
 25902                           indf0	equ	0xFEF
 25903                           postinc0	equ	0xFEE
 25904                           plusw0	equ	0xFEB
 25905                           fsr0h	equ	0xFEA
 25906                           fsr0l	equ	0xFE9
 25907                           wreg	equ	0xFE8
 25908                           indf1	equ	0xFE7
 25909                           postinc1	equ	0xFE6
 25910                           postdec1	equ	0xFE5
 25911                           fsr1h	equ	0xFE2
 25912                           fsr1l	equ	0xFE1
 25913                           indf2	equ	0xFDF
 25914                           postinc2	equ	0xFDE
 25915                           postdec2	equ	0xFDD
 25916                           plusw2	equ	0xFDB
 25917                           fsr2h	equ	0xFDA
 25918                           fsr2l	equ	0xFD9
 25919                           status	equ	0xFD8
 25920                           
 25921 ;; *************** function _isNumberValid *****************
 25922 ;; Defined at:
 25923 ;;		line 126 in file "../Source/c/04_App/app_utils.c"
 25924 ;; Parameters:    Size  Location     Type
 25925 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 25926 ;;		 -> readBuffer(13), smsText(20), 
 25927 ;; Auto vars:     Size  Location     Type
 25928 ;;  i               1   33[BANK0 ] unsigned char 
 25929 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 25930 ;; Return value:  Size  Location     Type
 25931 ;;                  1    wreg      unsigned char 
 25932 ;; Registers used:
 25933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25934 ;; Tracked objects:
 25935 ;;		On entry : 0/0
 25936 ;;		On exit  : 0/0
 25937 ;;		Unchanged: 0/0
 25938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25939 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25940 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25942 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25943 ;;Total ram usage:        5 bytes
 25944 ;; Hardware stack levels used:    1
 25945 ;; Hardware stack levels required when called:   11
 25946 ;; This function calls:
 25947 ;;		Nothing
 25948 ;; This function is called by:
 25949 ;;		_parseCommand
 25950 ;;		_isNumberInMemory
 25951 ;;		_isMasterNumber
 25952 ;;		_findEmptySpot
 25953 ;; This function uses a non-reentrant model
 25954 ;;
 25955                           
 25956                           	psect	text122
 25957  005922                     __ptext122:
 25958                           	opt stack 0
 25959  005922                     _isNumberValid:
 25960                           	opt stack 14
 25961                           
 25962                           ;app_utils.c: 128: bool isNumberOk = 0;
 25963                           
 25964                           ; BSR set to: 0
 25965                           ;incstack = 0
 25966  005922  0E00               	movlw	0
 25967  005924  0100               	movlb	0	; () banked
 25968  005926  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 25969                           
 25970                           ;app_utils.c: 129: uint8_t i = 0;
 25971  005928  0E00               	movlw	0
 25972  00592A  6F81               	movwf	isNumberValid@i& (0+255),b
 25973                           
 25974                           ; BSR set to: 0
 25975                           ;app_utils.c: 130: if (phoneNumber[0] == '+')
 25976  00592C  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 25977  005930  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 25978  005934  0E2B               	movlw	43
 25979  005936  18DE               	xorwf	postinc2,w,c
 25980  005938  A4D8               	btfss	status,2,c
 25981  00593A  D024               	goto	u13490
 25982                           
 25983                           ; BSR set to: 0
 25984                           ;app_utils.c: 131: {
 25985                           ;app_utils.c: 132: for (i = 1; i < ((UINT8)(13)); i++)
 25986  00593C  0E01               	movlw	1
 25987  00593E  6F81               	movwf	isNumberValid@i& (0+255),b
 25988  005940                     l14427:
 25989                           
 25990                           ; BSR set to: 0
 25991  005940  0E0C               	movlw	12
 25992  005942  6581               	cpfsgt	isNumberValid@i& (0+255),b
 25993  005944  D001               	goto	l2776
 25994  005946  D01E               	goto	u13490
 25995  005948                     l2776:
 25996                           
 25997                           ; BSR set to: 0
 25998                           ;app_utils.c: 133: {
 25999                           ;app_utils.c: 134: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 26000                           
 26001                           ; BSR set to: 0
 26002  005948  5181               	movf	isNumberValid@i& (0+255),w,b
 26003  00594A  0D01               	mullw	1
 26004  00594C  50F3               	movf	prodl,w,c
 26005  00594E  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 26006  005950  6ED9               	movwf	fsr2l,c
 26007  005952  50F4               	movf	prodh,w,c
 26008  005954  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 26009  005956  6EDA               	movwf	fsr2h,c
 26010  005958  0E2F               	movlw	47
 26011  00595A  64DF               	cpfsgt	indf2,c
 26012  00595C  D00E               	goto	l2778
 26013                           
 26014                           ; BSR set to: 0
 26015  00595E  5181               	movf	isNumberValid@i& (0+255),w,b
 26016  005960  0D01               	mullw	1
 26017  005962  50F3               	movf	prodl,w,c
 26018  005964  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 26019  005966  6ED9               	movwf	fsr2l,c
 26020  005968  50F4               	movf	prodh,w,c
 26021  00596A  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 26022  00596C  6EDA               	movwf	fsr2h,c
 26023  00596E  0E3A               	movlw	58
 26024  005970  60DF               	cpfslt	indf2,c
 26025  005972  D003               	goto	l2778
 26026                           
 26027                           ; BSR set to: 0
 26028                           ;app_utils.c: 135: {
 26029                           ;app_utils.c: 136: isNumberOk = 1;
 26030  005974  0E01               	movlw	1
 26031  005976  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 26032                           
 26033                           ;app_utils.c: 137: }
 26034  005978  D003               	goto	l2779
 26035  00597A                     l2778:
 26036                           
 26037                           ; BSR set to: 0
 26038                           ;app_utils.c: 138: else
 26039                           ;app_utils.c: 139: {
 26040                           ;app_utils.c: 140: isNumberOk = 0;
 26041                           
 26042                           ; BSR set to: 0
 26043  00597A  0E00               	movlw	0
 26044  00597C  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 26045                           
 26046                           ;app_utils.c: 141: break;
 26047  00597E  D002               	goto	u13490
 26048  005980                     l2779:
 26049                           
 26050                           ; BSR set to: 0
 26051                           
 26052                           ; BSR set to: 0
 26053  005980  2B81               	incf	isNumberValid@i& (0+255),f,b
 26054  005982  D7DE               	goto	l14427
 26055  005984                     u13490:
 26056                           
 26057                           ; BSR set to: 0
 26058                           ;app_utils.c: 142: }
 26059                           ;app_utils.c: 143: }
 26060                           ;app_utils.c: 144: }
 26061                           ;app_utils.c: 145: return isNumberOk;
 26062                           
 26063                           ; BSR set to: 0
 26064                           
 26065                           ; BSR set to: 0
 26066  005984  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 26067  005986  0012               	return	
 26068  005988                     __end_of_isNumberValid:
 26069                           	opt stack 0
 26070                           tosu	equ	0xFFF
 26071                           tosh	equ	0xFFE
 26072                           tosl	equ	0xFFD
 26073                           pclath	equ	0xFFA
 26074                           tblptru	equ	0xFF8
 26075                           tblptrh	equ	0xFF7
 26076                           tblptrl	equ	0xFF6
 26077                           tablat	equ	0xFF5
 26078                           prodh	equ	0xFF4
 26079                           prodl	equ	0xFF3
 26080                           intcon	equ	0xFF2
 26081                           intcon2	equ	0xFF1
 26082                           intcon3	equ	0xFF0
 26083                           indf0	equ	0xFEF
 26084                           postinc0	equ	0xFEE
 26085                           plusw0	equ	0xFEB
 26086                           fsr0h	equ	0xFEA
 26087                           fsr0l	equ	0xFE9
 26088                           wreg	equ	0xFE8
 26089                           indf1	equ	0xFE7
 26090                           postinc1	equ	0xFE6
 26091                           postdec1	equ	0xFE5
 26092                           fsr1h	equ	0xFE2
 26093                           fsr1l	equ	0xFE1
 26094                           indf2	equ	0xFDF
 26095                           postinc2	equ	0xFDE
 26096                           postdec2	equ	0xFDD
 26097                           plusw2	equ	0xFDB
 26098                           fsr2h	equ	0xFDA
 26099                           fsr2l	equ	0xFD9
 26100                           status	equ	0xFD8
 26101                           
 26102 ;; *************** function _Eeprom_Read *****************
 26103 ;; Defined at:
 26104 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 26105 ;; Parameters:    Size  Location     Type
 26106 ;;  MemoryAddres    1    wreg     unsigned char 
 26107 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 26108 ;;		 -> readBuffer(13), memoryPreamble(4), 
 26109 ;;  DataLength      1   75[BANK0 ] unsigned char 
 26110 ;; Auto vars:     Size  Location     Type
 26111 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 26112 ;;  QuerySts        1   79[BANK0 ] enum E8933
 26113 ;;  ReadSts         1   78[BANK0 ] enum E8959
 26114 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 26115 ;; Return value:  Size  Location     Type
 26116 ;;                  1    wreg      enum E8959
 26117 ;; Registers used:
 26118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26119 ;; Tracked objects:
 26120 ;;		On entry : 0/0
 26121 ;;		On exit  : 0/0
 26122 ;;		Unchanged: 0/0
 26123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26124 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26125 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26127 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26128 ;;Total ram usage:        7 bytes
 26129 ;; Hardware stack levels used:    1
 26130 ;; Hardware stack levels required when called:   16
 26131 ;; This function calls:
 26132 ;;		_I2cSlv_QueryI2cData
 26133 ;; This function is called by:
 26134 ;;		_initEeprom
 26135 ;;		_isNumberInMemory
 26136 ;;		_isMasterNumber
 26137 ;;		_findEmptySpot
 26138 ;; This function uses a non-reentrant model
 26139 ;;
 26140                           
 26141                           	psect	text123
 26142  005D60                     __ptext123:
 26143                           	opt stack 0
 26144  005D60                     _Eeprom_Read:
 26145                           	opt stack 9
 26146                           
 26147                           ; BSR set to: 0
 26148                           ;incstack = 0
 26149                           ;Eeprom_Read@MemoryAddress stored from wreg
 26150  005D60  0100               	movlb	0	; () banked
 26151  005D62  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 26152                           
 26153                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 26154  005D64  0E50               	movlw	80
 26155  005D66  0100               	movlb	0	; () banked
 26156  005D68  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 26157                           
 26158                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 26159  005D6A  0E00               	movlw	0
 26160  005D6C  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 26161                           
 26162                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 26163  005D6E  0E02               	movlw	2
 26164  005D70  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 26165                           
 26166                           ; BSR set to: 0
 26167                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 26168  005D72  C0AC  F1FA         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 26169                           
 26170                           ; BSR set to: 0
 26171                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 26172  005D76  0EFA               	movlw	low _ReadAddress
 26173  005D78  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 26174  005D7A  0E01               	movlw	high _ReadAddress
 26175  005D7C  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 26176  005D7E  0E01               	movlw	1
 26177  005D80  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 26178  005D82  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 26179  005D86  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 26180  005D8A  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 26181  005D8E  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 26182  005D92  EC2D  F01E         	call	_I2cSlv_QueryI2cData	;wreg free
 26183  005D96  0100               	movlb	0	; () banked
 26184  005D98  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 26185                           
 26186                           ; BSR set to: 0
 26187                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 26188  005D9A  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 26189  005D9C  A4D8               	btfss	status,2,c
 26190  005D9E  D002               	goto	l2037
 26191                           
 26192                           ; BSR set to: 0
 26193                           ;eeprom_if.c: 114: {
 26194                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 26195  005DA0  0E00               	movlw	0
 26196  005DA2  D005               	goto	L53
 26197  005DA4                     l2037:
 26198                           
 26199                           ; BSR set to: 0
 26200                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 26201                           
 26202                           ; BSR set to: 0
 26203  005DA4  0E02               	movlw	2
 26204  005DA6  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 26205  005DA8  A4D8               	btfss	status,2,c
 26206  005DAA  D002               	goto	l2039
 26207                           
 26208                           ; BSR set to: 0
 26209                           ;eeprom_if.c: 118: {
 26210                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 26211  005DAC  0E01               	movlw	1
 26212  005DAE                     L53:
 26213  005DAE  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 26214  005DB0                     l2039:
 26215                           
 26216                           ; BSR set to: 0
 26217                           ;eeprom_if.c: 120: }
 26218                           ;eeprom_if.c: 121: return ReadSts;
 26219                           
 26220                           ; BSR set to: 0
 26221  005DB0  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 26222  005DB2  0012               	return	
 26223  005DB4                     __end_of_Eeprom_Read:
 26224                           	opt stack 0
 26225                           tosu	equ	0xFFF
 26226                           tosh	equ	0xFFE
 26227                           tosl	equ	0xFFD
 26228                           pclath	equ	0xFFA
 26229                           tblptru	equ	0xFF8
 26230                           tblptrh	equ	0xFF7
 26231                           tblptrl	equ	0xFF6
 26232                           tablat	equ	0xFF5
 26233                           prodh	equ	0xFF4
 26234                           prodl	equ	0xFF3
 26235                           intcon	equ	0xFF2
 26236                           intcon2	equ	0xFF1
 26237                           intcon3	equ	0xFF0
 26238                           indf0	equ	0xFEF
 26239                           postinc0	equ	0xFEE
 26240                           plusw0	equ	0xFEB
 26241                           fsr0h	equ	0xFEA
 26242                           fsr0l	equ	0xFE9
 26243                           wreg	equ	0xFE8
 26244                           indf1	equ	0xFE7
 26245                           postinc1	equ	0xFE6
 26246                           postdec1	equ	0xFE5
 26247                           fsr1h	equ	0xFE2
 26248                           fsr1l	equ	0xFE1
 26249                           indf2	equ	0xFDF
 26250                           postinc2	equ	0xFDE
 26251                           postdec2	equ	0xFDD
 26252                           plusw2	equ	0xFDB
 26253                           fsr2h	equ	0xFDA
 26254                           fsr2l	equ	0xFD9
 26255                           status	equ	0xFD8
 26256                           
 26257 ;; *************** function _I2cSlv_QueryI2cData *****************
 26258 ;; Defined at:
 26259 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26260 ;; Parameters:    Size  Location     Type
 26261 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 26262 ;;		 -> ReadAddress(1), 
 26263 ;;  TxLen           1   68[BANK0 ] unsigned char 
 26264 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 26265 ;;		 -> readBuffer(13), memoryPreamble(4), 
 26266 ;;  RxLen           1   71[BANK0 ] unsigned char 
 26267 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 26268 ;; Auto vars:     Size  Location     Type
 26269 ;;		None
 26270 ;; Return value:  Size  Location     Type
 26271 ;;                  1    wreg      enum E8948
 26272 ;; Registers used:
 26273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26274 ;; Tracked objects:
 26275 ;;		On entry : 0/0
 26276 ;;		On exit  : 0/0
 26277 ;;		Unchanged: 0/0
 26278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26279 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26282 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26283 ;;Total ram usage:        7 bytes
 26284 ;; Hardware stack levels used:    1
 26285 ;; Hardware stack levels required when called:   15
 26286 ;; This function calls:
 26287 ;;		_I2cSlv_I2cReadMsgSts
 26288 ;;		_I2cSlv_ReceiveI2cMsg
 26289 ;;		_I2cSlv_SendI2cMsg
 26290 ;;		_OsTmr_GetTimerStatus
 26291 ;;		_OsTmr_StartTimer
 26292 ;;		_OsTmr_Wait
 26293 ;; This function is called by:
 26294 ;;		_Eeprom_Read
 26295 ;; This function uses a non-reentrant model
 26296 ;;
 26297                           
 26298                           	psect	text124
 26299  003C5A                     __ptext124:
 26300                           	opt stack 0
 26301  003C5A                     _I2cSlv_QueryI2cData:
 26302                           	opt stack 9
 26303                           
 26304                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 26305                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 26306                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 26307                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 26308                           ;i2c_slv.c: 388: switch(I2cOpState)
 26309                           
 26310                           ; BSR set to: 0
 26311                           ;incstack = 0
 26312  003C5A  D05B               	goto	l1440
 26313  003C5C                     
 26314                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 26315  003C5C  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 26316  003C60  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 26317  003C64  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 26318  003C68  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 26319  003C6C  EC4D  F032         	call	_I2cSlv_SendI2cMsg	;wreg free
 26320                           
 26321                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 26322  003C70  0E01               	movlw	1
 26323  003C72  0101               	movlb	1	; () banked
 26324  003C74  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26325                           
 26326                           ; BSR set to: 1
 26327                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 26328  003C76  0E00               	movlw	0
 26329  003C78  D04A               	goto	L57
 26330  003C7A                     
 26331                           ; BSR set to: 1
 26332                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 26333                           
 26334                           ; BSR set to: 1
 26335  003C7A  0EE2               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 26336  003C7C  0100               	movlb	0	; () banked
 26337  003C7E  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 26338  003C80  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 26339  003C82  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 26340  003C84  0EF4               	movlw	244
 26341  003C86  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 26342  003C88  0E01               	movlw	1
 26343  003C8A  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 26344  003C8C  0E00               	movlw	0
 26345  003C8E  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 26346  003C90  0E00               	movlw	0
 26347  003C92  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 26348  003C94  EC28  F02A         	call	_OsTmr_Wait	;wreg free
 26349  003C98  06E8               	decf	wreg,f,c
 26350  003C9A  A4D8               	btfss	status,2,c
 26351  003C9C  D036               	goto	l1448
 26352                           
 26353                           ;i2c_slv.c: 402: {
 26354                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 26355  003C9E  0E53               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 26356  003CA0  0100               	movlb	0	; () banked
 26357  003CA2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26358  003CA4  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 26359  003CA6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26360  003CA8  0EC4               	movlw	196
 26361  003CAA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26362  003CAC  0E09               	movlw	9
 26363  003CAE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26364  003CB0  0E00               	movlw	0
 26365  003CB2  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26366  003CB4  0E00               	movlw	0
 26367  003CB6  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26368  003CB8  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 26369                           
 26370                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 26371  003CBC  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 26372  003CC0  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 26373  003CC4  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 26374  003CC8  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 26375  003CCC  ECEE  F031         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 26376                           
 26377                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 26378  003CD0  0E02               	movlw	2
 26379  003CD2  0101               	movlb	1	; () banked
 26380  003CD4  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26381  003CD6  D019               	goto	l1448
 26382  003CD8                     
 26383                           ; BSR set to: 1
 26384                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 26385                           
 26386                           ; BSR set to: 1
 26387  003CD8  EC30  F035         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 26388  003CDC  06E8               	decf	wreg,f,c
 26389  003CDE  A4D8               	btfss	status,2,c
 26390  003CE0  D005               	goto	l1446
 26391                           
 26392                           ;i2c_slv.c: 414: {
 26393                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 26394  003CE2  0E00               	movlw	0
 26395  003CE4  0101               	movlb	1	; () banked
 26396  003CE6  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26397                           
 26398                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 26399  003CE8  0E01               	movlw	1
 26400  003CEA  D011               	goto	L57
 26401  003CEC                     l1446:
 26402                           
 26403                           ;i2c_slv.c: 420: else
 26404                           ;i2c_slv.c: 421: {
 26405                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 26406                           
 26407                           ; BSR set to: 1
 26408  003CEC  0E53               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 26409  003CEE  0100               	movlb	0	; () banked
 26410  003CF0  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26411  003CF2  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 26412  003CF4  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26413  003CF6  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 26414  003CFA  06E8               	decf	wreg,f,c
 26415  003CFC  A4D8               	btfss	status,2,c
 26416  003CFE  D005               	goto	l1448
 26417                           
 26418                           ;i2c_slv.c: 423: {
 26419                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 26420  003D00  0E00               	movlw	0
 26421  003D02  0101               	movlb	1	; () banked
 26422  003D04  6FE2               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 26423                           
 26424                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 26425  003D06  0E02               	movlw	2
 26426  003D08  D002               	goto	L57
 26427  003D0A                     l1448:
 26428                           
 26429                           ;i2c_slv.c: 429: else
 26430                           ;i2c_slv.c: 430: {
 26431                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 26432                           
 26433                           ; BSR set to: 1
 26434  003D0A  0E00               	movlw	0
 26435  003D0C  0101               	movlb	1	; () banked
 26436  003D0E                     L57:
 26437  003D0E  6FE1               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 26438                           
 26439                           ; BSR set to: 1
 26440                           ;i2c_slv.c: 439: }
 26441                           
 26442                           ; BSR set to: 1
 26443                           ;i2c_slv.c: 438: break;
 26444                           
 26445                           ;i2c_slv.c: 437: default:
 26446                           
 26447                           ; BSR set to: 1
 26448                           ;i2c_slv.c: 433: }
 26449                           ;i2c_slv.c: 434: }
 26450                           ;i2c_slv.c: 435: break;
 26451                           
 26452                           ; BSR set to: 1
 26453  003D10  D00B               	goto	l1442
 26454  003D12                     l1440:
 26455                           
 26456                           ; BSR set to: 1
 26457  003D12  0101               	movlb	1	; () banked
 26458  003D14  51E2               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 26459                           
 26460                           ; Switch size 1, requested type "space"
 26461                           ; Number of cases is 3, Range of values is 0 to 2
 26462                           ; switch strategies available:
 26463                           ; Name         Instructions Cycles
 26464                           ; simple_byte           10     6 (average)
 26465                           ;	Chosen strategy is simple_byte
 26466  003D16  0A00               	xorlw	0	; case 0
 26467  003D18  B4D8               	btfsc	status,2,c
 26468  003D1A  D7A0               	goto	l1441
 26469  003D1C  0A01               	xorlw	1	; case 1
 26470  003D1E  B4D8               	btfsc	status,2,c
 26471  003D20  D7AC               	goto	l1443
 26472  003D22  0A03               	xorlw	3	; case 2
 26473  003D24  B4D8               	btfsc	status,2,c
 26474  003D26  D7D8               	goto	l1445
 26475  003D28                     l1442:
 26476                           
 26477                           ; BSR set to: 1
 26478                           ;i2c_slv.c: 441: return Ret;
 26479                           
 26480                           ; BSR set to: 1
 26481  003D28  51E1               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 26482  003D2A  0012               	return	
 26483  003D2C                     __end_of_I2cSlv_QueryI2cData:
 26484                           	opt stack 0
 26485                           tosu	equ	0xFFF
 26486                           tosh	equ	0xFFE
 26487                           tosl	equ	0xFFD
 26488                           pclath	equ	0xFFA
 26489                           tblptru	equ	0xFF8
 26490                           tblptrh	equ	0xFF7
 26491                           tblptrl	equ	0xFF6
 26492                           tablat	equ	0xFF5
 26493                           prodh	equ	0xFF4
 26494                           prodl	equ	0xFF3
 26495                           intcon	equ	0xFF2
 26496                           intcon2	equ	0xFF1
 26497                           intcon3	equ	0xFF0
 26498                           indf0	equ	0xFEF
 26499                           postinc0	equ	0xFEE
 26500                           plusw0	equ	0xFEB
 26501                           fsr0h	equ	0xFEA
 26502                           fsr0l	equ	0xFE9
 26503                           wreg	equ	0xFE8
 26504                           indf1	equ	0xFE7
 26505                           postinc1	equ	0xFE6
 26506                           postdec1	equ	0xFE5
 26507                           fsr1h	equ	0xFE2
 26508                           fsr1l	equ	0xFE1
 26509                           indf2	equ	0xFDF
 26510                           postinc2	equ	0xFDE
 26511                           postdec2	equ	0xFDD
 26512                           plusw2	equ	0xFDB
 26513                           fsr2h	equ	0xFDA
 26514                           fsr2l	equ	0xFD9
 26515                           status	equ	0xFD8
 26516                           
 26517 ;; *************** function _OsTmr_Wait *****************
 26518 ;; Defined at:
 26519 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 26520 ;; Parameters:    Size  Location     Type
 26521 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 26522 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 26523 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 26524 ;; Auto vars:     Size  Location     Type
 26525 ;;  Ret             1   65[BANK0 ] enum E7749
 26526 ;; Return value:  Size  Location     Type
 26527 ;;                  1    wreg      enum E7749
 26528 ;; Registers used:
 26529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26530 ;; Tracked objects:
 26531 ;;		On entry : 0/0
 26532 ;;		On exit  : 0/0
 26533 ;;		Unchanged: 0/0
 26534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26535 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26536 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26538 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26539 ;;Total ram usage:        7 bytes
 26540 ;; Hardware stack levels used:    1
 26541 ;; Hardware stack levels required when called:   14
 26542 ;; This function calls:
 26543 ;;		_OsTmr_GetTimerStatus
 26544 ;;		_OsTmr_StartTimer
 26545 ;; This function is called by:
 26546 ;;		_I2cSlv_QueryI2cData
 26547 ;;		_Terminal
 26548 ;; This function uses a non-reentrant model
 26549 ;;
 26550                           
 26551                           	psect	text125
 26552  005450                     __ptext125:
 26553                           	opt stack 0
 26554  005450                     _OsTmr_Wait:
 26555                           	opt stack 11
 26556                           
 26557                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 26558                           
 26559                           ; BSR set to: 1
 26560                           ;incstack = 0
 26561  005450  0E00               	movlw	0
 26562  005452  0100               	movlb	0	; () banked
 26563  005454  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 26564                           
 26565                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 26566  005456  D02D               	goto	l855
 26567  005458                     
 26568                           ; BSR set to: 0
 26569                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 26570                           
 26571                           ; BSR set to: 0
 26572  005458  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 26573  00545C  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 26574  005460  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 26575  005464  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 26576  005468  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 26577  00546C  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 26578  005470  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 26579                           
 26580                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 26581  005474  0100               	movlb	0	; () banked
 26582  005476  EE20 F00A          	lfsr	2,10
 26583  00547A  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 26584  00547C  26D9               	addwf	fsr2l,f,c
 26585  00547E  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 26586  005480  22DA               	addwfc	fsr2h,f,c
 26587  005482  0E01               	movlw	1
 26588  005484  6EDF               	movwf	indf2,c
 26589                           
 26590                           ;os_timers.c: 165: break;
 26591  005486  D022               	goto	l857
 26592  005488                     
 26593                           ; BSR set to: 0
 26594                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 26595                           
 26596                           ; BSR set to: 0
 26597  005488  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 26598  00548C  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 26599  005490  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 26600  005494  06E8               	decf	wreg,f,c
 26601  005496  A4D8               	btfss	status,2,c
 26602  005498  D019               	goto	l857
 26603                           
 26604                           ;os_timers.c: 170: {
 26605                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 26606  00549A  0100               	movlb	0	; () banked
 26607  00549C  EE20 F00A          	lfsr	2,10
 26608  0054A0  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 26609  0054A2  26D9               	addwf	fsr2l,f,c
 26610  0054A4  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 26611  0054A6  22DA               	addwfc	fsr2h,f,c
 26612  0054A8  0E00               	movlw	0
 26613  0054AA  6EDF               	movwf	indf2,c
 26614                           
 26615                           ; BSR set to: 0
 26616                           ;os_timers.c: 174: Ret = DelayExpired;
 26617  0054AC  0E01               	movlw	1
 26618  0054AE  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 26619                           
 26620                           ; BSR set to: 0
 26621                           ;os_timers.c: 180: }
 26622                           
 26623                           ; BSR set to: 0
 26624                           ;os_timers.c: 179: break;
 26625                           
 26626                           ;os_timers.c: 178: default:
 26627                           
 26628                           ; BSR set to: 0
 26629                           ;os_timers.c: 175: }
 26630                           ;os_timers.c: 176: break;
 26631  0054B0  D00D               	goto	l857
 26632  0054B2                     l855:
 26633                           
 26634                           ; BSR set to: 0
 26635                           
 26636                           ; BSR set to: 0
 26637  0054B2  EE20 F00A          	lfsr	2,10
 26638  0054B6  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 26639  0054B8  26D9               	addwf	fsr2l,f,c
 26640  0054BA  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 26641  0054BC  22DA               	addwfc	fsr2h,f,c
 26642  0054BE  50DF               	movf	indf2,w,c
 26643                           
 26644                           ; Switch size 1, requested type "space"
 26645                           ; Number of cases is 2, Range of values is 0 to 1
 26646                           ; switch strategies available:
 26647                           ; Name         Instructions Cycles
 26648                           ; simple_byte            7     4 (average)
 26649                           ;	Chosen strategy is simple_byte
 26650  0054C0  0A00               	xorlw	0	; case 0
 26651  0054C2  B4D8               	btfsc	status,2,c
 26652  0054C4  D7C9               	goto	l856
 26653  0054C6  0A01               	xorlw	1	; case 1
 26654  0054C8  B4D8               	btfsc	status,2,c
 26655  0054CA  D7DE               	goto	l858
 26656  0054CC                     l857:
 26657                           
 26658                           ;os_timers.c: 182: return Ret;
 26659                           
 26660                           ; BSR set to: 0
 26661  0054CC  0100               	movlb	0	; () banked
 26662  0054CE  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 26663  0054D0  0012               	return	
 26664  0054D2                     __end_of_OsTmr_Wait:
 26665                           	opt stack 0
 26666                           tosu	equ	0xFFF
 26667                           tosh	equ	0xFFE
 26668                           tosl	equ	0xFFD
 26669                           pclath	equ	0xFFA
 26670                           tblptru	equ	0xFF8
 26671                           tblptrh	equ	0xFF7
 26672                           tblptrl	equ	0xFF6
 26673                           tablat	equ	0xFF5
 26674                           prodh	equ	0xFF4
 26675                           prodl	equ	0xFF3
 26676                           intcon	equ	0xFF2
 26677                           intcon2	equ	0xFF1
 26678                           intcon3	equ	0xFF0
 26679                           indf0	equ	0xFEF
 26680                           postinc0	equ	0xFEE
 26681                           plusw0	equ	0xFEB
 26682                           fsr0h	equ	0xFEA
 26683                           fsr0l	equ	0xFE9
 26684                           wreg	equ	0xFE8
 26685                           indf1	equ	0xFE7
 26686                           postinc1	equ	0xFE6
 26687                           postdec1	equ	0xFE5
 26688                           fsr1h	equ	0xFE2
 26689                           fsr1l	equ	0xFE1
 26690                           indf2	equ	0xFDF
 26691                           postinc2	equ	0xFDE
 26692                           postdec2	equ	0xFDD
 26693                           plusw2	equ	0xFDB
 26694                           fsr2h	equ	0xFDA
 26695                           fsr2l	equ	0xFD9
 26696                           status	equ	0xFD8
 26697                           
 26698 ;; *************** function _I2cSlv_SendI2cMsg *****************
 26699 ;; Defined at:
 26700 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26701 ;; Parameters:    Size  Location     Type
 26702 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 26703 ;;		 -> relayBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 26704 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 26705 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26706 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26707 ;; Auto vars:     Size  Location     Type
 26708 ;;  TxSts           1   36[BANK0 ] unsigned char 
 26709 ;; Return value:  Size  Location     Type
 26710 ;;                  1    wreg      unsigned char 
 26711 ;; Registers used:
 26712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26713 ;; Tracked objects:
 26714 ;;		On entry : 0/0
 26715 ;;		On exit  : 0/0
 26716 ;;		Unchanged: 0/0
 26717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26718 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26719 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26721 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26722 ;;Total ram usage:        5 bytes
 26723 ;; Hardware stack levels used:    1
 26724 ;; Hardware stack levels required when called:   12
 26725 ;; This function calls:
 26726 ;;		_GenerateEvt
 26727 ;; This function is called by:
 26728 ;;		_I2cSlv_QueryI2cData
 26729 ;;		_Eeprom_Write
 26730 ;;		_Eeprom_Reset
 26731 ;;		_Terminal
 26732 ;;		_triggerRelay
 26733 ;; This function uses a non-reentrant model
 26734 ;;
 26735                           
 26736                           	psect	text126
 26737  00649A                     __ptext126:
 26738                           	opt stack 0
 26739  00649A                     _I2cSlv_SendI2cMsg:
 26740                           	opt stack 13
 26741                           
 26742                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 26743                           
 26744                           ; BSR set to: 0
 26745                           ;incstack = 0
 26746  00649A  0E00               	movlw	0
 26747  00649C  0100               	movlb	0	; () banked
 26748  00649E  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26749                           
 26750                           ; BSR set to: 0
 26751                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 26752  0064A0  05CF               	decf	_I2cComSts& (0+255),w,b
 26753  0064A2  B4D8               	btfsc	status,2,c
 26754  0064A4  D015               	goto	l1412
 26755                           
 26756                           ; BSR set to: 0
 26757                           ;i2c_slv.c: 257: {
 26758                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 26759  0064A6  C082  F3A1         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 26760                           
 26761                           ; BSR set to: 0
 26762                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 26763  0064AA  0E00               	movlw	0
 26764  0064AC  0103               	movlb	3	; () banked
 26765  0064AE  6FA2               	movwf	(_I2cTxPacket+1)& (0+255),b
 26766                           
 26767                           ; BSR set to: 3
 26768                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 26769  0064B0  C083  F3A5         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 26770                           
 26771                           ; BSR set to: 3
 26772                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 26773  0064B4  C080  F3A3         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 26774  0064B8  C081  F3A4         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 26775                           
 26776                           ; BSR set to: 3
 26777                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 26778  0064BC  0ED7               	movlw	low _I2cWriteDataEvt
 26779  0064BE  0100               	movlb	0	; () banked
 26780  0064C0  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26781  0064C2  0E00               	movlw	high _I2cWriteDataEvt
 26782  0064C4  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26783  0064C6  EC06  F036         	call	_GenerateEvt	;wreg free
 26784                           
 26785                           ;i2c_slv.c: 267: TxSts = 1u;
 26786  0064CA  0E01               	movlw	1
 26787  0064CC  0100               	movlb	0	; () banked
 26788  0064CE  D001               	goto	L58
 26789  0064D0                     l1412:
 26790                           
 26791                           ; BSR set to: 0
 26792                           ;i2c_slv.c: 269: else
 26793                           ;i2c_slv.c: 270: {
 26794                           ;i2c_slv.c: 272: TxSts = 0u;
 26795                           
 26796                           ; BSR set to: 0
 26797  0064D0  0E00               	movlw	0
 26798  0064D2                     L58:
 26799  0064D2  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26800                           
 26801                           ; BSR set to: 0
 26802                           ;i2c_slv.c: 273: }
 26803                           ;i2c_slv.c: 275: return TxSts;
 26804  0064D4  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 26805  0064D6  0012               	return	
 26806  0064D8                     __end_of_I2cSlv_SendI2cMsg:
 26807                           	opt stack 0
 26808                           tosu	equ	0xFFF
 26809                           tosh	equ	0xFFE
 26810                           tosl	equ	0xFFD
 26811                           pclath	equ	0xFFA
 26812                           tblptru	equ	0xFF8
 26813                           tblptrh	equ	0xFF7
 26814                           tblptrl	equ	0xFF6
 26815                           tablat	equ	0xFF5
 26816                           prodh	equ	0xFF4
 26817                           prodl	equ	0xFF3
 26818                           intcon	equ	0xFF2
 26819                           intcon2	equ	0xFF1
 26820                           intcon3	equ	0xFF0
 26821                           indf0	equ	0xFEF
 26822                           postinc0	equ	0xFEE
 26823                           plusw0	equ	0xFEB
 26824                           fsr0h	equ	0xFEA
 26825                           fsr0l	equ	0xFE9
 26826                           wreg	equ	0xFE8
 26827                           indf1	equ	0xFE7
 26828                           postinc1	equ	0xFE6
 26829                           postdec1	equ	0xFE5
 26830                           fsr1h	equ	0xFE2
 26831                           fsr1l	equ	0xFE1
 26832                           indf2	equ	0xFDF
 26833                           postinc2	equ	0xFDE
 26834                           postdec2	equ	0xFDD
 26835                           plusw2	equ	0xFDB
 26836                           fsr2h	equ	0xFDA
 26837                           fsr2l	equ	0xFD9
 26838                           status	equ	0xFD8
 26839                           
 26840 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 26841 ;; Defined at:
 26842 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26843 ;; Parameters:    Size  Location     Type
 26844 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 26845 ;;		 -> readBuffer(13), memoryPreamble(4), Terminal@TermRxBuffer(50), 
 26846 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26847 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26848 ;; Auto vars:     Size  Location     Type
 26849 ;;  RxSts           1   36[BANK0 ] unsigned char 
 26850 ;; Return value:  Size  Location     Type
 26851 ;;                  1    wreg      unsigned char 
 26852 ;; Registers used:
 26853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26854 ;; Tracked objects:
 26855 ;;		On entry : 0/0
 26856 ;;		On exit  : 0/0
 26857 ;;		Unchanged: 0/0
 26858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26859 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26862 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26863 ;;Total ram usage:        5 bytes
 26864 ;; Hardware stack levels used:    1
 26865 ;; Hardware stack levels required when called:   12
 26866 ;; This function calls:
 26867 ;;		_GenerateEvt
 26868 ;; This function is called by:
 26869 ;;		_I2cSlv_QueryI2cData
 26870 ;;		_Terminal
 26871 ;; This function uses a non-reentrant model
 26872 ;;
 26873                           
 26874                           	psect	text127
 26875  0063DC                     __ptext127:
 26876                           	opt stack 0
 26877  0063DC                     _I2cSlv_ReceiveI2cMsg:
 26878                           	opt stack 13
 26879                           
 26880                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 26881                           
 26882                           ; BSR set to: 0
 26883                           ;incstack = 0
 26884  0063DC  0E00               	movlw	0
 26885  0063DE  0100               	movlb	0	; () banked
 26886  0063E0  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 26887                           
 26888                           ; BSR set to: 0
 26889                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 26890  0063E2  0E02               	movlw	2
 26891  0063E4  19CF               	xorwf	_I2cComSts& (0+255),w,b
 26892  0063E6  B4D8               	btfsc	status,2,c
 26893  0063E8  D016               	goto	l1417
 26894                           
 26895                           ; BSR set to: 0
 26896                           ;i2c_slv.c: 294: {
 26897                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 26898  0063EA  C082  F39B         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 26899                           
 26900                           ; BSR set to: 0
 26901                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 26902  0063EE  0E01               	movlw	1
 26903  0063F0  0103               	movlb	3	; () banked
 26904  0063F2  6F9C               	movwf	(_I2cRxPacket+1)& (0+255),b
 26905                           
 26906                           ; BSR set to: 3
 26907                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 26908  0063F4  C083  F39F         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 26909                           
 26910                           ; BSR set to: 3
 26911                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 26912  0063F8  C080  F39D         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 26913  0063FC  C081  F39E         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 26914                           
 26915                           ; BSR set to: 3
 26916                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 26917  006400  0E39               	movlw	low _I2cReadDataEvt
 26918  006402  0100               	movlb	0	; () banked
 26919  006404  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26920  006406  0E00               	movlw	high _I2cReadDataEvt
 26921  006408  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26922  00640A  EC06  F036         	call	_GenerateEvt	;wreg free
 26923                           
 26924                           ;i2c_slv.c: 304: RxSts = 1u;
 26925  00640E  0E01               	movlw	1
 26926  006410  0100               	movlb	0	; () banked
 26927  006412  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 26928                           
 26929                           ;i2c_slv.c: 305: }
 26930  006414  0012               	return	
 26931  006416                     l1417:
 26932                           
 26933                           ; BSR set to: 0
 26934                           ;i2c_slv.c: 306: else
 26935                           ;i2c_slv.c: 307: {
 26936                           ;i2c_slv.c: 309: RxSts = 0u;
 26937                           
 26938                           ; BSR set to: 0
 26939  006416  0E00               	movlw	0
 26940  006418  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 26941                           
 26942                           ; BSR set to: 0
 26943  00641A  0012               	return	
 26944  00641C                     __end_of_I2cSlv_ReceiveI2cMsg:
 26945                           	opt stack 0
 26946                           tosu	equ	0xFFF
 26947                           tosh	equ	0xFFE
 26948                           tosl	equ	0xFFD
 26949                           pclath	equ	0xFFA
 26950                           tblptru	equ	0xFF8
 26951                           tblptrh	equ	0xFF7
 26952                           tblptrl	equ	0xFF6
 26953                           tablat	equ	0xFF5
 26954                           prodh	equ	0xFF4
 26955                           prodl	equ	0xFF3
 26956                           intcon	equ	0xFF2
 26957                           intcon2	equ	0xFF1
 26958                           intcon3	equ	0xFF0
 26959                           indf0	equ	0xFEF
 26960                           postinc0	equ	0xFEE
 26961                           plusw0	equ	0xFEB
 26962                           fsr0h	equ	0xFEA
 26963                           fsr0l	equ	0xFE9
 26964                           wreg	equ	0xFE8
 26965                           indf1	equ	0xFE7
 26966                           postinc1	equ	0xFE6
 26967                           postdec1	equ	0xFE5
 26968                           fsr1h	equ	0xFE2
 26969                           fsr1l	equ	0xFE1
 26970                           indf2	equ	0xFDF
 26971                           postinc2	equ	0xFDE
 26972                           postdec2	equ	0xFDD
 26973                           plusw2	equ	0xFDB
 26974                           fsr2h	equ	0xFDA
 26975                           fsr2l	equ	0xFD9
 26976                           status	equ	0xFD8
 26977                           
 26978 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 26979 ;; Defined at:
 26980 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26981 ;; Parameters:    Size  Location     Type
 26982 ;;		None
 26983 ;; Auto vars:     Size  Location     Type
 26984 ;;  Result          1   33[BANK0 ] enum E8936
 26985 ;; Return value:  Size  Location     Type
 26986 ;;                  1    wreg      enum E8936
 26987 ;; Registers used:
 26988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26989 ;; Tracked objects:
 26990 ;;		On entry : 0/0
 26991 ;;		On exit  : 0/0
 26992 ;;		Unchanged: 0/0
 26993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26995 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26997 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26998 ;;Total ram usage:        1 bytes
 26999 ;; Hardware stack levels used:    1
 27000 ;; Hardware stack levels required when called:   12
 27001 ;; This function calls:
 27002 ;;		_ReceiveEvt
 27003 ;; This function is called by:
 27004 ;;		_I2cSlv_QueryI2cData
 27005 ;;		_Terminal
 27006 ;; This function uses a non-reentrant model
 27007 ;;
 27008                           
 27009                           	psect	text128
 27010  006A60                     __ptext128:
 27011                           	opt stack 0
 27012  006A60                     _I2cSlv_I2cReadMsgSts:
 27013                           	opt stack 13
 27014                           
 27015                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 27016                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 27017                           
 27018                           ; BSR set to: 0
 27019                           ;incstack = 0
 27020  006A60  0EA0               	movlw	low (_I2cRxPacket+5)
 27021  006A62  0100               	movlb	0	; () banked
 27022  006A64  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27023  006A66  0E03               	movlw	high (_I2cRxPacket+5)
 27024  006A68  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27025  006A6A  EC15  F034         	call	_ReceiveEvt	;wreg free
 27026  006A6E  0900               	iorlw	0
 27027  006A70  B4D8               	btfsc	status,2,c
 27028  006A72  D002               	goto	l1422
 27029                           
 27030                           ;i2c_slv.c: 331: {
 27031                           ;i2c_slv.c: 332: Result = MessageReceived;
 27032  006A74  0E01               	movlw	1
 27033  006A76  D001               	goto	L59
 27034  006A78                     l1422:
 27035                           
 27036                           ;i2c_slv.c: 334: else
 27037                           ;i2c_slv.c: 335: {
 27038                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 27039                           
 27040                           ; BSR set to: 0
 27041  006A78  0E00               	movlw	0
 27042  006A7A                     L59:
 27043  006A7A  0100               	movlb	0	; () banked
 27044  006A7C  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 27045                           
 27046                           ; BSR set to: 0
 27047                           ;i2c_slv.c: 337: }
 27048                           ;i2c_slv.c: 339: return Result;
 27049  006A7E  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 27050  006A80  0012               	return	
 27051  006A82                     __end_of_I2cSlv_I2cReadMsgSts:
 27052                           	opt stack 0
 27053                           tosu	equ	0xFFF
 27054                           tosh	equ	0xFFE
 27055                           tosl	equ	0xFFD
 27056                           pclath	equ	0xFFA
 27057                           tblptru	equ	0xFF8
 27058                           tblptrh	equ	0xFF7
 27059                           tblptrl	equ	0xFF6
 27060                           tablat	equ	0xFF5
 27061                           prodh	equ	0xFF4
 27062                           prodl	equ	0xFF3
 27063                           intcon	equ	0xFF2
 27064                           intcon2	equ	0xFF1
 27065                           intcon3	equ	0xFF0
 27066                           indf0	equ	0xFEF
 27067                           postinc0	equ	0xFEE
 27068                           plusw0	equ	0xFEB
 27069                           fsr0h	equ	0xFEA
 27070                           fsr0l	equ	0xFE9
 27071                           wreg	equ	0xFE8
 27072                           indf1	equ	0xFE7
 27073                           postinc1	equ	0xFE6
 27074                           postdec1	equ	0xFE5
 27075                           fsr1h	equ	0xFE2
 27076                           fsr1l	equ	0xFE1
 27077                           indf2	equ	0xFDF
 27078                           postinc2	equ	0xFDE
 27079                           postdec2	equ	0xFDD
 27080                           plusw2	equ	0xFDB
 27081                           fsr2h	equ	0xFDA
 27082                           fsr2l	equ	0xFD9
 27083                           status	equ	0xFD8
 27084                           
 27085 ;; *************** function _Led_SetLedBlinkTime *****************
 27086 ;; Defined at:
 27087 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 27088 ;; Parameters:    Size  Location     Type
 27089 ;;  Led             1    wreg     unsigned char 
 27090 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 27091 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 27092 ;; Auto vars:     Size  Location     Type
 27093 ;;  Led             1   33[BANK0 ] unsigned char 
 27094 ;; Return value:  Size  Location     Type
 27095 ;;                  1    wreg      void 
 27096 ;; Registers used:
 27097 ;;		wreg, status,2, status,0
 27098 ;; Tracked objects:
 27099 ;;		On entry : 0/0
 27100 ;;		On exit  : 0/0
 27101 ;;		Unchanged: 0/0
 27102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27103 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27106 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27107 ;;Total ram usage:        5 bytes
 27108 ;; Hardware stack levels used:    1
 27109 ;; Hardware stack levels required when called:   11
 27110 ;; This function calls:
 27111 ;;		Nothing
 27112 ;; This function is called by:
 27113 ;;		_MyApp_Task
 27114 ;; This function uses a non-reentrant model
 27115 ;;
 27116                           
 27117                           	psect	text129
 27118  005DB4                     __ptext129:
 27119                           	opt stack 0
 27120  005DB4                     _Led_SetLedBlinkTime:
 27121                           	opt stack 16
 27122                           
 27123                           ; BSR set to: 0
 27124                           ;incstack = 0
 27125                           ;Led_SetLedBlinkTime@Led stored from wreg
 27126  005DB4  0100               	movlb	0	; () banked
 27127  005DB6  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 27128                           
 27129                           ;led.c: 374: switch (Led)
 27130  005DB8  D01B               	goto	l2151
 27131  005DBA                     l2152:
 27132                           
 27133                           ; BSR set to: 0
 27134                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 27135  005DBA  C07D  F375         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 27136  005DBE  C07E  F376         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 27137                           
 27138                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 27139  005DC2  C07F  F377         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 27140  005DC6  C080  F378         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 27141                           
 27142                           ;led.c: 379: break;
 27143  005DCA  0012               	return	
 27144  005DCC                     l2154:
 27145                           
 27146                           ; BSR set to: 0
 27147                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 27148  005DCC  C07D  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 27149  005DD0  C07E  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 27150                           
 27151                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 27152  005DD4  C07F  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 27153  005DD8  C080  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 27154                           
 27155                           ;led.c: 384: break;
 27156  005DDC  0012               	return	
 27157  005DDE                     l2155:
 27158                           
 27159                           ; BSR set to: 0
 27160                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 27161  005DDE  C07D  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 27162  005DE2  C07E  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 27163                           
 27164                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 27165  005DE6  C07F  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 27166  005DEA  C080  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 27167                           
 27168                           ; BSR set to: 0
 27169                           ;led.c: 393: }
 27170                           
 27171                           ; BSR set to: 0
 27172                           ;led.c: 392: break;
 27173                           
 27174                           ;led.c: 391: default:
 27175                           
 27176                           ;led.c: 389: break;
 27177  005DEE  0012               	return	
 27178  005DF0                     l2151:
 27179                           
 27180                           ; BSR set to: 0
 27181  005DF0  0100               	movlb	0	; () banked
 27182  005DF2  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 27183                           
 27184                           ; Switch size 1, requested type "space"
 27185                           ; Number of cases is 3, Range of values is 1 to 3
 27186                           ; switch strategies available:
 27187                           ; Name         Instructions Cycles
 27188                           ; simple_byte           10     6 (average)
 27189                           ;	Chosen strategy is simple_byte
 27190  005DF4  0A01               	xorlw	1	; case 1
 27191  005DF6  B4D8               	btfsc	status,2,c
 27192  005DF8  D7E0               	goto	l2152
 27193  005DFA  0A03               	xorlw	3	; case 2
 27194  005DFC  B4D8               	btfsc	status,2,c
 27195  005DFE  D7E6               	goto	l2154
 27196  005E00  0A01               	xorlw	1	; case 3
 27197  005E02  A4D8               	btfss	status,2,c
 27198  005E04  0012               	return	
 27199  005E06  D7EB               	goto	l2155
 27200  005E08                     __end_of_Led_SetLedBlinkTime:
 27201                           	opt stack 0
 27202                           tosu	equ	0xFFF
 27203                           tosh	equ	0xFFE
 27204                           tosl	equ	0xFFD
 27205                           pclath	equ	0xFFA
 27206                           tblptru	equ	0xFF8
 27207                           tblptrh	equ	0xFF7
 27208                           tblptrl	equ	0xFF6
 27209                           tablat	equ	0xFF5
 27210                           prodh	equ	0xFF4
 27211                           prodl	equ	0xFF3
 27212                           intcon	equ	0xFF2
 27213                           intcon2	equ	0xFF1
 27214                           intcon3	equ	0xFF0
 27215                           indf0	equ	0xFEF
 27216                           postinc0	equ	0xFEE
 27217                           plusw0	equ	0xFEB
 27218                           fsr0h	equ	0xFEA
 27219                           fsr0l	equ	0xFE9
 27220                           wreg	equ	0xFE8
 27221                           indf1	equ	0xFE7
 27222                           postinc1	equ	0xFE6
 27223                           postdec1	equ	0xFE5
 27224                           fsr1h	equ	0xFE2
 27225                           fsr1l	equ	0xFE1
 27226                           indf2	equ	0xFDF
 27227                           postinc2	equ	0xFDE
 27228                           postdec2	equ	0xFDD
 27229                           plusw2	equ	0xFDB
 27230                           fsr2h	equ	0xFDA
 27231                           fsr2l	equ	0xFD9
 27232                           status	equ	0xFD8
 27233                           
 27234 ;; *************** function _UartSetConfig *****************
 27235 ;; Defined at:
 27236 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27237 ;; Parameters:    Size  Location     Type
 27238 ;;		None
 27239 ;; Auto vars:     Size  Location     Type
 27240 ;;		None
 27241 ;; Return value:  Size  Location     Type
 27242 ;;                  1    wreg      void 
 27243 ;; Registers used:
 27244 ;;		wreg, status,2
 27245 ;; Tracked objects:
 27246 ;;		On entry : 0/0
 27247 ;;		On exit  : 0/0
 27248 ;;		Unchanged: 0/0
 27249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27254 ;;Total ram usage:        0 bytes
 27255 ;; Hardware stack levels used:    1
 27256 ;; Hardware stack levels required when called:   11
 27257 ;; This function calls:
 27258 ;;		Nothing
 27259 ;; This function is called by:
 27260 ;;		_Mdm_MainTask
 27261 ;; This function uses a non-reentrant model
 27262 ;;
 27263                           
 27264                           	psect	text130
 27265  005B02                     __ptext130:
 27266                           	opt stack 0
 27267  005B02                     _UartSetConfig:
 27268                           	opt stack 16
 27269                           
 27270                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 27271                           
 27272                           ; BSR set to: 0
 27273                           ;incstack = 0
 27274  005B02  0E01               	movlw	1
 27275  005B04  0103               	movlb	3	; () banked
 27276  005B06  6F24               	movwf	_UartConfig& (0+255),b
 27277                           
 27278                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 27279  005B08  0E00               	movlw	0
 27280  005B0A  6F25               	movwf	(_UartConfig+1)& (0+255),b
 27281                           
 27282                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 27283  005B0C  0E00               	movlw	0
 27284  005B0E  6F26               	movwf	(_UartConfig+2)& (0+255),b
 27285                           
 27286                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 27287  005B10  0E00               	movlw	0
 27288  005B12  6F27               	movwf	(_UartConfig+3)& (0+255),b
 27289                           
 27290                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 27291  005B14  0E00               	movlw	0
 27292  005B16  6F28               	movwf	(_UartConfig+4)& (0+255),b
 27293                           
 27294                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 27295  005B18  0E00               	movlw	0
 27296  005B1A  6F29               	movwf	(_UartConfig+5)& (0+255),b
 27297                           
 27298                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 27299  005B1C  0E01               	movlw	1
 27300  005B1E  6F2A               	movwf	(_UartConfig+6)& (0+255),b
 27301                           
 27302                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 27303  005B20  0E01               	movlw	1
 27304  005B22  6F2B               	movwf	(_UartConfig+7)& (0+255),b
 27305                           
 27306                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 27307  005B24  0E00               	movlw	0
 27308  005B26  6F2C               	movwf	(_UartConfig+8)& (0+255),b
 27309                           
 27310                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 27311  005B28  0E00               	movlw	0
 27312  005B2A  6F2D               	movwf	(_UartConfig+9)& (0+255),b
 27313                           
 27314                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 27315  005B2C  0E00               	movlw	0
 27316  005B2E  6F2E               	movwf	(_UartConfig+10)& (0+255),b
 27317                           
 27318                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 27319  005B30  0E00               	movlw	0
 27320  005B32  6F2F               	movwf	(_UartConfig+11)& (0+255),b
 27321                           
 27322                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 27323  005B34  0E01               	movlw	1
 27324  005B36  6F30               	movwf	(_UartConfig+12)& (0+255),b
 27325                           
 27326                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 27327  005B38  0E00               	movlw	0
 27328  005B3A  6F31               	movwf	(_UartConfig+13)& (0+255),b
 27329  005B3C  0E6C               	movlw	108
 27330  005B3E  6F32               	movwf	(_UartConfig+14)& (0+255),b
 27331  005B40  0EDC               	movlw	220
 27332  005B42  6F33               	movwf	(_UartConfig+15)& (0+255),b
 27333  005B44  0E02               	movlw	2
 27334  005B46  6F34               	movwf	(_UartConfig+16)& (0+255),b
 27335                           
 27336                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 27337  005B48  0E80               	movlw	128
 27338  005B4A  6F35               	movwf	(_UartConfig+17)& (0+255),b
 27339  005B4C  0E25               	movlw	37
 27340  005B4E  6F36               	movwf	(_UartConfig+18)& (0+255),b
 27341  005B50  0E00               	movlw	0
 27342  005B52  6F37               	movwf	(_UartConfig+19)& (0+255),b
 27343  005B54  0E00               	movlw	0
 27344  005B56  6F38               	movwf	(_UartConfig+20)& (0+255),b
 27345                           
 27346                           ; BSR set to: 3
 27347  005B58  0012               	return		;funcret
 27348  005B5A                     __end_of_UartSetConfig:
 27349                           	opt stack 0
 27350                           tosu	equ	0xFFF
 27351                           tosh	equ	0xFFE
 27352                           tosl	equ	0xFFD
 27353                           pclath	equ	0xFFA
 27354                           tblptru	equ	0xFF8
 27355                           tblptrh	equ	0xFF7
 27356                           tblptrl	equ	0xFF6
 27357                           tablat	equ	0xFF5
 27358                           prodh	equ	0xFF4
 27359                           prodl	equ	0xFF3
 27360                           intcon	equ	0xFF2
 27361                           intcon2	equ	0xFF1
 27362                           intcon3	equ	0xFF0
 27363                           indf0	equ	0xFEF
 27364                           postinc0	equ	0xFEE
 27365                           plusw0	equ	0xFEB
 27366                           fsr0h	equ	0xFEA
 27367                           fsr0l	equ	0xFE9
 27368                           wreg	equ	0xFE8
 27369                           indf1	equ	0xFE7
 27370                           postinc1	equ	0xFE6
 27371                           postdec1	equ	0xFE5
 27372                           fsr1h	equ	0xFE2
 27373                           fsr1l	equ	0xFE1
 27374                           indf2	equ	0xFDF
 27375                           postinc2	equ	0xFDE
 27376                           postdec2	equ	0xFDD
 27377                           plusw2	equ	0xFDB
 27378                           fsr2h	equ	0xFDA
 27379                           fsr2l	equ	0xFD9
 27380                           status	equ	0xFD8
 27381                           
 27382 ;; *************** function _TurnOnModem *****************
 27383 ;; Defined at:
 27384 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27385 ;; Parameters:    Size  Location     Type
 27386 ;;		None
 27387 ;; Auto vars:     Size  Location     Type
 27388 ;;		None
 27389 ;; Return value:  Size  Location     Type
 27390 ;;                  1    wreg      void 
 27391 ;; Registers used:
 27392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27393 ;; Tracked objects:
 27394 ;;		On entry : 0/0
 27395 ;;		On exit  : 0/0
 27396 ;;		Unchanged: 0/0
 27397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27402 ;;Total ram usage:        0 bytes
 27403 ;; Hardware stack levels used:    1
 27404 ;; Hardware stack levels required when called:   12
 27405 ;; This function calls:
 27406 ;;		_GenerateEvt
 27407 ;; This function is called by:
 27408 ;;		_Mdm_MainTask
 27409 ;; This function uses a non-reentrant model
 27410 ;;
 27411                           
 27412                           	psect	text131
 27413  006126                     __ptext131:
 27414                           	opt stack 0
 27415  006126                     _TurnOnModem:
 27416                           	opt stack 15
 27417                           
 27418                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 27419                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 27420                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 27421                           
 27422                           ; BSR set to: 3
 27423                           ;incstack = 0
 27424  006126  D01B               	goto	l1009
 27425  006128                     
 27426                           ;mdm_gsm_gprs.c: 385: Counter++;
 27427  006128  0103               	movlb	3	; () banked
 27428  00612A  4B22               	infsnz	TurnOnModem@Counter& (0+255),f,b
 27429  00612C  2B23               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 27430                           
 27431                           ; BSR set to: 3
 27432                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 27433  00612E  0EB8               	movlw	184
 27434  006130  5D22               	subwf	TurnOnModem@Counter& (0+255),w,b
 27435  006132  0E0B               	movlw	11
 27436  006134  5923               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 27437  006136  A0D8               	btfss	status,0,c
 27438  006138  0012               	return	
 27439                           
 27440                           ; BSR set to: 3
 27441                           ;mdm_gsm_gprs.c: 388: {
 27442                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 27443  00613A  0E01               	movlw	1
 27444  00613C  0101               	movlb	1	; () banked
 27445  00613E  6FF1               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 27446                           
 27447                           ; BSR set to: 1
 27448                           ;mdm_gsm_gprs.c: 391: }
 27449                           ;mdm_gsm_gprs.c: 392: break;
 27450  006140  0012               	return	
 27451  006142                     
 27452                           ; BSR set to: 1
 27453                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 27454                           
 27455                           ; BSR set to: 1
 27456  006142  0EDF               	movlw	low _MdmOnOffPulseRequest
 27457  006144  0100               	movlb	0	; () banked
 27458  006146  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27459  006148  0E00               	movlw	high _MdmOnOffPulseRequest
 27460  00614A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27461  00614C  EC06  F036         	call	_GenerateEvt	;wreg free
 27462                           
 27463                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 27464  006150  0E01               	movlw	1
 27465  006152  0100               	movlb	0	; () banked
 27466  006154  6FD1               	movwf	_MdmStatus& (0+255),b
 27467                           
 27468                           ; BSR set to: 0
 27469                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 27470  006156  0E02               	movlw	2
 27471  006158  0101               	movlb	1	; () banked
 27472  00615A  6FF1               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 27473                           
 27474                           ; BSR set to: 1
 27475                           ;mdm_gsm_gprs.c: 408: }
 27476                           
 27477                           ; BSR set to: 1
 27478                           ;mdm_gsm_gprs.c: 407: break;
 27479                           
 27480                           ;mdm_gsm_gprs.c: 406: default:
 27481                           
 27482                           ; BSR set to: 1
 27483                           ;mdm_gsm_gprs.c: 404: break;
 27484                           
 27485                           ;mdm_gsm_gprs.c: 403: case Stop:
 27486                           
 27487                           ;mdm_gsm_gprs.c: 401: break;
 27488  00615C  0012               	return	
 27489  00615E                     l1009:
 27490                           
 27491                           ; BSR set to: 1
 27492  00615E  0101               	movlb	1	; () banked
 27493  006160  51F1               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 27494                           
 27495                           ; Switch size 1, requested type "space"
 27496                           ; Number of cases is 3, Range of values is 0 to 2
 27497                           ; switch strategies available:
 27498                           ; Name         Instructions Cycles
 27499                           ; simple_byte           10     6 (average)
 27500                           ;	Chosen strategy is simple_byte
 27501  006162  0A00               	xorlw	0	; case 0
 27502  006164  B4D8               	btfsc	status,2,c
 27503  006166  D7E0               	goto	l1010
 27504  006168  0A01               	xorlw	1	; case 1
 27505  00616A  B4D8               	btfsc	status,2,c
 27506  00616C  D7EA               	goto	l1013
 27507  00616E  0A03               	xorlw	3	; case 2
 27508  006170  0012               	return	
 27509  006172                     __end_of_TurnOnModem:
 27510                           	opt stack 0
 27511                           tosu	equ	0xFFF
 27512                           tosh	equ	0xFFE
 27513                           tosl	equ	0xFFD
 27514                           pclath	equ	0xFFA
 27515                           tblptru	equ	0xFF8
 27516                           tblptrh	equ	0xFF7
 27517                           tblptrl	equ	0xFF6
 27518                           tablat	equ	0xFF5
 27519                           prodh	equ	0xFF4
 27520                           prodl	equ	0xFF3
 27521                           intcon	equ	0xFF2
 27522                           intcon2	equ	0xFF1
 27523                           intcon3	equ	0xFF0
 27524                           indf0	equ	0xFEF
 27525                           postinc0	equ	0xFEE
 27526                           plusw0	equ	0xFEB
 27527                           fsr0h	equ	0xFEA
 27528                           fsr0l	equ	0xFE9
 27529                           wreg	equ	0xFE8
 27530                           indf1	equ	0xFE7
 27531                           postinc1	equ	0xFE6
 27532                           postdec1	equ	0xFE5
 27533                           fsr1h	equ	0xFE2
 27534                           fsr1l	equ	0xFE1
 27535                           indf2	equ	0xFDF
 27536                           postinc2	equ	0xFDE
 27537                           postdec2	equ	0xFDD
 27538                           plusw2	equ	0xFDB
 27539                           fsr2h	equ	0xFDA
 27540                           fsr2l	equ	0xFD9
 27541                           status	equ	0xFD8
 27542                           
 27543 ;; *************** function _SendSmsSm *****************
 27544 ;; Defined at:
 27545 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27546 ;; Parameters:    Size  Location     Type
 27547 ;;		None
 27548 ;; Auto vars:     Size  Location     Type
 27549 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 27550 ;; Return value:  Size  Location     Type
 27551 ;;                  1    wreg      void 
 27552 ;; Registers used:
 27553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27554 ;; Tracked objects:
 27555 ;;		On entry : 0/0
 27556 ;;		On exit  : 0/0
 27557 ;;		Unchanged: 0/0
 27558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27560 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27561 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27562 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27563 ;;Total ram usage:       52 bytes
 27564 ;; Hardware stack levels used:    1
 27565 ;; Hardware stack levels required when called:   14
 27566 ;; This function calls:
 27567 ;;		_OsTmr_GetTimerStatus
 27568 ;;		_OsTmr_StartTimer
 27569 ;;		_ReceiveEvt
 27570 ;;		_StringCopy
 27571 ;;		_Uart_WriteStringLen
 27572 ;; This function is called by:
 27573 ;;		_Mdm_MainTask
 27574 ;; This function uses a non-reentrant model
 27575 ;;
 27576                           
 27577                           	psect	text132
 27578  0019F8                     __ptext132:
 27579                           	opt stack 0
 27580  0019F8                     _SendSmsSm:
 27581                           	opt stack 13
 27582                           
 27583                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 27584                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 27585                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 27586                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 27587                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 27588                           
 27589                           ;incstack = 0
 27590  0019F8  0E03               	movlw	3
 27591  0019FA  0100               	movlb	0	; () banked
 27592  0019FC  19D1               	xorwf	_MdmStatus& (0+255),w,b
 27593  0019FE  A4D8               	btfss	status,2,c
 27594  001A00  0012               	return	
 27595  001A02  D0C1               	goto	l1091
 27596  001A04                     
 27597                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 27598                           
 27599                           ; BSR set to: 0
 27600  001A04  0EDE               	movlw	low _SendSmsEvent
 27601  001A06  0100               	movlb	0	; () banked
 27602  001A08  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27603  001A0A  0E00               	movlw	high _SendSmsEvent
 27604  001A0C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27605  001A0E  EC15  F034         	call	_ReceiveEvt	;wreg free
 27606  001A12  0900               	iorlw	0
 27607  001A14  B4D8               	btfsc	status,2,c
 27608  001A16  0012               	return	
 27609                           
 27610                           ;mdm_gsm_gprs.c: 671: {
 27611                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 27612  001A18  0E01               	movlw	1
 27613  001A1A  0101               	movlb	1	; () banked
 27614  001A1C  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27615                           
 27616                           ; BSR set to: 1
 27617                           ;mdm_gsm_gprs.c: 674: }
 27618                           ;mdm_gsm_gprs.c: 675: break;
 27619  001A1E  0012               	return	
 27620  001A20                     
 27621                           ; BSR set to: 1
 27622                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 27623                           
 27624                           ; BSR set to: 1
 27625  001A20  0ECE               	movlw	low STR_5
 27626  001A22  0100               	movlb	0	; () banked
 27627  001A24  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27628  001A26  0EFF               	movlw	high STR_5
 27629  001A28  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27630  001A2A  0E00               	movlw	low SendSmsSm@UartMessage
 27631  001A2C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27632  001A2E  0E01               	movlw	high SendSmsSm@UartMessage
 27633  001A30  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27634  001A32  0E00               	movlw	0
 27635  001A34  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 27636  001A36  0E09               	movlw	9
 27637  001A38  6F89               	movwf	StringCopy@Len& (0+255),b
 27638  001A3A  ECC4  F02C         	call	_StringCopy	;wreg free
 27639                           
 27640                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 27641  001A3E  0E98               	movlw	low _PhoneNumber
 27642  001A40  0100               	movlb	0	; () banked
 27643  001A42  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27644  001A44  0E04               	movlw	high _PhoneNumber
 27645  001A46  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27646  001A48  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 27647  001A4A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27648  001A4C  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 27649  001A4E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27650  001A50  C0D2  F089         	movff	_PhoneNumbLen,StringCopy@Len
 27651  001A54  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 27652  001A56  ECC4  F02C         	call	_StringCopy	;wreg free
 27653                           
 27654                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 27655  001A5A  0100               	movlb	0	; () banked
 27656  001A5C  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27657  001A5E  6F9B               	movwf	??_SendSmsSm& (0+255),b
 27658  001A60  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 27659  001A62  0E09               	movlw	9
 27660  001A64  279B               	addwf	??_SendSmsSm& (0+255),f,b
 27661  001A66  0E00               	movlw	0
 27662  001A68  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 27663  001A6A  0E00               	movlw	low SendSmsSm@UartMessage
 27664  001A6C  259B               	addwf	??_SendSmsSm& (0+255),w,b
 27665  001A6E  6ED9               	movwf	fsr2l,c
 27666  001A70  0E01               	movlw	high SendSmsSm@UartMessage
 27667  001A72  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 27668  001A74  6EDA               	movwf	fsr2h,c
 27669  001A76  0E22               	movlw	34
 27670  001A78  6EDF               	movwf	indf2,c
 27671                           
 27672                           ; BSR set to: 0
 27673                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 27674  001A7A  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27675  001A7C  6F9B               	movwf	??_SendSmsSm& (0+255),b
 27676  001A7E  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 27677  001A80  0E0A               	movlw	10
 27678  001A82  279B               	addwf	??_SendSmsSm& (0+255),f,b
 27679  001A84  0E00               	movlw	0
 27680  001A86  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 27681  001A88  0E00               	movlw	low SendSmsSm@UartMessage
 27682  001A8A  259B               	addwf	??_SendSmsSm& (0+255),w,b
 27683  001A8C  6ED9               	movwf	fsr2l,c
 27684  001A8E  0E01               	movlw	high SendSmsSm@UartMessage
 27685  001A90  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 27686  001A92  6EDA               	movwf	fsr2h,c
 27687  001A94  0E0D               	movlw	13
 27688  001A96  6EDF               	movwf	indf2,c
 27689                           
 27690                           ; BSR set to: 0
 27691                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 27692  001A98  0E00               	movlw	low SendSmsSm@UartMessage
 27693  001A9A  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27694  001A9C  0E01               	movlw	high SendSmsSm@UartMessage
 27695  001A9E  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27696  001AA0  51D2               	movf	_PhoneNumbLen& (0+255),w,b
 27697  001AA2  0F0B               	addlw	11
 27698  001AA4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27699  001AA6  0E01               	movlw	1
 27700  001AA8  EC0E  F032         	call	_Uart_WriteStringLen
 27701                           
 27702                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 27703  001AAC  0EE7               	movlw	low SendSmsSm@SwTimer
 27704  001AAE  0100               	movlb	0	; () banked
 27705  001AB0  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27706  001AB2  0E03               	movlw	high SendSmsSm@SwTimer
 27707  001AB4  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27708  001AB6  0EC4               	movlw	196
 27709  001AB8  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27710  001ABA  0E09               	movlw	9
 27711  001ABC  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27712  001ABE  0E00               	movlw	0
 27713  001AC0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27714  001AC2  0E00               	movlw	0
 27715  001AC4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27716  001AC6  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 27717                           
 27718                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 27719  001ACA  0E05               	movlw	5
 27720  001ACC  0101               	movlb	1	; () banked
 27721  001ACE  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27722                           
 27723                           ; BSR set to: 1
 27724                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 27725  001AD0  0E02               	movlw	2
 27726  001AD2  6FEC               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 27727                           
 27728                           ;mdm_gsm_gprs.c: 691: break;
 27729  001AD4  0012               	return	
 27730  001AD6                     
 27731                           ; BSR set to: 1
 27732                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 27733                           
 27734                           ; BSR set to: 1
 27735  001AD6  0E0A               	movlw	10
 27736  001AD8  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 27737                           
 27738                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 27739  001ADA  0E0D               	movlw	13
 27740  001ADC  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 27741                           
 27742                           ; BSR set to: 1
 27743                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 27744  001ADE  0E00               	movlw	low SendSmsSm@UartMessage
 27745  001AE0  0100               	movlb	0	; () banked
 27746  001AE2  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27747  001AE4  0E01               	movlw	high SendSmsSm@UartMessage
 27748  001AE6  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27749  001AE8  0E02               	movlw	2
 27750  001AEA  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27751  001AEC  0E01               	movlw	1
 27752  001AEE  EC0E  F032         	call	_Uart_WriteStringLen
 27753                           
 27754                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 27755  001AF2  0E03               	movlw	3
 27756  001AF4  0101               	movlb	1	; () banked
 27757  001AF6  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27758                           
 27759                           ;mdm_gsm_gprs.c: 701: break;
 27760  001AF8  0012               	return	
 27761  001AFA                     
 27762                           ; BSR set to: 1
 27763                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 27764                           
 27765                           ; BSR set to: 1
 27766  001AFA  0E3C               	movlw	low _NewStringReceived
 27767  001AFC  0100               	movlb	0	; () banked
 27768  001AFE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27769  001B00  0E00               	movlw	high _NewStringReceived
 27770  001B02  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27771  001B04  EC15  F034         	call	_ReceiveEvt	;wreg free
 27772  001B08  0900               	iorlw	0
 27773  001B0A  B4D8               	btfsc	status,2,c
 27774  001B0C  0012               	return	
 27775                           
 27776                           ;mdm_gsm_gprs.c: 706: {
 27777                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 27778  001B0E  CC58  FFE8         	movff	_RxBuffer,wreg
 27779  001B12  0A3E               	xorlw	62
 27780  001B14  A4D8               	btfss	status,2,c
 27781  001B16  0012               	return	
 27782                           
 27783                           ;mdm_gsm_gprs.c: 709: {
 27784                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 27785  001B18  0E04               	movlw	4
 27786  001B1A  0101               	movlb	1	; () banked
 27787  001B1C  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27788                           
 27789                           ; BSR set to: 1
 27790                           ;mdm_gsm_gprs.c: 712: }
 27791                           ;mdm_gsm_gprs.c: 713: }
 27792                           ;mdm_gsm_gprs.c: 714: break;
 27793                           
 27794                           ; BSR set to: 1
 27795  001B1E  0012               	return	
 27796  001B20                     
 27797                           ; BSR set to: 1
 27798                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 27799                           
 27800                           ; BSR set to: 1
 27801  001B20  0E72               	movlw	low _MessageText
 27802  001B22  0100               	movlb	0	; () banked
 27803  001B24  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27804  001B26  0E05               	movlw	high _MessageText
 27805  001B28  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27806  001B2A  0E00               	movlw	low SendSmsSm@UartMessage
 27807  001B2C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27808  001B2E  0E01               	movlw	high SendSmsSm@UartMessage
 27809  001B30  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27810  001B32  C0D3  F089         	movff	_SmsLen,StringCopy@Len
 27811  001B36  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 27812  001B38  ECC4  F02C         	call	_StringCopy	;wreg free
 27813                           
 27814                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 27815  001B3C  0100               	movlb	0	; () banked
 27816  001B3E  51D3               	movf	_SmsLen& (0+255),w,b
 27817  001B40  0D01               	mullw	1
 27818  001B42  0E00               	movlw	low SendSmsSm@UartMessage
 27819  001B44  24F3               	addwf	prodl,w,c
 27820  001B46  6ED9               	movwf	fsr2l,c
 27821  001B48  0E01               	movlw	high SendSmsSm@UartMessage
 27822  001B4A  20F4               	addwfc	prodh,w,c
 27823  001B4C  6EDA               	movwf	fsr2h,c
 27824  001B4E  0E1A               	movlw	26
 27825  001B50  6EDF               	movwf	indf2,c
 27826                           
 27827                           ; BSR set to: 0
 27828                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 27829  001B52  0E00               	movlw	low SendSmsSm@UartMessage
 27830  001B54  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 27831  001B56  0E01               	movlw	high SendSmsSm@UartMessage
 27832  001B58  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 27833  001B5A  29D3               	incf	_SmsLen& (0+255),w,b
 27834  001B5C  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 27835  001B5E  0E01               	movlw	1
 27836  001B60  EC0E  F032         	call	_Uart_WriteStringLen
 27837                           
 27838                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 27839  001B64  0E00               	movlw	0
 27840  001B66  0101               	movlb	1	; () banked
 27841  001B68  6FED               	movwf	SendSmsSm@SendSms_State& (0+255),b
 27842                           
 27843                           ;mdm_gsm_gprs.c: 725: break;
 27844  001B6A  0012               	return	
 27845  001B6C                     
 27846                           ; BSR set to: 1
 27847                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 27848                           
 27849                           ; BSR set to: 1
 27850  001B6C  0EE7               	movlw	low SendSmsSm@SwTimer
 27851  001B6E  0100               	movlb	0	; () banked
 27852  001B70  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27853  001B72  0E03               	movlw	high SendSmsSm@SwTimer
 27854  001B74  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27855  001B76  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 27856  001B7A  06E8               	decf	wreg,f,c
 27857  001B7C  A4D8               	btfss	status,2,c
 27858  001B7E  0012               	return	
 27859                           
 27860                           ;mdm_gsm_gprs.c: 730: {
 27861                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 27862  001B80  C1EC  F1ED         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 27863                           
 27864                           ;mdm_gsm_gprs.c: 738: }
 27865                           
 27866                           ;mdm_gsm_gprs.c: 737: break;
 27867                           
 27868                           ;mdm_gsm_gprs.c: 736: default:
 27869                           
 27870                           ;mdm_gsm_gprs.c: 733: }
 27871                           ;mdm_gsm_gprs.c: 734: break;
 27872  001B84  0012               	return	
 27873  001B86                     l1091:
 27874  001B86  0101               	movlb	1	; () banked
 27875  001B88  51ED               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 27876                           
 27877                           ; Switch size 1, requested type "space"
 27878                           ; Number of cases is 6, Range of values is 0 to 5
 27879                           ; switch strategies available:
 27880                           ; Name         Instructions Cycles
 27881                           ; simple_byte           19    10 (average)
 27882                           ;	Chosen strategy is simple_byte
 27883  001B8A  0A00               	xorlw	0	; case 0
 27884  001B8C  B4D8               	btfsc	status,2,c
 27885  001B8E  D73A               	goto	l1092
 27886  001B90  0A01               	xorlw	1	; case 1
 27887  001B92  B4D8               	btfsc	status,2,c
 27888  001B94  D745               	goto	l1095
 27889  001B96  0A03               	xorlw	3	; case 2
 27890  001B98  B4D8               	btfsc	status,2,c
 27891  001B9A  D79D               	goto	l1096
 27892  001B9C  0A01               	xorlw	1	; case 3
 27893  001B9E  B4D8               	btfsc	status,2,c
 27894  001BA0  D7AC               	goto	l1097
 27895  001BA2  0A07               	xorlw	7	; case 4
 27896  001BA4  B4D8               	btfsc	status,2,c
 27897  001BA6  D7BC               	goto	l1100
 27898  001BA8  0A01               	xorlw	1	; case 5
 27899  001BAA  A4D8               	btfss	status,2,c
 27900                           
 27901                           ; BSR set to: 1
 27902  001BAC  0012               	return	
 27903  001BAE  D7DE               	goto	l1101
 27904  001BB0                     __end_of_SendSmsSm:
 27905                           	opt stack 0
 27906                           tosu	equ	0xFFF
 27907                           tosh	equ	0xFFE
 27908                           tosl	equ	0xFFD
 27909                           pclath	equ	0xFFA
 27910                           tblptru	equ	0xFF8
 27911                           tblptrh	equ	0xFF7
 27912                           tblptrl	equ	0xFF6
 27913                           tablat	equ	0xFF5
 27914                           prodh	equ	0xFF4
 27915                           prodl	equ	0xFF3
 27916                           intcon	equ	0xFF2
 27917                           intcon2	equ	0xFF1
 27918                           intcon3	equ	0xFF0
 27919                           indf0	equ	0xFEF
 27920                           postinc0	equ	0xFEE
 27921                           plusw0	equ	0xFEB
 27922                           fsr0h	equ	0xFEA
 27923                           fsr0l	equ	0xFE9
 27924                           wreg	equ	0xFE8
 27925                           indf1	equ	0xFE7
 27926                           postinc1	equ	0xFE6
 27927                           postdec1	equ	0xFE5
 27928                           fsr1h	equ	0xFE2
 27929                           fsr1l	equ	0xFE1
 27930                           indf2	equ	0xFDF
 27931                           postinc2	equ	0xFDE
 27932                           postdec2	equ	0xFDD
 27933                           plusw2	equ	0xFDB
 27934                           fsr2h	equ	0xFDA
 27935                           fsr2l	equ	0xFD9
 27936                           status	equ	0xFD8
 27937                           
 27938 ;; *************** function _Uart_WriteStringLen *****************
 27939 ;; Defined at:
 27940 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27941 ;; Parameters:    Size  Location     Type
 27942 ;;  Module          1    wreg     unsigned char 
 27943 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27944 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 27945 ;;  Len             1   34[BANK0 ] unsigned char 
 27946 ;; Auto vars:     Size  Location     Type
 27947 ;;  Module          1   36[BANK0 ] unsigned char 
 27948 ;;  Index           1   35[BANK0 ] unsigned char 
 27949 ;; Return value:  Size  Location     Type
 27950 ;;                  1    wreg      void 
 27951 ;; Registers used:
 27952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27953 ;; Tracked objects:
 27954 ;;		On entry : 0/0
 27955 ;;		On exit  : 0/0
 27956 ;;		Unchanged: 0/0
 27957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27958 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27959 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27961 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27962 ;;Total ram usage:        5 bytes
 27963 ;; Hardware stack levels used:    1
 27964 ;; Hardware stack levels required when called:   12
 27965 ;; This function calls:
 27966 ;;		_UartTxBufferStatus
 27967 ;;		_UartWriteByte
 27968 ;; This function is called by:
 27969 ;;		_SendSmsSm
 27970 ;;		_GsmGprsTerminal
 27971 ;; This function uses a non-reentrant model
 27972 ;;
 27973                           
 27974                           	psect	text133
 27975  00641C                     __ptext133:
 27976                           	opt stack 0
 27977  00641C                     _Uart_WriteStringLen:
 27978                           	opt stack 14
 27979                           
 27980                           ;incstack = 0
 27981                           ;Uart_WriteStringLen@Module stored from wreg
 27982  00641C  0100               	movlb	0	; () banked
 27983  00641E  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 27984                           
 27985                           ;uart_drv.c: 544: UINT8 Index;
 27986                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 27987  006420  0E00               	movlw	0
 27988  006422  0100               	movlb	0	; () banked
 27989  006424  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 27990  006426  D015               	goto	l715
 27991  006428                     
 27992                           ; BSR set to: 0
 27993                           ;uart_drv.c: 547: {
 27994                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 27995                           
 27996                           ; BSR set to: 0
 27997  006428  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 27998  00642C  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 27999  006430  50DF               	movf	indf2,w,c
 28000  006432  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 28001  006434  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 28002  006436  EC61  F035         	call	_UartWriteByte
 28003                           
 28004                           ;uart_drv.c: 551: StringToWrite++;
 28005  00643A  0100               	movlb	0	; () banked
 28006  00643C  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 28007  00643E  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 28008  006440                     
 28009                           ; BSR set to: 0
 28010                           
 28011                           ; BSR set to: 0
 28012  006440  0100               	movlb	0	; () banked
 28013  006442  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 28014  006444  EC1F  F030         	call	_UartTxBufferStatus
 28015  006448  06E8               	decf	wreg,f,c
 28016  00644A  B4D8               	btfsc	status,2,c
 28017  00644C  D7F9               	goto	l718
 28018  00644E  0100               	movlb	0	; () banked
 28019  006450  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 28020  006452                     l715:
 28021                           
 28022                           ; BSR set to: 0
 28023                           
 28024                           ; BSR set to: 0
 28025  006452  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 28026  006454  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 28027  006456  B0D8               	btfsc	status,0,c
 28028  006458  0012               	return	
 28029  00645A  D7E6               	goto	l716
 28030  00645C                     __end_of_Uart_WriteStringLen:
 28031                           	opt stack 0
 28032                           tosu	equ	0xFFF
 28033                           tosh	equ	0xFFE
 28034                           tosl	equ	0xFFD
 28035                           pclath	equ	0xFFA
 28036                           tblptru	equ	0xFF8
 28037                           tblptrh	equ	0xFF7
 28038                           tblptrl	equ	0xFF6
 28039                           tablat	equ	0xFF5
 28040                           prodh	equ	0xFF4
 28041                           prodl	equ	0xFF3
 28042                           intcon	equ	0xFF2
 28043                           intcon2	equ	0xFF1
 28044                           intcon3	equ	0xFF0
 28045                           indf0	equ	0xFEF
 28046                           postinc0	equ	0xFEE
 28047                           plusw0	equ	0xFEB
 28048                           fsr0h	equ	0xFEA
 28049                           fsr0l	equ	0xFE9
 28050                           wreg	equ	0xFE8
 28051                           indf1	equ	0xFE7
 28052                           postinc1	equ	0xFE6
 28053                           postdec1	equ	0xFE5
 28054                           fsr1h	equ	0xFE2
 28055                           fsr1l	equ	0xFE1
 28056                           indf2	equ	0xFDF
 28057                           postinc2	equ	0xFDE
 28058                           postdec2	equ	0xFDD
 28059                           plusw2	equ	0xFDB
 28060                           fsr2h	equ	0xFDA
 28061                           fsr2l	equ	0xFD9
 28062                           status	equ	0xFD8
 28063                           
 28064 ;; *************** function _ModemEvtParser *****************
 28065 ;; Defined at:
 28066 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28067 ;; Parameters:    Size  Location     Type
 28068 ;;		None
 28069 ;; Auto vars:     Size  Location     Type
 28070 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 28071 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 28072 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 28073 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 28074 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 28075 ;;  Match           1   71[BANK0 ] unsigned char 
 28076 ;; Return value:  Size  Location     Type
 28077 ;;                  1    wreg      void 
 28078 ;; Registers used:
 28079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28080 ;; Tracked objects:
 28081 ;;		On entry : 0/0
 28082 ;;		On exit  : 0/0
 28083 ;;		Unchanged: 0/0
 28084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28086 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28088 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28089 ;;Total ram usage:       26 bytes
 28090 ;; Hardware stack levels used:    1
 28091 ;; Hardware stack levels required when called:   12
 28092 ;; This function calls:
 28093 ;;		_GenerateEvt
 28094 ;;		_ReceiveEvt
 28095 ;;		_StringCompare
 28096 ;;		_StringCopy
 28097 ;;		_Uart_ClearRxBuffer
 28098 ;; This function is called by:
 28099 ;;		_Mdm_MainTask
 28100 ;; This function uses a non-reentrant model
 28101 ;;
 28102                           
 28103                           	psect	text134
 28104  001D36                     __ptext134:
 28105                           	opt stack 0
 28106  001D36                     _ModemEvtParser:
 28107                           	opt stack 15
 28108                           
 28109                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 28110                           
 28111                           ; BSR set to: 0
 28112                           ;incstack = 0
 28113  001D36  C3CD  F0A3         	movff	ModemEvtParser@F9111,ModemEvtParser@RingString
 28114  001D3A  C3CE  F0A4         	movff	ModemEvtParser@F9111+1,ModemEvtParser@RingString+1
 28115  001D3E  C3CF  F0A5         	movff	ModemEvtParser@F9111+2,ModemEvtParser@RingString+2
 28116  001D42  C3D0  F0A6         	movff	ModemEvtParser@F9111+3,ModemEvtParser@RingString+3
 28117                           
 28118                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 28119  001D46  EE23  F0C8         	lfsr	2,ModemEvtParser@F9113
 28120  001D4A  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 28121  001D4E  0E04               	movlw	4
 28122  001D50                     u15131:
 28123  001D50  CFDB FFE3          	movff	plusw2,plusw1
 28124  001D54  06E8               	decf	wreg,f,c
 28125  001D56  E2FC               	bc	u15131
 28126                           
 28127                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 28128  001D58  EE23  F0C3         	lfsr	2,ModemEvtParser@F9115
 28129  001D5C  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 28130  001D60  0E04               	movlw	4
 28131  001D62                     u15141:
 28132  001D62  CFDB FFE3          	movff	plusw2,plusw1
 28133  001D66  06E8               	decf	wreg,f,c
 28134  001D68  E2FC               	bc	u15141
 28135                           
 28136                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 28137  001D6A  EE24  F0F6         	lfsr	2,ModemEvtParser@F9117
 28138  001D6E  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 28139  001D72  0E09               	movlw	9
 28140  001D74                     u15151:
 28141  001D74  CFDB FFE3          	movff	plusw2,plusw1
 28142  001D78  06E8               	decf	wreg,f,c
 28143  001D7A  E2FC               	bc	u15151
 28144                           
 28145                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 28146  001D7C  0E00               	movlw	0
 28147  001D7E  0100               	movlb	0	; () banked
 28148  001D80  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 28149                           
 28150                           ; BSR set to: 0
 28151                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 28152  001D82  0E00               	movlw	0
 28153  001D84  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 28154                           
 28155                           ; BSR set to: 0
 28156                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 28157  001D86  0E3B               	movlw	low _NewMdmEvtParserRequest
 28158  001D88  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28159  001D8A  0E00               	movlw	high _NewMdmEvtParserRequest
 28160  001D8C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28161  001D8E  EC15  F034         	call	_ReceiveEvt	;wreg free
 28162  001D92  0900               	iorlw	0
 28163  001D94  B4D8               	btfsc	status,2,c
 28164  001D96  0012               	return	
 28165                           
 28166                           ;mdm_gsm_gprs.c: 510: {
 28167                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 28168  001D98  0E00               	movlw	0
 28169  001D9A  0100               	movlb	0	; () banked
 28170  001D9C  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 28171  001D9E                     l15777:
 28172                           
 28173                           ; BSR set to: 0
 28174  001D9E  0E03               	movlw	3
 28175  001DA0  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 28176  001DA2  D074               	goto	l1052
 28177  001DA4  D083               	goto	u15220
 28178  001DA6                     
 28179                           ; BSR set to: 0
 28180                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 28181                           
 28182                           ; BSR set to: 0
 28183  001DA6  0EA3               	movlw	low ModemEvtParser@RingString
 28184  001DA8  6F7D               	movwf	StringCompare@String1& (0+255),b
 28185  001DAA  0E00               	movlw	high ModemEvtParser@RingString
 28186  001DAC  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28187  001DAE  0E58               	movlw	low _RxBuffer
 28188  001DB0  6F7F               	movwf	StringCompare@String2& (0+255),b
 28189  001DB2  0E0C               	movlw	high _RxBuffer
 28190  001DB4  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28191  001DB6  0E00               	movlw	0
 28192  001DB8  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28193  001DBA  0E04               	movlw	4
 28194  001DBC  6F81               	movwf	StringCompare@Len& (0+255),b
 28195  001DBE  EC57  F02F         	call	_StringCompare	;wreg free
 28196  001DC2  0900               	iorlw	0
 28197  001DC4  B4D8               	btfsc	status,2,c
 28198  001DC6  D06F               	goto	l1055
 28199                           
 28200                           ;mdm_gsm_gprs.c: 518: {
 28201                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 28202  001DC8  0EDD               	movlw	low _RingEvent
 28203  001DCA  0100               	movlb	0	; () banked
 28204  001DCC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28205  001DCE  0E00               	movlw	high _RingEvent
 28206  001DD0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28207  001DD2  EC06  F036         	call	_GenerateEvt	;wreg free
 28208  001DD6  D040               	goto	l15799
 28209  001DD8                     
 28210                           ; BSR set to: 0
 28211                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 28212                           
 28213                           ; BSR set to: 0
 28214  001DD8  0E99               	movlw	low ModemEvtParser@ClipString
 28215  001DDA  6F7D               	movwf	StringCompare@String1& (0+255),b
 28216  001DDC  0E00               	movlw	high ModemEvtParser@ClipString
 28217  001DDE  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28218  001DE0  0E58               	movlw	low _RxBuffer
 28219  001DE2  6F7F               	movwf	StringCompare@String2& (0+255),b
 28220  001DE4  0E0C               	movlw	high _RxBuffer
 28221  001DE6  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28222  001DE8  0E00               	movlw	0
 28223  001DEA  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28224  001DEC  0E05               	movlw	5
 28225  001DEE  6F81               	movwf	StringCompare@Len& (0+255),b
 28226  001DF0  EC57  F02F         	call	_StringCompare	;wreg free
 28227  001DF4  0900               	iorlw	0
 28228  001DF6  B4D8               	btfsc	status,2,c
 28229  001DF8  D056               	goto	l1055
 28230                           
 28231                           ;mdm_gsm_gprs.c: 529: {
 28232                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 28233  001DFA  0E60               	movlw	low (_RxBuffer+8)
 28234  001DFC  0100               	movlb	0	; () banked
 28235  001DFE  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28236  001E00  0E0C               	movlw	high (_RxBuffer+8)
 28237  001E02  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28238  001E04  0ECA               	movlw	low _callerNumber
 28239  001E06  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28240  001E08  0E04               	movlw	high _callerNumber
 28241  001E0A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28242  001E0C  0E00               	movlw	0
 28243  001E0E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 28244  001E10  0E0D               	movlw	13
 28245  001E12  6F89               	movwf	StringCopy@Len& (0+255),b
 28246  001E14  ECC4  F02C         	call	_StringCopy	;wreg free
 28247                           
 28248                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 28249  001E18  0EDC               	movlw	low _ClipEvent
 28250  001E1A  0100               	movlb	0	; () banked
 28251  001E1C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28252  001E1E  0E00               	movlw	high _ClipEvent
 28253  001E20  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28254  001E22  EC06  F036         	call	_GenerateEvt	;wreg free
 28255  001E26  D018               	goto	l15799
 28256  001E28                     
 28257                           ; BSR set to: 0
 28258                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 28259                           
 28260                           ; BSR set to: 0
 28261  001E28  0E9E               	movlw	low ModemEvtParser@SmsString
 28262  001E2A  6F7D               	movwf	StringCompare@String1& (0+255),b
 28263  001E2C  0E00               	movlw	high ModemEvtParser@SmsString
 28264  001E2E  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28265  001E30  0E58               	movlw	low _RxBuffer
 28266  001E32  6F7F               	movwf	StringCompare@String2& (0+255),b
 28267  001E34  0E0C               	movlw	high _RxBuffer
 28268  001E36  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28269  001E38  0E00               	movlw	0
 28270  001E3A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28271  001E3C  0E05               	movlw	5
 28272  001E3E  6F81               	movwf	StringCompare@Len& (0+255),b
 28273  001E40  EC57  F02F         	call	_StringCompare	;wreg free
 28274  001E44  0900               	iorlw	0
 28275  001E46  B4D8               	btfsc	status,2,c
 28276  001E48  D02E               	goto	l1055
 28277                           
 28278                           ;mdm_gsm_gprs.c: 541: {
 28279                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 28280  001E4A  0EDB               	movlw	low _SmsEvent
 28281  001E4C  0100               	movlb	0	; () banked
 28282  001E4E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28283  001E50  0E00               	movlw	high _SmsEvent
 28284  001E52  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28285  001E54  EC06  F036         	call	_GenerateEvt	;wreg free
 28286  001E58                     l15799:
 28287                           
 28288                           ;mdm_gsm_gprs.c: 545: Match = 1;
 28289  001E58  0E01               	movlw	1
 28290  001E5A  0100               	movlb	0	; () banked
 28291  001E5C  D015               	goto	L60
 28292  001E5E                     
 28293                           ; BSR set to: 0
 28294                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 28295                           
 28296                           ; BSR set to: 0
 28297  001E5E  0E8F               	movlw	low ModemEvtParser@CallReadyString
 28298  001E60  6F7D               	movwf	StringCompare@String1& (0+255),b
 28299  001E62  0E00               	movlw	high ModemEvtParser@CallReadyString
 28300  001E64  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 28301  001E66  0E58               	movlw	low _RxBuffer
 28302  001E68  6F7F               	movwf	StringCompare@String2& (0+255),b
 28303  001E6A  0E0C               	movlw	high _RxBuffer
 28304  001E6C  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 28305  001E6E  0E00               	movlw	0
 28306  001E70  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 28307  001E72  0E0A               	movlw	10
 28308  001E74  6F81               	movwf	StringCompare@Len& (0+255),b
 28309  001E76  EC57  F02F         	call	_StringCompare	;wreg free
 28310  001E7A  0900               	iorlw	0
 28311  001E7C  B4D8               	btfsc	status,2,c
 28312  001E7E  D013               	goto	l1055
 28313                           
 28314                           ;mdm_gsm_gprs.c: 552: {
 28315                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 28316  001E80  0E02               	movlw	2
 28317  001E82  0100               	movlb	0	; () banked
 28318  001E84  6FD1               	movwf	_MdmStatus& (0+255),b
 28319                           
 28320                           ;mdm_gsm_gprs.c: 556: Match = 1;
 28321  001E86  0E01               	movlw	1
 28322  001E88                     L60:
 28323  001E88  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 28324                           
 28325                           ; BSR set to: 0
 28326                           ;mdm_gsm_gprs.c: 562: }
 28327                           
 28328                           ; BSR set to: 0
 28329                           ;mdm_gsm_gprs.c: 561: break;
 28330                           
 28331                           ;mdm_gsm_gprs.c: 560: default:
 28332                           
 28333                           ; BSR set to: 0
 28334                           ;mdm_gsm_gprs.c: 557: }
 28335                           ;mdm_gsm_gprs.c: 558: break;
 28336  001E8A  D00D               	goto	l1055
 28337  001E8C                     l1052:
 28338                           
 28339                           ; BSR set to: 0
 28340                           
 28341                           ; BSR set to: 0
 28342  001E8C  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 28343                           
 28344                           ; Switch size 1, requested type "space"
 28345                           ; Number of cases is 4, Range of values is 0 to 3
 28346                           ; switch strategies available:
 28347                           ; Name         Instructions Cycles
 28348                           ; simple_byte           13     7 (average)
 28349                           ;	Chosen strategy is simple_byte
 28350  001E8E  0A00               	xorlw	0	; case 0
 28351  001E90  B4D8               	btfsc	status,2,c
 28352  001E92  D789               	goto	l1053
 28353  001E94  0A01               	xorlw	1	; case 1
 28354  001E96  B4D8               	btfsc	status,2,c
 28355  001E98  D7C7               	goto	l1058
 28356  001E9A  0A03               	xorlw	3	; case 2
 28357  001E9C  B4D8               	btfsc	status,2,c
 28358  001E9E  D7DF               	goto	l1060
 28359  001EA0  0A01               	xorlw	1	; case 3
 28360  001EA2  B4D8               	btfsc	status,2,c
 28361  001EA4  D799               	goto	l1056
 28362  001EA6                     l1055:
 28363                           
 28364                           ; BSR set to: 0
 28365  001EA6  0100               	movlb	0	; () banked
 28366  001EA8  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 28367  001EAA  D779               	goto	l15777
 28368  001EAC                     u15220:
 28369                           
 28370                           ; BSR set to: 0
 28371                           ;mdm_gsm_gprs.c: 563: }
 28372                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 28373                           
 28374                           ; BSR set to: 0
 28375  001EAC  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 28376  001EAE  A4D8               	btfss	status,2,c
 28377  001EB0  0012               	return	
 28378                           
 28379                           ; BSR set to: 0
 28380                           ;mdm_gsm_gprs.c: 567: {
 28381                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 28382  001EB2  EC52  F033         	call	_Uart_ClearRxBuffer	;wreg free
 28383  001EB6  0012               	return	
 28384  001EB8                     __end_of_ModemEvtParser:
 28385                           	opt stack 0
 28386                           tosu	equ	0xFFF
 28387                           tosh	equ	0xFFE
 28388                           tosl	equ	0xFFD
 28389                           pclath	equ	0xFFA
 28390                           tblptru	equ	0xFF8
 28391                           tblptrh	equ	0xFF7
 28392                           tblptrl	equ	0xFF6
 28393                           tablat	equ	0xFF5
 28394                           prodh	equ	0xFF4
 28395                           prodl	equ	0xFF3
 28396                           intcon	equ	0xFF2
 28397                           intcon2	equ	0xFF1
 28398                           intcon3	equ	0xFF0
 28399                           indf0	equ	0xFEF
 28400                           postinc0	equ	0xFEE
 28401                           plusw0	equ	0xFEB
 28402                           fsr0h	equ	0xFEA
 28403                           fsr0l	equ	0xFE9
 28404                           wreg	equ	0xFE8
 28405                           indf1	equ	0xFE7
 28406                           postinc1	equ	0xFE6
 28407                           postdec1	equ	0xFE5
 28408                           plusw1	equ	0xFE3
 28409                           fsr1h	equ	0xFE2
 28410                           fsr1l	equ	0xFE1
 28411                           indf2	equ	0xFDF
 28412                           postinc2	equ	0xFDE
 28413                           postdec2	equ	0xFDD
 28414                           plusw2	equ	0xFDB
 28415                           fsr2h	equ	0xFDA
 28416                           fsr2l	equ	0xFD9
 28417                           status	equ	0xFD8
 28418                           
 28419 ;; *************** function _Uart_ClearRxBuffer *****************
 28420 ;; Defined at:
 28421 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28422 ;; Parameters:    Size  Location     Type
 28423 ;;		None
 28424 ;; Auto vars:     Size  Location     Type
 28425 ;;  Index           2   29[BANK0 ] unsigned short 
 28426 ;; Return value:  Size  Location     Type
 28427 ;;                  1    wreg      void 
 28428 ;; Registers used:
 28429 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28430 ;; Tracked objects:
 28431 ;;		On entry : 0/0
 28432 ;;		On exit  : 0/0
 28433 ;;		Unchanged: 0/0
 28434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28436 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28438 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28439 ;;Total ram usage:        2 bytes
 28440 ;; Hardware stack levels used:    1
 28441 ;; Hardware stack levels required when called:   11
 28442 ;; This function calls:
 28443 ;;		Nothing
 28444 ;; This function is called by:
 28445 ;;		_ModemEvtParser
 28446 ;; This function uses a non-reentrant model
 28447 ;;
 28448                           
 28449                           	psect	text135
 28450  0066A4                     __ptext135:
 28451                           	opt stack 0
 28452  0066A4                     _Uart_ClearRxBuffer:
 28453                           	opt stack 15
 28454                           
 28455                           ;uart_drv.c: 567: UINT16 Index = 0;
 28456                           
 28457                           ;incstack = 0
 28458  0066A4  0E00               	movlw	0
 28459  0066A6  0100               	movlb	0	; () banked
 28460  0066A8  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 28461  0066AA  0E00               	movlw	0
 28462  0066AC  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 28463                           
 28464                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 28465  0066AE  0E00               	movlw	0
 28466  0066B0  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 28467  0066B2  0E00               	movlw	0
 28468  0066B4  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 28469  0066B6                     l14851:
 28470                           
 28471                           ; BSR set to: 0
 28472  0066B6  0E90               	movlw	144
 28473  0066B8  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 28474  0066BA  0E01               	movlw	1
 28475  0066BC  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 28476  0066BE  B0D8               	btfsc	status,0,c
 28477  0066C0  0012               	return	
 28478                           
 28479                           ; BSR set to: 0
 28480                           ;uart_drv.c: 571: {
 28481                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 28482                           
 28483                           ; BSR set to: 0
 28484                           
 28485                           ; BSR set to: 0
 28486  0066C2  0E58               	movlw	low _RxBuffer
 28487  0066C4  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 28488  0066C6  6ED9               	movwf	fsr2l,c
 28489  0066C8  0E0C               	movlw	high _RxBuffer
 28490  0066CA  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 28491  0066CC  6EDA               	movwf	fsr2h,c
 28492  0066CE  0E00               	movlw	0
 28493  0066D0  6EDF               	movwf	indf2,c
 28494                           
 28495                           ; BSR set to: 0
 28496  0066D2  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 28497  0066D4  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 28498  0066D6  D7EF               	goto	l14851
 28499  0066D8                     __end_of_Uart_ClearRxBuffer:
 28500                           	opt stack 0
 28501                           tosu	equ	0xFFF
 28502                           tosh	equ	0xFFE
 28503                           tosl	equ	0xFFD
 28504                           pclath	equ	0xFFA
 28505                           tblptru	equ	0xFF8
 28506                           tblptrh	equ	0xFF7
 28507                           tblptrl	equ	0xFF6
 28508                           tablat	equ	0xFF5
 28509                           prodh	equ	0xFF4
 28510                           prodl	equ	0xFF3
 28511                           intcon	equ	0xFF2
 28512                           intcon2	equ	0xFF1
 28513                           intcon3	equ	0xFF0
 28514                           indf0	equ	0xFEF
 28515                           postinc0	equ	0xFEE
 28516                           plusw0	equ	0xFEB
 28517                           fsr0h	equ	0xFEA
 28518                           fsr0l	equ	0xFE9
 28519                           wreg	equ	0xFE8
 28520                           indf1	equ	0xFE7
 28521                           postinc1	equ	0xFE6
 28522                           postdec1	equ	0xFE5
 28523                           plusw1	equ	0xFE3
 28524                           fsr1h	equ	0xFE2
 28525                           fsr1l	equ	0xFE1
 28526                           indf2	equ	0xFDF
 28527                           postinc2	equ	0xFDE
 28528                           postdec2	equ	0xFDD
 28529                           plusw2	equ	0xFDB
 28530                           fsr2h	equ	0xFDA
 28531                           fsr2l	equ	0xFD9
 28532                           status	equ	0xFD8
 28533                           
 28534 ;; *************** function _StringCompare *****************
 28535 ;; Defined at:
 28536 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28537 ;; Parameters:    Size  Location     Type
 28538 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 28539 ;;		 -> receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 28540 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 28541 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 28542 ;;		 -> readBuffer(13), parseCommand@resetCmd(4), parseCommand@deleteNumberCmd(4), parseCommand@addNumberCmd(4), 
 28543 ;;		 -> RxBuffer(400), 
 28544 ;;  Len             2   33[BANK0 ] unsigned short 
 28545 ;; Auto vars:     Size  Location     Type
 28546 ;;  Index           2   38[BANK0 ] unsigned short 
 28547 ;;  Result          1   37[BANK0 ] unsigned char 
 28548 ;; Return value:  Size  Location     Type
 28549 ;;                  1    wreg      unsigned char 
 28550 ;; Registers used:
 28551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 28552 ;; Tracked objects:
 28553 ;;		On entry : 0/0
 28554 ;;		On exit  : 0/0
 28555 ;;		Unchanged: 0/0
 28556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28557 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28558 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28559 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28560 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28561 ;;Total ram usage:       11 bytes
 28562 ;; Hardware stack levels used:    1
 28563 ;; Hardware stack levels required when called:   11
 28564 ;; This function calls:
 28565 ;;		Nothing
 28566 ;; This function is called by:
 28567 ;;		_ModemEvtParser
 28568 ;;		_parseCommand
 28569 ;;		_isNumberInMemory
 28570 ;;		_isMasterNumber
 28571 ;; This function uses a non-reentrant model
 28572 ;;
 28573                           
 28574                           	psect	text136
 28575  005EAE                     __ptext136:
 28576                           	opt stack 0
 28577  005EAE                     _StringCompare:
 28578                           	opt stack 14
 28579                           
 28580                           ;sf.c: 77: UINT16 Index = 0;
 28581                           
 28582                           ; BSR set to: 0
 28583                           ;incstack = 0
 28584  005EAE  0E00               	movlw	0
 28585  005EB0  0100               	movlb	0	; () banked
 28586  005EB2  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 28587  005EB4  0E00               	movlw	0
 28588  005EB6  6F86               	movwf	StringCompare@Index& (0+255),b
 28589                           
 28590                           ;sf.c: 78: UINT8 Result = 1;
 28591  005EB8  0E01               	movlw	1
 28592  005EBA  6F85               	movwf	StringCompare@Result& (0+255),b
 28593                           
 28594                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 28595  005EBC  0E00               	movlw	0
 28596  005EBE  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 28597  005EC0  0E00               	movlw	0
 28598  005EC2  6F86               	movwf	StringCompare@Index& (0+255),b
 28599  005EC4  D015               	goto	l2249
 28600  005EC6                     
 28601                           ; BSR set to: 0
 28602                           ;sf.c: 82: {
 28603                           ;sf.c: 83: if (String1[Index] != String2[Index])
 28604                           
 28605                           ; BSR set to: 0
 28606  005EC6  5186               	movf	StringCompare@Index& (0+255),w,b
 28607  005EC8  257F               	addwf	StringCompare@String2& (0+255),w,b
 28608  005ECA  6ED9               	movwf	fsr2l,c
 28609  005ECC  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 28610  005ECE  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 28611  005ED0  6EDA               	movwf	fsr2h,c
 28612  005ED2  5186               	movf	StringCompare@Index& (0+255),w,b
 28613  005ED4  257D               	addwf	StringCompare@String1& (0+255),w,b
 28614  005ED6  6EE1               	movwf	fsr1l,c
 28615  005ED8  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 28616  005EDA  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 28617  005EDC  6EE2               	movwf	fsr1h,c
 28618  005EDE  50DE               	movf	postinc2,w,c
 28619  005EE0  18E6               	xorwf	postinc1,w,c
 28620  005EE2  B4D8               	btfsc	status,2,c
 28621  005EE4  D003               	goto	l2251
 28622                           
 28623                           ; BSR set to: 0
 28624                           ;sf.c: 84: {
 28625                           ;sf.c: 85: Result = 0;
 28626  005EE6  0E00               	movlw	0
 28627  005EE8  6F85               	movwf	StringCompare@Result& (0+255),b
 28628                           
 28629                           ;sf.c: 86: break;
 28630  005EEA  D008               	goto	u12960
 28631  005EEC                     l2251:
 28632                           
 28633                           ; BSR set to: 0
 28634                           
 28635                           ; BSR set to: 0
 28636  005EEC  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 28637  005EEE  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 28638  005EF0                     l2249:
 28639                           
 28640                           ; BSR set to: 0
 28641                           
 28642                           ; BSR set to: 0
 28643  005EF0  5181               	movf	StringCompare@Len& (0+255),w,b
 28644  005EF2  5D86               	subwf	StringCompare@Index& (0+255),w,b
 28645  005EF4  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 28646  005EF6  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 28647  005EF8  A0D8               	btfss	status,0,c
 28648  005EFA  D7E5               	goto	l2250
 28649  005EFC                     u12960:
 28650                           
 28651                           ; BSR set to: 0
 28652                           ;sf.c: 87: }
 28653                           ;sf.c: 88: }
 28654                           ;sf.c: 91: return Result;
 28655                           
 28656                           ; BSR set to: 0
 28657  005EFC  5185               	movf	StringCompare@Result& (0+255),w,b
 28658  005EFE  0012               	return	
 28659  005F00                     __end_of_StringCompare:
 28660                           	opt stack 0
 28661                           tosu	equ	0xFFF
 28662                           tosh	equ	0xFFE
 28663                           tosl	equ	0xFFD
 28664                           pclath	equ	0xFFA
 28665                           tblptru	equ	0xFF8
 28666                           tblptrh	equ	0xFF7
 28667                           tblptrl	equ	0xFF6
 28668                           tablat	equ	0xFF5
 28669                           prodh	equ	0xFF4
 28670                           prodl	equ	0xFF3
 28671                           intcon	equ	0xFF2
 28672                           intcon2	equ	0xFF1
 28673                           intcon3	equ	0xFF0
 28674                           indf0	equ	0xFEF
 28675                           postinc0	equ	0xFEE
 28676                           plusw0	equ	0xFEB
 28677                           fsr0h	equ	0xFEA
 28678                           fsr0l	equ	0xFE9
 28679                           wreg	equ	0xFE8
 28680                           indf1	equ	0xFE7
 28681                           postinc1	equ	0xFE6
 28682                           postdec1	equ	0xFE5
 28683                           plusw1	equ	0xFE3
 28684                           fsr1h	equ	0xFE2
 28685                           fsr1l	equ	0xFE1
 28686                           indf2	equ	0xFDF
 28687                           postinc2	equ	0xFDE
 28688                           postdec2	equ	0xFDD
 28689                           plusw2	equ	0xFDB
 28690                           fsr2h	equ	0xFDA
 28691                           fsr2l	equ	0xFD9
 28692                           status	equ	0xFD8
 28693                           
 28694 ;; *************** function _GetSmsSm *****************
 28695 ;; Defined at:
 28696 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28697 ;; Parameters:    Size  Location     Type
 28698 ;;		None
 28699 ;; Auto vars:     Size  Location     Type
 28700 ;;		None
 28701 ;; Return value:  Size  Location     Type
 28702 ;;                  1    wreg      void 
 28703 ;; Registers used:
 28704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28705 ;; Tracked objects:
 28706 ;;		On entry : 0/0
 28707 ;;		On exit  : 0/0
 28708 ;;		Unchanged: 0/0
 28709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28714 ;;Total ram usage:        0 bytes
 28715 ;; Hardware stack levels used:    1
 28716 ;; Hardware stack levels required when called:   13
 28717 ;; This function calls:
 28718 ;;		_ClearBuffer
 28719 ;;		_GenerateEvt
 28720 ;;		_ReceiveEvt
 28721 ;;		_StringCopy
 28722 ;;		_Uart_WriteConstString
 28723 ;; This function is called by:
 28724 ;;		_Mdm_MainTask
 28725 ;; This function uses a non-reentrant model
 28726 ;;
 28727                           
 28728                           	psect	text137
 28729  002BFA                     __ptext137:
 28730                           	opt stack 0
 28731  002BFA                     _GetSmsSm:
 28732                           	opt stack 14
 28733                           
 28734                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 28735                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 28736                           
 28737                           ; BSR set to: 0
 28738                           ;incstack = 0
 28739  002BFA  0E03               	movlw	3
 28740  002BFC  0100               	movlb	0	; () banked
 28741  002BFE  19D1               	xorwf	_MdmStatus& (0+255),w,b
 28742  002C00  A4D8               	btfss	status,2,c
 28743  002C02  0012               	return	
 28744  002C04  D084               	goto	l1070
 28745  002C06                     
 28746                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 28747                           
 28748                           ; BSR set to: 0
 28749  002C06  0EDA               	movlw	low _GetSmsText
 28750  002C08  0100               	movlb	0	; () banked
 28751  002C0A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28752  002C0C  0E00               	movlw	high _GetSmsText
 28753  002C0E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28754  002C10  EC15  F034         	call	_ReceiveEvt	;wreg free
 28755  002C14  0900               	iorlw	0
 28756  002C16  B4D8               	btfsc	status,2,c
 28757  002C18  0012               	return	
 28758                           
 28759                           ;mdm_gsm_gprs.c: 596: {
 28760                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 28761  002C1A  0E01               	movlw	1
 28762  002C1C  0101               	movlb	1	; () banked
 28763  002C1E  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28764                           
 28765                           ; BSR set to: 1
 28766                           ;mdm_gsm_gprs.c: 599: }
 28767                           ;mdm_gsm_gprs.c: 600: break;
 28768  002C20  0012               	return	
 28769  002C22                     
 28770                           ; BSR set to: 1
 28771                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 28772                           
 28773                           ; BSR set to: 1
 28774  002C22  0EC2               	movlw	low STR_4
 28775  002C24  0100               	movlb	0	; () banked
 28776  002C26  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28777  002C28  0EFF               	movlw	high STR_4
 28778  002C2A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28779  002C2C  0E01               	movlw	1
 28780  002C2E  ECAC  F031         	call	_Uart_WriteConstString
 28781                           
 28782                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 28783  002C32  0E02               	movlw	2
 28784  002C34  0101               	movlb	1	; () banked
 28785  002C36  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28786                           
 28787                           ;mdm_gsm_gprs.c: 607: break;
 28788  002C38  0012               	return	
 28789  002C3A                     
 28790                           ; BSR set to: 1
 28791                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 28792                           
 28793                           ; BSR set to: 1
 28794  002C3A  0E3C               	movlw	low _NewStringReceived
 28795  002C3C  0100               	movlb	0	; () banked
 28796  002C3E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28797  002C40  0E00               	movlw	high _NewStringReceived
 28798  002C42  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28799  002C44  EC15  F034         	call	_ReceiveEvt	;wreg free
 28800  002C48  0900               	iorlw	0
 28801  002C4A  B4D8               	btfsc	status,2,c
 28802  002C4C  0012               	return	
 28803                           
 28804                           ;mdm_gsm_gprs.c: 612: {
 28805                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 28806  002C4E  CC58  FFE8         	movff	_RxBuffer,wreg
 28807  002C52  0A2B               	xorlw	43
 28808  002C54  A4D8               	btfss	status,2,c
 28809  002C56  0012               	return	
 28810  002C58  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28811  002C5C  0A43               	xorlw	67
 28812  002C5E  A4D8               	btfss	status,2,c
 28813  002C60  0012               	return	
 28814  002C62  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 28815  002C66  0A4D               	xorlw	77
 28816  002C68  A4D8               	btfss	status,2,c
 28817  002C6A  0012               	return	
 28818                           
 28819                           ;mdm_gsm_gprs.c: 614: {
 28820                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 28821  002C6C  0E00               	movlw	low _Mdm_SmsRx
 28822  002C6E  0100               	movlb	0	; () banked
 28823  002C70  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28824  002C72  0E07               	movlw	high _Mdm_SmsRx
 28825  002C74  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28826  002C76  0E00               	movlw	0
 28827  002C78  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28828  002C7A  0E50               	movlw	80
 28829  002C7C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28830  002C7E  EC37  F033         	call	_ClearBuffer	;wreg free
 28831                           
 28832                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 28833  002C82  0E58               	movlw	low _RxBuffer
 28834  002C84  0100               	movlb	0	; () banked
 28835  002C86  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28836  002C88  0E0C               	movlw	high _RxBuffer
 28837  002C8A  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28838  002C8C  0E00               	movlw	low _Mdm_SmsRx
 28839  002C8E  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28840  002C90  0E07               	movlw	high _Mdm_SmsRx
 28841  002C92  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28842  002C94  C0C2  F089         	movff	_RxLen,StringCopy@Len
 28843  002C98  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 28844  002C9C  ECC4  F02C         	call	_StringCopy	;wreg free
 28845                           
 28846                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 28847  002CA0  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 28848                           
 28849                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 28850  002CA4  0E03               	movlw	3
 28851  002CA6  0101               	movlb	1	; () banked
 28852  002CA8  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28853                           
 28854                           ; BSR set to: 1
 28855                           ;mdm_gsm_gprs.c: 622: }
 28856                           ;mdm_gsm_gprs.c: 623: }
 28857                           ;mdm_gsm_gprs.c: 624: break;
 28858                           
 28859                           ; BSR set to: 1
 28860  002CAA  0012               	return	
 28861  002CAC                     
 28862                           ; BSR set to: 1
 28863                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 28864                           
 28865                           ; BSR set to: 1
 28866  002CAC  0E3C               	movlw	low _NewStringReceived
 28867  002CAE  0100               	movlb	0	; () banked
 28868  002CB0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28869  002CB2  0E00               	movlw	high _NewStringReceived
 28870  002CB4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28871  002CB6  EC15  F034         	call	_ReceiveEvt	;wreg free
 28872  002CBA  0900               	iorlw	0
 28873  002CBC  B4D8               	btfsc	status,2,c
 28874  002CBE  0012               	return	
 28875                           
 28876                           ;mdm_gsm_gprs.c: 629: {
 28877                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 28878  002CC0  0E50               	movlw	low (_Mdm_SmsRx+80)
 28879  002CC2  0100               	movlb	0	; () banked
 28880  002CC4  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28881  002CC6  0E07               	movlw	high (_Mdm_SmsRx+80)
 28882  002CC8  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28883  002CCA  0E00               	movlw	0
 28884  002CCC  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28885  002CCE  0E14               	movlw	20
 28886  002CD0  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28887  002CD2  EC37  F033         	call	_ClearBuffer	;wreg free
 28888                           
 28889                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 28890  002CD6  0E58               	movlw	low _RxBuffer
 28891  002CD8  0100               	movlb	0	; () banked
 28892  002CDA  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 28893  002CDC  0E0C               	movlw	high _RxBuffer
 28894  002CDE  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28895  002CE0  0E50               	movlw	low (_Mdm_SmsRx+80)
 28896  002CE2  6F87               	movwf	StringCopy@DestStr& (0+255),b
 28897  002CE4  0E07               	movlw	high (_Mdm_SmsRx+80)
 28898  002CE6  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28899  002CE8  C0C2  F089         	movff	_RxLen,StringCopy@Len
 28900  002CEC  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 28901  002CF0  ECC4  F02C         	call	_StringCopy	;wreg free
 28902                           
 28903                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 28904  002CF4  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 28905                           
 28906                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 28907  002CF8  0E00               	movlw	0
 28908  002CFA  0101               	movlb	1	; () banked
 28909  002CFC  6FEE               	movwf	GetSmsSm@GetSmsState& (0+255),b
 28910                           
 28911                           ; BSR set to: 1
 28912                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 28913  002CFE  0ED9               	movlw	low _SmsTxtReady
 28914  002D00  0100               	movlb	0	; () banked
 28915  002D02  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28916  002D04  0E00               	movlw	high _SmsTxtReady
 28917  002D06  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28918  002D08  EC06  F036         	call	_GenerateEvt	;wreg free
 28919                           
 28920                           ;mdm_gsm_gprs.c: 644: }
 28921                           
 28922                           ;mdm_gsm_gprs.c: 643: break;
 28923                           
 28924                           ;mdm_gsm_gprs.c: 642: default:
 28925                           
 28926                           ;mdm_gsm_gprs.c: 639: }
 28927                           ;mdm_gsm_gprs.c: 640: break;
 28928  002D0C  0012               	return	
 28929  002D0E                     l1070:
 28930  002D0E  0101               	movlb	1	; () banked
 28931  002D10  51EE               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 28932                           
 28933                           ; Switch size 1, requested type "space"
 28934                           ; Number of cases is 4, Range of values is 0 to 3
 28935                           ; switch strategies available:
 28936                           ; Name         Instructions Cycles
 28937                           ; simple_byte           13     7 (average)
 28938                           ;	Chosen strategy is simple_byte
 28939  002D12  0A00               	xorlw	0	; case 0
 28940  002D14  B4D8               	btfsc	status,2,c
 28941  002D16  D777               	goto	l1071
 28942  002D18  0A01               	xorlw	1	; case 1
 28943  002D1A  B4D8               	btfsc	status,2,c
 28944  002D1C  D782               	goto	l1074
 28945  002D1E  0A03               	xorlw	3	; case 2
 28946  002D20  B4D8               	btfsc	status,2,c
 28947  002D22  D78B               	goto	l1075
 28948  002D24  0A01               	xorlw	1	; case 3
 28949  002D26  A4D8               	btfss	status,2,c
 28950                           
 28951                           ; BSR set to: 1
 28952  002D28  0012               	return	
 28953  002D2A  D7C0               	goto	l1078
 28954  002D2C                     __end_of_GetSmsSm:
 28955                           	opt stack 0
 28956                           tosu	equ	0xFFF
 28957                           tosh	equ	0xFFE
 28958                           tosl	equ	0xFFD
 28959                           pclath	equ	0xFFA
 28960                           tblptru	equ	0xFF8
 28961                           tblptrh	equ	0xFF7
 28962                           tblptrl	equ	0xFF6
 28963                           tablat	equ	0xFF5
 28964                           prodh	equ	0xFF4
 28965                           prodl	equ	0xFF3
 28966                           intcon	equ	0xFF2
 28967                           intcon2	equ	0xFF1
 28968                           intcon3	equ	0xFF0
 28969                           indf0	equ	0xFEF
 28970                           postinc0	equ	0xFEE
 28971                           plusw0	equ	0xFEB
 28972                           fsr0h	equ	0xFEA
 28973                           fsr0l	equ	0xFE9
 28974                           wreg	equ	0xFE8
 28975                           indf1	equ	0xFE7
 28976                           postinc1	equ	0xFE6
 28977                           postdec1	equ	0xFE5
 28978                           plusw1	equ	0xFE3
 28979                           fsr1h	equ	0xFE2
 28980                           fsr1l	equ	0xFE1
 28981                           indf2	equ	0xFDF
 28982                           postinc2	equ	0xFDE
 28983                           postdec2	equ	0xFDD
 28984                           plusw2	equ	0xFDB
 28985                           fsr2h	equ	0xFDA
 28986                           fsr2l	equ	0xFD9
 28987                           status	equ	0xFD8
 28988                           
 28989 ;; *************** function _ConfigureModem *****************
 28990 ;; Defined at:
 28991 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28992 ;; Parameters:    Size  Location     Type
 28993 ;;		None
 28994 ;; Auto vars:     Size  Location     Type
 28995 ;;		None
 28996 ;; Return value:  Size  Location     Type
 28997 ;;                  1    wreg      void 
 28998 ;; Registers used:
 28999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29000 ;; Tracked objects:
 29001 ;;		On entry : 0/0
 29002 ;;		On exit  : 0/0
 29003 ;;		Unchanged: 0/0
 29004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29009 ;;Total ram usage:        0 bytes
 29010 ;; Hardware stack levels used:    1
 29011 ;; Hardware stack levels required when called:   14
 29012 ;; This function calls:
 29013 ;;		_GenerateEvt
 29014 ;;		_UartSetConfigLow
 29015 ;;		_Uart_InitUartModule
 29016 ;;		_Uart_WriteConstString
 29017 ;; This function is called by:
 29018 ;;		_Mdm_MainTask
 29019 ;; This function uses a non-reentrant model
 29020 ;;
 29021                           
 29022                           	psect	text138
 29023  003B86                     __ptext138:
 29024                           	opt stack 0
 29025  003B86                     _ConfigureModem:
 29026                           	opt stack 13
 29027                           
 29028                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 29029                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 29030                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 29031                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 29032                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 29033                           
 29034                           ;incstack = 0
 29035  003B86  D056               	goto	l1027
 29036  003B88                     
 29037                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 29038  003B88  0E02               	movlw	2
 29039  003B8A  0100               	movlb	0	; () banked
 29040  003B8C  19D1               	xorwf	_MdmStatus& (0+255),w,b
 29041  003B8E  A4D8               	btfss	status,2,c
 29042  003B90  0012               	return	
 29043                           
 29044                           ; BSR set to: 0
 29045                           ;mdm_gsm_gprs.c: 431: {
 29046                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 29047  003B92  0E01               	movlw	1
 29048  003B94  0101               	movlb	1	; () banked
 29049  003B96  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29050                           
 29051                           ; BSR set to: 1
 29052                           ;mdm_gsm_gprs.c: 434: }
 29053                           ;mdm_gsm_gprs.c: 435: break;
 29054  003B98  0012               	return	
 29055  003B9A                     
 29056                           ; BSR set to: 1
 29057                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 29058                           
 29059                           ; BSR set to: 1
 29060  003B9A  0E75               	movlw	low STR_2
 29061  003B9C  0100               	movlb	0	; () banked
 29062  003B9E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29063  003BA0  0EFF               	movlw	high STR_2
 29064  003BA2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29065  003BA4  0E01               	movlw	1
 29066  003BA6  ECAC  F031         	call	_Uart_WriteConstString
 29067                           
 29068                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 29069  003BAA  ECD9  F02D         	call	_UartSetConfigLow	;wreg free
 29070                           
 29071                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 29072  003BAE  0E24               	movlw	low _UartConfig
 29073  003BB0  0100               	movlb	0	; () banked
 29074  003BB2  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 29075  003BB4  0E03               	movlw	high _UartConfig
 29076  003BB6  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 29077  003BB8  0E01               	movlw	1
 29078  003BBA  EC61  F005         	call	_Uart_InitUartModule
 29079                           
 29080                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 29081  003BBE  0E03               	movlw	3
 29082  003BC0  0103               	movlb	3	; () banked
 29083  003BC2  6F21               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 29084  003BC4  0EE8               	movlw	232
 29085  003BC6  6F20               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 29086                           
 29087                           ; BSR set to: 3
 29088                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 29089  003BC8  0E02               	movlw	2
 29090  003BCA  0101               	movlb	1	; () banked
 29091  003BCC  6FEF               	movwf	ConfigureModem@NextState& (0+255),b
 29092                           
 29093                           ; BSR set to: 1
 29094                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 29095  003BCE  0E04               	movlw	4
 29096  003BD0  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29097                           
 29098                           ;mdm_gsm_gprs.c: 449: break;
 29099  003BD2  0012               	return	
 29100  003BD4                     
 29101                           ; BSR set to: 1
 29102                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 29103                           
 29104                           ; BSR set to: 1
 29105  003BD4  0EDF               	movlw	low STR_3
 29106  003BD6  0100               	movlb	0	; () banked
 29107  003BD8  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29108  003BDA  0EFF               	movlw	high STR_3
 29109  003BDC  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29110  003BDE  0E01               	movlw	1
 29111  003BE0  ECAC  F031         	call	_Uart_WriteConstString
 29112                           
 29113                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 29114  003BE4  0E03               	movlw	3
 29115  003BE6  0103               	movlb	3	; () banked
 29116  003BE8  6F21               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 29117  003BEA  0EE8               	movlw	232
 29118  003BEC  6F20               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 29119                           
 29120                           ; BSR set to: 3
 29121                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 29122  003BEE  0E05               	movlw	5
 29123  003BF0  0101               	movlb	1	; () banked
 29124  003BF2  6FEF               	movwf	ConfigureModem@NextState& (0+255),b
 29125                           
 29126                           ; BSR set to: 1
 29127                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 29128  003BF4  0E04               	movlw	4
 29129  003BF6  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29130                           
 29131                           ;mdm_gsm_gprs.c: 459: break;
 29132  003BF8  0012               	return	
 29133  003BFA                     
 29134                           ; BSR set to: 1
 29135                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 29136                           
 29137                           ; BSR set to: 1
 29138  003BFA  0103               	movlb	3	; () banked
 29139  003BFC  4B1E               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 29140  003BFE  2B1F               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 29141                           
 29142                           ; BSR set to: 3
 29143                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 29144  003C00  5120               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 29145  003C02  5D1E               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 29146  003C04  5121               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 29147  003C06  591F               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 29148  003C08  A0D8               	btfss	status,0,c
 29149  003C0A  0012               	return	
 29150                           
 29151                           ; BSR set to: 3
 29152                           ;mdm_gsm_gprs.c: 466: {
 29153                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 29154  003C0C  0E00               	movlw	0
 29155  003C0E  6F1F               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 29156  003C10  0E00               	movlw	0
 29157  003C12  6F1E               	movwf	ConfigureModem@DelayCounter& (0+255),b
 29158                           
 29159                           ; BSR set to: 3
 29160                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 29161  003C14  C1EF  F1F0         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 29162                           
 29163                           ; BSR set to: 3
 29164                           ;mdm_gsm_gprs.c: 471: }
 29165                           ;mdm_gsm_gprs.c: 472: break;
 29166  003C18  0012               	return	
 29167  003C1A                     
 29168                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 29169                           
 29170                           ; BSR set to: 3
 29171  003C1A  0E03               	movlw	3
 29172  003C1C  0100               	movlb	0	; () banked
 29173  003C1E  6FD1               	movwf	_MdmStatus& (0+255),b
 29174                           
 29175                           ; BSR set to: 0
 29176                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 29177  003C20  0EFD               	movlw	low _MdmStsReady
 29178  003C22  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 29179  003C24  0E01               	movlw	high _MdmStsReady
 29180  003C26  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 29181  003C28  EC06  F036         	call	_GenerateEvt	;wreg free
 29182                           
 29183                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 29184  003C2C  0E06               	movlw	6
 29185  003C2E  0101               	movlb	1	; () banked
 29186  003C30  6FF0               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 29187                           
 29188                           ; BSR set to: 1
 29189                           ;mdm_gsm_gprs.c: 488: }
 29190                           
 29191                           ; BSR set to: 1
 29192                           ;mdm_gsm_gprs.c: 487: break;
 29193                           
 29194                           ;mdm_gsm_gprs.c: 486: default:
 29195                           
 29196                           ; BSR set to: 1
 29197                           ;mdm_gsm_gprs.c: 484: break;
 29198                           
 29199                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 29200                           
 29201                           ;mdm_gsm_gprs.c: 481: break;
 29202  003C32  0012               	return	
 29203  003C34                     l1027:
 29204                           
 29205                           ; BSR set to: 1
 29206  003C34  0101               	movlb	1	; () banked
 29207  003C36  51F0               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 29208                           
 29209                           ; Switch size 1, requested type "space"
 29210                           ; Number of cases is 6, Range of values is 0 to 6
 29211                           ; switch strategies available:
 29212                           ; Name         Instructions Cycles
 29213                           ; simple_byte           19    10 (average)
 29214                           ;	Chosen strategy is simple_byte
 29215  003C38  0A00               	xorlw	0	; case 0
 29216  003C3A  B4D8               	btfsc	status,2,c
 29217  003C3C  D7A5               	goto	l1028
 29218  003C3E  0A01               	xorlw	1	; case 1
 29219  003C40  B4D8               	btfsc	status,2,c
 29220  003C42  D7AB               	goto	l1031
 29221  003C44  0A03               	xorlw	3	; case 2
 29222  003C46  B4D8               	btfsc	status,2,c
 29223  003C48  D7C5               	goto	l1032
 29224  003C4A  0A06               	xorlw	6	; case 4
 29225  003C4C  B4D8               	btfsc	status,2,c
 29226  003C4E  D7D5               	goto	l1033
 29227  003C50  0A01               	xorlw	1	; case 5
 29228  003C52  B4D8               	btfsc	status,2,c
 29229  003C54  D7E2               	goto	l1035
 29230  003C56  0A03               	xorlw	3	; case 6
 29231  003C58  0012               	return	
 29232  003C5A                     __end_of_ConfigureModem:
 29233                           	opt stack 0
 29234                           tosu	equ	0xFFF
 29235                           tosh	equ	0xFFE
 29236                           tosl	equ	0xFFD
 29237                           pclath	equ	0xFFA
 29238                           tblptru	equ	0xFF8
 29239                           tblptrh	equ	0xFF7
 29240                           tblptrl	equ	0xFF6
 29241                           tablat	equ	0xFF5
 29242                           prodh	equ	0xFF4
 29243                           prodl	equ	0xFF3
 29244                           intcon	equ	0xFF2
 29245                           intcon2	equ	0xFF1
 29246                           intcon3	equ	0xFF0
 29247                           indf0	equ	0xFEF
 29248                           postinc0	equ	0xFEE
 29249                           plusw0	equ	0xFEB
 29250                           fsr0h	equ	0xFEA
 29251                           fsr0l	equ	0xFE9
 29252                           wreg	equ	0xFE8
 29253                           indf1	equ	0xFE7
 29254                           postinc1	equ	0xFE6
 29255                           postdec1	equ	0xFE5
 29256                           plusw1	equ	0xFE3
 29257                           fsr1h	equ	0xFE2
 29258                           fsr1l	equ	0xFE1
 29259                           indf2	equ	0xFDF
 29260                           postinc2	equ	0xFDE
 29261                           postdec2	equ	0xFDD
 29262                           plusw2	equ	0xFDB
 29263                           fsr2h	equ	0xFDA
 29264                           fsr2l	equ	0xFD9
 29265                           status	equ	0xFD8
 29266                           
 29267 ;; *************** function _Uart_InitUartModule *****************
 29268 ;; Defined at:
 29269 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29270 ;; Parameters:    Size  Location     Type
 29271 ;;  Module          1    wreg     unsigned char 
 29272 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 29273 ;;		 -> UartConfig(21), 
 29274 ;; Auto vars:     Size  Location     Type
 29275 ;;  Module          1   65[BANK0 ] unsigned char 
 29276 ;; Return value:  Size  Location     Type
 29277 ;;                  1    wreg      void 
 29278 ;; Registers used:
 29279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29280 ;; Tracked objects:
 29281 ;;		On entry : 0/0
 29282 ;;		On exit  : 0/0
 29283 ;;		Unchanged: 0/0
 29284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29287 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29288 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29289 ;;Total ram usage:        5 bytes
 29290 ;; Hardware stack levels used:    1
 29291 ;; Hardware stack levels required when called:   13
 29292 ;; This function calls:
 29293 ;;		_SetUartBaudRate
 29294 ;; This function is called by:
 29295 ;;		_ConfigureModem
 29296 ;;		_Mdm_MainTask
 29297 ;; This function uses a non-reentrant model
 29298 ;;
 29299                           
 29300                           	psect	text139
 29301  000AC2                     __ptext139:
 29302                           	opt stack 0
 29303  000AC2                     _Uart_InitUartModule:
 29304                           	opt stack 14
 29305                           
 29306                           ;incstack = 0
 29307                           ;Uart_InitUartModule@Module stored from wreg
 29308  000AC2  0100               	movlb	0	; () banked
 29309  000AC4  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 29310                           
 29311                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 29312  000AC6  0100               	movlb	0	; () banked
 29313  000AC8  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 29314  000ACA  A4D8               	btfss	status,2,c
 29315  000ACC  D0BE               	goto	l668
 29316                           
 29317                           ; BSR set to: 0
 29318                           ;uart_drv.c: 291: {
 29319                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 29320  000ACE  9C94               	bcf	3988,6,c	;volatile
 29321                           
 29322                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 29323  000AD0  8E94               	bsf	3988,7,c	;volatile
 29324                           
 29325                           ; BSR set to: 0
 29326                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 29327  000AD2  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 29328  000AD6  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 29329  000ADA  0E01               	movlw	1
 29330  000ADC  EC61  F015         	call	_SetUartBaudRate
 29331                           
 29332                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 29333  000AE0  0E00               	movlw	0
 29334  000AE2  6EAD               	movwf	4013,c	;volatile
 29335                           
 29336                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 29337  000AE4  0100               	movlb	0	; () banked
 29338  000AE6  EE20 F004          	lfsr	2,4
 29339  000AEA  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29340  000AEC  26D9               	addwf	fsr2l,f,c
 29341  000AEE  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29342  000AF0  22DA               	addwfc	fsr2h,f,c
 29343  000AF2  50DF               	movf	indf2,w,c
 29344  000AF4  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29345  000AF6  0E06               	movlw	6
 29346  000AF8  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29347  000AFA                     u13805:
 29348  000AFA  90D8               	bcf	status,0,c
 29349  000AFC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29350  000AFE  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29351  000B00  D7FC               	goto	u13805
 29352  000B02  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29353  000B04  12AD               	iorwf	4013,f,c	;volatile
 29354                           
 29355                           ; BSR set to: 0
 29356                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 29357  000B06  EE20 F006          	lfsr	2,6
 29358  000B0A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29359  000B0C  26D9               	addwf	fsr2l,f,c
 29360  000B0E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29361  000B10  22DA               	addwfc	fsr2h,f,c
 29362  000B12  50DF               	movf	indf2,w,c
 29363  000B14  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29364  000B16  0E05               	movlw	5
 29365  000B18  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29366  000B1A                     u13815:
 29367  000B1A  90D8               	bcf	status,0,c
 29368  000B1C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29369  000B1E  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29370  000B20  D7FC               	goto	u13815
 29371  000B22  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29372  000B24  12AD               	iorwf	4013,f,c	;volatile
 29373                           
 29374                           ; BSR set to: 0
 29375                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 29376  000B26  EE20 F001          	lfsr	2,1
 29377  000B2A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29378  000B2C  26D9               	addwf	fsr2l,f,c
 29379  000B2E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29380  000B30  22DA               	addwfc	fsr2h,f,c
 29381  000B32  50DF               	movf	indf2,w,c
 29382  000B34  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29383  000B36  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29384  000B38  0BF0               	andlw	240
 29385  000B3A  12AD               	iorwf	4013,f,c	;volatile
 29386                           
 29387                           ; BSR set to: 0
 29388                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 29389  000B3C  EE20 F008          	lfsr	2,8
 29390  000B40  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29391  000B42  26D9               	addwf	fsr2l,f,c
 29392  000B44  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29393  000B46  22DA               	addwfc	fsr2h,f,c
 29394  000B48  50DF               	movf	indf2,w,c
 29395  000B4A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29396  000B4C  90D8               	bcf	status,0,c
 29397  000B4E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29398  000B50  90D8               	bcf	status,0,c
 29399  000B52  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29400  000B54  90D8               	bcf	status,0,c
 29401  000B56  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29402  000B58  12AD               	iorwf	4013,f,c	;volatile
 29403                           
 29404                           ; BSR set to: 0
 29405                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 29406  000B5A  EE20 F003          	lfsr	2,3
 29407  000B5E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29408  000B60  26D9               	addwf	fsr2l,f,c
 29409  000B62  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29410  000B64  22DA               	addwfc	fsr2h,f,c
 29411  000B66  50DF               	movf	indf2,w,c
 29412  000B68  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29413  000B6A  90D8               	bcf	status,0,c
 29414  000B6C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29415  000B6E  90D8               	bcf	status,0,c
 29416  000B70  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29417  000B72  12AD               	iorwf	4013,f,c	;volatile
 29418                           
 29419                           ; BSR set to: 0
 29420                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 29421  000B74  0E00               	movlw	0
 29422  000B76  6EAC               	movwf	4012,c	;volatile
 29423                           
 29424                           ; BSR set to: 0
 29425                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 29426  000B78  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 29427  000B7C  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 29428  000B80  50DF               	movf	indf2,w,c
 29429  000B82  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29430  000B84  0E00               	movlw	0
 29431  000B86  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 29432  000B88  0E80               	movlw	128
 29433  000B8A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29434  000B8C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29435  000B8E  12AC               	iorwf	4012,f,c	;volatile
 29436                           
 29437                           ; BSR set to: 0
 29438                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 29439  000B90  EE20 F005          	lfsr	2,5
 29440  000B94  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29441  000B96  26D9               	addwf	fsr2l,f,c
 29442  000B98  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29443  000B9A  22DA               	addwfc	fsr2h,f,c
 29444  000B9C  50DF               	movf	indf2,w,c
 29445  000B9E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29446  000BA0  0E06               	movlw	6
 29447  000BA2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29448  000BA4                     u13825:
 29449  000BA4  90D8               	bcf	status,0,c
 29450  000BA6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29451  000BA8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29452  000BAA  D7FC               	goto	u13825
 29453  000BAC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29454  000BAE  12AC               	iorwf	4012,f,c	;volatile
 29455                           
 29456                           ; BSR set to: 0
 29457                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 29458  000BB0  EE20 F007          	lfsr	2,7
 29459  000BB4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29460  000BB6  26D9               	addwf	fsr2l,f,c
 29461  000BB8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29462  000BBA  22DA               	addwfc	fsr2h,f,c
 29463  000BBC  50DF               	movf	indf2,w,c
 29464  000BBE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29465  000BC0  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29466  000BC2  0BF0               	andlw	240
 29467  000BC4  12AC               	iorwf	4012,f,c	;volatile
 29468                           
 29469                           ; BSR set to: 0
 29470                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 29471  000BC6  0E00               	movlw	0
 29472  000BC8  6E7E               	movwf	3966,c	;volatile
 29473                           
 29474                           ; BSR set to: 0
 29475                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 29476  000BCA  EE20 F002          	lfsr	2,2
 29477  000BCE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29478  000BD0  26D9               	addwf	fsr2l,f,c
 29479  000BD2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29480  000BD4  22DA               	addwfc	fsr2h,f,c
 29481  000BD6  50DF               	movf	indf2,w,c
 29482  000BD8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29483  000BDA  90D8               	bcf	status,0,c
 29484  000BDC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29485  000BDE  90D8               	bcf	status,0,c
 29486  000BE0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29487  000BE2  90D8               	bcf	status,0,c
 29488  000BE4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29489  000BE6  127E               	iorwf	3966,f,c	;volatile
 29490                           
 29491                           ; BSR set to: 0
 29492                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 29493  000BE8  EE20 F00A          	lfsr	2,10
 29494  000BEC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29495  000BEE  26D9               	addwf	fsr2l,f,c
 29496  000BF0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29497  000BF2  22DA               	addwfc	fsr2h,f,c
 29498  000BF4  50DF               	movf	indf2,w,c
 29499  000BF6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29500  000BF8  90D8               	bcf	status,0,c
 29501  000BFA  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29502  000BFC  127E               	iorwf	3966,f,c	;volatile
 29503                           
 29504                           ; BSR set to: 0
 29505                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 29506  000BFE  EE20 F009          	lfsr	2,9
 29507  000C02  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29508  000C04  26D9               	addwf	fsr2l,f,c
 29509  000C06  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29510  000C08  22DA               	addwfc	fsr2h,f,c
 29511  000C0A  50DF               	movf	indf2,w,c
 29512  000C0C  127E               	iorwf	3966,f,c	;volatile
 29513                           
 29514                           ; BSR set to: 0
 29515                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 29516  000C0E  EE20 F00B          	lfsr	2,11
 29517  000C12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29518  000C14  26D9               	addwf	fsr2l,f,c
 29519  000C16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29520  000C18  22DA               	addwfc	fsr2h,f,c
 29521  000C1A  50DF               	movf	indf2,w,c
 29522  000C1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29523  000C1E  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29524  000C20  509D               	movf	3997,w,c	;volatile
 29525  000C22  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29526  000C24  0BEF               	andlw	-17
 29527  000C26  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29528  000C28  6E9D               	movwf	3997,c	;volatile
 29529                           
 29530                           ; BSR set to: 0
 29531                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 29532  000C2A  EE20 F00C          	lfsr	2,12
 29533  000C2E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29534  000C30  26D9               	addwf	fsr2l,f,c
 29535  000C32  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29536  000C34  22DA               	addwfc	fsr2h,f,c
 29537  000C36  50DF               	movf	indf2,w,c
 29538  000C38  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29539  000C3A  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29540  000C3C  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 29541  000C3E  509D               	movf	3997,w,c	;volatile
 29542  000C40  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29543  000C42  0BDF               	andlw	-33
 29544  000C44  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29545  000C46  6E9D               	movwf	3997,c	;volatile
 29546                           
 29547                           ;uart_drv.c: 326: }
 29548  000C48  0012               	return	
 29549  000C4A                     l668:
 29550                           
 29551                           ; BSR set to: 0
 29552                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 29553                           
 29554                           ; BSR set to: 0
 29555  000C4A  0E02               	movlw	2
 29556  000C4C  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 29557  000C4E  A4D8               	btfss	status,2,c
 29558  000C50  0012               	return	
 29559                           
 29560                           ; BSR set to: 0
 29561                           ;uart_drv.c: 328: {
 29562                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 29563  000C52  9094               	bcf	3988,0,c	;volatile
 29564                           
 29565                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 29566  000C54  8294               	bsf	3988,1,c	;volatile
 29567                           
 29568                           ; BSR set to: 0
 29569                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 29570  000C56  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 29571  000C5A  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 29572  000C5E  0E02               	movlw	2
 29573  000C60  EC61  F015         	call	_SetUartBaudRate
 29574                           
 29575                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 29576  000C64  0E00               	movlw	0
 29577  000C66  6EA8               	movwf	4008,c	;volatile
 29578                           
 29579                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 29580  000C68  0100               	movlb	0	; () banked
 29581  000C6A  EE20 F004          	lfsr	2,4
 29582  000C6E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29583  000C70  26D9               	addwf	fsr2l,f,c
 29584  000C72  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29585  000C74  22DA               	addwfc	fsr2h,f,c
 29586  000C76  50DF               	movf	indf2,w,c
 29587  000C78  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29588  000C7A  0E06               	movlw	6
 29589  000C7C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29590  000C7E                     u13845:
 29591  000C7E  90D8               	bcf	status,0,c
 29592  000C80  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29593  000C82  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29594  000C84  D7FC               	goto	u13845
 29595  000C86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29596  000C88  12A8               	iorwf	4008,f,c	;volatile
 29597                           
 29598                           ; BSR set to: 0
 29599                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 29600  000C8A  EE20 F006          	lfsr	2,6
 29601  000C8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29602  000C90  26D9               	addwf	fsr2l,f,c
 29603  000C92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29604  000C94  22DA               	addwfc	fsr2h,f,c
 29605  000C96  50DF               	movf	indf2,w,c
 29606  000C98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29607  000C9A  0E05               	movlw	5
 29608  000C9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29609  000C9E                     u13855:
 29610  000C9E  90D8               	bcf	status,0,c
 29611  000CA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29612  000CA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29613  000CA4  D7FC               	goto	u13855
 29614  000CA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29615  000CA8  12A8               	iorwf	4008,f,c	;volatile
 29616                           
 29617                           ; BSR set to: 0
 29618                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 29619  000CAA  EE20 F001          	lfsr	2,1
 29620  000CAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29621  000CB0  26D9               	addwf	fsr2l,f,c
 29622  000CB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29623  000CB4  22DA               	addwfc	fsr2h,f,c
 29624  000CB6  50DF               	movf	indf2,w,c
 29625  000CB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29626  000CBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29627  000CBC  0BF0               	andlw	240
 29628  000CBE  12A8               	iorwf	4008,f,c	;volatile
 29629                           
 29630                           ; BSR set to: 0
 29631                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 29632  000CC0  EE20 F008          	lfsr	2,8
 29633  000CC4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29634  000CC6  26D9               	addwf	fsr2l,f,c
 29635  000CC8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29636  000CCA  22DA               	addwfc	fsr2h,f,c
 29637  000CCC  50DF               	movf	indf2,w,c
 29638  000CCE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29639  000CD0  90D8               	bcf	status,0,c
 29640  000CD2  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29641  000CD4  90D8               	bcf	status,0,c
 29642  000CD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29643  000CD8  90D8               	bcf	status,0,c
 29644  000CDA  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29645  000CDC  12A8               	iorwf	4008,f,c	;volatile
 29646                           
 29647                           ; BSR set to: 0
 29648                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 29649  000CDE  EE20 F003          	lfsr	2,3
 29650  000CE2  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29651  000CE4  26D9               	addwf	fsr2l,f,c
 29652  000CE6  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29653  000CE8  22DA               	addwfc	fsr2h,f,c
 29654  000CEA  50DF               	movf	indf2,w,c
 29655  000CEC  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29656  000CEE  90D8               	bcf	status,0,c
 29657  000CF0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29658  000CF2  90D8               	bcf	status,0,c
 29659  000CF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29660  000CF6  12A8               	iorwf	4008,f,c	;volatile
 29661                           
 29662                           ; BSR set to: 0
 29663                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 29664  000CF8  0E00               	movlw	0
 29665  000CFA  6E9C               	movwf	3996,c	;volatile
 29666                           
 29667                           ; BSR set to: 0
 29668                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 29669  000CFC  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 29670  000D00  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 29671  000D04  50DF               	movf	indf2,w,c
 29672  000D06  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29673  000D08  0E00               	movlw	0
 29674  000D0A  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 29675  000D0C  0E80               	movlw	128
 29676  000D0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29677  000D10  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29678  000D12  129C               	iorwf	3996,f,c	;volatile
 29679                           
 29680                           ; BSR set to: 0
 29681                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 29682  000D14  EE20 F005          	lfsr	2,5
 29683  000D18  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29684  000D1A  26D9               	addwf	fsr2l,f,c
 29685  000D1C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29686  000D1E  22DA               	addwfc	fsr2h,f,c
 29687  000D20  50DF               	movf	indf2,w,c
 29688  000D22  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29689  000D24  0E06               	movlw	6
 29690  000D26  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 29691  000D28                     u13865:
 29692  000D28  90D8               	bcf	status,0,c
 29693  000D2A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29694  000D2C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 29695  000D2E  D7FC               	goto	u13865
 29696  000D30  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 29697  000D32  129C               	iorwf	3996,f,c	;volatile
 29698                           
 29699                           ; BSR set to: 0
 29700                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 29701  000D34  EE20 F007          	lfsr	2,7
 29702  000D38  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29703  000D3A  26D9               	addwf	fsr2l,f,c
 29704  000D3C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29705  000D3E  22DA               	addwfc	fsr2h,f,c
 29706  000D40  50DF               	movf	indf2,w,c
 29707  000D42  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29708  000D44  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 29709  000D46  0BF0               	andlw	240
 29710  000D48  129C               	iorwf	3996,f,c	;volatile
 29711                           
 29712                           ; BSR set to: 0
 29713                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 29714  000D4A  0E00               	movlw	0
 29715  000D4C  6E7C               	movwf	3964,c	;volatile
 29716                           
 29717                           ; BSR set to: 0
 29718                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 29719  000D4E  EE20 F002          	lfsr	2,2
 29720  000D52  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29721  000D54  26D9               	addwf	fsr2l,f,c
 29722  000D56  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29723  000D58  22DA               	addwfc	fsr2h,f,c
 29724  000D5A  50DF               	movf	indf2,w,c
 29725  000D5C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29726  000D5E  90D8               	bcf	status,0,c
 29727  000D60  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29728  000D62  90D8               	bcf	status,0,c
 29729  000D64  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 29730  000D66  90D8               	bcf	status,0,c
 29731  000D68  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29732  000D6A  127C               	iorwf	3964,f,c	;volatile
 29733                           
 29734                           ; BSR set to: 0
 29735                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 29736  000D6C  EE20 F00A          	lfsr	2,10
 29737  000D70  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29738  000D72  26D9               	addwf	fsr2l,f,c
 29739  000D74  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29740  000D76  22DA               	addwfc	fsr2h,f,c
 29741  000D78  50DF               	movf	indf2,w,c
 29742  000D7A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29743  000D7C  90D8               	bcf	status,0,c
 29744  000D7E  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 29745  000D80  127C               	iorwf	3964,f,c	;volatile
 29746                           
 29747                           ; BSR set to: 0
 29748                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 29749  000D82  EE20 F009          	lfsr	2,9
 29750  000D86  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29751  000D88  26D9               	addwf	fsr2l,f,c
 29752  000D8A  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29753  000D8C  22DA               	addwfc	fsr2h,f,c
 29754  000D8E  50DF               	movf	indf2,w,c
 29755  000D90  127C               	iorwf	3964,f,c	;volatile
 29756                           
 29757                           ; BSR set to: 0
 29758                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 29759  000D92  EE20 F00B          	lfsr	2,11
 29760  000D96  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29761  000D98  26D9               	addwf	fsr2l,f,c
 29762  000D9A  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29763  000D9C  22DA               	addwfc	fsr2h,f,c
 29764  000D9E  50DF               	movf	indf2,w,c
 29765  000DA0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29766  000DA2  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29767  000DA4  50A3               	movf	4003,w,c	;volatile
 29768  000DA6  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29769  000DA8  0BEF               	andlw	-17
 29770  000DAA  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29771  000DAC  6EA3               	movwf	4003,c	;volatile
 29772                           
 29773                           ; BSR set to: 0
 29774                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 29775  000DAE  EE20 F00C          	lfsr	2,12
 29776  000DB2  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 29777  000DB4  26D9               	addwf	fsr2l,f,c
 29778  000DB6  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 29779  000DB8  22DA               	addwfc	fsr2h,f,c
 29780  000DBA  50DF               	movf	indf2,w,c
 29781  000DBC  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 29782  000DBE  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 29783  000DC0  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 29784  000DC2  50A3               	movf	4003,w,c	;volatile
 29785  000DC4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29786  000DC6  0BDF               	andlw	-33
 29787  000DC8  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 29788  000DCA  6EA3               	movwf	4003,c	;volatile
 29789                           
 29790                           ; BSR set to: 0
 29791  000DCC  0012               	return	
 29792  000DCE                     __end_of_Uart_InitUartModule:
 29793                           	opt stack 0
 29794                           tosu	equ	0xFFF
 29795                           tosh	equ	0xFFE
 29796                           tosl	equ	0xFFD
 29797                           pclath	equ	0xFFA
 29798                           tblptru	equ	0xFF8
 29799                           tblptrh	equ	0xFF7
 29800                           tblptrl	equ	0xFF6
 29801                           tablat	equ	0xFF5
 29802                           prodh	equ	0xFF4
 29803                           prodl	equ	0xFF3
 29804                           intcon	equ	0xFF2
 29805                           intcon2	equ	0xFF1
 29806                           intcon3	equ	0xFF0
 29807                           indf0	equ	0xFEF
 29808                           postinc0	equ	0xFEE
 29809                           plusw0	equ	0xFEB
 29810                           fsr0h	equ	0xFEA
 29811                           fsr0l	equ	0xFE9
 29812                           wreg	equ	0xFE8
 29813                           indf1	equ	0xFE7
 29814                           postinc1	equ	0xFE6
 29815                           postdec1	equ	0xFE5
 29816                           plusw1	equ	0xFE3
 29817                           fsr1h	equ	0xFE2
 29818                           fsr1l	equ	0xFE1
 29819                           indf2	equ	0xFDF
 29820                           postinc2	equ	0xFDE
 29821                           postdec2	equ	0xFDD
 29822                           plusw2	equ	0xFDB
 29823                           fsr2h	equ	0xFDA
 29824                           fsr2l	equ	0xFD9
 29825                           status	equ	0xFD8
 29826                           
 29827 ;; *************** function _SetUartBaudRate *****************
 29828 ;; Defined at:
 29829 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29830 ;; Parameters:    Size  Location     Type
 29831 ;;  Module          1    wreg     unsigned char 
 29832 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 29833 ;;		 -> UartConfig(21), 
 29834 ;; Auto vars:     Size  Location     Type
 29835 ;;  Module          1   57[BANK0 ] unsigned char 
 29836 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 29837 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 29838 ;; Return value:  Size  Location     Type
 29839 ;;                  1    wreg      void 
 29840 ;; Registers used:
 29841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29842 ;; Tracked objects:
 29843 ;;		On entry : 0/0
 29844 ;;		On exit  : 0/0
 29845 ;;		Unchanged: 0/0
 29846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29847 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29848 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29850 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29851 ;;Total ram usage:        7 bytes
 29852 ;; Hardware stack levels used:    1
 29853 ;; Hardware stack levels required when called:   12
 29854 ;; This function calls:
 29855 ;;		___lldiv
 29856 ;;		___lmul
 29857 ;; This function is called by:
 29858 ;;		_Uart_InitUartModule
 29859 ;; This function uses a non-reentrant model
 29860 ;;
 29861                           
 29862                           	psect	text140
 29863  002AC2                     __ptext140:
 29864                           	opt stack 0
 29865  002AC2                     _SetUartBaudRate:
 29866                           	opt stack 14
 29867                           
 29868                           ; BSR set to: 0
 29869                           ;incstack = 0
 29870                           ;SetUartBaudRate@Module stored from wreg
 29871  002AC2  0100               	movlb	0	; () banked
 29872  002AC4  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 29873                           
 29874                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 29875  002AC6  0E00               	movlw	0
 29876  002AC8  0100               	movlb	0	; () banked
 29877  002ACA  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 29878  002ACC  0E00               	movlw	0
 29879  002ACE  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 29880                           
 29881                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 29882  002AD0  0E00               	movlw	0
 29883  002AD2  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29884                           
 29885                           ; BSR set to: 0
 29886                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 29887  002AD4  EE20 F002          	lfsr	2,2
 29888  002AD8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29889  002ADA  26D9               	addwf	fsr2l,f,c
 29890  002ADC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29891  002ADE  22DA               	addwfc	fsr2h,f,c
 29892  002AE0  50DF               	movf	indf2,w,c
 29893  002AE2  A4D8               	btfss	status,2,c
 29894  002AE4  D00B               	goto	l625
 29895                           
 29896                           ; BSR set to: 0
 29897  002AE6  EE20 F002          	lfsr	2,2
 29898  002AEA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29899  002AEC  26D9               	addwf	fsr2l,f,c
 29900  002AEE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29901  002AF0  22DA               	addwfc	fsr2h,f,c
 29902  002AF2  50DF               	movf	indf2,w,c
 29903  002AF4  A4D8               	btfss	status,2,c
 29904  002AF6  D002               	goto	l625
 29905                           
 29906                           ; BSR set to: 0
 29907                           ;uart_drv.c: 128: {
 29908                           ;uart_drv.c: 129: DivisionFactor = 64;
 29909  002AF8  0E40               	movlw	64
 29910  002AFA  D039               	goto	L62
 29911  002AFC                     l625:
 29912                           
 29913                           ; BSR set to: 0
 29914                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 29915                           
 29916                           ; BSR set to: 0
 29917  002AFC  EE20 F002          	lfsr	2,2
 29918  002B00  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29919  002B02  26D9               	addwf	fsr2l,f,c
 29920  002B04  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29921  002B06  22DA               	addwfc	fsr2h,f,c
 29922  002B08  04DE               	decf	postinc2,w,c
 29923  002B0A  A4D8               	btfss	status,2,c
 29924  002B0C  D009               	goto	l627
 29925                           
 29926                           ; BSR set to: 0
 29927  002B0E  EE20 F002          	lfsr	2,2
 29928  002B12  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29929  002B14  26D9               	addwf	fsr2l,f,c
 29930  002B16  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29931  002B18  22DA               	addwfc	fsr2h,f,c
 29932  002B1A  50DF               	movf	indf2,w,c
 29933  002B1C  B4D8               	btfsc	status,2,c
 29934  002B1E  D012               	goto	u12900
 29935  002B20                     l627:
 29936                           
 29937                           ; BSR set to: 0
 29938                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29939                           
 29940                           ; BSR set to: 0
 29941  002B20  EE20 F002          	lfsr	2,2
 29942  002B24  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29943  002B26  26D9               	addwf	fsr2l,f,c
 29944  002B28  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29945  002B2A  22DA               	addwfc	fsr2h,f,c
 29946  002B2C  50DF               	movf	indf2,w,c
 29947  002B2E  A4D8               	btfss	status,2,c
 29948  002B30  D00B               	goto	l629
 29949                           
 29950                           ; BSR set to: 0
 29951  002B32  EE20 F002          	lfsr	2,2
 29952  002B36  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29953  002B38  26D9               	addwf	fsr2l,f,c
 29954  002B3A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29955  002B3C  22DA               	addwfc	fsr2h,f,c
 29956  002B3E  04DE               	decf	postinc2,w,c
 29957  002B40  A4D8               	btfss	status,2,c
 29958  002B42  D002               	goto	l629
 29959  002B44                     u12900:
 29960                           
 29961                           ; BSR set to: 0
 29962                           ;uart_drv.c: 136: {
 29963                           ;uart_drv.c: 137: DivisionFactor = 16;
 29964  002B44  0E10               	movlw	16
 29965  002B46  D013               	goto	L62
 29966  002B48                     l629:
 29967                           
 29968                           ; BSR set to: 0
 29969                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29970                           
 29971                           ; BSR set to: 0
 29972  002B48  EE20 F002          	lfsr	2,2
 29973  002B4C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29974  002B4E  26D9               	addwf	fsr2l,f,c
 29975  002B50  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29976  002B52  22DA               	addwfc	fsr2h,f,c
 29977  002B54  04DE               	decf	postinc2,w,c
 29978  002B56  A4D8               	btfss	status,2,c
 29979  002B58  D00B               	goto	l631
 29980                           
 29981                           ; BSR set to: 0
 29982  002B5A  EE20 F002          	lfsr	2,2
 29983  002B5E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29984  002B60  26D9               	addwf	fsr2l,f,c
 29985  002B62  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29986  002B64  22DA               	addwfc	fsr2h,f,c
 29987  002B66  04DE               	decf	postinc2,w,c
 29988  002B68  A4D8               	btfss	status,2,c
 29989  002B6A  D002               	goto	l631
 29990                           
 29991                           ; BSR set to: 0
 29992                           ;uart_drv.c: 140: {
 29993                           ;uart_drv.c: 141: DivisionFactor = 4;
 29994  002B6C  0E04               	movlw	4
 29995  002B6E                     L62:
 29996  002B6E  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29997  002B70                     l631:
 29998                           
 29999                           ; BSR set to: 0
 30000                           ;uart_drv.c: 146: }
 30001                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 30002                           
 30003                           ; BSR set to: 0
 30004                           
 30005                           ; BSR set to: 0
 30006                           
 30007                           ; BSR set to: 0
 30008                           
 30009                           ; BSR set to: 0
 30010                           
 30011                           ;uart_drv.c: 143: else
 30012                           ;uart_drv.c: 144: {
 30013                           
 30014                           ; BSR set to: 0
 30015  002B70  EE20 F00D          	lfsr	2,13
 30016  002B74  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30017  002B76  26D9               	addwf	fsr2l,f,c
 30018  002B78  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30019  002B7A  22DA               	addwfc	fsr2h,f,c
 30020  002B7C  CFDE F089          	movff	postinc2,___lldiv@dividend
 30021  002B80  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 30022  002B84  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 30023  002B88  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 30024  002B8C  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 30025  002B8E  6F7D               	movwf	___lmul@multiplier& (0+255),b
 30026  002B90  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 30027  002B92  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 30028  002B94  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 30029  002B96  EE20 F011          	lfsr	2,17
 30030  002B9A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 30031  002B9C  26D9               	addwf	fsr2l,f,c
 30032  002B9E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 30033  002BA0  22DA               	addwfc	fsr2h,f,c
 30034  002BA2  CFDE F081          	movff	postinc2,___lmul@multiplicand
 30035  002BA6  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 30036  002BAA  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 30037  002BAE  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 30038  002BB2  ECAD  F02D         	call	___lmul	;wreg free
 30039  002BB6  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 30040  002BBA  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 30041  002BBE  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 30042  002BC2  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 30043  002BC6  ECE6  F029         	call	___lldiv	;wreg free
 30044  002BCA  0EFF               	movlw	255
 30045  002BCC  0100               	movlb	0	; () banked
 30046  002BCE  2589               	addwf	?___lldiv& (0+255),w,b
 30047  002BD0  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 30048  002BD2  0EFF               	movlw	255
 30049  002BD4  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 30050  002BD6  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 30051                           
 30052                           ; BSR set to: 0
 30053                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 30054  002BD8  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 30055  002BDA  A4D8               	btfss	status,2,c
 30056  002BDC  D005               	goto	l633
 30057                           
 30058                           ; BSR set to: 0
 30059                           ;uart_drv.c: 152: {
 30060                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 30061  002BDE  0E00               	movlw	0
 30062  002BE0  6E7F               	movwf	3967,c	;volatile
 30063                           
 30064                           ; BSR set to: 0
 30065                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 30066  002BE2  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 30067                           
 30068                           ;uart_drv.c: 156: }
 30069  002BE6  0012               	return	
 30070  002BE8                     l633:
 30071                           
 30072                           ; BSR set to: 0
 30073                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 30074                           
 30075                           ; BSR set to: 0
 30076  002BE8  0E02               	movlw	2
 30077  002BEA  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 30078  002BEC  A4D8               	btfss	status,2,c
 30079  002BEE  0012               	return	
 30080                           
 30081                           ; BSR set to: 0
 30082                           ;uart_drv.c: 158: {
 30083                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 30084  002BF0  0E00               	movlw	0
 30085  002BF2  6E7D               	movwf	3965,c	;volatile
 30086                           
 30087                           ; BSR set to: 0
 30088                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 30089  002BF4  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 30090                           
 30091                           ; BSR set to: 0
 30092  002BF8  0012               	return	
 30093  002BFA                     __end_of_SetUartBaudRate:
 30094                           	opt stack 0
 30095                           tosu	equ	0xFFF
 30096                           tosh	equ	0xFFE
 30097                           tosl	equ	0xFFD
 30098                           pclath	equ	0xFFA
 30099                           tblptru	equ	0xFF8
 30100                           tblptrh	equ	0xFF7
 30101                           tblptrl	equ	0xFF6
 30102                           tablat	equ	0xFF5
 30103                           prodh	equ	0xFF4
 30104                           prodl	equ	0xFF3
 30105                           intcon	equ	0xFF2
 30106                           intcon2	equ	0xFF1
 30107                           intcon3	equ	0xFF0
 30108                           indf0	equ	0xFEF
 30109                           postinc0	equ	0xFEE
 30110                           plusw0	equ	0xFEB
 30111                           fsr0h	equ	0xFEA
 30112                           fsr0l	equ	0xFE9
 30113                           wreg	equ	0xFE8
 30114                           indf1	equ	0xFE7
 30115                           postinc1	equ	0xFE6
 30116                           postdec1	equ	0xFE5
 30117                           plusw1	equ	0xFE3
 30118                           fsr1h	equ	0xFE2
 30119                           fsr1l	equ	0xFE1
 30120                           indf2	equ	0xFDF
 30121                           postinc2	equ	0xFDE
 30122                           postdec2	equ	0xFDD
 30123                           plusw2	equ	0xFDB
 30124                           fsr2h	equ	0xFDA
 30125                           fsr2l	equ	0xFD9
 30126                           status	equ	0xFD8
 30127                           
 30128 ;; *************** function ___lmul *****************
 30129 ;; Defined at:
 30130 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 30131 ;; Parameters:    Size  Location     Type
 30132 ;;  multiplier      4   29[BANK0 ] unsigned long 
 30133 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 30134 ;; Auto vars:     Size  Location     Type
 30135 ;;  product         4   37[BANK0 ] unsigned long 
 30136 ;; Return value:  Size  Location     Type
 30137 ;;                  4   29[BANK0 ] unsigned long 
 30138 ;; Registers used:
 30139 ;;		wreg, status,2, status,0
 30140 ;; Tracked objects:
 30141 ;;		On entry : 0/0
 30142 ;;		On exit  : 0/0
 30143 ;;		Unchanged: 0/0
 30144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30145 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30146 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30148 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30149 ;;Total ram usage:       12 bytes
 30150 ;; Hardware stack levels used:    1
 30151 ;; Hardware stack levels required when called:   11
 30152 ;; This function calls:
 30153 ;;		Nothing
 30154 ;; This function is called by:
 30155 ;;		_Tmr_TmrBPrSet
 30156 ;;		_SetUartBaudRate
 30157 ;;		_strtol
 30158 ;; This function uses a non-reentrant model
 30159 ;;
 30160                           
 30161                           	psect	text141
 30162  005B5A                     __ptext141:
 30163                           	opt stack 0
 30164  005B5A                     ___lmul:
 30165                           	opt stack 15
 30166                           
 30167                           ; BSR set to: 0
 30168                           ;incstack = 0
 30169  005B5A  0E00               	movlw	0
 30170  005B5C  0100               	movlb	0	; () banked
 30171  005B5E  6F85               	movwf	___lmul@product& (0+255),b
 30172  005B60  0E00               	movlw	0
 30173  005B62  6F86               	movwf	(___lmul@product+1)& (0+255),b
 30174  005B64  0E00               	movlw	0
 30175  005B66  6F87               	movwf	(___lmul@product+2)& (0+255),b
 30176  005B68  0E00               	movlw	0
 30177  005B6A  6F88               	movwf	(___lmul@product+3)& (0+255),b
 30178  005B6C                     
 30179                           ; BSR set to: 0
 30180                           
 30181                           ; BSR set to: 0
 30182  005B6C  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 30183  005B6E  D008               	goto	l3001
 30184                           
 30185                           ; BSR set to: 0
 30186  005B70  5181               	movf	___lmul@multiplicand& (0+255),w,b
 30187  005B72  2785               	addwf	___lmul@product& (0+255),f,b
 30188  005B74  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 30189  005B76  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 30190  005B78  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 30191  005B7A  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 30192  005B7C  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 30193  005B7E  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 30194  005B80                     l3001:
 30195                           
 30196                           ; BSR set to: 0
 30197                           
 30198                           ; BSR set to: 0
 30199  005B80  90D8               	bcf	status,0,c
 30200  005B82  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 30201  005B84  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 30202  005B86  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 30203  005B88  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 30204                           
 30205                           ; BSR set to: 0
 30206  005B8A  90D8               	bcf	status,0,c
 30207  005B8C  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 30208  005B8E  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 30209  005B90  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 30210  005B92  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 30211  005B94  517D               	movf	___lmul@multiplier& (0+255),w,b
 30212  005B96  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 30213  005B98  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 30214  005B9A  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 30215  005B9C  A4D8               	btfss	status,2,c
 30216  005B9E  D7E6               	goto	l3000
 30217                           
 30218                           ; BSR set to: 0
 30219  005BA0  C085  F07D         	movff	___lmul@product,?___lmul
 30220  005BA4  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 30221  005BA8  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 30222  005BAC  C088  F080         	movff	___lmul@product+3,?___lmul+3
 30223                           
 30224                           ; BSR set to: 0
 30225  005BB0  0012               	return		;funcret
 30226  005BB2                     __end_of___lmul:
 30227                           	opt stack 0
 30228                           tosu	equ	0xFFF
 30229                           tosh	equ	0xFFE
 30230                           tosl	equ	0xFFD
 30231                           pclath	equ	0xFFA
 30232                           tblptru	equ	0xFF8
 30233                           tblptrh	equ	0xFF7
 30234                           tblptrl	equ	0xFF6
 30235                           tablat	equ	0xFF5
 30236                           prodh	equ	0xFF4
 30237                           prodl	equ	0xFF3
 30238                           intcon	equ	0xFF2
 30239                           intcon2	equ	0xFF1
 30240                           intcon3	equ	0xFF0
 30241                           indf0	equ	0xFEF
 30242                           postinc0	equ	0xFEE
 30243                           plusw0	equ	0xFEB
 30244                           fsr0h	equ	0xFEA
 30245                           fsr0l	equ	0xFE9
 30246                           wreg	equ	0xFE8
 30247                           indf1	equ	0xFE7
 30248                           postinc1	equ	0xFE6
 30249                           postdec1	equ	0xFE5
 30250                           plusw1	equ	0xFE3
 30251                           fsr1h	equ	0xFE2
 30252                           fsr1l	equ	0xFE1
 30253                           indf2	equ	0xFDF
 30254                           postinc2	equ	0xFDE
 30255                           postdec2	equ	0xFDD
 30256                           plusw2	equ	0xFDB
 30257                           fsr2h	equ	0xFDA
 30258                           fsr2l	equ	0xFD9
 30259                           status	equ	0xFD8
 30260                           
 30261 ;; *************** function _UartSetConfigLow *****************
 30262 ;; Defined at:
 30263 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 30264 ;; Parameters:    Size  Location     Type
 30265 ;;		None
 30266 ;; Auto vars:     Size  Location     Type
 30267 ;;		None
 30268 ;; Return value:  Size  Location     Type
 30269 ;;                  1    wreg      void 
 30270 ;; Registers used:
 30271 ;;		wreg, status,2
 30272 ;; Tracked objects:
 30273 ;;		On entry : 0/0
 30274 ;;		On exit  : 0/0
 30275 ;;		Unchanged: 0/0
 30276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30281 ;;Total ram usage:        0 bytes
 30282 ;; Hardware stack levels used:    1
 30283 ;; Hardware stack levels required when called:   11
 30284 ;; This function calls:
 30285 ;;		Nothing
 30286 ;; This function is called by:
 30287 ;;		_ConfigureModem
 30288 ;; This function uses a non-reentrant model
 30289 ;;
 30290                           
 30291                           	psect	text142
 30292  005BB2                     __ptext142:
 30293                           	opt stack 0
 30294  005BB2                     _UartSetConfigLow:
 30295                           	opt stack 15
 30296                           
 30297                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 30298                           
 30299                           ; BSR set to: 0
 30300                           ;incstack = 0
 30301  005BB2  0E01               	movlw	1
 30302  005BB4  0103               	movlb	3	; () banked
 30303  005BB6  6F24               	movwf	_UartConfig& (0+255),b
 30304                           
 30305                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 30306  005BB8  0E00               	movlw	0
 30307  005BBA  6F25               	movwf	(_UartConfig+1)& (0+255),b
 30308                           
 30309                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 30310  005BBC  0E00               	movlw	0
 30311  005BBE  6F26               	movwf	(_UartConfig+2)& (0+255),b
 30312                           
 30313                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 30314  005BC0  0E00               	movlw	0
 30315  005BC2  6F27               	movwf	(_UartConfig+3)& (0+255),b
 30316                           
 30317                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 30318  005BC4  0E00               	movlw	0
 30319  005BC6  6F28               	movwf	(_UartConfig+4)& (0+255),b
 30320                           
 30321                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 30322  005BC8  0E00               	movlw	0
 30323  005BCA  6F29               	movwf	(_UartConfig+5)& (0+255),b
 30324                           
 30325                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 30326  005BCC  0E01               	movlw	1
 30327  005BCE  6F2A               	movwf	(_UartConfig+6)& (0+255),b
 30328                           
 30329                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 30330  005BD0  0E01               	movlw	1
 30331  005BD2  6F2B               	movwf	(_UartConfig+7)& (0+255),b
 30332                           
 30333                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 30334  005BD4  0E00               	movlw	0
 30335  005BD6  6F2C               	movwf	(_UartConfig+8)& (0+255),b
 30336                           
 30337                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 30338  005BD8  0E00               	movlw	0
 30339  005BDA  6F2D               	movwf	(_UartConfig+9)& (0+255),b
 30340                           
 30341                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 30342  005BDC  0E00               	movlw	0
 30343  005BDE  6F2E               	movwf	(_UartConfig+10)& (0+255),b
 30344                           
 30345                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 30346  005BE0  0E00               	movlw	0
 30347  005BE2  6F2F               	movwf	(_UartConfig+11)& (0+255),b
 30348                           
 30349                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 30350  005BE4  0E01               	movlw	1
 30351  005BE6  6F30               	movwf	(_UartConfig+12)& (0+255),b
 30352                           
 30353                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 30354  005BE8  0E00               	movlw	0
 30355  005BEA  6F31               	movwf	(_UartConfig+13)& (0+255),b
 30356  005BEC  0E6C               	movlw	108
 30357  005BEE  6F32               	movwf	(_UartConfig+14)& (0+255),b
 30358  005BF0  0EDC               	movlw	220
 30359  005BF2  6F33               	movwf	(_UartConfig+15)& (0+255),b
 30360  005BF4  0E02               	movlw	2
 30361  005BF6  6F34               	movwf	(_UartConfig+16)& (0+255),b
 30362                           
 30363                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 30364  005BF8  0E80               	movlw	128
 30365  005BFA  6F35               	movwf	(_UartConfig+17)& (0+255),b
 30366  005BFC  0E25               	movlw	37
 30367  005BFE  6F36               	movwf	(_UartConfig+18)& (0+255),b
 30368  005C00  0E00               	movlw	0
 30369  005C02  6F37               	movwf	(_UartConfig+19)& (0+255),b
 30370  005C04  0E00               	movlw	0
 30371  005C06  6F38               	movwf	(_UartConfig+20)& (0+255),b
 30372                           
 30373                           ; BSR set to: 3
 30374  005C08  0012               	return		;funcret
 30375  005C0A                     __end_of_UartSetConfigLow:
 30376                           	opt stack 0
 30377                           tosu	equ	0xFFF
 30378                           tosh	equ	0xFFE
 30379                           tosl	equ	0xFFD
 30380                           pclath	equ	0xFFA
 30381                           tblptru	equ	0xFF8
 30382                           tblptrh	equ	0xFF7
 30383                           tblptrl	equ	0xFF6
 30384                           tablat	equ	0xFF5
 30385                           prodh	equ	0xFF4
 30386                           prodl	equ	0xFF3
 30387                           intcon	equ	0xFF2
 30388                           intcon2	equ	0xFF1
 30389                           intcon3	equ	0xFF0
 30390                           indf0	equ	0xFEF
 30391                           postinc0	equ	0xFEE
 30392                           plusw0	equ	0xFEB
 30393                           fsr0h	equ	0xFEA
 30394                           fsr0l	equ	0xFE9
 30395                           wreg	equ	0xFE8
 30396                           indf1	equ	0xFE7
 30397                           postinc1	equ	0xFE6
 30398                           postdec1	equ	0xFE5
 30399                           plusw1	equ	0xFE3
 30400                           fsr1h	equ	0xFE2
 30401                           fsr1l	equ	0xFE1
 30402                           indf2	equ	0xFDF
 30403                           postinc2	equ	0xFDE
 30404                           postdec2	equ	0xFDD
 30405                           plusw2	equ	0xFDB
 30406                           fsr2h	equ	0xFDA
 30407                           fsr2l	equ	0xFD9
 30408                           status	equ	0xFD8
 30409                           
 30410 ;; *************** function _CheckModem *****************
 30411 ;; Defined at:
 30412 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 30413 ;; Parameters:    Size  Location     Type
 30414 ;;		None
 30415 ;; Auto vars:     Size  Location     Type
 30416 ;;		None
 30417 ;; Return value:  Size  Location     Type
 30418 ;;                  1    wreg      void 
 30419 ;; Registers used:
 30420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30421 ;; Tracked objects:
 30422 ;;		On entry : 0/0
 30423 ;;		On exit  : 0/0
 30424 ;;		Unchanged: 0/0
 30425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30430 ;;Total ram usage:        0 bytes
 30431 ;; Hardware stack levels used:    1
 30432 ;; Hardware stack levels required when called:   14
 30433 ;; This function calls:
 30434 ;;		_GenerateEvt
 30435 ;;		_OsTmr_GetTimerStatus
 30436 ;;		_OsTmr_StartTimer
 30437 ;;		_ReceiveEvt
 30438 ;;		_Uart_WriteConstString
 30439 ;; This function is called by:
 30440 ;;		_Mdm_MainTask
 30441 ;; This function uses a non-reentrant model
 30442 ;;
 30443                           
 30444                           	psect	text143
 30445  002026                     __ptext143:
 30446                           	opt stack 0
 30447  002026                     _CheckModem:
 30448                           	opt stack 13
 30449                           
 30450                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 30451                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 30452                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 30453                           
 30454                           ; BSR set to: 3
 30455                           ;incstack = 0
 30456  002026  D09C               	goto	l982
 30457  002028                     
 30458                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 30459  002028  0EF2               	movlw	low CheckModem@Timeout
 30460  00202A  0100               	movlb	0	; () banked
 30461  00202C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30462  00202E  0E03               	movlw	high CheckModem@Timeout
 30463  002030  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30464  002032  0ED0               	movlw	208
 30465  002034  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30466  002036  0E07               	movlw	7
 30467  002038  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30468  00203A  0E00               	movlw	0
 30469  00203C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30470  00203E  0E00               	movlw	0
 30471  002040  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30472  002042  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 30473                           
 30474                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 30475  002046  0E01               	movlw	1
 30476  002048  0101               	movlb	1	; () banked
 30477  00204A  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30478                           
 30479                           ;mdm_gsm_gprs.c: 295: break;
 30480  00204C  0012               	return	
 30481  00204E                     
 30482                           ; BSR set to: 1
 30483                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30484                           
 30485                           ; BSR set to: 1
 30486  00204E  0EF2               	movlw	low CheckModem@Timeout
 30487  002050  0100               	movlb	0	; () banked
 30488  002052  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30489  002054  0E03               	movlw	high CheckModem@Timeout
 30490  002056  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30491  002058  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30492  00205C  06E8               	decf	wreg,f,c
 30493  00205E  A4D8               	btfss	status,2,c
 30494  002060  0012               	return	
 30495                           
 30496                           ;mdm_gsm_gprs.c: 300: {
 30497                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 30498  002062  0E02               	movlw	2
 30499  002064  0101               	movlb	1	; () banked
 30500  002066  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30501                           
 30502                           ; BSR set to: 1
 30503                           ;mdm_gsm_gprs.c: 303: }
 30504                           ;mdm_gsm_gprs.c: 304: break;
 30505  002068  0012               	return	
 30506  00206A                     
 30507                           ; BSR set to: 1
 30508                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 30509                           
 30510                           ; BSR set to: 1
 30511  00206A  0EE6               	movlw	low STR_1
 30512  00206C  0100               	movlb	0	; () banked
 30513  00206E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30514  002070  0EFF               	movlw	high STR_1
 30515  002072  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30516  002074  0E01               	movlw	1
 30517  002076  ECAC  F031         	call	_Uart_WriteConstString
 30518                           
 30519                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 30520  00207A  0EF2               	movlw	low CheckModem@Timeout
 30521  00207C  0100               	movlb	0	; () banked
 30522  00207E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30523  002080  0E03               	movlw	high CheckModem@Timeout
 30524  002082  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30525  002084  0ED0               	movlw	208
 30526  002086  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30527  002088  0E07               	movlw	7
 30528  00208A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30529  00208C  0E00               	movlw	0
 30530  00208E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30531  002090  0E00               	movlw	0
 30532  002092  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30533  002094  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 30534                           
 30535                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 30536  002098  0E03               	movlw	3
 30537  00209A  0101               	movlb	1	; () banked
 30538  00209C  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30539                           
 30540                           ;mdm_gsm_gprs.c: 313: break;
 30541  00209E  0012               	return	
 30542  0020A0                     
 30543                           ; BSR set to: 1
 30544                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 30545                           
 30546                           ; BSR set to: 1
 30547  0020A0  0E3C               	movlw	low _NewStringReceived
 30548  0020A2  0100               	movlb	0	; () banked
 30549  0020A4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30550  0020A6  0E00               	movlw	high _NewStringReceived
 30551  0020A8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30552  0020AA  EC15  F034         	call	_ReceiveEvt	;wreg free
 30553  0020AE  0900               	iorlw	0
 30554  0020B0  B4D8               	btfsc	status,2,c
 30555  0020B2  D030               	goto	l989
 30556                           
 30557                           ;mdm_gsm_gprs.c: 318: {
 30558                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 30559  0020B4  CC58  FFE8         	movff	_RxBuffer,wreg
 30560  0020B8  0A4F               	xorlw	79
 30561  0020BA  A4D8               	btfss	status,2,c
 30562  0020BC  D005               	goto	u15050
 30563  0020BE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30564  0020C2  0A4B               	xorlw	75
 30565  0020C4  B4D8               	btfsc	status,2,c
 30566  0020C6  D00A               	goto	u15070
 30567  0020C8                     u15050:
 30568  0020C8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30569  0020CC  0A4F               	xorlw	79
 30570  0020CE  A4D8               	btfss	status,2,c
 30571  0020D0  0012               	return	
 30572  0020D2  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 30573  0020D6  0A4B               	xorlw	75
 30574  0020D8  A4D8               	btfss	status,2,c
 30575  0020DA  0012               	return	
 30576  0020DC                     u15070:
 30577                           
 30578                           ;mdm_gsm_gprs.c: 321: {
 30579                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 30580  0020DC  0E02               	movlw	2
 30581  0020DE  0100               	movlb	0	; () banked
 30582  0020E0  6FD1               	movwf	_MdmStatus& (0+255),b
 30583                           
 30584                           ; BSR set to: 0
 30585                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 30586  0020E2  0EDF               	movlw	low _MdmOnOffPulseRequest
 30587  0020E4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 30588  0020E6  0E00               	movlw	high _MdmOnOffPulseRequest
 30589  0020E8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 30590  0020EA  EC06  F036         	call	_GenerateEvt	;wreg free
 30591                           
 30592                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 30593  0020EE  0EF2               	movlw	low CheckModem@Timeout
 30594  0020F0  0100               	movlb	0	; () banked
 30595  0020F2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30596  0020F4  0E03               	movlw	high CheckModem@Timeout
 30597  0020F6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30598  0020F8  0EE8               	movlw	232
 30599  0020FA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30600  0020FC  0E03               	movlw	3
 30601  0020FE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30602  002100  0E00               	movlw	0
 30603  002102  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30604  002104  0E00               	movlw	0
 30605  002106  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30606  002108  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 30607                           
 30608                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 30609  00210C  0E04               	movlw	4
 30610  00210E  0101               	movlb	1	; () banked
 30611  002110  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30612                           
 30613                           ; BSR set to: 1
 30614                           ;mdm_gsm_gprs.c: 329: }
 30615                           ;mdm_gsm_gprs.c: 330: }
 30616  002112  0012               	return	
 30617  002114                     l989:
 30618                           
 30619                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30620                           
 30621                           ; BSR set to: 1
 30622  002114  0EF2               	movlw	low CheckModem@Timeout
 30623  002116  0100               	movlb	0	; () banked
 30624  002118  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30625  00211A  0E03               	movlw	high CheckModem@Timeout
 30626  00211C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30627  00211E  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30628  002122  06E8               	decf	wreg,f,c
 30629  002124  A4D8               	btfss	status,2,c
 30630  002126  0012               	return	
 30631                           
 30632                           ;mdm_gsm_gprs.c: 332: {
 30633                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 30634  002128  0E00               	movlw	0
 30635  00212A  0100               	movlb	0	; () banked
 30636  00212C  6FD1               	movwf	_MdmStatus& (0+255),b
 30637                           
 30638                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 30639  00212E  0E01               	movlw	1
 30640  002130  6E2B               	movwf	_ComChecCompleted,c
 30641                           
 30642                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 30643  002132  0E05               	movlw	5
 30644  002134  0101               	movlb	1	; () banked
 30645  002136  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30646                           
 30647                           ; BSR set to: 1
 30648                           ;mdm_gsm_gprs.c: 343: }
 30649                           ;mdm_gsm_gprs.c: 344: break;
 30650                           
 30651                           ; BSR set to: 1
 30652                           
 30653                           ;mdm_gsm_gprs.c: 340: else
 30654                           ;mdm_gsm_gprs.c: 341: {
 30655                           
 30656                           ; BSR set to: 1
 30657                           
 30658                           ;mdm_gsm_gprs.c: 339: }
 30659  002138  0012               	return	
 30660  00213A                     
 30661                           ; BSR set to: 1
 30662                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 30663                           
 30664                           ; BSR set to: 1
 30665  00213A  0EF2               	movlw	low CheckModem@Timeout
 30666  00213C  0100               	movlb	0	; () banked
 30667  00213E  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30668  002140  0E03               	movlw	high CheckModem@Timeout
 30669  002142  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30670  002144  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 30671  002148  06E8               	decf	wreg,f,c
 30672  00214A  A4D8               	btfss	status,2,c
 30673  00214C  0012               	return	
 30674                           
 30675                           ;mdm_gsm_gprs.c: 349: {
 30676                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 30677  00214E  0E00               	movlw	0
 30678  002150  0100               	movlb	0	; () banked
 30679  002152  6FD1               	movwf	_MdmStatus& (0+255),b
 30680                           
 30681                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 30682  002154  0E01               	movlw	1
 30683  002156  6E2B               	movwf	_ComChecCompleted,c
 30684                           
 30685                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 30686  002158  0E05               	movlw	5
 30687  00215A  0101               	movlb	1	; () banked
 30688  00215C  6FF2               	movwf	CheckModem@CheckMdmSts& (0+255),b
 30689                           
 30690                           ; BSR set to: 1
 30691                           ;mdm_gsm_gprs.c: 365: }
 30692                           
 30693                           ; BSR set to: 1
 30694                           ;mdm_gsm_gprs.c: 364: break;
 30695                           
 30696                           ;mdm_gsm_gprs.c: 363: default:
 30697                           
 30698                           ; BSR set to: 1
 30699                           ;mdm_gsm_gprs.c: 361: break;
 30700                           
 30701                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 30702                           
 30703                           ; BSR set to: 1
 30704                           ;mdm_gsm_gprs.c: 356: }
 30705                           ;mdm_gsm_gprs.c: 357: break;
 30706  00215E  0012               	return	
 30707  002160                     l982:
 30708                           
 30709                           ; BSR set to: 1
 30710  002160  0101               	movlb	1	; () banked
 30711  002162  51F2               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 30712                           
 30713                           ; Switch size 1, requested type "space"
 30714                           ; Number of cases is 6, Range of values is 0 to 5
 30715                           ; switch strategies available:
 30716                           ; Name         Instructions Cycles
 30717                           ; simple_byte           19    10 (average)
 30718                           ;	Chosen strategy is simple_byte
 30719  002164  0A00               	xorlw	0	; case 0
 30720  002166  B4D8               	btfsc	status,2,c
 30721  002168  D75F               	goto	l983
 30722  00216A  0A01               	xorlw	1	; case 1
 30723  00216C  B4D8               	btfsc	status,2,c
 30724  00216E  D76F               	goto	l985
 30725  002170  0A03               	xorlw	3	; case 2
 30726  002172  B4D8               	btfsc	status,2,c
 30727  002174  D77A               	goto	l987
 30728  002176  0A01               	xorlw	1	; case 3
 30729  002178  B4D8               	btfsc	status,2,c
 30730  00217A  D792               	goto	l988
 30731  00217C  0A07               	xorlw	7	; case 4
 30732  00217E  B4D8               	btfsc	status,2,c
 30733  002180  D7DC               	goto	l998
 30734  002182  0A01               	xorlw	1	; case 5
 30735  002184  0012               	return	
 30736  002186                     __end_of_CheckModem:
 30737                           	opt stack 0
 30738                           tosu	equ	0xFFF
 30739                           tosh	equ	0xFFE
 30740                           tosl	equ	0xFFD
 30741                           pclath	equ	0xFFA
 30742                           tblptru	equ	0xFF8
 30743                           tblptrh	equ	0xFF7
 30744                           tblptrl	equ	0xFF6
 30745                           tablat	equ	0xFF5
 30746                           prodh	equ	0xFF4
 30747                           prodl	equ	0xFF3
 30748                           intcon	equ	0xFF2
 30749                           intcon2	equ	0xFF1
 30750                           intcon3	equ	0xFF0
 30751                           indf0	equ	0xFEF
 30752                           postinc0	equ	0xFEE
 30753                           plusw0	equ	0xFEB
 30754                           fsr0h	equ	0xFEA
 30755                           fsr0l	equ	0xFE9
 30756                           wreg	equ	0xFE8
 30757                           indf1	equ	0xFE7
 30758                           postinc1	equ	0xFE6
 30759                           postdec1	equ	0xFE5
 30760                           plusw1	equ	0xFE3
 30761                           fsr1h	equ	0xFE2
 30762                           fsr1l	equ	0xFE1
 30763                           indf2	equ	0xFDF
 30764                           postinc2	equ	0xFDE
 30765                           postdec2	equ	0xFDD
 30766                           plusw2	equ	0xFDB
 30767                           fsr2h	equ	0xFDA
 30768                           fsr2l	equ	0xFD9
 30769                           status	equ	0xFD8
 30770                           
 30771 ;; *************** function _MdmCntSm *****************
 30772 ;; Defined at:
 30773 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 30774 ;; Parameters:    Size  Location     Type
 30775 ;;		None
 30776 ;; Auto vars:     Size  Location     Type
 30777 ;;		None
 30778 ;; Return value:  Size  Location     Type
 30779 ;;                  1    wreg      void 
 30780 ;; Registers used:
 30781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30782 ;; Tracked objects:
 30783 ;;		On entry : 0/0
 30784 ;;		On exit  : 0/0
 30785 ;;		Unchanged: 0/0
 30786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30791 ;;Total ram usage:        0 bytes
 30792 ;; Hardware stack levels used:    1
 30793 ;; Hardware stack levels required when called:   12
 30794 ;; This function calls:
 30795 ;;		_InitModemInterface
 30796 ;;		_ReceiveEvt
 30797 ;; This function is called by:
 30798 ;;		_Mdm_DrvMainFn
 30799 ;; This function uses a non-reentrant model
 30800 ;;
 30801                           
 30802                           	psect	text144
 30803  00492A                     __ptext144:
 30804                           	opt stack 0
 30805  00492A                     _MdmCntSm:
 30806                           	opt stack 15
 30807                           
 30808                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 30809                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 30810                           ;mdm_drv.c: 204: switch (MdmCntState)
 30811                           
 30812                           ;incstack = 0
 30813  00492A  D045               	goto	l315
 30814  00492C                     
 30815                           ;mdm_drv.c: 208: InitModemInterface();
 30816  00492C  ECCA  F036         	call	_InitModemInterface	;wreg free
 30817                           
 30818                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 30819  004930  0E01               	movlw	1
 30820  004932  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30821                           
 30822                           ;mdm_drv.c: 211: break;
 30823  004934  0012               	return	
 30824  004936                     
 30825                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 30826  004936  0EDF               	movlw	low _MdmOnOffPulseRequest
 30827  004938  0100               	movlb	0	; () banked
 30828  00493A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30829  00493C  0E00               	movlw	high _MdmOnOffPulseRequest
 30830  00493E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30831  004940  EC15  F034         	call	_ReceiveEvt	;wreg free
 30832  004944  0900               	iorlw	0
 30833  004946  B4D8               	btfsc	status,2,c
 30834  004948  D009               	goto	l319
 30835                           
 30836                           ;mdm_drv.c: 216: {
 30837                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 30838  00494A  0E02               	movlw	2
 30839  00494C  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30840                           
 30841                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 30842  00494E  8284               	bsf	3972,1,c	;volatile
 30843                           
 30844                           ;mdm_drv.c: 222: Counter = 0;
 30845  004950  0E00               	movlw	0
 30846  004952  0102               	movlb	2	; () banked
 30847  004954  6FDA               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 30848  004956  0E00               	movlw	0
 30849  004958  6FD9               	movwf	MdmCntSm@Counter& (0+255),b
 30850                           
 30851                           ;mdm_drv.c: 223: }
 30852  00495A  0012               	return	
 30853  00495C                     l319:
 30854                           
 30855                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 30856                           
 30857                           ; BSR set to: 2
 30858  00495C  0E3D               	movlw	low _MdmResetRequest
 30859  00495E  0100               	movlb	0	; () banked
 30860  004960  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30861  004962  0E00               	movlw	high _MdmResetRequest
 30862  004964  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30863  004966  EC15  F034         	call	_ReceiveEvt	;wreg free
 30864  00496A  0900               	iorlw	0
 30865  00496C  B4D8               	btfsc	status,2,c
 30866  00496E  0012               	return	
 30867                           
 30868                           ;mdm_drv.c: 225: {
 30869                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 30870  004970  0E03               	movlw	3
 30871  004972  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30872                           
 30873                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 30874  004974  8084               	bsf	3972,0,c	;volatile
 30875                           
 30876                           ;mdm_drv.c: 231: Counter = 0;
 30877  004976  0E00               	movlw	0
 30878  004978  0102               	movlb	2	; () banked
 30879  00497A  6FDA               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 30880  00497C  0E00               	movlw	0
 30881  00497E  6FD9               	movwf	MdmCntSm@Counter& (0+255),b
 30882                           
 30883                           ; BSR set to: 2
 30884                           ;mdm_drv.c: 236: }
 30885                           ;mdm_drv.c: 237: break;
 30886                           
 30887                           ; BSR set to: 2
 30888                           
 30889                           ;mdm_drv.c: 233: else
 30890                           ;mdm_drv.c: 234: {
 30891                           
 30892                           ; BSR set to: 2
 30893                           
 30894                           ;mdm_drv.c: 232: }
 30895  004980  0012               	return	
 30896  004982                     
 30897                           ;mdm_drv.c: 241: Counter++;
 30898                           
 30899                           ; BSR set to: 2
 30900  004982  0102               	movlb	2	; () banked
 30901  004984  4BD9               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30902  004986  2BDA               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30903                           
 30904                           ; BSR set to: 2
 30905                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 30906  004988  51DA               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30907  00498A  E104               	bnz	u14970
 30908  00498C  0E96               	movlw	150
 30909  00498E  5DD9               	subwf	MdmCntSm@Counter& (0+255),w,b
 30910  004990  A0D8               	btfss	status,0,c
 30911  004992  0012               	return	
 30912  004994                     u14970:
 30913                           
 30914                           ; BSR set to: 2
 30915                           ;mdm_drv.c: 244: {
 30916                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 30917  004994  9284               	bcf	3972,1,c	;volatile
 30918                           
 30919                           ; BSR set to: 2
 30920                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 30921  004996  0E01               	movlw	1
 30922  004998  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30923                           
 30924                           ; BSR set to: 2
 30925                           ;mdm_drv.c: 249: }
 30926                           ;mdm_drv.c: 250: break;
 30927  00499A  0012               	return	
 30928  00499C                     
 30929                           ;mdm_drv.c: 254: Counter++;
 30930                           
 30931                           ; BSR set to: 2
 30932  00499C  0102               	movlb	2	; () banked
 30933  00499E  4BD9               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30934  0049A0  2BDA               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30935                           
 30936                           ; BSR set to: 2
 30937                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 30938  0049A2  51DA               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30939  0049A4  E104               	bnz	u14980
 30940  0049A6  0E0A               	movlw	10
 30941  0049A8  5DD9               	subwf	MdmCntSm@Counter& (0+255),w,b
 30942  0049AA  A0D8               	btfss	status,0,c
 30943  0049AC  0012               	return	
 30944  0049AE                     u14980:
 30945                           
 30946                           ; BSR set to: 2
 30947                           ;mdm_drv.c: 257: {
 30948                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 30949  0049AE  9084               	bcf	3972,0,c	;volatile
 30950                           
 30951                           ; BSR set to: 2
 30952                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 30953  0049B0  0E01               	movlw	1
 30954  0049B2  6E2E               	movwf	MdmCntSm@MdmCntState,c
 30955                           
 30956                           ; BSR set to: 2
 30957                           ;mdm_drv.c: 267: }
 30958                           
 30959                           ; BSR set to: 2
 30960                           ;mdm_drv.c: 266: break;
 30961                           
 30962                           ;mdm_drv.c: 265: default:
 30963                           
 30964                           ; BSR set to: 2
 30965                           ;mdm_drv.c: 262: }
 30966                           ;mdm_drv.c: 263: break;
 30967  0049B4  0012               	return	
 30968  0049B6                     l315:
 30969                           
 30970                           ; BSR set to: 2
 30971  0049B6  502E               	movf	MdmCntSm@MdmCntState,w,c
 30972                           
 30973                           ; Switch size 1, requested type "space"
 30974                           ; Number of cases is 4, Range of values is 0 to 3
 30975                           ; switch strategies available:
 30976                           ; Name         Instructions Cycles
 30977                           ; simple_byte           13     7 (average)
 30978                           ;	Chosen strategy is simple_byte
 30979  0049B8  0A00               	xorlw	0	; case 0
 30980  0049BA  B4D8               	btfsc	status,2,c
 30981  0049BC  D7B7               	goto	l316
 30982  0049BE  0A01               	xorlw	1	; case 1
 30983  0049C0  B4D8               	btfsc	status,2,c
 30984  0049C2  D7B9               	goto	l318
 30985  0049C4  0A03               	xorlw	3	; case 2
 30986  0049C6  B4D8               	btfsc	status,2,c
 30987  0049C8  D7DC               	goto	l323
 30988  0049CA  0A01               	xorlw	1	; case 3
 30989  0049CC  A4D8               	btfss	status,2,c
 30990  0049CE  0012               	return	
 30991  0049D0  D7E5               	goto	l325
 30992  0049D2                     __end_of_MdmCntSm:
 30993                           	opt stack 0
 30994                           tosu	equ	0xFFF
 30995                           tosh	equ	0xFFE
 30996                           tosl	equ	0xFFD
 30997                           pclath	equ	0xFFA
 30998                           tblptru	equ	0xFF8
 30999                           tblptrh	equ	0xFF7
 31000                           tblptrl	equ	0xFF6
 31001                           tablat	equ	0xFF5
 31002                           prodh	equ	0xFF4
 31003                           prodl	equ	0xFF3
 31004                           intcon	equ	0xFF2
 31005                           intcon2	equ	0xFF1
 31006                           intcon3	equ	0xFF0
 31007                           indf0	equ	0xFEF
 31008                           postinc0	equ	0xFEE
 31009                           plusw0	equ	0xFEB
 31010                           fsr0h	equ	0xFEA
 31011                           fsr0l	equ	0xFE9
 31012                           wreg	equ	0xFE8
 31013                           indf1	equ	0xFE7
 31014                           postinc1	equ	0xFE6
 31015                           postdec1	equ	0xFE5
 31016                           plusw1	equ	0xFE3
 31017                           fsr1h	equ	0xFE2
 31018                           fsr1l	equ	0xFE1
 31019                           indf2	equ	0xFDF
 31020                           postinc2	equ	0xFDE
 31021                           postdec2	equ	0xFDD
 31022                           plusw2	equ	0xFDB
 31023                           fsr2h	equ	0xFDA
 31024                           fsr2l	equ	0xFD9
 31025                           status	equ	0xFD8
 31026                           
 31027 ;; *************** function _InitModemInterface *****************
 31028 ;; Defined at:
 31029 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 31030 ;; Parameters:    Size  Location     Type
 31031 ;;		None
 31032 ;; Auto vars:     Size  Location     Type
 31033 ;;		None
 31034 ;; Return value:  Size  Location     Type
 31035 ;;                  1    wreg      void 
 31036 ;; Registers used:
 31037 ;;		None
 31038 ;; Tracked objects:
 31039 ;;		On entry : 0/0
 31040 ;;		On exit  : 0/0
 31041 ;;		Unchanged: 0/0
 31042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31047 ;;Total ram usage:        0 bytes
 31048 ;; Hardware stack levels used:    1
 31049 ;; Hardware stack levels required when called:   11
 31050 ;; This function calls:
 31051 ;;		Nothing
 31052 ;; This function is called by:
 31053 ;;		_MdmCntSm
 31054 ;; This function uses a non-reentrant model
 31055 ;;
 31056                           
 31057                           	psect	text145
 31058  006D94                     __ptext145:
 31059                           	opt stack 0
 31060  006D94                     _InitModemInterface:
 31061                           	opt stack 15
 31062                           
 31063                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 31064                           
 31065                           ;incstack = 0
 31066  006D94  9096               	bcf	3990,0,c	;volatile
 31067                           
 31068                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 31069  006D96  9296               	bcf	3990,1,c	;volatile
 31070                           
 31071                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 31072  006D98  8496               	bsf	3990,2,c	;volatile
 31073  006D9A  0012               	return		;funcret
 31074  006D9C                     __end_of_InitModemInterface:
 31075                           	opt stack 0
 31076                           tosu	equ	0xFFF
 31077                           tosh	equ	0xFFE
 31078                           tosl	equ	0xFFD
 31079                           pclath	equ	0xFFA
 31080                           tblptru	equ	0xFF8
 31081                           tblptrh	equ	0xFF7
 31082                           tblptrl	equ	0xFF6
 31083                           tablat	equ	0xFF5
 31084                           prodh	equ	0xFF4
 31085                           prodl	equ	0xFF3
 31086                           intcon	equ	0xFF2
 31087                           intcon2	equ	0xFF1
 31088                           intcon3	equ	0xFF0
 31089                           indf0	equ	0xFEF
 31090                           postinc0	equ	0xFEE
 31091                           plusw0	equ	0xFEB
 31092                           fsr0h	equ	0xFEA
 31093                           fsr0l	equ	0xFE9
 31094                           wreg	equ	0xFE8
 31095                           indf1	equ	0xFE7
 31096                           postinc1	equ	0xFE6
 31097                           postdec1	equ	0xFE5
 31098                           plusw1	equ	0xFE3
 31099                           fsr1h	equ	0xFE2
 31100                           fsr1l	equ	0xFE1
 31101                           indf2	equ	0xFDF
 31102                           postinc2	equ	0xFDE
 31103                           postdec2	equ	0xFDD
 31104                           plusw2	equ	0xFDB
 31105                           fsr2h	equ	0xFDA
 31106                           fsr2l	equ	0xFD9
 31107                           status	equ	0xFD8
 31108                           
 31109 ;; *************** function _InitGprsNetwork *****************
 31110 ;; Defined at:
 31111 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 31112 ;; Parameters:    Size  Location     Type
 31113 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 31114 ;;		 -> NULL(0), 
 31115 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 31116 ;; Auto vars:     Size  Location     Type
 31117 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 31118 ;;  Index           1   50[BANK1 ] unsigned char 
 31119 ;; Return value:  Size  Location     Type
 31120 ;;                  1    wreg      enum E8926
 31121 ;; Registers used:
 31122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31123 ;; Tracked objects:
 31124 ;;		On entry : 0/0
 31125 ;;		On exit  : 0/0
 31126 ;;		Unchanged: 0/0
 31127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31128 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31129 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31130 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31131 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31132 ;;Total ram usage:       56 bytes
 31133 ;; Hardware stack levels used:    1
 31134 ;; Hardware stack levels required when called:   14
 31135 ;; This function calls:
 31136 ;;		_ClearBuffer
 31137 ;;		_OsTmr_GetTimerStatus
 31138 ;;		_OsTmr_StartTimer
 31139 ;;		_ReceiveEvt
 31140 ;;		_StringCopy
 31141 ;;		_Uart_WriteConstString
 31142 ;;		_Uart_WriteString
 31143 ;; This function is called by:
 31144 ;;		_MdmHttp_MainTask
 31145 ;; This function uses a non-reentrant model
 31146 ;;
 31147                           
 31148                           	psect	text146
 31149  000DCE                     __ptext146:
 31150                           	opt stack 0
 31151  000DCE                     _InitGprsNetwork:
 31152                           	opt stack 13
 31153                           
 31154                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 31155                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 31156                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 31157                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 31158                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 31159                           
 31160                           ;incstack = 0
 31161  000DCE  0E00               	movlw	0
 31162  000DD0  0101               	movlb	1	; () banked
 31163  000DD2  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 31164                           
 31165                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 31166  000DD4  D154               	goto	l1219
 31167  000DD6                     
 31168                           ; BSR set to: 1
 31169                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 31170                           
 31171                           ; BSR set to: 1
 31172  000DD6  0ED8               	movlw	low _InitNetwork
 31173  000DD8  0100               	movlb	0	; () banked
 31174  000DDA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31175  000DDC  0E00               	movlw	high _InitNetwork
 31176  000DDE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31177  000DE0  EC15  F034         	call	_ReceiveEvt	;wreg free
 31178  000DE4  0900               	iorlw	0
 31179  000DE6  B4D8               	btfsc	status,2,c
 31180  000DE8  D166               	goto	l1222
 31181                           
 31182                           ;mdm_gsm_gprs_http.c: 137: {
 31183                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 31184  000DEA  0E01               	movlw	1
 31185  000DEC  D141               	goto	L103
 31186  000DEE                     
 31187                           ; BSR set to: 1
 31188                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 31189                           
 31190                           ; BSR set to: 1
 31191  000DEE  0E89               	movlw	low STR_8
 31192  000DF0  0100               	movlb	0	; () banked
 31193  000DF2  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31194  000DF4  0EFE               	movlw	high STR_8
 31195  000DF6  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31196  000DF8  0E01               	movlw	1
 31197  000DFA  ECAC  F031         	call	_Uart_WriteConstString
 31198                           
 31199                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 31200  000DFE  0E07               	movlw	7
 31201  000E00  0101               	movlb	1	; () banked
 31202  000E02  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31203                           
 31204                           ; BSR set to: 1
 31205                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 31206  000E04  0E02               	movlw	2
 31207  000E06  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31208                           
 31209                           ; BSR set to: 1
 31210                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 31211  000E08  0EF3               	movlw	low _ConnTimeout
 31212  000E0A  0100               	movlb	0	; () banked
 31213  000E0C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31214  000E0E  0E02               	movlw	high _ConnTimeout
 31215  000E10  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31216  000E12  0E20               	movlw	32
 31217  000E14  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31218  000E16  0E4E               	movlw	78
 31219  000E18  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31220  000E1A  0E00               	movlw	0
 31221  000E1C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31222  000E1E  0E00               	movlw	0
 31223  000E20  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31224  000E22  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 31225  000E26  D0C7               	goto	l15969
 31226  000E28                     
 31227                           ; BSR set to: 1
 31228                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 31229                           
 31230                           ; BSR set to: 1
 31231  000E28  0E00               	movlw	low InitGprsNetwork@UartMessage
 31232  000E2A  0100               	movlb	0	; () banked
 31233  000E2C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31234  000E2E  0E01               	movlw	high InitGprsNetwork@UartMessage
 31235  000E30  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31236  000E32  0E00               	movlw	0
 31237  000E34  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31238  000E36  0E32               	movlw	50
 31239  000E38  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31240  000E3A  EC37  F033         	call	_ClearBuffer	;wreg free
 31241                           
 31242                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 31243  000E3E  0EBD               	movlw	low STR_9
 31244  000E40  0100               	movlb	0	; () banked
 31245  000E42  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31246  000E44  0EFE               	movlw	high STR_9
 31247  000E46  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31248  000E48  0E00               	movlw	low InitGprsNetwork@UartMessage
 31249  000E4A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 31250  000E4C  0E01               	movlw	high InitGprsNetwork@UartMessage
 31251  000E4E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 31252  000E50  0E00               	movlw	0
 31253  000E52  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31254  000E54  0E14               	movlw	20
 31255  000E56  6F89               	movwf	StringCopy@Len& (0+255),b
 31256  000E58  ECC4  F02C         	call	_StringCopy	;wreg free
 31257                           
 31258                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 31259  000E5C  0E00               	movlw	0
 31260  000E5E  0101               	movlb	1	; () banked
 31261  000E60  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 31262  000E62  D01C               	goto	l1225
 31263  000E64                     
 31264                           ; BSR set to: 1
 31265                           ;mdm_gsm_gprs_http.c: 161: {
 31266                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 31267                           
 31268                           ; BSR set to: 1
 31269  000E64  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31270  000E66  0D01               	mullw	1
 31271  000E68  50F3               	movf	prodl,w,c
 31272  000E6A  0100               	movlb	0	; () banked
 31273  000E6C  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 31274  000E6E  6ED9               	movwf	fsr2l,c
 31275  000E70  50F4               	movf	prodh,w,c
 31276  000E72  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 31277  000E74  6EDA               	movwf	fsr2h,c
 31278  000E76  0101               	movlb	1	; () banked
 31279  000E78  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31280  000E7A  0100               	movlb	0	; () banked
 31281  000E7C  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31282  000E7E  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31283  000E80  0E14               	movlw	20
 31284  000E82  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31285  000E84  0E00               	movlw	0
 31286  000E86  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31287  000E88  0E00               	movlw	low InitGprsNetwork@UartMessage
 31288  000E8A  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31289  000E8C  6EE1               	movwf	fsr1l,c
 31290  000E8E  0E01               	movlw	high InitGprsNetwork@UartMessage
 31291  000E90  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31292  000E92  6EE2               	movwf	fsr1h,c
 31293  000E94  CFDF FFE7          	movff	indf2,indf1
 31294                           
 31295                           ; BSR set to: 0
 31296  000E98  0101               	movlb	1	; () banked
 31297  000E9A  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 31298  000E9C                     l1225:
 31299                           
 31300                           ; BSR set to: 1
 31301                           
 31302                           ; BSR set to: 1
 31303  000E9C  0100               	movlb	0	; () banked
 31304  000E9E  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 31305  000EA0  0101               	movlb	1	; () banked
 31306  000EA2  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 31307  000EA4  A0D8               	btfss	status,0,c
 31308  000EA6  D7DE               	goto	l1226
 31309                           
 31310                           ; BSR set to: 1
 31311                           ;mdm_gsm_gprs_http.c: 163: }
 31312                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 31313                           
 31314                           ; BSR set to: 1
 31315  000EA8  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31316  000EAA  0100               	movlb	0	; () banked
 31317  000EAC  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31318  000EAE  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31319  000EB0  0E14               	movlw	20
 31320  000EB2  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31321  000EB4  0E00               	movlw	0
 31322  000EB6  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31323  000EB8  0E00               	movlw	low InitGprsNetwork@UartMessage
 31324  000EBA  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31325  000EBC  6ED9               	movwf	fsr2l,c
 31326  000EBE  0E01               	movlw	high InitGprsNetwork@UartMessage
 31327  000EC0  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31328  000EC2  6EDA               	movwf	fsr2h,c
 31329  000EC4  0E22               	movlw	34
 31330  000EC6  6EDF               	movwf	indf2,c
 31331                           
 31332                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 31333  000EC8  0101               	movlb	1	; () banked
 31334  000ECA  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31335  000ECC  0100               	movlb	0	; () banked
 31336  000ECE  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31337  000ED0  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31338  000ED2  0E15               	movlw	21
 31339  000ED4  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31340  000ED6  0E00               	movlw	0
 31341  000ED8  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31342  000EDA  0E00               	movlw	low InitGprsNetwork@UartMessage
 31343  000EDC  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31344  000EDE  6ED9               	movwf	fsr2l,c
 31345  000EE0  0E01               	movlw	high InitGprsNetwork@UartMessage
 31346  000EE2  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31347  000EE4  6EDA               	movwf	fsr2h,c
 31348  000EE6  0E0D               	movlw	13
 31349  000EE8  6EDF               	movwf	indf2,c
 31350                           
 31351                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 31352  000EEA  0101               	movlb	1	; () banked
 31353  000EEC  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 31354  000EEE  0100               	movlb	0	; () banked
 31355  000EF0  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 31356  000EF2  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 31357  000EF4  0E16               	movlw	22
 31358  000EF6  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 31359  000EF8  0E00               	movlw	0
 31360  000EFA  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 31361  000EFC  0E00               	movlw	low InitGprsNetwork@UartMessage
 31362  000EFE  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 31363  000F00  6ED9               	movwf	fsr2l,c
 31364  000F02  0E01               	movlw	high InitGprsNetwork@UartMessage
 31365  000F04  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 31366  000F06  6EDA               	movwf	fsr2h,c
 31367  000F08  0E00               	movlw	0
 31368  000F0A  6EDF               	movwf	indf2,c
 31369                           
 31370                           ; BSR set to: 0
 31371                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 31372  000F0C  0E00               	movlw	low InitGprsNetwork@UartMessage
 31373  000F0E  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 31374  000F10  0E01               	movlw	high InitGprsNetwork@UartMessage
 31375  000F12  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 31376  000F14  0E01               	movlw	1
 31377  000F16  EC6C  F032         	call	_Uart_WriteString
 31378                           
 31379                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 31380  000F1A  0E07               	movlw	7
 31381  000F1C  0101               	movlb	1	; () banked
 31382  000F1E  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31383                           
 31384                           ; BSR set to: 1
 31385                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 31386  000F20  0E03               	movlw	3
 31387  000F22  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31388                           
 31389                           ; BSR set to: 1
 31390                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 31391  000F24  0EF3               	movlw	low _ConnTimeout
 31392  000F26  0100               	movlb	0	; () banked
 31393  000F28  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31394  000F2A  0E02               	movlw	high _ConnTimeout
 31395  000F2C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31396  000F2E  0E20               	movlw	32
 31397  000F30  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31398  000F32  0E4E               	movlw	78
 31399  000F34  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31400  000F36  0E00               	movlw	0
 31401  000F38  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31402  000F3A  0E00               	movlw	0
 31403  000F3C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31404  000F3E  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 31405  000F42  D039               	goto	l15969
 31406  000F44                     
 31407                           ; BSR set to: 1
 31408                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 31409                           
 31410                           ; BSR set to: 1
 31411  000F44  0E4B               	movlw	low STR_10
 31412  000F46  0100               	movlb	0	; () banked
 31413  000F48  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31414  000F4A  0EFF               	movlw	high STR_10
 31415  000F4C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31416  000F4E  0E01               	movlw	1
 31417  000F50  ECAC  F031         	call	_Uart_WriteConstString
 31418                           
 31419                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 31420  000F54  0E07               	movlw	7
 31421  000F56  0101               	movlb	1	; () banked
 31422  000F58  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31423                           
 31424                           ; BSR set to: 1
 31425                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 31426  000F5A  0E05               	movlw	5
 31427  000F5C  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31428                           
 31429                           ; BSR set to: 1
 31430                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 31431  000F5E  0EF3               	movlw	low _ConnTimeout
 31432  000F60  0100               	movlb	0	; () banked
 31433  000F62  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31434  000F64  0E02               	movlw	high _ConnTimeout
 31435  000F66  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31436  000F68  0E20               	movlw	32
 31437  000F6A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31438  000F6C  0E4E               	movlw	78
 31439  000F6E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31440  000F70  0E00               	movlw	0
 31441  000F72  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31442  000F74  0E00               	movlw	0
 31443  000F76  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31444  000F78  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 31445  000F7C  D01C               	goto	l15969
 31446  000F7E                     
 31447                           ; BSR set to: 1
 31448                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 31449                           
 31450                           ; BSR set to: 1
 31451  000F7E  0E59               	movlw	low STR_11
 31452  000F80  0100               	movlb	0	; () banked
 31453  000F82  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31454  000F84  0EFF               	movlw	high STR_11
 31455  000F86  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31456  000F88  0E01               	movlw	1
 31457  000F8A  ECAC  F031         	call	_Uart_WriteConstString
 31458                           
 31459                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 31460  000F8E  0E08               	movlw	8
 31461  000F90  0101               	movlb	1	; () banked
 31462  000F92  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31463                           
 31464                           ; BSR set to: 1
 31465                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 31466  000F94  0E05               	movlw	5
 31467  000F96  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 31468                           
 31469                           ; BSR set to: 1
 31470                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 31471  000F98  0EF3               	movlw	low _ConnTimeout
 31472  000F9A  0100               	movlb	0	; () banked
 31473  000F9C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31474  000F9E  0E02               	movlw	high _ConnTimeout
 31475  000FA0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31476  000FA2  0E20               	movlw	32
 31477  000FA4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31478  000FA6  0E4E               	movlw	78
 31479  000FA8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31480  000FAA  0E00               	movlw	0
 31481  000FAC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31482  000FAE  0E00               	movlw	0
 31483  000FB0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31484  000FB2  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 31485  000FB6                     l15969:
 31486                           
 31487                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 31488  000FB6  0E01               	movlw	1
 31489  000FB8  0101               	movlb	1	; () banked
 31490  000FBA  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 31491                           
 31492                           ;mdm_gsm_gprs_http.c: 201: break;
 31493  000FBC  D07C               	goto	l1222
 31494  000FBE                     
 31495                           ; BSR set to: 1
 31496                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 31497                           
 31498                           ; BSR set to: 1
 31499  000FBE  0E02               	movlw	2
 31500  000FC0  D05A               	goto	L102
 31501  000FC2                     
 31502                           ; BSR set to: 1
 31503                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 31504                           
 31505                           ; BSR set to: 1
 31506  000FC2  0E3C               	movlw	low _NewStringReceived
 31507  000FC4  0100               	movlb	0	; () banked
 31508  000FC6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31509  000FC8  0E00               	movlw	high _NewStringReceived
 31510  000FCA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31511  000FCC  EC15  F034         	call	_ReceiveEvt	;wreg free
 31512  000FD0  0900               	iorlw	0
 31513  000FD2  B4D8               	btfsc	status,2,c
 31514  000FD4  D018               	goto	l1232
 31515                           
 31516                           ;mdm_gsm_gprs_http.c: 212: {
 31517                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 31518  000FD6  CC58  FFE8         	movff	_RxBuffer,wreg
 31519  000FDA  0A4F               	xorlw	79
 31520  000FDC  A4D8               	btfss	status,2,c
 31521  000FDE  D06B               	goto	l1222
 31522  000FE0  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31523  000FE4  0A4B               	xorlw	75
 31524  000FE6  A4D8               	btfss	status,2,c
 31525  000FE8  D066               	goto	l1222
 31526                           
 31527                           ;mdm_gsm_gprs_http.c: 215: {
 31528                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 31529  000FEA  C02A  F1E7         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 31530                           
 31531                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 31532  000FEE  0E58               	movlw	low _RxBuffer
 31533  000FF0  0100               	movlb	0	; () banked
 31534  000FF2  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31535  000FF4  0E0C               	movlw	high _RxBuffer
 31536  000FF6  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31537  000FF8  0E01               	movlw	1
 31538  000FFA  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31539  000FFC  0E90               	movlw	144
 31540  000FFE  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31541  001000  EC37  F033         	call	_ClearBuffer	;wreg free
 31542                           
 31543                           ;mdm_gsm_gprs_http.c: 220: }
 31544                           ;mdm_gsm_gprs_http.c: 221: }
 31545  001004  D058               	goto	l1222
 31546  001006                     l1232:
 31547                           
 31548                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31549  001006  0EF3               	movlw	low _ConnTimeout
 31550  001008  0100               	movlb	0	; () banked
 31551  00100A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31552  00100C  0E02               	movlw	high _ConnTimeout
 31553  00100E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31554  001010  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31555  001014  D029               	goto	L66
 31556  001016                     
 31557                           ; BSR set to: 1
 31558                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 31559                           
 31560                           ; BSR set to: 1
 31561  001016  0E3C               	movlw	low _NewStringReceived
 31562  001018  0100               	movlb	0	; () banked
 31563  00101A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31564  00101C  0E00               	movlw	high _NewStringReceived
 31565  00101E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31566  001020  EC15  F034         	call	_ReceiveEvt	;wreg free
 31567  001024  0900               	iorlw	0
 31568  001026  B4D8               	btfsc	status,2,c
 31569  001028  D018               	goto	l1237
 31570                           
 31571                           ;mdm_gsm_gprs_http.c: 232: {
 31572                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 31573  00102A  CC58  FFE8         	movff	_RxBuffer,wreg
 31574  00102E  0A2B               	xorlw	43
 31575  001030  A4D8               	btfss	status,2,c
 31576  001032  D041               	goto	l1222
 31577  001034  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31578  001038  0A53               	xorlw	83
 31579  00103A  A4D8               	btfss	status,2,c
 31580  00103C  D03C               	goto	l1222
 31581                           
 31582                           ;mdm_gsm_gprs_http.c: 235: {
 31583                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 31584  00103E  C02A  F1E7         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 31585                           
 31586                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 31587  001042  0E58               	movlw	low _RxBuffer
 31588  001044  0100               	movlb	0	; () banked
 31589  001046  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31590  001048  0E0C               	movlw	high _RxBuffer
 31591  00104A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31592  00104C  0E01               	movlw	1
 31593  00104E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31594  001050  0E90               	movlw	144
 31595  001052  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31596  001054  EC37  F033         	call	_ClearBuffer	;wreg free
 31597                           
 31598                           ;mdm_gsm_gprs_http.c: 240: }
 31599                           ;mdm_gsm_gprs_http.c: 241: }
 31600  001058  D02E               	goto	l1222
 31601  00105A                     l1237:
 31602                           
 31603                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31604  00105A  0EF3               	movlw	low _ConnTimeout
 31605  00105C  0100               	movlb	0	; () banked
 31606  00105E  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31607  001060  0E02               	movlw	high _ConnTimeout
 31608  001062  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31609  001064  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 31610  001068                     L66:
 31611  001068  06E8               	decf	wreg,f,c
 31612  00106A  A4D8               	btfss	status,2,c
 31613  00106C  D024               	goto	l1222
 31614                           
 31615                           ;mdm_gsm_gprs_http.c: 243: {
 31616                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 31617  00106E  0E06               	movlw	6
 31618  001070                     L103:
 31619  001070  0101               	movlb	1	; () banked
 31620  001072  D003               	goto	L65
 31621  001074                     
 31622                           ; BSR set to: 1
 31623                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 31624                           
 31625                           ; BSR set to: 1
 31626  001074  0E03               	movlw	3
 31627  001076                     L102:
 31628  001076  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 31629                           
 31630                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 31631  001078  0E00               	movlw	0
 31632  00107A                     L65:
 31633  00107A  6FE7               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 31634                           
 31635                           ; BSR set to: 1
 31636                           ;mdm_gsm_gprs_http.c: 257: }
 31637                           
 31638                           ; BSR set to: 1
 31639                           ;mdm_gsm_gprs_http.c: 256: break;
 31640                           
 31641                           ;mdm_gsm_gprs_http.c: 255: default:
 31642                           
 31643                           ;mdm_gsm_gprs_http.c: 253: break;
 31644  00107C  D01C               	goto	l1222
 31645  00107E                     l1219:
 31646                           
 31647                           ; BSR set to: 1
 31648                           
 31649                           ; BSR set to: 1
 31650  00107E  51E7               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 31651                           
 31652                           ; Switch size 1, requested type "space"
 31653                           ; Number of cases is 9, Range of values is 0 to 8
 31654                           ; switch strategies available:
 31655                           ; Name         Instructions Cycles
 31656                           ; simple_byte           28    15 (average)
 31657                           ;	Chosen strategy is simple_byte
 31658  001080  0A00               	xorlw	0	; case 0
 31659  001082  B4D8               	btfsc	status,2,c
 31660  001084  D6A8               	goto	l1220
 31661  001086  0A01               	xorlw	1	; case 1
 31662  001088  B4D8               	btfsc	status,2,c
 31663  00108A  D6B1               	goto	l1223
 31664  00108C  0A03               	xorlw	3	; case 2
 31665  00108E  B4D8               	btfsc	status,2,c
 31666  001090  D6CB               	goto	l1224
 31667  001092  0A01               	xorlw	1	; case 3
 31668  001094  B4D8               	btfsc	status,2,c
 31669  001096  D756               	goto	l1228
 31670  001098  0A07               	xorlw	7	; case 4
 31671  00109A  B4D8               	btfsc	status,2,c
 31672  00109C  D770               	goto	l1229
 31673  00109E  0A01               	xorlw	1	; case 5
 31674  0010A0  B4D8               	btfsc	status,2,c
 31675  0010A2  D78D               	goto	l1230
 31676  0010A4  0A03               	xorlw	3	; case 6
 31677  0010A6  B4D8               	btfsc	status,2,c
 31678  0010A8  D7E5               	goto	l1241
 31679  0010AA  0A01               	xorlw	1	; case 7
 31680  0010AC  B4D8               	btfsc	status,2,c
 31681  0010AE  D789               	goto	l1231
 31682  0010B0  0A0F               	xorlw	15	; case 8
 31683  0010B2  B4D8               	btfsc	status,2,c
 31684  0010B4  D7B0               	goto	l1236
 31685  0010B6                     l1222:
 31686                           
 31687                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 31688                           
 31689                           ; BSR set to: 1
 31690  0010B6  0101               	movlb	1	; () banked
 31691  0010B8  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 31692  0010BA  0012               	return	
 31693  0010BC                     __end_of_InitGprsNetwork:
 31694                           	opt stack 0
 31695                           tosu	equ	0xFFF
 31696                           tosh	equ	0xFFE
 31697                           tosl	equ	0xFFD
 31698                           pclath	equ	0xFFA
 31699                           tblptru	equ	0xFF8
 31700                           tblptrh	equ	0xFF7
 31701                           tblptrl	equ	0xFF6
 31702                           tablat	equ	0xFF5
 31703                           prodh	equ	0xFF4
 31704                           prodl	equ	0xFF3
 31705                           intcon	equ	0xFF2
 31706                           intcon2	equ	0xFF1
 31707                           intcon3	equ	0xFF0
 31708                           indf0	equ	0xFEF
 31709                           postinc0	equ	0xFEE
 31710                           plusw0	equ	0xFEB
 31711                           fsr0h	equ	0xFEA
 31712                           fsr0l	equ	0xFE9
 31713                           wreg	equ	0xFE8
 31714                           indf1	equ	0xFE7
 31715                           postinc1	equ	0xFE6
 31716                           postdec1	equ	0xFE5
 31717                           plusw1	equ	0xFE3
 31718                           fsr1h	equ	0xFE2
 31719                           fsr1l	equ	0xFE1
 31720                           indf2	equ	0xFDF
 31721                           postinc2	equ	0xFDE
 31722                           postdec2	equ	0xFDD
 31723                           plusw2	equ	0xFDB
 31724                           fsr2h	equ	0xFDA
 31725                           fsr2l	equ	0xFD9
 31726                           status	equ	0xFD8
 31727                           
 31728 ;; *************** function _HttpGetMethod *****************
 31729 ;; Defined at:
 31730 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 31731 ;; Parameters:    Size  Location     Type
 31732 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 31733 ;;		 -> HttpGetDataLocal(5), 
 31734 ;; Auto vars:     Size  Location     Type
 31735 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 31736 ;;  Index           1  200[BANK1 ] unsigned char 
 31737 ;; Return value:  Size  Location     Type
 31738 ;;                  1    wreg      enum E8926
 31739 ;; Registers used:
 31740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31741 ;; Tracked objects:
 31742 ;;		On entry : 0/0
 31743 ;;		On exit  : 0/0
 31744 ;;		Unchanged: 0/0
 31745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31746 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31747 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31748 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31749 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31750 ;;Total ram usage:      207 bytes
 31751 ;; Hardware stack levels used:    1
 31752 ;; Hardware stack levels required when called:   14
 31753 ;; This function calls:
 31754 ;;		_ClearBuffer
 31755 ;;		_OsTmr_GetTimerStatus
 31756 ;;		_OsTmr_StartTimer
 31757 ;;		_ReceiveEvt
 31758 ;;		_StringCopy
 31759 ;;		_Uart_WriteConstString
 31760 ;;		_Uart_WriteString
 31761 ;; This function is called by:
 31762 ;;		_MdmHttp_MainTask
 31763 ;; This function uses a non-reentrant model
 31764 ;;
 31765                           
 31766                           	psect	text147
 31767  0005F2                     __ptext147:
 31768                           	opt stack 0
 31769  0005F2                     _HttpGetMethod:
 31770                           	opt stack 13
 31771                           
 31772                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 31773                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 31774                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 31775                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 31776                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 31777                           
 31778                           ; BSR set to: 1
 31779                           ;incstack = 0
 31780  0005F2  0E00               	movlw	0
 31781  0005F4  0101               	movlb	1	; () banked
 31782  0005F6  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31783                           
 31784                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 31785  0005F8  D230               	goto	l1252
 31786  0005FA                     
 31787                           ; BSR set to: 1
 31788                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 31789                           
 31790                           ; BSR set to: 1
 31791  0005FA  0EFC               	movlw	low _GetMethod
 31792  0005FC  0100               	movlb	0	; () banked
 31793  0005FE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31794  000600  0E01               	movlw	high _GetMethod
 31795  000602  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31796  000604  EC15  F034         	call	_ReceiveEvt	;wreg free
 31797  000608  0900               	iorlw	0
 31798  00060A  B4D8               	btfsc	status,2,c
 31799  00060C  D257               	goto	l1255
 31800                           
 31801                           ;mdm_gsm_gprs_http.c: 284: {
 31802                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 31803  00060E  0E01               	movlw	1
 31804  000610  D18C               	goto	L68
 31805  000612                     
 31806                           ; BSR set to: 1
 31807                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 31808                           
 31809                           ; BSR set to: 1
 31810  000612  0E9D               	movlw	low STR_12
 31811  000614  0100               	movlb	0	; () banked
 31812  000616  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31813  000618  0EFF               	movlw	high STR_12
 31814  00061A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31815  00061C  0E01               	movlw	1
 31816  00061E  ECAC  F031         	call	_Uart_WriteConstString
 31817                           
 31818                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 31819  000622  0E0A               	movlw	10
 31820  000624  0101               	movlb	1	; () banked
 31821  000626  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31822                           
 31823                           ; BSR set to: 1
 31824                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 31825  000628  0E02               	movlw	2
 31826  00062A  0100               	movlb	0	; () banked
 31827  00062C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31828                           
 31829                           ; BSR set to: 0
 31830                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 31831  00062E  0EF3               	movlw	low _ConnTimeout
 31832  000630  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31833  000632  0E02               	movlw	high _ConnTimeout
 31834  000634  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31835  000636  0E20               	movlw	32
 31836  000638  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31837  00063A  0E4E               	movlw	78
 31838  00063C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31839  00063E  0E00               	movlw	0
 31840  000640  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31841  000642  0E00               	movlw	0
 31842  000644  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31843  000646  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 31844  00064A  D1AF               	goto	l16135
 31845  00064C                     
 31846                           ; BSR set to: 1
 31847                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 31848                           
 31849                           ; BSR set to: 1
 31850  00064C  0E67               	movlw	low STR_13
 31851  00064E  0100               	movlb	0	; () banked
 31852  000650  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31853  000652  0EFF               	movlw	high STR_13
 31854  000654  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31855  000656  0E01               	movlw	1
 31856  000658  ECAC  F031         	call	_Uart_WriteConstString
 31857                           
 31858                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 31859  00065C  0E0A               	movlw	10
 31860  00065E  0101               	movlb	1	; () banked
 31861  000660  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31862                           
 31863                           ; BSR set to: 1
 31864                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 31865  000662  0E03               	movlw	3
 31866  000664  0100               	movlb	0	; () banked
 31867  000666  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31868                           
 31869                           ; BSR set to: 0
 31870                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 31871  000668  0EF3               	movlw	low _ConnTimeout
 31872  00066A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31873  00066C  0E02               	movlw	high _ConnTimeout
 31874  00066E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31875  000670  0E20               	movlw	32
 31876  000672  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31877  000674  0E4E               	movlw	78
 31878  000676  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31879  000678  0E00               	movlw	0
 31880  00067A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31881  00067C  0E00               	movlw	0
 31882  00067E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31883  000680  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 31884  000684  D192               	goto	l16135
 31885  000686                     
 31886                           ; BSR set to: 1
 31887                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 31888                           
 31889                           ; BSR set to: 1
 31890  000686  0EA8               	movlw	low STR_14
 31891  000688  0100               	movlb	0	; () banked
 31892  00068A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31893  00068C  0EFE               	movlw	high STR_14
 31894  00068E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31895  000690  0E01               	movlw	1
 31896  000692  ECAC  F031         	call	_Uart_WriteConstString
 31897                           
 31898                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 31899  000696  0E0A               	movlw	10
 31900  000698  0101               	movlb	1	; () banked
 31901  00069A  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31902                           
 31903                           ; BSR set to: 1
 31904                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 31905  00069C  0E04               	movlw	4
 31906  00069E  0100               	movlb	0	; () banked
 31907  0006A0  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31908                           
 31909                           ; BSR set to: 0
 31910                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 31911  0006A2  0EF3               	movlw	low _ConnTimeout
 31912  0006A4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31913  0006A6  0E02               	movlw	high _ConnTimeout
 31914  0006A8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31915  0006AA  0E20               	movlw	32
 31916  0006AC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31917  0006AE  0E4E               	movlw	78
 31918  0006B0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31919  0006B2  0E00               	movlw	0
 31920  0006B4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31921  0006B6  0E00               	movlw	0
 31922  0006B8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31923  0006BA  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 31924  0006BE  D175               	goto	l16135
 31925  0006C0                     
 31926                           ; BSR set to: 1
 31927                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 31928                           
 31929                           ; BSR set to: 1
 31930  0006C0  0E00               	movlw	low HttpGetMethod@UartMessage
 31931  0006C2  0100               	movlb	0	; () banked
 31932  0006C4  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31933  0006C6  0E01               	movlw	high HttpGetMethod@UartMessage
 31934  0006C8  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31935  0006CA  0E00               	movlw	0
 31936  0006CC  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31937  0006CE  0EC8               	movlw	200
 31938  0006D0  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31939  0006D2  EC37  F033         	call	_ClearBuffer	;wreg free
 31940                           
 31941                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 31942  0006D6  0EE6               	movlw	low STR_15
 31943  0006D8  0100               	movlb	0	; () banked
 31944  0006DA  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31945  0006DC  0EFE               	movlw	high STR_15
 31946  0006DE  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31947  0006E0  0E00               	movlw	low HttpGetMethod@UartMessage
 31948  0006E2  6F87               	movwf	StringCopy@DestStr& (0+255),b
 31949  0006E4  0E01               	movlw	high HttpGetMethod@UartMessage
 31950  0006E6  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 31951  0006E8  0E00               	movlw	0
 31952  0006EA  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31953  0006EC  0E13               	movlw	19
 31954  0006EE  6F89               	movwf	StringCopy@Len& (0+255),b
 31955  0006F0  ECC4  F02C         	call	_StringCopy	;wreg free
 31956                           
 31957                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 31958  0006F4  0E00               	movlw	0
 31959  0006F6  0101               	movlb	1	; () banked
 31960  0006F8  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31961  0006FA  D024               	goto	l1260
 31962  0006FC                     
 31963                           ; BSR set to: 1
 31964                           ;mdm_gsm_gprs_http.c: 332: {
 31965                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 31966                           
 31967                           ; BSR set to: 1
 31968  0006FC  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31969  0006FE  0D01               	mullw	1
 31970  000700  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 31971  000704  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 31972  000708  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 31973  00070C  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 31974  000710  50F3               	movf	prodl,w,c
 31975  000712  0100               	movlb	0	; () banked
 31976  000714  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31977  000716  6ED9               	movwf	fsr2l,c
 31978  000718  50F4               	movf	prodh,w,c
 31979  00071A  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31980  00071C  6EDA               	movwf	fsr2h,c
 31981  00071E  0101               	movlb	1	; () banked
 31982  000720  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31983  000722  0100               	movlb	0	; () banked
 31984  000724  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 31985  000726  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 31986  000728  0E13               	movlw	19
 31987  00072A  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 31988  00072C  0E00               	movlw	0
 31989  00072E  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 31990  000730  0E00               	movlw	low HttpGetMethod@UartMessage
 31991  000732  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 31992  000734  6EE1               	movwf	fsr1l,c
 31993  000736  0E01               	movlw	high HttpGetMethod@UartMessage
 31994  000738  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 31995  00073A  6EE2               	movwf	fsr1h,c
 31996  00073C  CFDF FFE7          	movff	indf2,indf1
 31997                           
 31998                           ; BSR set to: 0
 31999  000740  0101               	movlb	1	; () banked
 32000  000742  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 32001  000744                     l1260:
 32002                           
 32003                           ; BSR set to: 1
 32004                           
 32005                           ; BSR set to: 1
 32006  000744  0100               	movlb	0	; () banked
 32007  000746  EE20 F002          	lfsr	2,2
 32008  00074A  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 32009  00074C  26D9               	addwf	fsr2l,f,c
 32010  00074E  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 32011  000750  22DA               	addwfc	fsr2h,f,c
 32012  000752  50DE               	movf	postinc2,w,c
 32013  000754  0101               	movlb	1	; () banked
 32014  000756  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 32015  000758  A0D8               	btfss	status,0,c
 32016  00075A  D7D0               	goto	l1261
 32017                           
 32018                           ; BSR set to: 1
 32019                           ;mdm_gsm_gprs_http.c: 334: }
 32020                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 32021                           
 32022                           ; BSR set to: 1
 32023  00075C  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 32024  00075E  0100               	movlb	0	; () banked
 32025  000760  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 32026  000762  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 32027  000764  0E13               	movlw	19
 32028  000766  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 32029  000768  0E00               	movlw	0
 32030  00076A  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 32031  00076C  0E00               	movlw	low HttpGetMethod@UartMessage
 32032  00076E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 32033  000770  6ED9               	movwf	fsr2l,c
 32034  000772  0E01               	movlw	high HttpGetMethod@UartMessage
 32035  000774  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 32036  000776  6EDA               	movwf	fsr2h,c
 32037  000778  0E22               	movlw	34
 32038  00077A  6EDF               	movwf	indf2,c
 32039                           
 32040                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 32041  00077C  0101               	movlb	1	; () banked
 32042  00077E  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 32043  000780  0100               	movlb	0	; () banked
 32044  000782  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 32045  000784  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 32046  000786  0E14               	movlw	20
 32047  000788  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 32048  00078A  0E00               	movlw	0
 32049  00078C  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 32050  00078E  0E00               	movlw	low HttpGetMethod@UartMessage
 32051  000790  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 32052  000792  6ED9               	movwf	fsr2l,c
 32053  000794  0E01               	movlw	high HttpGetMethod@UartMessage
 32054  000796  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 32055  000798  6EDA               	movwf	fsr2h,c
 32056  00079A  0E0D               	movlw	13
 32057  00079C  6EDF               	movwf	indf2,c
 32058                           
 32059                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 32060  00079E  0101               	movlb	1	; () banked
 32061  0007A0  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 32062  0007A2  0100               	movlb	0	; () banked
 32063  0007A4  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 32064  0007A6  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 32065  0007A8  0E15               	movlw	21
 32066  0007AA  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 32067  0007AC  0E00               	movlw	0
 32068  0007AE  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 32069  0007B0  0E00               	movlw	low HttpGetMethod@UartMessage
 32070  0007B2  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 32071  0007B4  6ED9               	movwf	fsr2l,c
 32072  0007B6  0E01               	movlw	high HttpGetMethod@UartMessage
 32073  0007B8  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 32074  0007BA  6EDA               	movwf	fsr2h,c
 32075  0007BC  0E00               	movlw	0
 32076  0007BE  6EDF               	movwf	indf2,c
 32077                           
 32078                           ; BSR set to: 0
 32079                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 32080  0007C0  0E00               	movlw	low HttpGetMethod@UartMessage
 32081  0007C2  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 32082  0007C4  0E01               	movlw	high HttpGetMethod@UartMessage
 32083  0007C6  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 32084  0007C8  0E01               	movlw	1
 32085  0007CA  EC6C  F032         	call	_Uart_WriteString
 32086                           
 32087                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 32088  0007CE  0E0A               	movlw	10
 32089  0007D0  0101               	movlb	1	; () banked
 32090  0007D2  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32091                           
 32092                           ; BSR set to: 1
 32093                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 32094  0007D4  0E05               	movlw	5
 32095  0007D6  0100               	movlb	0	; () banked
 32096  0007D8  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32097                           
 32098                           ; BSR set to: 0
 32099                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 32100  0007DA  0EF3               	movlw	low _ConnTimeout
 32101  0007DC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32102  0007DE  0E02               	movlw	high _ConnTimeout
 32103  0007E0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32104  0007E2  0E20               	movlw	32
 32105  0007E4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32106  0007E6  0E4E               	movlw	78
 32107  0007E8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32108  0007EA  0E00               	movlw	0
 32109  0007EC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32110  0007EE  0E00               	movlw	0
 32111  0007F0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32112  0007F2  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 32113  0007F6  D0D9               	goto	l16135
 32114  0007F8                     
 32115                           ; BSR set to: 1
 32116                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 32117                           
 32118                           ; BSR set to: 1
 32119  0007F8  0E1E               	movlw	low STR_16
 32120  0007FA  0100               	movlb	0	; () banked
 32121  0007FC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 32122  0007FE  0EFF               	movlw	high STR_16
 32123  000800  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 32124  000802  0E01               	movlw	1
 32125  000804  ECAC  F031         	call	_Uart_WriteConstString
 32126                           
 32127                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 32128  000808  0E0A               	movlw	10
 32129  00080A  0101               	movlb	1	; () banked
 32130  00080C  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32131                           
 32132                           ; BSR set to: 1
 32133                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 32134  00080E  0E06               	movlw	6
 32135  000810  0100               	movlb	0	; () banked
 32136  000812  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32137                           
 32138                           ; BSR set to: 0
 32139                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 32140  000814  0EF3               	movlw	low _ConnTimeout
 32141  000816  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32142  000818  0E02               	movlw	high _ConnTimeout
 32143  00081A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32144  00081C  0E20               	movlw	32
 32145  00081E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32146  000820  0E4E               	movlw	78
 32147  000822  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32148  000824  0E00               	movlw	0
 32149  000826  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32150  000828  0E00               	movlw	0
 32151  00082A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32152  00082C  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 32153                           
 32154                           ;mdm_gsm_gprs_http.c: 358: break;
 32155  000830  D145               	goto	l1255
 32156  000832                     
 32157                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 32158  000832  0E07               	movlw	7
 32159  000834  0101               	movlb	1	; () banked
 32160  000836  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32161                           
 32162                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 32163  000838  0E09               	movlw	9
 32164  00083A  0100               	movlb	0	; () banked
 32165  00083C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32166                           
 32167                           ; BSR set to: 0
 32168                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 32169  00083E  0EF3               	movlw	low _ConnTimeout
 32170  000840  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32171  000842  0E02               	movlw	high _ConnTimeout
 32172  000844  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32173  000846  0E20               	movlw	32
 32174  000848  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32175  00084A  0E4E               	movlw	78
 32176  00084C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32177  00084E  0E00               	movlw	0
 32178  000850  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32179  000852  0E00               	movlw	0
 32180  000854  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32181  000856  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 32182                           
 32183                           ;mdm_gsm_gprs_http.c: 371: break;
 32184  00085A  D130               	goto	l1255
 32185  00085C                     
 32186                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 32187  00085C  0E83               	movlw	low STR_17
 32188  00085E  0100               	movlb	0	; () banked
 32189  000860  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 32190  000862  0EFF               	movlw	high STR_17
 32191  000864  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 32192  000866  0E01               	movlw	1
 32193  000868  ECAC  F031         	call	_Uart_WriteConstString
 32194                           
 32195                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 32196  00086C  0E0D               	movlw	13
 32197  00086E  0101               	movlb	1	; () banked
 32198  000870  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32199                           
 32200                           ; BSR set to: 1
 32201                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 32202  000872  0E09               	movlw	9
 32203  000874  0100               	movlb	0	; () banked
 32204  000876  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32205                           
 32206                           ; BSR set to: 0
 32207                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 32208  000878  0EF3               	movlw	low _ConnTimeout
 32209  00087A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32210  00087C  0E02               	movlw	high _ConnTimeout
 32211  00087E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32212  000880  0E20               	movlw	32
 32213  000882  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32214  000884  0E4E               	movlw	78
 32215  000886  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32216  000888  0E00               	movlw	0
 32217  00088A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32218  00088C  0E00               	movlw	0
 32219  00088E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32220  000890  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 32221  000894  D08A               	goto	l16135
 32222  000896                     
 32223                           ; BSR set to: 1
 32224                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 32225                           
 32226                           ; BSR set to: 1
 32227  000896  0E90               	movlw	low STR_18
 32228  000898  0100               	movlb	0	; () banked
 32229  00089A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 32230  00089C  0EFF               	movlw	high STR_18
 32231  00089E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 32232  0008A0  0E01               	movlw	1
 32233  0008A2  ECAC  F031         	call	_Uart_WriteConstString
 32234                           
 32235                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 32236  0008A6  0E0A               	movlw	10
 32237  0008A8  0101               	movlb	1	; () banked
 32238  0008AA  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32239                           
 32240                           ; BSR set to: 1
 32241                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 32242  0008AC  0E0E               	movlw	14
 32243  0008AE  0100               	movlb	0	; () banked
 32244  0008B0  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32245                           
 32246                           ; BSR set to: 0
 32247                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 32248  0008B2  0EF3               	movlw	low _ConnTimeout
 32249  0008B4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32250  0008B6  0E02               	movlw	high _ConnTimeout
 32251  0008B8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32252  0008BA  0E20               	movlw	32
 32253  0008BC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32254  0008BE  0E4E               	movlw	78
 32255  0008C0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32256  0008C2  0E00               	movlw	0
 32257  0008C4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32258  0008C6  0E00               	movlw	0
 32259  0008C8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32260  0008CA  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 32261  0008CE  D06D               	goto	l16135
 32262  0008D0                     
 32263                           ; BSR set to: 1
 32264                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 32265                           
 32266                           ; BSR set to: 1
 32267  0008D0  0E3C               	movlw	low _NewStringReceived
 32268  0008D2  0100               	movlb	0	; () banked
 32269  0008D4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32270  0008D6  0E00               	movlw	high _NewStringReceived
 32271  0008D8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32272  0008DA  EC15  F034         	call	_ReceiveEvt	;wreg free
 32273  0008DE  0900               	iorlw	0
 32274  0008E0  B4D8               	btfsc	status,2,c
 32275  0008E2  D018               	goto	l1268
 32276                           
 32277                           ;mdm_gsm_gprs_http.c: 400: {
 32278                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 32279  0008E4  CC58  FFE8         	movff	_RxBuffer,wreg
 32280  0008E8  0A4F               	xorlw	79
 32281  0008EA  A4D8               	btfss	status,2,c
 32282  0008EC  D0E7               	goto	l1255
 32283  0008EE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 32284  0008F2  0A4B               	xorlw	75
 32285  0008F4  A4D8               	btfss	status,2,c
 32286  0008F6  D0E2               	goto	l1255
 32287                           
 32288                           ;mdm_gsm_gprs_http.c: 403: {
 32289                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 32290  0008F8  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32291                           
 32292                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 32293  0008FC  0E58               	movlw	low _RxBuffer
 32294  0008FE  0100               	movlb	0	; () banked
 32295  000900  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 32296  000902  0E0C               	movlw	high _RxBuffer
 32297  000904  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 32298  000906  0E01               	movlw	1
 32299  000908  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 32300  00090A  0E90               	movlw	144
 32301  00090C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 32302  00090E  EC37  F033         	call	_ClearBuffer	;wreg free
 32303                           
 32304                           ;mdm_gsm_gprs_http.c: 408: }
 32305                           ;mdm_gsm_gprs_http.c: 409: }
 32306  000912  D0D4               	goto	l1255
 32307  000914                     l1268:
 32308                           
 32309                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 32310  000914  0EF3               	movlw	low _ConnTimeout
 32311  000916  0100               	movlb	0	; () banked
 32312  000918  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32313  00091A  0E02               	movlw	high _ConnTimeout
 32314  00091C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32315  00091E  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32316  000922                     L69:
 32317  000922  06E8               	decf	wreg,f,c
 32318  000924  A4D8               	btfss	status,2,c
 32319  000926  D0CA               	goto	l1255
 32320                           
 32321                           ;mdm_gsm_gprs_http.c: 411: {
 32322                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 32323  000928  0E0F               	movlw	15
 32324  00092A                     L68:
 32325  00092A  0101               	movlb	1	; () banked
 32326  00092C  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32327                           
 32328                           ; BSR set to: 1
 32329                           ;mdm_gsm_gprs_http.c: 414: }
 32330                           ;mdm_gsm_gprs_http.c: 415: break;
 32331                           
 32332                           ; BSR set to: 1
 32333  00092E  D0C6               	goto	l1255
 32334  000930                     
 32335                           ; BSR set to: 1
 32336                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 32337                           
 32338                           ; BSR set to: 1
 32339  000930  0E3C               	movlw	low _NewStringReceived
 32340  000932  0100               	movlb	0	; () banked
 32341  000934  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32342  000936  0E00               	movlw	high _NewStringReceived
 32343  000938  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32344  00093A  EC15  F034         	call	_ReceiveEvt	;wreg free
 32345  00093E  0900               	iorlw	0
 32346  000940  B4D8               	btfsc	status,2,c
 32347  000942  D018               	goto	l1273
 32348                           
 32349                           ;mdm_gsm_gprs_http.c: 420: {
 32350                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 32351  000944  CC58  FFE8         	movff	_RxBuffer,wreg
 32352  000948  0A2B               	xorlw	43
 32353  00094A  A4D8               	btfss	status,2,c
 32354  00094C  D0B7               	goto	l1255
 32355  00094E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 32356  000952  0A48               	xorlw	72
 32357  000954  A4D8               	btfss	status,2,c
 32358  000956  D0B2               	goto	l1255
 32359                           
 32360                           ;mdm_gsm_gprs_http.c: 423: {
 32361                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 32362  000958  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32363                           
 32364                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 32365  00095C  0E58               	movlw	low _RxBuffer
 32366  00095E  0100               	movlb	0	; () banked
 32367  000960  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 32368  000962  0E0C               	movlw	high _RxBuffer
 32369  000964  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 32370  000966  0E01               	movlw	1
 32371  000968  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 32372  00096A  0E90               	movlw	144
 32373  00096C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 32374  00096E  EC37  F033         	call	_ClearBuffer	;wreg free
 32375                           
 32376                           ;mdm_gsm_gprs_http.c: 428: }
 32377                           ;mdm_gsm_gprs_http.c: 429: }
 32378  000972  D0A4               	goto	l1255
 32379  000974                     l1273:
 32380                           
 32381                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 32382  000974  0EF3               	movlw	low _ConnTimeout
 32383  000976  0100               	movlb	0	; () banked
 32384  000978  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32385  00097A  0E02               	movlw	high _ConnTimeout
 32386  00097C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32387  00097E  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32388  000982  D7CF               	goto	L69
 32389  000984                     
 32390                           ; BSR set to: 1
 32391                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 32392                           
 32393                           ; BSR set to: 1
 32394  000984  0E0C               	movlw	12
 32395  000986  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32396                           
 32397                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 32398  000988  0E05               	movlw	5
 32399  00098A  0100               	movlb	0	; () banked
 32400  00098C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 32401                           
 32402                           ; BSR set to: 0
 32403                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 32404  00098E  0EDC               	movlw	low _ConnWait
 32405  000990  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 32406  000992  0E03               	movlw	high _ConnWait
 32407  000994  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 32408  000996  0EE8               	movlw	232
 32409  000998  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 32410  00099A  0E03               	movlw	3
 32411  00099C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 32412  00099E  0E00               	movlw	0
 32413  0009A0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 32414  0009A2  0E00               	movlw	0
 32415  0009A4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 32416  0009A6  EC24  F02D         	call	_OsTmr_StartTimer	;wreg free
 32417  0009AA                     l16135:
 32418                           
 32419                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 32420  0009AA  0E01               	movlw	1
 32421  0009AC  0101               	movlb	1	; () banked
 32422  0009AE  D053               	goto	L71
 32423  0009B0                     
 32424                           ; BSR set to: 1
 32425                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 32426                           
 32427                           ; BSR set to: 1
 32428  0009B0  0EDC               	movlw	low _ConnWait
 32429  0009B2  0100               	movlb	0	; () banked
 32430  0009B4  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32431  0009B6  0E03               	movlw	high _ConnWait
 32432  0009B8  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32433  0009BA  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32434  0009BE  06E8               	decf	wreg,f,c
 32435  0009C0  A4D8               	btfss	status,2,c
 32436  0009C2  D07C               	goto	l1255
 32437                           
 32438                           ;mdm_gsm_gprs_http.c: 450: {
 32439                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 32440  0009C4  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32441                           
 32442                           ;mdm_gsm_gprs_http.c: 453: }
 32443                           ;mdm_gsm_gprs_http.c: 454: break;
 32444  0009C8  D079               	goto	l1255
 32445  0009CA                     
 32446                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 32447  0009CA  0E3C               	movlw	low _NewStringReceived
 32448  0009CC  0100               	movlb	0	; () banked
 32449  0009CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32450  0009D0  0E00               	movlw	high _NewStringReceived
 32451  0009D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32452  0009D4  EC15  F034         	call	_ReceiveEvt	;wreg free
 32453  0009D8  0900               	iorlw	0
 32454  0009DA  B4D8               	btfsc	status,2,c
 32455  0009DC  D02D               	goto	l1281
 32456                           
 32457                           ;mdm_gsm_gprs_http.c: 459: {
 32458                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 32459  0009DE  CC58  FFE8         	movff	_RxBuffer,wreg
 32460  0009E2  0A2B               	xorlw	43
 32461  0009E4  A4D8               	btfss	status,2,c
 32462  0009E6  D06A               	goto	l1255
 32463  0009E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 32464  0009EC  0A48               	xorlw	72
 32465  0009EE  A4D8               	btfss	status,2,c
 32466  0009F0  D065               	goto	l1255
 32467                           
 32468                           ;mdm_gsm_gprs_http.c: 462: {
 32469                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 32470  0009F2  C0D0  F1E6         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 32471                           
 32472                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 32473  0009F6  0E58               	movlw	low _RxBuffer
 32474  0009F8  0100               	movlb	0	; () banked
 32475  0009FA  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 32476  0009FC  0E0C               	movlw	high _RxBuffer
 32477  0009FE  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 32478  000A00  EE20 F003          	lfsr	2,3
 32479  000A04  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 32480  000A06  26D9               	addwf	fsr2l,f,c
 32481  000A08  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 32482  000A0A  22DA               	addwfc	fsr2h,f,c
 32483  000A0C  CFDE F087          	movff	postinc2,StringCopy@DestStr
 32484  000A10  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 32485  000A14  0E01               	movlw	1
 32486  000A16  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 32487  000A18  0E90               	movlw	144
 32488  000A1A  6F89               	movwf	StringCopy@Len& (0+255),b
 32489  000A1C  ECC4  F02C         	call	_StringCopy	;wreg free
 32490                           
 32491                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 32492  000A20  0E58               	movlw	low _RxBuffer
 32493  000A22  0100               	movlb	0	; () banked
 32494  000A24  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 32495  000A26  0E0C               	movlw	high _RxBuffer
 32496  000A28  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 32497  000A2A  0E01               	movlw	1
 32498  000A2C  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 32499  000A2E  0E90               	movlw	144
 32500  000A30  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 32501  000A32  EC37  F033         	call	_ClearBuffer	;wreg free
 32502                           
 32503                           ;mdm_gsm_gprs_http.c: 469: }
 32504                           ;mdm_gsm_gprs_http.c: 470: }
 32505  000A36  D042               	goto	l1255
 32506  000A38                     l1281:
 32507                           
 32508                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 32509  000A38  0EF3               	movlw	low _ConnTimeout
 32510  000A3A  0100               	movlb	0	; () banked
 32511  000A3C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 32512  000A3E  0E02               	movlw	high _ConnTimeout
 32513  000A40  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 32514  000A42  ECCE  F028         	call	_OsTmr_GetTimerStatus	;wreg free
 32515  000A46  D76D               	goto	L69
 32516  000A48                     
 32517                           ; BSR set to: 1
 32518                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 32519                           
 32520                           ; BSR set to: 1
 32521  000A48  0E00               	movlw	0
 32522  000A4A  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32523                           
 32524                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 32525  000A4C  0E02               	movlw	2
 32526  000A4E  D003               	goto	L71
 32527  000A50                     
 32528                           ; BSR set to: 1
 32529                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 32530                           
 32531                           ; BSR set to: 1
 32532  000A50  0E00               	movlw	0
 32533  000A52  6FE6               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 32534                           
 32535                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 32536  000A54  0E03               	movlw	3
 32537  000A56                     L71:
 32538  000A56  6FE5               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 32539                           
 32540                           ; BSR set to: 1
 32541                           ;mdm_gsm_gprs_http.c: 494: }
 32542                           
 32543                           ; BSR set to: 1
 32544                           ;mdm_gsm_gprs_http.c: 493: break;
 32545                           
 32546                           ;mdm_gsm_gprs_http.c: 492: default:
 32547                           
 32548                           ;mdm_gsm_gprs_http.c: 490: break;
 32549  000A58  D031               	goto	l1255
 32550  000A5A                     l1252:
 32551                           
 32552                           ; BSR set to: 1
 32553                           
 32554                           ; BSR set to: 1
 32555  000A5A  51E6               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 32556                           
 32557                           ; Switch size 1, requested type "space"
 32558                           ; Number of cases is 16, Range of values is 0 to 15
 32559                           ; switch strategies available:
 32560                           ; Name         Instructions Cycles
 32561                           ; simple_byte           49    25 (average)
 32562                           ;	Chosen strategy is simple_byte
 32563  000A5C  0A00               	xorlw	0	; case 0
 32564  000A5E  B4D8               	btfsc	status,2,c
 32565  000A60  D5CC               	goto	l1253
 32566  000A62  0A01               	xorlw	1	; case 1
 32567  000A64  B4D8               	btfsc	status,2,c
 32568  000A66  D5D5               	goto	l1256
 32569  000A68  0A03               	xorlw	3	; case 2
 32570  000A6A  B4D8               	btfsc	status,2,c
 32571  000A6C  D5EF               	goto	l1257
 32572  000A6E  0A01               	xorlw	1	; case 3
 32573  000A70  B4D8               	btfsc	status,2,c
 32574  000A72  D609               	goto	l1258
 32575  000A74  0A07               	xorlw	7	; case 4
 32576  000A76  B4D8               	btfsc	status,2,c
 32577  000A78  D623               	goto	l1259
 32578  000A7A  0A01               	xorlw	1	; case 5
 32579  000A7C  B4D8               	btfsc	status,2,c
 32580  000A7E  D6BC               	goto	l1263
 32581  000A80  0A03               	xorlw	3	; case 6
 32582  000A82  B4D8               	btfsc	status,2,c
 32583  000A84  D6D6               	goto	l1264
 32584  000A86  0A01               	xorlw	1	; case 7
 32585  000A88  B4D8               	btfsc	status,2,c
 32586  000A8A  D752               	goto	l1272
 32587  000A8C  0A0F               	xorlw	15	; case 8
 32588  000A8E  B4D8               	btfsc	status,2,c
 32589  000A90  D6E5               	goto	l1265
 32590  000A92  0A01               	xorlw	1	; case 9
 32591  000A94  B4D8               	btfsc	status,2,c
 32592  000A96  D6FF               	goto	l1266
 32593  000A98  0A03               	xorlw	3	; case 10
 32594  000A9A  B4D8               	btfsc	status,2,c
 32595  000A9C  D719               	goto	l1267
 32596  000A9E  0A01               	xorlw	1	; case 11
 32597  000AA0  B4D8               	btfsc	status,2,c
 32598  000AA2  D770               	goto	l1277
 32599  000AA4  0A07               	xorlw	7	; case 12
 32600  000AA6  B4D8               	btfsc	status,2,c
 32601  000AA8  D783               	goto	l1278
 32602  000AAA  0A01               	xorlw	1	; case 13
 32603  000AAC  B4D8               	btfsc	status,2,c
 32604  000AAE  D78D               	goto	l1280
 32605  000AB0  0A03               	xorlw	3	; case 14
 32606  000AB2  B4D8               	btfsc	status,2,c
 32607  000AB4  D7C9               	goto	l1285
 32608  000AB6  0A01               	xorlw	1	; case 15
 32609  000AB8  B4D8               	btfsc	status,2,c
 32610  000ABA  D7CA               	goto	l1286
 32611  000ABC                     l1255:
 32612                           
 32613                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 32614                           
 32615                           ; BSR set to: 1
 32616  000ABC  0101               	movlb	1	; () banked
 32617  000ABE  51E5               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 32618  000AC0  0012               	return	
 32619  000AC2                     __end_of_HttpGetMethod:
 32620                           	opt stack 0
 32621                           tosu	equ	0xFFF
 32622                           tosh	equ	0xFFE
 32623                           tosl	equ	0xFFD
 32624                           pclath	equ	0xFFA
 32625                           tblptru	equ	0xFF8
 32626                           tblptrh	equ	0xFF7
 32627                           tblptrl	equ	0xFF6
 32628                           tablat	equ	0xFF5
 32629                           prodh	equ	0xFF4
 32630                           prodl	equ	0xFF3
 32631                           intcon	equ	0xFF2
 32632                           intcon2	equ	0xFF1
 32633                           intcon3	equ	0xFF0
 32634                           indf0	equ	0xFEF
 32635                           postinc0	equ	0xFEE
 32636                           plusw0	equ	0xFEB
 32637                           fsr0h	equ	0xFEA
 32638                           fsr0l	equ	0xFE9
 32639                           wreg	equ	0xFE8
 32640                           indf1	equ	0xFE7
 32641                           postinc1	equ	0xFE6
 32642                           postdec1	equ	0xFE5
 32643                           plusw1	equ	0xFE3
 32644                           fsr1h	equ	0xFE2
 32645                           fsr1l	equ	0xFE1
 32646                           indf2	equ	0xFDF
 32647                           postinc2	equ	0xFDE
 32648                           postdec2	equ	0xFDD
 32649                           plusw2	equ	0xFDB
 32650                           fsr2h	equ	0xFDA
 32651                           fsr2l	equ	0xFD9
 32652                           status	equ	0xFD8
 32653                           
 32654 ;; *************** function _Uart_WriteString *****************
 32655 ;; Defined at:
 32656 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32657 ;; Parameters:    Size  Location     Type
 32658 ;;  Module          1    wreg     unsigned char 
 32659 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 32660 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 32661 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 32662 ;; Auto vars:     Size  Location     Type
 32663 ;;  Module          1   34[BANK0 ] unsigned char 
 32664 ;; Return value:  Size  Location     Type
 32665 ;;                  1    wreg      void 
 32666 ;; Registers used:
 32667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32668 ;; Tracked objects:
 32669 ;;		On entry : 0/0
 32670 ;;		On exit  : 0/0
 32671 ;;		Unchanged: 0/0
 32672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32673 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32674 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32676 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32677 ;;Total ram usage:        3 bytes
 32678 ;; Hardware stack levels used:    1
 32679 ;; Hardware stack levels required when called:   12
 32680 ;; This function calls:
 32681 ;;		_UartTxBufferStatus
 32682 ;;		_UartWriteByte
 32683 ;; This function is called by:
 32684 ;;		_Mdm_SetSmsFormat
 32685 ;;		_InitGprsNetwork
 32686 ;;		_HttpGetMethod
 32687 ;;		_Mdm_PinUnlock
 32688 ;;		_Mdm_MakePhoneCall
 32689 ;; This function uses a non-reentrant model
 32690 ;;
 32691                           
 32692                           	psect	text148
 32693  0064D8                     __ptext148:
 32694                           	opt stack 0
 32695  0064D8                     _Uart_WriteString:
 32696                           	opt stack 12
 32697                           
 32698                           ; BSR set to: 1
 32699                           ;incstack = 0
 32700                           ;Uart_WriteString@Module stored from wreg
 32701  0064D8  0100               	movlb	0	; () banked
 32702  0064DA  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 32703                           
 32704                           ;uart_drv.c: 521: while (*StringToWrite)
 32705  0064DC  D014               	goto	u12410
 32706  0064DE                     
 32707                           ;uart_drv.c: 522: {
 32708                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 32709  0064DE  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 32710  0064E2  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 32711  0064E6  50DF               	movf	indf2,w,c
 32712  0064E8  0100               	movlb	0	; () banked
 32713  0064EA  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 32714  0064EC  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 32715  0064EE  EC61  F035         	call	_UartWriteByte
 32716                           
 32717                           ;uart_drv.c: 526: StringToWrite++;
 32718  0064F2  0100               	movlb	0	; () banked
 32719  0064F4  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 32720  0064F6  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 32721  0064F8                     
 32722                           ; BSR set to: 0
 32723                           
 32724                           ; BSR set to: 0
 32725  0064F8  0100               	movlb	0	; () banked
 32726  0064FA  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 32727  0064FC  EC1F  F030         	call	_UartTxBufferStatus
 32728  006500  06E8               	decf	wreg,f,c
 32729  006502  B4D8               	btfsc	status,2,c
 32730  006504  D7F9               	goto	l709
 32731  006506                     u12410:
 32732  006506  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 32733  00650A  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 32734  00650E  50DF               	movf	indf2,w,c
 32735  006510  B4D8               	btfsc	status,2,c
 32736  006512  0012               	return	
 32737  006514  D7E4               	goto	l707
 32738  006516                     __end_of_Uart_WriteString:
 32739                           	opt stack 0
 32740                           tosu	equ	0xFFF
 32741                           tosh	equ	0xFFE
 32742                           tosl	equ	0xFFD
 32743                           pclath	equ	0xFFA
 32744                           tblptru	equ	0xFF8
 32745                           tblptrh	equ	0xFF7
 32746                           tblptrl	equ	0xFF6
 32747                           tablat	equ	0xFF5
 32748                           prodh	equ	0xFF4
 32749                           prodl	equ	0xFF3
 32750                           intcon	equ	0xFF2
 32751                           intcon2	equ	0xFF1
 32752                           intcon3	equ	0xFF0
 32753                           indf0	equ	0xFEF
 32754                           postinc0	equ	0xFEE
 32755                           plusw0	equ	0xFEB
 32756                           fsr0h	equ	0xFEA
 32757                           fsr0l	equ	0xFE9
 32758                           wreg	equ	0xFE8
 32759                           indf1	equ	0xFE7
 32760                           postinc1	equ	0xFE6
 32761                           postdec1	equ	0xFE5
 32762                           plusw1	equ	0xFE3
 32763                           fsr1h	equ	0xFE2
 32764                           fsr1l	equ	0xFE1
 32765                           indf2	equ	0xFDF
 32766                           postinc2	equ	0xFDE
 32767                           postdec2	equ	0xFDD
 32768                           plusw2	equ	0xFDB
 32769                           fsr2h	equ	0xFDA
 32770                           fsr2l	equ	0xFD9
 32771                           status	equ	0xFD8
 32772                           
 32773 ;; *************** function _Uart_WriteConstString *****************
 32774 ;; Defined at:
 32775 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32776 ;; Parameters:    Size  Location     Type
 32777 ;;  Module          1    wreg     unsigned char 
 32778 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 32779 ;;		 -> STR_31(12), STR_30(19), STR_29(14), STR_20(14), 
 32780 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 32781 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 32782 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 32783 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 32784 ;; Auto vars:     Size  Location     Type
 32785 ;;  Module          1   34[BANK0 ] unsigned char 
 32786 ;; Return value:  Size  Location     Type
 32787 ;;                  1    wreg      void 
 32788 ;; Registers used:
 32789 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32790 ;; Tracked objects:
 32791 ;;		On entry : 0/0
 32792 ;;		On exit  : 0/0
 32793 ;;		Unchanged: 0/0
 32794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32795 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32796 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32798 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32799 ;;Total ram usage:        3 bytes
 32800 ;; Hardware stack levels used:    1
 32801 ;; Hardware stack levels required when called:   12
 32802 ;; This function calls:
 32803 ;;		_UartTxBufferStatus
 32804 ;;		_UartWriteByte
 32805 ;; This function is called by:
 32806 ;;		_CheckModem
 32807 ;;		_ConfigureModem
 32808 ;;		_GetSmsSm
 32809 ;;		_Mdm_HangPhoneCall
 32810 ;;		_InitGprsNetwork
 32811 ;;		_HttpGetMethod
 32812 ;;		_detectCmd
 32813 ;;		_initGprsModem
 32814 ;;		_Mdm_GetPhoneCall
 32815 ;;		_MdmHttp_SetSsl
 32816 ;; This function uses a non-reentrant model
 32817 ;;
 32818                           
 32819                           	psect	text149
 32820  006358                     __ptext149:
 32821                           	opt stack 0
 32822  006358                     _Uart_WriteConstString:
 32823                           	opt stack 11
 32824                           
 32825                           ;incstack = 0
 32826                           ;Uart_WriteConstString@Module stored from wreg
 32827  006358  0100               	movlb	0	; () banked
 32828  00635A  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 32829                           
 32830                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 32831  00635C  D015               	goto	u11850
 32832  00635E                     
 32833                           ;uart_drv.c: 500: {
 32834                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 32835  00635E  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 32836  006362  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 32837  006366                     	if	0	;tblptru may be non-zero
 32838  006366                     	endif
 32839  006366                     	if	0	;tblptru may be non-zero
 32840  006366                     	endif
 32841  006366  0008               	tblrd		*
 32842  006368  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 32843  00636C  0100               	movlb	0	; () banked
 32844  00636E  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 32845  006370  EC61  F035         	call	_UartWriteByte
 32846                           
 32847                           ;uart_drv.c: 504: ConstStringToWrite++;
 32848  006374  0100               	movlb	0	; () banked
 32849  006376  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 32850  006378  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 32851  00637A                     
 32852                           ; BSR set to: 0
 32853                           
 32854                           ; BSR set to: 0
 32855  00637A  0100               	movlb	0	; () banked
 32856  00637C  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 32857  00637E  EC1F  F030         	call	_UartTxBufferStatus
 32858  006382  06E8               	decf	wreg,f,c
 32859  006384  B4D8               	btfsc	status,2,c
 32860  006386  D7F9               	goto	l700
 32861  006388                     u11850:
 32862  006388  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 32863  00638C  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 32864  006390                     	if	0	;tblptru may be non-zero
 32865  006390                     	endif
 32866  006390                     	if	0	;tblptru may be non-zero
 32867  006390                     	endif
 32868  006390  0008               	tblrd		*
 32869  006392  50F5               	movf	tablat,w,c
 32870  006394  0900               	iorlw	0
 32871  006396  B4D8               	btfsc	status,2,c
 32872  006398  0012               	return	
 32873  00639A  D7E1               	goto	l698
 32874  00639C                     __end_of_Uart_WriteConstString:
 32875                           	opt stack 0
 32876                           tosu	equ	0xFFF
 32877                           tosh	equ	0xFFE
 32878                           tosl	equ	0xFFD
 32879                           pclath	equ	0xFFA
 32880                           tblptru	equ	0xFF8
 32881                           tblptrh	equ	0xFF7
 32882                           tblptrl	equ	0xFF6
 32883                           tablat	equ	0xFF5
 32884                           prodh	equ	0xFF4
 32885                           prodl	equ	0xFF3
 32886                           intcon	equ	0xFF2
 32887                           intcon2	equ	0xFF1
 32888                           intcon3	equ	0xFF0
 32889                           indf0	equ	0xFEF
 32890                           postinc0	equ	0xFEE
 32891                           plusw0	equ	0xFEB
 32892                           fsr0h	equ	0xFEA
 32893                           fsr0l	equ	0xFE9
 32894                           wreg	equ	0xFE8
 32895                           indf1	equ	0xFE7
 32896                           postinc1	equ	0xFE6
 32897                           postdec1	equ	0xFE5
 32898                           plusw1	equ	0xFE3
 32899                           fsr1h	equ	0xFE2
 32900                           fsr1l	equ	0xFE1
 32901                           indf2	equ	0xFDF
 32902                           postinc2	equ	0xFDE
 32903                           postdec2	equ	0xFDD
 32904                           plusw2	equ	0xFDB
 32905                           fsr2h	equ	0xFDA
 32906                           fsr2l	equ	0xFD9
 32907                           status	equ	0xFD8
 32908                           
 32909 ;; *************** function _UartWriteByte *****************
 32910 ;; Defined at:
 32911 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32912 ;; Parameters:    Size  Location     Type
 32913 ;;  Module          1    wreg     unsigned char 
 32914 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 32915 ;; Auto vars:     Size  Location     Type
 32916 ;;  Module          1   30[BANK0 ] unsigned char 
 32917 ;; Return value:  Size  Location     Type
 32918 ;;                  1    wreg      void 
 32919 ;; Registers used:
 32920 ;;		wreg, status,2, status,0
 32921 ;; Tracked objects:
 32922 ;;		On entry : 0/0
 32923 ;;		On exit  : 0/0
 32924 ;;		Unchanged: 0/0
 32925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32926 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32930 ;;Total ram usage:        2 bytes
 32931 ;; Hardware stack levels used:    1
 32932 ;; Hardware stack levels required when called:   11
 32933 ;; This function calls:
 32934 ;;		Nothing
 32935 ;; This function is called by:
 32936 ;;		_Uart_WriteConstString
 32937 ;;		_Uart_WriteString
 32938 ;;		_Uart_WriteStringLen
 32939 ;; This function uses a non-reentrant model
 32940 ;;
 32941                           
 32942                           	psect	text150
 32943  006AC2                     __ptext150:
 32944                           	opt stack 0
 32945  006AC2                     _UartWriteByte:
 32946                           	opt stack 11
 32947                           
 32948                           ;incstack = 0
 32949                           ;UartWriteByte@Module stored from wreg
 32950  006AC2  0100               	movlb	0	; () banked
 32951  006AC4  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 32952                           
 32953                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 32954  006AC6  0100               	movlb	0	; () banked
 32955  006AC8  057E               	decf	UartWriteByte@Module& (0+255),w,b
 32956  006ACA  A4D8               	btfss	status,2,c
 32957  006ACC  D003               	goto	l639
 32958                           
 32959                           ; BSR set to: 0
 32960                           ;uart_drv.c: 176: {
 32961                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 32962  006ACE  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 32963                           
 32964                           ;uart_drv.c: 179: }
 32965  006AD2  0012               	return	
 32966  006AD4                     l639:
 32967                           
 32968                           ; BSR set to: 0
 32969                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 32970                           
 32971                           ; BSR set to: 0
 32972  006AD4  0E02               	movlw	2
 32973  006AD6  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 32974  006AD8  A4D8               	btfss	status,2,c
 32975  006ADA  0012               	return	
 32976                           
 32977                           ; BSR set to: 0
 32978                           ;uart_drv.c: 181: {
 32979                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 32980  006ADC  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 32981                           
 32982                           ; BSR set to: 0
 32983  006AE0  0012               	return	
 32984  006AE2                     __end_of_UartWriteByte:
 32985                           	opt stack 0
 32986                           tosu	equ	0xFFF
 32987                           tosh	equ	0xFFE
 32988                           tosl	equ	0xFFD
 32989                           pclath	equ	0xFFA
 32990                           tblptru	equ	0xFF8
 32991                           tblptrh	equ	0xFF7
 32992                           tblptrl	equ	0xFF6
 32993                           tablat	equ	0xFF5
 32994                           prodh	equ	0xFF4
 32995                           prodl	equ	0xFF3
 32996                           intcon	equ	0xFF2
 32997                           intcon2	equ	0xFF1
 32998                           intcon3	equ	0xFF0
 32999                           indf0	equ	0xFEF
 33000                           postinc0	equ	0xFEE
 33001                           plusw0	equ	0xFEB
 33002                           fsr0h	equ	0xFEA
 33003                           fsr0l	equ	0xFE9
 33004                           wreg	equ	0xFE8
 33005                           indf1	equ	0xFE7
 33006                           postinc1	equ	0xFE6
 33007                           postdec1	equ	0xFE5
 33008                           plusw1	equ	0xFE3
 33009                           fsr1h	equ	0xFE2
 33010                           fsr1l	equ	0xFE1
 33011                           indf2	equ	0xFDF
 33012                           postinc2	equ	0xFDE
 33013                           postdec2	equ	0xFDD
 33014                           plusw2	equ	0xFDB
 33015                           fsr2h	equ	0xFDA
 33016                           fsr2l	equ	0xFD9
 33017                           status	equ	0xFD8
 33018                           
 33019 ;; *************** function _UartTxBufferStatus *****************
 33020 ;; Defined at:
 33021 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 33022 ;; Parameters:    Size  Location     Type
 33023 ;;  Module          1    wreg     unsigned char 
 33024 ;; Auto vars:     Size  Location     Type
 33025 ;;  Module          1   30[BANK0 ] unsigned char 
 33026 ;;  TxBufferStat    1   31[BANK0 ] enum E9038
 33027 ;; Return value:  Size  Location     Type
 33028 ;;                  1    wreg      enum E9038
 33029 ;; Registers used:
 33030 ;;		wreg, status,2, status,0
 33031 ;; Tracked objects:
 33032 ;;		On entry : 0/0
 33033 ;;		On exit  : 0/0
 33034 ;;		Unchanged: 0/0
 33035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33037 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33038 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33039 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33040 ;;Total ram usage:        3 bytes
 33041 ;; Hardware stack levels used:    1
 33042 ;; Hardware stack levels required when called:   11
 33043 ;; This function calls:
 33044 ;;		Nothing
 33045 ;; This function is called by:
 33046 ;;		_Uart_WriteConstString
 33047 ;;		_Uart_WriteString
 33048 ;;		_Uart_WriteStringLen
 33049 ;; This function uses a non-reentrant model
 33050 ;;
 33051                           
 33052                           	psect	text151
 33053  00603E                     __ptext151:
 33054                           	opt stack 0
 33055  00603E                     _UartTxBufferStatus:
 33056                           	opt stack 11
 33057                           
 33058                           ; BSR set to: 0
 33059                           ;incstack = 0
 33060                           ;UartTxBufferStatus@Module stored from wreg
 33061  00603E  0100               	movlb	0	; () banked
 33062  006040  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 33063                           
 33064                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 33065  006042  0E00               	movlw	0
 33066  006044  0100               	movlb	0	; () banked
 33067  006046  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 33068                           
 33069                           ; BSR set to: 0
 33070                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 33071  006048  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 33072  00604A  A4D8               	btfss	status,2,c
 33073  00604C  D00B               	goto	l651
 33074                           
 33075                           ; BSR set to: 0
 33076                           ;uart_drv.c: 228: {
 33077                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 33078  00604E  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 33079  006052  90D8               	bcf	status,0,c
 33080  006054  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 33081  006056  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 33082  006058  D002               	goto	l652
 33083  00605A                     u11690:
 33084                           
 33085                           ; BSR set to: 0
 33086                           ;uart_drv.c: 231: {
 33087                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 33088  00605A  0E01               	movlw	1
 33089  00605C  D014               	goto	L74
 33090  00605E                     l652:
 33091                           
 33092                           ; BSR set to: 0
 33093                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 33094                           
 33095                           ; BSR set to: 0
 33096  00605E  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 33097  006062  D00C               	goto	L104
 33098  006064                     l651:
 33099                           
 33100                           ; BSR set to: 0
 33101                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 33102                           
 33103                           ; BSR set to: 0
 33104  006064  0E02               	movlw	2
 33105  006066  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 33106  006068  A4D8               	btfss	status,2,c
 33107  00606A  D00E               	goto	l660
 33108                           
 33109                           ; BSR set to: 0
 33110                           ;uart_drv.c: 244: {
 33111                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 33112  00606C  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 33113  006070  90D8               	bcf	status,0,c
 33114  006072  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 33115  006074  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 33116  006076  D7F1               	goto	u11690
 33117                           
 33118                           ; BSR set to: 0
 33119                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 33120                           
 33121                           ; BSR set to: 0
 33122                           
 33123                           ;uart_drv.c: 249: }
 33124                           
 33125                           ; BSR set to: 0
 33126                           ;uart_drv.c: 247: {
 33127                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 33128  006078  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 33129  00607C                     L104:
 33130  00607C  90D8               	bcf	status,0,c
 33131  00607E  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 33132  006080  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 33133  006082  D002               	goto	l660
 33134                           
 33135                           ; BSR set to: 0
 33136                           ;uart_drv.c: 251: {
 33137                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 33138  006084  0E02               	movlw	2
 33139  006086                     L74:
 33140  006086  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 33141  006088                     l660:
 33142                           
 33143                           ; BSR set to: 0
 33144                           ;uart_drv.c: 257: }
 33145                           ;uart_drv.c: 258: }
 33146                           ;uart_drv.c: 260: return TxBufferStatus;
 33147                           
 33148                           ; BSR set to: 0
 33149                           
 33150                           ; BSR set to: 0
 33151                           
 33152                           ; BSR set to: 0
 33153                           
 33154                           ; BSR set to: 0
 33155                           
 33156                           ;uart_drv.c: 254: else
 33157                           ;uart_drv.c: 255: {
 33158                           
 33159                           ; BSR set to: 0
 33160  006088  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 33161  00608A  0012               	return	
 33162  00608C                     __end_of_UartTxBufferStatus:
 33163                           	opt stack 0
 33164                           tosu	equ	0xFFF
 33165                           tosh	equ	0xFFE
 33166                           tosl	equ	0xFFD
 33167                           pclath	equ	0xFFA
 33168                           tblptru	equ	0xFF8
 33169                           tblptrh	equ	0xFF7
 33170                           tblptrl	equ	0xFF6
 33171                           tablat	equ	0xFF5
 33172                           prodh	equ	0xFF4
 33173                           prodl	equ	0xFF3
 33174                           intcon	equ	0xFF2
 33175                           intcon2	equ	0xFF1
 33176                           intcon3	equ	0xFF0
 33177                           indf0	equ	0xFEF
 33178                           postinc0	equ	0xFEE
 33179                           plusw0	equ	0xFEB
 33180                           fsr0h	equ	0xFEA
 33181                           fsr0l	equ	0xFE9
 33182                           wreg	equ	0xFE8
 33183                           indf1	equ	0xFE7
 33184                           postinc1	equ	0xFE6
 33185                           postdec1	equ	0xFE5
 33186                           plusw1	equ	0xFE3
 33187                           fsr1h	equ	0xFE2
 33188                           fsr1l	equ	0xFE1
 33189                           indf2	equ	0xFDF
 33190                           postinc2	equ	0xFDE
 33191                           postdec2	equ	0xFDD
 33192                           plusw2	equ	0xFDB
 33193                           fsr2h	equ	0xFDA
 33194                           fsr2l	equ	0xFD9
 33195                           status	equ	0xFD8
 33196                           
 33197 ;; *************** function _StringCopy *****************
 33198 ;; Defined at:
 33199 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 33200 ;; Parameters:    Size  Location     Type
 33201 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 33202 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), UsbMasterPhoneNumber(15), 
 33203 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 33204 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), 
 33205 ;;		 -> RxBuffer(400), 
 33206 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 33207 ;;		 -> receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 33208 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 33209 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 33210 ;;  Len             2   41[BANK0 ] unsigned short 
 33211 ;; Auto vars:     Size  Location     Type
 33212 ;;  Index           2   45[BANK0 ] unsigned short 
 33213 ;; Return value:  Size  Location     Type
 33214 ;;                  1    wreg      void 
 33215 ;; Registers used:
 33216 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33217 ;; Tracked objects:
 33218 ;;		On entry : 0/0
 33219 ;;		On exit  : 0/0
 33220 ;;		Unchanged: 0/0
 33221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33222 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33223 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33224 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33225 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33226 ;;Total ram usage:       10 bytes
 33227 ;; Hardware stack levels used:    1
 33228 ;; Hardware stack levels required when called:   11
 33229 ;; This function calls:
 33230 ;;		Nothing
 33231 ;; This function is called by:
 33232 ;;		_ModemEvtParser
 33233 ;;		_GetSmsSm
 33234 ;;		_SendSmsSm
 33235 ;;		_Mdm_GetSmsData
 33236 ;;		_InitGprsNetwork
 33237 ;;		_HttpGetMethod
 33238 ;;		_Eeprom_Write
 33239 ;;		_detectCmd
 33240 ;;		_Mdm_SendSmsData
 33241 ;; This function uses a non-reentrant model
 33242 ;;
 33243                           
 33244                           	psect	text152
 33245  005988                     __ptext152:
 33246                           	opt stack 0
 33247  005988                     _StringCopy:
 33248                           	opt stack 13
 33249                           
 33250                           ;sf.c: 106: UINT16 Index = 0;
 33251                           
 33252                           ; BSR set to: 0
 33253                           ;incstack = 0
 33254  005988  0E00               	movlw	0
 33255  00598A  0100               	movlb	0	; () banked
 33256  00598C  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 33257  00598E  0E00               	movlw	0
 33258  005990  6F8D               	movwf	StringCopy@Index& (0+255),b
 33259                           
 33260                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 33261  005992  0E00               	movlw	0
 33262  005994  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 33263  005996  0E00               	movlw	0
 33264  005998  6F8D               	movwf	StringCopy@Index& (0+255),b
 33265  00599A  D020               	goto	l2256
 33266  00599C                     
 33267                           ; BSR set to: 0
 33268                           ;sf.c: 110: {
 33269                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 33270                           
 33271                           ; BSR set to: 0
 33272  00599C  518D               	movf	StringCopy@Index& (0+255),w,b
 33273  00599E  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 33274  0059A0  6F8B               	movwf	??_StringCopy& (0+255),b
 33275  0059A2  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 33276  0059A4  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 33277  0059A6  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 33278  0059A8  C08B  FFF6         	movff	??_StringCopy,tblptrl
 33279  0059AC  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 33280  0059B0  6AF8               	clrf	tblptru,c
 33281  0059B2  518D               	movf	StringCopy@Index& (0+255),w,b
 33282  0059B4  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 33283  0059B6  6ED9               	movwf	fsr2l,c
 33284  0059B8  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 33285  0059BA  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 33286  0059BC  6EDA               	movwf	fsr2h,c
 33287  0059BE  0E0E               	movlw	(high __ramtop+-1)
 33288  0059C0  64F7               	cpfsgt	tblptrh,c
 33289  0059C2  D003               	bra	u11887
 33290  0059C4  0008               	tblrd		*
 33291  0059C6  50F5               	movf	tablat,w,c
 33292  0059C8  D005               	bra	u11880
 33293  0059CA                     u11887:
 33294  0059CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 33295  0059CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 33296  0059D2  50EF               	movf	indf0,w,c
 33297  0059D4                     u11880:
 33298  0059D4  6EDF               	movwf	indf2,c
 33299  0059D6  0100               	movlb	0	; () banked
 33300  0059D8  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 33301  0059DA  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 33302  0059DC                     l2256:
 33303                           
 33304                           ; BSR set to: 0
 33305                           
 33306                           ; BSR set to: 0
 33307  0059DC  5189               	movf	StringCopy@Len& (0+255),w,b
 33308  0059DE  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 33309  0059E0  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 33310  0059E2  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 33311  0059E4  B0D8               	btfsc	status,0,c
 33312  0059E6  0012               	return	
 33313  0059E8  D7D9               	goto	l2257
 33314  0059EA                     __end_of_StringCopy:
 33315                           	opt stack 0
 33316                           tosu	equ	0xFFF
 33317                           tosh	equ	0xFFE
 33318                           tosl	equ	0xFFD
 33319                           pclath	equ	0xFFA
 33320                           tblptru	equ	0xFF8
 33321                           tblptrh	equ	0xFF7
 33322                           tblptrl	equ	0xFF6
 33323                           tablat	equ	0xFF5
 33324                           prodh	equ	0xFF4
 33325                           prodl	equ	0xFF3
 33326                           intcon	equ	0xFF2
 33327                           intcon2	equ	0xFF1
 33328                           intcon3	equ	0xFF0
 33329                           indf0	equ	0xFEF
 33330                           postinc0	equ	0xFEE
 33331                           plusw0	equ	0xFEB
 33332                           fsr0h	equ	0xFEA
 33333                           fsr0l	equ	0xFE9
 33334                           wreg	equ	0xFE8
 33335                           indf1	equ	0xFE7
 33336                           postinc1	equ	0xFE6
 33337                           postdec1	equ	0xFE5
 33338                           plusw1	equ	0xFE3
 33339                           fsr1h	equ	0xFE2
 33340                           fsr1l	equ	0xFE1
 33341                           indf2	equ	0xFDF
 33342                           postinc2	equ	0xFDE
 33343                           postdec2	equ	0xFDD
 33344                           plusw2	equ	0xFDB
 33345                           fsr2h	equ	0xFDA
 33346                           fsr2l	equ	0xFD9
 33347                           status	equ	0xFD8
 33348                           
 33349 ;; *************** function _OsTmr_StartTimer *****************
 33350 ;; Defined at:
 33351 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33352 ;; Parameters:    Size  Location     Type
 33353 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 33354 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 33355 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 33356 ;;  Timeout         4   35[BANK0 ] unsigned long 
 33357 ;; Auto vars:     Size  Location     Type
 33358 ;;		None
 33359 ;; Return value:  Size  Location     Type
 33360 ;;                  1    wreg      void 
 33361 ;; Registers used:
 33362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33363 ;; Tracked objects:
 33364 ;;		On entry : 0/0
 33365 ;;		On exit  : 0/0
 33366 ;;		Unchanged: 0/0
 33367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33368 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33371 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33372 ;;Total ram usage:        6 bytes
 33373 ;; Hardware stack levels used:    1
 33374 ;; Hardware stack levels required when called:   12
 33375 ;; This function calls:
 33376 ;;		_GetOsTickCounter
 33377 ;; This function is called by:
 33378 ;;		_OsTmr_Wait
 33379 ;;		_CheckModem
 33380 ;;		_SendSmsSm
 33381 ;;		_InitGprsNetwork
 33382 ;;		_HttpGetMethod
 33383 ;;		_I2cSlv_QueryI2cData
 33384 ;;		_Term_MainSm
 33385 ;; This function uses a non-reentrant model
 33386 ;;
 33387                           
 33388                           	psect	text153
 33389  005A48                     __ptext153:
 33390                           	opt stack 0
 33391  005A48                     _OsTmr_StartTimer:
 33392                           	opt stack 12
 33393                           
 33394                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 33395                           
 33396                           ; BSR set to: 0
 33397                           ;incstack = 0
 33398  005A48  0100               	movlb	0	; () banked
 33399  005A4A  EE20 F001          	lfsr	2,1
 33400  005A4E  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 33401  005A50  26D9               	addwf	fsr2l,f,c
 33402  005A52  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 33403  005A54  22DA               	addwfc	fsr2h,f,c
 33404  005A56  0E00               	movlw	0
 33405  005A58  6EDF               	movwf	indf2,c
 33406                           
 33407                           ; BSR set to: 0
 33408                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 33409  005A5A  EC5A  F036         	call	_GetOsTickCounter	;wreg free
 33410  005A5E  0100               	movlb	0	; () banked
 33411  005A60  EE20 F002          	lfsr	2,2
 33412  005A64  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 33413  005A66  26D9               	addwf	fsr2l,f,c
 33414  005A68  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 33415  005A6A  22DA               	addwfc	fsr2h,f,c
 33416  005A6C  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 33417  005A70  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 33418  005A74  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 33419  005A78  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 33420                           
 33421                           ; BSR set to: 0
 33422                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 33423  005A7C  EE20 F006          	lfsr	2,6
 33424  005A80  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 33425  005A82  26D9               	addwf	fsr2l,f,c
 33426  005A84  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 33427  005A86  22DA               	addwfc	fsr2h,f,c
 33428  005A88  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 33429  005A8C  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 33430  005A90  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 33431  005A94  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 33432                           
 33433                           ; BSR set to: 0
 33434                           ;os_timers.c: 127: Timer->Enabled = 1u;
 33435  005A98  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 33436  005A9C  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 33437  005AA0  0E01               	movlw	1
 33438  005AA2  6EDF               	movwf	indf2,c
 33439                           
 33440                           ; BSR set to: 0
 33441  005AA4  0012               	return		;funcret
 33442  005AA6                     __end_of_OsTmr_StartTimer:
 33443                           	opt stack 0
 33444                           tosu	equ	0xFFF
 33445                           tosh	equ	0xFFE
 33446                           tosl	equ	0xFFD
 33447                           pclath	equ	0xFFA
 33448                           tblptru	equ	0xFF8
 33449                           tblptrh	equ	0xFF7
 33450                           tblptrl	equ	0xFF6
 33451                           tablat	equ	0xFF5
 33452                           prodh	equ	0xFF4
 33453                           prodl	equ	0xFF3
 33454                           intcon	equ	0xFF2
 33455                           intcon2	equ	0xFF1
 33456                           intcon3	equ	0xFF0
 33457                           indf0	equ	0xFEF
 33458                           postinc0	equ	0xFEE
 33459                           plusw0	equ	0xFEB
 33460                           fsr0h	equ	0xFEA
 33461                           fsr0l	equ	0xFE9
 33462                           wreg	equ	0xFE8
 33463                           indf1	equ	0xFE7
 33464                           postinc1	equ	0xFE6
 33465                           postdec1	equ	0xFE5
 33466                           plusw1	equ	0xFE3
 33467                           fsr1h	equ	0xFE2
 33468                           fsr1l	equ	0xFE1
 33469                           indf2	equ	0xFDF
 33470                           postinc2	equ	0xFDE
 33471                           postdec2	equ	0xFDD
 33472                           plusw2	equ	0xFDB
 33473                           fsr2h	equ	0xFDA
 33474                           fsr2l	equ	0xFD9
 33475                           status	equ	0xFD8
 33476                           
 33477 ;; *************** function _OsTmr_GetTimerStatus *****************
 33478 ;; Defined at:
 33479 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33480 ;; Parameters:    Size  Location     Type
 33481 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 33482 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 33483 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 33484 ;; Auto vars:     Size  Location     Type
 33485 ;;		None
 33486 ;; Return value:  Size  Location     Type
 33487 ;;                  1    wreg      enum E7740
 33488 ;; Registers used:
 33489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33490 ;; Tracked objects:
 33491 ;;		On entry : 0/0
 33492 ;;		On exit  : 0/0
 33493 ;;		Unchanged: 0/0
 33494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33497 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33498 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33499 ;;Total ram usage:        6 bytes
 33500 ;; Hardware stack levels used:    1
 33501 ;; Hardware stack levels required when called:   13
 33502 ;; This function calls:
 33503 ;;		_GetElapsedTime
 33504 ;; This function is called by:
 33505 ;;		_OsTmr_Wait
 33506 ;;		_CheckModem
 33507 ;;		_SendSmsSm
 33508 ;;		_InitGprsNetwork
 33509 ;;		_HttpGetMethod
 33510 ;;		_I2cSlv_QueryI2cData
 33511 ;;		_Term_MainSm
 33512 ;; This function uses a non-reentrant model
 33513 ;;
 33514                           
 33515                           	psect	text154
 33516  00519C                     __ptext154:
 33517                           	opt stack 0
 33518  00519C                     _OsTmr_GetTimerStatus:
 33519                           	opt stack 11
 33520                           
 33521                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 33522                           
 33523                           ; BSR set to: 0
 33524                           ;incstack = 0
 33525  00519C  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 33526  0051A0  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 33527  0051A4  04DE               	decf	postinc2,w,c
 33528  0051A6  A4D8               	btfss	status,2,c
 33529  0051A8  D030               	goto	l864
 33530                           
 33531                           ;os_timers.c: 197: {
 33532                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 33533  0051AA  0100               	movlb	0	; () banked
 33534  0051AC  EE20 F006          	lfsr	2,6
 33535  0051B0  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33536  0051B2  26D9               	addwf	fsr2l,f,c
 33537  0051B4  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33538  0051B6  22DA               	addwfc	fsr2h,f,c
 33539  0051B8  EE10 F002          	lfsr	1,2
 33540  0051BC  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33541  0051BE  26E1               	addwf	fsr1l,f,c
 33542  0051C0  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33543  0051C2  22E2               	addwfc	fsr1h,f,c
 33544  0051C4  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 33545  0051C8  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 33546  0051CC  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 33547  0051D0  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 33548  0051D4  EC92  F020         	call	_GetElapsedTime	;wreg free
 33549  0051D8  50DE               	movf	postinc2,w,c
 33550  0051DA  0100               	movlb	0	; () banked
 33551  0051DC  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 33552  0051DE  50DE               	movf	postinc2,w,c
 33553  0051E0  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 33554  0051E2  50DE               	movf	postinc2,w,c
 33555  0051E4  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 33556  0051E6  50DE               	movf	postinc2,w,c
 33557  0051E8  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 33558  0051EA  A0D8               	btfss	status,0,c
 33559  0051EC  D017               	goto	l867
 33560                           
 33561                           ; BSR set to: 0
 33562                           ;os_timers.c: 200: {
 33563                           ;os_timers.c: 202: Timer->Enabled = 0u;
 33564  0051EE  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 33565  0051F2  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 33566  0051F6  0E00               	movlw	0
 33567  0051F8  6EDF               	movwf	indf2,c
 33568                           
 33569                           ; BSR set to: 0
 33570                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 33571  0051FA  EE20 F001          	lfsr	2,1
 33572  0051FE  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33573  005200  26D9               	addwf	fsr2l,f,c
 33574  005202  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33575  005204  22DA               	addwfc	fsr2h,f,c
 33576  005206  0E01               	movlw	1
 33577  005208  D008               	goto	L105
 33578  00520A                     l864:
 33579                           
 33580                           ;os_timers.c: 211: else
 33581                           ;os_timers.c: 212: {
 33582                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 33583                           
 33584                           ; BSR set to: 0
 33585  00520A  0100               	movlb	0	; () banked
 33586  00520C  EE20 F001          	lfsr	2,1
 33587  005210  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33588  005212  26D9               	addwf	fsr2l,f,c
 33589  005214  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33590  005216  22DA               	addwfc	fsr2h,f,c
 33591  005218  0E02               	movlw	2
 33592  00521A                     L105:
 33593  00521A  6EDF               	movwf	indf2,c
 33594  00521C                     l867:
 33595                           
 33596                           ; BSR set to: 0
 33597                           ;os_timers.c: 215: }
 33598                           ;os_timers.c: 218: return Timer->Status;
 33599  00521C  EE20 F001          	lfsr	2,1
 33600  005220  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 33601  005222  26D9               	addwf	fsr2l,f,c
 33602  005224  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 33603  005226  22DA               	addwfc	fsr2h,f,c
 33604  005228  50DF               	movf	indf2,w,c
 33605  00522A  0012               	return	
 33606  00522C                     __end_of_OsTmr_GetTimerStatus:
 33607                           	opt stack 0
 33608                           tosu	equ	0xFFF
 33609                           tosh	equ	0xFFE
 33610                           tosl	equ	0xFFD
 33611                           pclath	equ	0xFFA
 33612                           tblptru	equ	0xFF8
 33613                           tblptrh	equ	0xFF7
 33614                           tblptrl	equ	0xFF6
 33615                           tablat	equ	0xFF5
 33616                           prodh	equ	0xFF4
 33617                           prodl	equ	0xFF3
 33618                           intcon	equ	0xFF2
 33619                           intcon2	equ	0xFF1
 33620                           intcon3	equ	0xFF0
 33621                           indf0	equ	0xFEF
 33622                           postinc0	equ	0xFEE
 33623                           plusw0	equ	0xFEB
 33624                           fsr0h	equ	0xFEA
 33625                           fsr0l	equ	0xFE9
 33626                           wreg	equ	0xFE8
 33627                           indf1	equ	0xFE7
 33628                           postinc1	equ	0xFE6
 33629                           postdec1	equ	0xFE5
 33630                           plusw1	equ	0xFE3
 33631                           fsr1h	equ	0xFE2
 33632                           fsr1l	equ	0xFE1
 33633                           indf2	equ	0xFDF
 33634                           postinc2	equ	0xFDE
 33635                           postdec2	equ	0xFDD
 33636                           plusw2	equ	0xFDB
 33637                           fsr2h	equ	0xFDA
 33638                           fsr2l	equ	0xFD9
 33639                           status	equ	0xFD8
 33640                           
 33641 ;; *************** function _GetElapsedTime *****************
 33642 ;; Defined at:
 33643 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33644 ;; Parameters:    Size  Location     Type
 33645 ;;  StartTime       4   33[BANK0 ] unsigned long 
 33646 ;; Auto vars:     Size  Location     Type
 33647 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 33648 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 33649 ;; Return value:  Size  Location     Type
 33650 ;;                  4   33[BANK0 ] unsigned long 
 33651 ;; Registers used:
 33652 ;;		wreg, status,2, status,0, cstack
 33653 ;; Tracked objects:
 33654 ;;		On entry : 0/0
 33655 ;;		On exit  : 0/0
 33656 ;;		Unchanged: 0/0
 33657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33658 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33659 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33660 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33661 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33662 ;;Total ram usage:       20 bytes
 33663 ;; Hardware stack levels used:    1
 33664 ;; Hardware stack levels required when called:   12
 33665 ;; This function calls:
 33666 ;;		_GetOsTickCounter
 33667 ;; This function is called by:
 33668 ;;		_OsTmr_GetTimerStatus
 33669 ;;		_OsTmr_GetRemainingTime
 33670 ;; This function uses a non-reentrant model
 33671 ;;
 33672                           
 33673                           	psect	text155
 33674  004124                     __ptext155:
 33675                           	opt stack 0
 33676  004124                     _GetElapsedTime:
 33677                           	opt stack 11
 33678                           
 33679                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 33680                           ;os_timers.c: 87: UINT32 TimeValue;
 33681                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 33682                           
 33683                           ; BSR set to: 0
 33684                           ;incstack = 0
 33685  004124  EC5A  F036         	call	_GetOsTickCounter	;wreg free
 33686  004128  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 33687  00412C  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 33688  004130  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 33689  004134  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 33690                           
 33691                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 33692  004138  0100               	movlb	0	; () banked
 33693  00413A  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 33694  00413C  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33695  00413E  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 33696  004140  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33697  004142  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 33698  004144  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33699  004146  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 33700  004148  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33701  00414A  A0D8               	btfss	status,0,c
 33702  00414C  D01D               	goto	l844
 33703                           
 33704                           ; BSR set to: 0
 33705                           ;os_timers.c: 94: {
 33706                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 33707  00414E  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 33708  004152  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 33709  004156  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 33710  00415A  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 33711  00415E  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 33712  004160  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 33713  004162  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 33714  004164  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 33715  004166  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 33716  004168  0E00               	movlw	0
 33717  00416A  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 33718  00416C  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 33719  00416E  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 33720  004170  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33721  004172  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 33722  004174  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 33723  004176  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33724  004178  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 33725  00417A  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 33726  00417C  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33727  00417E  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 33728  004180  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 33729  004182  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33730  004184  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 33731  004186  D028               	goto	L75
 33732  004188                     l844:
 33733                           
 33734                           ; BSR set to: 0
 33735                           ;os_timers.c: 97: else
 33736                           ;os_timers.c: 98: {
 33737                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 33738                           
 33739                           ; BSR set to: 0
 33740  004188  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 33741  00418C  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 33742  004190  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 33743  004194  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 33744  004198  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 33745  00419A  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 33746  00419C  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 33747  00419E  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 33748  0041A0  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 33749  0041A2  0E00               	movlw	0
 33750  0041A4  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 33751  0041A6  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 33752  0041A8  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 33753  0041AA  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 33754  0041AC  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 33755  0041AE  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 33756  0041B0  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 33757  0041B2  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 33758  0041B4  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 33759  0041B6  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 33760  0041B8  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 33761  0041BA  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 33762  0041BC  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 33763  0041BE  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 33764  0041C0  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 33765  0041C2  0EFF               	movlw	255
 33766  0041C4  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 33767  0041C6  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 33768  0041C8  0EFF               	movlw	255
 33769  0041CA  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 33770  0041CC  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 33771  0041CE  0EFF               	movlw	255
 33772  0041D0  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 33773  0041D2  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 33774  0041D4  0EFF               	movlw	255
 33775  0041D6  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 33776  0041D8                     L75:
 33777  0041D8  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 33778                           
 33779                           ; BSR set to: 0
 33780                           ;os_timers.c: 100: }
 33781                           ;os_timers.c: 102: return TimeValue;
 33782                           
 33783                           ; BSR set to: 0
 33784  0041DA  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 33785  0041DE  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 33786  0041E2  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 33787  0041E6  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 33788  0041EA  0012               	return	
 33789  0041EC                     __end_of_GetElapsedTime:
 33790                           	opt stack 0
 33791                           tosu	equ	0xFFF
 33792                           tosh	equ	0xFFE
 33793                           tosl	equ	0xFFD
 33794                           pclath	equ	0xFFA
 33795                           tblptru	equ	0xFF8
 33796                           tblptrh	equ	0xFF7
 33797                           tblptrl	equ	0xFF6
 33798                           tablat	equ	0xFF5
 33799                           prodh	equ	0xFF4
 33800                           prodl	equ	0xFF3
 33801                           intcon	equ	0xFF2
 33802                           intcon2	equ	0xFF1
 33803                           intcon3	equ	0xFF0
 33804                           indf0	equ	0xFEF
 33805                           postinc0	equ	0xFEE
 33806                           plusw0	equ	0xFEB
 33807                           fsr0h	equ	0xFEA
 33808                           fsr0l	equ	0xFE9
 33809                           wreg	equ	0xFE8
 33810                           indf1	equ	0xFE7
 33811                           postinc1	equ	0xFE6
 33812                           postdec1	equ	0xFE5
 33813                           plusw1	equ	0xFE3
 33814                           fsr1h	equ	0xFE2
 33815                           fsr1l	equ	0xFE1
 33816                           indf2	equ	0xFDF
 33817                           postinc2	equ	0xFDE
 33818                           postdec2	equ	0xFDD
 33819                           plusw2	equ	0xFDB
 33820                           fsr2h	equ	0xFDA
 33821                           fsr2l	equ	0xFD9
 33822                           status	equ	0xFD8
 33823                           
 33824 ;; *************** function _GetOsTickCounter *****************
 33825 ;; Defined at:
 33826 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 33827 ;; Parameters:    Size  Location     Type
 33828 ;;		None
 33829 ;; Auto vars:     Size  Location     Type
 33830 ;;		None
 33831 ;; Return value:  Size  Location     Type
 33832 ;;                  4   29[BANK0 ] unsigned long 
 33833 ;; Registers used:
 33834 ;;		None
 33835 ;; Tracked objects:
 33836 ;;		On entry : 0/0
 33837 ;;		On exit  : 0/0
 33838 ;;		Unchanged: 0/0
 33839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33840 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33843 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33844 ;;Total ram usage:        4 bytes
 33845 ;; Hardware stack levels used:    1
 33846 ;; Hardware stack levels required when called:   11
 33847 ;; This function calls:
 33848 ;;		Nothing
 33849 ;; This function is called by:
 33850 ;;		_GetElapsedTime
 33851 ;;		_OsTmr_StartTimer
 33852 ;;		_OsTmr_GetElapsedTime
 33853 ;; This function uses a non-reentrant model
 33854 ;;
 33855                           
 33856                           	psect	text156
 33857  006CB4                     __ptext156:
 33858                           	opt stack 0
 33859  006CB4                     _GetOsTickCounter:
 33860                           	opt stack 12
 33861                           
 33862                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 33863                           
 33864                           ; BSR set to: 0
 33865                           ;incstack = 0
 33866  006CB4  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 33867  006CB8  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 33868  006CBC  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 33869  006CC0  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 33870  006CC4  0012               	return		;funcret
 33871  006CC6                     __end_of_GetOsTickCounter:
 33872                           	opt stack 0
 33873                           tosu	equ	0xFFF
 33874                           tosh	equ	0xFFE
 33875                           tosl	equ	0xFFD
 33876                           pclath	equ	0xFFA
 33877                           tblptru	equ	0xFF8
 33878                           tblptrh	equ	0xFF7
 33879                           tblptrl	equ	0xFF6
 33880                           tablat	equ	0xFF5
 33881                           prodh	equ	0xFF4
 33882                           prodl	equ	0xFF3
 33883                           intcon	equ	0xFF2
 33884                           intcon2	equ	0xFF1
 33885                           intcon3	equ	0xFF0
 33886                           indf0	equ	0xFEF
 33887                           postinc0	equ	0xFEE
 33888                           plusw0	equ	0xFEB
 33889                           fsr0h	equ	0xFEA
 33890                           fsr0l	equ	0xFE9
 33891                           wreg	equ	0xFE8
 33892                           indf1	equ	0xFE7
 33893                           postinc1	equ	0xFE6
 33894                           postdec1	equ	0xFE5
 33895                           plusw1	equ	0xFE3
 33896                           fsr1h	equ	0xFE2
 33897                           fsr1l	equ	0xFE1
 33898                           indf2	equ	0xFDF
 33899                           postinc2	equ	0xFDE
 33900                           postdec2	equ	0xFDD
 33901                           plusw2	equ	0xFDB
 33902                           fsr2h	equ	0xFDA
 33903                           fsr2l	equ	0xFD9
 33904                           status	equ	0xFD8
 33905                           
 33906 ;; *************** function _ClearBuffer *****************
 33907 ;; Defined at:
 33908 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 33909 ;; Parameters:    Size  Location     Type
 33910 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 33911 ;;		 -> GsmGprsTerminal@UartBuffer(200), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(5
      +0), 
 33912 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 33913 ;;  Len             2   31[BANK0 ] unsigned short 
 33914 ;; Auto vars:     Size  Location     Type
 33915 ;;  Index           2   33[BANK0 ] unsigned short 
 33916 ;; Return value:  Size  Location     Type
 33917 ;;                  1    wreg      void 
 33918 ;; Registers used:
 33919 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33920 ;; Tracked objects:
 33921 ;;		On entry : 0/0
 33922 ;;		On exit  : 0/0
 33923 ;;		Unchanged: 0/0
 33924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33925 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33926 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33928 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33929 ;;Total ram usage:        6 bytes
 33930 ;; Hardware stack levels used:    1
 33931 ;; Hardware stack levels required when called:   11
 33932 ;; This function calls:
 33933 ;;		Nothing
 33934 ;; This function is called by:
 33935 ;;		_GetSmsSm
 33936 ;;		_GetCallerNumber
 33937 ;;		_InitGprsNetwork
 33938 ;;		_HttpGetMethod
 33939 ;;		_Eeprom_Reset
 33940 ;;		_GsmGprsTerminal
 33941 ;; This function uses a non-reentrant model
 33942 ;;
 33943                           
 33944                           	psect	text157
 33945  00666E                     __ptext157:
 33946                           	opt stack 0
 33947  00666E                     _ClearBuffer:
 33948                           	opt stack 14
 33949                           
 33950                           ;sf.c: 126: UINT16 Index = 0;
 33951                           
 33952                           ;incstack = 0
 33953  00666E  0E00               	movlw	0
 33954  006670  0100               	movlb	0	; () banked
 33955  006672  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33956  006674  0E00               	movlw	0
 33957  006676  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33958                           
 33959                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 33960  006678  0E00               	movlw	0
 33961  00667A  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33962  00667C  0E00               	movlw	0
 33963  00667E  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33964  006680  D00A               	goto	l2262
 33965  006682                     
 33966                           ; BSR set to: 0
 33967                           ;sf.c: 130: {
 33968                           ;sf.c: 131: *(Buffer + Index) = 0;
 33969                           
 33970                           ; BSR set to: 0
 33971  006682  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33972  006684  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 33973  006686  6ED9               	movwf	fsr2l,c
 33974  006688  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33975  00668A  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 33976  00668C  6EDA               	movwf	fsr2h,c
 33977  00668E  0E00               	movlw	0
 33978  006690  6EDF               	movwf	indf2,c
 33979                           
 33980                           ; BSR set to: 0
 33981  006692  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 33982  006694  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 33983  006696                     l2262:
 33984                           
 33985                           ; BSR set to: 0
 33986                           
 33987                           ; BSR set to: 0
 33988  006696  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33989  006698  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 33990  00669A  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33991  00669C  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 33992  00669E  A0D8               	btfss	status,0,c
 33993  0066A0  0012               	return	
 33994  0066A2  D7EF               	goto	l2263
 33995  0066A4                     __end_of_ClearBuffer:
 33996                           	opt stack 0
 33997                           tosu	equ	0xFFF
 33998                           tosh	equ	0xFFE
 33999                           tosl	equ	0xFFD
 34000                           pclath	equ	0xFFA
 34001                           tblptru	equ	0xFF8
 34002                           tblptrh	equ	0xFF7
 34003                           tblptrl	equ	0xFF6
 34004                           tablat	equ	0xFF5
 34005                           prodh	equ	0xFF4
 34006                           prodl	equ	0xFF3
 34007                           intcon	equ	0xFF2
 34008                           intcon2	equ	0xFF1
 34009                           intcon3	equ	0xFF0
 34010                           indf0	equ	0xFEF
 34011                           postinc0	equ	0xFEE
 34012                           plusw0	equ	0xFEB
 34013                           fsr0h	equ	0xFEA
 34014                           fsr0l	equ	0xFE9
 34015                           wreg	equ	0xFE8
 34016                           indf1	equ	0xFE7
 34017                           postinc1	equ	0xFE6
 34018                           postdec1	equ	0xFE5
 34019                           plusw1	equ	0xFE3
 34020                           fsr1h	equ	0xFE2
 34021                           fsr1l	equ	0xFE1
 34022                           indf2	equ	0xFDF
 34023                           postinc2	equ	0xFDE
 34024                           postdec2	equ	0xFDD
 34025                           plusw2	equ	0xFDB
 34026                           fsr2h	equ	0xFDA
 34027                           fsr2l	equ	0xFD9
 34028                           status	equ	0xFD8
 34029                           
 34030 ;; *************** function _LedStateMachine *****************
 34031 ;; Defined at:
 34032 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34033 ;; Parameters:    Size  Location     Type
 34034 ;;  Led             1    wreg     unsigned char 
 34035 ;;  LedSts          2   47[BANK0 ] PTR enum E8955
 34036 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 34037 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 34038 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 34039 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 34040 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 34041 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 34042 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 34043 ;; Auto vars:     Size  Location     Type
 34044 ;;  Led             1   57[BANK0 ] unsigned char 
 34045 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 34046 ;; Return value:  Size  Location     Type
 34047 ;;                  1    wreg      unsigned char 
 34048 ;; Registers used:
 34049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34050 ;; Tracked objects:
 34051 ;;		On entry : 0/0
 34052 ;;		On exit  : 0/0
 34053 ;;		Unchanged: 0/0
 34054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34055 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34057 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34058 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34059 ;;Total ram usage:       11 bytes
 34060 ;; Hardware stack levels used:    1
 34061 ;; Hardware stack levels required when called:   13
 34062 ;; This function calls:
 34063 ;;		_LedBlinkStateMachine
 34064 ;;		_LedPulseStateMachine
 34065 ;;		_Led_SetLedStatus
 34066 ;; This function is called by:
 34067 ;;		_Led_MainTask
 34068 ;; This function uses a non-reentrant model
 34069 ;;
 34070                           
 34071                           	psect	text158
 34072  0049D2                     __ptext158:
 34073                           	opt stack 0
 34074  0049D2                     _LedStateMachine:
 34075                           	opt stack 14
 34076                           
 34077                           ; BSR set to: 0
 34078                           ;incstack = 0
 34079                           ;LedStateMachine@Led stored from wreg
 34080  0049D2  0100               	movlb	0	; () banked
 34081  0049D4  6F99               	movwf	LedStateMachine@Led& (0+255),b
 34082                           
 34083                           ;led.c: 238: UINT8 LedOutSts = 0u;
 34084  0049D6  0E00               	movlw	0
 34085  0049D8  0100               	movlb	0	; () banked
 34086  0049DA  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34087                           
 34088                           ;led.c: 241: switch (*LedSts)
 34089  0049DC  D037               	goto	l2121
 34090  0049DE                     
 34091                           ; BSR set to: 0
 34092                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 34093                           
 34094                           ; BSR set to: 0
 34095  0049DE  0E00               	movlw	0
 34096  0049E0  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34097                           
 34098                           ; BSR set to: 0
 34099                           ;led.c: 246: *LedOut = ((UINT8)(0));
 34100  0049E2  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 34101  0049E6  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 34102  0049EA  0E00               	movlw	0
 34103  0049EC  D007               	goto	L76
 34104  0049EE                     
 34105                           ; BSR set to: 0
 34106                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 34107                           
 34108                           ; BSR set to: 0
 34109  0049EE  0E01               	movlw	1
 34110  0049F0  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34111                           
 34112                           ; BSR set to: 0
 34113                           ;led.c: 252: *LedOut = ((UINT8)(1));
 34114  0049F2  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 34115  0049F6  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 34116  0049FA  0E01               	movlw	1
 34117  0049FC                     L76:
 34118  0049FC  6EDF               	movwf	indf2,c
 34119                           
 34120                           ;led.c: 253: break;
 34121  0049FE  D03A               	goto	l2123
 34122  004A00                     
 34123                           ; BSR set to: 0
 34124                           ;led.c: 257: if (*LedOut == 1)
 34125                           
 34126                           ; BSR set to: 0
 34127  004A00  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 34128  004A04  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 34129  004A08  04DE               	decf	postinc2,w,c
 34130  004A0A  A4D8               	btfss	status,2,c
 34131  004A0C  D006               	goto	l2126
 34132                           
 34133                           ; BSR set to: 0
 34134                           ;led.c: 258: {
 34135                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 34136  004A0E  0E00               	movlw	0
 34137  004A10  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 34138  004A12  5199               	movf	LedStateMachine@Led& (0+255),w,b
 34139  004A14  ECE6  F033         	call	_Led_SetLedStatus
 34140                           
 34141                           ;led.c: 261: }
 34142  004A18  D02D               	goto	l2123
 34143  004A1A                     l2126:
 34144                           
 34145                           ;led.c: 262: else
 34146                           ;led.c: 263: {
 34147                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 34148  004A1A  0E01               	movlw	1
 34149  004A1C  0100               	movlb	0	; () banked
 34150  004A1E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 34151  004A20  5199               	movf	LedStateMachine@Led& (0+255),w,b
 34152  004A22  ECE6  F033         	call	_Led_SetLedStatus
 34153                           
 34154                           ;led.c: 266: }
 34155                           ;led.c: 267: break;
 34156  004A26  D026               	goto	l2123
 34157  004A28                     
 34158                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 34159  004A28  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 34160  004A2C  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 34161  004A30  EC1A  F014         	call	_LedBlinkStateMachine	;wreg free
 34162  004A34  D008               	goto	L77
 34163  004A36                     
 34164                           ; BSR set to: 0
 34165                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 34166                           
 34167                           ; BSR set to: 0
 34168  004A36  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 34169  004A3A  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 34170  004A3E  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 34171  004A42  EC47  F01A         	call	_LedPulseStateMachine	;wreg free
 34172  004A46                     L77:
 34173  004A46  0100               	movlb	0	; () banked
 34174  004A48  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 34175                           
 34176                           ; BSR set to: 0
 34177                           ;led.c: 281: }
 34178                           
 34179                           ; BSR set to: 0
 34180                           ;led.c: 280: break;
 34181                           
 34182                           ;led.c: 279: default:
 34183                           
 34184                           ;led.c: 277: break;
 34185  004A4A  D014               	goto	l2123
 34186  004A4C                     l2121:
 34187                           
 34188                           ; BSR set to: 0
 34189                           
 34190                           ; BSR set to: 0
 34191  004A4C  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 34192  004A50  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 34193  004A54  50DF               	movf	indf2,w,c
 34194                           
 34195                           ; Switch size 1, requested type "space"
 34196                           ; Number of cases is 5, Range of values is 0 to 4
 34197                           ; switch strategies available:
 34198                           ; Name         Instructions Cycles
 34199                           ; simple_byte           16     9 (average)
 34200                           ;	Chosen strategy is simple_byte
 34201  004A56  0A00               	xorlw	0	; case 0
 34202  004A58  B4D8               	btfsc	status,2,c
 34203  004A5A  D7C1               	goto	l2122
 34204  004A5C  0A01               	xorlw	1	; case 1
 34205  004A5E  B4D8               	btfsc	status,2,c
 34206  004A60  D7C6               	goto	l2124
 34207  004A62  0A03               	xorlw	3	; case 2
 34208  004A64  B4D8               	btfsc	status,2,c
 34209  004A66  D7CC               	goto	l2125
 34210  004A68  0A01               	xorlw	1	; case 3
 34211  004A6A  B4D8               	btfsc	status,2,c
 34212  004A6C  D7DD               	goto	l2128
 34213  004A6E  0A07               	xorlw	7	; case 4
 34214  004A70  B4D8               	btfsc	status,2,c
 34215  004A72  D7E1               	goto	l2129
 34216  004A74                     l2123:
 34217                           
 34218                           ;led.c: 283: return LedOutSts;
 34219                           
 34220                           ; BSR set to: 0
 34221  004A74  0100               	movlb	0	; () banked
 34222  004A76  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 34223  004A78  0012               	return	
 34224  004A7A                     __end_of_LedStateMachine:
 34225                           	opt stack 0
 34226                           tosu	equ	0xFFF
 34227                           tosh	equ	0xFFE
 34228                           tosl	equ	0xFFD
 34229                           pclath	equ	0xFFA
 34230                           tblptru	equ	0xFF8
 34231                           tblptrh	equ	0xFF7
 34232                           tblptrl	equ	0xFF6
 34233                           tablat	equ	0xFF5
 34234                           prodh	equ	0xFF4
 34235                           prodl	equ	0xFF3
 34236                           intcon	equ	0xFF2
 34237                           intcon2	equ	0xFF1
 34238                           intcon3	equ	0xFF0
 34239                           indf0	equ	0xFEF
 34240                           postinc0	equ	0xFEE
 34241                           plusw0	equ	0xFEB
 34242                           fsr0h	equ	0xFEA
 34243                           fsr0l	equ	0xFE9
 34244                           wreg	equ	0xFE8
 34245                           indf1	equ	0xFE7
 34246                           postinc1	equ	0xFE6
 34247                           postdec1	equ	0xFE5
 34248                           plusw1	equ	0xFE3
 34249                           fsr1h	equ	0xFE2
 34250                           fsr1l	equ	0xFE1
 34251                           indf2	equ	0xFDF
 34252                           postinc2	equ	0xFDE
 34253                           postdec2	equ	0xFDD
 34254                           plusw2	equ	0xFDB
 34255                           fsr2h	equ	0xFDA
 34256                           fsr2l	equ	0xFD9
 34257                           status	equ	0xFD8
 34258                           
 34259 ;; *************** function _LedPulseStateMachine *****************
 34260 ;; Defined at:
 34261 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34262 ;; Parameters:    Size  Location     Type
 34263 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 34264 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 34265 ;;  Led             1   44[BANK0 ] unsigned char 
 34266 ;; Auto vars:     Size  Location     Type
 34267 ;;		None
 34268 ;; Return value:  Size  Location     Type
 34269 ;;                  1    wreg      unsigned char 
 34270 ;; Registers used:
 34271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34272 ;; Tracked objects:
 34273 ;;		On entry : 0/0
 34274 ;;		On exit  : 0/0
 34275 ;;		Unchanged: 0/0
 34276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34277 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34280 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34281 ;;Total ram usage:        5 bytes
 34282 ;; Hardware stack levels used:    1
 34283 ;; Hardware stack levels required when called:   12
 34284 ;; This function calls:
 34285 ;;		_Led_SetLedStatus
 34286 ;;		___lwdiv
 34287 ;; This function is called by:
 34288 ;;		_LedStateMachine
 34289 ;; This function uses a non-reentrant model
 34290 ;;
 34291                           
 34292                           	psect	text159
 34293  00348E                     __ptext159:
 34294                           	opt stack 0
 34295  00348E                     _LedPulseStateMachine:
 34296                           	opt stack 14
 34297                           
 34298                           ;led.c: 185: switch (LedPulse->LedPulseState)
 34299                           
 34300                           ; BSR set to: 0
 34301                           ;incstack = 0
 34302  00348E  D05C               	goto	l2111
 34303  003490                     
 34304                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 34305  003490  0100               	movlb	0	; () banked
 34306  003492  EE20 F001          	lfsr	2,1
 34307  003496  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34308  003498  26D9               	addwf	fsr2l,f,c
 34309  00349A  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34310  00349C  22DA               	addwfc	fsr2h,f,c
 34311  00349E  0E01               	movlw	1
 34312  0034A0  6EDF               	movwf	indf2,c
 34313                           
 34314                           ; BSR set to: 0
 34315                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 34316  0034A2  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34317  0034A6  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34318  0034AA  0E01               	movlw	1
 34319  0034AC  D036               	goto	L78
 34320  0034AE                     
 34321                           ;led.c: 196: LedPulse->LedPulseCounter++;
 34322                           
 34323                           ; BSR set to: 0
 34324  0034AE  0100               	movlb	0	; () banked
 34325  0034B0  EE20 F002          	lfsr	2,2
 34326  0034B4  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34327  0034B6  26D9               	addwf	fsr2l,f,c
 34328  0034B8  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34329  0034BA  22DA               	addwfc	fsr2h,f,c
 34330  0034BC  2ADE               	incf	postinc2,f,c
 34331  0034BE  0E00               	movlw	0
 34332  0034C0  22DD               	addwfc	postdec2,f,c
 34333                           
 34334                           ; BSR set to: 0
 34335                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 34336  0034C2  EE20 F004          	lfsr	2,4
 34337  0034C6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34338  0034C8  26D9               	addwf	fsr2l,f,c
 34339  0034CA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34340  0034CC  22DA               	addwfc	fsr2h,f,c
 34341  0034CE  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34342  0034D2  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34343  0034D6  0E00               	movlw	0
 34344  0034D8  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34345  0034DA  0E32               	movlw	50
 34346  0034DC  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34347  0034DE  EC04  F02F         	call	___lwdiv	;wreg free
 34348  0034E2  0100               	movlb	0	; () banked
 34349  0034E4  EE20 F002          	lfsr	2,2
 34350  0034E8  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34351  0034EA  26D9               	addwf	fsr2l,f,c
 34352  0034EC  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34353  0034EE  22DA               	addwfc	fsr2h,f,c
 34354  0034F0  5183               	movf	?___lwdiv& (0+255),w,b
 34355  0034F2  5CDE               	subwf	postinc2,w,c
 34356  0034F4  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34357  0034F6  58DE               	subwfb	postinc2,w,c
 34358  0034F8  A0D8               	btfss	status,0,c
 34359  0034FA  D034               	goto	l2113
 34360                           
 34361                           ; BSR set to: 0
 34362                           ;led.c: 199: {
 34363                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 34364  0034FC  EE20 F002          	lfsr	2,2
 34365  003500  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34366  003502  26D9               	addwf	fsr2l,f,c
 34367  003504  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34368  003506  22DA               	addwfc	fsr2h,f,c
 34369  003508  0E00               	movlw	0
 34370  00350A  6EDE               	movwf	postinc2,c
 34371  00350C  0E00               	movlw	0
 34372  00350E  6EDD               	movwf	postdec2,c
 34373                           
 34374                           ; BSR set to: 0
 34375                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 34376  003510  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34377  003514  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34378  003518  0E02               	movlw	2
 34379  00351A                     L78:
 34380  00351A  6EDF               	movwf	indf2,c
 34381                           
 34382                           ; BSR set to: 0
 34383                           ;led.c: 204: }
 34384                           ;led.c: 205: break;
 34385  00351C  D023               	goto	l2113
 34386  00351E                     
 34387                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 34388                           
 34389                           ; BSR set to: 0
 34390  00351E  0100               	movlb	0	; () banked
 34391  003520  EE20 F001          	lfsr	2,1
 34392  003524  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34393  003526  26D9               	addwf	fsr2l,f,c
 34394  003528  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34395  00352A  22DA               	addwfc	fsr2h,f,c
 34396  00352C  0E00               	movlw	0
 34397  00352E  6EDF               	movwf	indf2,c
 34398                           
 34399                           ; BSR set to: 0
 34400                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 34401  003530  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34402  003534  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34403  003538  0E00               	movlw	0
 34404  00353A  6EDF               	movwf	indf2,c
 34405                           
 34406                           ; BSR set to: 0
 34407                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 34408  00353C  0E00               	movlw	0
 34409  00353E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 34410  003540  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 34411  003542  ECE6  F033         	call	_Led_SetLedStatus
 34412                           
 34413                           ;led.c: 218: }
 34414                           
 34415                           ;led.c: 217: break;
 34416                           
 34417                           ;led.c: 216: default:
 34418                           
 34419                           ;led.c: 214: break;
 34420  003546  D00E               	goto	l2113
 34421  003548                     l2111:
 34422  003548  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 34423  00354C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 34424  003550  50DF               	movf	indf2,w,c
 34425                           
 34426                           ; Switch size 1, requested type "space"
 34427                           ; Number of cases is 3, Range of values is 0 to 2
 34428                           ; switch strategies available:
 34429                           ; Name         Instructions Cycles
 34430                           ; simple_byte           10     6 (average)
 34431                           ;	Chosen strategy is simple_byte
 34432  003552  0A00               	xorlw	0	; case 0
 34433  003554  B4D8               	btfsc	status,2,c
 34434  003556  D79C               	goto	l2112
 34435  003558  0A01               	xorlw	1	; case 1
 34436  00355A  B4D8               	btfsc	status,2,c
 34437  00355C  D7A8               	goto	l2114
 34438  00355E  0A03               	xorlw	3	; case 2
 34439  003560  B4D8               	btfsc	status,2,c
 34440  003562  D7DD               	goto	l2116
 34441  003564                     l2113:
 34442                           
 34443                           ;led.c: 221: return (LedPulse->LedOutState);
 34444  003564  0100               	movlb	0	; () banked
 34445  003566  EE20 F001          	lfsr	2,1
 34446  00356A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 34447  00356C  26D9               	addwf	fsr2l,f,c
 34448  00356E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 34449  003570  22DA               	addwfc	fsr2h,f,c
 34450  003572  50DF               	movf	indf2,w,c
 34451  003574  0012               	return	
 34452  003576                     __end_of_LedPulseStateMachine:
 34453                           	opt stack 0
 34454                           tosu	equ	0xFFF
 34455                           tosh	equ	0xFFE
 34456                           tosl	equ	0xFFD
 34457                           pclath	equ	0xFFA
 34458                           tblptru	equ	0xFF8
 34459                           tblptrh	equ	0xFF7
 34460                           tblptrl	equ	0xFF6
 34461                           tablat	equ	0xFF5
 34462                           prodh	equ	0xFF4
 34463                           prodl	equ	0xFF3
 34464                           intcon	equ	0xFF2
 34465                           intcon2	equ	0xFF1
 34466                           intcon3	equ	0xFF0
 34467                           indf0	equ	0xFEF
 34468                           postinc0	equ	0xFEE
 34469                           plusw0	equ	0xFEB
 34470                           fsr0h	equ	0xFEA
 34471                           fsr0l	equ	0xFE9
 34472                           wreg	equ	0xFE8
 34473                           indf1	equ	0xFE7
 34474                           postinc1	equ	0xFE6
 34475                           postdec1	equ	0xFE5
 34476                           plusw1	equ	0xFE3
 34477                           fsr1h	equ	0xFE2
 34478                           fsr1l	equ	0xFE1
 34479                           indf2	equ	0xFDF
 34480                           postinc2	equ	0xFDE
 34481                           postdec2	equ	0xFDD
 34482                           plusw2	equ	0xFDB
 34483                           fsr2h	equ	0xFDA
 34484                           fsr2l	equ	0xFD9
 34485                           status	equ	0xFD8
 34486                           
 34487 ;; *************** function _Led_SetLedStatus *****************
 34488 ;; Defined at:
 34489 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34490 ;; Parameters:    Size  Location     Type
 34491 ;;  Led             1    wreg     unsigned char 
 34492 ;;  LedSts          1   29[BANK0 ] enum E8955
 34493 ;; Auto vars:     Size  Location     Type
 34494 ;;  Led             1   30[BANK0 ] unsigned char 
 34495 ;; Return value:  Size  Location     Type
 34496 ;;                  1    wreg      void 
 34497 ;; Registers used:
 34498 ;;		wreg, status,2, status,0
 34499 ;; Tracked objects:
 34500 ;;		On entry : 0/0
 34501 ;;		On exit  : 0/0
 34502 ;;		Unchanged: 0/0
 34503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34504 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34505 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34507 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34508 ;;Total ram usage:        2 bytes
 34509 ;; Hardware stack levels used:    1
 34510 ;; Hardware stack levels required when called:   11
 34511 ;; This function calls:
 34512 ;;		Nothing
 34513 ;; This function is called by:
 34514 ;;		_LedPulseStateMachine
 34515 ;;		_LedStateMachine
 34516 ;;		_waitSetupCall
 34517 ;;		_initFsm
 34518 ;;		_cmdVisualEffet
 34519 ;; This function uses a non-reentrant model
 34520 ;;
 34521                           
 34522                           	psect	text160
 34523  0067CC                     __ptext160:
 34524                           	opt stack 0
 34525  0067CC                     _Led_SetLedStatus:
 34526                           	opt stack 14
 34527                           
 34528                           ; BSR set to: 0
 34529                           ;incstack = 0
 34530                           ;Led_SetLedStatus@Led stored from wreg
 34531  0067CC  0100               	movlb	0	; () banked
 34532  0067CE  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 34533                           
 34534                           ;led.c: 341: switch (Led)
 34535  0067D0  D009               	goto	l2142
 34536  0067D2                     l2143:
 34537                           
 34538                           ; BSR set to: 0
 34539                           ;led.c: 344: Led1Sts = LedSts;
 34540  0067D2  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 34541                           
 34542                           ;led.c: 345: break;
 34543  0067D6  0012               	return	
 34544  0067D8                     l2145:
 34545                           
 34546                           ; BSR set to: 0
 34547                           ;led.c: 348: Led2Sts = LedSts;
 34548  0067D8  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 34549                           
 34550                           ;led.c: 349: break;
 34551  0067DC  0012               	return	
 34552  0067DE                     l2146:
 34553                           
 34554                           ; BSR set to: 0
 34555                           ;led.c: 352: Led3Sts = LedSts;
 34556  0067DE  C07D  F1F5         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 34557                           
 34558                           ; BSR set to: 0
 34559                           ;led.c: 357: }
 34560                           
 34561                           ; BSR set to: 0
 34562                           ;led.c: 356: break;
 34563                           
 34564                           ;led.c: 355: default:
 34565                           
 34566                           ;led.c: 353: break;
 34567  0067E2  0012               	return	
 34568  0067E4                     l2142:
 34569                           
 34570                           ; BSR set to: 0
 34571  0067E4  0100               	movlb	0	; () banked
 34572  0067E6  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 34573                           
 34574                           ; Switch size 1, requested type "space"
 34575                           ; Number of cases is 3, Range of values is 1 to 3
 34576                           ; switch strategies available:
 34577                           ; Name         Instructions Cycles
 34578                           ; simple_byte           10     6 (average)
 34579                           ;	Chosen strategy is simple_byte
 34580  0067E8  0A01               	xorlw	1	; case 1
 34581  0067EA  B4D8               	btfsc	status,2,c
 34582  0067EC  D7F2               	goto	l2143
 34583  0067EE  0A03               	xorlw	3	; case 2
 34584  0067F0  B4D8               	btfsc	status,2,c
 34585  0067F2  D7F2               	goto	l2145
 34586  0067F4  0A01               	xorlw	1	; case 3
 34587  0067F6  A4D8               	btfss	status,2,c
 34588  0067F8  0012               	return	
 34589  0067FA  D7F1               	goto	l2146
 34590  0067FC                     __end_of_Led_SetLedStatus:
 34591                           	opt stack 0
 34592                           tosu	equ	0xFFF
 34593                           tosh	equ	0xFFE
 34594                           tosl	equ	0xFFD
 34595                           pclath	equ	0xFFA
 34596                           tblptru	equ	0xFF8
 34597                           tblptrh	equ	0xFF7
 34598                           tblptrl	equ	0xFF6
 34599                           tablat	equ	0xFF5
 34600                           prodh	equ	0xFF4
 34601                           prodl	equ	0xFF3
 34602                           intcon	equ	0xFF2
 34603                           intcon2	equ	0xFF1
 34604                           intcon3	equ	0xFF0
 34605                           indf0	equ	0xFEF
 34606                           postinc0	equ	0xFEE
 34607                           plusw0	equ	0xFEB
 34608                           fsr0h	equ	0xFEA
 34609                           fsr0l	equ	0xFE9
 34610                           wreg	equ	0xFE8
 34611                           indf1	equ	0xFE7
 34612                           postinc1	equ	0xFE6
 34613                           postdec1	equ	0xFE5
 34614                           plusw1	equ	0xFE3
 34615                           fsr1h	equ	0xFE2
 34616                           fsr1l	equ	0xFE1
 34617                           indf2	equ	0xFDF
 34618                           postinc2	equ	0xFDE
 34619                           postdec2	equ	0xFDD
 34620                           plusw2	equ	0xFDB
 34621                           fsr2h	equ	0xFDA
 34622                           fsr2l	equ	0xFD9
 34623                           status	equ	0xFD8
 34624                           
 34625 ;; *************** function _LedBlinkStateMachine *****************
 34626 ;; Defined at:
 34627 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 34628 ;; Parameters:    Size  Location     Type
 34629 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 34630 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 34631 ;; Auto vars:     Size  Location     Type
 34632 ;;		None
 34633 ;; Return value:  Size  Location     Type
 34634 ;;                  1    wreg      unsigned char 
 34635 ;; Registers used:
 34636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34637 ;; Tracked objects:
 34638 ;;		On entry : 0/0
 34639 ;;		On exit  : 0/0
 34640 ;;		Unchanged: 0/0
 34641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34642 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34644 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34645 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34646 ;;Total ram usage:        4 bytes
 34647 ;; Hardware stack levels used:    1
 34648 ;; Hardware stack levels required when called:   12
 34649 ;; This function calls:
 34650 ;;		___lwdiv
 34651 ;; This function is called by:
 34652 ;;		_LedStateMachine
 34653 ;; This function uses a non-reentrant model
 34654 ;;
 34655                           
 34656                           	psect	text161
 34657  002834                     __ptext161:
 34658                           	opt stack 0
 34659  002834                     _LedBlinkStateMachine:
 34660                           	opt stack 14
 34661                           
 34662                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 34663                           
 34664                           ; BSR set to: 0
 34665                           ;incstack = 0
 34666  002834  D08F               	goto	l2098
 34667  002836                     
 34668                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 34669  002836  0100               	movlb	0	; () banked
 34670  002838  EE20 F008          	lfsr	2,8
 34671  00283C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34672  00283E  26D9               	addwf	fsr2l,f,c
 34673  002840  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34674  002842  22DA               	addwfc	fsr2h,f,c
 34675  002844  EE10 F001          	lfsr	1,1
 34676  002848  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34677  00284A  26E1               	addwf	fsr1l,f,c
 34678  00284C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34679  00284E  22E2               	addwfc	fsr1h,f,c
 34680  002850  CFDF FFE7          	movff	indf2,indf1
 34681                           
 34682                           ; BSR set to: 0
 34683                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 34684  002854  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 34685  002858  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 34686  00285C  D040               	goto	L79
 34687  00285E                     
 34688                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 34689                           
 34690                           ; BSR set to: 0
 34691  00285E  0100               	movlb	0	; () banked
 34692  002860  EE20 F002          	lfsr	2,2
 34693  002864  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34694  002866  26D9               	addwf	fsr2l,f,c
 34695  002868  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34696  00286A  22DA               	addwfc	fsr2h,f,c
 34697  00286C  2ADE               	incf	postinc2,f,c
 34698  00286E  0E00               	movlw	0
 34699  002870  22DD               	addwfc	postdec2,f,c
 34700                           
 34701                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 34702  002872  EE20 F001          	lfsr	2,1
 34703  002876  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34704  002878  26D9               	addwf	fsr2l,f,c
 34705  00287A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34706  00287C  22DA               	addwfc	fsr2h,f,c
 34707  00287E  50DF               	movf	indf2,w,c
 34708  002880  A4D8               	btfss	status,2,c
 34709  002882  D02F               	goto	l2102
 34710                           
 34711                           ; BSR set to: 0
 34712                           ;led.c: 142: {
 34713                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 34714  002884  EE20 F006          	lfsr	2,6
 34715  002888  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34716  00288A  26D9               	addwf	fsr2l,f,c
 34717  00288C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34718  00288E  22DA               	addwfc	fsr2h,f,c
 34719  002890  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34720  002894  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34721  002898  0E00               	movlw	0
 34722  00289A  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34723  00289C  0E32               	movlw	50
 34724  00289E  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34725  0028A0  EC04  F02F         	call	___lwdiv	;wreg free
 34726  0028A4  0100               	movlb	0	; () banked
 34727  0028A6  EE20 F002          	lfsr	2,2
 34728  0028AA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34729  0028AC  26D9               	addwf	fsr2l,f,c
 34730  0028AE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34731  0028B0  22DA               	addwfc	fsr2h,f,c
 34732  0028B2  5183               	movf	?___lwdiv& (0+255),w,b
 34733  0028B4  5CDE               	subwf	postinc2,w,c
 34734  0028B6  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34735  0028B8  58DE               	subwfb	postinc2,w,c
 34736  0028BA  A0D8               	btfss	status,0,c
 34737  0028BC  D056               	goto	l2100
 34738                           
 34739                           ; BSR set to: 0
 34740                           ;led.c: 145: {
 34741                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 34742  0028BE  EE20 F002          	lfsr	2,2
 34743  0028C2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34744  0028C4  26D9               	addwf	fsr2l,f,c
 34745  0028C6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34746  0028C8  22DA               	addwfc	fsr2h,f,c
 34747  0028CA  0E00               	movlw	0
 34748  0028CC  6EDE               	movwf	postinc2,c
 34749  0028CE  0E00               	movlw	0
 34750  0028D0  6EDD               	movwf	postdec2,c
 34751                           
 34752                           ;led.c: 149: LedBlink->LedOutState = OnState;
 34753  0028D2  EE20 F001          	lfsr	2,1
 34754  0028D6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34755  0028D8  26D9               	addwf	fsr2l,f,c
 34756  0028DA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34757  0028DC  22DA               	addwfc	fsr2h,f,c
 34758  0028DE                     L79:
 34759  0028DE  0E01               	movlw	1
 34760  0028E0  D037               	goto	L80
 34761  0028E2                     l2102:
 34762                           
 34763                           ; BSR set to: 0
 34764                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 34765                           
 34766                           ; BSR set to: 0
 34767  0028E2  EE20 F001          	lfsr	2,1
 34768  0028E6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34769  0028E8  26D9               	addwf	fsr2l,f,c
 34770  0028EA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34771  0028EC  22DA               	addwfc	fsr2h,f,c
 34772  0028EE  04DE               	decf	postinc2,w,c
 34773  0028F0  A4D8               	btfss	status,2,c
 34774  0028F2  D03B               	goto	l2100
 34775                           
 34776                           ; BSR set to: 0
 34777                           ;led.c: 153: {
 34778                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 34779  0028F4  EE20 F004          	lfsr	2,4
 34780  0028F8  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34781  0028FA  26D9               	addwf	fsr2l,f,c
 34782  0028FC  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34783  0028FE  22DA               	addwfc	fsr2h,f,c
 34784  002900  CFDE F083          	movff	postinc2,___lwdiv@dividend
 34785  002904  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 34786  002908  0E00               	movlw	0
 34787  00290A  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 34788  00290C  0E32               	movlw	50
 34789  00290E  6F85               	movwf	___lwdiv@divisor& (0+255),b
 34790  002910  EC04  F02F         	call	___lwdiv	;wreg free
 34791  002914  0100               	movlb	0	; () banked
 34792  002916  EE20 F002          	lfsr	2,2
 34793  00291A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34794  00291C  26D9               	addwf	fsr2l,f,c
 34795  00291E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34796  002920  22DA               	addwfc	fsr2h,f,c
 34797  002922  5183               	movf	?___lwdiv& (0+255),w,b
 34798  002924  5CDE               	subwf	postinc2,w,c
 34799  002926  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 34800  002928  58DE               	subwfb	postinc2,w,c
 34801  00292A  A0D8               	btfss	status,0,c
 34802  00292C  D01E               	goto	l2100
 34803                           
 34804                           ; BSR set to: 0
 34805                           ;led.c: 156: {
 34806                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 34807  00292E  EE20 F002          	lfsr	2,2
 34808  002932  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34809  002934  26D9               	addwf	fsr2l,f,c
 34810  002936  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34811  002938  22DA               	addwfc	fsr2h,f,c
 34812  00293A  0E00               	movlw	0
 34813  00293C  6EDE               	movwf	postinc2,c
 34814  00293E  0E00               	movlw	0
 34815  002940  6EDD               	movwf	postdec2,c
 34816                           
 34817                           ;led.c: 160: LedBlink->LedOutState = OffState;
 34818  002942  EE20 F001          	lfsr	2,1
 34819  002946  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34820  002948  26D9               	addwf	fsr2l,f,c
 34821  00294A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34822  00294C  22DA               	addwfc	fsr2h,f,c
 34823  00294E  0E00               	movlw	0
 34824  002950                     L80:
 34825  002950  6EDF               	movwf	indf2,c
 34826                           
 34827                           ; BSR set to: 0
 34828                           ;led.c: 167: }
 34829                           
 34830                           ; BSR set to: 0
 34831                           ;led.c: 166: break;
 34832                           
 34833                           ;led.c: 165: default:
 34834                           
 34835                           ; BSR set to: 0
 34836                           ;led.c: 161: }
 34837                           ;led.c: 162: }
 34838                           ;led.c: 163: break;
 34839                           
 34840                           ; BSR set to: 0
 34841                           
 34842                           ; BSR set to: 0
 34843  002952  D00B               	goto	l2100
 34844  002954                     l2098:
 34845                           
 34846                           ; BSR set to: 0
 34847  002954  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 34848  002958  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 34849  00295C  50DF               	movf	indf2,w,c
 34850                           
 34851                           ; Switch size 1, requested type "space"
 34852                           ; Number of cases is 2, Range of values is 0 to 1
 34853                           ; switch strategies available:
 34854                           ; Name         Instructions Cycles
 34855                           ; simple_byte            7     4 (average)
 34856                           ;	Chosen strategy is simple_byte
 34857  00295E  0A00               	xorlw	0	; case 0
 34858  002960  B4D8               	btfsc	status,2,c
 34859  002962  D769               	goto	l2099
 34860  002964  0A01               	xorlw	1	; case 1
 34861  002966  B4D8               	btfsc	status,2,c
 34862  002968  D77A               	goto	l2101
 34863  00296A                     l2100:
 34864                           
 34865                           ;led.c: 170: return (LedBlink->LedOutState);
 34866  00296A  0100               	movlb	0	; () banked
 34867  00296C  EE20 F001          	lfsr	2,1
 34868  002970  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 34869  002972  26D9               	addwf	fsr2l,f,c
 34870  002974  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 34871  002976  22DA               	addwfc	fsr2h,f,c
 34872  002978  50DF               	movf	indf2,w,c
 34873  00297A  0012               	return	
 34874  00297C                     __end_of_LedBlinkStateMachine:
 34875                           	opt stack 0
 34876                           tosu	equ	0xFFF
 34877                           tosh	equ	0xFFE
 34878                           tosl	equ	0xFFD
 34879                           pclath	equ	0xFFA
 34880                           tblptru	equ	0xFF8
 34881                           tblptrh	equ	0xFF7
 34882                           tblptrl	equ	0xFF6
 34883                           tablat	equ	0xFF5
 34884                           prodh	equ	0xFF4
 34885                           prodl	equ	0xFF3
 34886                           intcon	equ	0xFF2
 34887                           intcon2	equ	0xFF1
 34888                           intcon3	equ	0xFF0
 34889                           indf0	equ	0xFEF
 34890                           postinc0	equ	0xFEE
 34891                           plusw0	equ	0xFEB
 34892                           fsr0h	equ	0xFEA
 34893                           fsr0l	equ	0xFE9
 34894                           wreg	equ	0xFE8
 34895                           indf1	equ	0xFE7
 34896                           postinc1	equ	0xFE6
 34897                           postdec1	equ	0xFE5
 34898                           plusw1	equ	0xFE3
 34899                           fsr1h	equ	0xFE2
 34900                           fsr1l	equ	0xFE1
 34901                           indf2	equ	0xFDF
 34902                           postinc2	equ	0xFDE
 34903                           postdec2	equ	0xFDD
 34904                           plusw2	equ	0xFDB
 34905                           fsr2h	equ	0xFDA
 34906                           fsr2l	equ	0xFD9
 34907                           status	equ	0xFD8
 34908                           
 34909 ;; *************** function ___lwdiv *****************
 34910 ;; Defined at:
 34911 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 34912 ;; Parameters:    Size  Location     Type
 34913 ;;  dividend        2   35[BANK0 ] unsigned int 
 34914 ;;  divisor         2   37[BANK0 ] unsigned int 
 34915 ;; Auto vars:     Size  Location     Type
 34916 ;;  quotient        2   40[BANK0 ] unsigned int 
 34917 ;;  counter         1   39[BANK0 ] unsigned char 
 34918 ;; Return value:  Size  Location     Type
 34919 ;;                  2   35[BANK0 ] unsigned int 
 34920 ;; Registers used:
 34921 ;;		wreg, status,2, status,0
 34922 ;; Tracked objects:
 34923 ;;		On entry : 0/0
 34924 ;;		On exit  : 0/0
 34925 ;;		Unchanged: 0/0
 34926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34928 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34930 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34931 ;;Total ram usage:        7 bytes
 34932 ;; Hardware stack levels used:    1
 34933 ;; Hardware stack levels required when called:   11
 34934 ;; This function calls:
 34935 ;;		Nothing
 34936 ;; This function is called by:
 34937 ;;		_LedBlinkStateMachine
 34938 ;;		_LedPulseStateMachine
 34939 ;;		_secondsAppTimer
 34940 ;;		_utoa
 34941 ;; This function uses a non-reentrant model
 34942 ;;
 34943                           
 34944                           	psect	text162
 34945  005E08                     __ptext162:
 34946                           	opt stack 0
 34947  005E08                     ___lwdiv:
 34948                           	opt stack 14
 34949                           
 34950                           ; BSR set to: 0
 34951                           ;incstack = 0
 34952  005E08  0E00               	movlw	0
 34953  005E0A  0100               	movlb	0	; () banked
 34954  005E0C  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 34955  005E0E  0E00               	movlw	0
 34956  005E10  6F88               	movwf	___lwdiv@quotient& (0+255),b
 34957                           
 34958                           ; BSR set to: 0
 34959  005E12  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34960  005E14  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 34961  005E16  B4D8               	btfsc	status,2,c
 34962  005E18  D01C               	goto	l3431
 34963                           
 34964                           ; BSR set to: 0
 34965  005E1A  0E01               	movlw	1
 34966  005E1C  6F87               	movwf	___lwdiv@counter& (0+255),b
 34967  005E1E  D004               	goto	l3426
 34968  005E20                     
 34969                           ; BSR set to: 0
 34970                           
 34971                           ; BSR set to: 0
 34972  005E20  90D8               	bcf	status,0,c
 34973  005E22  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 34974  005E24  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 34975  005E26  2B87               	incf	___lwdiv@counter& (0+255),f,b
 34976  005E28                     l3426:
 34977                           
 34978                           ; BSR set to: 0
 34979                           
 34980                           ; BSR set to: 0
 34981  005E28  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 34982  005E2A  D7FA               	goto	l3427
 34983  005E2C                     u12340:
 34984                           
 34985                           ; BSR set to: 0
 34986                           
 34987                           ; BSR set to: 0
 34988                           
 34989                           ; BSR set to: 0
 34990  005E2C  90D8               	bcf	status,0,c
 34991  005E2E  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 34992  005E30  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 34993                           
 34994                           ; BSR set to: 0
 34995  005E32  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34996  005E34  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 34997  005E36  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 34998  005E38  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 34999  005E3A  A0D8               	btfss	status,0,c
 35000  005E3C  D005               	goto	l3430
 35001                           
 35002                           ; BSR set to: 0
 35003  005E3E  5185               	movf	___lwdiv@divisor& (0+255),w,b
 35004  005E40  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 35005  005E42  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 35006  005E44  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 35007                           
 35008                           ; BSR set to: 0
 35009  005E46  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 35010  005E48                     l3430:
 35011                           
 35012                           ; BSR set to: 0
 35013                           
 35014                           ; BSR set to: 0
 35015  005E48  90D8               	bcf	status,0,c
 35016  005E4A  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 35017  005E4C  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 35018                           
 35019                           ; BSR set to: 0
 35020  005E4E  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 35021  005E50  D7ED               	goto	u12340
 35022  005E52                     l3431:
 35023                           
 35024                           ; BSR set to: 0
 35025                           
 35026                           ; BSR set to: 0
 35027  005E52  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 35028  005E56  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 35029                           
 35030                           ; BSR set to: 0
 35031  005E5A  0012               	return		;funcret
 35032  005E5C                     __end_of___lwdiv:
 35033                           	opt stack 0
 35034                           tosu	equ	0xFFF
 35035                           tosh	equ	0xFFE
 35036                           tosl	equ	0xFFD
 35037                           pclath	equ	0xFFA
 35038                           tblptru	equ	0xFF8
 35039                           tblptrh	equ	0xFF7
 35040                           tblptrl	equ	0xFF6
 35041                           tablat	equ	0xFF5
 35042                           prodh	equ	0xFF4
 35043                           prodl	equ	0xFF3
 35044                           intcon	equ	0xFF2
 35045                           intcon2	equ	0xFF1
 35046                           intcon3	equ	0xFF0
 35047                           indf0	equ	0xFEF
 35048                           postinc0	equ	0xFEE
 35049                           plusw0	equ	0xFEB
 35050                           fsr0h	equ	0xFEA
 35051                           fsr0l	equ	0xFE9
 35052                           wreg	equ	0xFE8
 35053                           indf1	equ	0xFE7
 35054                           postinc1	equ	0xFE6
 35055                           postdec1	equ	0xFE5
 35056                           plusw1	equ	0xFE3
 35057                           fsr1h	equ	0xFE2
 35058                           fsr1l	equ	0xFE1
 35059                           indf2	equ	0xFDF
 35060                           postinc2	equ	0xFDE
 35061                           postdec2	equ	0xFDD
 35062                           plusw2	equ	0xFDB
 35063                           fsr2h	equ	0xFDA
 35064                           fsr2l	equ	0xFD9
 35065                           status	equ	0xFD8
 35066                           
 35067 ;; *************** function _OsAlrm_SetOsAlarm *****************
 35068 ;; Defined at:
 35069 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 35070 ;; Parameters:    Size  Location     Type
 35071 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 35072 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 35073 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 35074 ;;		 -> I2cDummyTx(1), 
 35075 ;; Auto vars:     Size  Location     Type
 35076 ;;		None
 35077 ;; Return value:  Size  Location     Type
 35078 ;;                  1    wreg      void 
 35079 ;; Registers used:
 35080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35081 ;; Tracked objects:
 35082 ;;		On entry : 0/0
 35083 ;;		On exit  : 0/0
 35084 ;;		Unchanged: 0/0
 35085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35086 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35089 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35090 ;;Total ram usage:        8 bytes
 35091 ;; Hardware stack levels used:    1
 35092 ;; Hardware stack levels required when called:   12
 35093 ;; This function calls:
 35094 ;;		___wmul
 35095 ;; This function is called by:
 35096 ;;		_I2cSlv_MainTask
 35097 ;; This function uses a non-reentrant model
 35098 ;;
 35099                           
 35100                           	psect	text163
 35101  0041EC                     __ptext163:
 35102                           	opt stack 0
 35103  0041EC                     _OsAlrm_SetOsAlarm:
 35104                           	opt stack 15
 35105                           
 35106                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 35107                           
 35108                           ; BSR set to: 0
 35109                           ;incstack = 0
 35110  0041EC  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35111  0041F0  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35112  0041F4  0E00               	movlw	0
 35113  0041F6  0100               	movlb	0	; () banked
 35114  0041F8  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35115  0041FA  0E0B               	movlw	11
 35116  0041FC  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35117  0041FE  EC6C  F034         	call	___wmul	;wreg free
 35118  004202  0E00               	movlw	low _OsAlarms
 35119  004204  0100               	movlb	0	; () banked
 35120  004206  257D               	addwf	?___wmul& (0+255),w,b
 35121  004208  6ED9               	movwf	fsr2l,c
 35122  00420A  0E06               	movlw	high _OsAlarms
 35123  00420C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35124  00420E  6EDA               	movwf	fsr2h,c
 35125  004210  0E01               	movlw	1
 35126  004212  6EDF               	movwf	indf2,c
 35127                           
 35128                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 35129  004214  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35130  004218  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35131  00421C  0E00               	movlw	0
 35132  00421E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35133  004220  0E0B               	movlw	11
 35134  004222  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35135  004224  EC6C  F034         	call	___wmul	;wreg free
 35136  004228  0E01               	movlw	1
 35137  00422A  0100               	movlb	0	; () banked
 35138  00422C  277D               	addwf	?___wmul& (0+255),f,b
 35139  00422E  0E00               	movlw	0
 35140  004230  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 35141  004232  0E00               	movlw	low _OsAlarms
 35142  004234  257D               	addwf	?___wmul& (0+255),w,b
 35143  004236  6ED9               	movwf	fsr2l,c
 35144  004238  0E06               	movlw	high _OsAlarms
 35145  00423A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35146  00423C  6EDA               	movwf	fsr2h,c
 35147  00423E  6ADE               	clrf	postinc2,c
 35148  004240  6ADE               	clrf	postinc2,c
 35149  004242  6ADE               	clrf	postinc2,c
 35150  004244  6ADD               	clrf	postdec2,c
 35151                           
 35152                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 35153  004246  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35154  00424A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35155  00424E  0E00               	movlw	0
 35156  004250  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35157  004252  0E0B               	movlw	11
 35158  004254  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35159  004256  EC6C  F034         	call	___wmul	;wreg free
 35160  00425A  0E05               	movlw	5
 35161  00425C  0100               	movlb	0	; () banked
 35162  00425E  277D               	addwf	?___wmul& (0+255),f,b
 35163  004260  0E00               	movlw	0
 35164  004262  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 35165  004264  0E00               	movlw	low _OsAlarms
 35166  004266  257D               	addwf	?___wmul& (0+255),w,b
 35167  004268  6ED9               	movwf	fsr2l,c
 35168  00426A  0E06               	movlw	high _OsAlarms
 35169  00426C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35170  00426E  6EDA               	movwf	fsr2h,c
 35171  004270  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 35172  004274  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 35173  004278  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 35174  00427C  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 35175                           
 35176                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 35177  004280  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 35178  004284  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 35179  004288  0E00               	movlw	0
 35180  00428A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35181  00428C  0E0B               	movlw	11
 35182  00428E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 35183  004290  EC6C  F034         	call	___wmul	;wreg free
 35184  004294  0E09               	movlw	9
 35185  004296  0100               	movlb	0	; () banked
 35186  004298  277D               	addwf	?___wmul& (0+255),f,b
 35187  00429A  0E00               	movlw	0
 35188  00429C  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 35189  00429E  0E00               	movlw	low _OsAlarms
 35190  0042A0  257D               	addwf	?___wmul& (0+255),w,b
 35191  0042A2  6ED9               	movwf	fsr2l,c
 35192  0042A4  0E06               	movlw	high _OsAlarms
 35193  0042A6  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 35194  0042A8  6EDA               	movwf	fsr2h,c
 35195  0042AA  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 35196  0042AE  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 35197                           
 35198                           ; BSR set to: 0
 35199  0042B2  0012               	return		;funcret
 35200  0042B4                     __end_of_OsAlrm_SetOsAlarm:
 35201                           	opt stack 0
 35202                           tosu	equ	0xFFF
 35203                           tosh	equ	0xFFE
 35204                           tosl	equ	0xFFD
 35205                           pclath	equ	0xFFA
 35206                           tblptru	equ	0xFF8
 35207                           tblptrh	equ	0xFF7
 35208                           tblptrl	equ	0xFF6
 35209                           tablat	equ	0xFF5
 35210                           prodh	equ	0xFF4
 35211                           prodl	equ	0xFF3
 35212                           intcon	equ	0xFF2
 35213                           intcon2	equ	0xFF1
 35214                           intcon3	equ	0xFF0
 35215                           indf0	equ	0xFEF
 35216                           postinc0	equ	0xFEE
 35217                           plusw0	equ	0xFEB
 35218                           fsr0h	equ	0xFEA
 35219                           fsr0l	equ	0xFE9
 35220                           wreg	equ	0xFE8
 35221                           indf1	equ	0xFE7
 35222                           postinc1	equ	0xFE6
 35223                           postdec1	equ	0xFE5
 35224                           plusw1	equ	0xFE3
 35225                           fsr1h	equ	0xFE2
 35226                           fsr1l	equ	0xFE1
 35227                           indf2	equ	0xFDF
 35228                           postinc2	equ	0xFDE
 35229                           postdec2	equ	0xFDD
 35230                           plusw2	equ	0xFDB
 35231                           fsr2h	equ	0xFDA
 35232                           fsr2l	equ	0xFD9
 35233                           status	equ	0xFD8
 35234                           
 35235 ;; *************** function ___wmul *****************
 35236 ;; Defined at:
 35237 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 35238 ;; Parameters:    Size  Location     Type
 35239 ;;  multiplier      2   29[BANK0 ] unsigned int 
 35240 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 35241 ;; Auto vars:     Size  Location     Type
 35242 ;;  product         2   33[BANK0 ] unsigned int 
 35243 ;; Return value:  Size  Location     Type
 35244 ;;                  2   29[BANK0 ] unsigned int 
 35245 ;; Registers used:
 35246 ;;		wreg, status,2, status,0, prodl, prodh
 35247 ;; Tracked objects:
 35248 ;;		On entry : 0/0
 35249 ;;		On exit  : 0/0
 35250 ;;		Unchanged: 0/0
 35251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35252 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35255 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35256 ;;Total ram usage:        6 bytes
 35257 ;; Hardware stack levels used:    1
 35258 ;; Hardware stack levels required when called:   11
 35259 ;; This function calls:
 35260 ;;		Nothing
 35261 ;; This function is called by:
 35262 ;;		_OsAlrm_SetOsAlarm
 35263 ;;		_secondsAppTimer
 35264 ;;		_atoi
 35265 ;; This function uses a non-reentrant model
 35266 ;;
 35267                           
 35268                           	psect	text164
 35269  0068D8                     __ptext164:
 35270                           	opt stack 0
 35271  0068D8                     ___wmul:
 35272                           	opt stack 13
 35273                           
 35274                           ; BSR set to: 0
 35275                           ;incstack = 0
 35276  0068D8  0100               	movlb	0	; () banked
 35277  0068DA  517D               	movf	___wmul@multiplier& (0+255),w,b
 35278  0068DC  037F               	mulwf	___wmul@multiplicand& (0+255),b
 35279  0068DE  CFF3 F081          	movff	prodl,___wmul@product
 35280  0068E2  CFF4 F082          	movff	prodh,___wmul@product+1
 35281  0068E6  517D               	movf	___wmul@multiplier& (0+255),w,b
 35282  0068E8  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 35283  0068EA  50F3               	movf	prodl,w,c
 35284  0068EC  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 35285  0068EE  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 35286  0068F0  037F               	mulwf	___wmul@multiplicand& (0+255),b
 35287  0068F2  50F3               	movf	prodl,w,c
 35288  0068F4  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 35289                           
 35290                           ; BSR set to: 0
 35291  0068F6  C081  F07D         	movff	___wmul@product,?___wmul
 35292  0068FA  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 35293  0068FE  0012               	return	
 35294  006900                     __end_of___wmul:
 35295                           	opt stack 0
 35296                           tosu	equ	0xFFF
 35297                           tosh	equ	0xFFE
 35298                           tosl	equ	0xFFD
 35299                           pclath	equ	0xFFA
 35300                           tblptru	equ	0xFF8
 35301                           tblptrh	equ	0xFF7
 35302                           tblptrl	equ	0xFF6
 35303                           tablat	equ	0xFF5
 35304                           prodh	equ	0xFF4
 35305                           prodl	equ	0xFF3
 35306                           intcon	equ	0xFF2
 35307                           intcon2	equ	0xFF1
 35308                           intcon3	equ	0xFF0
 35309                           indf0	equ	0xFEF
 35310                           postinc0	equ	0xFEE
 35311                           plusw0	equ	0xFEB
 35312                           fsr0h	equ	0xFEA
 35313                           fsr0l	equ	0xFE9
 35314                           wreg	equ	0xFE8
 35315                           indf1	equ	0xFE7
 35316                           postinc1	equ	0xFE6
 35317                           postdec1	equ	0xFE5
 35318                           plusw1	equ	0xFE3
 35319                           fsr1h	equ	0xFE2
 35320                           fsr1l	equ	0xFE1
 35321                           indf2	equ	0xFDF
 35322                           postinc2	equ	0xFDE
 35323                           postdec2	equ	0xFDD
 35324                           plusw2	equ	0xFDB
 35325                           fsr2h	equ	0xFDA
 35326                           fsr2l	equ	0xFD9
 35327                           status	equ	0xFD8
 35328                           
 35329 ;; *************** function _I2c_InitI2cModule *****************
 35330 ;; Defined at:
 35331 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35332 ;; Parameters:    Size  Location     Type
 35333 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 35334 ;;		 -> I2cConfig(10), 
 35335 ;; Auto vars:     Size  Location     Type
 35336 ;;		None
 35337 ;; Return value:  Size  Location     Type
 35338 ;;                  1    wreg      void 
 35339 ;; Registers used:
 35340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35341 ;; Tracked objects:
 35342 ;;		On entry : 0/0
 35343 ;;		On exit  : 0/0
 35344 ;;		Unchanged: 0/0
 35345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35348 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35349 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35350 ;;Total ram usage:        4 bytes
 35351 ;; Hardware stack levels used:    1
 35352 ;; Hardware stack levels required when called:   13
 35353 ;; This function calls:
 35354 ;;		_SetBaudRate
 35355 ;; This function is called by:
 35356 ;;		_I2cSlv_MainTask
 35357 ;; This function uses a non-reentrant model
 35358 ;;
 35359                           
 35360                           	psect	text165
 35361  005636                     __ptext165:
 35362                           	opt stack 0
 35363  005636                     _I2c_InitI2cModule:
 35364                           	opt stack 14
 35365                           
 35366                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 35367                           
 35368                           ; BSR set to: 0
 35369                           ;incstack = 0
 35370  005636  8295               	bsf	3989,1,c	;volatile
 35371                           
 35372                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 35373  005638  8095               	bsf	3989,0,c	;volatile
 35374                           
 35375                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 35376  00563A  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 35377  00563E  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 35378  005642  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 35379  005646  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 35380  00564A  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 35381  00564E  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 35382  005652  0100               	movlb	0	; () banked
 35383  005654  EE20 F004          	lfsr	2,4
 35384  005658  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 35385  00565A  26D9               	addwf	fsr2l,f,c
 35386  00565C  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 35387  00565E  22DA               	addwfc	fsr2h,f,c
 35388  005660  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 35389  005664  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 35390  005668  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 35391  00566C  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 35392  005670  EC46  F030         	call	_SetBaudRate	;wreg free
 35393                           
 35394                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 35395  005674  0100               	movlb	0	; () banked
 35396  005676  EE20 F008          	lfsr	2,8
 35397  00567A  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 35398  00567C  26D9               	addwf	fsr2l,f,c
 35399  00567E  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 35400  005680  22DA               	addwfc	fsr2h,f,c
 35401  005682  50DF               	movf	indf2,w,c
 35402  005684  1272               	iorwf	3954,f,c	;volatile
 35403                           
 35404                           ; BSR set to: 0
 35405                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 35406  005686  EE20 F009          	lfsr	2,9
 35407  00568A  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 35408  00568C  26D9               	addwf	fsr2l,f,c
 35409  00568E  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 35410  005690  22DA               	addwfc	fsr2h,f,c
 35411  005692  50DF               	movf	indf2,w,c
 35412  005694  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 35413  005696  0E05               	movlw	5
 35414  005698  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 35415  00569A                     u14935:
 35416  00569A  90D8               	bcf	status,0,c
 35417  00569C  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 35418  00569E  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 35419  0056A0  D7FC               	goto	u14935
 35420  0056A2  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 35421  0056A4  1272               	iorwf	3954,f,c	;volatile
 35422                           
 35423                           ; BSR set to: 0
 35424  0056A6  0012               	return		;funcret
 35425  0056A8                     __end_of_I2c_InitI2cModule:
 35426                           	opt stack 0
 35427                           tosu	equ	0xFFF
 35428                           tosh	equ	0xFFE
 35429                           tosl	equ	0xFFD
 35430                           pclath	equ	0xFFA
 35431                           tblptru	equ	0xFF8
 35432                           tblptrh	equ	0xFF7
 35433                           tblptrl	equ	0xFF6
 35434                           tablat	equ	0xFF5
 35435                           prodh	equ	0xFF4
 35436                           prodl	equ	0xFF3
 35437                           intcon	equ	0xFF2
 35438                           intcon2	equ	0xFF1
 35439                           intcon3	equ	0xFF0
 35440                           indf0	equ	0xFEF
 35441                           postinc0	equ	0xFEE
 35442                           plusw0	equ	0xFEB
 35443                           fsr0h	equ	0xFEA
 35444                           fsr0l	equ	0xFE9
 35445                           wreg	equ	0xFE8
 35446                           indf1	equ	0xFE7
 35447                           postinc1	equ	0xFE6
 35448                           postdec1	equ	0xFE5
 35449                           plusw1	equ	0xFE3
 35450                           fsr1h	equ	0xFE2
 35451                           fsr1l	equ	0xFE1
 35452                           indf2	equ	0xFDF
 35453                           postinc2	equ	0xFDE
 35454                           postdec2	equ	0xFDD
 35455                           plusw2	equ	0xFDB
 35456                           fsr2h	equ	0xFDA
 35457                           fsr2l	equ	0xFD9
 35458                           status	equ	0xFD8
 35459                           
 35460 ;; *************** function _SetBaudRate *****************
 35461 ;; Defined at:
 35462 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35463 ;; Parameters:    Size  Location     Type
 35464 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 35465 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 35466 ;; Auto vars:     Size  Location     Type
 35467 ;;		None
 35468 ;; Return value:  Size  Location     Type
 35469 ;;                  1    wreg      void 
 35470 ;; Registers used:
 35471 ;;		wreg, status,2, status,0, cstack
 35472 ;; Tracked objects:
 35473 ;;		On entry : 0/0
 35474 ;;		On exit  : 0/0
 35475 ;;		Unchanged: 0/0
 35476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35477 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35479 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35480 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35481 ;;Total ram usage:       12 bytes
 35482 ;; Hardware stack levels used:    1
 35483 ;; Hardware stack levels required when called:   12
 35484 ;; This function calls:
 35485 ;;		___lldiv
 35486 ;; This function is called by:
 35487 ;;		_I2c_InitI2cModule
 35488 ;; This function uses a non-reentrant model
 35489 ;;
 35490                           
 35491                           	psect	text166
 35492  00608C                     __ptext166:
 35493                           	opt stack 0
 35494  00608C                     _SetBaudRate:
 35495                           	opt stack 14
 35496                           
 35497                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 35498                           
 35499                           ; BSR set to: 0
 35500                           ;incstack = 0
 35501  00608C  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 35502  006090  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 35503  006094  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 35504  006098  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 35505  00609C  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 35506  0060A0  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 35507  0060A4  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 35508  0060A8  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 35509  0060AC  0E02               	movlw	2
 35510  0060AE                     u13665:
 35511  0060AE  90D8               	bcf	status,0,c
 35512  0060B0  0100               	movlb	0	; () banked
 35513  0060B2  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 35514  0060B4  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 35515  0060B6  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 35516  0060B8  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 35517  0060BA  2EE8               	decfsz	wreg,f,c
 35518  0060BC  D7F8               	goto	u13665
 35519  0060BE  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 35520  0060C2  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 35521  0060C6  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 35522  0060CA  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 35523  0060CE  ECE6  F029         	call	___lldiv	;wreg free
 35524  0060D2  0100               	movlb	0	; () banked
 35525  0060D4  0589               	decf	?___lldiv& (0+255),w,b
 35526  0060D6  6E74               	movwf	3956,c	;volatile
 35527                           
 35528                           ; BSR set to: 0
 35529  0060D8  0012               	return		;funcret
 35530  0060DA                     __end_of_SetBaudRate:
 35531                           	opt stack 0
 35532                           tosu	equ	0xFFF
 35533                           tosh	equ	0xFFE
 35534                           tosl	equ	0xFFD
 35535                           pclath	equ	0xFFA
 35536                           tblptru	equ	0xFF8
 35537                           tblptrh	equ	0xFF7
 35538                           tblptrl	equ	0xFF6
 35539                           tablat	equ	0xFF5
 35540                           prodh	equ	0xFF4
 35541                           prodl	equ	0xFF3
 35542                           intcon	equ	0xFF2
 35543                           intcon2	equ	0xFF1
 35544                           intcon3	equ	0xFF0
 35545                           indf0	equ	0xFEF
 35546                           postinc0	equ	0xFEE
 35547                           plusw0	equ	0xFEB
 35548                           fsr0h	equ	0xFEA
 35549                           fsr0l	equ	0xFE9
 35550                           wreg	equ	0xFE8
 35551                           indf1	equ	0xFE7
 35552                           postinc1	equ	0xFE6
 35553                           postdec1	equ	0xFE5
 35554                           plusw1	equ	0xFE3
 35555                           fsr1h	equ	0xFE2
 35556                           fsr1l	equ	0xFE1
 35557                           indf2	equ	0xFDF
 35558                           postinc2	equ	0xFDE
 35559                           postdec2	equ	0xFDD
 35560                           plusw2	equ	0xFDB
 35561                           fsr2h	equ	0xFDA
 35562                           fsr2l	equ	0xFD9
 35563                           status	equ	0xFD8
 35564                           
 35565 ;; *************** function ___lldiv *****************
 35566 ;; Defined at:
 35567 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 35568 ;; Parameters:    Size  Location     Type
 35569 ;;  dividend        4   41[BANK0 ] unsigned long 
 35570 ;;  divisor         4   45[BANK0 ] unsigned long 
 35571 ;; Auto vars:     Size  Location     Type
 35572 ;;  quotient        4   49[BANK0 ] unsigned long 
 35573 ;;  counter         1   53[BANK0 ] unsigned char 
 35574 ;; Return value:  Size  Location     Type
 35575 ;;                  4   41[BANK0 ] unsigned long 
 35576 ;; Registers used:
 35577 ;;		wreg, status,2, status,0
 35578 ;; Tracked objects:
 35579 ;;		On entry : 0/0
 35580 ;;		On exit  : 0/0
 35581 ;;		Unchanged: 0/0
 35582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35583 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35584 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35586 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35587 ;;Total ram usage:       13 bytes
 35588 ;; Hardware stack levels used:    1
 35589 ;; Hardware stack levels required when called:   11
 35590 ;; This function calls:
 35591 ;;		Nothing
 35592 ;; This function is called by:
 35593 ;;		_SetBaudRate
 35594 ;;		_Tmr_TmrBPrSet
 35595 ;;		_SetUartBaudRate
 35596 ;; This function uses a non-reentrant model
 35597 ;;
 35598                           
 35599                           	psect	text167
 35600  0053CC                     __ptext167:
 35601                           	opt stack 0
 35602  0053CC                     ___lldiv:
 35603                           	opt stack 15
 35604                           
 35605                           ; BSR set to: 0
 35606                           ;incstack = 0
 35607  0053CC  0E00               	movlw	0
 35608  0053CE  0100               	movlb	0	; () banked
 35609  0053D0  6F91               	movwf	___lldiv@quotient& (0+255),b
 35610  0053D2  0E00               	movlw	0
 35611  0053D4  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 35612  0053D6  0E00               	movlw	0
 35613  0053D8  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 35614  0053DA  0E00               	movlw	0
 35615  0053DC  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 35616                           
 35617                           ; BSR set to: 0
 35618  0053DE  518D               	movf	___lldiv@divisor& (0+255),w,b
 35619  0053E0  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35620  0053E2  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35621  0053E4  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35622  0053E6  B4D8               	btfsc	status,2,c
 35623  0053E8  D02A               	goto	l3378
 35624                           
 35625                           ; BSR set to: 0
 35626  0053EA  0E01               	movlw	1
 35627  0053EC  6F95               	movwf	___lldiv@counter& (0+255),b
 35628  0053EE  D006               	goto	l3373
 35629  0053F0                     
 35630                           ; BSR set to: 0
 35631                           
 35632                           ; BSR set to: 0
 35633  0053F0  90D8               	bcf	status,0,c
 35634  0053F2  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 35635  0053F4  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35636  0053F6  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35637  0053F8  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35638  0053FA  2B95               	incf	___lldiv@counter& (0+255),f,b
 35639  0053FC                     l3373:
 35640                           
 35641                           ; BSR set to: 0
 35642                           
 35643                           ; BSR set to: 0
 35644  0053FC  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35645  0053FE  D7F8               	goto	l3374
 35646  005400                     u12670:
 35647                           
 35648                           ; BSR set to: 0
 35649                           
 35650                           ; BSR set to: 0
 35651                           
 35652                           ; BSR set to: 0
 35653  005400  90D8               	bcf	status,0,c
 35654  005402  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 35655  005404  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35656  005406  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35657  005408  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35658                           
 35659                           ; BSR set to: 0
 35660  00540A  518D               	movf	___lldiv@divisor& (0+255),w,b
 35661  00540C  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 35662  00540E  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35663  005410  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35664  005412  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35665  005414  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35666  005416  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35667  005418  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35668  00541A  A0D8               	btfss	status,0,c
 35669  00541C  D009               	goto	l3377
 35670                           
 35671                           ; BSR set to: 0
 35672  00541E  518D               	movf	___lldiv@divisor& (0+255),w,b
 35673  005420  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 35674  005422  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35675  005424  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35676  005426  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35677  005428  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35678  00542A  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35679  00542C  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35680                           
 35681                           ; BSR set to: 0
 35682  00542E  8191               	bsf	___lldiv@quotient& (0+255),0,b
 35683  005430                     l3377:
 35684                           
 35685                           ; BSR set to: 0
 35686                           
 35687                           ; BSR set to: 0
 35688  005430  90D8               	bcf	status,0,c
 35689  005432  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35690  005434  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35691  005436  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35692  005438  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 35693                           
 35694                           ; BSR set to: 0
 35695  00543A  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 35696  00543C  D7E1               	goto	u12670
 35697  00543E                     l3378:
 35698                           
 35699                           ; BSR set to: 0
 35700                           
 35701                           ; BSR set to: 0
 35702  00543E  C091  F089         	movff	___lldiv@quotient,?___lldiv
 35703  005442  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 35704  005446  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 35705  00544A  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 35706                           
 35707                           ; BSR set to: 0
 35708  00544E  0012               	return		;funcret
 35709  005450                     __end_of___lldiv:
 35710                           	opt stack 0
 35711                           tosu	equ	0xFFF
 35712                           tosh	equ	0xFFE
 35713                           tosl	equ	0xFFD
 35714                           pclath	equ	0xFFA
 35715                           tblptru	equ	0xFF8
 35716                           tblptrh	equ	0xFF7
 35717                           tblptrl	equ	0xFF6
 35718                           tablat	equ	0xFF5
 35719                           prodh	equ	0xFF4
 35720                           prodl	equ	0xFF3
 35721                           intcon	equ	0xFF2
 35722                           intcon2	equ	0xFF1
 35723                           intcon3	equ	0xFF0
 35724                           indf0	equ	0xFEF
 35725                           postinc0	equ	0xFEE
 35726                           plusw0	equ	0xFEB
 35727                           fsr0h	equ	0xFEA
 35728                           fsr0l	equ	0xFE9
 35729                           wreg	equ	0xFE8
 35730                           indf1	equ	0xFE7
 35731                           postinc1	equ	0xFE6
 35732                           postdec1	equ	0xFE5
 35733                           plusw1	equ	0xFE3
 35734                           fsr1h	equ	0xFE2
 35735                           fsr1l	equ	0xFE1
 35736                           indf2	equ	0xFDF
 35737                           postinc2	equ	0xFDE
 35738                           postdec2	equ	0xFDD
 35739                           plusw2	equ	0xFDB
 35740                           fsr2h	equ	0xFDA
 35741                           fsr2l	equ	0xFD9
 35742                           status	equ	0xFD8
 35743                           
 35744 ;; *************** function _I2cSetConfig *****************
 35745 ;; Defined at:
 35746 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35747 ;; Parameters:    Size  Location     Type
 35748 ;;		None
 35749 ;; Auto vars:     Size  Location     Type
 35750 ;;		None
 35751 ;; Return value:  Size  Location     Type
 35752 ;;                  1    wreg      void 
 35753 ;; Registers used:
 35754 ;;		wreg, status,2
 35755 ;; Tracked objects:
 35756 ;;		On entry : 0/0
 35757 ;;		On exit  : 0/0
 35758 ;;		Unchanged: 0/0
 35759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35764 ;;Total ram usage:        0 bytes
 35765 ;; Hardware stack levels used:    1
 35766 ;; Hardware stack levels required when called:   11
 35767 ;; This function calls:
 35768 ;;		Nothing
 35769 ;; This function is called by:
 35770 ;;		_I2cSlv_MainTask
 35771 ;; This function uses a non-reentrant model
 35772 ;;
 35773                           
 35774                           	psect	text168
 35775  006858                     __ptext168:
 35776                           	opt stack 0
 35777  006858                     _I2cSetConfig:
 35778                           	opt stack 16
 35779                           
 35780                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 35781                           
 35782                           ; BSR set to: 0
 35783                           ;incstack = 0
 35784  006858  0E80               	movlw	128
 35785  00685A  0103               	movlb	3	; () banked
 35786  00685C  6F5E               	movwf	_I2cConfig& (0+255),b
 35787  00685E  0E1A               	movlw	26
 35788  006860  6F5F               	movwf	(_I2cConfig+1)& (0+255),b
 35789  006862  0E06               	movlw	6
 35790  006864  6F60               	movwf	(_I2cConfig+2)& (0+255),b
 35791  006866  0E00               	movlw	0
 35792  006868  6F61               	movwf	(_I2cConfig+3)& (0+255),b
 35793                           
 35794                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 35795  00686A  0E00               	movlw	0
 35796  00686C  6F62               	movwf	(_I2cConfig+4)& (0+255),b
 35797  00686E  0E6C               	movlw	108
 35798  006870  6F63               	movwf	(_I2cConfig+5)& (0+255),b
 35799  006872  0EDC               	movlw	220
 35800  006874  6F64               	movwf	(_I2cConfig+6)& (0+255),b
 35801  006876  0E02               	movlw	2
 35802  006878  6F65               	movwf	(_I2cConfig+7)& (0+255),b
 35803                           
 35804                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 35805  00687A  0E08               	movlw	8
 35806  00687C  6F66               	movwf	(_I2cConfig+8)& (0+255),b
 35807                           
 35808                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 35809  00687E  0E01               	movlw	1
 35810  006880  6F67               	movwf	(_I2cConfig+9)& (0+255),b
 35811                           
 35812                           ; BSR set to: 3
 35813  006882  0012               	return		;funcret
 35814  006884                     __end_of_I2cSetConfig:
 35815                           	opt stack 0
 35816                           tosu	equ	0xFFF
 35817                           tosh	equ	0xFFE
 35818                           tosl	equ	0xFFD
 35819                           pclath	equ	0xFFA
 35820                           tblptru	equ	0xFF8
 35821                           tblptrh	equ	0xFF7
 35822                           tblptrl	equ	0xFF6
 35823                           tablat	equ	0xFF5
 35824                           prodh	equ	0xFF4
 35825                           prodl	equ	0xFF3
 35826                           intcon	equ	0xFF2
 35827                           intcon2	equ	0xFF1
 35828                           intcon3	equ	0xFF0
 35829                           indf0	equ	0xFEF
 35830                           postinc0	equ	0xFEE
 35831                           plusw0	equ	0xFEB
 35832                           fsr0h	equ	0xFEA
 35833                           fsr0l	equ	0xFE9
 35834                           wreg	equ	0xFE8
 35835                           indf1	equ	0xFE7
 35836                           postinc1	equ	0xFE6
 35837                           postdec1	equ	0xFE5
 35838                           plusw1	equ	0xFE3
 35839                           fsr1h	equ	0xFE2
 35840                           fsr1l	equ	0xFE1
 35841                           indf2	equ	0xFDF
 35842                           postinc2	equ	0xFDE
 35843                           postdec2	equ	0xFDD
 35844                           plusw2	equ	0xFDB
 35845                           fsr2h	equ	0xFDA
 35846                           fsr2l	equ	0xFD9
 35847                           status	equ	0xFD8
 35848                           
 35849 ;; *************** function _I2cSendMsgSm *****************
 35850 ;; Defined at:
 35851 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35852 ;; Parameters:    Size  Location     Type
 35853 ;;		None
 35854 ;; Auto vars:     Size  Location     Type
 35855 ;;		None
 35856 ;; Return value:  Size  Location     Type
 35857 ;;                  1    wreg      void 
 35858 ;; Registers used:
 35859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35860 ;; Tracked objects:
 35861 ;;		On entry : 0/0
 35862 ;;		On exit  : 0/0
 35863 ;;		Unchanged: 0/0
 35864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35869 ;;Total ram usage:        0 bytes
 35870 ;; Hardware stack levels used:    1
 35871 ;; Hardware stack levels required when called:   13
 35872 ;; This function calls:
 35873 ;;		_I2c_ReadData
 35874 ;;		_I2c_WriteData
 35875 ;;		_ReceiveEvt
 35876 ;; This function is called by:
 35877 ;;		_I2cSlv_MainTask
 35878 ;; This function uses a non-reentrant model
 35879 ;;
 35880                           
 35881                           	psect	text169
 35882  0042B4                     __ptext169:
 35883                           	opt stack 0
 35884  0042B4                     _I2cSendMsgSm:
 35885                           	opt stack 14
 35886                           
 35887                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 35888                           ;i2c_slv.c: 122: switch(I2cComState)
 35889                           
 35890                           ; BSR set to: 3
 35891                           ;incstack = 0
 35892  0042B4  D04F               	goto	l1382
 35893  0042B6                     
 35894                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 35895  0042B6  0ED7               	movlw	low _I2cWriteDataEvt
 35896  0042B8  0100               	movlb	0	; () banked
 35897  0042BA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35898  0042BC  0E00               	movlw	high _I2cWriteDataEvt
 35899  0042BE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35900  0042C0  EC15  F034         	call	_ReceiveEvt	;wreg free
 35901  0042C4  0900               	iorlw	0
 35902  0042C6  B4D8               	btfsc	status,2,c
 35903  0042C8  D007               	goto	l1384
 35904                           
 35905                           ;i2c_slv.c: 127: {
 35906                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 35907  0042CA  0E01               	movlw	1
 35908  0042CC  0101               	movlb	1	; () banked
 35909  0042CE  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35910                           
 35911                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 35912  0042D0  0E01               	movlw	1
 35913  0042D2  0100               	movlb	0	; () banked
 35914  0042D4  6FCF               	movwf	_I2cComSts& (0+255),b
 35915                           
 35916                           ;i2c_slv.c: 132: }
 35917  0042D6  0012               	return	
 35918  0042D8                     l1384:
 35919                           
 35920                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 35921                           
 35922                           ; BSR set to: 0
 35923  0042D8  0E39               	movlw	low _I2cReadDataEvt
 35924  0042DA  0100               	movlb	0	; () banked
 35925  0042DC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35926  0042DE  0E00               	movlw	high _I2cReadDataEvt
 35927  0042E0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35928  0042E2  EC15  F034         	call	_ReceiveEvt	;wreg free
 35929  0042E6  0900               	iorlw	0
 35930  0042E8  B4D8               	btfsc	status,2,c
 35931  0042EA  D007               	goto	l1386
 35932                           
 35933                           ;i2c_slv.c: 134: {
 35934                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 35935  0042EC  0E02               	movlw	2
 35936  0042EE  0101               	movlb	1	; () banked
 35937  0042F0  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35938                           
 35939                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 35940  0042F2  0E02               	movlw	2
 35941  0042F4  0100               	movlb	0	; () banked
 35942  0042F6  6FCF               	movwf	_I2cComSts& (0+255),b
 35943                           
 35944                           ;i2c_slv.c: 139: }
 35945  0042F8  0012               	return	
 35946  0042FA                     l1386:
 35947                           
 35948                           ;i2c_slv.c: 140: else
 35949                           ;i2c_slv.c: 141: {
 35950                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 35951                           
 35952                           ; BSR set to: 0
 35953  0042FA  0E00               	movlw	0
 35954  0042FC  0100               	movlb	0	; () banked
 35955  0042FE  6FCF               	movwf	_I2cComSts& (0+255),b
 35956                           
 35957                           ; BSR set to: 0
 35958                           ;i2c_slv.c: 144: }
 35959                           ;i2c_slv.c: 145: break;
 35960                           
 35961                           ; BSR set to: 0
 35962  004300  0012               	return	
 35963  004302                     
 35964                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 35965                           
 35966                           ; BSR set to: 0
 35967  004302  0EA1               	movlw	low _I2cTxPacket
 35968  004304  0100               	movlb	0	; () banked
 35969  004306  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 35970  004308  0E03               	movlw	high _I2cTxPacket
 35971  00430A  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 35972  00430C  EC5C  F00F         	call	_I2c_WriteData	;wreg free
 35973  004310  0900               	iorlw	0
 35974  004312  B4D8               	btfsc	status,2,c
 35975  004314  0012               	return	
 35976                           
 35977                           ;i2c_slv.c: 150: {
 35978                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 35979  004316  0E03               	movlw	3
 35980  004318  0101               	movlb	1	; () banked
 35981  00431A  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35982                           
 35983                           ; BSR set to: 1
 35984                           ;i2c_slv.c: 153: }
 35985                           ;i2c_slv.c: 154: break;
 35986  00431C  0012               	return	
 35987  00431E                     
 35988                           ; BSR set to: 1
 35989                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 35990                           
 35991                           ; BSR set to: 1
 35992  00431E  0E9B               	movlw	low _I2cRxPacket
 35993  004320  0100               	movlb	0	; () banked
 35994  004322  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 35995  004324  0E03               	movlw	high _I2cRxPacket
 35996  004326  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 35997  004328  ECC3  F010         	call	_I2c_ReadData	;wreg free
 35998  00432C  0900               	iorlw	0
 35999  00432E  B4D8               	btfsc	status,2,c
 36000  004330  0012               	return	
 36001                           
 36002                           ;i2c_slv.c: 159: {
 36003                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 36004  004332  0E04               	movlw	4
 36005  004334  0101               	movlb	1	; () banked
 36006  004336  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36007                           
 36008                           ; BSR set to: 1
 36009                           ;i2c_slv.c: 162: }
 36010                           ;i2c_slv.c: 164: break;
 36011  004338  0012               	return	
 36012  00433A                     
 36013                           ; BSR set to: 1
 36014                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 36015                           
 36016                           ; BSR set to: 1
 36017  00433A  0E00               	movlw	0
 36018  00433C  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36019                           
 36020                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 36021  00433E  0E00               	movlw	0
 36022  004340  0100               	movlb	0	; () banked
 36023  004342  6FCF               	movwf	_I2cComSts& (0+255),b
 36024                           
 36025                           ;i2c_slv.c: 171: break;
 36026  004344  0012               	return	
 36027  004346                     
 36028                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 36029                           
 36030                           ; BSR set to: 0
 36031  004346  0E00               	movlw	0
 36032  004348  0101               	movlb	1	; () banked
 36033  00434A  6FE3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 36034                           
 36035                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 36036  00434C  0E00               	movlw	0
 36037  00434E  0100               	movlb	0	; () banked
 36038  004350  6FCF               	movwf	_I2cComSts& (0+255),b
 36039                           
 36040                           ; BSR set to: 0
 36041                           ;i2c_slv.c: 182: }
 36042                           
 36043                           ; BSR set to: 0
 36044                           ;i2c_slv.c: 181: break;
 36045                           
 36046                           ;i2c_slv.c: 180: default:
 36047                           
 36048                           ;i2c_slv.c: 178: break;
 36049  004352  0012               	return	
 36050  004354                     l1382:
 36051                           
 36052                           ; BSR set to: 0
 36053  004354  0101               	movlb	1	; () banked
 36054  004356  51E3               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 36055                           
 36056                           ; Switch size 1, requested type "space"
 36057                           ; Number of cases is 5, Range of values is 0 to 4
 36058                           ; switch strategies available:
 36059                           ; Name         Instructions Cycles
 36060                           ; simple_byte           16     9 (average)
 36061                           ;	Chosen strategy is simple_byte
 36062  004358  0A00               	xorlw	0	; case 0
 36063  00435A  B4D8               	btfsc	status,2,c
 36064  00435C  D7AC               	goto	l1383
 36065  00435E  0A01               	xorlw	1	; case 1
 36066  004360  B4D8               	btfsc	status,2,c
 36067  004362  D7CF               	goto	l1389
 36068  004364  0A03               	xorlw	3	; case 2
 36069  004366  B4D8               	btfsc	status,2,c
 36070  004368  D7DA               	goto	l1391
 36071  00436A  0A01               	xorlw	1	; case 3
 36072  00436C  B4D8               	btfsc	status,2,c
 36073  00436E  D7E5               	goto	l1393
 36074  004370  0A07               	xorlw	7	; case 4
 36075  004372  A4D8               	btfss	status,2,c
 36076  004374  0012               	return	
 36077  004376  D7E7               	goto	l1394
 36078  004378                     __end_of_I2cSendMsgSm:
 36079                           	opt stack 0
 36080                           tosu	equ	0xFFF
 36081                           tosh	equ	0xFFE
 36082                           tosl	equ	0xFFD
 36083                           pclath	equ	0xFFA
 36084                           tblptru	equ	0xFF8
 36085                           tblptrh	equ	0xFF7
 36086                           tblptrl	equ	0xFF6
 36087                           tablat	equ	0xFF5
 36088                           prodh	equ	0xFF4
 36089                           prodl	equ	0xFF3
 36090                           intcon	equ	0xFF2
 36091                           intcon2	equ	0xFF1
 36092                           intcon3	equ	0xFF0
 36093                           indf0	equ	0xFEF
 36094                           postinc0	equ	0xFEE
 36095                           plusw0	equ	0xFEB
 36096                           fsr0h	equ	0xFEA
 36097                           fsr0l	equ	0xFE9
 36098                           wreg	equ	0xFE8
 36099                           indf1	equ	0xFE7
 36100                           postinc1	equ	0xFE6
 36101                           postdec1	equ	0xFE5
 36102                           plusw1	equ	0xFE3
 36103                           fsr1h	equ	0xFE2
 36104                           fsr1l	equ	0xFE1
 36105                           indf2	equ	0xFDF
 36106                           postinc2	equ	0xFDE
 36107                           postdec2	equ	0xFDD
 36108                           plusw2	equ	0xFDB
 36109                           fsr2h	equ	0xFDA
 36110                           fsr2l	equ	0xFD9
 36111                           status	equ	0xFD8
 36112                           
 36113 ;; *************** function _ReceiveEvt *****************
 36114 ;; Defined at:
 36115 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36116 ;; Parameters:    Size  Location     Type
 36117 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 36118 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 36119 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 36120 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 36121 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 36122 ;;		 -> ActivateRiDetection(1), 
 36123 ;; Auto vars:     Size  Location     Type
 36124 ;;  EventStatus     1   32[BANK0 ] enum E7727
 36125 ;; Return value:  Size  Location     Type
 36126 ;;                  1    wreg      enum E7699
 36127 ;; Registers used:
 36128 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36129 ;; Tracked objects:
 36130 ;;		On entry : 0/0
 36131 ;;		On exit  : 0/0
 36132 ;;		Unchanged: 0/0
 36133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36136 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36137 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36138 ;;Total ram usage:        4 bytes
 36139 ;; Hardware stack levels used:    1
 36140 ;; Hardware stack levels required when called:   11
 36141 ;; This function calls:
 36142 ;;		Nothing
 36143 ;; This function is called by:
 36144 ;;		_MdmCntSm
 36145 ;;		_CheckModem
 36146 ;;		_ModemEvtParser
 36147 ;;		_GetSmsSm
 36148 ;;		_SendSmsSm
 36149 ;;		_Mdm_GetSmsData
 36150 ;;		_Mdm_IsSmsReceived
 36151 ;;		_Mdm_IsRinging
 36152 ;;		_GetCallerNumber
 36153 ;;		_InitGprsNetwork
 36154 ;;		_HttpGetMethod
 36155 ;;		_I2cSendMsgSm
 36156 ;;		_I2cSlv_I2cReadMsgSts
 36157 ;;		_RiSm
 36158 ;;		_GsmGprsTerminal
 36159 ;; This function uses a non-reentrant model
 36160 ;;
 36161                           
 36162                           	psect	text170
 36163  00682A                     __ptext170:
 36164                           	opt stack 0
 36165  00682A                     _ReceiveEvt:
 36166                           	opt stack 13
 36167                           
 36168                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 36169                           
 36170                           ;incstack = 0
 36171  00682A  0E00               	movlw	0
 36172  00682C  0100               	movlb	0	; () banked
 36173  00682E  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 36174                           
 36175                           ; BSR set to: 0
 36176                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 36177  006830  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 36178  006834  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 36179  006838  0E02               	movlw	2
 36180  00683A  18DE               	xorwf	postinc2,w,c
 36181  00683C  A4D8               	btfss	status,2,c
 36182  00683E  D008               	goto	l832
 36183                           
 36184                           ; BSR set to: 0
 36185                           ;os_ser.c: 106: {
 36186                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 36187  006840  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 36188  006844  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 36189  006848  0E01               	movlw	1
 36190  00684A  6EDF               	movwf	indf2,c
 36191                           
 36192                           ; BSR set to: 0
 36193                           ;os_ser.c: 110: EventStatus = EventReceived;
 36194  00684C  0E01               	movlw	1
 36195  00684E  D001               	goto	L81
 36196  006850                     l832:
 36197                           
 36198                           ; BSR set to: 0
 36199                           ;os_ser.c: 112: else
 36200                           ;os_ser.c: 113: {
 36201                           ;os_ser.c: 115: EventStatus = EventIdle;
 36202                           
 36203                           ; BSR set to: 0
 36204  006850  0E00               	movlw	0
 36205  006852                     L81:
 36206  006852  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 36207                           
 36208                           ; BSR set to: 0
 36209                           ;os_ser.c: 116: }
 36210                           ;os_ser.c: 119: return(EventStatus);
 36211  006854  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 36212  006856  0012               	return	
 36213  006858                     __end_of_ReceiveEvt:
 36214                           	opt stack 0
 36215                           tosu	equ	0xFFF
 36216                           tosh	equ	0xFFE
 36217                           tosl	equ	0xFFD
 36218                           pclath	equ	0xFFA
 36219                           tblptru	equ	0xFF8
 36220                           tblptrh	equ	0xFF7
 36221                           tblptrl	equ	0xFF6
 36222                           tablat	equ	0xFF5
 36223                           prodh	equ	0xFF4
 36224                           prodl	equ	0xFF3
 36225                           intcon	equ	0xFF2
 36226                           intcon2	equ	0xFF1
 36227                           intcon3	equ	0xFF0
 36228                           indf0	equ	0xFEF
 36229                           postinc0	equ	0xFEE
 36230                           plusw0	equ	0xFEB
 36231                           fsr0h	equ	0xFEA
 36232                           fsr0l	equ	0xFE9
 36233                           wreg	equ	0xFE8
 36234                           indf1	equ	0xFE7
 36235                           postinc1	equ	0xFE6
 36236                           postdec1	equ	0xFE5
 36237                           plusw1	equ	0xFE3
 36238                           fsr1h	equ	0xFE2
 36239                           fsr1l	equ	0xFE1
 36240                           indf2	equ	0xFDF
 36241                           postinc2	equ	0xFDE
 36242                           postdec2	equ	0xFDD
 36243                           plusw2	equ	0xFDB
 36244                           fsr2h	equ	0xFDA
 36245                           fsr2l	equ	0xFD9
 36246                           status	equ	0xFD8
 36247                           
 36248 ;; *************** function _I2c_WriteData *****************
 36249 ;; Defined at:
 36250 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36251 ;; Parameters:    Size  Location     Type
 36252 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 36253 ;;		 -> I2cTxPacket(5), 
 36254 ;; Auto vars:     Size  Location     Type
 36255 ;;		None
 36256 ;; Return value:  Size  Location     Type
 36257 ;;                  1    wreg      enum E7740
 36258 ;; Registers used:
 36259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36260 ;; Tracked objects:
 36261 ;;		On entry : 0/0
 36262 ;;		On exit  : 0/0
 36263 ;;		Unchanged: 0/0
 36264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36267 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36268 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36269 ;;Total ram usage:        4 bytes
 36270 ;; Hardware stack levels used:    1
 36271 ;; Hardware stack levels required when called:   12
 36272 ;; This function calls:
 36273 ;;		_CheckAckStatus
 36274 ;;		_CheckTxStatus
 36275 ;;		_StartCondition
 36276 ;;		_StopCondition
 36277 ;;		_WriteByte
 36278 ;; This function is called by:
 36279 ;;		_I2cSendMsgSm
 36280 ;; This function uses a non-reentrant model
 36281 ;;
 36282                           
 36283                           	psect	text171
 36284  001EB8                     __ptext171:
 36285                           	opt stack 0
 36286  001EB8                     _I2c_WriteData:
 36287                           	opt stack 14
 36288                           
 36289                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 36290                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 36291                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 36292                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 36293                           ;i2c_drv.c: 260: switch (I2cWriteState)
 36294                           
 36295                           ; BSR set to: 0
 36296                           ;incstack = 0
 36297  001EB8  D095               	goto	l160
 36298  001EBA                     
 36299                           ;i2c_drv.c: 264: StartCondition();
 36300  001EBA  ECD8  F036         	call	_StartCondition	;wreg free
 36301                           
 36302                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 36303  001EBE  0E00               	movlw	0
 36304  001EC0  6E35               	movwf	I2c_WriteData@WriteStatus,c
 36305                           
 36306                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 36307  001EC2  0E01               	movlw	1
 36308  001EC4  D084               	goto	L88
 36309  001EC6                     
 36310                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 36311  001EC6  0100               	movlb	0	; () banked
 36312  001EC8  EE20 F001          	lfsr	2,1
 36313  001ECC  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36314  001ECE  26D9               	addwf	fsr2l,f,c
 36315  001ED0  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36316  001ED2  22DA               	addwfc	fsr2h,f,c
 36317  001ED4  50DF               	movf	indf2,w,c
 36318  001ED6  6F80               	movwf	??_I2c_WriteData& (0+255),b
 36319  001ED8  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 36320  001EDC  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 36321  001EE0  50DF               	movf	indf2,w,c
 36322  001EE2  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 36323  001EE4  90D8               	bcf	status,0,c
 36324  001EE6  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 36325  001EE8  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 36326  001EEA  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 36327  001EEE  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 36328  001EF2  6EDF               	movwf	indf2,c
 36329                           
 36330                           ; BSR set to: 0
 36331                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 36332  001EF4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 36333  001EF8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 36334  001EFC  50DF               	movf	indf2,w,c
 36335  001EFE  ECB6  F036         	call	_WriteByte
 36336                           
 36337                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 36338  001F02  0E02               	movlw	2
 36339  001F04  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36340  001F06                     
 36341                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 36342  001F06  ECC0  F036         	call	_CheckTxStatus	;wreg free
 36343  001F0A  0900               	iorlw	0
 36344  001F0C  A4D8               	btfss	status,2,c
 36345  001F0E  D089               	goto	l162
 36346                           
 36347                           ;i2c_drv.c: 282: {
 36348                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 36349  001F10  0E03               	movlw	3
 36350  001F12  D01A               	goto	L90
 36351  001F14                     
 36352                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 36353  001F14  0100               	movlb	0	; () banked
 36354  001F16  EE20 F002          	lfsr	2,2
 36355  001F1A  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36356  001F1C  26D9               	addwf	fsr2l,f,c
 36357  001F1E  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36358  001F20  22DA               	addwfc	fsr2h,f,c
 36359  001F22  CFDE F080          	movff	postinc2,??_I2c_WriteData
 36360  001F26  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 36361  001F2A  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 36362  001F2E  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 36363  001F32  50DF               	movf	indf2,w,c
 36364  001F34  ECB6  F036         	call	_WriteByte
 36365                           
 36366                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 36367  001F38  0E04               	movlw	4
 36368  001F3A  D049               	goto	L88
 36369  001F3C                     
 36370                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 36371  001F3C  ECC0  F036         	call	_CheckTxStatus	;wreg free
 36372  001F40  0900               	iorlw	0
 36373  001F42  A4D8               	btfss	status,2,c
 36374  001F44  D06E               	goto	l162
 36375                           
 36376                           ;i2c_drv.c: 300: {
 36377                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 36378  001F46  0E05               	movlw	5
 36379  001F48                     L90:
 36380  001F48  6E37               	movwf	I2c_WriteData@I2cNextState,c
 36381                           
 36382                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 36383  001F4A  0E08               	movlw	8
 36384  001F4C  D040               	goto	L88
 36385  001F4E                     
 36386                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 36387  001F4E  0100               	movlb	0	; () banked
 36388  001F50  EE20 F004          	lfsr	2,4
 36389  001F54  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36390  001F56  26D9               	addwf	fsr2l,f,c
 36391  001F58  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36392  001F5A  22DA               	addwfc	fsr2h,f,c
 36393  001F5C  50DF               	movf	indf2,w,c
 36394  001F5E  B4D8               	btfsc	status,2,c
 36395  001F60  D010               	goto	l170
 36396                           
 36397                           ; BSR set to: 0
 36398                           ;i2c_drv.c: 310: {
 36399                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 36400  001F62  EE20 F004          	lfsr	2,4
 36401  001F66  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36402  001F68  26D9               	addwf	fsr2l,f,c
 36403  001F6A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36404  001F6C  22DA               	addwfc	fsr2h,f,c
 36405  001F6E  06DF               	decf	indf2,f,c
 36406                           
 36407                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 36408  001F70  EE20 F002          	lfsr	2,2
 36409  001F74  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36410  001F76  26D9               	addwf	fsr2l,f,c
 36411  001F78  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36412  001F7A  22DA               	addwfc	fsr2h,f,c
 36413  001F7C  2ADE               	incf	postinc2,f,c
 36414  001F7E  0E00               	movlw	0
 36415  001F80  22DD               	addwfc	postdec2,f,c
 36416  001F82                     l170:
 36417                           
 36418                           ; BSR set to: 0
 36419                           ;i2c_drv.c: 315: }
 36420                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 36421  001F82  EE20 F004          	lfsr	2,4
 36422  001F86  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 36423  001F88  26D9               	addwf	fsr2l,f,c
 36424  001F8A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 36425  001F8C  22DA               	addwfc	fsr2h,f,c
 36426  001F8E  50DF               	movf	indf2,w,c
 36427  001F90  A4D8               	btfss	status,2,c
 36428  001F92  D002               	goto	l171
 36429                           
 36430                           ; BSR set to: 0
 36431                           ;i2c_drv.c: 319: {
 36432                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 36433  001F94  0E06               	movlw	6
 36434  001F96  D01B               	goto	L88
 36435  001F98                     l171:
 36436                           
 36437                           ; BSR set to: 0
 36438                           ;i2c_drv.c: 323: else
 36439                           ;i2c_drv.c: 324: {
 36440                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 36441                           
 36442                           ; BSR set to: 0
 36443  001F98  0E03               	movlw	3
 36444  001F9A  D019               	goto	L88
 36445  001F9C                     
 36446                           ;i2c_drv.c: 332: StopCondition();
 36447                           
 36448                           ; BSR set to: 0
 36449  001F9C  ECD6  F036         	call	_StopCondition	;wreg free
 36450                           
 36451                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 36452  001FA0  0E07               	movlw	7
 36453  001FA2  D015               	goto	L88
 36454  001FA4                     
 36455                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 36456  001FA4  0E00               	movlw	0
 36457  001FA6  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36458                           
 36459                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 36460  001FA8  0E00               	movlw	0
 36461  001FAA  6E37               	movwf	I2c_WriteData@I2cNextState,c
 36462                           
 36463                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 36464  001FAC  0E02               	movlw	2
 36465  001FAE  D018               	goto	L89
 36466  001FB0                     
 36467                           ;i2c_drv.c: 347: TentativeCounter++;
 36468  001FB0  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 36469                           
 36470                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 36471  001FB2  ECC5  F036         	call	_CheckAckStatus	;wreg free
 36472  001FB6  0900               	iorlw	0
 36473  001FB8  A4D8               	btfss	status,2,c
 36474  001FBA  D005               	goto	l176
 36475                           
 36476                           ;i2c_drv.c: 350: {
 36477                           ;i2c_drv.c: 352: TentativeCounter = 0;
 36478  001FBC  0E00               	movlw	0
 36479  001FBE  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 36480                           
 36481                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 36482  001FC0  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 36483                           
 36484                           ;i2c_drv.c: 355: }
 36485  001FC4  D02E               	goto	l162
 36486  001FC6                     l176:
 36487                           
 36488                           ;i2c_drv.c: 356: else
 36489                           ;i2c_drv.c: 357: {
 36490                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 36491  001FC6  0E02               	movlw	2
 36492  001FC8  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 36493  001FCA  D02B               	goto	l162
 36494                           
 36495                           ;i2c_drv.c: 360: {
 36496                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 36497  001FCC  0E09               	movlw	9
 36498  001FCE                     L88:
 36499  001FCE  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36500                           
 36501                           ;i2c_drv.c: 363: }
 36502                           ;i2c_drv.c: 364: }
 36503                           ;i2c_drv.c: 365: break;
 36504  001FD0  D028               	goto	l162
 36505  001FD2                     
 36506                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 36507  001FD2  0E00               	movlw	0
 36508  001FD4  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 36509                           
 36510                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 36511  001FD6  0E00               	movlw	0
 36512  001FD8  6E37               	movwf	I2c_WriteData@I2cNextState,c
 36513                           
 36514                           ;i2c_drv.c: 372: TentativeCounter = 0;
 36515  001FDA  0E00               	movlw	0
 36516  001FDC  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 36517                           
 36518                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 36519  001FDE  0E01               	movlw	1
 36520  001FE0                     L89:
 36521  001FE0  6E35               	movwf	I2c_WriteData@WriteStatus,c
 36522                           
 36523                           ;i2c_drv.c: 379: }
 36524                           
 36525                           ;i2c_drv.c: 378: break;
 36526                           
 36527                           ;i2c_drv.c: 377: default:
 36528                           
 36529                           ;i2c_drv.c: 375: break;
 36530  001FE2  D01F               	goto	l162
 36531  001FE4                     l160:
 36532  001FE4  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 36533                           
 36534                           ; Switch size 1, requested type "space"
 36535                           ; Number of cases is 10, Range of values is 0 to 9
 36536                           ; switch strategies available:
 36537                           ; Name         Instructions Cycles
 36538                           ; simple_byte           31    16 (average)
 36539                           ;	Chosen strategy is simple_byte
 36540  001FE6  0A00               	xorlw	0	; case 0
 36541  001FE8  B4D8               	btfsc	status,2,c
 36542  001FEA  D767               	goto	l161
 36543  001FEC  0A01               	xorlw	1	; case 1
 36544  001FEE  B4D8               	btfsc	status,2,c
 36545  001FF0  D76A               	goto	l163
 36546  001FF2  0A03               	xorlw	3	; case 2
 36547  001FF4  B4D8               	btfsc	status,2,c
 36548  001FF6  D787               	goto	l164
 36549  001FF8  0A01               	xorlw	1	; case 3
 36550  001FFA  B4D8               	btfsc	status,2,c
 36551  001FFC  D78B               	goto	l166
 36552  001FFE  0A07               	xorlw	7	; case 4
 36553  002000  B4D8               	btfsc	status,2,c
 36554  002002  D79C               	goto	l167
 36555  002004  0A01               	xorlw	1	; case 5
 36556  002006  B4D8               	btfsc	status,2,c
 36557  002008  D7A2               	goto	l169
 36558  00200A  0A03               	xorlw	3	; case 6
 36559  00200C  B4D8               	btfsc	status,2,c
 36560  00200E  D7C6               	goto	l173
 36561  002010  0A01               	xorlw	1	; case 7
 36562  002012  B4D8               	btfsc	status,2,c
 36563  002014  D7C7               	goto	l174
 36564  002016  0A0F               	xorlw	15	; case 8
 36565  002018  B4D8               	btfsc	status,2,c
 36566  00201A  D7CA               	goto	l175
 36567  00201C  0A01               	xorlw	1	; case 9
 36568  00201E  B4D8               	btfsc	status,2,c
 36569  002020  D7D8               	goto	l179
 36570  002022                     l162:
 36571                           
 36572                           ;i2c_drv.c: 382: return WriteStatus;
 36573  002022  5035               	movf	I2c_WriteData@WriteStatus,w,c
 36574  002024  0012               	return	
 36575  002026                     __end_of_I2c_WriteData:
 36576                           	opt stack 0
 36577                           tosu	equ	0xFFF
 36578                           tosh	equ	0xFFE
 36579                           tosl	equ	0xFFD
 36580                           pclath	equ	0xFFA
 36581                           tblptru	equ	0xFF8
 36582                           tblptrh	equ	0xFF7
 36583                           tblptrl	equ	0xFF6
 36584                           tablat	equ	0xFF5
 36585                           prodh	equ	0xFF4
 36586                           prodl	equ	0xFF3
 36587                           intcon	equ	0xFF2
 36588                           intcon2	equ	0xFF1
 36589                           intcon3	equ	0xFF0
 36590                           indf0	equ	0xFEF
 36591                           postinc0	equ	0xFEE
 36592                           plusw0	equ	0xFEB
 36593                           fsr0h	equ	0xFEA
 36594                           fsr0l	equ	0xFE9
 36595                           wreg	equ	0xFE8
 36596                           indf1	equ	0xFE7
 36597                           postinc1	equ	0xFE6
 36598                           postdec1	equ	0xFE5
 36599                           plusw1	equ	0xFE3
 36600                           fsr1h	equ	0xFE2
 36601                           fsr1l	equ	0xFE1
 36602                           indf2	equ	0xFDF
 36603                           postinc2	equ	0xFDE
 36604                           postdec2	equ	0xFDD
 36605                           plusw2	equ	0xFDB
 36606                           fsr2h	equ	0xFDA
 36607                           fsr2l	equ	0xFD9
 36608                           status	equ	0xFD8
 36609                           
 36610 ;; *************** function _I2c_ReadData *****************
 36611 ;; Defined at:
 36612 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36613 ;; Parameters:    Size  Location     Type
 36614 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 36615 ;;		 -> I2cRxPacket(6), 
 36616 ;; Auto vars:     Size  Location     Type
 36617 ;;		None
 36618 ;; Return value:  Size  Location     Type
 36619 ;;                  1    wreg      enum E7787
 36620 ;; Registers used:
 36621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36622 ;; Tracked objects:
 36623 ;;		On entry : 0/0
 36624 ;;		On exit  : 0/0
 36625 ;;		Unchanged: 0/0
 36626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36627 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36629 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36630 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36631 ;;Total ram usage:        4 bytes
 36632 ;; Hardware stack levels used:    1
 36633 ;; Hardware stack levels required when called:   12
 36634 ;; This function calls:
 36635 ;;		_CheckAckStatus
 36636 ;;		_CheckTxStatus
 36637 ;;		_EnableReceiver
 36638 ;;		_GenerateEvt
 36639 ;;		_ReadByte
 36640 ;;		_SetAckStatus
 36641 ;;		_StartCondition
 36642 ;;		_StopCondition
 36643 ;;		_WriteByte
 36644 ;; This function is called by:
 36645 ;;		_I2cSendMsgSm
 36646 ;; This function uses a non-reentrant model
 36647 ;;
 36648                           
 36649                           	psect	text172
 36650  002186                     __ptext172:
 36651                           	opt stack 0
 36652  002186                     _I2c_ReadData:
 36653                           	opt stack 14
 36654                           
 36655                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 36656                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 36657                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 36658                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 36659                           ;i2c_drv.c: 402: switch (I2cReadState)
 36660                           
 36661                           ;incstack = 0
 36662  002186  D090               	goto	l192
 36663  002188                     
 36664                           ;i2c_drv.c: 406: StartCondition();
 36665  002188  ECD8  F036         	call	_StartCondition	;wreg free
 36666                           
 36667                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 36668  00218C  0E00               	movlw	0
 36669  00218E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36670                           
 36671                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 36672  002190  0E01               	movlw	1
 36673  002192  D083               	goto	L98
 36674  002194                     
 36675                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 36676  002194  0100               	movlb	0	; () banked
 36677  002196  EE20 F001          	lfsr	2,1
 36678  00219A  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36679  00219C  26D9               	addwf	fsr2l,f,c
 36680  00219E  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36681  0021A0  22DA               	addwfc	fsr2h,f,c
 36682  0021A2  50DF               	movf	indf2,w,c
 36683  0021A4  6F82               	movwf	??_I2c_ReadData& (0+255),b
 36684  0021A6  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36685  0021AA  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36686  0021AE  50DF               	movf	indf2,w,c
 36687  0021B0  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 36688  0021B2  90D8               	bcf	status,0,c
 36689  0021B4  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 36690  0021B6  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 36691  0021B8  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36692  0021BC  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36693  0021C0  6EDF               	movwf	indf2,c
 36694                           
 36695                           ; BSR set to: 0
 36696                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 36697  0021C2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 36698  0021C6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 36699  0021CA  50DF               	movf	indf2,w,c
 36700  0021CC  ECB6  F036         	call	_WriteByte
 36701                           
 36702                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 36703  0021D0  0E02               	movlw	2
 36704  0021D2  D063               	goto	L98
 36705  0021D4                     
 36706                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 36707  0021D4  ECC0  F036         	call	_CheckTxStatus	;wreg free
 36708  0021D8  0900               	iorlw	0
 36709  0021DA  A4D8               	btfss	status,2,c
 36710  0021DC  D081               	goto	l194
 36711                           
 36712                           ;i2c_drv.c: 425: {
 36713                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 36714  0021DE  0E03               	movlw	3
 36715  0021E0  D05C               	goto	L98
 36716  0021E2                     
 36717                           ;i2c_drv.c: 433: TentativeCounter++;
 36718  0021E2  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 36719                           
 36720                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 36721  0021E4  ECC5  F036         	call	_CheckAckStatus	;wreg free
 36722  0021E8  0900               	iorlw	0
 36723  0021EA  A4D8               	btfss	status,2,c
 36724  0021EC  D004               	goto	l199
 36725                           
 36726                           ;i2c_drv.c: 436: {
 36727                           ;i2c_drv.c: 438: TentativeCounter = 0;
 36728  0021EE  0E00               	movlw	0
 36729  0021F0  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 36730  0021F2                     
 36731                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 36732  0021F2  0E04               	movlw	4
 36733  0021F4  D052               	goto	L98
 36734  0021F6                     l199:
 36735                           
 36736                           ;i2c_drv.c: 442: else
 36737                           ;i2c_drv.c: 443: {
 36738                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 36739  0021F6  0E02               	movlw	2
 36740  0021F8  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 36741  0021FA  D072               	goto	l194
 36742                           
 36743                           ;i2c_drv.c: 446: {
 36744                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 36745  0021FC  0E08               	movlw	8
 36746  0021FE  D04D               	goto	L98
 36747  002200                     
 36748                           ;i2c_drv.c: 455: EnableReceiver();
 36749  002200  ECDA  F036         	call	_EnableReceiver	;wreg free
 36750                           
 36751                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 36752  002204  0E05               	movlw	5
 36753  002206  D049               	goto	L98
 36754  002208                     
 36755                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 36756  002208  ECC0  F036         	call	_CheckTxStatus	;wreg free
 36757  00220C  0900               	iorlw	0
 36758  00220E  A4D8               	btfss	status,2,c
 36759  002210  D067               	goto	l194
 36760                           
 36761                           ;i2c_drv.c: 463: {
 36762                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 36763  002212  0100               	movlb	0	; () banked
 36764  002214  EE20 F002          	lfsr	2,2
 36765  002218  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36766  00221A  26D9               	addwf	fsr2l,f,c
 36767  00221C  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36768  00221E  22DA               	addwfc	fsr2h,f,c
 36769  002220  CFDE F082          	movff	postinc2,??_I2c_ReadData
 36770  002224  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 36771  002228  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 36772  00222C  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 36773  002230  ECBB  F036         	call	_ReadByte	;wreg free
 36774  002234  6EDF               	movwf	indf2,c
 36775                           
 36776                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 36777  002236  0100               	movlb	0	; () banked
 36778  002238  EE20 F002          	lfsr	2,2
 36779  00223C  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36780  00223E  26D9               	addwf	fsr2l,f,c
 36781  002240  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36782  002242  22DA               	addwfc	fsr2h,f,c
 36783  002244  2ADE               	incf	postinc2,f,c
 36784  002246  0E00               	movlw	0
 36785  002248  22DD               	addwfc	postdec2,f,c
 36786                           
 36787                           ; BSR set to: 0
 36788                           ;i2c_drv.c: 469: DataCounter++;
 36789  00224A  2A33               	incf	I2c_ReadData@DataCounter,f,c
 36790                           
 36791                           ; BSR set to: 0
 36792                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 36793  00224C  0E06               	movlw	6
 36794  00224E  D025               	goto	L98
 36795  002250                     
 36796                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 36797                           
 36798                           ; BSR set to: 0
 36799  002250  0100               	movlb	0	; () banked
 36800  002252  EE20 F004          	lfsr	2,4
 36801  002256  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 36802  002258  26D9               	addwf	fsr2l,f,c
 36803  00225A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36804  00225C  22DA               	addwfc	fsr2h,f,c
 36805  00225E  50DE               	movf	postinc2,w,c
 36806  002260  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 36807  002262  A0D8               	btfss	status,0,c
 36808  002264  D008               	goto	l206
 36809                           
 36810                           ; BSR set to: 0
 36811                           ;i2c_drv.c: 478: {
 36812                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 36813  002266  0E01               	movlw	1
 36814  002268  EC3E  F036         	call	_SetAckStatus
 36815                           
 36816                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 36817  00226C  0E07               	movlw	7
 36818  00226E  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36819                           
 36820                           ;i2c_drv.c: 484: DataCounter = 0;
 36821  002270  0E00               	movlw	0
 36822  002272  6E33               	movwf	I2c_ReadData@DataCounter,c
 36823                           
 36824                           ;i2c_drv.c: 485: }
 36825  002274  D035               	goto	l194
 36826  002276                     l206:
 36827                           
 36828                           ;i2c_drv.c: 486: else
 36829                           ;i2c_drv.c: 487: {
 36830                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 36831  002276  0E00               	movlw	0
 36832  002278  EC3E  F036         	call	_SetAckStatus
 36833  00227C  D7BA               	goto	L99
 36834  00227E                     
 36835                           ;i2c_drv.c: 497: StopCondition();
 36836  00227E  ECD6  F036         	call	_StopCondition	;wreg free
 36837                           
 36838                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 36839  002282  0E02               	movlw	2
 36840  002284  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36841                           
 36842                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 36843  002286  0E05               	movlw	5
 36844  002288  0100               	movlb	0	; () banked
 36845  00228A  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 36846  00228C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 36847  00228E  0E00               	movlw	0
 36848  002290  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 36849  002292  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 36850  002294  EC06  F036         	call	_GenerateEvt	;wreg free
 36851                           
 36852                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 36853  002298  0E00               	movlw	0
 36854  00229A                     L98:
 36855  00229A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36856                           
 36857                           ;i2c_drv.c: 504: break;
 36858  00229C  D021               	goto	l194
 36859  00229E                     
 36860                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 36861  00229E  0E00               	movlw	0
 36862  0022A0  6E34               	movwf	I2c_ReadData@I2cReadState,c
 36863                           
 36864                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 36865  0022A2  0E01               	movlw	1
 36866  0022A4  6E31               	movwf	I2c_ReadData@ReadStatus,c
 36867                           
 36868                           ;i2c_drv.c: 515: }
 36869                           
 36870                           ;i2c_drv.c: 514: break;
 36871                           
 36872                           ;i2c_drv.c: 513: default:
 36873                           
 36874                           ;i2c_drv.c: 511: break;
 36875  0022A6  D01C               	goto	l194
 36876  0022A8                     l192:
 36877  0022A8  5034               	movf	I2c_ReadData@I2cReadState,w,c
 36878                           
 36879                           ; Switch size 1, requested type "space"
 36880                           ; Number of cases is 9, Range of values is 0 to 8
 36881                           ; switch strategies available:
 36882                           ; Name         Instructions Cycles
 36883                           ; simple_byte           28    15 (average)
 36884                           ;	Chosen strategy is simple_byte
 36885  0022AA  0A00               	xorlw	0	; case 0
 36886  0022AC  B4D8               	btfsc	status,2,c
 36887  0022AE  D76C               	goto	l193
 36888  0022B0  0A01               	xorlw	1	; case 1
 36889  0022B2  B4D8               	btfsc	status,2,c
 36890  0022B4  D76F               	goto	l195
 36891  0022B6  0A03               	xorlw	3	; case 2
 36892  0022B8  B4D8               	btfsc	status,2,c
 36893  0022BA  D78C               	goto	l196
 36894  0022BC  0A01               	xorlw	1	; case 3
 36895  0022BE  B4D8               	btfsc	status,2,c
 36896  0022C0  D790               	goto	l198
 36897  0022C2  0A07               	xorlw	7	; case 4
 36898  0022C4  B4D8               	btfsc	status,2,c
 36899  0022C6  D79C               	goto	l202
 36900  0022C8  0A01               	xorlw	1	; case 5
 36901  0022CA  B4D8               	btfsc	status,2,c
 36902  0022CC  D79D               	goto	l203
 36903  0022CE  0A03               	xorlw	3	; case 6
 36904  0022D0  B4D8               	btfsc	status,2,c
 36905  0022D2  D7BE               	goto	l205
 36906  0022D4  0A01               	xorlw	1	; case 7
 36907  0022D6  B4D8               	btfsc	status,2,c
 36908  0022D8  D7D2               	goto	l208
 36909  0022DA  0A0F               	xorlw	15	; case 8
 36910  0022DC  B4D8               	btfsc	status,2,c
 36911  0022DE  D7DF               	goto	l209
 36912  0022E0                     l194:
 36913                           
 36914                           ;i2c_drv.c: 518: return ReadStatus;
 36915  0022E0  5031               	movf	I2c_ReadData@ReadStatus,w,c
 36916  0022E2  0012               	return	
 36917  0022E4                     __end_of_I2c_ReadData:
 36918                           	opt stack 0
 36919                           tosu	equ	0xFFF
 36920                           tosh	equ	0xFFE
 36921                           tosl	equ	0xFFD
 36922                           pclath	equ	0xFFA
 36923                           tblptru	equ	0xFF8
 36924                           tblptrh	equ	0xFF7
 36925                           tblptrl	equ	0xFF6
 36926                           tablat	equ	0xFF5
 36927                           prodh	equ	0xFF4
 36928                           prodl	equ	0xFF3
 36929                           intcon	equ	0xFF2
 36930                           intcon2	equ	0xFF1
 36931                           intcon3	equ	0xFF0
 36932                           indf0	equ	0xFEF
 36933                           postinc0	equ	0xFEE
 36934                           plusw0	equ	0xFEB
 36935                           fsr0h	equ	0xFEA
 36936                           fsr0l	equ	0xFE9
 36937                           wreg	equ	0xFE8
 36938                           indf1	equ	0xFE7
 36939                           postinc1	equ	0xFE6
 36940                           postdec1	equ	0xFE5
 36941                           plusw1	equ	0xFE3
 36942                           fsr1h	equ	0xFE2
 36943                           fsr1l	equ	0xFE1
 36944                           indf2	equ	0xFDF
 36945                           postinc2	equ	0xFDE
 36946                           postdec2	equ	0xFDD
 36947                           plusw2	equ	0xFDB
 36948                           fsr2h	equ	0xFDA
 36949                           fsr2l	equ	0xFD9
 36950                           status	equ	0xFD8
 36951                           
 36952 ;; *************** function _WriteByte *****************
 36953 ;; Defined at:
 36954 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36955 ;; Parameters:    Size  Location     Type
 36956 ;;  Byte            1    wreg     unsigned char 
 36957 ;; Auto vars:     Size  Location     Type
 36958 ;;  Byte            1   29[BANK0 ] unsigned char 
 36959 ;; Return value:  Size  Location     Type
 36960 ;;                  1    wreg      void 
 36961 ;; Registers used:
 36962 ;;		wreg
 36963 ;; Tracked objects:
 36964 ;;		On entry : 0/0
 36965 ;;		On exit  : 0/0
 36966 ;;		Unchanged: 0/0
 36967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36971 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36972 ;;Total ram usage:        1 bytes
 36973 ;; Hardware stack levels used:    1
 36974 ;; Hardware stack levels required when called:   11
 36975 ;; This function calls:
 36976 ;;		Nothing
 36977 ;; This function is called by:
 36978 ;;		_I2c_WriteData
 36979 ;;		_I2c_ReadData
 36980 ;; This function uses a non-reentrant model
 36981 ;;
 36982                           
 36983                           	psect	text173
 36984  006D6C                     __ptext173:
 36985                           	opt stack 0
 36986  006D6C                     _WriteByte:
 36987                           	opt stack 14
 36988                           
 36989                           ;incstack = 0
 36990                           ;WriteByte@Byte stored from wreg
 36991  006D6C  0100               	movlb	0	; () banked
 36992  006D6E  6F7D               	movwf	WriteByte@Byte& (0+255),b
 36993                           
 36994                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 36995  006D70  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 36996  006D74  0012               	return		;funcret
 36997  006D76                     __end_of_WriteByte:
 36998                           	opt stack 0
 36999                           tosu	equ	0xFFF
 37000                           tosh	equ	0xFFE
 37001                           tosl	equ	0xFFD
 37002                           pclath	equ	0xFFA
 37003                           tblptru	equ	0xFF8
 37004                           tblptrh	equ	0xFF7
 37005                           tblptrl	equ	0xFF6
 37006                           tablat	equ	0xFF5
 37007                           prodh	equ	0xFF4
 37008                           prodl	equ	0xFF3
 37009                           intcon	equ	0xFF2
 37010                           intcon2	equ	0xFF1
 37011                           intcon3	equ	0xFF0
 37012                           indf0	equ	0xFEF
 37013                           postinc0	equ	0xFEE
 37014                           plusw0	equ	0xFEB
 37015                           fsr0h	equ	0xFEA
 37016                           fsr0l	equ	0xFE9
 37017                           wreg	equ	0xFE8
 37018                           indf1	equ	0xFE7
 37019                           postinc1	equ	0xFE6
 37020                           postdec1	equ	0xFE5
 37021                           plusw1	equ	0xFE3
 37022                           fsr1h	equ	0xFE2
 37023                           fsr1l	equ	0xFE1
 37024                           indf2	equ	0xFDF
 37025                           postinc2	equ	0xFDE
 37026                           postdec2	equ	0xFDD
 37027                           plusw2	equ	0xFDB
 37028                           fsr2h	equ	0xFDA
 37029                           fsr2l	equ	0xFD9
 37030                           status	equ	0xFD8
 37031                           
 37032 ;; *************** function _StopCondition *****************
 37033 ;; Defined at:
 37034 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37035 ;; Parameters:    Size  Location     Type
 37036 ;;		None
 37037 ;; Auto vars:     Size  Location     Type
 37038 ;;		None
 37039 ;; Return value:  Size  Location     Type
 37040 ;;                  1    wreg      void 
 37041 ;; Registers used:
 37042 ;;		status,2, status,0
 37043 ;; Tracked objects:
 37044 ;;		On entry : 0/0
 37045 ;;		On exit  : 0/0
 37046 ;;		Unchanged: 0/0
 37047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37052 ;;Total ram usage:        0 bytes
 37053 ;; Hardware stack levels used:    1
 37054 ;; Hardware stack levels required when called:   11
 37055 ;; This function calls:
 37056 ;;		Nothing
 37057 ;; This function is called by:
 37058 ;;		_I2c_WriteData
 37059 ;;		_I2c_ReadData
 37060 ;; This function uses a non-reentrant model
 37061 ;;
 37062                           
 37063                           	psect	text174
 37064  006DAC                     __ptext174:
 37065                           	opt stack 0
 37066  006DAC                     _StopCondition:
 37067                           	opt stack 14
 37068                           
 37069                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 37070                           
 37071                           ;incstack = 0
 37072  006DAC  8471               	bsf	3953,2,c	;volatile
 37073  006DAE  0012               	return		;funcret
 37074  006DB0                     __end_of_StopCondition:
 37075                           	opt stack 0
 37076                           tosu	equ	0xFFF
 37077                           tosh	equ	0xFFE
 37078                           tosl	equ	0xFFD
 37079                           pclath	equ	0xFFA
 37080                           tblptru	equ	0xFF8
 37081                           tblptrh	equ	0xFF7
 37082                           tblptrl	equ	0xFF6
 37083                           tablat	equ	0xFF5
 37084                           prodh	equ	0xFF4
 37085                           prodl	equ	0xFF3
 37086                           intcon	equ	0xFF2
 37087                           intcon2	equ	0xFF1
 37088                           intcon3	equ	0xFF0
 37089                           indf0	equ	0xFEF
 37090                           postinc0	equ	0xFEE
 37091                           plusw0	equ	0xFEB
 37092                           fsr0h	equ	0xFEA
 37093                           fsr0l	equ	0xFE9
 37094                           wreg	equ	0xFE8
 37095                           indf1	equ	0xFE7
 37096                           postinc1	equ	0xFE6
 37097                           postdec1	equ	0xFE5
 37098                           plusw1	equ	0xFE3
 37099                           fsr1h	equ	0xFE2
 37100                           fsr1l	equ	0xFE1
 37101                           indf2	equ	0xFDF
 37102                           postinc2	equ	0xFDE
 37103                           postdec2	equ	0xFDD
 37104                           plusw2	equ	0xFDB
 37105                           fsr2h	equ	0xFDA
 37106                           fsr2l	equ	0xFD9
 37107                           status	equ	0xFD8
 37108                           
 37109 ;; *************** function _StartCondition *****************
 37110 ;; Defined at:
 37111 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37112 ;; Parameters:    Size  Location     Type
 37113 ;;		None
 37114 ;; Auto vars:     Size  Location     Type
 37115 ;;		None
 37116 ;; Return value:  Size  Location     Type
 37117 ;;                  1    wreg      void 
 37118 ;; Registers used:
 37119 ;;		status,2, status,0
 37120 ;; Tracked objects:
 37121 ;;		On entry : 0/0
 37122 ;;		On exit  : 0/0
 37123 ;;		Unchanged: 0/0
 37124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37129 ;;Total ram usage:        0 bytes
 37130 ;; Hardware stack levels used:    1
 37131 ;; Hardware stack levels required when called:   11
 37132 ;; This function calls:
 37133 ;;		Nothing
 37134 ;; This function is called by:
 37135 ;;		_I2c_WriteData
 37136 ;;		_I2c_ReadData
 37137 ;; This function uses a non-reentrant model
 37138 ;;
 37139                           
 37140                           	psect	text175
 37141  006DB0                     __ptext175:
 37142                           	opt stack 0
 37143  006DB0                     _StartCondition:
 37144                           	opt stack 14
 37145                           
 37146                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 37147                           
 37148                           ;incstack = 0
 37149  006DB0  8071               	bsf	3953,0,c	;volatile
 37150  006DB2  0012               	return		;funcret
 37151  006DB4                     __end_of_StartCondition:
 37152                           	opt stack 0
 37153                           tosu	equ	0xFFF
 37154                           tosh	equ	0xFFE
 37155                           tosl	equ	0xFFD
 37156                           pclath	equ	0xFFA
 37157                           tblptru	equ	0xFF8
 37158                           tblptrh	equ	0xFF7
 37159                           tblptrl	equ	0xFF6
 37160                           tablat	equ	0xFF5
 37161                           prodh	equ	0xFF4
 37162                           prodl	equ	0xFF3
 37163                           intcon	equ	0xFF2
 37164                           intcon2	equ	0xFF1
 37165                           intcon3	equ	0xFF0
 37166                           indf0	equ	0xFEF
 37167                           postinc0	equ	0xFEE
 37168                           plusw0	equ	0xFEB
 37169                           fsr0h	equ	0xFEA
 37170                           fsr0l	equ	0xFE9
 37171                           wreg	equ	0xFE8
 37172                           indf1	equ	0xFE7
 37173                           postinc1	equ	0xFE6
 37174                           postdec1	equ	0xFE5
 37175                           plusw1	equ	0xFE3
 37176                           fsr1h	equ	0xFE2
 37177                           fsr1l	equ	0xFE1
 37178                           indf2	equ	0xFDF
 37179                           postinc2	equ	0xFDE
 37180                           postdec2	equ	0xFDD
 37181                           plusw2	equ	0xFDB
 37182                           fsr2h	equ	0xFDA
 37183                           fsr2l	equ	0xFD9
 37184                           status	equ	0xFD8
 37185                           
 37186 ;; *************** function _SetAckStatus *****************
 37187 ;; Defined at:
 37188 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37189 ;; Parameters:    Size  Location     Type
 37190 ;;  AckSts          1    wreg     unsigned char 
 37191 ;; Auto vars:     Size  Location     Type
 37192 ;;  AckSts          1   29[BANK0 ] unsigned char 
 37193 ;; Return value:  Size  Location     Type
 37194 ;;                  1    wreg      void 
 37195 ;; Registers used:
 37196 ;;		wreg
 37197 ;; Tracked objects:
 37198 ;;		On entry : 0/0
 37199 ;;		On exit  : 0/0
 37200 ;;		Unchanged: 0/0
 37201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37205 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37206 ;;Total ram usage:        1 bytes
 37207 ;; Hardware stack levels used:    1
 37208 ;; Hardware stack levels required when called:   11
 37209 ;; This function calls:
 37210 ;;		Nothing
 37211 ;; This function is called by:
 37212 ;;		_I2c_ReadData
 37213 ;; This function uses a non-reentrant model
 37214 ;;
 37215                           
 37216                           	psect	text176
 37217  006C7C                     __ptext176:
 37218                           	opt stack 0
 37219  006C7C                     _SetAckStatus:
 37220                           	opt stack 14
 37221                           
 37222                           ;incstack = 0
 37223                           ;SetAckStatus@AckSts stored from wreg
 37224  006C7C  0100               	movlb	0	; () banked
 37225  006C7E  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 37226                           
 37227                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 37228  006C80  0100               	movlb	0	; () banked
 37229  006C82  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 37230  006C84  D002               	bra	u12845
 37231  006C86  9A71               	bcf	3953,5,c	;volatile
 37232  006C88  D001               	bra	u12846
 37233  006C8A                     u12845:
 37234  006C8A  8A71               	bsf	3953,5,c	;volatile
 37235  006C8C                     u12846:
 37236                           
 37237                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 37238  006C8C  8871               	bsf	3953,4,c	;volatile
 37239  006C8E  0012               	return		;funcret
 37240  006C90                     __end_of_SetAckStatus:
 37241                           	opt stack 0
 37242                           tosu	equ	0xFFF
 37243                           tosh	equ	0xFFE
 37244                           tosl	equ	0xFFD
 37245                           pclath	equ	0xFFA
 37246                           tblptru	equ	0xFF8
 37247                           tblptrh	equ	0xFF7
 37248                           tblptrl	equ	0xFF6
 37249                           tablat	equ	0xFF5
 37250                           prodh	equ	0xFF4
 37251                           prodl	equ	0xFF3
 37252                           intcon	equ	0xFF2
 37253                           intcon2	equ	0xFF1
 37254                           intcon3	equ	0xFF0
 37255                           indf0	equ	0xFEF
 37256                           postinc0	equ	0xFEE
 37257                           plusw0	equ	0xFEB
 37258                           fsr0h	equ	0xFEA
 37259                           fsr0l	equ	0xFE9
 37260                           wreg	equ	0xFE8
 37261                           indf1	equ	0xFE7
 37262                           postinc1	equ	0xFE6
 37263                           postdec1	equ	0xFE5
 37264                           plusw1	equ	0xFE3
 37265                           fsr1h	equ	0xFE2
 37266                           fsr1l	equ	0xFE1
 37267                           indf2	equ	0xFDF
 37268                           postinc2	equ	0xFDE
 37269                           postdec2	equ	0xFDD
 37270                           plusw2	equ	0xFDB
 37271                           fsr2h	equ	0xFDA
 37272                           fsr2l	equ	0xFD9
 37273                           status	equ	0xFD8
 37274                           
 37275 ;; *************** function _ReadByte *****************
 37276 ;; Defined at:
 37277 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37278 ;; Parameters:    Size  Location     Type
 37279 ;;		None
 37280 ;; Auto vars:     Size  Location     Type
 37281 ;;  Byte            1   29[BANK0 ] unsigned char 
 37282 ;; Return value:  Size  Location     Type
 37283 ;;                  1    wreg      unsigned char 
 37284 ;; Registers used:
 37285 ;;		wreg, status,2
 37286 ;; Tracked objects:
 37287 ;;		On entry : 0/0
 37288 ;;		On exit  : 0/0
 37289 ;;		Unchanged: 0/0
 37290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37294 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37295 ;;Total ram usage:        1 bytes
 37296 ;; Hardware stack levels used:    1
 37297 ;; Hardware stack levels required when called:   11
 37298 ;; This function calls:
 37299 ;;		Nothing
 37300 ;; This function is called by:
 37301 ;;		_I2c_ReadData
 37302 ;; This function uses a non-reentrant model
 37303 ;;
 37304                           
 37305                           	psect	text177
 37306  006D76                     __ptext177:
 37307                           	opt stack 0
 37308  006D76                     _ReadByte:
 37309                           	opt stack 14
 37310                           
 37311                           ;i2c_drv.c: 207: UINT8 Byte;
 37312                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 37313                           
 37314                           ;incstack = 0
 37315  006D76  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 37316                           
 37317                           ;i2c_drv.c: 213: return Byte;
 37318  006D7A  0100               	movlb	0	; () banked
 37319  006D7C  517D               	movf	ReadByte@Byte& (0+255),w,b
 37320  006D7E  0012               	return	
 37321  006D80                     __end_of_ReadByte:
 37322                           	opt stack 0
 37323                           tosu	equ	0xFFF
 37324                           tosh	equ	0xFFE
 37325                           tosl	equ	0xFFD
 37326                           pclath	equ	0xFFA
 37327                           tblptru	equ	0xFF8
 37328                           tblptrh	equ	0xFF7
 37329                           tblptrl	equ	0xFF6
 37330                           tablat	equ	0xFF5
 37331                           prodh	equ	0xFF4
 37332                           prodl	equ	0xFF3
 37333                           intcon	equ	0xFF2
 37334                           intcon2	equ	0xFF1
 37335                           intcon3	equ	0xFF0
 37336                           indf0	equ	0xFEF
 37337                           postinc0	equ	0xFEE
 37338                           plusw0	equ	0xFEB
 37339                           fsr0h	equ	0xFEA
 37340                           fsr0l	equ	0xFE9
 37341                           wreg	equ	0xFE8
 37342                           indf1	equ	0xFE7
 37343                           postinc1	equ	0xFE6
 37344                           postdec1	equ	0xFE5
 37345                           plusw1	equ	0xFE3
 37346                           fsr1h	equ	0xFE2
 37347                           fsr1l	equ	0xFE1
 37348                           indf2	equ	0xFDF
 37349                           postinc2	equ	0xFDE
 37350                           postdec2	equ	0xFDD
 37351                           plusw2	equ	0xFDB
 37352                           fsr2h	equ	0xFDA
 37353                           fsr2l	equ	0xFD9
 37354                           status	equ	0xFD8
 37355                           
 37356 ;; *************** function _GenerateEvt *****************
 37357 ;; Defined at:
 37358 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 37359 ;; Parameters:    Size  Location     Type
 37360 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 37361 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37362 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37363 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37364 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37365 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37366 ;; Auto vars:     Size  Location     Type
 37367 ;;  EventStatus     1   31[BANK0 ] enum E7727
 37368 ;; Return value:  Size  Location     Type
 37369 ;;                  1    wreg      enum E7699
 37370 ;; Registers used:
 37371 ;;		wreg, fsr2l, fsr2h, status,2
 37372 ;; Tracked objects:
 37373 ;;		On entry : 0/0
 37374 ;;		On exit  : 0/0
 37375 ;;		Unchanged: 0/0
 37376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37380 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37381 ;;Total ram usage:        3 bytes
 37382 ;; Hardware stack levels used:    1
 37383 ;; Hardware stack levels required when called:   11
 37384 ;; This function calls:
 37385 ;;		Nothing
 37386 ;; This function is called by:
 37387 ;;		_I2c_ReadData
 37388 ;;		_CheckModem
 37389 ;;		_TurnOnModem
 37390 ;;		_ConfigureModem
 37391 ;;		_ModemEvtParser
 37392 ;;		_GetSmsSm
 37393 ;;		_Mdm_RequestSmsData
 37394 ;;		_I2cSlv_SendI2cMsg
 37395 ;;		_I2cSlv_ReceiveI2cMsg
 37396 ;;		_RiSm
 37397 ;;		_Mdm_SendSmsData
 37398 ;;		_MdmHttp_InitGprsNetwork
 37399 ;;		_MdmHttp_GetMethod
 37400 ;;		_Alarm
 37401 ;; This function uses a non-reentrant model
 37402 ;;
 37403                           
 37404                           	psect	text178
 37405  006C0C                     __ptext178:
 37406                           	opt stack 0
 37407  006C0C                     _GenerateEvt:
 37408                           	opt stack 13
 37409                           
 37410                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 37411                           
 37412                           ; BSR set to: 0
 37413                           ;incstack = 0
 37414  006C0C  0E00               	movlw	0
 37415  006C0E  0100               	movlb	0	; () banked
 37416  006C10  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 37417                           
 37418                           ; BSR set to: 0
 37419                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 37420  006C12  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 37421  006C16  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 37422  006C1A  0E02               	movlw	2
 37423  006C1C  6EDF               	movwf	indf2,c
 37424                           
 37425                           ; BSR set to: 0
 37426                           ;os_ser.c: 83: EventStatus = EventSent;
 37427  006C1E  0E02               	movlw	2
 37428  006C20  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 37429  006C22  0012               	return	
 37430  006C24                     __end_of_GenerateEvt:
 37431                           	opt stack 0
 37432                           tosu	equ	0xFFF
 37433                           tosh	equ	0xFFE
 37434                           tosl	equ	0xFFD
 37435                           pclath	equ	0xFFA
 37436                           tblptru	equ	0xFF8
 37437                           tblptrh	equ	0xFF7
 37438                           tblptrl	equ	0xFF6
 37439                           tablat	equ	0xFF5
 37440                           prodh	equ	0xFF4
 37441                           prodl	equ	0xFF3
 37442                           intcon	equ	0xFF2
 37443                           intcon2	equ	0xFF1
 37444                           intcon3	equ	0xFF0
 37445                           indf0	equ	0xFEF
 37446                           postinc0	equ	0xFEE
 37447                           plusw0	equ	0xFEB
 37448                           fsr0h	equ	0xFEA
 37449                           fsr0l	equ	0xFE9
 37450                           wreg	equ	0xFE8
 37451                           indf1	equ	0xFE7
 37452                           postinc1	equ	0xFE6
 37453                           postdec1	equ	0xFE5
 37454                           plusw1	equ	0xFE3
 37455                           fsr1h	equ	0xFE2
 37456                           fsr1l	equ	0xFE1
 37457                           indf2	equ	0xFDF
 37458                           postinc2	equ	0xFDE
 37459                           postdec2	equ	0xFDD
 37460                           plusw2	equ	0xFDB
 37461                           fsr2h	equ	0xFDA
 37462                           fsr2l	equ	0xFD9
 37463                           status	equ	0xFD8
 37464                           
 37465 ;; *************** function _EnableReceiver *****************
 37466 ;; Defined at:
 37467 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37468 ;; Parameters:    Size  Location     Type
 37469 ;;		None
 37470 ;; Auto vars:     Size  Location     Type
 37471 ;;		None
 37472 ;; Return value:  Size  Location     Type
 37473 ;;                  1    wreg      void 
 37474 ;; Registers used:
 37475 ;;		status,2, status,0
 37476 ;; Tracked objects:
 37477 ;;		On entry : 0/0
 37478 ;;		On exit  : 0/0
 37479 ;;		Unchanged: 0/0
 37480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37485 ;;Total ram usage:        0 bytes
 37486 ;; Hardware stack levels used:    1
 37487 ;; Hardware stack levels required when called:   11
 37488 ;; This function calls:
 37489 ;;		Nothing
 37490 ;; This function is called by:
 37491 ;;		_I2c_ReadData
 37492 ;; This function uses a non-reentrant model
 37493 ;;
 37494                           
 37495                           	psect	text179
 37496  006DB4                     __ptext179:
 37497                           	opt stack 0
 37498  006DB4                     _EnableReceiver:
 37499                           	opt stack 14
 37500                           
 37501                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 37502                           
 37503                           ; BSR set to: 0
 37504                           ;incstack = 0
 37505  006DB4  8671               	bsf	3953,3,c	;volatile
 37506  006DB6  0012               	return		;funcret
 37507  006DB8                     __end_of_EnableReceiver:
 37508                           	opt stack 0
 37509                           tosu	equ	0xFFF
 37510                           tosh	equ	0xFFE
 37511                           tosl	equ	0xFFD
 37512                           pclath	equ	0xFFA
 37513                           tblptru	equ	0xFF8
 37514                           tblptrh	equ	0xFF7
 37515                           tblptrl	equ	0xFF6
 37516                           tablat	equ	0xFF5
 37517                           prodh	equ	0xFF4
 37518                           prodl	equ	0xFF3
 37519                           intcon	equ	0xFF2
 37520                           intcon2	equ	0xFF1
 37521                           intcon3	equ	0xFF0
 37522                           indf0	equ	0xFEF
 37523                           postinc0	equ	0xFEE
 37524                           plusw0	equ	0xFEB
 37525                           fsr0h	equ	0xFEA
 37526                           fsr0l	equ	0xFE9
 37527                           wreg	equ	0xFE8
 37528                           indf1	equ	0xFE7
 37529                           postinc1	equ	0xFE6
 37530                           postdec1	equ	0xFE5
 37531                           plusw1	equ	0xFE3
 37532                           fsr1h	equ	0xFE2
 37533                           fsr1l	equ	0xFE1
 37534                           indf2	equ	0xFDF
 37535                           postinc2	equ	0xFDE
 37536                           postdec2	equ	0xFDD
 37537                           plusw2	equ	0xFDB
 37538                           fsr2h	equ	0xFDA
 37539                           fsr2l	equ	0xFD9
 37540                           status	equ	0xFD8
 37541                           
 37542 ;; *************** function _CheckTxStatus *****************
 37543 ;; Defined at:
 37544 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37545 ;; Parameters:    Size  Location     Type
 37546 ;;		None
 37547 ;; Auto vars:     Size  Location     Type
 37548 ;;		None
 37549 ;; Return value:  Size  Location     Type
 37550 ;;                  1    wreg      unsigned char 
 37551 ;; Registers used:
 37552 ;;		wreg, status,2, status,0
 37553 ;; Tracked objects:
 37554 ;;		On entry : 0/0
 37555 ;;		On exit  : 0/0
 37556 ;;		Unchanged: 0/0
 37557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37562 ;;Total ram usage:        0 bytes
 37563 ;; Hardware stack levels used:    1
 37564 ;; Hardware stack levels required when called:   11
 37565 ;; This function calls:
 37566 ;;		Nothing
 37567 ;; This function is called by:
 37568 ;;		_I2c_WriteData
 37569 ;;		_I2c_ReadData
 37570 ;; This function uses a non-reentrant model
 37571 ;;
 37572                           
 37573                           	psect	text180
 37574  006D80                     __ptext180:
 37575                           	opt stack 0
 37576  006D80                     _CheckTxStatus:
 37577                           	opt stack 14
 37578                           
 37579                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 37580                           
 37581                           ;incstack = 0
 37582  006D80  4073               	rrncf	3955,w,c	;volatile
 37583  006D82  42E8               	rrncf	wreg,f,c
 37584  006D84  0B3F               	andlw	63
 37585  006D86  0B01               	andlw	1
 37586  006D88  0012               	return	
 37587  006D8A                     __end_of_CheckTxStatus:
 37588                           	opt stack 0
 37589                           tosu	equ	0xFFF
 37590                           tosh	equ	0xFFE
 37591                           tosl	equ	0xFFD
 37592                           pclath	equ	0xFFA
 37593                           tblptru	equ	0xFF8
 37594                           tblptrh	equ	0xFF7
 37595                           tblptrl	equ	0xFF6
 37596                           tablat	equ	0xFF5
 37597                           prodh	equ	0xFF4
 37598                           prodl	equ	0xFF3
 37599                           intcon	equ	0xFF2
 37600                           intcon2	equ	0xFF1
 37601                           intcon3	equ	0xFF0
 37602                           indf0	equ	0xFEF
 37603                           postinc0	equ	0xFEE
 37604                           plusw0	equ	0xFEB
 37605                           fsr0h	equ	0xFEA
 37606                           fsr0l	equ	0xFE9
 37607                           wreg	equ	0xFE8
 37608                           indf1	equ	0xFE7
 37609                           postinc1	equ	0xFE6
 37610                           postdec1	equ	0xFE5
 37611                           plusw1	equ	0xFE3
 37612                           fsr1h	equ	0xFE2
 37613                           fsr1l	equ	0xFE1
 37614                           indf2	equ	0xFDF
 37615                           postinc2	equ	0xFDE
 37616                           postdec2	equ	0xFDD
 37617                           plusw2	equ	0xFDB
 37618                           fsr2h	equ	0xFDA
 37619                           fsr2l	equ	0xFD9
 37620                           status	equ	0xFD8
 37621                           
 37622 ;; *************** function _CheckAckStatus *****************
 37623 ;; Defined at:
 37624 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 37625 ;; Parameters:    Size  Location     Type
 37626 ;;		None
 37627 ;; Auto vars:     Size  Location     Type
 37628 ;;		None
 37629 ;; Return value:  Size  Location     Type
 37630 ;;                  1    wreg      unsigned char 
 37631 ;; Registers used:
 37632 ;;		wreg, status,2, status,0
 37633 ;; Tracked objects:
 37634 ;;		On entry : 0/0
 37635 ;;		On exit  : 0/0
 37636 ;;		Unchanged: 0/0
 37637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37642 ;;Total ram usage:        0 bytes
 37643 ;; Hardware stack levels used:    1
 37644 ;; Hardware stack levels required when called:   11
 37645 ;; This function calls:
 37646 ;;		Nothing
 37647 ;; This function is called by:
 37648 ;;		_I2c_WriteData
 37649 ;;		_I2c_ReadData
 37650 ;; This function uses a non-reentrant model
 37651 ;;
 37652                           
 37653                           	psect	text181
 37654  006D8A                     __ptext181:
 37655                           	opt stack 0
 37656  006D8A                     _CheckAckStatus:
 37657                           	opt stack 14
 37658                           
 37659                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 37660                           
 37661                           ;incstack = 0
 37662  006D8A  4471               	rlncf	3953,w,c	;volatile
 37663  006D8C  46E8               	rlncf	wreg,f,c
 37664  006D8E  0B03               	andlw	3
 37665  006D90  0B01               	andlw	1
 37666  006D92  0012               	return	
 37667  006D94                     __end_of_CheckAckStatus:
 37668                           	opt stack 0
 37669                           tosu	equ	0xFFF
 37670                           tosh	equ	0xFFE
 37671                           tosl	equ	0xFFD
 37672                           pclath	equ	0xFFA
 37673                           tblptru	equ	0xFF8
 37674                           tblptrh	equ	0xFF7
 37675                           tblptrl	equ	0xFF6
 37676                           tablat	equ	0xFF5
 37677                           prodh	equ	0xFF4
 37678                           prodl	equ	0xFF3
 37679                           intcon	equ	0xFF2
 37680                           intcon2	equ	0xFF1
 37681                           intcon3	equ	0xFF0
 37682                           indf0	equ	0xFEF
 37683                           postinc0	equ	0xFEE
 37684                           plusw0	equ	0xFEB
 37685                           fsr0h	equ	0xFEA
 37686                           fsr0l	equ	0xFE9
 37687                           wreg	equ	0xFE8
 37688                           indf1	equ	0xFE7
 37689                           postinc1	equ	0xFE6
 37690                           postdec1	equ	0xFE5
 37691                           plusw1	equ	0xFE3
 37692                           fsr1h	equ	0xFE2
 37693                           fsr1l	equ	0xFE1
 37694                           indf2	equ	0xFDF
 37695                           postinc2	equ	0xFDE
 37696                           postdec2	equ	0xFDD
 37697                           plusw2	equ	0xFDB
 37698                           fsr2h	equ	0xFDA
 37699                           fsr2l	equ	0xFD9
 37700                           status	equ	0xFD8
 37701                           
 37702 ;; *************** function _LowPriorityIsr *****************
 37703 ;; Defined at:
 37704 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 37705 ;; Parameters:    Size  Location     Type
 37706 ;;		None
 37707 ;; Auto vars:     Size  Location     Type
 37708 ;;		None
 37709 ;; Return value:  Size  Location     Type
 37710 ;;                  1    wreg      void 
 37711 ;; Registers used:
 37712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37713 ;; Tracked objects:
 37714 ;;		On entry : 0/0
 37715 ;;		On exit  : 0/0
 37716 ;;		Unchanged: 0/0
 37717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37720 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37721 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37722 ;;Total ram usage:       21 bytes
 37723 ;; Hardware stack levels used:    1
 37724 ;; Hardware stack levels required when called:   10
 37725 ;; This function calls:
 37726 ;;		_Tmr_Tmr2Isr
 37727 ;; This function is called by:
 37728 ;;		Interrupt level 1
 37729 ;; This function uses a non-reentrant model
 37730 ;;
 37731                           
 37732                           	psect	intcodelo
 37733  000018                     __pintcodelo:
 37734                           	opt stack 0
 37735  000018                     _LowPriorityIsr:
 37736                           	opt stack 8
 37737                           
 37738                           ;incstack = 0
 37739  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 37740  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 37741  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 37742  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 37743  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 37744  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 37745  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 37746  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 37747  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 37748  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 37749  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 37750  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 37751  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 37752  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 37753  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 37754  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 37755  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 37756  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 37757  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 37758  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 37759  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 37760  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 37761                           
 37762                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 37763  00006E  B29E               	btfsc	3998,1,c	;volatile
 37764                           
 37765                           ;irq.c: 259: {
 37766                           ;irq.c: 261: Tmr_Tmr2Isr();
 37767  000070  ECC9  F034         	call	_Tmr_Tmr2Isr	;wreg free
 37768  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 37769  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 37770  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 37771  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 37772  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 37773  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 37774  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 37775  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 37776  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 37777  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 37778  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 37779  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 37780  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 37781  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 37782  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 37783  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 37784  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 37785  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 37786  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 37787  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 37788  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 37789  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 37790  0000CA  0010               	retfie	
 37791  0000CC                     __end_of_LowPriorityIsr:
 37792                           	opt stack 0
 37793                           tosu	equ	0xFFF
 37794                           tosh	equ	0xFFE
 37795                           tosl	equ	0xFFD
 37796                           pclatu	equ	0xFFB
 37797                           pclath	equ	0xFFA
 37798                           tblptru	equ	0xFF8
 37799                           tblptrh	equ	0xFF7
 37800                           tblptrl	equ	0xFF6
 37801                           tablat	equ	0xFF5
 37802                           prodh	equ	0xFF4
 37803                           prodl	equ	0xFF3
 37804                           intcon	equ	0xFF2
 37805                           intcon2	equ	0xFF1
 37806                           intcon3	equ	0xFF0
 37807                           indf0	equ	0xFEF
 37808                           postinc0	equ	0xFEE
 37809                           plusw0	equ	0xFEB
 37810                           fsr0h	equ	0xFEA
 37811                           fsr0l	equ	0xFE9
 37812                           wreg	equ	0xFE8
 37813                           indf1	equ	0xFE7
 37814                           postinc1	equ	0xFE6
 37815                           postdec1	equ	0xFE5
 37816                           plusw1	equ	0xFE3
 37817                           fsr1h	equ	0xFE2
 37818                           fsr1l	equ	0xFE1
 37819                           bsr	equ	0xFE0
 37820                           indf2	equ	0xFDF
 37821                           postinc2	equ	0xFDE
 37822                           postdec2	equ	0xFDD
 37823                           plusw2	equ	0xFDB
 37824                           fsr2h	equ	0xFDA
 37825                           fsr2l	equ	0xFD9
 37826                           status	equ	0xFD8
 37827                           
 37828 ;; *************** function _Tmr_Tmr2Isr *****************
 37829 ;; Defined at:
 37830 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 37831 ;; Parameters:    Size  Location     Type
 37832 ;;		None
 37833 ;; Auto vars:     Size  Location     Type
 37834 ;;		None
 37835 ;; Return value:  Size  Location     Type
 37836 ;;                  1    wreg      void 
 37837 ;; Registers used:
 37838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37839 ;; Tracked objects:
 37840 ;;		On entry : 0/0
 37841 ;;		On exit  : 0/0
 37842 ;;		Unchanged: 0/0
 37843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37848 ;;Total ram usage:        0 bytes
 37849 ;; Hardware stack levels used:    1
 37850 ;; Hardware stack levels required when called:    9
 37851 ;; This function calls:
 37852 ;;		Absolute function
 37853 ;;		_Sch_SchmIntService
 37854 ;; This function is called by:
 37855 ;;		_LowPriorityIsr
 37856 ;; This function uses a non-reentrant model
 37857 ;;
 37858                           
 37859                           	psect	text183
 37860  006992                     __ptext183:
 37861                           	opt stack 0
 37862  006992                     _Tmr_Tmr2Isr:
 37863                           	opt stack 8
 37864                           
 37865                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 37866                           
 37867                           ;incstack = 0
 37868  006992  929E               	bcf	3998,1,c	;volatile
 37869                           
 37870                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 37871  006994  0102               	movlb	2	; () banked
 37872  006996  51E5               	movf	_Tmr2IsrCallback& (0+255),w,b
 37873  006998  11E6               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 37874  00699A  B4D8               	btfsc	status,2,c
 37875  00699C  0012               	return	
 37876                           
 37877                           ; BSR set to: 2
 37878                           ;tmr_drv.c: 315: {
 37879                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 37880  00699E  D801               	call	i1u1675_28
 37881  0069A0  0012               	return	
 37882  0069A2                     i1u1675_28:
 37883  0069A2  0005               	push	
 37884  0069A4  6EFA               	movwf	pclath,c
 37885  0069A6  51E5               	movf	_Tmr2IsrCallback& (0+255),w,b
 37886  0069A8  6EFD               	movwf	tosl,c
 37887  0069AA  51E6               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 37888  0069AC  6EFE               	movwf	tosh,c
 37889  0069AE  50F8               	movf	tblptru,w,c
 37890  0069B0  6EFF               	movwf	tosu,c
 37891  0069B2  50FA               	movf	pclath,w,c
 37892  0069B4  0012               	return		;indir
 37893  0069B6                     __end_of_Tmr_Tmr2Isr:
 37894                           	opt stack 0
 37895                           tosu	equ	0xFFF
 37896                           tosh	equ	0xFFE
 37897                           tosl	equ	0xFFD
 37898                           pclatu	equ	0xFFB
 37899                           pclath	equ	0xFFA
 37900                           tblptru	equ	0xFF8
 37901                           tblptrh	equ	0xFF7
 37902                           tblptrl	equ	0xFF6
 37903                           tablat	equ	0xFF5
 37904                           prodh	equ	0xFF4
 37905                           prodl	equ	0xFF3
 37906                           intcon	equ	0xFF2
 37907                           intcon2	equ	0xFF1
 37908                           intcon3	equ	0xFF0
 37909                           indf0	equ	0xFEF
 37910                           postinc0	equ	0xFEE
 37911                           plusw0	equ	0xFEB
 37912                           fsr0h	equ	0xFEA
 37913                           fsr0l	equ	0xFE9
 37914                           wreg	equ	0xFE8
 37915                           indf1	equ	0xFE7
 37916                           postinc1	equ	0xFE6
 37917                           postdec1	equ	0xFE5
 37918                           plusw1	equ	0xFE3
 37919                           fsr1h	equ	0xFE2
 37920                           fsr1l	equ	0xFE1
 37921                           bsr	equ	0xFE0
 37922                           indf2	equ	0xFDF
 37923                           postinc2	equ	0xFDE
 37924                           postdec2	equ	0xFDD
 37925                           plusw2	equ	0xFDB
 37926                           fsr2h	equ	0xFDA
 37927                           fsr2l	equ	0xFD9
 37928                           status	equ	0xFD8
 37929                           
 37930 ;; *************** function _Sch_SchmIntService *****************
 37931 ;; Defined at:
 37932 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37933 ;; Parameters:    Size  Location     Type
 37934 ;;		None
 37935 ;; Auto vars:     Size  Location     Type
 37936 ;;		None
 37937 ;; Return value:  Size  Location     Type
 37938 ;;                  1    wreg      void 
 37939 ;; Registers used:
 37940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37941 ;; Tracked objects:
 37942 ;;		On entry : 0/0
 37943 ;;		On exit  : 0/0
 37944 ;;		Unchanged: 0/0
 37945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37950 ;;Total ram usage:        0 bytes
 37951 ;; Hardware stack levels used:    1
 37952 ;; Hardware stack levels required when called:    8
 37953 ;; This function calls:
 37954 ;;		_OsAlrm_ProcessOsAlarms
 37955 ;;		_UpdateOsCounters
 37956 ;;		_UpdateSchFlag
 37957 ;; This function is called by:
 37958 ;;		_SystemInit
 37959 ;;		_Tmr_Tmr2Isr
 37960 ;; This function uses a non-reentrant model
 37961 ;;
 37962                           
 37963                           	psect	text184
 37964  006D26                     __ptext184:
 37965                           	opt stack 0
 37966  006D26                     _Sch_SchmIntService:
 37967                           	opt stack 8
 37968                           
 37969                           ;os_sched.c: 217: UpdateSchFlag();
 37970                           
 37971                           ;incstack = 0
 37972  006D26  EC9E  F035         	call	_UpdateSchFlag	;wreg free
 37973                           
 37974                           ;os_sched.c: 219: UpdateOsCounters();
 37975  006D2A  EC7B  F036         	call	_UpdateOsCounters	;wreg free
 37976                           
 37977                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 37978  006D2E  EC20  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 37979  006D32  0012               	return		;funcret
 37980  006D34                     __end_of_Sch_SchmIntService:
 37981                           	opt stack 0
 37982                           tosu	equ	0xFFF
 37983                           tosh	equ	0xFFE
 37984                           tosl	equ	0xFFD
 37985                           pclatu	equ	0xFFB
 37986                           pclath	equ	0xFFA
 37987                           tblptru	equ	0xFF8
 37988                           tblptrh	equ	0xFF7
 37989                           tblptrl	equ	0xFF6
 37990                           tablat	equ	0xFF5
 37991                           prodh	equ	0xFF4
 37992                           prodl	equ	0xFF3
 37993                           intcon	equ	0xFF2
 37994                           intcon2	equ	0xFF1
 37995                           intcon3	equ	0xFF0
 37996                           indf0	equ	0xFEF
 37997                           postinc0	equ	0xFEE
 37998                           plusw0	equ	0xFEB
 37999                           fsr0h	equ	0xFEA
 38000                           fsr0l	equ	0xFE9
 38001                           wreg	equ	0xFE8
 38002                           indf1	equ	0xFE7
 38003                           postinc1	equ	0xFE6
 38004                           postdec1	equ	0xFE5
 38005                           plusw1	equ	0xFE3
 38006                           fsr1h	equ	0xFE2
 38007                           fsr1l	equ	0xFE1
 38008                           bsr	equ	0xFE0
 38009                           indf2	equ	0xFDF
 38010                           postinc2	equ	0xFDE
 38011                           postdec2	equ	0xFDD
 38012                           plusw2	equ	0xFDB
 38013                           fsr2h	equ	0xFDA
 38014                           fsr2l	equ	0xFD9
 38015                           status	equ	0xFD8
 38016                           
 38017 ;; *************** function _UpdateSchFlag *****************
 38018 ;; Defined at:
 38019 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 38020 ;; Parameters:    Size  Location     Type
 38021 ;;		None
 38022 ;; Auto vars:     Size  Location     Type
 38023 ;;		None
 38024 ;; Return value:  Size  Location     Type
 38025 ;;                  1    wreg      void 
 38026 ;; Registers used:
 38027 ;;		wreg, status,2, status,0
 38028 ;; Tracked objects:
 38029 ;;		On entry : 0/0
 38030 ;;		On exit  : 0/0
 38031 ;;		Unchanged: 0/0
 38032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38037 ;;Total ram usage:        0 bytes
 38038 ;; Hardware stack levels used:    1
 38039 ;; Hardware stack levels required when called:    4
 38040 ;; This function calls:
 38041 ;;		Nothing
 38042 ;; This function is called by:
 38043 ;;		_Sch_SchmIntService
 38044 ;; This function uses a non-reentrant model
 38045 ;;
 38046                           
 38047                           	psect	text185
 38048  006B3C                     __ptext185:
 38049                           	opt stack 0
 38050  006B3C                     _UpdateSchFlag:
 38051                           	opt stack 11
 38052                           
 38053                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 38054                           ;os_sched.c: 138: InterruptCounter++;
 38055                           
 38056                           ;incstack = 0
 38057  006B3C  0102               	movlb	2	; () banked
 38058  006B3E  4BD7               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 38059  006B40  2BD8               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 38060                           
 38061                           ; BSR set to: 2
 38062                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 38063  006B42  51D7               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 38064  006B44  11D8               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 38065  006B46  B4D8               	btfsc	status,2,c
 38066  006B48  0012               	return	
 38067                           
 38068                           ; BSR set to: 2
 38069                           ;os_sched.c: 141: {
 38070                           ;os_sched.c: 143: InterruptCounter = 0;
 38071  006B4A  0E00               	movlw	0
 38072  006B4C  6FD8               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 38073  006B4E  0E00               	movlw	0
 38074  006B50  6FD7               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 38075                           
 38076                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 38077  006B52  0E00               	movlw	0
 38078  006B54  6FF2               	movwf	_MainSystemTimebaseFlag& (0+255),b
 38079  006B56  0012               	return	
 38080  006B58                     __end_of_UpdateSchFlag:
 38081                           	opt stack 0
 38082                           tosu	equ	0xFFF
 38083                           tosh	equ	0xFFE
 38084                           tosl	equ	0xFFD
 38085                           pclatu	equ	0xFFB
 38086                           pclath	equ	0xFFA
 38087                           tblptru	equ	0xFF8
 38088                           tblptrh	equ	0xFF7
 38089                           tblptrl	equ	0xFF6
 38090                           tablat	equ	0xFF5
 38091                           prodh	equ	0xFF4
 38092                           prodl	equ	0xFF3
 38093                           intcon	equ	0xFF2
 38094                           intcon2	equ	0xFF1
 38095                           intcon3	equ	0xFF0
 38096                           indf0	equ	0xFEF
 38097                           postinc0	equ	0xFEE
 38098                           plusw0	equ	0xFEB
 38099                           fsr0h	equ	0xFEA
 38100                           fsr0l	equ	0xFE9
 38101                           wreg	equ	0xFE8
 38102                           indf1	equ	0xFE7
 38103                           postinc1	equ	0xFE6
 38104                           postdec1	equ	0xFE5
 38105                           plusw1	equ	0xFE3
 38106                           fsr1h	equ	0xFE2
 38107                           fsr1l	equ	0xFE1
 38108                           bsr	equ	0xFE0
 38109                           indf2	equ	0xFDF
 38110                           postinc2	equ	0xFDE
 38111                           postdec2	equ	0xFDD
 38112                           plusw2	equ	0xFDB
 38113                           fsr2h	equ	0xFDA
 38114                           fsr2l	equ	0xFD9
 38115                           status	equ	0xFD8
 38116                           
 38117 ;; *************** function _UpdateOsCounters *****************
 38118 ;; Defined at:
 38119 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 38120 ;; Parameters:    Size  Location     Type
 38121 ;;		None
 38122 ;; Auto vars:     Size  Location     Type
 38123 ;;		None
 38124 ;; Return value:  Size  Location     Type
 38125 ;;                  1    wreg      void 
 38126 ;; Registers used:
 38127 ;;		wreg, status,2, status,0
 38128 ;; Tracked objects:
 38129 ;;		On entry : 0/0
 38130 ;;		On exit  : 0/0
 38131 ;;		Unchanged: 0/0
 38132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38137 ;;Total ram usage:        0 bytes
 38138 ;; Hardware stack levels used:    1
 38139 ;; Hardware stack levels required when called:    4
 38140 ;; This function calls:
 38141 ;;		Nothing
 38142 ;; This function is called by:
 38143 ;;		_Sch_SchmIntService
 38144 ;; This function uses a non-reentrant model
 38145 ;;
 38146                           
 38147                           	psect	text186
 38148  006CF6                     __ptext186:
 38149                           	opt stack 0
 38150  006CF6                     _UpdateOsCounters:
 38151                           	opt stack 11
 38152                           
 38153                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 38154                           
 38155                           ; BSR set to: 2
 38156                           ;incstack = 0
 38157  006CF6  0E01               	movlw	1
 38158  006CF8  0103               	movlb	3	; () banked
 38159  006CFA  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 38160  006CFC  0E00               	movlw	0
 38161  006CFE  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 38162  006D00  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 38163  006D02  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 38164                           
 38165                           ; BSR set to: 3
 38166  006D04  0012               	return		;funcret
 38167  006D06                     __end_of_UpdateOsCounters:
 38168                           	opt stack 0
 38169                           tosu	equ	0xFFF
 38170                           tosh	equ	0xFFE
 38171                           tosl	equ	0xFFD
 38172                           pclatu	equ	0xFFB
 38173                           pclath	equ	0xFFA
 38174                           tblptru	equ	0xFF8
 38175                           tblptrh	equ	0xFF7
 38176                           tblptrl	equ	0xFF6
 38177                           tablat	equ	0xFF5
 38178                           prodh	equ	0xFF4
 38179                           prodl	equ	0xFF3
 38180                           intcon	equ	0xFF2
 38181                           intcon2	equ	0xFF1
 38182                           intcon3	equ	0xFF0
 38183                           indf0	equ	0xFEF
 38184                           postinc0	equ	0xFEE
 38185                           plusw0	equ	0xFEB
 38186                           fsr0h	equ	0xFEA
 38187                           fsr0l	equ	0xFE9
 38188                           wreg	equ	0xFE8
 38189                           indf1	equ	0xFE7
 38190                           postinc1	equ	0xFE6
 38191                           postdec1	equ	0xFE5
 38192                           plusw1	equ	0xFE3
 38193                           fsr1h	equ	0xFE2
 38194                           fsr1l	equ	0xFE1
 38195                           bsr	equ	0xFE0
 38196                           indf2	equ	0xFDF
 38197                           postinc2	equ	0xFDE
 38198                           postdec2	equ	0xFDD
 38199                           plusw2	equ	0xFDB
 38200                           fsr2h	equ	0xFDA
 38201                           fsr2l	equ	0xFD9
 38202                           status	equ	0xFD8
 38203                           
 38204 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 38205 ;; Defined at:
 38206 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 38207 ;; Parameters:    Size  Location     Type
 38208 ;;		None
 38209 ;; Auto vars:     Size  Location     Type
 38210 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 38211 ;; Return value:  Size  Location     Type
 38212 ;;                  1    wreg      void 
 38213 ;; Registers used:
 38214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38215 ;; Tracked objects:
 38216 ;;		On entry : 0/0
 38217 ;;		On exit  : 0/0
 38218 ;;		Unchanged: 0/0
 38219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38222 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38223 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38224 ;;Total ram usage:       10 bytes
 38225 ;; Hardware stack levels used:    1
 38226 ;; Hardware stack levels required when called:    7
 38227 ;; This function calls:
 38228 ;;		_I2cDummyTx
 38229 ;;		_OsAlrm_ClearOsAlarm
 38230 ;;		i1___wmul
 38231 ;; This function is called by:
 38232 ;;		_Sch_SchmIntService
 38233 ;; This function uses a non-reentrant model
 38234 ;;
 38235                           
 38236                           	psect	text187
 38237  002440                     __ptext187:
 38238                           	opt stack 0
 38239  002440                     _OsAlrm_ProcessOsAlarms:
 38240                           	opt stack 8
 38241                           
 38242                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 38243                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 38244                           
 38245                           ; BSR set to: 3
 38246                           ;incstack = 0
 38247  002440  0E00               	movlw	0
 38248  002442  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 38249  002444  0E00               	movlw	0
 38250  002446  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 38251  002448  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 38252  00244A  E105               	bnz	i1u1650_20
 38253  00244C  0E14               	movlw	20
 38254  00244E  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 38255  002450  B0D8               	btfsc	status,0,c
 38256  002452  0012               	return	
 38257  002454  D001               	goto	i1l742
 38258  002456                     i1u1650_20:
 38259  002456  0012               	return	
 38260  002458                     i1l742:
 38261                           
 38262                           ;os_alarms.c: 121: {
 38263                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 38264  002458  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38265  00245C  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38266  002460  0E00               	movlw	0
 38267  002462  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38268  002464  0E0B               	movlw	11
 38269  002466  6E1B               	movwf	i1___wmul@multiplicand,c
 38270  002468  EC80  F034         	call	i1___wmul	;wreg free
 38271  00246C  0E00               	movlw	low _OsAlarms
 38272  00246E  2419               	addwf	?i1___wmul,w,c
 38273  002470  6ED9               	movwf	fsr2l,c
 38274  002472  0E06               	movlw	high _OsAlarms
 38275  002474  201A               	addwfc	?i1___wmul+1,w,c
 38276  002476  6EDA               	movwf	fsr2h,c
 38277  002478  04DE               	decf	postinc2,w,c
 38278  00247A  A4D8               	btfss	status,2,c
 38279  00247C  D086               	goto	i1u1654_29
 38280                           
 38281                           ;os_alarms.c: 124: {
 38282                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 38283  00247E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38284  002482  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38285  002486  0E00               	movlw	0
 38286  002488  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38287  00248A  0E0B               	movlw	11
 38288  00248C  6E1B               	movwf	i1___wmul@multiplicand,c
 38289  00248E  EC80  F034         	call	i1___wmul	;wreg free
 38290  002492  0E01               	movlw	1
 38291  002494  2619               	addwf	?i1___wmul,f,c
 38292  002496  0E00               	movlw	0
 38293  002498  221A               	addwfc	?i1___wmul+1,f,c
 38294  00249A  0E00               	movlw	low _OsAlarms
 38295  00249C  2419               	addwf	?i1___wmul,w,c
 38296  00249E  6ED9               	movwf	fsr2l,c
 38297  0024A0  0E06               	movlw	high _OsAlarms
 38298  0024A2  201A               	addwfc	?i1___wmul+1,w,c
 38299  0024A4  6EDA               	movwf	fsr2h,c
 38300  0024A6  2ADE               	incf	postinc2,f,c
 38301  0024A8  0E00               	movlw	0
 38302  0024AA  22DE               	addwfc	postinc2,f,c
 38303  0024AC  22DE               	addwfc	postinc2,f,c
 38304  0024AE  22DE               	addwfc	postinc2,f,c
 38305                           
 38306                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 38307  0024B0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38308  0024B4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38309  0024B8  0E00               	movlw	0
 38310  0024BA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38311  0024BC  0E0B               	movlw	11
 38312  0024BE  6E1B               	movwf	i1___wmul@multiplicand,c
 38313  0024C0  EC80  F034         	call	i1___wmul	;wreg free
 38314  0024C4  0E05               	movlw	5
 38315  0024C6  2619               	addwf	?i1___wmul,f,c
 38316  0024C8  0E00               	movlw	0
 38317  0024CA  221A               	addwfc	?i1___wmul+1,f,c
 38318  0024CC  0E00               	movlw	low _OsAlarms
 38319  0024CE  2419               	addwf	?i1___wmul,w,c
 38320  0024D0  6ED9               	movwf	fsr2l,c
 38321  0024D2  0E06               	movlw	high _OsAlarms
 38322  0024D4  201A               	addwfc	?i1___wmul+1,w,c
 38323  0024D6  6EDA               	movwf	fsr2h,c
 38324  0024D8  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38325  0024DC  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38326  0024E0  0E00               	movlw	0
 38327  0024E2  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38328  0024E4  0E0B               	movlw	11
 38329  0024E6  6E1B               	movwf	i1___wmul@multiplicand,c
 38330  0024E8  EC80  F034         	call	i1___wmul	;wreg free
 38331  0024EC  0E01               	movlw	1
 38332  0024EE  2619               	addwf	?i1___wmul,f,c
 38333  0024F0  0E00               	movlw	0
 38334  0024F2  221A               	addwfc	?i1___wmul+1,f,c
 38335  0024F4  0E00               	movlw	low _OsAlarms
 38336  0024F6  2419               	addwf	?i1___wmul,w,c
 38337  0024F8  6EE1               	movwf	fsr1l,c
 38338  0024FA  0E06               	movlw	high _OsAlarms
 38339  0024FC  201A               	addwfc	?i1___wmul+1,w,c
 38340  0024FE  6EE2               	movwf	fsr1h,c
 38341  002500  50DE               	movf	postinc2,w,c
 38342  002502  5CE6               	subwf	postinc1,w,c
 38343  002504  50DE               	movf	postinc2,w,c
 38344  002506  58E6               	subwfb	postinc1,w,c
 38345  002508  50DE               	movf	postinc2,w,c
 38346  00250A  58E6               	subwfb	postinc1,w,c
 38347  00250C  50DE               	movf	postinc2,w,c
 38348  00250E  58E6               	subwfb	postinc1,w,c
 38349  002510  A0D8               	btfss	status,0,c
 38350  002512  D03B               	goto	i1u1654_29
 38351                           
 38352                           ;os_alarms.c: 129: {
 38353                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 38354  002514  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 38355  002516  EC05  F02E         	call	_OsAlrm_ClearOsAlarm
 38356                           
 38357                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 38358  00251A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38359  00251E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38360  002522  0E00               	movlw	0
 38361  002524  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38362  002526  0E0B               	movlw	11
 38363  002528  6E1B               	movwf	i1___wmul@multiplicand,c
 38364  00252A  EC80  F034         	call	i1___wmul	;wreg free
 38365  00252E  0E09               	movlw	9
 38366  002530  2619               	addwf	?i1___wmul,f,c
 38367  002532  0E00               	movlw	0
 38368  002534  221A               	addwfc	?i1___wmul+1,f,c
 38369  002536  0E00               	movlw	low _OsAlarms
 38370  002538  2419               	addwf	?i1___wmul,w,c
 38371  00253A  6ED9               	movwf	fsr2l,c
 38372  00253C  0E06               	movlw	high _OsAlarms
 38373  00253E  201A               	addwfc	?i1___wmul+1,w,c
 38374  002540  6EDA               	movwf	fsr2h,c
 38375  002542  50DE               	movf	postinc2,w,c
 38376  002544  10DE               	iorwf	postinc2,w,c
 38377  002546  B4D8               	btfsc	status,2,c
 38378  002548  D020               	goto	i1u1654_29
 38379                           
 38380                           ;os_alarms.c: 134: {
 38381                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 38382  00254A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 38383  00254E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 38384  002552  0E00               	movlw	0
 38385  002554  6E1C               	movwf	i1___wmul@multiplicand+1,c
 38386  002556  0E0B               	movlw	11
 38387  002558  6E1B               	movwf	i1___wmul@multiplicand,c
 38388  00255A  EC80  F034         	call	i1___wmul	;wreg free
 38389  00255E  0E09               	movlw	9
 38390  002560  2619               	addwf	?i1___wmul,f,c
 38391  002562  0E00               	movlw	0
 38392  002564  221A               	addwfc	?i1___wmul+1,f,c
 38393  002566  0E00               	movlw	low _OsAlarms
 38394  002568  2419               	addwf	?i1___wmul,w,c
 38395  00256A  6ED9               	movwf	fsr2l,c
 38396  00256C  0E06               	movlw	high _OsAlarms
 38397  00256E  201A               	addwfc	?i1___wmul+1,w,c
 38398  002570  6EDA               	movwf	fsr2h,c
 38399  002572  D801               	call	i1u1654_28
 38400  002574  D00A               	goto	i1u1654_29
 38401  002576                     i1u1654_28:
 38402  002576  0005               	push	
 38403  002578  6EFA               	movwf	pclath,c
 38404  00257A  50DE               	movf	postinc2,w,c
 38405  00257C  6EFD               	movwf	tosl,c
 38406  00257E  50DE               	movf	postinc2,w,c
 38407  002580  6EFE               	movwf	tosh,c
 38408  002582  50F8               	movf	tblptru,w,c
 38409  002584  6EFF               	movwf	tosu,c
 38410  002586  50FA               	movf	pclath,w,c
 38411  002588  0012               	return		;indir
 38412  00258A                     i1u1654_29:
 38413  00258A  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 38414  00258C  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 38415  00258E  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 38416  002590  E101               	bnz	i1l747
 38417  002592  D75C               	goto	L100
 38418  002594                     i1l747:
 38419  002594  0012               	return		;funcret
 38420  002596                     __end_of_OsAlrm_ProcessOsAlarms:
 38421                           	opt stack 0
 38422                           tosu	equ	0xFFF
 38423                           tosh	equ	0xFFE
 38424                           tosl	equ	0xFFD
 38425                           pclatu	equ	0xFFB
 38426                           pclath	equ	0xFFA
 38427                           tblptru	equ	0xFF8
 38428                           tblptrh	equ	0xFF7
 38429                           tblptrl	equ	0xFF6
 38430                           tablat	equ	0xFF5
 38431                           prodh	equ	0xFF4
 38432                           prodl	equ	0xFF3
 38433                           intcon	equ	0xFF2
 38434                           intcon2	equ	0xFF1
 38435                           intcon3	equ	0xFF0
 38436                           indf0	equ	0xFEF
 38437                           postinc0	equ	0xFEE
 38438                           plusw0	equ	0xFEB
 38439                           fsr0h	equ	0xFEA
 38440                           fsr0l	equ	0xFE9
 38441                           wreg	equ	0xFE8
 38442                           indf1	equ	0xFE7
 38443                           postinc1	equ	0xFE6
 38444                           postdec1	equ	0xFE5
 38445                           plusw1	equ	0xFE3
 38446                           fsr1h	equ	0xFE2
 38447                           fsr1l	equ	0xFE1
 38448                           bsr	equ	0xFE0
 38449                           indf2	equ	0xFDF
 38450                           postinc2	equ	0xFDE
 38451                           postdec2	equ	0xFDD
 38452                           plusw2	equ	0xFDB
 38453                           fsr2h	equ	0xFDA
 38454                           fsr2l	equ	0xFD9
 38455                           status	equ	0xFD8
 38456                           
 38457 ;; *************** function i1___wmul *****************
 38458 ;; Defined at:
 38459 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 38460 ;; Parameters:    Size  Location     Type
 38461 ;;  multiplier      2   24[COMRAM] unsigned int 
 38462 ;;  multiplicand    2   26[COMRAM] unsigned int 
 38463 ;; Auto vars:     Size  Location     Type
 38464 ;;  __wmul          2   28[COMRAM] unsigned int 
 38465 ;; Return value:  Size  Location     Type
 38466 ;;                  2   24[COMRAM] unsigned int 
 38467 ;; Registers used:
 38468 ;;		wreg, status,2, status,0, prodl, prodh
 38469 ;; Tracked objects:
 38470 ;;		On entry : 0/0
 38471 ;;		On exit  : 0/0
 38472 ;;		Unchanged: 0/0
 38473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38477 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38478 ;;Total ram usage:        6 bytes
 38479 ;; Hardware stack levels used:    1
 38480 ;; Hardware stack levels required when called:    4
 38481 ;; This function calls:
 38482 ;;		Nothing
 38483 ;; This function is called by:
 38484 ;;		_OsAlrm_ProcessOsAlarms
 38485 ;; This function uses a non-reentrant model
 38486 ;;
 38487                           
 38488                           	psect	text188
 38489  006900                     __ptext188:
 38490                           	opt stack 0
 38491  006900                     i1___wmul:
 38492                           	opt stack 10
 38493                           
 38494                           ;incstack = 0
 38495  006900  5019               	movf	i1___wmul@multiplier,w,c
 38496  006902  021B               	mulwf	i1___wmul@multiplicand,c
 38497  006904  CFF3 F01D          	movff	prodl,i1___wmul@product
 38498  006908  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 38499  00690C  5019               	movf	i1___wmul@multiplier,w,c
 38500  00690E  021C               	mulwf	i1___wmul@multiplicand+1,c
 38501  006910  50F3               	movf	prodl,w,c
 38502  006912  261E               	addwf	i1___wmul@product+1,f,c
 38503  006914  501A               	movf	i1___wmul@multiplier+1,w,c
 38504  006916  021B               	mulwf	i1___wmul@multiplicand,c
 38505  006918  50F3               	movf	prodl,w,c
 38506  00691A  261E               	addwf	i1___wmul@product+1,f,c
 38507  00691C  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 38508  006920  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 38509  006924  0012               	return	
 38510  006926                     __end_ofi1___wmul:
 38511                           	opt stack 0
 38512                           tosu	equ	0xFFF
 38513                           tosh	equ	0xFFE
 38514                           tosl	equ	0xFFD
 38515                           pclatu	equ	0xFFB
 38516                           pclath	equ	0xFFA
 38517                           tblptru	equ	0xFF8
 38518                           tblptrh	equ	0xFF7
 38519                           tblptrl	equ	0xFF6
 38520                           tablat	equ	0xFF5
 38521                           prodh	equ	0xFF4
 38522                           prodl	equ	0xFF3
 38523                           intcon	equ	0xFF2
 38524                           intcon2	equ	0xFF1
 38525                           intcon3	equ	0xFF0
 38526                           indf0	equ	0xFEF
 38527                           postinc0	equ	0xFEE
 38528                           plusw0	equ	0xFEB
 38529                           fsr0h	equ	0xFEA
 38530                           fsr0l	equ	0xFE9
 38531                           wreg	equ	0xFE8
 38532                           indf1	equ	0xFE7
 38533                           postinc1	equ	0xFE6
 38534                           postdec1	equ	0xFE5
 38535                           plusw1	equ	0xFE3
 38536                           fsr1h	equ	0xFE2
 38537                           fsr1l	equ	0xFE1
 38538                           bsr	equ	0xFE0
 38539                           indf2	equ	0xFDF
 38540                           postinc2	equ	0xFDE
 38541                           postdec2	equ	0xFDD
 38542                           plusw2	equ	0xFDB
 38543                           fsr2h	equ	0xFDA
 38544                           fsr2l	equ	0xFD9
 38545                           status	equ	0xFD8
 38546                           
 38547 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 38548 ;; Defined at:
 38549 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 38550 ;; Parameters:    Size  Location     Type
 38551 ;;  OsAlarmId       1    wreg     unsigned char 
 38552 ;; Auto vars:     Size  Location     Type
 38553 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 38554 ;; Return value:  Size  Location     Type
 38555 ;;                  1    wreg      void 
 38556 ;; Registers used:
 38557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38558 ;; Tracked objects:
 38559 ;;		On entry : 0/0
 38560 ;;		On exit  : 0/0
 38561 ;;		Unchanged: 0/0
 38562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38567 ;;Total ram usage:        1 bytes
 38568 ;; Hardware stack levels used:    1
 38569 ;; Hardware stack levels required when called:    4
 38570 ;; This function calls:
 38571 ;;		Nothing
 38572 ;; This function is called by:
 38573 ;;		_OsAlrm_ProcessOsAlarms
 38574 ;; This function uses a non-reentrant model
 38575 ;;
 38576                           
 38577                           	psect	text189
 38578  005C0A                     __ptext189:
 38579                           	opt stack 0
 38580  005C0A                     _OsAlrm_ClearOsAlarm:
 38581                           	opt stack 10
 38582                           
 38583                           ;incstack = 0
 38584                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 38585  005C0A  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 38586                           
 38587                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 38588  005C0C  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38589  005C0E  0D0B               	mullw	11
 38590  005C10  0E00               	movlw	low _OsAlarms
 38591  005C12  24F3               	addwf	prodl,w,c
 38592  005C14  6ED9               	movwf	fsr2l,c
 38593  005C16  0E06               	movlw	high _OsAlarms
 38594  005C18  20F4               	addwfc	prodh,w,c
 38595  005C1A  6EDA               	movwf	fsr2h,c
 38596  005C1C  0E00               	movlw	0
 38597  005C1E  6EDF               	movwf	indf2,c
 38598                           
 38599                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 38600  005C20  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38601  005C22  0D0B               	mullw	11
 38602  005C24  0E01               	movlw	1
 38603  005C26  26F3               	addwf	prodl,f,c
 38604  005C28  0E00               	movlw	0
 38605  005C2A  22F4               	addwfc	prodh,f,c
 38606  005C2C  0E00               	movlw	low _OsAlarms
 38607  005C2E  24F3               	addwf	prodl,w,c
 38608  005C30  6ED9               	movwf	fsr2l,c
 38609  005C32  0E06               	movlw	high _OsAlarms
 38610  005C34  20F4               	addwfc	prodh,w,c
 38611  005C36  6EDA               	movwf	fsr2h,c
 38612  005C38  6ADE               	clrf	postinc2,c
 38613  005C3A  6ADE               	clrf	postinc2,c
 38614  005C3C  6ADE               	clrf	postinc2,c
 38615  005C3E  6ADD               	clrf	postdec2,c
 38616                           
 38617                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 38618  005C40  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 38619  005C42  0D0B               	mullw	11
 38620  005C44  0E05               	movlw	5
 38621  005C46  26F3               	addwf	prodl,f,c
 38622  005C48  0E00               	movlw	0
 38623  005C4A  22F4               	addwfc	prodh,f,c
 38624  005C4C  0E00               	movlw	low _OsAlarms
 38625  005C4E  24F3               	addwf	prodl,w,c
 38626  005C50  6ED9               	movwf	fsr2l,c
 38627  005C52  0E06               	movlw	high _OsAlarms
 38628  005C54  20F4               	addwfc	prodh,w,c
 38629  005C56  6EDA               	movwf	fsr2h,c
 38630  005C58  6ADE               	clrf	postinc2,c
 38631  005C5A  6ADE               	clrf	postinc2,c
 38632  005C5C  6ADE               	clrf	postinc2,c
 38633  005C5E  6ADD               	clrf	postdec2,c
 38634  005C60  0012               	return		;funcret
 38635  005C62                     __end_of_OsAlrm_ClearOsAlarm:
 38636                           	opt stack 0
 38637                           tosu	equ	0xFFF
 38638                           tosh	equ	0xFFE
 38639                           tosl	equ	0xFFD
 38640                           pclatu	equ	0xFFB
 38641                           pclath	equ	0xFFA
 38642                           tblptru	equ	0xFF8
 38643                           tblptrh	equ	0xFF7
 38644                           tblptrl	equ	0xFF6
 38645                           tablat	equ	0xFF5
 38646                           prodh	equ	0xFF4
 38647                           prodl	equ	0xFF3
 38648                           intcon	equ	0xFF2
 38649                           intcon2	equ	0xFF1
 38650                           intcon3	equ	0xFF0
 38651                           indf0	equ	0xFEF
 38652                           postinc0	equ	0xFEE
 38653                           plusw0	equ	0xFEB
 38654                           fsr0h	equ	0xFEA
 38655                           fsr0l	equ	0xFE9
 38656                           wreg	equ	0xFE8
 38657                           indf1	equ	0xFE7
 38658                           postinc1	equ	0xFE6
 38659                           postdec1	equ	0xFE5
 38660                           plusw1	equ	0xFE3
 38661                           fsr1h	equ	0xFE2
 38662                           fsr1l	equ	0xFE1
 38663                           bsr	equ	0xFE0
 38664                           indf2	equ	0xFDF
 38665                           postinc2	equ	0xFDE
 38666                           postdec2	equ	0xFDD
 38667                           plusw2	equ	0xFDB
 38668                           fsr2h	equ	0xFDA
 38669                           fsr2l	equ	0xFD9
 38670                           status	equ	0xFD8
 38671                           
 38672 ;; *************** function _I2cDummyTx *****************
 38673 ;; Defined at:
 38674 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 38675 ;; Parameters:    Size  Location     Type
 38676 ;;		None
 38677 ;; Auto vars:     Size  Location     Type
 38678 ;;		None
 38679 ;; Return value:  Size  Location     Type
 38680 ;;                  1    wreg      void 
 38681 ;; Registers used:
 38682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38683 ;; Tracked objects:
 38684 ;;		On entry : 0/0
 38685 ;;		On exit  : 0/0
 38686 ;;		Unchanged: 0/0
 38687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38692 ;;Total ram usage:        0 bytes
 38693 ;; Hardware stack levels used:    1
 38694 ;; Hardware stack levels required when called:    6
 38695 ;; This function calls:
 38696 ;;		i1_I2cSlv_SendI2cMsg
 38697 ;; This function is called by:
 38698 ;;		_I2cSlv_MainTask
 38699 ;;		_OsAlrm_ProcessOsAlarms
 38700 ;; This function uses a non-reentrant model
 38701 ;;
 38702                           
 38703                           	psect	text190
 38704  006B58                     __ptext190:
 38705                           	opt stack 0
 38706  006B58                     _I2cDummyTx:
 38707                           	opt stack 8
 38708                           
 38709                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 38710                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 38711                           
 38712                           ;incstack = 0
 38713  006B58  0EFB               	movlw	low I2cDummyTx@DummyBuffer
 38714  006B5A  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 38715  006B5C  0E01               	movlw	high I2cDummyTx@DummyBuffer
 38716  006B5E  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 38717  006B60  0E00               	movlw	0
 38718  006B62  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 38719  006B64  0E01               	movlw	1
 38720  006B66  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 38721  006B68  ECE4  F032         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 38722                           
 38723                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 38724  006B6C  0E01               	movlw	1
 38725  006B6E  0101               	movlb	1	; () banked
 38726  006B70  6FE4               	movwf	_I2cBusStatus& (0+255),b
 38727                           
 38728                           ; BSR set to: 1
 38729  006B72  0012               	return		;funcret
 38730  006B74                     __end_of_I2cDummyTx:
 38731                           	opt stack 0
 38732                           tosu	equ	0xFFF
 38733                           tosh	equ	0xFFE
 38734                           tosl	equ	0xFFD
 38735                           pclatu	equ	0xFFB
 38736                           pclath	equ	0xFFA
 38737                           tblptru	equ	0xFF8
 38738                           tblptrh	equ	0xFF7
 38739                           tblptrl	equ	0xFF6
 38740                           tablat	equ	0xFF5
 38741                           prodh	equ	0xFF4
 38742                           prodl	equ	0xFF3
 38743                           intcon	equ	0xFF2
 38744                           intcon2	equ	0xFF1
 38745                           intcon3	equ	0xFF0
 38746                           indf0	equ	0xFEF
 38747                           postinc0	equ	0xFEE
 38748                           plusw0	equ	0xFEB
 38749                           fsr0h	equ	0xFEA
 38750                           fsr0l	equ	0xFE9
 38751                           wreg	equ	0xFE8
 38752                           indf1	equ	0xFE7
 38753                           postinc1	equ	0xFE6
 38754                           postdec1	equ	0xFE5
 38755                           plusw1	equ	0xFE3
 38756                           fsr1h	equ	0xFE2
 38757                           fsr1l	equ	0xFE1
 38758                           bsr	equ	0xFE0
 38759                           indf2	equ	0xFDF
 38760                           postinc2	equ	0xFDE
 38761                           postdec2	equ	0xFDD
 38762                           plusw2	equ	0xFDB
 38763                           fsr2h	equ	0xFDA
 38764                           fsr2l	equ	0xFD9
 38765                           status	equ	0xFD8
 38766                           
 38767 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 38768 ;; Defined at:
 38769 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 38770 ;; Parameters:    Size  Location     Type
 38771 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 38772 ;;		 -> relayBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 38773 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 38774 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 38775 ;;  DataLenght      1   30[COMRAM] unsigned char 
 38776 ;; Auto vars:     Size  Location     Type
 38777 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 38778 ;; Return value:  Size  Location     Type
 38779 ;;                  1    wreg      unsigned char 
 38780 ;; Registers used:
 38781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38782 ;; Tracked objects:
 38783 ;;		On entry : 0/0
 38784 ;;		On exit  : 0/0
 38785 ;;		Unchanged: 0/0
 38786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38790 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38791 ;;Total ram usage:        5 bytes
 38792 ;; Hardware stack levels used:    1
 38793 ;; Hardware stack levels required when called:    5
 38794 ;; This function calls:
 38795 ;;		i1_GenerateEvt
 38796 ;; This function is called by:
 38797 ;;		_I2cDummyTx
 38798 ;; This function uses a non-reentrant model
 38799 ;;
 38800                           
 38801                           	psect	text191
 38802  0065C8                     __ptext191:
 38803                           	opt stack 0
 38804  0065C8                     i1_I2cSlv_SendI2cMsg:
 38805                           	opt stack 8
 38806                           
 38807                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 38808                           
 38809                           ; BSR set to: 1
 38810                           ;incstack = 0
 38811  0065C8  0E00               	movlw	0
 38812  0065CA  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38813                           
 38814                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 38815  0065CC  0100               	movlb	0	; () banked
 38816  0065CE  05CF               	decf	_I2cComSts& (0+255),w,b
 38817  0065D0  B4D8               	btfsc	status,2,c
 38818  0065D2  D014               	goto	i1l1412
 38819                           
 38820                           ; BSR set to: 0
 38821                           ;i2c_slv.c: 257: {
 38822                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 38823  0065D4  C01E  F3A1         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 38824                           
 38825                           ; BSR set to: 0
 38826                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 38827  0065D8  0E00               	movlw	0
 38828  0065DA  0103               	movlb	3	; () banked
 38829  0065DC  6FA2               	movwf	(_I2cTxPacket+1)& (0+255),b
 38830                           
 38831                           ; BSR set to: 3
 38832                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 38833  0065DE  C01F  F3A5         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 38834                           
 38835                           ; BSR set to: 3
 38836                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 38837  0065E2  C01C  F3A3         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 38838  0065E6  C01D  F3A4         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 38839                           
 38840                           ; BSR set to: 3
 38841                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 38842  0065EA  0ED7               	movlw	low _I2cWriteDataEvt
 38843  0065EC  6E19               	movwf	i1GenerateEvt@Event,c
 38844  0065EE  0E00               	movlw	high _I2cWriteDataEvt
 38845  0065F0  6E1A               	movwf	i1GenerateEvt@Event+1,c
 38846  0065F2  EC28  F036         	call	i1_GenerateEvt	;wreg free
 38847                           
 38848                           ;i2c_slv.c: 267: TxSts = 1u;
 38849  0065F6  0E01               	movlw	1
 38850  0065F8  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38851                           
 38852                           ;i2c_slv.c: 268: }
 38853  0065FA  0012               	return	
 38854  0065FC                     i1l1412:
 38855                           
 38856                           ;i2c_slv.c: 269: else
 38857                           ;i2c_slv.c: 270: {
 38858                           ;i2c_slv.c: 272: TxSts = 0u;
 38859  0065FC  0E00               	movlw	0
 38860  0065FE  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 38861  006600  0012               	return	
 38862  006602                     __end_ofi1_I2cSlv_SendI2cMsg:
 38863                           	opt stack 0
 38864                           tosu	equ	0xFFF
 38865                           tosh	equ	0xFFE
 38866                           tosl	equ	0xFFD
 38867                           pclatu	equ	0xFFB
 38868                           pclath	equ	0xFFA
 38869                           tblptru	equ	0xFF8
 38870                           tblptrh	equ	0xFF7
 38871                           tblptrl	equ	0xFF6
 38872                           tablat	equ	0xFF5
 38873                           prodh	equ	0xFF4
 38874                           prodl	equ	0xFF3
 38875                           intcon	equ	0xFF2
 38876                           intcon2	equ	0xFF1
 38877                           intcon3	equ	0xFF0
 38878                           indf0	equ	0xFEF
 38879                           postinc0	equ	0xFEE
 38880                           plusw0	equ	0xFEB
 38881                           fsr0h	equ	0xFEA
 38882                           fsr0l	equ	0xFE9
 38883                           wreg	equ	0xFE8
 38884                           indf1	equ	0xFE7
 38885                           postinc1	equ	0xFE6
 38886                           postdec1	equ	0xFE5
 38887                           plusw1	equ	0xFE3
 38888                           fsr1h	equ	0xFE2
 38889                           fsr1l	equ	0xFE1
 38890                           bsr	equ	0xFE0
 38891                           indf2	equ	0xFDF
 38892                           postinc2	equ	0xFDE
 38893                           postdec2	equ	0xFDD
 38894                           plusw2	equ	0xFDB
 38895                           fsr2h	equ	0xFDA
 38896                           fsr2l	equ	0xFD9
 38897                           status	equ	0xFD8
 38898                           
 38899 ;; *************** function i1_GenerateEvt *****************
 38900 ;; Defined at:
 38901 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 38902 ;; Parameters:    Size  Location     Type
 38903 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 38904 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 38905 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 38906 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 38907 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 38908 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 38909 ;; Auto vars:     Size  Location     Type
 38910 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 38911 ;; Return value:  Size  Location     Type
 38912 ;;                  1    wreg      enum E7699
 38913 ;; Registers used:
 38914 ;;		wreg, fsr2l, fsr2h, status,2
 38915 ;; Tracked objects:
 38916 ;;		On entry : 0/0
 38917 ;;		On exit  : 0/0
 38918 ;;		Unchanged: 0/0
 38919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38923 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38924 ;;Total ram usage:        3 bytes
 38925 ;; Hardware stack levels used:    1
 38926 ;; Hardware stack levels required when called:    4
 38927 ;; This function calls:
 38928 ;;		Nothing
 38929 ;; This function is called by:
 38930 ;;		i1_I2cSlv_SendI2cMsg
 38931 ;; This function uses a non-reentrant model
 38932 ;;
 38933                           
 38934                           	psect	text192
 38935  006C50                     __ptext192:
 38936                           	opt stack 0
 38937  006C50                     i1_GenerateEvt:
 38938                           	opt stack 8
 38939                           
 38940                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38941                           
 38942                           ;incstack = 0
 38943  006C50  0E00               	movlw	0
 38944  006C52  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38945                           
 38946                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38947  006C54  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 38948  006C58  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 38949  006C5C  0E02               	movlw	2
 38950  006C5E  6EDF               	movwf	indf2,c
 38951                           
 38952                           ;os_ser.c: 83: EventStatus = EventSent;
 38953  006C60  0E02               	movlw	2
 38954  006C62  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38955  006C64  0012               	return	
 38956  006C66                     __end_ofi1_GenerateEvt:
 38957                           	opt stack 0
 38958                           tosu	equ	0xFFF
 38959                           tosh	equ	0xFFE
 38960                           tosl	equ	0xFFD
 38961                           pclatu	equ	0xFFB
 38962                           pclath	equ	0xFFA
 38963                           tblptru	equ	0xFF8
 38964                           tblptrh	equ	0xFF7
 38965                           tblptrl	equ	0xFF6
 38966                           tablat	equ	0xFF5
 38967                           prodh	equ	0xFF4
 38968                           prodl	equ	0xFF3
 38969                           intcon	equ	0xFF2
 38970                           intcon2	equ	0xFF1
 38971                           intcon3	equ	0xFF0
 38972                           indf0	equ	0xFEF
 38973                           postinc0	equ	0xFEE
 38974                           plusw0	equ	0xFEB
 38975                           fsr0h	equ	0xFEA
 38976                           fsr0l	equ	0xFE9
 38977                           wreg	equ	0xFE8
 38978                           indf1	equ	0xFE7
 38979                           postinc1	equ	0xFE6
 38980                           postdec1	equ	0xFE5
 38981                           plusw1	equ	0xFE3
 38982                           fsr1h	equ	0xFE2
 38983                           fsr1l	equ	0xFE1
 38984                           bsr	equ	0xFE0
 38985                           indf2	equ	0xFDF
 38986                           postinc2	equ	0xFDE
 38987                           postdec2	equ	0xFDD
 38988                           plusw2	equ	0xFDB
 38989                           fsr2h	equ	0xFDA
 38990                           fsr2l	equ	0xFD9
 38991                           status	equ	0xFD8
 38992                           
 38993 ;; *************** function _HighPriorityIsr *****************
 38994 ;; Defined at:
 38995 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 38996 ;; Parameters:    Size  Location     Type
 38997 ;;		None
 38998 ;; Auto vars:     Size  Location     Type
 38999 ;;		None
 39000 ;; Return value:  Size  Location     Type
 39001 ;;                  1    wreg      void 
 39002 ;; Registers used:
 39003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39004 ;; Tracked objects:
 39005 ;;		On entry : 0/0
 39006 ;;		On exit  : 0/0
 39007 ;;		Unchanged: 0/0
 39008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39011 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39012 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39013 ;;Total ram usage:       18 bytes
 39014 ;; Hardware stack levels used:    1
 39015 ;; Hardware stack levels required when called:    3
 39016 ;; This function calls:
 39017 ;;		_Mcu_Int0Isr
 39018 ;;		_Mcu_Int1Isr
 39019 ;;		_Rtcc_RtcIsr
 39020 ;;		_Uart_Uart1RxIsr
 39021 ;; This function is called by:
 39022 ;;		Interrupt level 2
 39023 ;; This function uses a non-reentrant model
 39024 ;;
 39025                           
 39026                           	psect	intcode
 39027  000008                     __pintcode:
 39028                           	opt stack 0
 39029  000008                     _HighPriorityIsr:
 39030                           	opt stack 8
 39031                           
 39032                           ;incstack = 0
 39033  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 39034  00000A  EFEA  F023         	goto	int_func
 39035                           tosu	equ	0xFFF
 39036                           tosh	equ	0xFFE
 39037                           tosl	equ	0xFFD
 39038                           pclatu	equ	0xFFB
 39039                           pclath	equ	0xFFA
 39040                           tblptru	equ	0xFF8
 39041                           tblptrh	equ	0xFF7
 39042                           tblptrl	equ	0xFF6
 39043                           tablat	equ	0xFF5
 39044                           prodh	equ	0xFF4
 39045                           prodl	equ	0xFF3
 39046                           intcon	equ	0xFF2
 39047                           intcon2	equ	0xFF1
 39048                           intcon3	equ	0xFF0
 39049                           indf0	equ	0xFEF
 39050                           postinc0	equ	0xFEE
 39051                           plusw0	equ	0xFEB
 39052                           fsr0h	equ	0xFEA
 39053                           fsr0l	equ	0xFE9
 39054                           wreg	equ	0xFE8
 39055                           indf1	equ	0xFE7
 39056                           postinc1	equ	0xFE6
 39057                           postdec1	equ	0xFE5
 39058                           plusw1	equ	0xFE3
 39059                           fsr1h	equ	0xFE2
 39060                           fsr1l	equ	0xFE1
 39061                           bsr	equ	0xFE0
 39062                           indf2	equ	0xFDF
 39063                           postinc2	equ	0xFDE
 39064                           postdec2	equ	0xFDD
 39065                           plusw2	equ	0xFDB
 39066                           fsr2h	equ	0xFDA
 39067                           fsr2l	equ	0xFD9
 39068                           status	equ	0xFD8
 39069                           
 39070                           	psect	intcode_body
 39071  0047D4                     __pintcode_body:
 39072                           	opt stack 8
 39073  0047D4                     int_func:
 39074                           	opt stack 8
 39075  0047D4  CFFA F007          	movff	pclath,??_HighPriorityIsr
 39076  0047D8  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 39077  0047DC  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 39078  0047E0  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 39079  0047E4  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 39080  0047E8  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 39081  0047EC  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 39082  0047F0  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 39083  0047F4  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 39084  0047F8  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 39085  0047FC  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 39086  004800  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 39087  004804  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 39088  004808  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 39089  00480C  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 39090  004810  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 39091  004814  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 39092  004818  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 39093                           
 39094                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 39095  00481C  B2F2               	btfsc	intcon,1,c	;volatile
 39096                           
 39097                           ;irq.c: 158: {
 39098                           ;irq.c: 160: Mcu_Int0Isr();
 39099  00481E  ECE0  F036         	call	_Mcu_Int0Isr	;wreg free
 39100                           
 39101                           ;irq.c: 161: }
 39102                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 39103  004822  B0F0               	btfsc	intcon3,0,c	;volatile
 39104                           
 39105                           ;irq.c: 167: {
 39106                           ;irq.c: 169: Mcu_Int1Isr();
 39107  004824  ECDE  F036         	call	_Mcu_Int1Isr	;wreg free
 39108                           
 39109                           ;irq.c: 170: }
 39110                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 39111  004828  B0A4               	btfsc	4004,0,c	;volatile
 39112                           
 39113                           ;irq.c: 203: {
 39114                           ;irq.c: 205: Rtcc_RtcIsr();
 39115  00482A  ECDC  F036         	call	_Rtcc_RtcIsr	;wreg free
 39116                           
 39117                           ;irq.c: 206: }
 39118                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 39119  00482E  BA9E               	btfsc	3998,5,c	;volatile
 39120                           
 39121                           ;irq.c: 212: {
 39122                           ;irq.c: 214: Uart_Uart1RxIsr();
 39123  004830  EC83  F036         	call	_Uart_Uart1RxIsr	;wreg free
 39124  004834  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 39125  004838  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 39126  00483C  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 39127  004840  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 39128  004844  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 39129  004848  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 39130  00484C  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 39131  004850  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 39132  004854  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 39133  004858  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 39134  00485C  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 39135  004860  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 39136  004864  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 39137  004868  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 39138  00486C  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 39139  004870  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 39140  004874  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 39141  004878  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 39142  00487C  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 39143  00487E  0011               	retfie		f
 39144  004880                     __end_of_HighPriorityIsr:
 39145                           	opt stack 0
 39146                           tosu	equ	0xFFF
 39147                           tosh	equ	0xFFE
 39148                           tosl	equ	0xFFD
 39149                           pclatu	equ	0xFFB
 39150                           pclath	equ	0xFFA
 39151                           tblptru	equ	0xFF8
 39152                           tblptrh	equ	0xFF7
 39153                           tblptrl	equ	0xFF6
 39154                           tablat	equ	0xFF5
 39155                           prodh	equ	0xFF4
 39156                           prodl	equ	0xFF3
 39157                           intcon	equ	0xFF2
 39158                           intcon2	equ	0xFF1
 39159                           intcon3	equ	0xFF0
 39160                           indf0	equ	0xFEF
 39161                           postinc0	equ	0xFEE
 39162                           plusw0	equ	0xFEB
 39163                           fsr0h	equ	0xFEA
 39164                           fsr0l	equ	0xFE9
 39165                           wreg	equ	0xFE8
 39166                           indf1	equ	0xFE7
 39167                           postinc1	equ	0xFE6
 39168                           postdec1	equ	0xFE5
 39169                           plusw1	equ	0xFE3
 39170                           fsr1h	equ	0xFE2
 39171                           fsr1l	equ	0xFE1
 39172                           bsr	equ	0xFE0
 39173                           indf2	equ	0xFDF
 39174                           postinc2	equ	0xFDE
 39175                           postdec2	equ	0xFDD
 39176                           plusw2	equ	0xFDB
 39177                           fsr2h	equ	0xFDA
 39178                           fsr2l	equ	0xFD9
 39179                           status	equ	0xFD8
 39180                           
 39181 ;; *************** function _Uart_Uart1RxIsr *****************
 39182 ;; Defined at:
 39183 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 39184 ;; Parameters:    Size  Location     Type
 39185 ;;		None
 39186 ;; Auto vars:     Size  Location     Type
 39187 ;;		None
 39188 ;; Return value:  Size  Location     Type
 39189 ;;                  1    wreg      void 
 39190 ;; Registers used:
 39191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39192 ;; Tracked objects:
 39193 ;;		On entry : 0/0
 39194 ;;		On exit  : 0/0
 39195 ;;		Unchanged: 0/0
 39196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39201 ;;Total ram usage:        0 bytes
 39202 ;; Hardware stack levels used:    1
 39203 ;; Hardware stack levels required when called:    2
 39204 ;; This function calls:
 39205 ;;		_Uart_MdmGsmGprsReadService
 39206 ;; This function is called by:
 39207 ;;		_HighPriorityIsr
 39208 ;; This function uses a non-reentrant model
 39209 ;;
 39210                           
 39211                           	psect	text194
 39212  006D06                     __ptext194:
 39213                           	opt stack 0
 39214  006D06                     _Uart_Uart1RxIsr:
 39215                           	opt stack 8
 39216                           
 39217                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 39218                           ;uart_drv.c: 590: UartRxData = RCREG1;
 39219                           
 39220                           ;incstack = 0
 39221  006D06  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 39222                           
 39223                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 39224  006D0A  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 39225  006D0E  0E01               	movlw	1
 39226  006D10  ECC9  F01F         	call	_Uart_MdmGsmGprsReadService
 39227  006D14  0012               	return		;funcret
 39228  006D16                     __end_of_Uart_Uart1RxIsr:
 39229                           	opt stack 0
 39230                           tosu	equ	0xFFF
 39231                           tosh	equ	0xFFE
 39232                           tosl	equ	0xFFD
 39233                           pclatu	equ	0xFFB
 39234                           pclath	equ	0xFFA
 39235                           tblptru	equ	0xFF8
 39236                           tblptrh	equ	0xFF7
 39237                           tblptrl	equ	0xFF6
 39238                           tablat	equ	0xFF5
 39239                           prodh	equ	0xFF4
 39240                           prodl	equ	0xFF3
 39241                           intcon	equ	0xFF2
 39242                           intcon2	equ	0xFF1
 39243                           intcon3	equ	0xFF0
 39244                           indf0	equ	0xFEF
 39245                           postinc0	equ	0xFEE
 39246                           plusw0	equ	0xFEB
 39247                           fsr0h	equ	0xFEA
 39248                           fsr0l	equ	0xFE9
 39249                           wreg	equ	0xFE8
 39250                           indf1	equ	0xFE7
 39251                           postinc1	equ	0xFE6
 39252                           postdec1	equ	0xFE5
 39253                           plusw1	equ	0xFE3
 39254                           fsr1h	equ	0xFE2
 39255                           fsr1l	equ	0xFE1
 39256                           bsr	equ	0xFE0
 39257                           indf2	equ	0xFDF
 39258                           postinc2	equ	0xFDE
 39259                           postdec2	equ	0xFDD
 39260                           plusw2	equ	0xFDB
 39261                           fsr2h	equ	0xFDA
 39262                           fsr2l	equ	0xFD9
 39263                           status	equ	0xFD8
 39264                           
 39265 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 39266 ;; Defined at:
 39267 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 39268 ;; Parameters:    Size  Location     Type
 39269 ;;  Module          1    wreg     unsigned char 
 39270 ;;  UartData        1    3[COMRAM] unsigned char 
 39271 ;; Auto vars:     Size  Location     Type
 39272 ;;  Module          1    0[COMRAM] unsigned char 
 39273 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 39274 ;; Return value:  Size  Location     Type
 39275 ;;                  1    wreg      void 
 39276 ;; Registers used:
 39277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39278 ;; Tracked objects:
 39279 ;;		On entry : 0/0
 39280 ;;		On exit  : 0/0
 39281 ;;		Unchanged: 0/0
 39282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39283 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39286 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39287 ;;Total ram usage:        3 bytes
 39288 ;; Hardware stack levels used:    1
 39289 ;; Hardware stack levels required when called:    1
 39290 ;; This function calls:
 39291 ;;		i2_GenerateEvt
 39292 ;; This function is called by:
 39293 ;;		_Uart_Uart1RxIsr
 39294 ;; This function uses a non-reentrant model
 39295 ;;
 39296                           
 39297                           	psect	text195
 39298  003F92                     __ptext195:
 39299                           	opt stack 0
 39300  003F92                     _Uart_MdmGsmGprsReadService:
 39301                           	opt stack 8
 39302                           
 39303                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 39304                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 39305                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 39306                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 39307                           
 39308                           ;incstack = 0
 39309  003F92  0E00               	movlw	0
 39310  003F94  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 39311  003F96  0E00               	movlw	0
 39312  003F98  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 39313                           
 39314                           ;uart_drv.c: 383: switch (RxState)
 39315  003F9A  D058               	goto	i2l680
 39316  003F9C                     
 39317                           ;uart_drv.c: 387: if (UartData == '\r')
 39318  003F9C  0E0D               	movlw	13
 39319  003F9E  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 39320  003FA0  A4D8               	btfss	status,2,c
 39321  003FA2  D003               	goto	i2l682
 39322                           
 39323                           ;uart_drv.c: 388: {
 39324                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 39325  003FA4  0E01               	movlw	1
 39326  003FA6  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 39327                           
 39328                           ;uart_drv.c: 391: }
 39329  003FA8  0012               	return	
 39330  003FAA                     i2l682:
 39331                           
 39332                           ;uart_drv.c: 392: else
 39333                           ;uart_drv.c: 393: {
 39334                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 39335  003FAA  0E90               	movlw	144
 39336  003FAC  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39337  003FAE  0E01               	movlw	1
 39338  003FB0  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39339  003FB2  B0D8               	btfsc	status,0,c
 39340  003FB4  0012               	return	
 39341                           
 39342                           ;uart_drv.c: 395: {
 39343                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 39344  003FB6  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 39345  003FB8  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39346  003FBA  6ED9               	movwf	fsr2l,c
 39347  003FBC  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 39348  003FBE  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39349  003FC0  6EDA               	movwf	fsr2h,c
 39350  003FC2  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 39351                           
 39352                           ;uart_drv.c: 399: RxCounter++;
 39353  003FC6  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 39354  003FC8  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 39355                           
 39356                           ;uart_drv.c: 400: }
 39357                           ;uart_drv.c: 401: }
 39358                           ;uart_drv.c: 402: break;
 39359  003FCA  0012               	return	
 39360  003FCC                     
 39361                           ;uart_drv.c: 406: if (UartData == '\n')
 39362  003FCC  0E0A               	movlw	10
 39363  003FCE  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 39364  003FD0  A4D8               	btfss	status,2,c
 39365  003FD2  D035               	goto	i2l688
 39366                           
 39367                           ;uart_drv.c: 407: {
 39368                           ;uart_drv.c: 409: if (RxCounter > 0)
 39369  003FD4  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39370  003FD6  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39371  003FD8  B4D8               	btfsc	status,2,c
 39372  003FDA  D031               	goto	i2l688
 39373                           
 39374                           ;uart_drv.c: 410: {
 39375                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 39376  003FDC  0E00               	movlw	0
 39377  003FDE  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 39378  003FE0  0E00               	movlw	0
 39379  003FE2  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 39380  003FE4  D010               	goto	i2l689
 39381  003FE6                     
 39382                           ;uart_drv.c: 413: {
 39383                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 39384  003FE6  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 39385  003FE8  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 39386  003FEA  6ED9               	movwf	fsr2l,c
 39387  003FEC  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 39388  003FEE  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 39389  003FF0  6EDA               	movwf	fsr2h,c
 39390  003FF2  0E58               	movlw	low _RxBuffer
 39391  003FF4  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 39392  003FF6  6EE1               	movwf	fsr1l,c
 39393  003FF8  0E0C               	movlw	high _RxBuffer
 39394  003FFA  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 39395  003FFC  6EE2               	movwf	fsr1h,c
 39396  003FFE  CFDF FFE7          	movff	indf2,indf1
 39397  004002  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 39398  004004  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 39399  004006                     i2l689:
 39400  004006  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 39401  004008  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 39402  00400A  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 39403  00400C  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 39404  00400E  A0D8               	btfss	status,0,c
 39405  004010  D7EA               	goto	i2l690
 39406                           
 39407                           ;uart_drv.c: 415: }
 39408                           ;uart_drv.c: 417: RxLen = RxCounter;
 39409  004012  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 39410  004016  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 39411                           
 39412                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 39413  00401A  0E3C               	movlw	low _NewStringReceived
 39414  00401C  6E01               	movwf	i2GenerateEvt@Event,c
 39415  00401E  0E00               	movlw	high _NewStringReceived
 39416  004020  6E02               	movwf	i2GenerateEvt@Event+1,c
 39417  004022  EC33  F036         	call	i2_GenerateEvt	;wreg free
 39418                           
 39419                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 39420  004026  0E3B               	movlw	low _NewMdmEvtParserRequest
 39421  004028  6E01               	movwf	i2GenerateEvt@Event,c
 39422  00402A  0E00               	movlw	high _NewMdmEvtParserRequest
 39423  00402C  6E02               	movwf	i2GenerateEvt@Event+1,c
 39424  00402E  EC33  F036         	call	i2_GenerateEvt	;wreg free
 39425                           
 39426                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 39427  004032  0E3A               	movlw	low _NewStringMdmTerminal
 39428  004034  6E01               	movwf	i2GenerateEvt@Event,c
 39429  004036  0E00               	movlw	high _NewStringMdmTerminal
 39430  004038  6E02               	movwf	i2GenerateEvt@Event+1,c
 39431  00403A  EC33  F036         	call	i2_GenerateEvt	;wreg free
 39432  00403E                     i2l688:
 39433                           
 39434                           ;uart_drv.c: 427: }
 39435                           ;uart_drv.c: 429: RxState = ReadData;
 39436                           
 39437                           ;uart_drv.c: 424: else
 39438                           ;uart_drv.c: 425: {
 39439                           
 39440                           ;uart_drv.c: 422: }
 39441                           ;uart_drv.c: 423: }
 39442  00403E  0E00               	movlw	0
 39443  004040  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 39444                           
 39445                           ;uart_drv.c: 431: RxCounter = 0;
 39446  004042  0E00               	movlw	0
 39447  004044  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 39448  004046  0E00               	movlw	0
 39449  004048  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 39450                           
 39451                           ;uart_drv.c: 436: }
 39452                           
 39453                           ;uart_drv.c: 435: break;
 39454                           
 39455                           ;uart_drv.c: 434: default:
 39456                           
 39457                           ;uart_drv.c: 432: break;
 39458  00404A  0012               	return	
 39459  00404C                     i2l680:
 39460  00404C  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 39461                           
 39462                           ; Switch size 1, requested type "space"
 39463                           ; Number of cases is 2, Range of values is 0 to 1
 39464                           ; switch strategies available:
 39465                           ; Name         Instructions Cycles
 39466                           ; simple_byte            7     4 (average)
 39467                           ;	Chosen strategy is simple_byte
 39468  00404E  0A00               	xorlw	0	; case 0
 39469  004050  B4D8               	btfsc	status,2,c
 39470  004052  D7A4               	goto	i2l681
 39471  004054  0A01               	xorlw	1	; case 1
 39472  004056  A4D8               	btfss	status,2,c
 39473  004058  0012               	return	
 39474  00405A  D7B8               	goto	i2l686
 39475  00405C                     __end_of_Uart_MdmGsmGprsReadService:
 39476                           	opt stack 0
 39477                           tosu	equ	0xFFF
 39478                           tosh	equ	0xFFE
 39479                           tosl	equ	0xFFD
 39480                           pclatu	equ	0xFFB
 39481                           pclath	equ	0xFFA
 39482                           tblptru	equ	0xFF8
 39483                           tblptrh	equ	0xFF7
 39484                           tblptrl	equ	0xFF6
 39485                           tablat	equ	0xFF5
 39486                           prodh	equ	0xFF4
 39487                           prodl	equ	0xFF3
 39488                           intcon	equ	0xFF2
 39489                           intcon2	equ	0xFF1
 39490                           intcon3	equ	0xFF0
 39491                           indf0	equ	0xFEF
 39492                           postinc0	equ	0xFEE
 39493                           plusw0	equ	0xFEB
 39494                           fsr0h	equ	0xFEA
 39495                           fsr0l	equ	0xFE9
 39496                           wreg	equ	0xFE8
 39497                           indf1	equ	0xFE7
 39498                           postinc1	equ	0xFE6
 39499                           postdec1	equ	0xFE5
 39500                           plusw1	equ	0xFE3
 39501                           fsr1h	equ	0xFE2
 39502                           fsr1l	equ	0xFE1
 39503                           bsr	equ	0xFE0
 39504                           indf2	equ	0xFDF
 39505                           postinc2	equ	0xFDE
 39506                           postdec2	equ	0xFDD
 39507                           plusw2	equ	0xFDB
 39508                           fsr2h	equ	0xFDA
 39509                           fsr2l	equ	0xFD9
 39510                           status	equ	0xFD8
 39511                           
 39512 ;; *************** function i2_GenerateEvt *****************
 39513 ;; Defined at:
 39514 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 39515 ;; Parameters:    Size  Location     Type
 39516 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 39517 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 39518 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 39519 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 39520 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 39521 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 39522 ;; Auto vars:     Size  Location     Type
 39523 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 39524 ;; Return value:  Size  Location     Type
 39525 ;;                  1    wreg      enum E7699
 39526 ;; Registers used:
 39527 ;;		wreg, fsr2l, fsr2h, status,2
 39528 ;; Tracked objects:
 39529 ;;		On entry : 0/0
 39530 ;;		On exit  : 0/0
 39531 ;;		Unchanged: 0/0
 39532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39536 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39537 ;;Total ram usage:        3 bytes
 39538 ;; Hardware stack levels used:    1
 39539 ;; This function calls:
 39540 ;;		Nothing
 39541 ;; This function is called by:
 39542 ;;		_Uart_MdmGsmGprsReadService
 39543 ;; This function uses a non-reentrant model
 39544 ;;
 39545                           
 39546                           	psect	text196
 39547  006C66                     __ptext196:
 39548                           	opt stack 0
 39549  006C66                     i2_GenerateEvt:
 39550                           	opt stack 8
 39551                           
 39552                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 39553                           
 39554                           ;incstack = 0
 39555  006C66  0E00               	movlw	0
 39556  006C68  6E03               	movwf	i2GenerateEvt@EventStatus,c
 39557                           
 39558                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 39559  006C6A  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 39560  006C6E  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 39561  006C72  0E02               	movlw	2
 39562  006C74  6EDF               	movwf	indf2,c
 39563                           
 39564                           ;os_ser.c: 83: EventStatus = EventSent;
 39565  006C76  0E02               	movlw	2
 39566  006C78  6E03               	movwf	i2GenerateEvt@EventStatus,c
 39567  006C7A  0012               	return	
 39568  006C7C                     __end_ofi2_GenerateEvt:
 39569                           	opt stack 0
 39570                           tosu	equ	0xFFF
 39571                           tosh	equ	0xFFE
 39572                           tosl	equ	0xFFD
 39573                           pclatu	equ	0xFFB
 39574                           pclath	equ	0xFFA
 39575                           tblptru	equ	0xFF8
 39576                           tblptrh	equ	0xFF7
 39577                           tblptrl	equ	0xFF6
 39578                           tablat	equ	0xFF5
 39579                           prodh	equ	0xFF4
 39580                           prodl	equ	0xFF3
 39581                           intcon	equ	0xFF2
 39582                           intcon2	equ	0xFF1
 39583                           intcon3	equ	0xFF0
 39584                           indf0	equ	0xFEF
 39585                           postinc0	equ	0xFEE
 39586                           plusw0	equ	0xFEB
 39587                           fsr0h	equ	0xFEA
 39588                           fsr0l	equ	0xFE9
 39589                           wreg	equ	0xFE8
 39590                           indf1	equ	0xFE7
 39591                           postinc1	equ	0xFE6
 39592                           postdec1	equ	0xFE5
 39593                           plusw1	equ	0xFE3
 39594                           fsr1h	equ	0xFE2
 39595                           fsr1l	equ	0xFE1
 39596                           bsr	equ	0xFE0
 39597                           indf2	equ	0xFDF
 39598                           postinc2	equ	0xFDE
 39599                           postdec2	equ	0xFDD
 39600                           plusw2	equ	0xFDB
 39601                           fsr2h	equ	0xFDA
 39602                           fsr2l	equ	0xFD9
 39603                           status	equ	0xFD8
 39604                           
 39605 ;; *************** function _Rtcc_RtcIsr *****************
 39606 ;; Defined at:
 39607 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 39608 ;; Parameters:    Size  Location     Type
 39609 ;;		None
 39610 ;; Auto vars:     Size  Location     Type
 39611 ;;		None
 39612 ;; Return value:  Size  Location     Type
 39613 ;;                  1    wreg      void 
 39614 ;; Registers used:
 39615 ;;		wreg, status,2, status,0
 39616 ;; Tracked objects:
 39617 ;;		On entry : 0/0
 39618 ;;		On exit  : 0/0
 39619 ;;		Unchanged: 0/0
 39620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39625 ;;Total ram usage:        0 bytes
 39626 ;; Hardware stack levels used:    1
 39627 ;; This function calls:
 39628 ;;		Nothing
 39629 ;; This function is called by:
 39630 ;;		_HighPriorityIsr
 39631 ;; This function uses a non-reentrant model
 39632 ;;
 39633                           
 39634                           	psect	text197
 39635  006DB8                     __ptext197:
 39636                           	opt stack 0
 39637  006DB8                     _Rtcc_RtcIsr:
 39638                           	opt stack 10
 39639                           
 39640                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 39641                           
 39642                           ;incstack = 0
 39643  006DB8  90A4               	bcf	4004,0,c	;volatile
 39644  006DBA  0012               	return	
 39645  006DBC                     __end_of_Rtcc_RtcIsr:
 39646                           	opt stack 0
 39647                           tosu	equ	0xFFF
 39648                           tosh	equ	0xFFE
 39649                           tosl	equ	0xFFD
 39650                           pclatu	equ	0xFFB
 39651                           pclath	equ	0xFFA
 39652                           tblptru	equ	0xFF8
 39653                           tblptrh	equ	0xFF7
 39654                           tblptrl	equ	0xFF6
 39655                           tablat	equ	0xFF5
 39656                           prodh	equ	0xFF4
 39657                           prodl	equ	0xFF3
 39658                           intcon	equ	0xFF2
 39659                           intcon2	equ	0xFF1
 39660                           intcon3	equ	0xFF0
 39661                           indf0	equ	0xFEF
 39662                           postinc0	equ	0xFEE
 39663                           plusw0	equ	0xFEB
 39664                           fsr0h	equ	0xFEA
 39665                           fsr0l	equ	0xFE9
 39666                           wreg	equ	0xFE8
 39667                           indf1	equ	0xFE7
 39668                           postinc1	equ	0xFE6
 39669                           postdec1	equ	0xFE5
 39670                           plusw1	equ	0xFE3
 39671                           fsr1h	equ	0xFE2
 39672                           fsr1l	equ	0xFE1
 39673                           bsr	equ	0xFE0
 39674                           indf2	equ	0xFDF
 39675                           postinc2	equ	0xFDE
 39676                           postdec2	equ	0xFDD
 39677                           plusw2	equ	0xFDB
 39678                           fsr2h	equ	0xFDA
 39679                           fsr2l	equ	0xFD9
 39680                           status	equ	0xFD8
 39681                           
 39682 ;; *************** function _Mcu_Int1Isr *****************
 39683 ;; Defined at:
 39684 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 39685 ;; Parameters:    Size  Location     Type
 39686 ;;		None
 39687 ;; Auto vars:     Size  Location     Type
 39688 ;;		None
 39689 ;; Return value:  Size  Location     Type
 39690 ;;                  1    wreg      void 
 39691 ;; Registers used:
 39692 ;;		wreg, status,2, status,0
 39693 ;; Tracked objects:
 39694 ;;		On entry : 0/0
 39695 ;;		On exit  : 0/0
 39696 ;;		Unchanged: 0/0
 39697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39702 ;;Total ram usage:        0 bytes
 39703 ;; Hardware stack levels used:    1
 39704 ;; This function calls:
 39705 ;;		Nothing
 39706 ;; This function is called by:
 39707 ;;		_HighPriorityIsr
 39708 ;; This function uses a non-reentrant model
 39709 ;;
 39710                           
 39711                           	psect	text198
 39712  006DBC                     __ptext198:
 39713                           	opt stack 0
 39714  006DBC                     _Mcu_Int1Isr:
 39715                           	opt stack 10
 39716                           
 39717                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 39718                           
 39719                           ;incstack = 0
 39720  006DBC  90F0               	bcf	intcon3,0,c	;volatile
 39721  006DBE  0012               	return	
 39722  006DC0                     __end_of_Mcu_Int1Isr:
 39723                           	opt stack 0
 39724                           tosu	equ	0xFFF
 39725                           tosh	equ	0xFFE
 39726                           tosl	equ	0xFFD
 39727                           pclatu	equ	0xFFB
 39728                           pclath	equ	0xFFA
 39729                           tblptru	equ	0xFF8
 39730                           tblptrh	equ	0xFF7
 39731                           tblptrl	equ	0xFF6
 39732                           tablat	equ	0xFF5
 39733                           prodh	equ	0xFF4
 39734                           prodl	equ	0xFF3
 39735                           intcon	equ	0xFF2
 39736                           intcon2	equ	0xFF1
 39737                           intcon3	equ	0xFF0
 39738                           indf0	equ	0xFEF
 39739                           postinc0	equ	0xFEE
 39740                           plusw0	equ	0xFEB
 39741                           fsr0h	equ	0xFEA
 39742                           fsr0l	equ	0xFE9
 39743                           wreg	equ	0xFE8
 39744                           indf1	equ	0xFE7
 39745                           postinc1	equ	0xFE6
 39746                           postdec1	equ	0xFE5
 39747                           plusw1	equ	0xFE3
 39748                           fsr1h	equ	0xFE2
 39749                           fsr1l	equ	0xFE1
 39750                           bsr	equ	0xFE0
 39751                           indf2	equ	0xFDF
 39752                           postinc2	equ	0xFDE
 39753                           postdec2	equ	0xFDD
 39754                           plusw2	equ	0xFDB
 39755                           fsr2h	equ	0xFDA
 39756                           fsr2l	equ	0xFD9
 39757                           status	equ	0xFD8
 39758                           
 39759 ;; *************** function _Mcu_Int0Isr *****************
 39760 ;; Defined at:
 39761 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 39762 ;; Parameters:    Size  Location     Type
 39763 ;;		None
 39764 ;; Auto vars:     Size  Location     Type
 39765 ;;		None
 39766 ;; Return value:  Size  Location     Type
 39767 ;;                  1    wreg      void 
 39768 ;; Registers used:
 39769 ;;		wreg, status,2, status,0
 39770 ;; Tracked objects:
 39771 ;;		On entry : 0/0
 39772 ;;		On exit  : 0/0
 39773 ;;		Unchanged: 0/0
 39774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39779 ;;Total ram usage:        0 bytes
 39780 ;; Hardware stack levels used:    1
 39781 ;; This function calls:
 39782 ;;		Nothing
 39783 ;; This function is called by:
 39784 ;;		_HighPriorityIsr
 39785 ;; This function uses a non-reentrant model
 39786 ;;
 39787                           
 39788                           	psect	text199
 39789  006DC0                     __ptext199:
 39790                           	opt stack 0
 39791  006DC0                     _Mcu_Int0Isr:
 39792                           	opt stack 10
 39793                           
 39794                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 39795                           
 39796                           ;incstack = 0
 39797  006DC0  92F2               	bcf	intcon,1,c	;volatile
 39798  006DC2  0012               	return	
 39799  006DC4                     __end_of_Mcu_Int0Isr:
 39800                           	opt stack 0
 39801                           tosu	equ	0xFFF
 39802                           tosh	equ	0xFFE
 39803                           tosl	equ	0xFFD
 39804                           pclatu	equ	0xFFB
 39805                           pclath	equ	0xFFA
 39806                           tblptru	equ	0xFF8
 39807                           tblptrh	equ	0xFF7
 39808                           tblptrl	equ	0xFF6
 39809                           tablat	equ	0xFF5
 39810                           prodh	equ	0xFF4
 39811                           prodl	equ	0xFF3
 39812                           intcon	equ	0xFF2
 39813                           intcon2	equ	0xFF1
 39814                           intcon3	equ	0xFF0
 39815                           indf0	equ	0xFEF
 39816                           postinc0	equ	0xFEE
 39817                           plusw0	equ	0xFEB
 39818                           fsr0h	equ	0xFEA
 39819                           fsr0l	equ	0xFE9
 39820                           wreg	equ	0xFE8
 39821                           indf1	equ	0xFE7
 39822                           postinc1	equ	0xFE6
 39823                           postdec1	equ	0xFE5
 39824                           plusw1	equ	0xFE3
 39825                           fsr1h	equ	0xFE2
 39826                           fsr1l	equ	0xFE1
 39827                           bsr	equ	0xFE0
 39828                           indf2	equ	0xFDF
 39829                           postinc2	equ	0xFDE
 39830                           postdec2	equ	0xFDD
 39831                           plusw2	equ	0xFDB
 39832                           fsr2h	equ	0xFDA
 39833                           fsr2l	equ	0xFD9
 39834                           status	equ	0xFD8
 39835                           tosu	equ	0xFFF
 39836                           tosh	equ	0xFFE
 39837                           tosl	equ	0xFFD
 39838                           pclatu	equ	0xFFB
 39839                           pclath	equ	0xFFA
 39840                           tblptru	equ	0xFF8
 39841                           tblptrh	equ	0xFF7
 39842                           tblptrl	equ	0xFF6
 39843                           tablat	equ	0xFF5
 39844                           prodh	equ	0xFF4
 39845                           prodl	equ	0xFF3
 39846                           intcon	equ	0xFF2
 39847                           intcon2	equ	0xFF1
 39848                           intcon3	equ	0xFF0
 39849                           indf0	equ	0xFEF
 39850                           postinc0	equ	0xFEE
 39851                           plusw0	equ	0xFEB
 39852                           fsr0h	equ	0xFEA
 39853                           fsr0l	equ	0xFE9
 39854                           wreg	equ	0xFE8
 39855                           indf1	equ	0xFE7
 39856                           postinc1	equ	0xFE6
 39857                           postdec1	equ	0xFE5
 39858                           plusw1	equ	0xFE3
 39859                           fsr1h	equ	0xFE2
 39860                           fsr1l	equ	0xFE1
 39861                           bsr	equ	0xFE0
 39862                           indf2	equ	0xFDF
 39863                           postinc2	equ	0xFDE
 39864                           postdec2	equ	0xFDD
 39865                           plusw2	equ	0xFDB
 39866                           fsr2h	equ	0xFDA
 39867                           fsr2l	equ	0xFD9
 39868                           status	equ	0xFD8
 39869                           
 39870                           	psect	text200
 39871  000000                     __ptext200:
 39872                           	opt stack 0
 39873                           tosu	equ	0xFFF
 39874                           tosh	equ	0xFFE
 39875                           tosl	equ	0xFFD
 39876                           pclatu	equ	0xFFB
 39877                           pclath	equ	0xFFA
 39878                           tblptru	equ	0xFF8
 39879                           tblptrh	equ	0xFF7
 39880                           tblptrl	equ	0xFF6
 39881                           tablat	equ	0xFF5
 39882                           prodh	equ	0xFF4
 39883                           prodl	equ	0xFF3
 39884                           intcon	equ	0xFF2
 39885                           intcon2	equ	0xFF1
 39886                           intcon3	equ	0xFF0
 39887                           indf0	equ	0xFEF
 39888                           postinc0	equ	0xFEE
 39889                           plusw0	equ	0xFEB
 39890                           fsr0h	equ	0xFEA
 39891                           fsr0l	equ	0xFE9
 39892                           wreg	equ	0xFE8
 39893                           indf1	equ	0xFE7
 39894                           postinc1	equ	0xFE6
 39895                           postdec1	equ	0xFE5
 39896                           plusw1	equ	0xFE3
 39897                           fsr1h	equ	0xFE2
 39898                           fsr1l	equ	0xFE1
 39899                           bsr	equ	0xFE0
 39900                           indf2	equ	0xFDF
 39901                           postinc2	equ	0xFDE
 39902                           postdec2	equ	0xFDD
 39903                           plusw2	equ	0xFDB
 39904                           fsr2h	equ	0xFDA
 39905                           fsr2l	equ	0xFD9
 39906                           status	equ	0xFD8
 39907                           
 39908                           	psect	rparam
 39909  0000                     tosu	equ	0xFFF
 39910                           tosh	equ	0xFFE
 39911                           tosl	equ	0xFFD
 39912                           pclatu	equ	0xFFB
 39913                           pclath	equ	0xFFA
 39914                           tblptru	equ	0xFF8
 39915                           tblptrh	equ	0xFF7
 39916                           tblptrl	equ	0xFF6
 39917                           tablat	equ	0xFF5
 39918                           prodh	equ	0xFF4
 39919                           prodl	equ	0xFF3
 39920                           intcon	equ	0xFF2
 39921                           intcon2	equ	0xFF1
 39922                           intcon3	equ	0xFF0
 39923                           indf0	equ	0xFEF
 39924                           postinc0	equ	0xFEE
 39925                           plusw0	equ	0xFEB
 39926                           fsr0h	equ	0xFEA
 39927                           fsr0l	equ	0xFE9
 39928                           wreg	equ	0xFE8
 39929                           indf1	equ	0xFE7
 39930                           postinc1	equ	0xFE6
 39931                           postdec1	equ	0xFE5
 39932                           plusw1	equ	0xFE3
 39933                           fsr1h	equ	0xFE2
 39934                           fsr1l	equ	0xFE1
 39935                           bsr	equ	0xFE0
 39936                           indf2	equ	0xFDF
 39937                           postinc2	equ	0xFDE
 39938                           postdec2	equ	0xFDD
 39939                           plusw2	equ	0xFDB
 39940                           fsr2h	equ	0xFDA
 39941                           fsr2l	equ	0xFD9
 39942                           status	equ	0xFD8
 39943                           
 39944                           	psect	temp
 39945  000042                     btemp:
 39946                           	opt stack 0
 39947  000042                     	ds	1
 39948  0000                     int$flags	set	btemp
 39949  0000                     wtemp6	set	btemp+1
 39950                           tosu	equ	0xFFF
 39951                           tosh	equ	0xFFE
 39952                           tosl	equ	0xFFD
 39953                           pclatu	equ	0xFFB
 39954                           pclath	equ	0xFFA
 39955                           tblptru	equ	0xFF8
 39956                           tblptrh	equ	0xFF7
 39957                           tblptrl	equ	0xFF6
 39958                           tablat	equ	0xFF5
 39959                           prodh	equ	0xFF4
 39960                           prodl	equ	0xFF3
 39961                           intcon	equ	0xFF2
 39962                           intcon2	equ	0xFF1
 39963                           intcon3	equ	0xFF0
 39964                           indf0	equ	0xFEF
 39965                           postinc0	equ	0xFEE
 39966                           plusw0	equ	0xFEB
 39967                           fsr0h	equ	0xFEA
 39968                           fsr0l	equ	0xFE9
 39969                           wreg	equ	0xFE8
 39970                           indf1	equ	0xFE7
 39971                           postinc1	equ	0xFE6
 39972                           postdec1	equ	0xFE5
 39973                           plusw1	equ	0xFE3
 39974                           fsr1h	equ	0xFE2
 39975                           fsr1l	equ	0xFE1
 39976                           bsr	equ	0xFE0
 39977                           indf2	equ	0xFDF
 39978                           postinc2	equ	0xFDE
 39979                           postdec2	equ	0xFDD
 39980                           plusw2	equ	0xFDB
 39981                           fsr2h	equ	0xFDA
 39982                           fsr2l	equ	0xFD9
 39983                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    592
    Data        170
    BSS         2379
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    201     256
    BANK3           256      0     255
    BANK4           192      0     192
    BANK5           256      4     248
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    resCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    resCmdFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    triggerCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    delCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    delCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    delCmdFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    addCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    addCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    addCmdFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    findEmptySpot@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> addCmdFsm@numberInMemory(BANK1[1]), 

    isMasterNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    isNumberInMemory@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> triggerCmdFsm@numberInMemory(BANK1[1]), delCmdFsm@numberInMemory(BANK1[1]), addCmdFsm@numberInMemory(BANK1[1]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> readBuffer(BANK3[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), smsText(BANK4[20]), UsbMasterPhoneNumber(BANK4[15]), callerNumber(BANK4[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 3775
		 -> blinkInSeconds(BANK3[2]), setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), RAM(DATA[3775]), 

    detectUsbNumber@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    initFsm@isCmdSuccessfull	PTR unsigned char  size(2) Largest target is 1
		 -> MyApp_Task@isCmdSuccessfull(BANK0[1]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 4
		 -> memoryPreamble(BANK3[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), UsbMasterPhoneNumber(BANK4[15]), 
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> readBuffer(BANK3[13]), parseCommand@resetCmd(BANK0[4]), parseCommand@deleteNumberCmd(BANK0[4]), parseCommand@addNumberCmd(BANK0[4]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8955 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK4[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK4[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), UsbMasterPhoneNumber(BANK4[15]), 
		 -> callerNumber(BANK4[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK1[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK1[1]), InitNetwork(BANK0[1]), MdmStsReady(BANK1[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[12]), STR_30(CODE[19]), STR_29(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> readBuffer(BANK3[13]), memoryPreamble(BANK3[4]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> relayBuffer(BANK2[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _triggerRelay->_I2cSlv_SendI2cMsg
    _Eeprom_Reset->_I2cSlv_SendI2cMsg
    _waitSetupCall->_secondsAppTimer
    _savePreamble->_Eeprom_Write
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _detectUsbNumber->_saveNumberInMemory
    _detectCmd->_parseCommand
    _parseCommand->_StringCompare
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _cmdVisualEffet->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _saveNumberInMemory->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _isNumberInMemory->_Eeprom_Read
    _isMasterNumber->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_delCmdFsm
    _triggerCmdFsm->_isNumberInMemory
    _resCmdFsm->_isMasterNumber
    _initFsm->_initEeprom
    _delCmdFsm->_isNumberInMemory
    _addCmdFsm->_isNumberInMemory
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Sch_MainScheduler->_InitializeTasks
    _Sch_MainScheduler->_ScheduleTasks
    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1399339
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0 1394708
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  697447
                                            200 BANK2      1     1      0
                                              0 BANK5      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  697261
                                            200 BANK2      1     1      0
                                              0 BANK5      2     2      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59354
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59354
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   42144
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0  431477
                _Led_SetLedBlinkTime
                          _addCmdFsm
                     _cmdVisualEffet
                          _delCmdFsm
                          _detectCmd
                    _detectUsbNumber
                            _initFsm
                          _resCmdFsm
                      _triggerCmdFsm
                _triggerVisualEffect
 ---------------------------------------------------------------------------------
 (4) _triggerCmdFsm                                        6     4      2   74478
                                              5 BANK1      6     4      2
                     _isMasterNumber
                   _isNumberInMemory
                    _secondsAppTimer
                       _triggerRelay
 ---------------------------------------------------------------------------------
 (5) _triggerRelay                                         2     2      0    4067
                                             37 BANK0      2     2      0
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _resCmdFsm                                            6     2      4   36313
                                              3 BANK1      6     2      4
                       _Eeprom_Reset
                     _isMasterNumber
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Reset                                         1     1      0    6686
                                             37 BANK0      1     1      0
                        _ClearBuffer
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              3     1      2   95863
                                              3 BANK1      3     1      2
                    _GetCallerNumber
                   _Led_SetLedStatus
                    _detectUsbNumber
                         _initEeprom
                      _initGprsModem
                 _saveNumberInMemory
                       _savePreamble
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (5) _waitSetupCall                                        1     1      0   17846
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _getSetupCall                                         1     1      0    5527
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (5) _savePreamble                                         0     0      0    9862
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (6) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15786
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24954
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (5) _detectUsbNumber                                      3     1      2   10616
                                             57 BANK0      3     1      2
                 _saveNumberInMemory
                _triggerVisualEffect
 ---------------------------------------------------------------------------------
 (4) _triggerVisualEffect                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _detectCmd                                            1     1      0   35708
                                             53 BANK0      1     1      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                         _StringCopy
              _Uart_WriteConstString
                       _parseCommand
 ---------------------------------------------------------------------------------
 (5) _parseCommand                                        13    13      0    3986
                                             40 BANK0     13    13      0
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (5) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (5) _Mdm_GetSmsData                                       3     1      2    8061
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _delCmdFsm                                           23    17      6   69763
                                              5 BANK1     23    17      6
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _cmdVisualEffet                                       2     2      0   12350
                                             51 BANK0      2     2      0
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11326
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _addCmdFsm                                           10     4      6   95753
                                              5 BANK1     10     4      6
                      _findEmptySpot
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (5) _saveNumberInMemory                                   3     1      2   10340
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write                                         7     4      3    9862
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (5) _isNumberInMemory                                     5     1      4   29454
                                              0 BANK1      5     1      4
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isMasterNumber                                       3     1      2   29221
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _findEmptySpot                                        3     1      2   25863
                                              0 BANK1      3     1      2
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (6) _isNumberValid                                        5     3      2     786
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24874
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23807
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    4023
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     633
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73780
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13450
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _StringCompare                                       11     5      6    3040
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15392
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   43139
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21606
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21533
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (9) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (9) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7139
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7139
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2773
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     956
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _cmdVisualEffet
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _detectUsbNumber
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _triggerVisualEffect
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _detectUsbNumber
             _saveNumberInMemory
               _Eeprom_Write
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _StringCopy
                   _GetCallerNumber (ARG)
                     _ClearBuffer
                     _ReceiveEvt
                   _GetLastInteractionNumber (ARG)
                 _initPreamble (ARG)
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
             _triggerVisualEffect
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _resCmdFsm
           _Eeprom_Reset
             _ClearBuffer
             _I2cSlv_SendI2cMsg
               _GenerateEvt
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
         _triggerCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
         _triggerVisualEffect
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _cmdVisualEffet
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _detectUsbNumber
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _triggerVisualEffect
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _detectUsbNumber
             _saveNumberInMemory
               _Eeprom_Write
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _StringCopy
                   _GetCallerNumber (ARG)
                     _ClearBuffer
                     _ReceiveEvt
                   _GetLastInteractionNumber (ARG)
                 _initPreamble (ARG)
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
             _triggerVisualEffect
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _resCmdFsm
           _Eeprom_Reset
             _ClearBuffer
             _I2cSlv_SendI2cMsg
               _GenerateEvt
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
         _triggerCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
         _triggerVisualEffect
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      4      F8      16       96.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C9     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      C0      14      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9A5       8        0.0%
DATA                 0      0     CC5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr  2 20:43:47 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5C0A  
                 delCmdFsm@masterOpResult 0119                                _USB_SD_Ptr FC1C  
                          ??_getSetupCall 0083                 __size_of_Mdm_SetSmsFormat 0050  
                         ?_isMasterNumber 0100                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 6AE2  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 2596                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0031                                       l202 2200  
                                     l203 2208                                       l205 2250  
                                     l206 2276                                       l208 227E  
                                     l160 1FE4                                       l209 229E  
                                     l161 1EBA                                       l162 2022  
                                     l170 1F82                                       l171 1F98  
                                     l163 1EC6                                       l315 49B6  
                                     l323 4982                                       l164 1F06  
                                     l316 492C                                       l420 4FF8  
                                     l500 4E12                                       l173 1F9C  
                                     l325 499C                                       l421 5018  
                                     l237 6AEE                                       l174 1FA4  
                                     l166 1F14                                       l318 4936  
                                     l422 5024               __end_of_USBStdGetDscHandler 2E5A  
                                     l510 4DE4                                       l502 4DA4  
                                     l175 1FB0                                       l167 1F3C  
                                     l319 495C                                       l423 5030  
                                     l511 4DD4                                       l503 4D94  
                                     l192 22A8                                       l176 1FC6  
                                     l416 5044                                       l424 503C  
                                     l512 4DF8                                       l504 4DBA  
                                     l520 6114                                       l193 2188  
                                     l169 1F4E                                       l417 4FEA  
                                     l441 17F2                                       l513 4DD8  
                                     l505 4D98                                       l521 60E0  
                                     l194 22E0                                       l418 5072  
                                     l442 15FA                                       l514 4DDE  
                                     l506 4D9E                                       l530 332E  
                                     l195 2194                                       l179 1FD2  
                                     l419 4FF2                                       l523 60FA  
                                     l531 3394                                       l196 21D4  
                                     l700 637A                                       l444 1642  
                                     l532 335A                                       l445 168A  
                                     l541 6A8C                                       l198 21E2  
                                     l446 16D2                                       l199 21F6  
                                     l631 2B70                                       l447 171A  
                                     l448 1762                                       l528 339A  
                                     l633 2BE8                                       l625 2AFC  
                                     l449 17AA                                       l529 3386  
                                     l538 6A90                                       l546 40B4  
                                     l651 6064                                       l707 64DE  
                                     l627 2B20                                       l715 6452  
                                     l539 6A88                                       l547 40D0  
                                     l660 6088                                       l652 605E  
                                     l716 6428                                       l709 64F8  
                                     l629 2B48                                       l718 6440  
                                     l639 6AD4                                       l832 6850  
                                     l844 4188                                       l668 0C4A  
                                     _BDT 000400                                       l790 6B0A  
                                     l855 54B2                                       l775 2F7C  
                                     l864 520A                                       l856 5458  
                                     l857 54CC                                       l698 635E  
                                     l858 5488                                       l867 521C  
                                     l982 2160                                       l983 2028  
                                     l985 204E                                       l987 206A  
                                     l988 20A0                                       l989 2114  
                                     l998 213A                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 4880  
                          ??_Mdm_MainTask 00A9                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 66D8                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BB0  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CE  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 641C  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 2026  
           findEmptySpot@positionInMemory 0100             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 6128           InitGprsNetwork@GprsNetInitState 01E7  
                                    l1100 1B20                                      l1101 1B6C  
                                    l1013 6142                                      l1110 5F68  
                             RiSm@Counter 02DB                                      l1031 3B9A  
                                    l1111 5F7C                                      l1032 3BD4  
                                    l2000 59F8                                      l1033 3BFA  
                                    l1009 615E                                      l1121 5FD4  
                                    l1027 3C34                                      l1035 3C1A  
                                    l1107 5F8E                                      l2100 296A  
                                    l1220 0DD6                                      l1028 3B88  
                                    l1052 1E8C                                      l1060 1E5E  
                                    l1108 5F52                                      l2101 285E  
                                    l1053 1DA6                                      l2102 28E2  
                                    l1222 10B6                                      l1230 0FBE  
                                    l1070 2D0E                                      l2006 59EC  
                                    l2111 3548                                      l1231 0FC2  
                                    l1223 0DEE                                      l1071 2C06  
                                    l1055 1EA6                                      l2112 3490  
                                    l1232 1006                                      l1224 0E28  
                                    l3000 5B6C                                      l1056 1DD8  
                                    l1152 698C                                      l1136 6968  
                                    l2008 59F2                                      l2113 3564  
                                    l2121 4A4C                                      l1241 1074  
                                    l1225 0E9C                                      l3001 5B80  
                                    l1129 5850                                      l2114 34AE  
                                    l2122 49DE                                      l1226 0E64  
                                    l1074 2C22                                      l1058 1E28  
                                    l2123 4A74                                      l1219 107E  
                                    l1075 2C3A                                      l1091 1B86  
                                    l2116 351E                                      l2124 49EE  
                                    l1252 0A5A                                      l1260 0744  
                                    l1236 1016                                      l1228 0F44  
                                    l1092 1A04                                      l1412 64D0  
                                    l1156 6662                                      l1404 5CFA  
                                    l2220 52A8                                      l2125 4A00  
                                    l1261 06FC                                      l1253 05FA  
                                    l1237 105A                                      l1229 0F7E  
                                    l2037 5DA4                                      l2045 5C82  
                                    l1405 5CBA                                      l2221 522E  
                                    l2142 67E4                                      l2126 4A1A  
                                    l1078 2CAC                                      l1422 6A78  
                                    l2046 5CB4                                      l2134 3EB4  
                                    l2143 67D2                                      l1255 0ABC  
                                    l1263 07F8                                      l1095 1A20  
                                    l2151 5DF0                                      l2039 5DB0  
                                    l1407 5CF4                                      l2135 3DFC  
                                    l2223 5294                                      l2128 4A28  
                                    l1280 09CA                                      l1272 0930  
                                    l1264 0832                                      l1256 0612  
                                    l1096 1AD6                                      l2152 5DBA  
                                    l1440 3D12                                      l2145 67D8  
                                    l2129 4A36                                      l1281 0A38  
                                    l1273 0974                                      l1265 085C  
                                    l1257 064C                                      l1097 1AFA  
                                    l1417 6416                                      l1441 3C5C  
                                    l2137 3E0A                                      l2146 67DE  
                                    l1266 0896                                      l1258 0686  
                                    l2250 5EC6                                      l2154 5DCC  
                                    l1442 3D28                                      l1267 08D0  
                                    l1259 06C0                                      l2251 5EEC  
                                    l2155 5DDE                                      l1443 3C7A  
                                    l2411 0152                                      l1291 6236  
                                    l1268 0914                                      l2412 01E2  
                                    l2420 01D0                                      l1700 3850  
                                    l1604 25E0                                      l1620 1BF8  
                                    l1285 0A48                                      l1277 0984  
                                    l1445 3CD8                                      l1621 1C08  
                                    l1382 4354                                      l2262 6696  
                                    l1286 0A50                                      l1278 09B0  
                                    l1446 3CEC                                      l2430 0304  
                                    l2414 01AE                                      l1702 38B4  
                                    l1606 2608                                      l1630 1CA4  
                                    l1622 1C10                                      l1294 6204  
                                    l1391 431E                                      l1383 42B6  
                                    l2263 6682                                      l2407 05D8  
                                    l2431 02C6                                      l2415 019C  
                                    l1703 387A                                      l1631 1CB0  
                                    l1623 1C26                                      l1615 1BDC  
                                    l1384 42D8                                      l2256 59DC  
                                    l1448 3D0A                                      l3152 3906  
                                    l2408 00E2                                      l1608 2644  
                                    l1640 1D2C                                      l1624 1C32  
                                    l1616 1BD2                                      l2512 69C6  
                                    l1393 433A                                      l2257 599C  
                                    l2249 5EF0                                      l3161 39CC  
                                    l3153 3900                                      l2425 0392  
                                    l1713 2FDC                                      l1633 1CC4  
                                    l1617 1BD0                                      l2513 69B8  
                                    l2601 2822                                      l1394 4346  
                                    l1386 42FA                                      l2098 2954  
                                    l1650 453E                                      l2426 0326  
                                    l1706 38F6                                      l1714 2FB6  
                                    l1626 1C5A                                      l2610 2758  
                                    l2602 26F2                                      l2099 2836  
                                    l3171 535C                                      l3155 3948  
                                    l2443 0424                                      l2427 02B4  
                                    l1707 38BC                                      l1643 62A0  
                                    l1811 375C                                      l2515 69C0  
                                    l3180 53C2                                      l3172 536C  
                                    l1652 459A                                      l2452 052A  
                                    l2428 0250                                      l1716 3054  
                                    l1644 62B0                                      l1740 2E32  
                                    l1812 3762                                      l1636 1CEA  
                                    l1628 1C6E                                      l2612 2786  
              USBConfigureEndpoint@handle 0083                                      l1389 4302  
                                    l3333 6A58                                      l2453 0576  
                                    l2445 0464                                      l2437 0402  
                                    l1717 303A                                      l1733 2E42  
                                    l1725 35C4                                      l1813 3768  
                                    l1629 1C7A                                      l2605 27F8  
                                    l3430 5E48                                      l3174 538A  
                                    l3158 3998                                      l2446 057E  
                                    l2438 03D2                                      l2470 10E4  
                                    l1902 47B0                                      l1830 1444  
                                    l1742 2E3A                                      l1734 2D3E  
                                    l1750 470E                                      l1814 377C  
                                    l1638 1D0E                                      l2614 27B6  
                                    l2606 2724                                      l3431 5E52  
                                    l2703 602C                                      l3175 5382  
                                    l3191 5614                                      l3159 395A  
                                    l3343 4888                                      l1903 474A  
                                    l1831 1446                                      l1751 4690  
                                    l1727 3638                                      l1815 3782  
                                    l2720 446C                                      l3192 561E  
                                    l3184 55DA                                      l1648 4514  
                                    l3440 6344                                      l2448 04BA  
                                    l2472 1100                                      l1840 1544  
                                    l1832 1462                                      l1736 2D52  
                                    l1752 4696                                      l1808 37E2  
                                    l1760 6288                                      l2616 27D2  
                                    l2705 6038                                      l2721 44AC  
                                    l3193 562C                                      l3185 55E6  
                                    l3441 634E                                      l3345 48C4  
                                    l2449 047E                                      l2481 1154  
                                    l1905 4762                                      l1841 15C0  
                                    l1825 1384                                      l1737 2DDA  
                                    l1753 46B6                                      l1817 3788  
                                    l1809 3752                                      l1673 4C0C  
                                    l1761 6286                                      l2609 2740  
                                    l3426 5E28                                      l2714 44D4  
                                    l2722 4496                                      l3178 53AA  
                                    l3346 4906                                      l1906 4770  
                                    l1834 14F0                                      l1826 138A  
                                    l1746 46F8                                      l1818 37A6  
                                    l3450 61A6                                      l3427 5E20  
                                    l2715 4442                                      l3179 53B4  
                                    l3187 55FC                                      l3339 62F6  
                                    l2467 1324                                      l2483 1294  
                                    l1667 3F0E                                      l1907 478E  
                                    l1739 2DE2                                      l1747 467E  
                                    l1819 37C2                                      l1675 4C26  
                                    l3451 6184                                      l2820 4F4A  
                                    l3188 55F4                                      l1924 4EB4  
                                    l3436 632C                                      l2468 10BE  
                                    l1908 47A6                                      l1844 1576  
                                    l1836 14B8                                      l1828 13FC  
                                    l1684 3232                                      l2492 6B96  
                                    l3373 53FC                                      l2821 4F0A  
                                    l2813 4ED0                                      l2805 5710  
                                    l2717 44F4                                      l2725 44B0  
                                    l3437 6324                                      l3613 1862  
                                    l2485 12FE                                      l2477 1114  
                                    l1837 14D6                                      l1685 31DA  
                                    l3374 53F0                                      l2822 4F28  
                                    l2582 3184                                      l2734 63D6  
                                    l2726 44BC                                      l2718 4450  
                                    l3630 1986                                      l3710 6BF0  
                                    l1846 15CC                                      l1774 4FD2  
                                    l2815 4F3C                                      l2671 50EA  
                                    l1927 4E62                                      l3623 18DE  
                                    l3615 187A                                      l2487 131E  
                                    l2479 1134                                      l1679 4D5C  
                                    l1839 1538                                      l1775 4FCC  
                                    l2495 6B90                                      l2816 4EDC  
                                    l2592 4CBA                                      l2680 50DE  
                                    l2672 5080                                      l1928 4E8E  
                                    l3632 19AC                                      l3624 18EE  
                                    l3456 6788                                      l1960 29EA  
                                    l1952 2992                                      l1768 65BC  
                                    l3377 5430                                      l2817 4EFC  
                                    l2593 4CF0                                      l1929 4E68  
                                    l3633 19E6                                      l3617 18CE  
                                    l3457 6776                                      l1793 43AA  
                                    l1785 5866                                      l1689 325C  
                                    l1769 65BA                                      l3378 543E  
                                    l2850 33E2                                      l2586 31AE  
                                    l2578 3148                                      l2690 5162  
                                    l2930 3AA8                                      l3626 1908  
                                    l3706 6584                                      l1970 2A9E  
                                    l1962 2A42                                      l1954 29A0  
                                    l1698 3846                                      l1794 43B0  
                                    l2851 340A                                      l2579 3144  
                                    l2931 3A0E                                      l3651 3672  
                                    l1971 2AA2                                      l1963 2A0A  
                                    l1795 442C                                      l1787 58B4  
                                    l2844 3470                                      l2756 4ADC  
                                    l2692 5198                                      l2940 3A80  
                                    l3660 36DA                                      l3652 366C  
                                    l1956 29D4                                      l1796 43F2  
                                    l2845 33B4                                      l2693 516A  
                                    l2677 5106                                      l2925 3A88  
                                    l3637 6C08                                      l3629 191A  
                                    l2790 45DA                                      l2862 3466  
                                    l2846 33DA                                      l2758 4B08  
                                    l2766 61CE                                      l2694 5176  
                                    l2678 50B2                                      l2918 6616  
                                    l2926 39EA                                      l3654 369A  
                                    l3582 5AB6                                      l1966 2A84  
                                    l1798 4412                                      l2791 45FA  
                                    l2759 4B18                                      l2767 61F4  
                                    l2687 5184                                      l2679 50C6  
                                    l2927 3A04                                      l3591 671E  
                                    l3663 3738                                      l3583 5AB0  
                                    l1967 2A4C                                      l1959 29E6  
                                    l2776 5948                                      l2856 341C  
              __size_of_Mdm_IsSmsReceived 0024                                      l2688 511C  
                                    l3592 6714                                      l1992 6938  
                              _Led1OutSts 01F8                                      l2849 348A  
                                    l2937 3A42                                      l3657 36FA  
                                    l3585 5AD0                                      l1993 6928  
                                    l2778 597A                                      l2794 466C  
                                    l2890 3B52                                      l2962 554A  
                                    l2938 3A5A                                      l3658 36B2  
                                    l3586 5AC6                                      l2779 5980  
                                    l2795 460A                                      l2787 45CE  
                                    l2883 3B6E                                      l2699 6ABC  
                                    l2963 550E                                      l3659 36CA  
                                    l1995 692E                                      l2884 3ADA  
                                    l2980 3D58                                      l2789 465E  
                                    l2797 4656                                      l2885 3B00  
                                    l2957 5536                                      l2965 552C  
                                    l3597 646C                                      l2958 54DE  
                                    l3694 68D0                                      l2982 3DA0  
                                    l3598 6466                                      l2895 3B66  
                                    l2959 5504                                      l2983 3D82  
                                    l2975 3D38                                      l2888 3B82  
                                    l2976 3D52                                      l2889 3B08  
                                    l3689 67C2                                      l2977 3DB4  
                                    l2986 3DD4                                      l3699 6A14  
                                    STR_1 FFE6                                      STR_2 FF75  
                                    STR_3 FFDF                                      STR_4 FFC2  
                                    STR_5 FFCE                                      STR_6 FFF0  
                                    STR_7 FFEB                                      STR_8 FE89  
                                    STR_9 FEBD                                _Led2OutSts 01F6  
                              _Led3OutSts 01F4                     ??_USBCtrlTrfTxService 007D  
                                    _UCFG 000F39                                      u9305 6110  
                                    u9306 6112                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u9275 60EA  
                                    _UEIE 000F37                                      u9276 60EC  
                                    u9285 60F6                  __size_of_Uart_Uart1RxIsr 0010  
                                    u9286 60F8                                      u9295 6104  
                                    u9296 6106                                      _UEIR 000F63  
                                    _UCON 000F65                                _AlarmEvent 01F3  
                          ?_StopCondition 0001                              _triggerRelay 6602  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 0314  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 6D94  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
            findEmptySpot@currentPosition 00E0    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D5                      _NewStringMdmTerminal 003A  
                                    _atoi 38FE                                      _main 6D34  
                         ??_Mdm_IsRinging 0081                                      _itoa 62D0  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 666E  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 030C                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 4880  
                                    _xtoi 365C                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 6D9C               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4FE4               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 645C  
                                    prodh 000FF4                                      prodl 000FF3  
         detectUsbNumber@isCmdSuccessfull 0099                                      start 00CC  
                     __end_of_Eeprom_Read 5DB4   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 6C24  
                           _isNumberValid 5922                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D          isNumberInMemory@positionInMemory 0102  
              __end_of_USBCheckStdRequest 3826                           _Rtcm_SystemDate 044A  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 6CC6  
       __size_of_GetLastInteractionNumber 000C                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
               ?_GetLastInteractionNumber 007D                            _GetElapsedTime 4124  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                   resCmdFsm@masterOpResult 0108  
            isNumberInMemory@currentState 00C5                       StringCopy@SourceStr 0085  
             __end_of_OsAlrm_ClearOsAlarm 5C62                  Eeprom_Write@SlaveAddress 0094  
                   addCmdFsm@currentState 01D6                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
              waitSetupCall@isCallArrived 0093                       __size_of_I2cDummyTx 001C  
                 __end_of_detectUsbNumber 63DC                          ??_Mdm_GetSmsData 0091  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 64D8                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAB                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DA  
                                   l13233 6776                                     l14123 6184  
                                   l12509 6AEE                                     l13271 3850  
                                   l13451 35BC                                     l14427 5940  
                                   l16135 09AA                                     l14289 3994  
                                   l14467 4B18                                     l14725 4FFE  
                                   l14911 25D8                                     l14851 66B6  
                                   l15651 339A                                     l16287 1CBC  
                                   l17281 5A42                                     l14939 263C  
                                   l17279 5A12                                     l15777 1D9E  
                                   l15799 1E58                                     l15969 0FB6  
                                   l16955 555A                                     l16967 2E64  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 53CC  
               delCmdFsm@isCmdSuccessfull 0109                                     STR_10 FF4B  
                                   STR_11 FF59                                     STR_12 FF9D  
                                   STR_20 FF3D                                     STR_13 FF67  
                                   STR_21 FE5F                                     STR_30 FEFA  
                                   STR_14 FEA8                                     STR_31 FFAA  
                                   STR_15 FEE6                                     STR_23 FED2  
                                   STR_24 FFF5                                     STR_32 FFD8  
                                   STR_16 FF1E                                     STR_25 FFF5  
                                   STR_17 FF83                                     STR_26 FE86  
                                   STR_18 FF90                                     STR_27 FF0D  
                                   STR_28 FFB6                           __end_of___awmod 5636  
                                   STR_29 FF2F                             _triggerCmdFsm 39D6  
       __size_of_USBCtrlEPServiceComplete 00FE                           __end_of___lldiv 5450  
                                   ?_utoa 008A                                     u12000 35F0  
                                   u12040 2DA4                                     u12050 2DD4  
                         ___awdiv@divisor 007F                                     u12070 2E26  
                                   u12047 2D9A                                     u12057 2DCA  
                                   u12410 6506                    __end_of_USBDeviceTasks 1D36  
                                   u12340 5E2C                                     u13300 186A  
                                   u12077 2E1C                                     ?_xtoi 0083  
                                   u13090 4E3E                                     u12370 6330  
                                   u13330 18A4                                     u11810 38A2  
                                   u12290 155A                                     u15005 6C34  
                                   u15006 6C38                                     u12710 68CC  
                                   u13350 18B4                                     u11830 38E4  
                                   u12800 6568                                     u11817 3898  
                                   u11690 605A                                     u11850 6388  
                                   u15050 20C8                                     u12730 67B2  
                                   u16010 2A74                                     u15131 1D50  
                                   u12900 2B44                                     u15220 1EAC  
                                   u12820 6574                                     u16020 2A8C  
                                   u15141 1D62                                     u11837 38DA  
                                   u12670 5400                                     u15070 20DC  
                                   u13630 5600                                     u15151 1D74  
                                   u10975 6892                                     u11880 59D4  
                                   u10976 6894                                     u16017 2A6A  
                                   u10985 689E                                     u13490 5984  
                                   u13570 538E                                     u14610 3DEC  
                                   u10986 68A0                 ?_USBCtrlEPServiceComplete 0001  
                                   u10995 68AA                                     u10996 68AC  
                                   u12845 6C8A                                     u13805 0AFA  
                                   u16061 5918                                     u12846 6C8C  
                                   u14630 3140                                     u14550 5AF8  
                                   u11887 59CA                                     u13815 0B1A  
                                   u12960 5EFC                                     u16320 3462  
                                   u13665 60AE                                     u13825 0BA4  
                                   u16330 3ABC                                     u14490 04C4  
                                   u13845 0C7E                                     u14557 5AEE  
                                   u16430 3A3E                                     u13950 25FC  
                                   u13855 0C9E                                     u13865 0D28  
                                   u13785 6C4A                                     u16601 529E  
                                   u14690 5090                                     u13786 6C4C  
                                   u16380 3B62                                     u13980 26A0  
                                   u15900 1D32                                     u16390 3A00  
                                   u14935 569A                                     u14945 6C9E  
                                   u14970 4994                                     u14946 6CA0  
                                   u14980 49AE                                     u16718 2F30  
                                   u16591 5286                                     u16719 2F5E  
                         __end_of___lwdiv 5E5C                                     u15990 2A32  
                                   u16678 5590                                     u16679 55BE  
                                   u15997 2A28                           __end_of___lwmod 6358  
               TurnOnModem@TurnOnMdmState 01F1                        ??_UpdateOsCounters 0019  
                                   i1l742 2458                                     i1l747 2594  
                                   i2l680 404C                                     i2l681 3F9C  
                                   i2l690 3FE6                                     i2l682 3FAA  
                                   i2l686 3FCC                                     i2l688 403E  
                                   i2l689 4006                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B7  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E3  
                                   _USTAT 000F64                   __end_of_LedStateMachine 4A7A  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 4C5A                             _StringCompare 5EAE  
                                   _sd000 FE5B                                     _sd001 FE14  
                                   _sd002 FDEE            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3EC6  
                             _ApnLenLocal 01EB                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 44FA  
                         __end_of_isalpha 67CC                           __end_of_isdigit 6A60  
               saveNumberInMemory@address 0098                                     atoi@a 0088  
                                   atoi@s 0083                    Eeprom_Write@DataLength 0091  
                             _ClearBuffer 666E                           __end_of_isspace 68D8  
             I2cSlv_QueryI2cData@RxBuffer 00A5                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 6A1C                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 6926  
               __end_of_Rtcc_GetRtccValue 5078               I2cSlv_QueryI2cData@TxBuffer 00A2  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 5782  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 5CB8                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                                     wtemp6 0043  
                         __end_of_sprintf 3DFA                           __end_of_tolower 6BF4  
                     __end_of_Mcu_Int0Isr 6DC4                       __end_of_Mcu_Int1Isr 6DC0  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 6C0C                      __end_of_Eeprom_Reset 5CB8  
                  __end_of_GetElapsedTime 41EC                     __end_of_UartSetConfig 5B5A  
                    __end_of_Eeprom_Write 5EAE                          delCmdFsm@smsText 0107  
                  __size_of_initGprsModem 0094                            ?_isNumberValid 007D  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 6BA8                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2D2C                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 6884  
                          _InitSchedTimer 67FC                           __initialization 22E4  
             __size_of_saveNumberInMemory 001A                          __end_of_MdmCntSm 49D2  
                    __end_of_I2c_ReadData 22E4                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 4378                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 26E8                              __end_of_atoi 39D6  
                            __end_of_main 6D40                       StringCompare@Result 0085  
                            __end_of_itoa 6314                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 02EE                              __end_of_utoa 492A  
                            __end_of_xtoi 3742                  __end_of_Rtcm_SetRtccDate 5D60  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 6D80              __size_of_I2cSlv_QueryI2cData 00D2  
                    Term_MainSm@TermDelay 03D1                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE49                 __size_of_USBCtrlEPService 0094  
                          ?_triggerCmdFsm 0105                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4E24  
                           ?_initPreamble 007D                                _ReceiveEvt 682A  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 6CE6                            ?_StringCompare 007D  
                        __end_of_Terminal 05F2                      initFsm@isInitialized 0105  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 5450                              _cdc_mem_type 01DC  
                      ??_Mcu_ConfigExtInt 007D                          addCmdFsm@smsText 0107  
                       CheckModem@Timeout 03F2                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00BC  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 405C  
              _Uart_MdmGsmGprsReadService 3F92                __end_of_UsbDevice_MainTask 694A  
                         getsUSBUSART@len 0086                      __end_of_getSetupCall 6AC2  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 6AE2  
                   addCmdFsm@searchNumber 010E                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
                             _Eeprom_Read 5D60        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1412 65FC  
                             _GenerateEvt 6C0C                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
                   triggerRelay@isRelayOn 0086                 Uart_Uart1RxIsr@UartRxData 002C  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC30  
                          _cmdVisualEffet 61BA                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                        ?_GetCallerNumber 0083                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F3  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 57EE  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 682A  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 6DB4                                _UartConfig 0324  
                    __end_of_Mdm_MainTask 5FA0                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CD                             ??_Term_MainSm 00A7  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 6248                                    _SmsLen 00D3  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 60DA  
                                  ___lmul 5B5A                      _I2cSlv_ReceiveI2cMsg 63DC  
                      TurnOnModem@Counter 0322                              ?_putUSBUSART 0083  
                                  ___wmul 68D8                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                        _Mdm_SetSmsFormat 5FA0                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 5DB4                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 4EBA                      ??_Mdm_RequestSmsData 0080  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                 isMasterNumber@phoneNumber 0100  
                       _USBEnableEndpoint 628C           __size_of_USBStdGetStatusHandler 00B2  
                        ?_detectUsbNumber 0099                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                       addCmdFsm@isComplete 010B  
                                  _memcpy 6172                    __size_of_HttpGetMethod 04D0  
                                  _memset 676C                                    clear_0 23A2  
                                  clear_1 23B4                                    clear_2 23C0  
                                  clear_3 23CC                                    clear_4 23D8  
                                  clear_5 23E4                                    clear_6 23F0  
                                  clear_7 23FC                                    clear_8 2408  
                                  clear_9 2414                         parseCommand@F9034 FC2A  
                       parseCommand@F9036 FC26                         parseCommand@F9038 FC22  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02DF  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01E8  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01EE                        ?_USBEnableEndpoint 0085  
            __size_of_triggerVisualEffect 000C                            ??_initPreamble 007F  
                                  _strcat 5AA6                                    _strcpy 670A  
                                  _strlen 645C                                    _strtol 1822  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 658E                  HttpGetMethod@UartMessage 0100  
                               ??_initFsm 00B0                             _initGprsModem 5078  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9111 03CD  
                     ModemEvtParser@F9113 03C8                       ModemEvtParser@F9115 03C3  
                     ModemEvtParser@F9117 04F6                              _CDCTxService 297C  
                     MdmCntSm@MdmCntState 002E                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC0E  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 04CA                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 6DAC  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 01FD  
                 __end_of_I2cSlv_MainTask 5D0C                           _InitGprsNetwork 0DCE  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 6DC0  
                             _Mcu_Int1Isr 6DBC                      ?_Led_SetLedBlinkTime 007D  
                      __size_of_addCmdFsm 00EE                                 ??_sprintf 0083  
                               ??_tolower 007D                         parseCommand@state 0094  
                  __size_of_ScheduleTasks 0126                   delCmdFsm@receivedNumber 0105  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A7                    __end_of_cmdVisualEffet 6202  
                    _controlTransferState 00CC                     __end_ofi1_GenerateEvt 6C66  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 52BA  
              __size_of_Rtcc_GetRtccValue 0094                             ?_parseCommand 0001  
                      _ExtInt1IsrCallback 02DD                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 2432  
                      Eeprom_Read@ReadSts 00AE                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                           ??_isNumberValid 007F  
                  __end_of_EnableReceiver 6DB8                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01FA                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 608C  
                        ??_isMasterNumber 00B0           I2cSlv_QueryI2cData@TimeoutTimer 0353  
                    Terminal@FormatOption 02E8                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 5988                            __pcstackBANK10 0A00  
                      __size_of_delCmdFsm 00D8                     I2cDummyTx@DummyBuffer 01FB  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D7  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02D9                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 62D0  
                             _InitNetwork 00D8                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5F  
                           __end_of_sd001 FE32                             __end_of_sd002 FE14  
                            __pidataBANK0 6DC4                              __pidataBANK1 6DC7  
                            __pidataBANK2 6D16                              __pidataBANK3 6516  
                            __pidataBANK4 6D58                              __pidataBANK5 5F00  
               __end_ofparseCommand@F9034 FC2E                 __end_ofparseCommand@F9036 FC2A  
               __end_ofparseCommand@F9038 FC26                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 6358  
                     __size_of_CheckModem 0160                           ??_triggerCmdFsm 00B0  
              __end_of_Uart_ClearRxBuffer 66D8             __size_of_USBConfigureEndpoint 0098  
             parseCommand@deleteNumberCmd 008C                   addCmdFsm@numberInMemory 010D  
                __size_of_InitializeTasks 0074                        __end_of_I2cDummyTx 6B74  
             __end_of_USBCtrlTrfInHandler 443A                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 007D                      StringCompare@String2 007F  
                      ??_UartSetConfigLow 007D                 __size_of_isNumberInMemory 00BA  
                     __end_of_Term_MainSm 1360                 initGprsModem@currentState 01D9  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 6C50  
                      __size_of_detectCmd 009C                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01E2  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 673C                                _cdc_notice 0440  
                   __end_of_Tmr_TmrBPrSet 33A0                     __end_of_waitSetupCall 603E  
                     __end_of_Rtcc_RtcIsr 6DBC                                _cdc_rx_len 00C9  
                       __end_of_MsgFormat FD22                                _cdc_tx_len 00C7  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 6602  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01DD  
                 resCmdFsm@receivedNumber 0103                            ClearBuffer@Len 007F  
                         _secondsAppTimer 4A7A          __end_of_GetLastInteractionNumber 6D58  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 6884  
                  _USBStdGetStatusHandler 4672                         __end_of_SendSmsSm 1BB0  
                   __size_of_Eeprom_Reset 0056       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01EA                            _Rtcc_RtcConfig 4B1C  
                   __size_of_Eeprom_Write 0052                                __pbssBANK0 00B0  
                              __pbssBANK1 01C9                            ??_parseCommand 0088  
                              __pbssBANK2 02C9                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                         ?_cmdVisualEffet 0001                             _HttpGetMethod 05F2  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 0572  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 6C7C  
             isNumberInMemory@phoneNumber 0100                  __end_of_Uart_WriteString 6516  
                 addCmdFsm@masterOpResult 010C              getSetupCall@isCalledReceived 0083  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 69B6                               _SetBaudRate 608C  
                           ?_savePreamble 0001                     __end_of_findEmptySpot 4F50  
               initGprsModem@modemCounter 03BF               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01EC                               _pBDTEntryIn 00B6  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 32B2  
                               ?_TmrBInit 007D                        __size_of_resCmdFsm 007E  
                           _CheckTxStatus 6D80                             ??_TurnOnModem 0080  
               addCmdFsm@isCmdSuccessfull 0109                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                 findEmptySpot@currentState 00C4  
                               ?_Terminal 0001                      Eeprom_Write@WriteSts 0092  
                                 ?___lmul 007D                              _Led_MainTask 3DFA  
                          _Rtcc_UnlockRtc 6CC6                              _I2cBusStatus 01E4  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2E5A                 Uart_InitUartModule@Module 00A1  
                   __end_of_I2c_WriteData 2026                         __end_of_addCmdFsm 348E  
               resCmdFsm@isCmdSuccessfull 0105                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE49  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4F50  
                   __end_of_UpdateSchFlag 6B58                              _EepromBuffer 04BB  
                              _ep_data_in 02D2                           _I2cWriteDataEvt 00D7  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10BC                                   ?_strcpy 007D  
                                 ?_strlen 007D                       _IsUsbNumberReceived 02ED  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 30A4                         __end_of_WriteByte 6D76  
                      _USBCheckStdRequest 3742                         _configDescriptor1 FDAB  
                            _Eeprom_Reset 5C62                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 0498                              _Eeprom_Write 5E5C  
                   __size_of_getSetupCall 0020               __end_of_USBCtrlTrfTxService 38FE  
                     _USBStdSetCfgHandler 3576                         __end_of_delCmdFsm 3B86  
                 __size_of_ConfigureModem 00D4                    I2cSlv_QueryI2cData@Ret 01E1  
               Eeprom_Write@MemoryAddress 0093                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 6858                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 4BBC  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 008F  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2186  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 42B4                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DB            __end_of_Pm_DsReleasePinControl 6DA2  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                          _blinkInSeconds 03FD                       __size_of_MyApp_Task 014C  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00DF  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 01F2  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01F9  
                     _I2cSlv_QueryI2cData 3C5A                                   _Led2Sts 01F7  
                                 _Led3Sts 01F5                __end_of_Sch_SchmIntService 6D34  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 008F  
                           _cdc_trf_state 00C8                                ??_ReadByte 007D  
                     resCmdFsm@isComplete 0107                            ??_savePreamble 0096  
                     _Uart_InitUartModule 0AC2                     __end_of_Mdm_DrvMainFn 6DA8  
                    __end_of_initPreamble 6B3C                    initEeprom@currentState 01D8  
                       __end_of_detectCmd 4CF6                          _ComChecCompleted 002B  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C9                     __end_of_Mdm_IsRinging 6992  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CC  
                   __size_of_getsUSBUSART 0096                               ?_StringCopy 0085  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 0039  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 5716                    __end_of_Rtcc_UnlockRtc 6CD6  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 6C90                                _initEeprom 510C  
                             _Term_MainSm 10BC   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD22                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 6B00                    ?_Uart_WriteConstString 0080  
                              _readBuffer 0339                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 6C3A  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 5346  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 55C4  
                                 ___lldiv 53CC                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                   triggerCmdFsm@isComplete 0107  
                                 ___lwdiv 5E08                         ??_USBStallHandler 007D  
                                 ___lwmod 6314                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                            _getSetupCall 6AA2                      ?_I2cSlv_QueryI2cData 00A2  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 6DB8  
                    __size_of_putUSBUSART 0022                                   __pcinit 22E4  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00CF                       __end_of_TurnOnModem 6172  
                         __size_of_memset 0030                   initEeprom@isInitialized 0102  
                               _I2cConfig 035E                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDEE                                   __ramtop 0F00  
              Mdm_GetSmsData@GetSmsStatus 0091                               Terminal@Len 03B3  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 6D34  
                                 __ptext1 673C                                   __ptext2 6D62  
                                 __ptext3 6D9C                                   __ptext4 6AE2  
                                 __ptext5 6B74                                   __ptext6 6884  
                                 __ptext7 67FC                                   __ptext8 405C  
                                 __ptext9 32B2                                   _inPipes 00B0  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 4B1C                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                                   _initFsm 443A  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 679C                                   _isdigit 6A3E  
          isNumberInMemory@memoryOpResult 0104                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 2420                                   clear_11 242C  
                        ___awmod@dividend 007D                         ??_InitializeTasks 05F4  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02E5  
     __end_of_Tmr_RegisterTmr2IsrCallback 6D6C               _Tmr_RegisterTmr2IsrCallback 6D62  
                                 _isspace 68AE                              _Mdm_MainTask 5F50  
                       __end_of_resCmdFsm 5550                                   _isupper 69FA  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                                   _smsText 0484  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 2440                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC30                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 6992                                   _sprintf 3D2C  
                                 _tolower 6BDC           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 6D06                          _HttpGetDataLocal 03A6  
                __end_of_Mdm_SetSmsFormat 5FF0                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 47D4                                   _toupper 6BF4  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 2432                              _getsUSBUSART 4E24  
                            ?_Eeprom_Read 00A9                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00D9               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F2             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC22       Irq_InitIntController@PerInt_LowPInt 007E  
               triggerCmdFsm@currentState 01D4                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC0E  
                          _ModemEvtParser 1D36                       _triggerVisualEffect 6D40  
                                 int_func 47D4                           _USB1msTickCount 0310  
         _dummy_encapsulated_cmd_response 037A                  _GetLastInteractionNumber 6D4C  
                               i1u1650_20 2456                                 i1u1654_28 2576  
                               i1u1654_29 258A                                 i1u1675_28 69A2  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
              __end_of_saveNumberInMemory 6BDC                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 6B1E                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15F4  
                       _Rtcc_SetRtcStatus 6C24                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 670A                             StringCopy@Len 0089  
                       ?_MdmHttp_MainTask 0001                  I2cSlv_QueryI2cData@RxLen 00A7  
                 _USBCtrlEPAllowDataStage 4BBC                        _UsbDevice_MainTask 6926  
                I2cSlv_QueryI2cData@TxLen 00A4                              _Mcu_ClearWdg 6DA8  
               Eeprom_Reset@memoryAddress 00C6                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 31B4  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01E5  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 2186  
                         _RtccIsrCallback 02E1          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F1             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                          _isNumberInMemory 45B8  
                    __end_of_parseCommand 31B4                _USBStatusStageEnabledFlag1 0028  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 69D8                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0300  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                    ?_triggerVisualEffect 0001                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                         _Mdm_HangPhoneCall 6CA2  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 6A82  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 0087  
                        __CFG_CPUDIV$OSC1 000000                        ?_Mdm_HangPhoneCall 0001  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02E3  
                        _HttpGetMethodSts 01E9                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                  isNumberValid@phoneNumber 007D  
                      _BothEP0OutUOWNsSet 01DE                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 0068                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0037                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 1EB8  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D5                     __end_of_StopCondition 6DB0  
                __size_of_HighPriorityIsr 4878                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 0371  
                               _Led2Blink 0368                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 04ED              __end_of_USBTransferOnePacket 45B8  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0395  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 1822                 __end_of_Rtcc_SetRtcStatus 6C3A  
                               _Led2Pulse 038F                                 _Led3Pulse 0389  
                       _I2cSlv_SendI2cMsg 649A           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                           ??_ScheduleTasks 05F4  
                          _Tmr_TmrBConfig 405C                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 6CA2                         _OsAlrm_SetOsAlarm 41EC  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 60DA  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 6126                                 _ClipEvent 00DC  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
           saveNumberInMemory@phoneNumber 0096                                 _GetMethod 01FC  
                  _USBCtrlTrfSetupHandler 52BA                        ?_OsAlrm_SetOsAlarm 0083  
                Eeprom_Reset@SlaveAddress 0085                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 26E8     __end_of_USBIncrement1msInternalTimers 69FA  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 69D8  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 5BB2  
                          _CheckAckStatus 6D8A                            __end_of___wmul 6900  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 6CB4  
                   ??_triggerVisualEffect 007D               triggerCmdFsm@numberInMemory 0108  
                  __size_of_UartWriteByte 0020                 triggerCmdFsm@searchNumber 010A  
                 addCmdFsm@receivedNumber 0105                             _secondCounter 0318  
                          __end_of_memcpy 61BA                        Terminal@PackageLen 02EA  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 679C  
                      _UartTxBufferStatus 603E                       ??_OsAlrm_SetOsAlarm 008B  
                    __end_of_savePreamble 6BC2                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01DF  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6D16  
                               _MdmStatus 00D1                            __end_of_strcat 5B02  
                          __end_of_strcpy 673C                            __end_of_strlen 649A  
                          __end_of_strtol 19F8                       start_initialization 22E4  
         isNumberInMemory@currentPosition 00E1                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3B86  
                        ??_cmdVisualEffet 0093                  __size_of_detectUsbNumber 0040  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 66A4  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4D8E                     __size_of_initPreamble 001E  
         __end_of_USBStdFeatureReqHandler 15F4                                 _MsgFormat FC32  
                      __end_of_MyApp_Task 2834                          _UpdateOsCounters 6CF6  
                         ?_ModemEvtParser 0001                             ?_triggerRelay 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3F92                 __end_of_I2cSlv_SendI2cMsg 64D8  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4FE4                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
             triggerCmdFsm@masterOpResult 0109                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 6CE6                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 4124  
                               _SendSmsSm 19F8                 __end_of_OsAlrm_SetOsAlarm 42B4  
                  __end_of_Tmr_TmrBIrqSet 6126                                 _TaskTable 05A4  
                               _RingEvent 00DD                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D4  
                   __end_of_isNumberValid 5988              isMasterNumber@memoryOpResult 0102  
                       __size_of_ReadByte 000A                                 _RtcConfig 03BB  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 5B02                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 6858                    _pBDTEntryEP0OutCurrent 00C0  
                           _Term_MainTask 6B8E                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 6D94                                  ??___lmul 0085  
                           _isxdigit$6774 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2D2C  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 54D2  
                      HttpGetMethod@Index 01C8                               __pdataBANK0 00E0  
                             __pdataBANK1 01FE                               __pdataBANK2 02F1  
                             __pdataBANK3 03C3                               __pdataBANK4 04F6  
                             __pdataBANK5 05A4                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 0522                                  ??_memcpy 0083  
                                ??_memset 0083                     detectCmd@currentState 0095  
                   __end_of_triggerCmdFsm 3AAE                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                 _addCmdFsm 33A0  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 5E08  
                  __end_of_ConfigureModem 3C5A                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D6            __end_of_USBStdGetStatusHandler 4724  
                            _initPreamble 6B1E                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC32                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 5F00  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00C2                             __pcstackBANK5 05F4  
                         RiSm@MdmDrvState 002F                              _SetAckStatus 6C7C  
                            _isalpha$6764 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 6D6C                       __size_of_initEeprom 0090  
                    ?_USBStdGetDscHandler 0001                              _isdigit$6498 007E  
           UpdateSchFlag@InterruptCounter 02D7                            ??_triggerRelay 0085  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 641C  
                               _delCmdFsm 3AAE       InitGprsNetwork@GprsNetInitNextState 002A  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 6AC2  
                             _ALRMRPTbits 000F90                MyApp_Task@isCmdSuccessfull 00E2  
              __end_of_USBWakeFromSuspend 65C8              __end_of_LedBlinkStateMachine 297C  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 6248                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 0306                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 6B74  
              __end_of_USBCheckCDCRequest 47D4              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5C0A                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 6AA2                              ??_StringCopy 008B  
                        _Led_SetLedStatus 67CC                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 6A60  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_parseCommand 0110                    __size_of_waitSetupCall 004E  
                               _detectCmd 4C5A                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008               findEmptySpot@memoryOpResult 0102  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC0E  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 5FA0  
                               __ptext101 510C                                 __ptext110 57EE  
                               __ptext102 639C                                 __ptext111 6D4C  
                               __ptext103 6D40                                 __ptext200 0000  
                               __ptext120 56A8                                 __ptext112 6638  
                               __ptext104 4C5A                                 __ptext121 4EBA  
                               __ptext113 3AAE                                 __ptext105 30A4  
                               __ptext130 5B02                                 __ptext122 5922  
                               __ptext114 61BA                                 __ptext106 6CE6  
                           Terminal@Index 00A6                                 __ptext131 6126  
                               __ptext123 5D60                                 __ptext115 4A7A  
                               __ptext107 694A                                 __ptext140 2AC2  
                               __ptext132 19F8                                 __ptext124 3C5A  
                               __ptext116 33A0                                 __ptext108 696E  
                               __ptext141 5B5A                                 __ptext133 641C  
                               __ptext125 5450                                 __ptext117 6BC2  
                               __ptext109 6CA2                                 __ptext150 6AC2  
                               __ptext142 5BB2                                 __ptext134 1D36  
                               __ptext126 649A                                 __ptext118 5E5C  
                               __ptext151 603E                                 __ptext143 2026  
                               __ptext135 66A4                                 __ptext127 63DC  
                               __ptext119 45B8                                 __ptext160 67CC  
                               __ptext152 5988                                 __ptext144 492A  
                               __ptext136 5EAE                                 __ptext128 6A60  
                               __ptext161 2834                                 __ptext153 5A48  
                               __ptext145 6D94                                 __ptext137 2BFA  
                               __ptext129 5DB4                                 __ptext170 682A  
                               __ptext162 5E08                                 __ptext154 519C  
                               __ptext146 0DCE                                 __ptext138 3B86  
                               __ptext171 1EB8                                 __ptext163 41EC  
                               __ptext155 4124                                 __ptext147 05F2  
                               __ptext139 0AC2                                 __ptext180 6D80  
                               __ptext172 2186                                 __ptext164 68D8  
                               __ptext156 6CB4                                 __ptext148 64D8  
                               __ptext181 6D8A                                 __ptext173 6D6C  
                               __ptext165 5636                                 __ptext157 666E  
                               __ptext149 6358                                 __ptext190 6B58  
                               __ptext174 6DAC                                 __ptext166 608C  
                               __ptext158 49D2                                 __ptext191 65C8  
                               __ptext183 6992                                 __ptext175 6DB0  
                               __ptext167 53CC                                 __ptext159 348E  
                               __ptext192 6C50                                 __ptext184 6D26  
                               __ptext176 6C7C                                 __ptext168 6858  
                               __ptext185 6B3C                                 __ptext177 6D76  
                               __ptext169 42B4                                 __ptext194 6D06  
                               __ptext186 6CF6                                 __ptext178 6C0C  
                               __ptext195 3F92                                 __ptext187 2440  
                               __ptext179 6DB4                                  ?___awmod 007D  
                      _Sch_SchmIntService 6D26                                 __ptext196 6C66  
                               __ptext188 6900                                 __ptext197 6DB8  
                               __ptext189 5C0A                                 __ptext198 6DBC  
                               __ptext199 6DC0                           _InitializeTasks 5550  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                 isNumberValid@isNumberOk 0080                   __size_of_isMasterNumber 006E  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 04E2  
                              ?_addCmdFsm 0105                   Eeprom_Write@WriteBuffer 008F  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 039B                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 44FA  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                                  ?_initFsm 0103  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 03A1            InitializeTasks@ActiveTaskIndex 02C8  
                  __size_of_findEmptySpot 0096                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 57EE  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02E7                ??_GetLastInteractionNumber 007F  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 58BC                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 58BC  
              ConfigureModem@DelayCounter 031E                        __end_of_StringCopy 59EA  
                             _ep_data_out 02CF                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DE  
                         Terminal@SwTimer 04D7                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054                            _setupCallTicks 03C1  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                ?_delCmdFsm 0105  
                       ?_Mdm_SetSmsFormat 0001                                 _resCmdFsm 54D2  
                          ?_UartWriteByte 007D                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 0320                          _OsTmr_StartTimer 5A48  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
                       ??_detectUsbNumber 009B                  __end_of_isNumberInMemory 4672  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 6C50                __end_of_Mcu_StartSystemPll 6B00  
                            _parseCommand 30A4                              _PhoneNumbLen 00D2  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 69B6  
                           _Rtcm_MainTask 522C                            ___wmul@product 0081  
                ModemEvtParser@ClipString 0099                          SendSmsSm@SwTimer 03E7  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 01F0  
         HttpGetMethod@GetMethodNextState 00D0                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 5636                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 676C                                  _RCONbits 000FD0  
                              ?_detectCmd 0001                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001                     __size_of_savePreamble 001A  
            __end_of_OsTmr_GetTimerStatus 522C                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A8  
                    _USBConfigureEndpoint 4CF6                     delCmdFsm@currentState 01D5  
                    _UsbMasterPhoneNumber 04AC          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 6BC2                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 2596                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 6900                     __end_of_initGprsModem 510C  
                     ??_I2c_InitI2cModule 00A4                            delCmdFsm@F9016 FC0F  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 6D9C  
                  __end_of_Mdm_GetSmsData 5856                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                   resCmdFsm@currentState 01D3                              _RemoteWakeup 01E0  
                                _ApnLocal 031C                            _StartCondition 6DB0  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01E6                             _Tmr_TmrBPrSet 32B2  
                           _waitSetupCall 5FF0                       ?_saveNumberInMemory 0096  
                       _NewStringReceived 003C                              _isspace$6767 007E  
                        _UartSetConfigLow 5BB2                                  _GetSmsSm 2BFA  
                 __end_of_USBStallHandler 628C                      Mdm_DrvMainFn@Options 0001  
                          _memoryPreamble 03AB                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03DC                                  _MdmCntSm 492A  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 22F8                                 copy_data1 2318  
                               copy_data2 2338                                 copy_data3 2370  
            __end_of_LedPulseStateMachine 3576                                ?_resCmdFsm 0103  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 365C                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 6D76  
                           i2_GenerateEvt 6C66                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                     cmdVisualEffet@seconds 0094  
                      __end_of_device_dsc FE5B                 __end_of_I2c_InitI2cModule 56A8  
                                _MsgReady FE32                           ??_Term_MainTask 00A7  
                            _savePreamble 6BA8                   __end_of_InitializeTasks 55C4  
              initGprsModem@isInitialized 0099                   ?_USBCtrlTrfSetupHandler 0001  
                          isNumberValid@i 0081                             _findEmptySpot 4EBA  
             __end_of_I2cSlv_QueryI2cData 3D2C                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 4D8E  
                    __size_of_SetBaudRate 004E                              ??_initEeprom 00B0  
                    ??_saveNumberInMemory 0098                              ?_TurnOnModem 0001  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0083  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081                   initFsm@isCmdSuccessfull 0103  
             __end_of_Uart_InitUartModule 0DCE                                  _SmsEvent 00DB  
                         _SetUartBaudRate 2AC2              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EB8                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 6D06  
                    __end_of_triggerRelay 6638                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02E9                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                  __end_ofdelCmdFsm@F9016 FC1C                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02EB  
                             ??_addCmdFsm 00B0                             _UpdateSchFlag 6B3C  
                     __end_of_putUSBUSART 6A3E                               _line_coding 0382  
                            _Rtcc_LockRtc 6CD6              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 2834               triggerCmdFsm@receivedNumber 0105  
                  __end_of_StartCondition 6DB4                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01ED  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 0088  
                         ?_Mdm_GetSmsData 008F                  I2c_WriteData@WriteStatus 0035  
                            _isupper$6770 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0033                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 00C0                            ?_waitSetupCall 0001  
                        ??_ModemEvtParser 008F                          _GetOsTickCounter 6CB4  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0186                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03AF                  ModemEvtParser@RingString 00A3  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 60DA  
                                __ptext11 6A82                                  __ptext20 6926  
                                __ptext12 4D8E                                  __ptext21 6202  
                                __ptext13 6B00                           ??_UartWriteByte 007E  
                                __ptext30 66D8                                  __ptext22 5F50  
                                __ptext14 2E5A                                  __ptext31 6248  
                                __ptext23 5CB8                                  __ptext15 5550  
                                __ptext40 3576                                  __ptext32 69D8  
                                __ptext24 6DA2                                  __ptext16 26E8  
                                __ptext41 4672                                  __ptext33 2596  
                                __ptext25 69B6                                  __ptext17 6B8E  
                                __ptext50 2F80                                  __ptext42 2D2C  
                                __ptext34 4F50                                  __ptext26 6C90  
                                __ptext18 522C                                  __ptext51 3EC6  
                                __ptext43 1360                                  __ptext35 6172  
                                __ptext27 6DA8                                  __ptext19 3DFA  
                                __ptext60 00D0                                  __ptext52 4378  
                                __ptext44 59EA                                  __ptext36 52BA  
                                __ptext28 1BB0                                  __ptext61 365C  
                                __ptext53 3826                                  __ptext45 4724  
                                __ptext37 31B4                                  __ptext29 658E  
                                __ptext70 6A1C                                  __ptext62 6BDC  
                                __ptext54 297C                                  __ptext46 5716  
                                __ptext38 4BBC                                  __ptext71 62D0  
                                __ptext63 6552                                  __ptext55 10BC  
                                __ptext47 628C                                  __ptext39 3742  
                                __ptext80 15F4                                  __ptext72 4880  
                                __ptext64 1822                                  __ptext56 645C  
                                __ptext48 4CF6                                  __ptext81 55C4  
                                __ptext73 6314                                  __ptext65 6BF4  
                                __ptext57 5AA6                                  __ptext49 5856  
                                __ptext90 39D6                                  __ptext82 5346  
                                __ptext74 4E24                                  __ptext66 68AE  
                                __ptext58 3D2C                                  __ptext91 6602  
                                __ptext83 6CD6                                  __ptext75 44FA  
                                __ptext67 679C                                  __ptext59 676C  
                                __ptext92 54D2                                  __ptext84 58BC  
                                __ptext76 38FE                                  __ptext68 69FA  
                                __ptext93 5C62                                  __ptext85 4FE4  
                                __ptext77 6A3E                                  __ptext69 670A  
                                __ptext94 443A                                  __ptext86 6C24  
                                __ptext78 5D0C                                  __ptext95 5FF0  
                                __ptext87 4B1C                                  __ptext79 6CC6  
                                __ptext96 6AA2                                  __ptext88 6C3A  
                                __ptext97 6BA8                                  __ptext89 5782  
                                __ptext98 6B1E                                  __ptext99 5078  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 6B58                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 519C                     __end_of_HttpGetMethod 0AC2  
                    delCmdFsm@emptyNumber 010B                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                               ??_delCmdFsm 00B0  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                           triggerRelay@res 0085  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 0030  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                   delCmdFsm@searchNumber 011B                         _Mdm_IsSmsReceived 694A  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 5346  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 008F  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                          ?_findEmptySpot 0100                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 6D8A                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 6DA2                        ??_USBCtrlEPService 0097  
                                _isxdigit 6552                             _Mdm_IsRinging 696E  
                     _USBCtrlTrfInHandler 4378                  I2c_ReadData@I2cReadState 0034  
             __end_of_triggerVisualEffect 6D4C                __end_of_Mdm_RequestSmsData 6CF6  
          cmdVisualEffet@isCmdSuccessfull 0093                               ??_detectCmd 0095  
                   __end_of_ScheduleTasks 2F80                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 5856                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 008D  
               _USBCtrlEPAllowStatusStage 3EC6                       ??_Mdm_IsSmsReceived 0081  
                          _receivedNumber 0346                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 02C8                                strtol@sign 0093  
                         Term_MainSm@Data 0452                       delCmdFsm@isComplete 0118  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            _isMasterNumber 56A8  
                             _relayBuffer 02FE                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 65C8  
                __end_of_Mcu_ConfigExtInt 6B8E                             ?_Eeprom_Reset 0001  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00CA  
                CDCTxService@byte_to_send 0085                             ?_Eeprom_Write 008F  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 6A82                  __end_of_Led_SetLedStatus 67FC  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 5D0C  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 696E  
                             ??_resCmdFsm 00B0                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      parseCommand@resetCmd 0090  
                    _OsTmr_GetTimerStatus 519C                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0152   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5A48  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 59EA  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2BFA                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 007F                            ?_Mdm_IsRinging 0001  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
                  MyApp_Task@currentState 01DA            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 009E                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 639C                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 6638  
                __end_of_Rtcm_GetRtccDate 5922                               _putUSBUSART 6A1C  
               Eeprom_Write@CommandLength 0095                       _USBCtrlTrfRxService 2F80  
                  __end_of_isMasterNumber 5716                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 658E  
                           ?_getSetupCall 0001                   _USBStdFeatureReqHandler 1360  
                __end_of_OsTmr_StartTimer 5AA6                      _LedPulseStateMachine 348E  
                      _USBCheckCDCRequest 4724                       _USBCtrlTrfTxService 3826  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                          ??_Eeprom_Reset 0085                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                             _isMemoryEmpty 01FE  
                          ??_Eeprom_Write 0092                          _Rtcc_AlarmConfig 5782  
        detectUsbNumber@isActionPerformed 009B                           ??_Tmr_TmrBPrSet 009A  
                         ??_waitSetupCall 0093                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001                           _detectUsbNumber 639C  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 02EC                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02EF                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 6202                    __size_of_isNumberValid 0066  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 68AE                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                   delCmdFsm@numberInMemory 011A  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00CB  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 49D2  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                           ??_findEmptySpot 00B0  
                           _StopCondition 6DAC                     ??i1_I2cSlv_SendI2cMsg 0020  
                       ?_isNumberInMemory 0100                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 0029                          Mdm_IsRinging@Ret 0081  
                  __size_of_triggerCmdFsm 00D8                   __size_of_cmdVisualEffet 0048  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 66A4  
                    __end_of_CDCTxService 2AC2                        ??_isNumberInMemory 00B0  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC2E                     __size_of_triggerRelay 0036  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01EF                   _UsbMasterPhoneNumberLen 031A  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 6C90  
